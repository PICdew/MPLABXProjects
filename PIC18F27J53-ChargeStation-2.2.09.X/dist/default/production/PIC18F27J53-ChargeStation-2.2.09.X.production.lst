

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 14:09:27 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155                           	dabs	1,0xD00,48,_BDT
   156                           	dabs	1,0xD38,8,_CtrlTrfData
   157                           	dabs	1,0xD30,8,_SetupPkt
   158  0000                     
   159                           	psect	idataBANK1
   160  016CAC                     __pidataBANK1:
   161                           	opt stack 0
   162                           
   163                           ;initializer for I2C_LCD_SetCursor@F8620
   164  016CAC  00                 	db	0
   165  016CAD  40                 	db	64
   166                           
   167                           ;initializer for epoch_to_caltime@month_cache
   168  016CAE  01                 	db	1
   169                           
   170                           	psect	mediumconst
   171  00FA50                     __pmediumconst:
   172                           	opt stack 0
   173  00FA50  00                 	db	0
   174  00FA51                     _dpowers:
   175                           	opt stack 0
   176  00FA51  0001               	dw	1
   177  00FA53  0000               	dw	0
   178  00FA55  000A               	dw	10
   179  00FA57  0000               	dw	0
   180  00FA59  0064               	dw	100
   181  00FA5B  0000               	dw	0
   182  00FA5D  03E8               	dw	1000
   183  00FA5F  0000               	dw	0
   184  00FA61  2710               	dw	10000
   185  00FA63  0000               	dw	0
   186  00FA65  86A0               	dw	34464
   187  00FA67  0001               	dw	1
   188  00FA69  4240               	dw	16960
   189  00FA6B  000F               	dw	15
   190  00FA6D  9680               	dw	38528
   191  00FA6F  0098               	dw	152
   192  00FA71  E100               	dw	57600
   193  00FA73  05F5               	dw	1525
   194  00FA75  CA00               	dw	51712
   195  00FA77  3B9A               	dw	15258
   196  00FA79                     __end_of_dpowers:
   197                           	opt stack 0
   198  00FA79                     _USB_SD_Ptr:
   199                           	opt stack 0
   200  00FA79  E2                 	db	low _sd000
   201  00FA7A  FB                 	db	high _sd000
   202  00FA7B  3C                 	db	low _sd001
   203  00FA7C  FB                 	db	high _sd001
   204  00FA7D  70                 	db	low _sd002
   205  00FA7E  FB                 	db	high _sd002
   206  00FA7F                     __end_of_USB_SD_Ptr:
   207                           	opt stack 0
   208  00FA7F                     _USB_CD_Ptr:
   209                           	opt stack 0
   210  00FA7F  F9                 	db	low _configDescriptor1
   211  00FA80  FA                 	db	high _configDescriptor1
   212  00FA81                     __end_of_USB_CD_Ptr:
   213                           	opt stack 0
   214  00FA81                     display_LCD@port_char:
   215                           	opt stack 0
   216  00FA81  4C                 	db	76
   217  00FA82  45                 	db	69
   218  00FA83  46                 	db	70
   219  00FA84  54                 	db	84
   220  00FA85  20                 	db	32
   221  00FA86  20                 	db	32
   222  00FA87  20                 	db	32
   223  00FA88  50                 	db	80
   224  00FA89  4F                 	db	79
   225  00FA8A  52                 	db	82
   226  00FA8B  54                 	db	84
   227  00FA8C  00                 	db	0
   228  00FA8D  00                 	db	0
   229  00FA8E  00                 	db	0
   230  00FA8F  00                 	db	0
   231  00FA90  00                 	db	0
   232  00FA91  00                 	db	0
   233  00FA92  00                 	db	0
   234  00FA93  00                 	db	0
   235  00FA94  00                 	db	0
   236  00FA95  43                 	db	67
   237  00FA96  45                 	db	69
   238  00FA97  4E                 	db	78
   239  00FA98  54                 	db	84
   240  00FA99  45                 	db	69
   241  00FA9A  52                 	db	82
   242  00FA9B  20                 	db	32
   243  00FA9C  50                 	db	80
   244  00FA9D  4F                 	db	79
   245  00FA9E  52                 	db	82
   246  00FA9F  54                 	db	84
   247  00FAA0  00                 	db	0
   248  00FAA1  00                 	db	0
   249  00FAA2  00                 	db	0
   250  00FAA3  00                 	db	0
   251  00FAA4  00                 	db	0
   252  00FAA5  00                 	db	0
   253  00FAA6  00                 	db	0
   254  00FAA7  00                 	db	0
   255  00FAA8  00                 	db	0
   256  00FAA9  52                 	db	82
   257  00FAAA  49                 	db	73
   258  00FAAB  47                 	db	71
   259  00FAAC  48                 	db	72
   260  00FAAD  54                 	db	84
   261  00FAAE  20                 	db	32
   262  00FAAF  20                 	db	32
   263  00FAB0  50                 	db	80
   264  00FAB1  4F                 	db	79
   265  00FAB2  52                 	db	82
   266  00FAB3  54                 	db	84
   267  00FAB4  00                 	db	0
   268  00FAB5  00                 	db	0
   269  00FAB6  00                 	db	0
   270  00FAB7  00                 	db	0
   271  00FAB8  00                 	db	0
   272  00FAB9  00                 	db	0
   273  00FABA  00                 	db	0
   274  00FABB  00                 	db	0
   275  00FABC  00                 	db	0
   276  00FABD  4C                 	db	76
   277  00FABE  65                 	db	101
   278  00FABF  66                 	db	102
   279  00FAC0  74                 	db	116
   280  00FAC1  20                 	db	32
   281  00FAC2  20                 	db	32
   282  00FAC3  20                 	db	32
   283  00FAC4  50                 	db	80
   284  00FAC5  6F                 	db	111
   285  00FAC6  72                 	db	114
   286  00FAC7  74                 	db	116
   287  00FAC8  00                 	db	0
   288  00FAC9  00                 	db	0
   289  00FACA  00                 	db	0
   290  00FACB  00                 	db	0
   291  00FACC  00                 	db	0
   292  00FACD  00                 	db	0
   293  00FACE  00                 	db	0
   294  00FACF  00                 	db	0
   295  00FAD0  00                 	db	0
   296  00FAD1  43                 	db	67
   297  00FAD2  65                 	db	101
   298  00FAD3  6E                 	db	110
   299  00FAD4  74                 	db	116
   300  00FAD5  65                 	db	101
   301  00FAD6  72                 	db	114
   302  00FAD7  20                 	db	32
   303  00FAD8  50                 	db	80
   304  00FAD9  6F                 	db	111
   305  00FADA  72                 	db	114
   306  00FADB  74                 	db	116
   307  00FADC  00                 	db	0
   308  00FADD  00                 	db	0
   309  00FADE  00                 	db	0
   310  00FADF  00                 	db	0
   311  00FAE0  00                 	db	0
   312  00FAE1  00                 	db	0
   313  00FAE2  00                 	db	0
   314  00FAE3  00                 	db	0
   315  00FAE4  00                 	db	0
   316  00FAE5  52                 	db	82
   317  00FAE6  69                 	db	105
   318  00FAE7  67                 	db	103
   319  00FAE8  68                 	db	104
   320  00FAE9  74                 	db	116
   321  00FAEA  20                 	db	32
   322  00FAEB  20                 	db	32
   323  00FAEC  50                 	db	80
   324  00FAED  6F                 	db	111
   325  00FAEE  72                 	db	114
   326  00FAEF  74                 	db	116
   327  00FAF0  00                 	db	0
   328  00FAF1  00                 	db	0
   329  00FAF2  00                 	db	0
   330  00FAF3  00                 	db	0
   331  00FAF4  00                 	db	0
   332  00FAF5  00                 	db	0
   333  00FAF6  00                 	db	0
   334  00FAF7  00                 	db	0
   335  00FAF8  00                 	db	0
   336  00FAF9                     __end_ofdisplay_LCD@port_char:
   337                           	opt stack 0
   338  00FAF9                     _configDescriptor1:
   339                           	opt stack 0
   340  00FAF9  09                 	db	9
   341  00FAFA  02                 	db	2
   342  00FAFB  43                 	db	67
   343  00FAFC  00                 	db	0
   344  00FAFD  02                 	db	2
   345  00FAFE  01                 	db	1
   346  00FAFF  00                 	db	0
   347  00FB00  C0                 	db	192
   348  00FB01  32                 	db	50
   349  00FB02  09                 	db	9
   350  00FB03  04                 	db	4
   351  00FB04  00                 	db	0
   352  00FB05  00                 	db	0
   353  00FB06  01                 	db	1
   354  00FB07  02                 	db	2
   355  00FB08  02                 	db	2
   356  00FB09  01                 	db	1
   357  00FB0A  00                 	db	0
   358  00FB0B  05                 	db	5
   359  00FB0C  24                 	db	36
   360  00FB0D  00                 	db	0
   361  00FB0E  10                 	db	16
   362  00FB0F  01                 	db	1
   363  00FB10  04                 	db	4
   364  00FB11  24                 	db	36
   365  00FB12  02                 	db	2
   366  00FB13  02                 	db	2
   367  00FB14  05                 	db	5
   368  00FB15  24                 	db	36
   369  00FB16  06                 	db	6
   370  00FB17  00                 	db	0
   371  00FB18  01                 	db	1
   372  00FB19  05                 	db	5
   373  00FB1A  24                 	db	36
   374  00FB1B  01                 	db	1
   375  00FB1C  00                 	db	0
   376  00FB1D  01                 	db	1
   377  00FB1E  07                 	db	7
   378  00FB1F  05                 	db	5
   379  00FB20  81                 	db	129
   380  00FB21  03                 	db	3
   381  00FB22  08                 	db	8
   382  00FB23  00                 	db	0
   383  00FB24  02                 	db	2
   384  00FB25  09                 	db	9
   385  00FB26  04                 	db	4
   386  00FB27  01                 	db	1
   387  00FB28  00                 	db	0
   388  00FB29  02                 	db	2
   389  00FB2A  0A                 	db	10
   390  00FB2B  00                 	db	0
   391  00FB2C  00                 	db	0
   392  00FB2D  00                 	db	0
   393  00FB2E  07                 	db	7
   394  00FB2F  05                 	db	5
   395  00FB30  02                 	db	2
   396  00FB31  02                 	db	2
   397  00FB32  40                 	db	64
   398  00FB33  00                 	db	0
   399  00FB34  00                 	db	0
   400  00FB35  07                 	db	7
   401  00FB36  05                 	db	5
   402  00FB37  82                 	db	130
   403  00FB38  02                 	db	2
   404  00FB39  40                 	db	64
   405  00FB3A  00                 	db	0
   406  00FB3B  00                 	db	0
   407  00FB3C                     __end_of_configDescriptor1:
   408                           	opt stack 0
   409  00FB3C                     _sd001:
   410                           	opt stack 0
   411  00FB3C  34                 	db	52
   412  00FB3D  03                 	db	3
   413  00FB3E  004D               	dw	77
   414  00FB40  0069               	dw	105
   415  00FB42  0063               	dw	99
   416  00FB44  0072               	dw	114
   417  00FB46  006F               	dw	111
   418  00FB48  0063               	dw	99
   419  00FB4A  0068               	dw	104
   420  00FB4C  0069               	dw	105
   421  00FB4E  0070               	dw	112
   422  00FB50  0020               	dw	32
   423  00FB52  0054               	dw	84
   424  00FB54  0065               	dw	101
   425  00FB56  0063               	dw	99
   426  00FB58  0068               	dw	104
   427  00FB5A  006E               	dw	110
   428  00FB5C  006F               	dw	111
   429  00FB5E  006C               	dw	108
   430  00FB60  006F               	dw	111
   431  00FB62  0067               	dw	103
   432  00FB64  0079               	dw	121
   433  00FB66  0020               	dw	32
   434  00FB68  0049               	dw	73
   435  00FB6A  006E               	dw	110
   436  00FB6C  0063               	dw	99
   437  00FB6E  002E               	dw	46
   438  00FB70                     __end_of_sd001:
   439                           	opt stack 0
   440  00FB70                     _sd002:
   441                           	opt stack 0
   442  00FB70  34                 	db	52
   443  00FB71  03                 	db	3
   444  00FB72  0043               	dw	67
   445  00FB74  0044               	dw	68
   446  00FB76  0043               	dw	67
   447  00FB78  0020               	dw	32
   448  00FB7A  0052               	dw	82
   449  00FB7C  0053               	dw	83
   450  00FB7E  002D               	dw	45
   451  00FB80  0032               	dw	50
   452  00FB82  0033               	dw	51
   453  00FB84  0032               	dw	50
   454  00FB86  0020               	dw	32
   455  00FB88  0045               	dw	69
   456  00FB8A  006D               	dw	109
   457  00FB8C  0075               	dw	117
   458  00FB8E  006C               	dw	108
   459  00FB90  0061               	dw	97
   460  00FB92  0074               	dw	116
   461  00FB94  0069               	dw	105
   462  00FB96  006F               	dw	111
   463  00FB98  006E               	dw	110
   464  00FB9A  0020               	dw	32
   465  00FB9C  0044               	dw	68
   466  00FB9E  0065               	dw	101
   467  00FBA0  006D               	dw	109
   468  00FBA2  006F               	dw	111
   469  00FBA4                     __end_of_sd002:
   470                           	opt stack 0
   471  00FBA4                     _weekday_3char:
   472                           	opt stack 0
   473  00FBA4  53                 	db	83
   474  00FBA5  55                 	db	85
   475  00FBA6  4E                 	db	78
   476  00FBA7  00                 	db	0
   477  00FBA8  4D                 	db	77
   478  00FBA9  4F                 	db	79
   479  00FBAA  4E                 	db	78
   480  00FBAB  00                 	db	0
   481  00FBAC  54                 	db	84
   482  00FBAD  55                 	db	85
   483  00FBAE  45                 	db	69
   484  00FBAF  00                 	db	0
   485  00FBB0  57                 	db	87
   486  00FBB1  45                 	db	69
   487  00FBB2  44                 	db	68
   488  00FBB3  00                 	db	0
   489  00FBB4  54                 	db	84
   490  00FBB5  48                 	db	72
   491  00FBB6  55                 	db	85
   492  00FBB7  00                 	db	0
   493  00FBB8  46                 	db	70
   494  00FBB9  52                 	db	82
   495  00FBBA  49                 	db	73
   496  00FBBB  00                 	db	0
   497  00FBBC  53                 	db	83
   498  00FBBD  41                 	db	65
   499  00FBBE  54                 	db	84
   500  00FBBF  00                 	db	0
   501  00FBC0                     __end_of_weekday_3char:
   502                           	opt stack 0
   503  00FBC0                     _device_dsc:
   504                           	opt stack 0
   505  00FBC0  12                 	db	18
   506  00FBC1  01                 	db	1
   507  00FBC2  0200               	dw	512
   508  00FBC4  02                 	db	2
   509  00FBC5  00                 	db	0
   510  00FBC6  00                 	db	0
   511  00FBC7  08                 	db	8
   512  00FBC8  04D8               	dw	1240
   513  00FBCA  000A               	dw	10
   514  00FBCC  0100               	dw	256
   515  00FBCE  01                 	db	1
   516  00FBCF  02                 	db	2
   517  00FBD0  00                 	db	0
   518  00FBD1  01                 	db	1
   519  00FBD2                     __end_of_device_dsc:
   520                           	opt stack 0
   521  00FBD2                     display_LCD@onoff:
   522                           	opt stack 0
   523  00FBD2  20                 	db	32
   524  00FBD3  4F                 	db	79
   525  00FBD4  46                 	db	70
   526  00FBD5  46                 	db	70
   527  00FBD6  00                 	db	0
   528  00FBD7  20                 	db	32
   529  00FBD8  4F                 	db	79
   530  00FBD9  4E                 	db	78
   531  00FBDA  20                 	db	32
   532  00FBDB  00                 	db	0
   533  00FBDC                     __end_ofdisplay_LCD@onoff:
   534                           	opt stack 0
   535  00FBDC                     data_out@p:
   536                           	opt stack 0
   537  00FBDC  4C                 	db	76
   538  00FBDD  00                 	db	0
   539  00FBDE  43                 	db	67
   540  00FBDF  00                 	db	0
   541  00FBE0  52                 	db	82
   542  00FBE1  00                 	db	0
   543  00FBE2                     __end_ofdata_out@p:
   544                           	opt stack 0
   545  00FBE2                     _sd000:
   546                           	opt stack 0
   547  00FBE2  04                 	db	4
   548  00FBE3  03                 	db	3
   549  00FBE4  0409               	dw	1033
   550  00FBE6                     __end_of_sd000:
   551                           	opt stack 0
   552  0000                     _ANCON0	set	3912
   553  0000                     _ANCON1	set	3913
   554  0000                     _PADCFG1bits	set	3900
   555  0000                     _RTCCAL	set	3902
   556  0000                     _RTCCFGbits	set	3903
   557  0000                     _RTCVALH	set	3899
   558  0000                     _RTCVALL	set	3898
   559  0000                     _T5CONbits	set	3874
   560  0000                     _UADDR	set	3896
   561  0000                     _UCFG	set	3897
   562  0000                     _UEIE	set	3895
   563  0000                     _UEP0bits	set	3878
   564  0000                     _UIE	set	3894
   565  0000                     _UIEbits	set	3894
   566  0000                     _UEP0	set	3878
   567  0000                     _UEP1	set	3879
   568  0000                     _ADRES	set	4035
   569  0000                     _ADCON0bits	set	4034
   570  0000                     _ADCON1bits	set	4033
   571  0000                     _BAUDCON1bits	set	3966
   572  0000                     _CTMUCONH	set	4019
   573  0000                     _CTMUCONHbits	set	4019
   574  0000                     _CTMUCONL	set	4018
   575  0000                     _CTMUCONLbits	set	4018
   576  0000                     _CTMUICON	set	4017
   577  0000                     _EECON2	set	4007
   578  0000                     _INTCON2bits	set	4081
   579  0000                     _INTCONbits	set	4082
   580  0000                     _IPR1bits	set	3999
   581  0000                     _IPR2bits	set	4002
   582  0000                     _IPR5bits	set	3993
   583  0000                     _OSCCONbits	set	4051
   584  0000                     _OSCTUNEbits	set	3995
   585  0000                     _PIE1bits	set	3997
   586  0000                     _PIE2bits	set	4000
   587  0000                     _PIE5bits	set	3985
   588  0000                     _PIR1bits	set	3998
   589  0000                     _PIR2bits	set	4001
   590  0000                     _PIR5bits	set	3992
   591  0000                     _RCONbits	set	4048
   592  0000                     _RCREG1	set	4015
   593  0000                     _RCSTA1bits	set	4012
   594  0000                     _SPBRG1	set	4016
   595  0000                     _SPBRGH1	set	3967
   596  0000                     _SSP1ADD	set	4040
   597  0000                     _SSP1BUF	set	4041
   598  0000                     _SSP1CON1	set	4038
   599  0000                     _SSP1CON1bits	set	4038
   600  0000                     _SSP1CON2	set	4037
   601  0000                     _SSP1CON2bits	set	4037
   602  0000                     _SSP1STAT	set	4039
   603  0000                     _SSP1STATbits	set	4039
   604  0000                     _T0CONbits	set	4053
   605  0000                     _T1CONbits	set	4045
   606  0000                     _T3CONbits	set	3961
   607  0000                     _TMR1H	set	4047
   608  0000                     _TRISA	set	3986
   609  0000                     _TRISB	set	3987
   610  0000                     _TRISC	set	3988
   611  0000                     _TXREG1	set	4014
   612  0000                     _TXSTA1bits	set	4013
   613  0000                     _UCON	set	3941
   614  0000                     _UCONbits	set	3941
   615  0000                     _UEIR	set	3939
   616  0000                     _UIR	set	3938
   617  0000                     _UIRbits	set	3938
   618  0000                     _USTAT	set	3940
   619  0000                     _BCL1IF	set	32011
   620  0000                     _LATA5	set	31821
   621  0000                     _LATA6	set	31822
   622  0000                     _LATA7	set	31823
   623  0000                     _LATB2	set	31826
   624  0000                     _LATB6	set	31830
   625  0000                     _LATB7	set	31831
   626  0000                     _LATC2	set	31834
   627  0000                     _SSP1IF	set	31987
   628  00FBE6                     STR_13:
   629  00FBE6  09                 	db	9
   630  00FBE7  2A                 	db	42
   631  00FBE8  2A                 	db	42
   632  00FBE9  2A                 	db	42
   633  00FBEA  2A                 	db	42
   634  00FBEB  2A                 	db	42
   635  00FBEC  2A                 	db	42
   636  00FBED  2A                 	db	42
   637  00FBEE  2A                 	db	42
   638  00FBEF  2A                 	db	42
   639  00FBF0  2A                 	db	42
   640  00FBF1  2A                 	db	42
   641  00FBF2  2A                 	db	42
   642  00FBF3  2A                 	db	42
   643  00FBF4  2A                 	db	42
   644  00FBF5  2A                 	db	42
   645  00FBF6  2A                 	db	42
   646  00FBF7  2A                 	db	42
   647  00FBF8  2A                 	db	42
   648  00FBF9  2A                 	db	42
   649  00FBFA  2A                 	db	42
   650  00FBFB  2A                 	db	42
   651  00FBFC  2A                 	db	42
   652  00FBFD  2A                 	db	42
   653  00FBFE  2A                 	db	42
   654  00FBFF  2A                 	db	42
   655  00FC00  2A                 	db	42
   656  00FC01  2A                 	db	42
   657  00FC02  2A                 	db	42
   658  00FC03  2A                 	db	42
   659  00FC04  0A                 	db	10
   660  00FC05  09                 	db	9
   661  00FC06  2A                 	db	42
   662  00FC07  2A                 	db	42
   663  00FC08  2A                 	db	42
   664  00FC09  2A                 	db	42
   665  00FC0A  20                 	db	32
   666  00FC0B  43                 	db	67	;'C'
   667  00FC0C  68                 	db	104	;'h'
   668  00FC0D  61                 	db	97	;'a'
   669  00FC0E  72                 	db	114	;'r'
   670  00FC0F  67                 	db	103	;'g'
   671  00FC10  65                 	db	101	;'e'
   672  00FC11  20                 	db	32
   673  00FC12  53                 	db	83	;'S'
   674  00FC13  74                 	db	116	;'t'
   675  00FC14  61                 	db	97	;'a'
   676  00FC15  74                 	db	116	;'t'
   677  00FC16  69                 	db	105	;'i'
   678  00FC17  6F                 	db	111	;'o'
   679  00FC18  6E                 	db	110	;'n'
   680  00FC19  20                 	db	32
   681  00FC1A  36                 	db	54	;'6'
   682  00FC1B  2E                 	db	46
   683  00FC1C  31                 	db	49	;'1'
   684  00FC1D  32                 	db	50	;'2'
   685  00FC1E  20                 	db	32
   686  00FC1F  2A                 	db	42
   687  00FC20  2A                 	db	42
   688  00FC21  2A                 	db	42
   689  00FC22  2A                 	db	42
   690  00FC23  0A                 	db	10
   691  00FC24  09                 	db	9
   692  00FC25  2A                 	db	42
   693  00FC26  2A                 	db	42
   694  00FC27  2A                 	db	42
   695  00FC28  2A                 	db	42
   696  00FC29  20                 	db	32
   697  00FC2A  4D                 	db	77	;'M'
   698  00FC2B  61                 	db	97	;'a'
   699  00FC2C  64                 	db	100	;'d'
   700  00FC2D  65                 	db	101	;'e'
   701  00FC2E  20                 	db	32
   702  00FC2F  62                 	db	98	;'b'
   703  00FC30  79                 	db	121	;'y'
   704  00FC31  20                 	db	32
   705  00FC32  40                 	db	64	;'@'
   706  00FC33  52                 	db	82	;'R'
   707  00FC34  79                 	db	121	;'y'
   708  00FC35  6F                 	db	111	;'o'
   709  00FC36  6B                 	db	107	;'k'
   710  00FC37  65                 	db	101	;'e'
   711  00FC38  72                 	db	114	;'r'
   712  00FC39  69                 	db	105	;'i'
   713  00FC3A  31                 	db	49	;'1'
   714  00FC3B  34                 	db	52	;'4'
   715  00FC3C  20                 	db	32
   716  00FC3D  20                 	db	32
   717  00FC3E  2A                 	db	42
   718  00FC3F  2A                 	db	42
   719  00FC40  2A                 	db	42
   720  00FC41  2A                 	db	42
   721  00FC42  0A                 	db	10
   722  00FC43  09                 	db	9
   723  00FC44  2A                 	db	42
   724  00FC45  2A                 	db	42
   725  00FC46  2A                 	db	42
   726  00FC47  2A                 	db	42
   727  00FC48  2A                 	db	42
   728  00FC49  2A                 	db	42
   729  00FC4A  2A                 	db	42
   730  00FC4B  2A                 	db	42
   731  00FC4C  2A                 	db	42
   732  00FC4D  2A                 	db	42
   733  00FC4E  2A                 	db	42
   734  00FC4F  2A                 	db	42
   735  00FC50  2A                 	db	42
   736  00FC51  2A                 	db	42
   737  00FC52  2A                 	db	42
   738  00FC53  2A                 	db	42
   739  00FC54  2A                 	db	42
   740  00FC55  2A                 	db	42
   741  00FC56  2A                 	db	42
   742  00FC57  2A                 	db	42
   743  00FC58  2A                 	db	42
   744  00FC59  2A                 	db	42
   745  00FC5A  2A                 	db	42
   746  00FC5B  2A                 	db	42
   747  00FC5C  2A                 	db	42
   748  00FC5D  2A                 	db	42
   749  00FC5E  2A                 	db	42
   750  00FC5F  2A                 	db	42
   751  00FC60  2A                 	db	42
   752  00FC61  0A                 	db	10
   753  00FC62  0A                 	db	10
   754  00FC63  09                 	db	9
   755  00FC64  70                 	db	112	;'p'
   756  00FC65  72                 	db	114	;'r'
   757  00FC66  69                 	db	105	;'i'
   758  00FC67  6E                 	db	110	;'n'
   759  00FC68  74                 	db	116	;'t'
   760  00FC69  5F                 	db	95	;'_'
   761  00FC6A  74                 	db	116	;'t'
   762  00FC6B  69                 	db	105	;'i'
   763  00FC6C  6D                 	db	109	;'m'
   764  00FC6D  65                 	db	101	;'e'
   765  00FC6E  28                 	db	40
   766  00FC6F  74                 	db	116	;'t'
   767  00FC70  29                 	db	41
   768  00FC71  0A                 	db	10
   769  00FC72  09                 	db	9
   770  00FC73  61                 	db	97	;'a'
   771  00FC74  64                 	db	100	;'d'
   772  00FC75  6A                 	db	106	;'j'
   773  00FC76  75                 	db	117	;'u'
   774  00FC77  73                 	db	115	;'s'
   775  00FC78  74                 	db	116	;'t'
   776  00FC79  5F                 	db	95	;'_'
   777  00FC7A  74                 	db	116	;'t'
   778  00FC7B  69                 	db	105	;'i'
   779  00FC7C  6D                 	db	109	;'m'
   780  00FC7D  65                 	db	101	;'e'
   781  00FC7E  28                 	db	40
   782  00FC7F  61                 	db	97	;'a'
   783  00FC80  74                 	db	116	;'t'
   784  00FC81  29                 	db	41
   785  00FC82  20                 	db	32
   786  00FC83  5B                 	db	91	;'['
   787  00FC84  68                 	db	104	;'h'
   788  00FC85  61                 	db	97	;'a'
   789  00FC86  6E                 	db	110	;'n'
   790  00FC87  64                 	db	100	;'d'
   791  00FC88  3A                 	db	58	;':'
   792  00FC89  79                 	db	121	;'y'
   793  00FC8A  2C                 	db	44
   794  00FC8B  4D                 	db	77	;'M'
   795  00FC8C  2C                 	db	44
   796  00FC8D  64                 	db	100	;'d'
   797  00FC8E  2C                 	db	44
   798  00FC8F  68                 	db	104	;'h'
   799  00FC90  2C                 	db	44
   800  00FC91  6D                 	db	109	;'m'
   801  00FC92  2C                 	db	44
   802  00FC93  73                 	db	115	;'s'
   803  00FC94  5D                 	db	93	;']'
   804  00FC95  20                 	db	32
   805  00FC96  5B                 	db	91	;'['
   806  00FC97  76                 	db	118	;'v'
   807  00FC98  61                 	db	97	;'a'
   808  00FC99  6C                 	db	108	;'l'
   809  00FC9A  75                 	db	117	;'u'
   810  00FC9B  65                 	db	101	;'e'
   811  00FC9C  28                 	db	40
   812  00FC9D  64                 	db	100	;'d'
   813  00FC9E  65                 	db	101	;'e'
   814  00FC9F  63                 	db	99	;'c'
   815  00FCA0  69                 	db	105	;'i'
   816  00FCA1  6D                 	db	109	;'m'
   817  00FCA2  61                 	db	97	;'a'
   818  00FCA3  6C                 	db	108	;'l'
   819  00FCA4  29                 	db	41
   820  00FCA5  5D                 	db	93	;']'
   821  00FCA6  0A                 	db	10
   822  00FCA7  09                 	db	9
   823  00FCA8  73                 	db	115	;'s'
   824  00FCA9  65                 	db	101	;'e'
   825  00FCAA  74                 	db	116	;'t'
   826  00FCAB  74                 	db	116	;'t'
   827  00FCAC  69                 	db	105	;'i'
   828  00FCAD  6E                 	db	110	;'n'
   829  00FCAE  67                 	db	103	;'g'
   830  00FCAF  73                 	db	115	;'s'
   831  00FCB0  28                 	db	40
   832  00FCB1  73                 	db	115	;'s'
   833  00FCB2  65                 	db	101	;'e'
   834  00FCB3  74                 	db	116	;'t'
   835  00FCB4  29                 	db	41
   836  00FCB5  20                 	db	32
   837  00FCB6  5B                 	db	91	;'['
   838  00FCB7  70                 	db	112	;'p'
   839  00FCB8  6F                 	db	111	;'o'
   840  00FCB9  72                 	db	114	;'r'
   841  00FCBA  74                 	db	116	;'t'
   842  00FCBB  3A                 	db	58	;':'
   843  00FCBC  6C                 	db	108	;'l'
   844  00FCBD  65                 	db	101	;'e'
   845  00FCBE  66                 	db	102	;'f'
   846  00FCBF  74                 	db	116	;'t'
   847  00FCC0  28                 	db	40
   848  00FCC1  6C                 	db	108	;'l'
   849  00FCC2  29                 	db	41
   850  00FCC3  2C                 	db	44
   851  00FCC4  63                 	db	99	;'c'
   852  00FCC5  65                 	db	101	;'e'
   853  00FCC6  6E                 	db	110	;'n'
   854  00FCC7  74                 	db	116	;'t'
   855  00FCC8  65                 	db	101	;'e'
   856  00FCC9  72                 	db	114	;'r'
   857  00FCCA  28                 	db	40
   858  00FCCB  63                 	db	99	;'c'
   859  00FCCC  29                 	db	41
   860  00FCCD  2C                 	db	44
   861  00FCCE  72                 	db	114	;'r'
   862  00FCCF  69                 	db	105	;'i'
   863  00FCD0  67                 	db	103	;'g'
   864  00FCD1  68                 	db	104	;'h'
   865  00FCD2  74                 	db	116	;'t'
   866  00FCD3  28                 	db	40
   867  00FCD4  72                 	db	114	;'r'
   868  00FCD5  29                 	db	41
   869  00FCD6  5D                 	db	93	;']'
   870  00FCD7  0A                 	db	10
   871  00FCD8  09                 	db	9
   872  00FCD9  09                 	db	9
   873  00FCDA  5B                 	db	91	;'['
   874  00FCDB  61                 	db	97	;'a'
   875  00FCDC  75                 	db	117	;'u'
   876  00FCDD  74                 	db	116	;'t'
   877  00FCDE  6F                 	db	111	;'o'
   878  00FCDF  5F                 	db	95	;'_'
   879  00FCE0  73                 	db	115	;'s'
   880  00FCE1  74                 	db	116	;'t'
   881  00FCE2  6F                 	db	111	;'o'
   882  00FCE3  70                 	db	112	;'p'
   883  00FCE4  28                 	db	40
   884  00FCE5  61                 	db	97	;'a'
   885  00FCE6  73                 	db	115	;'s'
   886  00FCE7  29                 	db	41
   887  00FCE8  2C                 	db	44
   888  00FCE9  61                 	db	97	;'a'
   889  00FCEA  6C                 	db	108	;'l'
   890  00FCEB  77                 	db	119	;'w'
   891  00FCEC  61                 	db	97	;'a'
   892  00FCED  79                 	db	121	;'y'
   893  00FCEE  73                 	db	115	;'s'
   894  00FCEF  5F                 	db	95	;'_'
   895  00FCF0  6F                 	db	111	;'o'
   896  00FCF1  6E                 	db	110	;'n'
   897  00FCF2  28                 	db	40
   898  00FCF3  61                 	db	97	;'a'
   899  00FCF4  6F                 	db	111	;'o'
   900  00FCF5  29                 	db	41
   901  00FCF6  2C                 	db	44
   902  00FCF7  69                 	db	105	;'i'
   903  00FCF8  6E                 	db	110	;'n'
   904  00FCF9  74                 	db	116	;'t'
   905  00FCFA  65                 	db	101	;'e'
   906  00FCFB  67                 	db	103	;'g'
   907  00FCFC  72                 	db	114	;'r'
   908  00FCFD  61                 	db	97	;'a'
   909  00FCFE  74                 	db	116	;'t'
   910  00FCFF  69                 	db	105	;'i'
   911  00FD00  6E                 	db	110	;'n'
   912  00FD01  67                 	db	103	;'g'
   913  00FD02  5F                 	db	95	;'_'
   914  00FD03  72                 	db	114	;'r'
   915  00FD04  65                 	db	101	;'e'
   916  00FD05  73                 	db	115	;'s'
   917  00FD06  65                 	db	101	;'e'
   918  00FD07  74                 	db	116	;'t'
   919  00FD08  28                 	db	40
   920  00FD09  69                 	db	105	;'i'
   921  00FD0A  72                 	db	114	;'r'
   922  00FD0B  29                 	db	41
   923  00FD0C  5D                 	db	93	;']'
   924  00FD0D  0A                 	db	10
   925  00FD0E  09                 	db	9
   926  00FD0F  6F                 	db	111	;'o'
   927  00FD10  75                 	db	117	;'u'
   928  00FD11  74                 	db	116	;'t'
   929  00FD12  70                 	db	112	;'p'
   930  00FD13  75                 	db	117	;'u'
   931  00FD14  74                 	db	116	;'t'
   932  00FD15  5F                 	db	95	;'_'
   933  00FD16  64                 	db	100	;'d'
   934  00FD17  61                 	db	97	;'a'
   935  00FD18  74                 	db	116	;'t'
   936  00FD19  61                 	db	97	;'a'
   937  00FD1A  28                 	db	40
   938  00FD1B  6F                 	db	111	;'o'
   939  00FD1C  64                 	db	100	;'d'
   940  00FD1D  29                 	db	41
   941  00FD1E  20                 	db	32
   942  00FD1F  3C                 	db	60	;'<'
   943  00FD20  2D                 	db	45
   944  00FD21  20                 	db	32
   945  00FD22  73                 	db	115	;'s'
   946  00FD23  74                 	db	116	;'t'
   947  00FD24  6F                 	db	111	;'o'
   948  00FD25  70                 	db	112	;'p'
   949  00FD26  70                 	db	112	;'p'
   950  00FD27  65                 	db	101	;'e'
   951  00FD28  64                 	db	100	;'d'
   952  00FD29  20                 	db	32
   953  00FD2A  62                 	db	98	;'b'
   954  00FD2B  79                 	db	121	;'y'
   955  00FD2C  20                 	db	32
   956  00FD2D  70                 	db	112	;'p'
   957  00FD2E  72                 	db	114	;'r'
   958  00FD2F  65                 	db	101	;'e'
   959  00FD30  73                 	db	115	;'s'
   960  00FD31  73                 	db	115	;'s'
   961  00FD32  69                 	db	105	;'i'
   962  00FD33  6E                 	db	110	;'n'
   963  00FD34  67                 	db	103	;'g'
   964  00FD35  20                 	db	32
   965  00FD36  74                 	db	116	;'t'
   966  00FD37  68                 	db	104	;'h'
   967  00FD38  65                 	db	101	;'e'
   968  00FD39  20                 	db	32
   969  00FD3A  45                 	db	69	;'E'
   970  00FD3B  6E                 	db	110	;'n'
   971  00FD3C  74                 	db	116	;'t'
   972  00FD3D  65                 	db	101	;'e'
   973  00FD3E  72                 	db	114	;'r'
   974  00FD3F  20                 	db	32
   975  00FD40  6B                 	db	107	;'k'
   976  00FD41  65                 	db	101	;'e'
   977  00FD42  79                 	db	121	;'y'
   978  00FD43  0A                 	db	10
   979  00FD44  09                 	db	9
   980  00FD45  74                 	db	116	;'t'
   981  00FD46  6F                 	db	111	;'o'
   982  00FD47  75                 	db	117	;'u'
   983  00FD48  63                 	db	99	;'c'
   984  00FD49  68                 	db	104	;'h'
   985  00FD4A  20                 	db	32
   986  00FD4B  5B                 	db	91	;'['
   987  00FD4C  72                 	db	114	;'r'
   988  00FD4D  65                 	db	101	;'e'
   989  00FD4E  73                 	db	115	;'s'
   990  00FD4F  65                 	db	101	;'e'
   991  00FD50  74                 	db	116	;'t'
   992  00FD51  28                 	db	40
   993  00FD52  72                 	db	114	;'r'
   994  00FD53  29                 	db	41
   995  00FD54  2C                 	db	44
   996  00FD55  69                 	db	105	;'i'
   997  00FD56  6E                 	db	110	;'n'
   998  00FD57  69                 	db	105	;'i'
   999  00FD58  74                 	db	116	;'t'
  1000  00FD59  69                 	db	105	;'i'
  1001  00FD5A  61                 	db	97	;'a'
  1002  00FD5B  6C                 	db	108	;'l'
  1003  00FD5C  69                 	db	105	;'i'
  1004  00FD5D  7A                 	db	122	;'z'
  1005  00FD5E  65                 	db	101	;'e'
  1006  00FD5F  28                 	db	40
  1007  00FD60  69                 	db	105	;'i'
  1008  00FD61  6E                 	db	110	;'n'
  1009  00FD62  69                 	db	105	;'i'
  1010  00FD63  74                 	db	116	;'t'
  1011  00FD64  29                 	db	41
  1012  00FD65  5D                 	db	93	;']'
  1013  00FD66  20                 	db	32
  1014  00FD67  5B                 	db	91	;'['
  1015  00FD68  76                 	db	118	;'v'
  1016  00FD69  61                 	db	97	;'a'
  1017  00FD6A  6C                 	db	108	;'l'
  1018  00FD6B  75                 	db	117	;'u'
  1019  00FD6C  65                 	db	101	;'e'
  1020  00FD6D  28                 	db	40
  1021  00FD6E  25                 	db	37
  1022  00FD6F  29                 	db	41
  1023  00FD70  5D                 	db	93	;']'
  1024  00FD71  0A                 	db	10
  1025  00FD72  0A                 	db	10
  1026  00FD73  09                 	db	9
  1027  00FD74  66                 	db	102	;'f'
  1028  00FD75  6F                 	db	111	;'o'
  1029  00FD76  72                 	db	114	;'r'
  1030  00FD77  20                 	db	32
  1031  00FD78  44                 	db	68	;'D'
  1032  00FD79  65                 	db	101	;'e'
  1033  00FD7A  76                 	db	118	;'v'
  1034  00FD7B  65                 	db	101	;'e'
  1035  00FD7C  6C                 	db	108	;'l'
  1036  00FD7D  6F                 	db	111	;'o'
  1037  00FD7E  70                 	db	112	;'p'
  1038  00FD7F  70                 	db	112	;'p'
  1039  00FD80  65                 	db	101	;'e'
  1040  00FD81  72                 	db	114	;'r'
  1041  00FD82  0A                 	db	10
  1042  00FD83  09                 	db	9
  1043  00FD84  52                 	db	82	;'R'
  1044  00FD85  45                 	db	69	;'E'
  1045  00FD86  53                 	db	83	;'S'
  1046  00FD87  45                 	db	69	;'E'
  1047  00FD88  54                 	db	84	;'T'
  1048  00FD89  28                 	db	40
  1049  00FD8A  29                 	db	41
  1050  00FD8B  3B                 	db	59	;';'
  1051  00FD8C  0A                 	db	10
  1052  00FD8D  09                 	db	9
  1053  00FD8E  62                 	db	98	;'b'
  1054  00FD8F  6F                 	db	111	;'o'
  1055  00FD90  6F                 	db	111	;'o'
  1056  00FD91  74                 	db	116	;'t'
  1057  00FD92  6C                 	db	108	;'l'
  1058  00FD93  6F                 	db	111	;'o'
  1059  00FD94  61                 	db	97	;'a'
  1060  00FD95  64                 	db	100	;'d'
  1061  00FD96  0A                 	db	10
  1062  00FD97  00                 	db	0
  1063  00FD98                     STR_100:
  1064  00FD98  09                 	db	9
  1065  00FD99  32                 	db	50	;'2'
  1066  00FD9A  30                 	db	48	;'0'
  1067  00FD9B  25                 	db	37
  1068  00FD9C  30                 	db	48	;'0'
  1069  00FD9D  32                 	db	50	;'2'
  1070  00FD9E  64                 	db	100	;'d'
  1071  00FD9F  2F                 	db	47
  1072  00FDA0  25                 	db	37
  1073  00FDA1  30                 	db	48	;'0'
  1074  00FDA2  32                 	db	50	;'2'
  1075  00FDA3  64                 	db	100	;'d'
  1076  00FDA4  2F                 	db	47
  1077  00FDA5  25                 	db	37
  1078  00FDA6  30                 	db	48	;'0'
  1079  00FDA7  32                 	db	50	;'2'
  1080  00FDA8  64                 	db	100	;'d'
  1081  00FDA9  28                 	db	40
  1082  00FDAA  25                 	db	37
  1083  00FDAB  73                 	db	115	;'s'
  1084  00FDAC  29                 	db	41
  1085  00FDAD  25                 	db	37
  1086  00FDAE  30                 	db	48	;'0'
  1087  00FDAF  32                 	db	50	;'2'
  1088  00FDB0  64                 	db	100	;'d'
  1089  00FDB1  3A                 	db	58	;':'
  1090  00FDB2  25                 	db	37
  1091  00FDB3  30                 	db	48	;'0'
  1092  00FDB4  32                 	db	50	;'2'
  1093  00FDB5  64                 	db	100	;'d'
  1094  00FDB6  2D                 	db	45
  1095  00FDB7  25                 	db	37
  1096  00FDB8  30                 	db	48	;'0'
  1097  00FDB9  32                 	db	50	;'2'
  1098  00FDBA  64                 	db	100	;'d'
  1099  00FDBB  0A                 	db	10
  1100  00FDBC  00                 	db	0
  1101  00FDBD                     STR_23:
  1102  00FDBD  09                 	db	9
  1103  00FDBE  69                 	db	105	;'i'
  1104  00FDBF  6E                 	db	110	;'n'
  1105  00FDC0  76                 	db	118	;'v'
  1106  00FDC1  61                 	db	97	;'a'
  1107  00FDC2  6C                 	db	108	;'l'
  1108  00FDC3  69                 	db	105	;'i'
  1109  00FDC4  64                 	db	100	;'d'
  1110  00FDC5  20                 	db	32
  1111  00FDC6  64                 	db	100	;'d'
  1112  00FDC7  61                 	db	97	;'a'
  1113  00FDC8  74                 	db	116	;'t'
  1114  00FDC9  61                 	db	97	;'a'
  1115  00FDCA  0A                 	db	10
  1116  00FDCB  09                 	db	9
  1117  00FDCC  69                 	db	105	;'i'
  1118  00FDCD  6E                 	db	110	;'n'
  1119  00FDCE  69                 	db	105	;'i'
  1120  00FDCF  74                 	db	116	;'t'
  1121  00FDD0  69                 	db	105	;'i'
  1122  00FDD1  61                 	db	97	;'a'
  1123  00FDD2  6C                 	db	108	;'l'
  1124  00FDD3  69                 	db	105	;'i'
  1125  00FDD4  7A                 	db	122	;'z'
  1126  00FDD5  69                 	db	105	;'i'
  1127  00FDD6  6E                 	db	110	;'n'
  1128  00FDD7  67                 	db	103	;'g'
  1129  00FDD8  20                 	db	32
  1130  00FDD9  66                 	db	102	;'f'
  1131  00FDDA  61                 	db	97	;'a'
  1132  00FDDB  69                 	db	105	;'i'
  1133  00FDDC  6C                 	db	108	;'l'
  1134  00FDDD  65                 	db	101	;'e'
  1135  00FDDE  64                 	db	100	;'d'
  1136  00FDDF  0A                 	db	10
  1137  00FDE0  00                 	db	0
  1138  00FDE1                     STR_27:
  1139  00FDE1  32                 	db	50	;'2'
  1140  00FDE2  30                 	db	48	;'0'
  1141  00FDE3  25                 	db	37
  1142  00FDE4  30                 	db	48	;'0'
  1143  00FDE5  32                 	db	50	;'2'
  1144  00FDE6  64                 	db	100	;'d'
  1145  00FDE7  2F                 	db	47
  1146  00FDE8  25                 	db	37
  1147  00FDE9  30                 	db	48	;'0'
  1148  00FDEA  32                 	db	50	;'2'
  1149  00FDEB  64                 	db	100	;'d'
  1150  00FDEC  2F                 	db	47
  1151  00FDED  25                 	db	37
  1152  00FDEE  30                 	db	48	;'0'
  1153  00FDEF  32                 	db	50	;'2'
  1154  00FDF0  64                 	db	100	;'d'
  1155  00FDF1  2D                 	db	45
  1156  00FDF2  25                 	db	37
  1157  00FDF3  30                 	db	48	;'0'
  1158  00FDF4  32                 	db	50	;'2'
  1159  00FDF5  64                 	db	100	;'d'
  1160  00FDF6  3A                 	db	58	;':'
  1161  00FDF7  25                 	db	37
  1162  00FDF8  30                 	db	48	;'0'
  1163  00FDF9  32                 	db	50	;'2'
  1164  00FDFA  64                 	db	100	;'d'
  1165  00FDFB  2D                 	db	45
  1166  00FDFC  25                 	db	37
  1167  00FDFD  30                 	db	48	;'0'
  1168  00FDFE  32                 	db	50	;'2'
  1169  00FDFF  64                 	db	100	;'d'
  1170  00FE00  00                 	db	0
  1171  00FE01                     STR_33:
  1172  00FE01  25                 	db	37
  1173  00FE02  30                 	db	48	;'0'
  1174  00FE03  32                 	db	50	;'2'
  1175  00FE04  6C                 	db	108	;'l'
  1176  00FE05  64                 	db	100	;'d'
  1177  00FE06  64                 	db	100	;'d'
  1178  00FE07  20                 	db	32
  1179  00FE08  25                 	db	37
  1180  00FE09  30                 	db	48	;'0'
  1181  00FE0A  32                 	db	50	;'2'
  1182  00FE0B  6C                 	db	108	;'l'
  1183  00FE0C  64                 	db	100	;'d'
  1184  00FE0D  68                 	db	104	;'h'
  1185  00FE0E  20                 	db	32
  1186  00FE0F  25                 	db	37
  1187  00FE10  30                 	db	48	;'0'
  1188  00FE11  32                 	db	50	;'2'
  1189  00FE12  6C                 	db	108	;'l'
  1190  00FE13  64                 	db	100	;'d'
  1191  00FE14  6D                 	db	109	;'m'
  1192  00FE15  20                 	db	32
  1193  00FE16  25                 	db	37
  1194  00FE17  30                 	db	48	;'0'
  1195  00FE18  32                 	db	50	;'2'
  1196  00FE19  6C                 	db	108	;'l'
  1197  00FE1A  64                 	db	100	;'d'
  1198  00FE1B  73                 	db	115	;'s'
  1199  00FE1C  00                 	db	0
  1200  00FE1D                     STR_22:
  1201  00FE1D  09                 	db	9
  1202  00FE1E  69                 	db	105	;'i'
  1203  00FE1F  6E                 	db	110	;'n'
  1204  00FE20  69                 	db	105	;'i'
  1205  00FE21  74                 	db	116	;'t'
  1206  00FE22  69                 	db	105	;'i'
  1207  00FE23  61                 	db	97	;'a'
  1208  00FE24  6C                 	db	108	;'l'
  1209  00FE25  69                 	db	105	;'i'
  1210  00FE26  7A                 	db	122	;'z'
  1211  00FE27  69                 	db	105	;'i'
  1212  00FE28  6E                 	db	110	;'n'
  1213  00FE29  67                 	db	103	;'g'
  1214  00FE2A  20                 	db	32
  1215  00FE2B  63                 	db	99	;'c'
  1216  00FE2C  6F                 	db	111	;'o'
  1217  00FE2D  6D                 	db	109	;'m'
  1218  00FE2E  70                 	db	112	;'p'
  1219  00FE2F  6C                 	db	108	;'l'
  1220  00FE30  65                 	db	101	;'e'
  1221  00FE31  74                 	db	116	;'t'
  1222  00FE32  65                 	db	101	;'e'
  1223  00FE33  0A                 	db	10
  1224  00FE34  00                 	db	0
  1225  00FE35                     STR_28:
  1226  00FE35  20                 	db	32
  1227  00FE36  25                 	db	37
  1228  00FE37  73                 	db	115	;'s'
  1229  00FE38  3A                 	db	58	;':'
  1230  00FE39  25                 	db	37
  1231  00FE3A  30                 	db	48	;'0'
  1232  00FE3B  31                 	db	49	;'1'
  1233  00FE3C  64                 	db	100	;'d'
  1234  00FE3D  2E                 	db	46
  1235  00FE3E  25                 	db	37
  1236  00FE3F  30                 	db	48	;'0'
  1237  00FE40  33                 	db	51	;'3'
  1238  00FE41  64                 	db	100	;'d'
  1239  00FE42  41                 	db	65	;'A'
  1240  00FE43  2C                 	db	44
  1241  00FE44  25                 	db	37
  1242  00FE45  30                 	db	48	;'0'
  1243  00FE46  36                 	db	54	;'6'
  1244  00FE47  6C                 	db	108	;'l'
  1245  00FE48  64                 	db	100	;'d'
  1246  00FE49  6D                 	db	109	;'m'
  1247  00FE4A  41                 	db	65	;'A'
  1248  00FE4B  68                 	db	104	;'h'
  1249  00FE4C  00                 	db	0
  1250  00FE4D                     STR_26:
  1251  00FE4D  09                 	db	9
  1252  00FE4E  73                 	db	115	;'s'
  1253  00FE4F  65                 	db	101	;'e'
  1254  00FE50  74                 	db	116	;'t'
  1255  00FE51  69                 	db	105	;'i'
  1256  00FE52  6E                 	db	110	;'n'
  1257  00FE53  67                 	db	103	;'g'
  1258  00FE54  20                 	db	32
  1259  00FE55  63                 	db	99	;'c'
  1260  00FE56  6F                 	db	111	;'o'
  1261  00FE57  6D                 	db	109	;'m'
  1262  00FE58  70                 	db	112	;'p'
  1263  00FE59  6C                 	db	108	;'l'
  1264  00FE5A  65                 	db	101	;'e'
  1265  00FE5B  74                 	db	116	;'t'
  1266  00FE5C  65                 	db	101	;'e'
  1267  00FE5D  0A                 	db	10
  1268  00FE5E  00                 	db	0
  1269  00FE5F                     STR_65:
  1270  00FE5F  3C                 	db	60	;'<'
  1271  00FE60  2D                 	db	45
  1272  00FE61  20                 	db	32
  1273  00FE62  20                 	db	32
  1274  00FE63  20                 	db	32
  1275  00FE64  53                 	db	83	;'S'
  1276  00FE65  65                 	db	101	;'e'
  1277  00FE66  6C                 	db	108	;'l'
  1278  00FE67  65                 	db	101	;'e'
  1279  00FE68  63                 	db	99	;'c'
  1280  00FE69  74                 	db	116	;'t'
  1281  00FE6A  20                 	db	32
  1282  00FE6B  20                 	db	32
  1283  00FE6C  20                 	db	32
  1284  00FE6D  2D                 	db	45
  1285  00FE6E  3E                 	db	62	;'>'
  1286  00FE6F  00                 	db	0
  1287  00FE70                     STR_71:
  1288  00FE70  54                 	db	84	;'T'
  1289  00FE71  6F                 	db	111	;'o'
  1290  00FE72  67                 	db	103	;'g'
  1291  00FE73  67                 	db	103	;'g'
  1292  00FE74  6C                 	db	108	;'l'
  1293  00FE75  65                 	db	101	;'e'
  1294  00FE76  20                 	db	32
  1295  00FE77  41                 	db	65	;'A'
  1296  00FE78  75                 	db	117	;'u'
  1297  00FE79  74                 	db	116	;'t'
  1298  00FE7A  6F                 	db	111	;'o'
  1299  00FE7B  20                 	db	32
  1300  00FE7C  53                 	db	83	;'S'
  1301  00FE7D  74                 	db	116	;'t'
  1302  00FE7E  6F                 	db	111	;'o'
  1303  00FE7F  70                 	db	112	;'p'
  1304  00FE80  00                 	db	0
  1305  00FE81                     STR_42:
  1306  00FE81  4C                 	db	76	;'L'
  1307  00FE82  65                 	db	101	;'e'
  1308  00FE83  66                 	db	102	;'f'
  1309  00FE84  74                 	db	116	;'t'
  1310  00FE85  20                 	db	32
  1311  00FE86  43                 	db	67	;'C'
  1312  00FE87  65                 	db	101	;'e'
  1313  00FE88  6E                 	db	110	;'n'
  1314  00FE89  74                 	db	116	;'t'
  1315  00FE8A  72                 	db	114	;'r'
  1316  00FE8B  20                 	db	32
  1317  00FE8C  52                 	db	82	;'R'
  1318  00FE8D  69                 	db	105	;'i'
  1319  00FE8E  67                 	db	103	;'g'
  1320  00FE8F  68                 	db	104	;'h'
  1321  00FE90  74                 	db	116	;'t'
  1322  00FE91  00                 	db	0
  1323  00FE92                     STR_5:
  1324  00FE92  43                 	db	67	;'C'
  1325  00FE93  68                 	db	104	;'h'
  1326  00FE94  61                 	db	97	;'a'
  1327  00FE95  72                 	db	114	;'r'
  1328  00FE96  67                 	db	103	;'g'
  1329  00FE97  65                 	db	101	;'e'
  1330  00FE98  20                 	db	32
  1331  00FE99  53                 	db	83	;'S'
  1332  00FE9A  74                 	db	116	;'t'
  1333  00FE9B  61                 	db	97	;'a'
  1334  00FE9C  74                 	db	116	;'t'
  1335  00FE9D  69                 	db	105	;'i'
  1336  00FE9E  6F                 	db	111	;'o'
  1337  00FE9F  6E                 	db	110	;'n'
  1338  00FEA0  20                 	db	32
  1339  00FEA1  36                 	db	54	;'6'
  1340  00FEA2  00                 	db	0
  1341  00FEA3                     STR_69:
  1342  00FEA3  41                 	db	65	;'A'
  1343  00FEA4  64                 	db	100	;'d'
  1344  00FEA5  6A                 	db	106	;'j'
  1345  00FEA6  75                 	db	117	;'u'
  1346  00FEA7  73                 	db	115	;'s'
  1347  00FEA8  74                 	db	116	;'t'
  1348  00FEA9  20                 	db	32
  1349  00FEAA  74                 	db	116	;'t'
  1350  00FEAB  68                 	db	104	;'h'
  1351  00FEAC  65                 	db	101	;'e'
  1352  00FEAD  20                 	db	32
  1353  00FEAE  54                 	db	84	;'T'
  1354  00FEAF  69                 	db	105	;'i'
  1355  00FEB0  6D                 	db	109	;'m'
  1356  00FEB1  65                 	db	101	;'e'
  1357  00FEB2  00                 	db	0
  1358  00FEB3                     STR_73:
  1359  00FEB3  54                 	db	84	;'T'
  1360  00FEB4  6F                 	db	111	;'o'
  1361  00FEB5  67                 	db	103	;'g'
  1362  00FEB6  67                 	db	103	;'g'
  1363  00FEB7  6C                 	db	108	;'l'
  1364  00FEB8  65                 	db	101	;'e'
  1365  00FEB9  20                 	db	32
  1366  00FEBA  4C                 	db	76	;'L'
  1367  00FEBB  45                 	db	69	;'E'
  1368  00FEBC  44                 	db	68	;'D'
  1369  00FEBD  20                 	db	32
  1370  00FEBE  4C                 	db	76	;'L'
  1371  00FEBF  61                 	db	97	;'a'
  1372  00FEC0  6D                 	db	109	;'m'
  1373  00FEC1  70                 	db	112	;'p'
  1374  00FEC2  00                 	db	0
  1375  00FEC3                     STR_10:
  1376  00FEC3  42                 	db	66	;'B'
  1377  00FEC4  6F                 	db	111	;'o'
  1378  00FEC5  6F                 	db	111	;'o'
  1379  00FEC6  74                 	db	116	;'t'
  1380  00FEC7  6C                 	db	108	;'l'
  1381  00FEC8  6F                 	db	111	;'o'
  1382  00FEC9  61                 	db	97	;'a'
  1383  00FECA  64                 	db	100	;'d'
  1384  00FECB  65                 	db	101	;'e'
  1385  00FECC  72                 	db	114	;'r'
  1386  00FECD  20                 	db	32
  1387  00FECE  6D                 	db	109	;'m'
  1388  00FECF  6F                 	db	111	;'o'
  1389  00FED0  64                 	db	100	;'d'
  1390  00FED1  65                 	db	101	;'e'
  1391  00FED2  00                 	db	0
  1392  00FED3                     STR_75:
  1393  00FED3  49                 	db	73	;'I'
  1394  00FED4  6E                 	db	110	;'n'
  1395  00FED5  74                 	db	116	;'t'
  1396  00FED6  65                 	db	101	;'e'
  1397  00FED7  67                 	db	103	;'g'
  1398  00FED8  72                 	db	114	;'r'
  1399  00FED9  61                 	db	97	;'a'
  1400  00FEDA  74                 	db	116	;'t'
  1401  00FEDB  20                 	db	32
  1402  00FEDC  52                 	db	82	;'R'
  1403  00FEDD  65                 	db	101	;'e'
  1404  00FEDE  73                 	db	115	;'s'
  1405  00FEDF  65                 	db	101	;'e'
  1406  00FEE0  74                 	db	116	;'t'
  1407  00FEE1  00                 	db	0
  1408  00FEE2                     STR_7:
  1409  00FEE2  43                 	db	67	;'C'
  1410  00FEE3  68                 	db	104	;'h'
  1411  00FEE4  61                 	db	97	;'a'
  1412  00FEE5  72                 	db	114	;'r'
  1413  00FEE6  67                 	db	103	;'g'
  1414  00FEE7  65                 	db	101	;'e'
  1415  00FEE8  20                 	db	32
  1416  00FEE9  53                 	db	83	;'S'
  1417  00FEEA  74                 	db	116	;'t'
  1418  00FEEB  61                 	db	97	;'a'
  1419  00FEEC  74                 	db	116	;'t'
  1420  00FEED  69                 	db	105	;'i'
  1421  00FEEE  6F                 	db	111	;'o'
  1422  00FEEF  6E                 	db	110	;'n'
  1423  00FEF0  00                 	db	0
  1424  00FEF1                     STR_8:
  1425  00FEF1  57                 	db	87	;'W'
  1426  00FEF2  65                 	db	101	;'e'
  1427  00FEF3  6C                 	db	108	;'l'
  1428  00FEF4  63                 	db	99	;'c'
  1429  00FEF5  6F                 	db	111	;'o'
  1430  00FEF6  6D                 	db	109	;'m'
  1431  00FEF7  65                 	db	101	;'e'
  1432  00FEF8  20                 	db	32
  1433  00FEF9  62                 	db	98	;'b'
  1434  00FEFA  61                 	db	97	;'a'
  1435  00FEFB  63                 	db	99	;'c'
  1436  00FEFC  6B                 	db	107	;'k'
  1437  00FEFD  21                 	db	33
  1438  00FEFE  00                 	db	0
  1439  00FEFF                     STR_35:
  1440  00FEFF  4D                 	db	77	;'M'
  1441  00FF00  61                 	db	97	;'a'
  1442  00FF01  64                 	db	100	;'d'
  1443  00FF02  65                 	db	101	;'e'
  1444  00FF03  20                 	db	32
  1445  00FF04  62                 	db	98	;'b'
  1446  00FF05  79                 	db	121	;'y'
  1447  00FF06  20                 	db	32
  1448  00FF07  4B                 	db	75	;'K'
  1449  00FF08  45                 	db	69	;'E'
  1450  00FF09  52                 	db	82	;'R'
  1451  00FF0A  49                 	db	73	;'I'
  1452  00FF0B  00                 	db	0
  1453  00FF0C                     STR_6:
  1454  00FF0C  53                 	db	83	;'S'
  1455  00FF0D  4C                 	db	76	;'L'
  1456  00FF0E  45                 	db	69	;'E'
  1457  00FF0F  45                 	db	69	;'E'
  1458  00FF10  50                 	db	80	;'P'
  1459  00FF11  49                 	db	73	;'I'
  1460  00FF12  4E                 	db	78	;'N'
  1461  00FF13  47                 	db	71	;'G'
  1462  00FF14  20                 	db	32
  1463  00FF15  4E                 	db	78	;'N'
  1464  00FF16  4F                 	db	79	;'O'
  1465  00FF17  57                 	db	87	;'W'
  1466  00FF18  00                 	db	0
  1467  00FF19                     STR_105:
  1468  00FF19  61                 	db	97	;'a'
  1469  00FF1A  64                 	db	100	;'d'
  1470  00FF1B  6A                 	db	106	;'j'
  1471  00FF1C  75                 	db	117	;'u'
  1472  00FF1D  73                 	db	115	;'s'
  1473  00FF1E  74                 	db	116	;'t'
  1474  00FF1F  5F                 	db	95	;'_'
  1475  00FF20  74                 	db	116	;'t'
  1476  00FF21  69                 	db	105	;'i'
  1477  00FF22  6D                 	db	109	;'m'
  1478  00FF23  65                 	db	101	;'e'
  1479  00FF24  00                 	db	0
  1480  00FF25                     STR_9:
  1481  00FF25  50                 	db	80	;'P'
  1482  00FF26  49                 	db	73	;'I'
  1483  00FF27  43                 	db	67	;'C'
  1484  00FF28  31                 	db	49	;'1'
  1485  00FF29  38                 	db	56	;'8'
  1486  00FF2A  46                 	db	70	;'F'
  1487  00FF2B  32                 	db	50	;'2'
  1488  00FF2C  37                 	db	55	;'7'
  1489  00FF2D  4A                 	db	74	;'J'
  1490  00FF2E  35                 	db	53	;'5'
  1491  00FF2F  33                 	db	51	;'3'
  1492  00FF30  00                 	db	0
  1493  00FF31                     STR_17:
  1494  00FF31  6F                 	db	111	;'o'
  1495  00FF32  75                 	db	117	;'u'
  1496  00FF33  74                 	db	116	;'t'
  1497  00FF34  70                 	db	112	;'p'
  1498  00FF35  75                 	db	117	;'u'
  1499  00FF36  74                 	db	116	;'t'
  1500  00FF37  5F                 	db	95	;'_'
  1501  00FF38  64                 	db	100	;'d'
  1502  00FF39  61                 	db	97	;'a'
  1503  00FF3A  74                 	db	116	;'t'
  1504  00FF3B  61                 	db	97	;'a'
  1505  00FF3C  00                 	db	0
  1506  00FF3D                     STR_102:
  1507  00FF3D  70                 	db	112	;'p'
  1508  00FF3E  72                 	db	114	;'r'
  1509  00FF3F  69                 	db	105	;'i'
  1510  00FF40  6E                 	db	110	;'n'
  1511  00FF41  74                 	db	116	;'t'
  1512  00FF42  5F                 	db	95	;'_'
  1513  00FF43  74                 	db	116	;'t'
  1514  00FF44  69                 	db	105	;'i'
  1515  00FF45  6D                 	db	109	;'m'
  1516  00FF46  65                 	db	101	;'e'
  1517  00FF47  00                 	db	0
  1518  00FF48                     STR_31:
  1519  00FF48  25                 	db	37
  1520  00FF49  30                 	db	48	;'0'
  1521  00FF4A  31                 	db	49	;'1'
  1522  00FF4B  64                 	db	100	;'d'
  1523  00FF4C  2E                 	db	46
  1524  00FF4D  25                 	db	37
  1525  00FF4E  30                 	db	48	;'0'
  1526  00FF4F  33                 	db	51	;'3'
  1527  00FF50  64                 	db	100	;'d'
  1528  00FF51  41                 	db	65	;'A'
  1529  00FF52  00                 	db	0
  1530  00FF53                     STR_20:
  1531  00FF53  69                 	db	105	;'i'
  1532  00FF54  6E                 	db	110	;'n'
  1533  00FF55  69                 	db	105	;'i'
  1534  00FF56  74                 	db	116	;'t'
  1535  00FF57  69                 	db	105	;'i'
  1536  00FF58  61                 	db	97	;'a'
  1537  00FF59  6C                 	db	108	;'l'
  1538  00FF5A  69                 	db	105	;'i'
  1539  00FF5B  7A                 	db	122	;'z'
  1540  00FF5C  65                 	db	101	;'e'
  1541  00FF5D  00                 	db	0
  1542  00FF5E                     STR_92:
  1543  00FF5E  20                 	db	32
  1544  00FF5F  20                 	db	32
  1545  00FF60  20                 	db	32
  1546  00FF61  20                 	db	32
  1547  00FF62  20                 	db	32
  1548  00FF63  20                 	db	32
  1549  00FF64  20                 	db	32
  1550  00FF65  20                 	db	32
  1551  00FF66  00                 	db	0
  1552  00FF67                     STR_64:
  1553  00FF67  53                 	db	83	;'S'
  1554  00FF68  65                 	db	101	;'e'
  1555  00FF69  74                 	db	116	;'t'
  1556  00FF6A  74                 	db	116	;'t'
  1557  00FF6B  69                 	db	105	;'i'
  1558  00FF6C  6E                 	db	110	;'n'
  1559  00FF6D  67                 	db	103	;'g'
  1560  00FF6E  73                 	db	115	;'s'
  1561  00FF6F  00                 	db	0
  1562  00FF70                     STR_14:
  1563  00FF70  52                 	db	82	;'R'
  1564  00FF71  45                 	db	69	;'E'
  1565  00FF72  53                 	db	83	;'S'
  1566  00FF73  45                 	db	69	;'E'
  1567  00FF74  54                 	db	84	;'T'
  1568  00FF75  28                 	db	40
  1569  00FF76  29                 	db	41
  1570  00FF77  3B                 	db	59	;';'
  1571  00FF78  00                 	db	0
  1572  00FF79                     STR_15:
  1573  00FF79  62                 	db	98	;'b'
  1574  00FF7A  6F                 	db	111	;'o'
  1575  00FF7B  6F                 	db	111	;'o'
  1576  00FF7C  74                 	db	116	;'t'
  1577  00FF7D  6C                 	db	108	;'l'
  1578  00FF7E  6F                 	db	111	;'o'
  1579  00FF7F  61                 	db	97	;'a'
  1580  00FF80  64                 	db	100	;'d'
  1581  00FF81  00                 	db	0
  1582  00FF82                     STR_101:
  1583  00FF82  09                 	db	9
  1584  00FF83  65                 	db	101	;'e'
  1585  00FF84  72                 	db	114	;'r'
  1586  00FF85  72                 	db	114	;'r'
  1587  00FF86  6F                 	db	111	;'o'
  1588  00FF87  72                 	db	114	;'r'
  1589  00FF88  0A                 	db	10
  1590  00FF89  00                 	db	0
  1591  00FF8A                     STR_118:
  1592  00FF8A  28                 	db	40
  1593  00FF8B  6E                 	db	110	;'n'
  1594  00FF8C  75                 	db	117	;'u'
  1595  00FF8D  6C                 	db	108	;'l'
  1596  00FF8E  6C                 	db	108	;'l'
  1597  00FF8F  29                 	db	41
  1598  00FF90  00                 	db	0
  1599  00FF91                     STR_117:
  1600  00FF91  73                 	db	115	;'s'
  1601  00FF92  65                 	db	101	;'e'
  1602  00FF93  63                 	db	99	;'c'
  1603  00FF94  6F                 	db	111	;'o'
  1604  00FF95  6E                 	db	110	;'n'
  1605  00FF96  64                 	db	100	;'d'
  1606  00FF97  00                 	db	0
  1607  00FF98                     STR_115:
  1608  00FF98  6D                 	db	109	;'m'
  1609  00FF99  69                 	db	105	;'i'
  1610  00FF9A  6E                 	db	110	;'n'
  1611  00FF9B  75                 	db	117	;'u'
  1612  00FF9C  74                 	db	116	;'t'
  1613  00FF9D  65                 	db	101	;'e'
  1614  00FF9E  00                 	db	0
  1615  00FF9F                     STR_109:
  1616  00FF9F  6D                 	db	109	;'m'
  1617  00FFA0  6F                 	db	111	;'o'
  1618  00FFA1  6E                 	db	110	;'n'
  1619  00FFA2  74                 	db	116	;'t'
  1620  00FFA3  68                 	db	104	;'h'
  1621  00FFA4  00                 	db	0
  1622  00FFA5                     STR_57:
  1623  00FFA5  20                 	db	32
  1624  00FFA6  20                 	db	32
  1625  00FFA7  30                 	db	48	;'0'
  1626  00FFA8  20                 	db	32
  1627  00FFA9  20                 	db	32
  1628  00FFAA  00                 	db	0
  1629  00FFAB                     STR_40:
  1630  00FFAB  20                 	db	32
  1631  00FFAC  4F                 	db	79	;'O'
  1632  00FFAD  4E                 	db	78	;'N'
  1633  00FFAE  20                 	db	32
  1634  00FFAF  20                 	db	32
  1635  00FFB0  00                 	db	0
  1636  00FFB1                     STR_41:
  1637  00FFB1  20                 	db	32
  1638  00FFB2  4F                 	db	79	;'O'
  1639  00FFB3  46                 	db	70	;'F'
  1640  00FFB4  46                 	db	70	;'F'
  1641  00FFB5  20                 	db	32
  1642  00FFB6  00                 	db	0
  1643  00FFB7                     STR_56:
  1644  00FFB7  20                 	db	32
  1645  00FFB8  79                 	db	121	;'y'
  1646  00FFB9  65                 	db	101	;'e'
  1647  00FFBA  74                 	db	116	;'t'
  1648  00FFBB  20                 	db	32
  1649  00FFBC  00                 	db	0
  1650  00FFBD                     STR_30:
  1651  00FFBD  25                 	db	37
  1652  00FFBE  73                 	db	115	;'s'
  1653  00FFBF  20                 	db	32
  1654  00FFC0  25                 	db	37
  1655  00FFC1  73                 	db	115	;'s'
  1656  00FFC2  00                 	db	0
  1657  00FFC3                     STR_19:
  1658  00FFC3  74                 	db	116	;'t'
  1659  00FFC4  6F                 	db	111	;'o'
  1660  00FFC5  75                 	db	117	;'u'
  1661  00FFC6  63                 	db	99	;'c'
  1662  00FFC7  68                 	db	104	;'h'
  1663  00FFC8  00                 	db	0
  1664  00FFC9                     STR_24:
  1665  00FFC9  72                 	db	114	;'r'
  1666  00FFCA  65                 	db	101	;'e'
  1667  00FFCB  73                 	db	115	;'s'
  1668  00FFCC  65                 	db	101	;'e'
  1669  00FFCD  74                 	db	116	;'t'
  1670  00FFCE  00                 	db	0
  1671  00FFCF                     STR_107:
  1672  00FFCF  79                 	db	121	;'y'
  1673  00FFD0  65                 	db	101	;'e'
  1674  00FFD1  61                 	db	97	;'a'
  1675  00FFD2  72                 	db	114	;'r'
  1676  00FFD3  00                 	db	0
  1677  00FFD4                     STR_113:
  1678  00FFD4  68                 	db	104	;'h'
  1679  00FFD5  6F                 	db	111	;'o'
  1680  00FFD6  75                 	db	117	;'u'
  1681  00FFD7  72                 	db	114	;'r'
  1682  00FFD8  00                 	db	0
  1683  00FFD9                     STR_11:
  1684  00FFD9  68                 	db	104	;'h'
  1685  00FFDA  65                 	db	101	;'e'
  1686  00FFDB  6C                 	db	108	;'l'
  1687  00FFDC  70                 	db	112	;'p'
  1688  00FFDD  00                 	db	0
  1689  00FFDE                     STR_21:
  1690  00FFDE  69                 	db	105	;'i'
  1691  00FFDF  6E                 	db	110	;'n'
  1692  00FFE0  69                 	db	105	;'i'
  1693  00FFE1  74                 	db	116	;'t'
  1694  00FFE2  00                 	db	0
  1695  00FFE3                     STR_96:
  1696  00FFE3  08                 	db	8
  1697  00FFE4  20                 	db	32
  1698  00FFE5  08                 	db	8
  1699  00FFE6  00                 	db	0
  1700  00FFE7                     STR_111:
  1701  00FFE7  64                 	db	100	;'d'
  1702  00FFE8  61                 	db	97	;'a'
  1703  00FFE9  79                 	db	121	;'y'
  1704  00FFEA  00                 	db	0
  1705  00FFEB                     STR_104:
  1706  00FFEB  61                 	db	97	;'a'
  1707  00FFEC  74                 	db	116	;'t'
  1708  00FFED  00                 	db	0
  1709  00FFEE                     STR_16:
  1710  00FFEE  6F                 	db	111	;'o'
  1711  00FFEF  64                 	db	100	;'d'
  1712  00FFF0  00                 	db	0
  1713  00FFF1                     STR_108:
  1714  00FFF1  4D                 	db	77	;'M'
  1715  00FFF2  00                 	db	0
  1716  00FFF3                     STR_114:
  1717  00FFF3  6D                 	db	109	;'m'
  1718  00FFF4  00                 	db	0
  1719  00FFF5                     STR_90:
  1720  00FFF5  28                 	db	40
  1721  00FFF6  00                 	db	0
  1722  00FFF7                     STR_86:
  1723  00FFF7  2D                 	db	45
  1724  00FFF8  00                 	db	0
  1725  00FFF9                     STR_81:
  1726  00FFF9  2F                 	db	47
  1727  00FFFA  00                 	db	0
  1728  00FFFB                     STR_84:
  1729  00FFFB  3A                 	db	58	;':'
  1730  00FFFC  00                 	db	0
  1731  00FFFD                     STR_12:
  1732  00FFFD  3F                 	db	63	;'?'
  1733  00FFFE  00                 	db	0
  1734  0000                     
  1735                           ; #config settings
  1736  00FFFF  00                 	db	0	; dummy byte at the end
  1737  0000                     
  1738                           	psect	cinit
  1739  015DDC                     __pcinit:
  1740                           	opt stack 0
  1741  015DDC                     start_initialization:
  1742                           	opt stack 0
  1743  015DDC                     __initialization:
  1744                           	opt stack 0
  1745                           
  1746                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1747  015DDC  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1748  015DE0  EE17 F0D0          	lfsr	1,2000
  1749  015DE4                     clear_0:
  1750  015DE4  6AEE               	clrf	postinc0,c
  1751  015DE6  50E5               	movf	postdec1,w,c
  1752  015DE8  50E1               	movf	fsr1l,w,c
  1753  015DEA  E1FC               	bnz	clear_0
  1754  015DEC  50E2               	movf	fsr1h,w,c
  1755  015DEE  E1FA               	bnz	clear_0
  1756                           
  1757                           ; Clear objects allocated to BANK3 (228 bytes)
  1758  015DF0  EE03  F000         	lfsr	0,__pbssBANK3
  1759  015DF4  0EE4               	movlw	228
  1760  015DF6                     clear_1:
  1761  015DF6  6AEE               	clrf	postinc0,c
  1762  015DF8  06E8               	decf	wreg,f,c
  1763  015DFA  E1FD               	bnz	clear_1
  1764                           
  1765                           ; Clear objects allocated to BANK2 (194 bytes)
  1766  015DFC  EE02  F000         	lfsr	0,__pbssBANK2
  1767  015E00  0EC2               	movlw	194
  1768  015E02                     clear_2:
  1769  015E02  6AEE               	clrf	postinc0,c
  1770  015E04  06E8               	decf	wreg,f,c
  1771  015E06  E1FD               	bnz	clear_2
  1772                           
  1773                           ; Clear objects allocated to BANK1 (145 bytes)
  1774  015E08  EE01  F000         	lfsr	0,__pbssBANK1
  1775  015E0C  0E91               	movlw	145
  1776  015E0E                     clear_3:
  1777  015E0E  6AEE               	clrf	postinc0,c
  1778  015E10  06E8               	decf	wreg,f,c
  1779  015E12  E1FD               	bnz	clear_3
  1780                           
  1781                           ; Clear objects allocated to BANK0 (26 bytes)
  1782  015E14  EE00  F0E6         	lfsr	0,__pbssBANK0
  1783  015E18  0E1A               	movlw	26
  1784  015E1A                     clear_4:
  1785  015E1A  6AEE               	clrf	postinc0,c
  1786  015E1C  06E8               	decf	wreg,f,c
  1787  015E1E  E1FD               	bnz	clear_4
  1788                           
  1789                           ; Clear objects allocated to COMRAM (44 bytes)
  1790  015E20  EE00  F001         	lfsr	0,__pbssCOMRAM
  1791  015E24  0E2C               	movlw	44
  1792  015E26                     clear_5:
  1793  015E26  6AEE               	clrf	postinc0,c
  1794  015E28  06E8               	decf	wreg,f,c
  1795  015E2A  E1FD               	bnz	clear_5
  1796                           
  1797                           ; Initialize objects allocated to BANK1 (3 bytes)
  1798                           ; load TBLPTR registers with __pidataBANK1
  1799  015E2C  0EAC               	movlw	low __pidataBANK1
  1800  015E2E  6EF6               	movwf	tblptrl,c
  1801  015E30  0E6C               	movlw	high __pidataBANK1
  1802  015E32  6EF7               	movwf	tblptrh,c
  1803  015E34  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1804  015E36  6EF8               	movwf	tblptru,c
  1805  015E38  0009               	tblrd		*+	;fetch initializer
  1806  015E3A  CFF5 F1E1          	movff	tablat,__pdataBANK1
  1807  015E3E  0009               	tblrd		*+	;fetch initializer
  1808  015E40  CFF5 F1E2          	movff	tablat,__pdataBANK1+1
  1809  015E44  0009               	tblrd		*+	;fetch initializer
  1810  015E46  CFF5 F1E3          	movff	tablat,__pdataBANK1+2
  1811  015E4A                     end_of_initialization:
  1812                           	opt stack 0
  1813  015E4A                     __end_of__initialization:
  1814                           	opt stack 0
  1815  015E4A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1816  015E4C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1817  015E4E  0100               	movlb	0
  1818  015E50  EF4B  F0B0         	goto	_main	;jump to C main() function
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           
  1829                           	psect	bssCOMRAM
  1830  000001                     __pbssCOMRAM:
  1831                           	opt stack 0
  1832  000001                     _ep_data_in:
  1833                           	opt stack 0
  1834  000001                     	ds	3
  1835  000004                     _ep_data_out:
  1836                           	opt stack 0
  1837  000004                     	ds	3
  1838  000007                     _CDCDataOutHandle:
  1839                           	opt stack 0
  1840  000007                     	ds	2
  1841  000009                     _pBDTEntryEP0OutCurrent:
  1842                           	opt stack 0
  1843  000009                     	ds	2
  1844  00000B                     _pBDTEntryEP0OutNext:
  1845                           	opt stack 0
  1846  00000B                     	ds	2
  1847  00000D                     ISR@cnt:
  1848                           	opt stack 0
  1849  00000D                     	ds	1
  1850  00000E                     ISR@cnt_t1:
  1851                           	opt stack 0
  1852  00000E                     	ds	1
  1853  00000F                     _BothEP0OutUOWNsSet:
  1854                           	opt stack 0
  1855  00000F                     	ds	1
  1856  000010                     _RemoteWakeup:
  1857                           	opt stack 0
  1858  000010                     	ds	1
  1859  000011                     _USBDeferINDataStagePackets:
  1860                           	opt stack 0
  1861  000011                     	ds	1
  1862  000012                     _USBDeferOUTDataStagePackets:
  1863                           	opt stack 0
  1864  000012                     	ds	1
  1865  000013                     _USBDeferStatusStagePacket:
  1866                           	opt stack 0
  1867  000013                     	ds	1
  1868  000014                     _USBDeviceState:
  1869                           	opt stack 0
  1870  000014                     	ds	1
  1871  000015                     _USBStatusStageEnabledFlag1:
  1872                           	opt stack 0
  1873  000015                     	ds	1
  1874  000016                     _USBStatusStageEnabledFlag2:
  1875                           	opt stack 0
  1876  000016                     	ds	1
  1877  000017                     _USBStatusStageTimeoutCounter:
  1878                           	opt stack 0
  1879  000017                     	ds	1
  1880  000018                     _controlTransferState:
  1881                           	opt stack 0
  1882  000018                     	ds	1
  1883  000019                     _ctmu_ratio:
  1884                           	opt stack 0
  1885  000019                     	ds	1
  1886  00001A                     _ctmu_sampling_flag:
  1887                           	opt stack 0
  1888  00001A                     	ds	1
  1889  00001B                     _cut_time_flag:
  1890                           	opt stack 0
  1891  00001B                     	ds	1
  1892  00001C                     _data_item:
  1893                           	opt stack 0
  1894  00001C                     	ds	1
  1895  00001D                     _display_flag:
  1896                           	opt stack 0
  1897  00001D                     	ds	1
  1898  00001E                     _endpoint_number:
  1899                           	opt stack 0
  1900  00001E                     	ds	1
  1901  00001F                     _integrate_flag:
  1902                           	opt stack 0
  1903  00001F                     	ds	1
  1904  000020                     _print_item:
  1905                           	opt stack 0
  1906  000020                     	ds	1
  1907  000021                     _settings_flag:
  1908                           	opt stack 0
  1909  000021                     	ds	1
  1910  000022                     _shortPacketStatus:
  1911                           	opt stack 0
  1912  000022                     	ds	1
  1913  000023                     _terminal_data_out:
  1914                           	opt stack 0
  1915  000023                     	ds	1
  1916  000024                     _terminal_data_out_flag:
  1917                           	opt stack 0
  1918  000024                     	ds	1
  1919  000025                     _time_change_flag:
  1920                           	opt stack 0
  1921  000025                     	ds	1
  1922  000026                     sleep_task@sleep_flag:
  1923                           	opt stack 0
  1924  000026                     	ds	1
  1925  000027                     _ctmu_m:
  1926                           	opt stack 0
  1927  000027                     	ds	4
  1928  00002B                     _USBActiveConfiguration:
  1929                           	opt stack 0
  1930  00002B                     	ds	1
  1931  00002C                     _USTATcopy:
  1932                           	opt stack 0
  1933  00002C                     	ds	1
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           
  1944                           	psect	bssBANK0
  1945  0000E6                     __pbssBANK0:
  1946                           	opt stack 0
  1947  0000E6                     _outPipes:
  1948                           	opt stack 0
  1949  0000E6                     	ds	9
  1950  0000EF                     _inPipes:
  1951                           	opt stack 0
  1952  0000EF                     	ds	6
  1953  0000F5                     _pBDTEntryIn:
  1954                           	opt stack 0
  1955  0000F5                     	ds	6
  1956  0000FB                     _cdc_rx_len:
  1957                           	opt stack 0
  1958  0000FB                     	ds	1
  1959  0000FC                     _cdc_trf_state:
  1960                           	opt stack 0
  1961  0000FC                     	ds	1
  1962  0000FD                     _cdc_tx_len:
  1963                           	opt stack 0
  1964  0000FD                     	ds	1
  1965  0000FE                     _print_port:
  1966                           	opt stack 0
  1967  0000FE                     	ds	1
  1968  0000FF                     _settings_item:
  1969                           	opt stack 0
  1970  0000FF                     	ds	1
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981                           	psect	bssBANK1
  1982  000100                     __pbssBANK1:
  1983                           	opt stack 0
  1984  000100                     _pBDTEntryOut:
  1985                           	opt stack 0
  1986  000100                     	ds	6
  1987  000106                     _ms:
  1988                           	opt stack 0
  1989  000106                     	ds	4
  1990  00010A                     LED_indicator@cnt:
  1991                           	opt stack 0
  1992  00010A                     	ds	3
  1993  00010D                     LED_indicator@cntf:
  1994                           	opt stack 0
  1995  00010D                     	ds	3
  1996  000110                     _pCDCDst:
  1997                           	opt stack 0
  1998  000110                     	ds	3
  1999  000113                     _pCDCSrc:
  2000                           	opt stack 0
  2001  000113                     	ds	3
  2002  000116                     USBCBSendResume@delay_count:
  2003                           	opt stack 0
  2004  000116                     	ds	2
  2005  000118                     _CDCDataInHandle:
  2006                           	opt stack 0
  2007  000118                     	ds	2
  2008  00011A                     _ctmu_value_m:
  2009                           	opt stack 0
  2010  00011A                     	ds	2
  2011  00011C                     _pDst:
  2012                           	opt stack 0
  2013  00011C                     	ds	2
  2014  00011E                     epoch_to_caltime@day_cache:
  2015                           	opt stack 0
  2016  00011E                     	ds	2
  2017  000120                     millis_timer@cnt:
  2018                           	opt stack 0
  2019  000120                     	ds	2
  2020  000122                     RTCC_task@prev_halfsec:
  2021                           	opt stack 0
  2022  000122                     	ds	1
  2023  000123                     _USBBusIsSuspended:
  2024                           	opt stack 0
  2025  000123                     	ds	1
  2026  000124                     _cdc_mem_type:
  2027                           	opt stack 0
  2028  000124                     	ds	1
  2029  000125                     _control_signal_bitmap:
  2030                           	opt stack 0
  2031  000125                     	ds	1
  2032  000126                     epoch_to_caltime@year_cache:
  2033                           	opt stack 0
  2034  000126                     	ds	1
  2035  000127                     settings_adjust_time@state:
  2036                           	opt stack 0
  2037  000127                     	ds	1
  2038  000128                     settings_auto_stop@state:
  2039                           	opt stack 0
  2040  000128                     	ds	1
  2041  000129                     settings_integrating_reset@state:
  2042                           	opt stack 0
  2043  000129                     	ds	1
  2044  00012A                     settings_led_indicator@state:
  2045                           	opt stack 0
  2046  00012A                     	ds	1
  2047  00012B                     settings_task@settings_state:
  2048                           	opt stack 0
  2049  00012B                     	ds	1
  2050  00012C                     terminal_task@command_init:
  2051                           	opt stack 0
  2052  00012C                     	ds	1
  2053  00012D                     _port:
  2054                           	opt stack 0
  2055  00012D                     	ds	69
  2056  000172                     _now:
  2057                           	opt stack 0
  2058  000172                     	ds	14
  2059  000180                     terminal_task@command:
  2060                           	opt stack 0
  2061  000180                     	ds	8
  2062  000188                     _line_coding:
  2063                           	opt stack 0
  2064  000188                     	ds	7
  2065  00018F                     _USBAlternateInterface:
  2066                           	opt stack 0
  2067  00018F                     	ds	2
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           
  2078                           	psect	dataBANK1
  2079  0001E1                     __pdataBANK1:
  2080                           	opt stack 0
  2081  0001E1                     I2C_LCD_SetCursor@F8620:
  2082                           	opt stack 0
  2083  0001E1                     	ds	2
  2084  0001E3                     epoch_to_caltime@month_cache:
  2085                           	opt stack 0
  2086  0001E3                     	ds	1
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postdec1	equ	0xFE5
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           
  2097                           	psect	bssBANK2
  2098  000200                     __pbssBANK2:
  2099                           	opt stack 0
  2100  000200                     _cdc_notice:
  2101                           	opt stack 0
  2102  000200                     	ds	10
  2103  00020A                     _BaudRateGen:
  2104                           	opt stack 0
  2105  00020A                     	ds	4
  2106  00020E                     _display_char:
  2107                           	opt stack 0
  2108  00020E                     	ds	40
  2109  000236                     terminal_task@op0:
  2110                           	opt stack 0
  2111  000236                     	ds	25
  2112  00024F                     terminal_task@op1:
  2113                           	opt stack 0
  2114  00024F                     	ds	25
  2115  000268                     terminal_task@op2:
  2116                           	opt stack 0
  2117  000268                     	ds	25
  2118  000281                     terminal_task@op3:
  2119                           	opt stack 0
  2120  000281                     	ds	25
  2121  00029A                     _dummy_encapsulated_cmd_response:
  2122                           	opt stack 0
  2123  00029A                     	ds	8
  2124  0002A2                     _uart_rx:
  2125                           	opt stack 0
  2126  0002A2                     	ds	8
  2127  0002AA                     _uart_tx:
  2128                           	opt stack 0
  2129  0002AA                     	ds	8
  2130  0002B2                     _usb_rx:
  2131                           	opt stack 0
  2132  0002B2                     	ds	8
  2133  0002BA                     _usb_tx:
  2134                           	opt stack 0
  2135  0002BA                     	ds	8
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           
  2146                           	psect	bssBANK3
  2147  000300                     __pbssBANK3:
  2148                           	opt stack 0
  2149  000300                     hardware_init@usbrx:
  2150                           	opt stack 0
  2151  000300                     	ds	100
  2152  000364                     _cdc_data_rx:
  2153                           	opt stack 0
  2154  000364                     	ds	64
  2155  0003A4                     _cdc_data_tx:
  2156                           	opt stack 0
  2157  0003A4                     	ds	64
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           postdec1	equ	0xFE5
  2165                           fsr1h	equ	0xFE2
  2166                           fsr1l	equ	0xFE1
  2167                           
  2168                           	psect	bssBIGRAMl
  2169  000469                     __pbssBIGRAMl:
  2170                           	opt stack 0
  2171  000469                     hardware_init@usbtx:
  2172                           	opt stack 0
  2173  000469                     	ds	2000
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           
  2184                           	psect	cstackBANK4
  2185  000400                     __pcstackBANK4:
  2186                           	opt stack 0
  2187  000400                     terminal_task@buf:
  2188                           	opt stack 0
  2189                           
  2190                           ; 100 bytes @ 0x0
  2191  000400                     	ds	100
  2192  000464                     _terminal_task$6795:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x64
  2196  000464                     	ds	2
  2197  000466                     terminal_task@i_3549:
  2198                           	opt stack 0
  2199                           
  2200                           ; 1 bytes @ 0x66
  2201  000466                     	ds	1
  2202  000467                     terminal_task@ascii:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x67
  2206  000467                     	ds	1
  2207  000468                     terminal_task@i:
  2208                           	opt stack 0
  2209                           
  2210                           ; 1 bytes @ 0x68
  2211  000468                     	ds	1
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           
  2222                           	psect	cstackBANK1
  2223  000191                     __pcstackBANK1:
  2224                           	opt stack 0
  2225  000191                     terminal_task@tx:
  2226                           	opt stack 0
  2227  000191                     display_LCD@str:
  2228                           	opt stack 0
  2229                           
  2230                           ; 40 bytes @ 0x0
  2231  000191                     	ds	2
  2232  000193                     terminal_task@rx:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x2
  2236  000193                     	ds	2
  2237  000195                     ??_terminal_task:
  2238                           
  2239                           ; 0 bytes @ 0x4
  2240  000195                     	ds	36
  2241  0001B9                     display_LCD@str_575:
  2242                           	opt stack 0
  2243                           
  2244                           ; 20 bytes @ 0x28
  2245  0001B9                     	ds	20
  2246  0001CD                     _display_LCD$6790:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x3C
  2250  0001CD                     	ds	4
  2251  0001D1                     _display_LCD$6791:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0x40
  2255  0001D1                     	ds	4
  2256  0001D5                     _display_LCD$6792:
  2257                           	opt stack 0
  2258                           
  2259                           ; 4 bytes @ 0x44
  2260  0001D5                     	ds	4
  2261  0001D9                     _display_LCD$6793:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x48
  2265  0001D9                     	ds	4
  2266  0001DD                     _display_LCD$6794:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x4C
  2270  0001DD                     	ds	4
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           
  2281                           	psect	cstackBANK0
  2282  000060                     __pcstackBANK0:
  2283                           	opt stack 0
  2284  000060                     ??_timer0_init:
  2285  000060                     ??_timer3_init:
  2286  000060                     ??_isdigit:
  2287  000060                     ??_I2C_IdleCheck:
  2288  000060                     ??_x_to_d:
  2289  000060                     ?_ADC:
  2290                           	opt stack 0
  2291  000060                     ?_strcmp:
  2292                           	opt stack 0
  2293  000060                     ?_ringbuf_num:
  2294                           	opt stack 0
  2295  000060                     ?_USBTransferOnePacket:
  2296                           	opt stack 0
  2297  000060                     ?___awdiv:
  2298                           	opt stack 0
  2299  000060                     ?___awmod:
  2300                           	opt stack 0
  2301  000060                     ?___lwmod:
  2302                           	opt stack 0
  2303  000060                     ?___lldiv:
  2304                           	opt stack 0
  2305  000060                     OUT@value:
  2306                           	opt stack 0
  2307  000060                     ANALOG_IN@b:
  2308                           	opt stack 0
  2309  000060                     LED_output@value:
  2310                           	opt stack 0
  2311  000060                     timer1_init@clock_select:
  2312                           	opt stack 0
  2313  000060                     ADC_init@p_ref:
  2314                           	opt stack 0
  2315  000060                     _is_usb_available$4168:
  2316                           	opt stack 0
  2317  000060                     USBTransferOnePacket@dir:
  2318                           	opt stack 0
  2319  000060                     display@str0:
  2320                           	opt stack 0
  2321  000060                     ringbuf_init@rb:
  2322                           	opt stack 0
  2323  000060                     ringbuf_num@rb:
  2324                           	opt stack 0
  2325  000060                     ringbuf_delete@rb:
  2326                           	opt stack 0
  2327  000060                     RTCC_adjust_time_toggle@tm:
  2328                           	opt stack 0
  2329  000060                     RTCC_adjust_time_cursor@tm:
  2330                           	opt stack 0
  2331  000060                     putUSBUSART@data:
  2332                           	opt stack 0
  2333  000060                     ___awdiv@dividend:
  2334                           	opt stack 0
  2335  000060                     ___awmod@dividend:
  2336                           	opt stack 0
  2337  000060                     ___lwmod@dividend:
  2338                           	opt stack 0
  2339  000060                     memset@p1:
  2340                           	opt stack 0
  2341  000060                     strcat@to:
  2342                           	opt stack 0
  2343  000060                     strcmp@s1:
  2344                           	opt stack 0
  2345  000060                     strcpy@to:
  2346                           	opt stack 0
  2347  000060                     ___lldiv@dividend:
  2348                           	opt stack 0
  2349                           
  2350                           ; 4 bytes @ 0x0
  2351  000060                     	ds	1
  2352  000061                     ??_timer1_init:
  2353  000061                     OUT@b:
  2354                           	opt stack 0
  2355  000061                     LED_output@b:
  2356                           	opt stack 0
  2357  000061                     I2C_IdleCheck@mask:
  2358                           	opt stack 0
  2359  000061                     timer0_init@prescaler:
  2360                           	opt stack 0
  2361  000061                     timer3_init@prescaler:
  2362                           	opt stack 0
  2363  000061                     x_to_d@hex:
  2364                           	opt stack 0
  2365  000061                     _isdigit$6286:
  2366                           	opt stack 0
  2367  000061                     USBTransferOnePacket@data:
  2368                           	opt stack 0
  2369                           
  2370                           ; 2 bytes @ 0x1
  2371  000061                     	ds	1
  2372  000062                     ??_ADC:
  2373  000062                     ??_ringbuf_num:
  2374  000062                     integrate_time@i:
  2375                           	opt stack 0
  2376  000062                     I2C_Start@rw:
  2377                           	opt stack 0
  2378  000062                     I2C_Send@data:
  2379                           	opt stack 0
  2380  000062                     timer1_init@prescaler:
  2381                           	opt stack 0
  2382  000062                     putUSBUSART@length:
  2383                           	opt stack 0
  2384  000062                     isdigit@c:
  2385                           	opt stack 0
  2386  000062                     display@str1:
  2387                           	opt stack 0
  2388  000062                     ringbuf_init@internal_buf:
  2389                           	opt stack 0
  2390  000062                     RTCC_to_caltime@tm:
  2391                           	opt stack 0
  2392  000062                     ___awdiv@divisor:
  2393                           	opt stack 0
  2394  000062                     ___awmod@divisor:
  2395                           	opt stack 0
  2396  000062                     ___lwmod@divisor:
  2397                           	opt stack 0
  2398  000062                     memset@c:
  2399                           	opt stack 0
  2400  000062                     strcat@from:
  2401                           	opt stack 0
  2402  000062                     strcmp@s2:
  2403                           	opt stack 0
  2404  000062                     strcpy@from:
  2405                           	opt stack 0
  2406                           
  2407                           ; 2 bytes @ 0x2
  2408  000062                     	ds	1
  2409  000063                     I2C_Start@adrs:
  2410                           	opt stack 0
  2411  000063                     ADC@ch:
  2412                           	opt stack 0
  2413  000063                     USBTransferOnePacket@len:
  2414                           	opt stack 0
  2415                           
  2416                           ; 1 bytes @ 0x3
  2417  000063                     	ds	1
  2418  000064                     ??_strcmp:
  2419  000064                     display@item:
  2420                           	opt stack 0
  2421  000064                     RTCC_to_caltime@dumy:
  2422                           	opt stack 0
  2423  000064                     I2C_LCD_Command@c:
  2424                           	opt stack 0
  2425  000064                     USBTransferOnePacket@ep:
  2426                           	opt stack 0
  2427  000064                     ___awdiv@counter:
  2428                           	opt stack 0
  2429  000064                     ___awmod@counter:
  2430                           	opt stack 0
  2431  000064                     ___lwmod@counter:
  2432                           	opt stack 0
  2433  000064                     ringbuf_init@bufsize:
  2434                           	opt stack 0
  2435  000064                     I2C_LCD_Puts@s:
  2436                           	opt stack 0
  2437  000064                     memset@n:
  2438                           	opt stack 0
  2439  000064                     strcat@cp:
  2440                           	opt stack 0
  2441  000064                     strcpy@cp:
  2442                           	opt stack 0
  2443  000064                     ___lldiv@divisor:
  2444                           	opt stack 0
  2445                           
  2446                           ; 4 bytes @ 0x4
  2447  000064                     	ds	1
  2448  000065                     display@i:
  2449                           	opt stack 0
  2450  000065                     I2C_LCD_Command@ans:
  2451                           	opt stack 0
  2452  000065                     ___awdiv@sign:
  2453                           	opt stack 0
  2454  000065                     ___awmod@sign:
  2455                           	opt stack 0
  2456  000065                     strcmp@r:
  2457                           	opt stack 0
  2458  000065                     USBTransferOnePacket@handle:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x5
  2462  000065                     	ds	1
  2463  000066                     ??_I2C_LCD_Clear:
  2464  000066                     ??_I2C_LCD_Puts:
  2465  000066                     ??_settings_auto_stop:
  2466  000066                     ??_settings_led_indicator:
  2467  000066                     port_button_task@i:
  2468                           	opt stack 0
  2469  000066                     month_length@month:
  2470                           	opt stack 0
  2471  000066                     I2C_LCD_SetCursor@row:
  2472                           	opt stack 0
  2473  000066                     ___awdiv@quotient:
  2474                           	opt stack 0
  2475  000066                     memset@p:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0x6
  2479  000066                     	ds	1
  2480  000067                     ??_I2C_LCD_init:
  2481  000067                     ??_CDCTxService:
  2482  000067                     ??_month_length:
  2483  000067                     I2C_LCD_SetCursor@row_offsets:
  2484                           	opt stack 0
  2485  000067                     I2C_LCD_Puts@ans:
  2486                           	opt stack 0
  2487  000067                     getsUSBUSART@buffer:
  2488                           	opt stack 0
  2489  000067                     settings_auto_stop@str:
  2490                           	opt stack 0
  2491  000067                     settings_led_indicator@str:
  2492                           	opt stack 0
  2493                           
  2494                           ; 20 bytes @ 0x7
  2495  000067                     	ds	1
  2496  000068                     d_to_x@dec:
  2497                           	opt stack 0
  2498  000068                     I2C_LCD_init@i:
  2499                           	opt stack 0
  2500  000068                     USBDeviceInit@i:
  2501                           	opt stack 0
  2502  000068                     ringbuf_put@rb:
  2503                           	opt stack 0
  2504  000068                     ringbuf_pop@rb:
  2505                           	opt stack 0
  2506  000068                     ringbuf_backspace@rb:
  2507                           	opt stack 0
  2508  000068                     _CDCTxService$6033:
  2509                           	opt stack 0
  2510  000068                     ___lldiv@quotient:
  2511                           	opt stack 0
  2512                           
  2513                           ; 4 bytes @ 0x8
  2514  000068                     	ds	1
  2515  000069                     I2C_LCD_SetCursor@col:
  2516                           	opt stack 0
  2517  000069                     I2C_LCD_init@i_3479:
  2518                           	opt stack 0
  2519  000069                     getsUSBUSART@len:
  2520                           	opt stack 0
  2521  000069                     caltime_to_RTCC@tm:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x9
  2525  000069                     	ds	1
  2526  00006A                     ??_getsUSBUSART:
  2527  00006A                     ??_ringbuf_pop:
  2528  00006A                     ??_ringbuf_backspace:
  2529  00006A                     sleep_task@i:
  2530                           	opt stack 0
  2531  00006A                     ringbuf_put@asciicode:
  2532                           	opt stack 0
  2533  00006A                     CDCTxService@i:
  2534                           	opt stack 0
  2535  00006A                     settings_integrating_reset@str:
  2536                           	opt stack 0
  2537                           
  2538                           ; 20 bytes @ 0xA
  2539  00006A                     	ds	1
  2540  00006B                     ??_ringbuf_put:
  2541  00006B                     month_length@year:
  2542                           	opt stack 0
  2543  00006B                     CDCTxService@byte_to_send:
  2544                           	opt stack 0
  2545  00006B                     _getsUSBUSART$5985:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0xB
  2549  00006B                     	ds	1
  2550  00006C                     ___lldiv@counter:
  2551                           	opt stack 0
  2552  00006C                     put_string_usb@s:
  2553                           	opt stack 0
  2554                           
  2555                           ; 2 bytes @ 0xC
  2556  00006C                     	ds	1
  2557  00006D                     ??_integrate_current:
  2558  00006D                     ?_CTMU_read:
  2559                           	opt stack 0
  2560  00006D                     ?_get_string_usb:
  2561                           	opt stack 0
  2562  00006D                     ?___lmul:
  2563                           	opt stack 0
  2564  00006D                     ?___llmod:
  2565                           	opt stack 0
  2566  00006D                     get_string_usb@s:
  2567                           	opt stack 0
  2568  00006D                     ___lmul@multiplier:
  2569                           	opt stack 0
  2570  00006D                     ___llmod@dividend:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xD
  2574  00006D                     	ds	1
  2575  00006E                     ringbuf_pop@ret:
  2576                           	opt stack 0
  2577  00006E                     put_string_usb@len:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0xE
  2581  00006E                     	ds	1
  2582  00006F                     ??_CTMU_read:
  2583  00006F                     integrate_current@i:
  2584                           	opt stack 0
  2585  00006F                     ringbuf_put_str@rb:
  2586                           	opt stack 0
  2587  00006F                     get_string_usb@len:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0xF
  2591  00006F                     	ds	1
  2592  000070                     CTMU_read@ch:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x10
  2596  000070                     	ds	1
  2597  000071                     ??_get_string_usb:
  2598  000071                     ringbuf_put_str@str:
  2599                           	opt stack 0
  2600  000071                     CTMU_read@sum:
  2601                           	opt stack 0
  2602  000071                     ___lmul@multiplicand:
  2603                           	opt stack 0
  2604  000071                     ___llmod@divisor:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x11
  2608  000071                     	ds	1
  2609  000072                     get_string_usb@rx_len:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x12
  2613  000072                     	ds	1
  2614  000073                     
  2615                           ; 0 bytes @ 0x13
  2616  000073                     	ds	1
  2617  000074                     USB_task@rx_len:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0x14
  2621  000074                     	ds	1
  2622  000075                     CTMU_read@i:
  2623                           	opt stack 0
  2624  000075                     ___llmod@counter:
  2625                           	opt stack 0
  2626  000075                     ___lmul@product:
  2627                           	opt stack 0
  2628                           
  2629                           ; 4 bytes @ 0x15
  2630  000075                     	ds	1
  2631  000076                     ?___wmul:
  2632                           	opt stack 0
  2633  000076                     USB_task@data:
  2634                           	opt stack 0
  2635  000076                     ___wmul@multiplier:
  2636                           	opt stack 0
  2637                           
  2638                           ; 2 bytes @ 0x16
  2639  000076                     	ds	2
  2640  000078                     ___wmul@multiplicand:
  2641                           	opt stack 0
  2642                           
  2643                           ; 2 bytes @ 0x18
  2644  000078                     	ds	1
  2645  000079                     ?_get_quot_rem:
  2646                           	opt stack 0
  2647  000079                     get_quot_rem@quot:
  2648                           	opt stack 0
  2649  000079                     caltime_to_epoch@tm:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x19
  2653  000079                     	ds	1
  2654  00007A                     ___wmul@product:
  2655                           	opt stack 0
  2656                           
  2657                           ; 2 bytes @ 0x1A
  2658  00007A                     	ds	1
  2659  00007B                     ??_caltime_to_epoch:
  2660  00007B                     get_quot_rem@div:
  2661                           	opt stack 0
  2662  00007B                     settings_auto_stop@str_1310:
  2663                           	opt stack 0
  2664  00007B                     settings_led_indicator@str_1327:
  2665                           	opt stack 0
  2666                           
  2667                           ; 20 bytes @ 0x1B
  2668  00007B                     	ds	1
  2669  00007C                     ??_Auto_cut:
  2670  00007C                     ?_atoi:
  2671                           	opt stack 0
  2672  00007C                     ?___lwdiv:
  2673                           	opt stack 0
  2674  00007C                     atoi@s:
  2675                           	opt stack 0
  2676  00007C                     ___lwdiv@dividend:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x1C
  2680  00007C                     	ds	1
  2681  00007D                     get_quot_rem@num:
  2682                           	opt stack 0
  2683                           
  2684                           ; 4 bytes @ 0x1D
  2685  00007D                     	ds	1
  2686  00007E                     ??_atoi:
  2687  00007E                     Auto_cut@i:
  2688                           	opt stack 0
  2689  00007E                     ___lwdiv@divisor:
  2690                           	opt stack 0
  2691  00007E                     settings_integrating_reset@str_1344:
  2692                           	opt stack 0
  2693                           
  2694                           ; 20 bytes @ 0x1E
  2695  00007E                     	ds	1
  2696  00007F                     caltime_to_epoch@year:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x1F
  2700  00007F                     	ds	1
  2701  000080                     caltime_to_epoch@month_2730:
  2702                           	opt stack 0
  2703  000080                     atoi@sign:
  2704                           	opt stack 0
  2705  000080                     ___lwdiv@counter:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x20
  2709  000080                     	ds	1
  2710  000081                     epoch_to_caltime@tm:
  2711                           	opt stack 0
  2712  000081                     atoi@a:
  2713                           	opt stack 0
  2714  000081                     ___lwdiv@quotient:
  2715                           	opt stack 0
  2716  000081                     caltime_to_epoch@epoch:
  2717                           	opt stack 0
  2718                           
  2719                           ; 4 bytes @ 0x21
  2720  000081                     	ds	2
  2721  000083                     ??_epoch_to_caltime:
  2722  000083                     ?_sprintf:
  2723                           	opt stack 0
  2724  000083                     ctmu_set_ratio@percentage:
  2725                           	opt stack 0
  2726  000083                     button_timer_interrupt@bt:
  2727                           	opt stack 0
  2728  000083                     ringbuf_put_num@rb:
  2729                           	opt stack 0
  2730  000083                     sprintf@sp:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x23
  2734  000083                     	ds	1
  2735  000084                     software_init@i:
  2736                           	opt stack 0
  2737                           
  2738                           ; 1 bytes @ 0x24
  2739  000084                     	ds	1
  2740  000085                     button_timer_interrupt@sw_value:
  2741                           	opt stack 0
  2742  000085                     caltime_to_epoch@month:
  2743                           	opt stack 0
  2744  000085                     ringbuf_put_num@value:
  2745                           	opt stack 0
  2746  000085                     epoch_to_caltime@day_since_epoch:
  2747                           	opt stack 0
  2748  000085                     sprintf@f:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x25
  2752  000085                     	ds	1
  2753  000086                     RTCC_from_RTCC@tm:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0x26
  2757  000086                     	ds	1
  2758  000087                     ringbuf_put_num@digits:
  2759                           	opt stack 0
  2760  000087                     epoch_to_caltime@day:
  2761                           	opt stack 0
  2762                           
  2763                           ; 2 bytes @ 0x27
  2764  000087                     	ds	1
  2765  000088                     ringbuf_put_num@i:
  2766                           	opt stack 0
  2767                           
  2768                           ; 1 bytes @ 0x28
  2769  000088                     	ds	1
  2770  000089                     epoch_to_caltime@year:
  2771                           	opt stack 0
  2772  000089                     ringbuf_put_num@temp:
  2773                           	opt stack 0
  2774                           
  2775                           ; 2 bytes @ 0x29
  2776  000089                     	ds	1
  2777  00008A                     epoch_to_caltime@month:
  2778                           	opt stack 0
  2779                           
  2780                           ; 1 bytes @ 0x2A
  2781  00008A                     	ds	1
  2782  00008B                     epoch_to_caltime@num:
  2783                           	opt stack 0
  2784                           
  2785                           ; 4 bytes @ 0x2B
  2786  00008B                     	ds	4
  2787  00008F                     settings_auto_stop@strp:
  2788                           	opt stack 0
  2789  00008F                     settings_led_indicator@strp:
  2790                           	opt stack 0
  2791  00008F                     RTCC_from_caltime@tm:
  2792                           	opt stack 0
  2793  00008F                     RTCC_from_epoch@tm:
  2794                           	opt stack 0
  2795                           
  2796                           ; 2 bytes @ 0x2F
  2797  00008F                     	ds	2
  2798  000091                     settings_auto_stop@strp_1311:
  2799                           	opt stack 0
  2800  000091                     settings_led_indicator@strp_1328:
  2801                           	opt stack 0
  2802  000091                     RTCC_adjust_time_inc@tm:
  2803                           	opt stack 0
  2804  000091                     RTCC_adjust_time_dec@tm:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x31
  2808  000091                     	ds	1
  2809  000092                     settings_integrating_reset@strp:
  2810                           	opt stack 0
  2811                           
  2812                           ; 2 bytes @ 0x32
  2813  000092                     	ds	1
  2814  000093                     ??_RTCC_adjust_time_inc:
  2815  000093                     ??_RTCC_adjust_time_dec:
  2816  000093                     settings_auto_stop@i:
  2817                           	opt stack 0
  2818  000093                     settings_led_indicator@i:
  2819                           	opt stack 0
  2820                           
  2821                           ; 1 bytes @ 0x33
  2822  000093                     	ds	1
  2823  000094                     settings_auto_stop@i_1312:
  2824                           	opt stack 0
  2825  000094                     settings_led_indicator@i_1329:
  2826                           	opt stack 0
  2827  000094                     settings_integrating_reset@strp_1345:
  2828                           	opt stack 0
  2829                           
  2830                           ; 2 bytes @ 0x34
  2831  000094                     	ds	1
  2832  000095                     settings_auto_stop@j:
  2833                           	opt stack 0
  2834  000095                     settings_led_indicator@j:
  2835                           	opt stack 0
  2836                           
  2837                           ; 1 bytes @ 0x35
  2838  000095                     	ds	1
  2839  000096                     settings_integrating_reset@i:
  2840                           	opt stack 0
  2841                           
  2842                           ; 1 bytes @ 0x36
  2843  000096                     	ds	1
  2844  000097                     ??_sprintf:
  2845  000097                     settings_integrating_reset@i_1346:
  2846                           	opt stack 0
  2847  000097                     RTCC_adjust_time_inc@i_2910:
  2848                           	opt stack 0
  2849  000097                     RTCC_adjust_time_dec@i_2940:
  2850                           	opt stack 0
  2851                           
  2852                           ; 1 bytes @ 0x37
  2853  000097                     	ds	1
  2854  000098                     settings_integrating_reset@j:
  2855                           	opt stack 0
  2856  000098                     RTCC_adjust_time_inc@i:
  2857                           	opt stack 0
  2858  000098                     RTCC_adjust_time_dec@i:
  2859                           	opt stack 0
  2860                           
  2861                           ; 1 bytes @ 0x38
  2862  000098                     	ds	1
  2863  000099                     settings_task@item_change_flag:
  2864                           	opt stack 0
  2865                           
  2866                           ; 1 bytes @ 0x39
  2867  000099                     	ds	2
  2868  00009B                     sprintf@prec:
  2869                           	opt stack 0
  2870                           
  2871                           ; 2 bytes @ 0x3B
  2872  00009B                     	ds	2
  2873  00009D                     sprintf@cp:
  2874                           	opt stack 0
  2875                           
  2876                           ; 2 bytes @ 0x3D
  2877  00009D                     	ds	2
  2878  00009F                     sprintf@ap:
  2879                           	opt stack 0
  2880                           
  2881                           ; 2 bytes @ 0x3F
  2882  00009F                     	ds	2
  2883  0000A1                     sprintf@len:
  2884                           	opt stack 0
  2885                           
  2886                           ; 2 bytes @ 0x41
  2887  0000A1                     	ds	2
  2888  0000A3                     sprintf@val:
  2889                           	opt stack 0
  2890                           
  2891                           ; 4 bytes @ 0x43
  2892  0000A3                     	ds	4
  2893  0000A7                     sprintf@flag:
  2894                           	opt stack 0
  2895                           
  2896                           ; 1 bytes @ 0x47
  2897  0000A7                     	ds	1
  2898  0000A8                     sprintf@c:
  2899                           	opt stack 0
  2900                           
  2901                           ; 1 bytes @ 0x48
  2902  0000A8                     	ds	1
  2903  0000A9                     sprintf@width:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x49
  2907  0000A9                     	ds	2
  2908  0000AB                     data_out@tx:
  2909                           	opt stack 0
  2910  0000AB                     display_dec@str:
  2911                           	opt stack 0
  2912  0000AB                     print_time@tx:
  2913                           	opt stack 0
  2914                           
  2915                           ; 2 bytes @ 0x4B
  2916  0000AB                     	ds	2
  2917  0000AD                     display_dec@dec:
  2918                           	opt stack 0
  2919  0000AD                     data_out@str:
  2920                           	opt stack 0
  2921  0000AD                     print_time@str:
  2922                           	opt stack 0
  2923                           
  2924                           ; 30 bytes @ 0x4D
  2925  0000AD                     	ds	1
  2926  0000AE                     display_dec@edit:
  2927                           	opt stack 0
  2928                           
  2929                           ; 1 bytes @ 0x4E
  2930  0000AE                     	ds	1
  2931  0000AF                     display_dec@s:
  2932                           	opt stack 0
  2933                           
  2934                           ; 4 bytes @ 0x4F
  2935  0000AF                     	ds	4
  2936  0000B3                     display_time_1602@tm:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x53
  2940  0000B3                     	ds	2
  2941  0000B5                     display_time_1602@line0:
  2942                           	opt stack 0
  2943                           
  2944                           ; 2 bytes @ 0x55
  2945  0000B5                     	ds	2
  2946  0000B7                     display_time_1602@line1:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x57
  2950  0000B7                     	ds	2
  2951  0000B9                     ??_display_time_1602:
  2952                           
  2953                           ; 0 bytes @ 0x59
  2954  0000B9                     	ds	1
  2955  0000BA                     ??_display_LCD:
  2956                           
  2957                           ; 0 bytes @ 0x5A
  2958  0000BA                     	ds	17
  2959  0000CB                     data_out@i:
  2960                           	opt stack 0
  2961  0000CB                     terminal_at_hand@tx:
  2962                           	opt stack 0
  2963                           
  2964                           ; 2 bytes @ 0x6B
  2965  0000CB                     	ds	1
  2966  0000CC                     
  2967                           ; 0 bytes @ 0x6C
  2968  0000CC                     	ds	1
  2969  0000CD                     terminal_at_hand@hand:
  2970                           	opt stack 0
  2971                           
  2972                           ; 2 bytes @ 0x6D
  2973  0000CD                     	ds	2
  2974  0000CF                     terminal_at_hand@min:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x6F
  2978  0000CF                     	ds	1
  2979  0000D0                     terminal_at_hand@max:
  2980                           	opt stack 0
  2981                           
  2982                           ; 1 bytes @ 0x70
  2983  0000D0                     	ds	1
  2984  0000D1                     terminal_at_hand@value:
  2985                           	opt stack 0
  2986                           
  2987                           ; 1 bytes @ 0x71
  2988  0000D1                     	ds	1
  2989  0000D2                     terminal_time@tx:
  2990                           	opt stack 0
  2991                           
  2992                           ; 2 bytes @ 0x72
  2993  0000D2                     	ds	2
  2994  0000D4                     terminal_time@op0:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x74
  2998  0000D4                     	ds	2
  2999  0000D6                     terminal_time@op1:
  3000                           	opt stack 0
  3001                           
  3002                           ; 2 bytes @ 0x76
  3003  0000D6                     	ds	2
  3004  0000D8                     terminal_time@op2:
  3005                           	opt stack 0
  3006                           
  3007                           ; 2 bytes @ 0x78
  3008  0000D8                     	ds	2
  3009  0000DA                     _terminal_time$6796:
  3010                           	opt stack 0
  3011                           
  3012                           ; 1 bytes @ 0x7A
  3013  0000DA                     	ds	1
  3014  0000DB                     terminal_operation@tx:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x7B
  3018  0000DB                     	ds	2
  3019  0000DD                     terminal_operation@op0:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x7D
  3023  0000DD                     	ds	2
  3024  0000DF                     terminal_operation@op1:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x7F
  3028  0000DF                     	ds	2
  3029  0000E1                     terminal_operation@op2:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x81
  3033  0000E1                     	ds	2
  3034  0000E3                     terminal_operation@op3:
  3035                           	opt stack 0
  3036                           
  3037                           ; 2 bytes @ 0x83
  3038  0000E3                     	ds	2
  3039  0000E5                     terminal_operation@percentage:
  3040                           	opt stack 0
  3041                           
  3042                           ; 1 bytes @ 0x85
  3043  0000E5                     	ds	1
  3044  0000E6                     tblptru	equ	0xFF8
  3045                           tblptrh	equ	0xFF7
  3046                           tblptrl	equ	0xFF6
  3047                           tablat	equ	0xFF5
  3048                           postinc0	equ	0xFEE
  3049                           wreg	equ	0xFE8
  3050                           postdec1	equ	0xFE5
  3051                           fsr1h	equ	0xFE2
  3052                           fsr1l	equ	0xFE1
  3053                           
  3054                           ; 0 bytes @ 0x86
  3055                           
  3056                           	psect	cstackCOMRAM
  3057  00002D                     __pcstackCOMRAM:
  3058                           	opt stack 0
  3059  00002D                     ??_USBStdGetDscHandler:
  3060  00002D                     ??_USBStdGetStatusHandler:
  3061  00002D                     ?i2_USBTransferOnePacket:
  3062                           	opt stack 0
  3063  00002D                     ?i2___awdiv:
  3064                           	opt stack 0
  3065  00002D                     ?i2___lwdiv:
  3066                           	opt stack 0
  3067  00002D                     USBConfigureEndpoint@direction:
  3068                           	opt stack 0
  3069  00002D                     USBCtrlTrfTxService@byteToSend:
  3070                           	opt stack 0
  3071  00002D                     USBCtrlTrfRxService@i:
  3072                           	opt stack 0
  3073  00002D                     i2LED_output@value:
  3074                           	opt stack 0
  3075  00002D                     i2USBTransferOnePacket@dir:
  3076                           	opt stack 0
  3077  00002D                     i2___awdiv@dividend:
  3078                           	opt stack 0
  3079  00002D                     i2___lwdiv@dividend:
  3080                           	opt stack 0
  3081  00002D                     i2memset@p1:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0x0
  3085  00002D                     	ds	1
  3086  00002E                     ??_USBConfigureEndpoint:
  3087  00002E                     USBCtrlTrfRxService@byteToRead:
  3088                           	opt stack 0
  3089  00002E                     USBCtrlTrfInHandler@lastDTS:
  3090                           	opt stack 0
  3091  00002E                     i2LED_output@b:
  3092                           	opt stack 0
  3093  00002E                     USBStdGetStatusHandler@p:
  3094                           	opt stack 0
  3095  00002E                     i2USBTransferOnePacket@data:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x1
  3099  00002E                     	ds	1
  3100  00002F                     i2___awdiv@divisor:
  3101                           	opt stack 0
  3102  00002F                     i2___lwdiv@divisor:
  3103                           	opt stack 0
  3104  00002F                     i2memset@c:
  3105                           	opt stack 0
  3106                           
  3107                           ; 2 bytes @ 0x2
  3108  00002F                     	ds	1
  3109  000030                     i2USBTransferOnePacket@len:
  3110                           	opt stack 0
  3111                           
  3112                           ; 1 bytes @ 0x3
  3113  000030                     	ds	1
  3114  000031                     i2USBTransferOnePacket@ep:
  3115                           	opt stack 0
  3116  000031                     i2___awdiv@counter:
  3117                           	opt stack 0
  3118  000031                     i2___lwdiv@quotient:
  3119                           	opt stack 0
  3120  000031                     i2memset@n:
  3121                           	opt stack 0
  3122                           
  3123                           ; 2 bytes @ 0x4
  3124  000031                     	ds	1
  3125  000032                     USBConfigureEndpoint@EPNum:
  3126                           	opt stack 0
  3127  000032                     i2___awdiv@sign:
  3128                           	opt stack 0
  3129  000032                     i2USBTransferOnePacket@handle:
  3130                           	opt stack 0
  3131                           
  3132                           ; 2 bytes @ 0x5
  3133  000032                     	ds	1
  3134  000033                     i2___lwdiv@counter:
  3135                           	opt stack 0
  3136  000033                     USBConfigureEndpoint@handle:
  3137                           	opt stack 0
  3138  000033                     i2___awdiv@quotient:
  3139                           	opt stack 0
  3140  000033                     i2memset@p:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x6
  3144  000033                     	ds	2
  3145  000035                     ??_LED_indicator:
  3146  000035                     USBEnableEndpoint@options:
  3147                           	opt stack 0
  3148  000035                     i2USBDeviceInit@i:
  3149                           	opt stack 0
  3150                           
  3151                           ; 1 bytes @ 0x8
  3152  000035                     	ds	1
  3153  000036                     USBEnableEndpoint@p:
  3154                           	opt stack 0
  3155                           
  3156                           ; 2 bytes @ 0x9
  3157  000036                     	ds	2
  3158  000038                     LED_indicator@i:
  3159                           	opt stack 0
  3160  000038                     USBEnableEndpoint@ep:
  3161                           	opt stack 0
  3162                           
  3163                           ; 1 bytes @ 0xB
  3164  000038                     	ds	1
  3165  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3166                           	opt stack 0
  3167                           
  3168                           ; 2 bytes @ 0xC
  3169  000039                     	ds	2
  3170  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3171                           	opt stack 0
  3172                           
  3173                           ; 2 bytes @ 0xE
  3174  00003B                     	ds	2
  3175  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3176                           	opt stack 0
  3177                           
  3178                           ; 2 bytes @ 0x10
  3179  00003D                     	ds	2
  3180  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3181                           
  3182                           ; 0 bytes @ 0x12
  3183  00003F                     	ds	2
  3184  000041                     ??_USBStdFeatureReqHandler:
  3185  000041                     USBStdSetCfgHandler@i:
  3186                           	opt stack 0
  3187                           
  3188                           ; 1 bytes @ 0x14
  3189  000041                     	ds	1
  3190  000042                     USBStdFeatureReqHandler@pUEP:
  3191                           	opt stack 0
  3192                           
  3193                           ; 2 bytes @ 0x15
  3194  000042                     	ds	2
  3195  000044                     USBStdFeatureReqHandler@current_ep_data:
  3196                           	opt stack 0
  3197                           
  3198                           ; 1 bytes @ 0x17
  3199  000044                     	ds	1
  3200  000045                     USBStdFeatureReqHandler@p:
  3201                           	opt stack 0
  3202                           
  3203                           ; 2 bytes @ 0x18
  3204  000045                     	ds	2
  3205  000047                     ??_USBCtrlEPService:
  3206  000047                     
  3207                           ; 0 bytes @ 0x1A
  3208  000047                     	ds	2
  3209  000049                     USBCtrlEPService@setup_cnt:
  3210                           	opt stack 0
  3211                           
  3212                           ; 1 bytes @ 0x1C
  3213  000049                     	ds	1
  3214  00004A                     USBDeviceTasks@i:
  3215                           	opt stack 0
  3216                           
  3217                           ; 1 bytes @ 0x1D
  3218  00004A                     	ds	1
  3219  00004B                     ??_ISR:
  3220                           
  3221                           ; 0 bytes @ 0x1E
  3222  00004B                     	ds	14
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           postinc0	equ	0xFEE
  3228                           wreg	equ	0xFE8
  3229                           postdec1	equ	0xFE5
  3230                           fsr1h	equ	0xFE2
  3231                           fsr1l	equ	0xFE1
  3232                           
  3233 ;;
  3234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3235 ;;
  3236 ;; *************** function _main *****************
  3237 ;; Defined at:
  3238 ;;		line 130 in file "main.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2  425[None  ] int 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels required when called:   20
  3258 ;; This function calls:
  3259 ;;		_RTCC_task
  3260 ;;		_USB_task
  3261 ;;		_bootload
  3262 ;;		_ctmu_task
  3263 ;;		_hardware_init
  3264 ;;		_normal_task
  3265 ;;		_sleep_task
  3266 ;;		_software_init
  3267 ;;		_terminal_task
  3268 ;; This function is called by:
  3269 ;;		Startup code after reset
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text0
  3274  016096                     __ptext0:
  3275                           	opt stack 0
  3276  016096                     _main:
  3277                           	opt stack 11
  3278                           
  3279                           ;main.c: 132: hardware_init();
  3280                           
  3281                           ;incstack = 0
  3282  016096  EC39  F0AB         	call	_hardware_init	;wreg free
  3283                           
  3284                           ;main.c: 134: software_init();
  3285  01609A  ECAE  F0A8         	call	_software_init	;wreg free
  3286  01609E  D02F               	goto	l12361
  3287  0160A0                     l12319:
  3288                           
  3289                           ;main.c: 140: INTCONbits.GIE = 0;
  3290  0160A0  9EF2               	bcf	intcon,7,c	;volatile
  3291                           
  3292                           ;main.c: 141: RTCC_task();
  3293  0160A2  ECAC  F0B3         	call	_RTCC_task	;wreg free
  3294                           
  3295                           ;main.c: 142: INTCONbits.GIE = 1;
  3296  0160A6  8EF2               	bsf	intcon,7,c	;volatile
  3297                           
  3298                           ;main.c: 143: INTCONbits.GIE = 0;
  3299  0160A8  9EF2               	bcf	intcon,7,c	;volatile
  3300                           
  3301                           ;main.c: 144: USB_task();
  3302  0160AA  EC51  F0AD         	call	_USB_task	;wreg free
  3303                           
  3304                           ;main.c: 145: INTCONbits.GIE = 1;
  3305  0160AE  8EF2               	bsf	intcon,7,c	;volatile
  3306                           
  3307                           ;main.c: 146: INTCONbits.GIE = 0;
  3308  0160B0  9EF2               	bcf	intcon,7,c	;volatile
  3309                           
  3310                           ;main.c: 147: terminal_task(&usb_tx, &usb_rx);
  3311  0160B2  0EBA               	movlw	low _usb_tx
  3312  0160B4  0101               	movlb	1	; () banked
  3313  0160B6  6F91               	movwf	terminal_task@tx& (0+255),b
  3314  0160B8  0E02               	movlw	high _usb_tx
  3315  0160BA  0101               	movlb	1	; () banked
  3316  0160BC  6F92               	movwf	(terminal_task@tx+1)& (0+255),b
  3317  0160BE  0EB2               	movlw	low _usb_rx
  3318  0160C0  0101               	movlb	1	; () banked
  3319  0160C2  6F93               	movwf	terminal_task@rx& (0+255),b
  3320  0160C4  0E02               	movlw	high _usb_rx
  3321  0160C6  0101               	movlb	1	; () banked
  3322  0160C8  6F94               	movwf	(terminal_task@rx+1)& (0+255),b
  3323  0160CA  ECC6  F086         	call	_terminal_task	;wreg free
  3324                           
  3325                           ;main.c: 148: INTCONbits.GIE = 1;
  3326  0160CE  8EF2               	bsf	intcon,7,c	;volatile
  3327                           
  3328                           ;main.c: 149: INTCONbits.GIE = 0;
  3329  0160D0  9EF2               	bcf	intcon,7,c	;volatile
  3330                           
  3331                           ;main.c: 150: normal_task();
  3332  0160D2  ECE2  F0AA         	call	_normal_task	;wreg free
  3333                           
  3334                           ;main.c: 151: INTCONbits.GIE = 1;
  3335  0160D6  8EF2               	bsf	intcon,7,c	;volatile
  3336                           
  3337                           ;main.c: 153: INTCONbits.GIE = 0;
  3338  0160D8  9EF2               	bcf	intcon,7,c	;volatile
  3339                           
  3340                           ;main.c: 154: ctmu_task();
  3341  0160DA  EC46  F0B6         	call	_ctmu_task	;wreg free
  3342                           
  3343                           ;main.c: 155: if (ctmu_m.flag.pressing &&
  3344                           ;main.c: 156: port[0].ctmu.flag.pressing &&
  3345                           ;main.c: 157: port[1].ctmu.flag.pressing &&
  3346                           ;main.c: 158: port[2].ctmu.flag.pressing) {
  3347  0160DE  A02A               	btfss	_ctmu_m+3,0,c
  3348  0160E0  D00A               	goto	l12357
  3349  0160E2  0101               	movlb	1	; () banked
  3350  0160E4  A130               	btfss	(_port+3)& (0+255),0,b
  3351  0160E6  D007               	goto	l12357
  3352                           
  3353                           ; BSR set to: 1
  3354  0160E8  0101               	movlb	1	; () banked
  3355  0160EA  A147               	btfss	(_port+26)& (0+255),0,b
  3356  0160EC  D004               	goto	l12357
  3357                           
  3358                           ; BSR set to: 1
  3359  0160EE  0101               	movlb	1	; () banked
  3360  0160F0  B15E               	btfsc	(_port+49)& (0+255),0,b
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;main.c: 159: bootload();
  3364  0160F2  EC32  F0B3         	call	_bootload	;wreg free
  3365  0160F6                     l12357:
  3366                           
  3367                           ;main.c: 160: }
  3368                           ;main.c: 161: INTCONbits.GIE = 1;
  3369  0160F6  8EF2               	bsf	intcon,7,c	;volatile
  3370                           
  3371                           ;main.c: 163: INTCONbits.GIE = 0;
  3372  0160F8  9EF2               	bcf	intcon,7,c	;volatile
  3373                           
  3374                           ;main.c: 164: sleep_task();
  3375  0160FA  EC24  F0A7         	call	_sleep_task	;wreg free
  3376  0160FE                     l12361:
  3377                           
  3378                           ;main.c: 165: INTCONbits.GIE = 1;
  3379  0160FE  8EF2               	bsf	intcon,7,c	;volatile
  3380  016100  D7CF               	goto	l12319
  3381  016102                     __end_of_main:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           intcon	equ	0xFF2
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           postdec1	equ	0xFE5
  3391                           fsr1h	equ	0xFE2
  3392                           fsr1l	equ	0xFE1
  3393                           
  3394 ;; *************** function _terminal_task *****************
  3395 ;; Defined at:
  3396 ;;		line 8 in file "../My_library/My_terminal.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3399 ;;		 -> usb_tx(8), 
  3400 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3401 ;;		 -> usb_rx(8), 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  i               1  102[BANK4 ] unsigned char 
  3404 ;;  i               1  104[BANK4 ] unsigned char 
  3405 ;;  ascii           1  103[BANK4 ] unsigned char 
  3406 ;;  buf           100    0[BANK4 ] unsigned char [100]
  3407 ;; Return value:  Size  Location     Type
  3408 ;;		None               void
  3409 ;; Registers used:
  3410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3416 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;Total ram usage:      111 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:   19
  3423 ;; This function calls:
  3424 ;;		_ringbuf_backspace
  3425 ;;		_ringbuf_delete
  3426 ;;		_ringbuf_init
  3427 ;;		_ringbuf_num
  3428 ;;		_ringbuf_pop
  3429 ;;		_ringbuf_put
  3430 ;;		_ringbuf_put_num
  3431 ;;		_ringbuf_put_str
  3432 ;;		_terminal_operation
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text1
  3439  010D8C                     __ptext1:
  3440                           	opt stack 0
  3441  010D8C                     _terminal_task:
  3442                           	opt stack 11
  3443                           
  3444                           ;My_terminal.c: 9: static ringbuf_t command;
  3445                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3446                           ;My_terminal.c: 11: if (command_init == 0) {
  3447                           
  3448                           ;incstack = 0
  3449  010D8C  0101               	movlb	1	; () banked
  3450  010D8E  512C               	movf	terminal_task@command_init& (0+255),w,b
  3451  010D90  0101               	movlb	1	; () banked
  3452  010D92  A4D8               	btfss	status,2,c
  3453  010D94  D016               	goto	l12247
  3454                           
  3455                           ; BSR set to: 1
  3456                           ;My_terminal.c: 12: command_init = 1;
  3457  010D96  0E01               	movlw	1
  3458  010D98  0101               	movlb	1	; () banked
  3459  010D9A  6F2C               	movwf	terminal_task@command_init& (0+255),b
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;My_terminal.c: 13: char buf[100];
  3463                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3464  010D9C  0E80               	movlw	low terminal_task@command
  3465  010D9E  0100               	movlb	0	; () banked
  3466  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3467  010DA2  0E01               	movlw	high terminal_task@command
  3468  010DA4  0100               	movlb	0	; () banked
  3469  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3470  010DA8  0E00               	movlw	low terminal_task@buf
  3471  010DAA  0100               	movlb	0	; () banked
  3472  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3473  010DAE  0E04               	movlw	high terminal_task@buf
  3474  010DB0  0100               	movlb	0	; () banked
  3475  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3476  010DB4  0E00               	movlw	0
  3477  010DB6  0100               	movlb	0	; () banked
  3478  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3479  010DBA  0E64               	movlw	100
  3480  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3481  010DBE  EC6D  F0B2         	call	_ringbuf_init	;wreg free
  3482  010DC2                     l12247:
  3483                           
  3484                           ;My_terminal.c: 15: }
  3485                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3486  010DC2  C193  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3487  010DC6  C194  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3488  010DCA  EC2A  F0A1         	call	_ringbuf_num	;wreg free
  3489  010DCE  0100               	movlb	0	; () banked
  3490  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3491  010DD2  0100               	movlb	0	; () banked
  3492  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3493  010DD6  B4D8               	btfsc	status,2,c
  3494  010DD8  0012               	return	
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3498  010DDA  C193  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3499  010DDE  C194  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3500  010DE2  ECBE  F0A6         	call	_ringbuf_pop	;wreg free
  3501  010DE6  0104               	movlb	4	; () banked
  3502  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3503                           
  3504                           ;My_terminal.c: 18: switch (ascii) {
  3505  010DEA  D176               	goto	l12311
  3506  010DEC                     l12251:
  3507                           
  3508                           ; BSR set to: 4
  3509                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3510  010DEC  0E80               	movlw	low terminal_task@command
  3511  010DEE  0100               	movlb	0	; () banked
  3512  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3513  010DF2  0E01               	movlw	high terminal_task@command
  3514  010DF4  0100               	movlb	0	; () banked
  3515  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3516  010DF8  0E00               	movlw	0
  3517  010DFA  0100               	movlb	0	; () banked
  3518  010DFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3519  010DFE  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3520                           
  3521                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3522  010E02  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3523  010E06  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3524  010E0A  0E09               	movlw	9
  3525  010E0C  0100               	movlb	0	; () banked
  3526  010E0E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3527  010E10  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3528                           
  3529                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3530  010E14  0E80               	movlw	low terminal_task@command
  3531  010E16  0100               	movlb	0	; () banked
  3532  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3533  010E1A  0E01               	movlw	high terminal_task@command
  3534  010E1C  0100               	movlb	0	; () banked
  3535  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3536  010E20  EC2A  F0A1         	call	_ringbuf_num	;wreg free
  3537  010E24  0EFF               	movlw	255
  3538  010E26  0100               	movlb	0	; () banked
  3539  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3540  010E2A  0104               	movlb	4	; () banked
  3541  010E2C  6F64               	movwf	_terminal_task$6795& (0+255),b
  3542  010E2E  0EFF               	movlw	255
  3543  010E30  0100               	movlb	0	; () banked
  3544  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3545  010E34  0104               	movlb	4	; () banked
  3546  010E36  6F65               	movwf	(_terminal_task$6795+1)& (0+255),b
  3547                           
  3548                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3549  010E38  C191  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3550  010E3C  C192  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3551  010E40  C464  F085         	movff	_terminal_task$6795,ringbuf_put_num@value
  3552  010E44  C465  F086         	movff	_terminal_task$6795+1,ringbuf_put_num@value+1
  3553  010E48  0E02               	movlw	2
  3554  010E4A  0100               	movlb	0	; () banked
  3555  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3556  010E4E  ECAD  F0AE         	call	_ringbuf_put_num	;wreg free
  3557                           
  3558                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3559  010E52  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3560  010E56  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3561  010E5A  0E0A               	movlw	10
  3562  010E5C  0100               	movlb	0	; () banked
  3563  010E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3564  010E60  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3565                           
  3566                           ;My_terminal.c: 24: static char op0[25];
  3567                           ;My_terminal.c: 25: static char op1[25];
  3568                           ;My_terminal.c: 26: static char op2[25];
  3569                           ;My_terminal.c: 27: static char op3[25];
  3570                           ;My_terminal.c: 28: uint8_t i;
  3571                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3572  010E64  0E00               	movlw	0
  3573  010E66  0104               	movlb	4	; () banked
  3574  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3575  010E6A  D002               	goto	l12257
  3576  010E6C                     l12255:
  3577                           
  3578                           ; BSR set to: 4
  3579  010E6C  0104               	movlb	4	; () banked
  3580  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3581  010E70                     l12257:
  3582                           
  3583                           ; BSR set to: 4
  3584  010E70  0E80               	movlw	low terminal_task@command
  3585  010E72  0100               	movlb	0	; () banked
  3586  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3587  010E76  0E01               	movlw	high terminal_task@command
  3588  010E78  0100               	movlb	0	; () banked
  3589  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3590  010E7C  ECBE  F0A6         	call	_ringbuf_pop	;wreg free
  3591  010E80  0101               	movlb	1	; () banked
  3592  010E82  6F95               	movwf	??_terminal_task& (0+255),b
  3593  010E84  0104               	movlb	4	; () banked
  3594  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3595  010E88  0D01               	mullw	1
  3596  010E8A  0E36               	movlw	low terminal_task@op0
  3597  010E8C  24F3               	addwf	prodl,w,c
  3598  010E8E  6ED9               	movwf	fsr2l,c
  3599  010E90  0E02               	movlw	high terminal_task@op0
  3600  010E92  20F4               	addwfc	prodh,w,c
  3601  010E94  6EDA               	movwf	fsr2h,c
  3602  010E96  C195  FFDF         	movff	??_terminal_task,indf2
  3603  010E9A  50DF               	movf	indf2,w,c
  3604  010E9C  A4D8               	btfss	status,2,c
  3605  010E9E  D7E6               	goto	l12255
  3606                           
  3607                           ; BSR set to: 4
  3608                           ;My_terminal.c: 30: op0[i] = '\0';
  3609                           
  3610                           ; BSR set to: 4
  3611  010EA0  0104               	movlb	4	; () banked
  3612  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3613  010EA4  0D01               	mullw	1
  3614  010EA6  0E36               	movlw	low terminal_task@op0
  3615  010EA8  24F3               	addwf	prodl,w,c
  3616  010EAA  6ED9               	movwf	fsr2l,c
  3617  010EAC  0E02               	movlw	high terminal_task@op0
  3618  010EAE  20F4               	addwfc	prodh,w,c
  3619  010EB0  6EDA               	movwf	fsr2h,c
  3620  010EB2  0E00               	movlw	0
  3621  010EB4  6EDF               	movwf	indf2,c
  3622                           
  3623                           ; BSR set to: 4
  3624                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3625  010EB6  0E00               	movlw	0
  3626  010EB8  0104               	movlb	4	; () banked
  3627  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3628  010EBC  D002               	goto	l12265
  3629  010EBE                     l12263:
  3630                           
  3631                           ; BSR set to: 4
  3632  010EBE  0104               	movlb	4	; () banked
  3633  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3634  010EC2                     l12265:
  3635                           
  3636                           ; BSR set to: 4
  3637  010EC2  0E80               	movlw	low terminal_task@command
  3638  010EC4  0100               	movlb	0	; () banked
  3639  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3640  010EC8  0E01               	movlw	high terminal_task@command
  3641  010ECA  0100               	movlb	0	; () banked
  3642  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3643  010ECE  ECBE  F0A6         	call	_ringbuf_pop	;wreg free
  3644  010ED2  0101               	movlb	1	; () banked
  3645  010ED4  6F95               	movwf	??_terminal_task& (0+255),b
  3646  010ED6  0104               	movlb	4	; () banked
  3647  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3648  010EDA  0D01               	mullw	1
  3649  010EDC  0E4F               	movlw	low terminal_task@op1
  3650  010EDE  24F3               	addwf	prodl,w,c
  3651  010EE0  6ED9               	movwf	fsr2l,c
  3652  010EE2  0E02               	movlw	high terminal_task@op1
  3653  010EE4  20F4               	addwfc	prodh,w,c
  3654  010EE6  6EDA               	movwf	fsr2h,c
  3655  010EE8  C195  FFDF         	movff	??_terminal_task,indf2
  3656  010EEC  50DF               	movf	indf2,w,c
  3657  010EEE  A4D8               	btfss	status,2,c
  3658  010EF0  D7E6               	goto	l12263
  3659                           
  3660                           ; BSR set to: 4
  3661                           ;My_terminal.c: 32: op1[i] = '\0';
  3662                           
  3663                           ; BSR set to: 4
  3664  010EF2  0104               	movlb	4	; () banked
  3665  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3666  010EF6  0D01               	mullw	1
  3667  010EF8  0E4F               	movlw	low terminal_task@op1
  3668  010EFA  24F3               	addwf	prodl,w,c
  3669  010EFC  6ED9               	movwf	fsr2l,c
  3670  010EFE  0E02               	movlw	high terminal_task@op1
  3671  010F00  20F4               	addwfc	prodh,w,c
  3672  010F02  6EDA               	movwf	fsr2h,c
  3673  010F04  0E00               	movlw	0
  3674  010F06  6EDF               	movwf	indf2,c
  3675                           
  3676                           ; BSR set to: 4
  3677                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3678  010F08  0E00               	movlw	0
  3679  010F0A  0104               	movlb	4	; () banked
  3680  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3681  010F0E  D002               	goto	l12273
  3682  010F10                     l12271:
  3683                           
  3684                           ; BSR set to: 4
  3685  010F10  0104               	movlb	4	; () banked
  3686  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3687  010F14                     l12273:
  3688                           
  3689                           ; BSR set to: 4
  3690  010F14  0E80               	movlw	low terminal_task@command
  3691  010F16  0100               	movlb	0	; () banked
  3692  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3693  010F1A  0E01               	movlw	high terminal_task@command
  3694  010F1C  0100               	movlb	0	; () banked
  3695  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3696  010F20  ECBE  F0A6         	call	_ringbuf_pop	;wreg free
  3697  010F24  0101               	movlb	1	; () banked
  3698  010F26  6F95               	movwf	??_terminal_task& (0+255),b
  3699  010F28  0104               	movlb	4	; () banked
  3700  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3701  010F2C  0D01               	mullw	1
  3702  010F2E  0E68               	movlw	low terminal_task@op2
  3703  010F30  24F3               	addwf	prodl,w,c
  3704  010F32  6ED9               	movwf	fsr2l,c
  3705  010F34  0E02               	movlw	high terminal_task@op2
  3706  010F36  20F4               	addwfc	prodh,w,c
  3707  010F38  6EDA               	movwf	fsr2h,c
  3708  010F3A  C195  FFDF         	movff	??_terminal_task,indf2
  3709  010F3E  50DF               	movf	indf2,w,c
  3710  010F40  A4D8               	btfss	status,2,c
  3711  010F42  D7E6               	goto	l12271
  3712                           
  3713                           ; BSR set to: 4
  3714                           ;My_terminal.c: 34: op2[i] = '\0';
  3715                           
  3716                           ; BSR set to: 4
  3717  010F44  0104               	movlb	4	; () banked
  3718  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3719  010F48  0D01               	mullw	1
  3720  010F4A  0E68               	movlw	low terminal_task@op2
  3721  010F4C  24F3               	addwf	prodl,w,c
  3722  010F4E  6ED9               	movwf	fsr2l,c
  3723  010F50  0E02               	movlw	high terminal_task@op2
  3724  010F52  20F4               	addwfc	prodh,w,c
  3725  010F54  6EDA               	movwf	fsr2h,c
  3726  010F56  0E00               	movlw	0
  3727  010F58  6EDF               	movwf	indf2,c
  3728                           
  3729                           ; BSR set to: 4
  3730                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3731  010F5A  0E00               	movlw	0
  3732  010F5C  0104               	movlb	4	; () banked
  3733  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3734  010F60  D002               	goto	l12281
  3735  010F62                     l12279:
  3736                           
  3737                           ; BSR set to: 4
  3738  010F62  0104               	movlb	4	; () banked
  3739  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3740  010F66                     l12281:
  3741                           
  3742                           ; BSR set to: 4
  3743  010F66  0E80               	movlw	low terminal_task@command
  3744  010F68  0100               	movlb	0	; () banked
  3745  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3746  010F6C  0E01               	movlw	high terminal_task@command
  3747  010F6E  0100               	movlb	0	; () banked
  3748  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3749  010F72  ECBE  F0A6         	call	_ringbuf_pop	;wreg free
  3750  010F76  0101               	movlb	1	; () banked
  3751  010F78  6F95               	movwf	??_terminal_task& (0+255),b
  3752  010F7A  0104               	movlb	4	; () banked
  3753  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3754  010F7E  0D01               	mullw	1
  3755  010F80  0E81               	movlw	low terminal_task@op3
  3756  010F82  24F3               	addwf	prodl,w,c
  3757  010F84  6ED9               	movwf	fsr2l,c
  3758  010F86  0E02               	movlw	high terminal_task@op3
  3759  010F88  20F4               	addwfc	prodh,w,c
  3760  010F8A  6EDA               	movwf	fsr2h,c
  3761  010F8C  C195  FFDF         	movff	??_terminal_task,indf2
  3762  010F90  50DF               	movf	indf2,w,c
  3763  010F92  A4D8               	btfss	status,2,c
  3764  010F94  D7E6               	goto	l12279
  3765                           
  3766                           ; BSR set to: 4
  3767                           ;My_terminal.c: 36: op3[i] = '\0';
  3768                           
  3769                           ; BSR set to: 4
  3770  010F96  0104               	movlb	4	; () banked
  3771  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3772  010F9A  0D01               	mullw	1
  3773  010F9C  0E81               	movlw	low terminal_task@op3
  3774  010F9E  24F3               	addwf	prodl,w,c
  3775  010FA0  6ED9               	movwf	fsr2l,c
  3776  010FA2  0E02               	movlw	high terminal_task@op3
  3777  010FA4  20F4               	addwfc	prodh,w,c
  3778  010FA6  6EDA               	movwf	fsr2h,c
  3779  010FA8  0E00               	movlw	0
  3780  010FAA  6EDF               	movwf	indf2,c
  3781                           
  3782                           ; BSR set to: 4
  3783                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3784  010FAC  C191  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3785  010FB0  C192  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3786  010FB4  0E36               	movlw	low terminal_task@op0
  3787  010FB6  0100               	movlb	0	; () banked
  3788  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3789  010FBA  0E02               	movlw	high terminal_task@op0
  3790  010FBC  0100               	movlb	0	; () banked
  3791  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3792  010FC0  0E4F               	movlw	low terminal_task@op1
  3793  010FC2  0100               	movlb	0	; () banked
  3794  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3795  010FC6  0E02               	movlw	high terminal_task@op1
  3796  010FC8  0100               	movlb	0	; () banked
  3797  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3798  010FCC  0E68               	movlw	low terminal_task@op2
  3799  010FCE  0100               	movlb	0	; () banked
  3800  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3801  010FD2  0E02               	movlw	high terminal_task@op2
  3802  010FD4  0100               	movlb	0	; () banked
  3803  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3804  010FD8  0E81               	movlw	low terminal_task@op3
  3805  010FDA  0100               	movlb	0	; () banked
  3806  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3807  010FDE  0E02               	movlw	high terminal_task@op3
  3808  010FE0  0100               	movlb	0	; () banked
  3809  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3810  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3811                           
  3812                           ;My_terminal.c: 38: break;
  3813  010FE8  0012               	return	
  3814  010FEA                     l12287:
  3815                           
  3816                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3817  010FEA  0E80               	movlw	low terminal_task@command
  3818  010FEC  0100               	movlb	0	; () banked
  3819  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3820  010FF0  0E01               	movlw	high terminal_task@command
  3821  010FF2  0100               	movlb	0	; () banked
  3822  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3823  010FF6  0E00               	movlw	0
  3824  010FF8  0100               	movlb	0	; () banked
  3825  010FFA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3826  010FFC  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3827                           
  3828                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3829  011000  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3830  011004  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3831  011008  0E20               	movlw	32
  3832  01100A  0100               	movlb	0	; () banked
  3833  01100C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3834  01100E  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3835                           
  3836                           ;My_terminal.c: 42: break;
  3837  011012  0012               	return	
  3838  011014                     l12289:
  3839                           
  3840                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3841  011014  0E80               	movlw	low terminal_task@command
  3842  011016  0100               	movlb	0	; () banked
  3843  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3844  01101A  0E01               	movlw	high terminal_task@command
  3845  01101C  0100               	movlb	0	; () banked
  3846  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3847  011020  ECC3  F0AC         	call	_ringbuf_backspace	;wreg free
  3848                           
  3849                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3850  011024  C191  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3851  011028  C192  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3852  01102C  0EE3               	movlw	low STR_96
  3853  01102E  0100               	movlb	0	; () banked
  3854  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3855  011032  0EFF               	movlw	high STR_96
  3856  011034  0100               	movlb	0	; () banked
  3857  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3858  011038  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  3859                           
  3860                           ;My_terminal.c: 46: break;
  3861  01103C  0012               	return	
  3862  01103E                     l12293:
  3863                           
  3864                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3865  01103E  0E00               	movlw	0
  3866  011040  0104               	movlb	4	; () banked
  3867  011042  6F66               	movwf	terminal_task@i_3549& (0+255),b
  3868  011044  D00E               	goto	l12299
  3869  011046                     l12295:
  3870  011046  C191  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3871  01104A  C192  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3872  01104E  0EE3               	movlw	low STR_96
  3873  011050  0100               	movlb	0	; () banked
  3874  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3875  011054  0EFF               	movlw	high STR_96
  3876  011056  0100               	movlb	0	; () banked
  3877  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3878  01105A  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  3879  01105E  0104               	movlb	4	; () banked
  3880  011060  2B66               	incf	terminal_task@i_3549& (0+255),f,b
  3881  011062                     l12299:
  3882                           
  3883                           ; BSR set to: 4
  3884  011062  0E80               	movlw	low terminal_task@command
  3885  011064  0100               	movlb	0	; () banked
  3886  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3887  011068  0E01               	movlw	high terminal_task@command
  3888  01106A  0100               	movlb	0	; () banked
  3889  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3890  01106E  EC2A  F0A1         	call	_ringbuf_num	;wreg free
  3891  011072  0104               	movlb	4	; () banked
  3892  011074  5166               	movf	terminal_task@i_3549& (0+255),w,b
  3893  011076  0101               	movlb	1	; () banked
  3894  011078  6F95               	movwf	??_terminal_task& (0+255),b
  3895  01107A  6B96               	clrf	(??_terminal_task+1)& (0+255),b
  3896  01107C  0100               	movlb	0	; () banked
  3897  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3898  011080  0101               	movlb	1	; () banked
  3899  011082  5D95               	subwf	??_terminal_task& (0+255),w,b
  3900  011084  0100               	movlb	0	; () banked
  3901  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3902  011088  0101               	movlb	1	; () banked
  3903  01108A  5996               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3904  01108C  A0D8               	btfss	status,0,c
  3905  01108E  D7DB               	goto	l12295
  3906                           
  3907                           ; BSR set to: 1
  3908                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3909                           
  3910                           ; BSR set to: 1
  3911  011090  0E80               	movlw	low terminal_task@command
  3912  011092  0100               	movlb	0	; () banked
  3913  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3914  011096  0E01               	movlw	high terminal_task@command
  3915  011098  0100               	movlb	0	; () banked
  3916  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3917  01109C  EC86  F0B5         	call	_ringbuf_delete	;wreg free
  3918                           
  3919                           ;My_terminal.c: 50: break;
  3920  0110A0  0012               	return	
  3921  0110A2                     l12303:
  3922                           
  3923                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3924  0110A2  0E1F               	movlw	31
  3925  0110A4  0104               	movlb	4	; () banked
  3926  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  3927  0110A8  0012               	return	
  3928                           
  3929                           ; BSR set to: 4
  3930  0110AA  0E7F               	movlw	127
  3931  0110AC  0104               	movlb	4	; () banked
  3932  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  3933  0110B0  0012               	return	
  3934                           
  3935                           ; BSR set to: 4
  3936                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3937  0110B2  0E80               	movlw	low terminal_task@command
  3938  0110B4  0100               	movlb	0	; () banked
  3939  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3940  0110B8  0E01               	movlw	high terminal_task@command
  3941  0110BA  0100               	movlb	0	; () banked
  3942  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3943  0110BE  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3944  0110C2  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3945                           
  3946                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  3947  0110C6  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3948  0110CA  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3949  0110CE  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3950  0110D2  ECED  F0A5         	call	_ringbuf_put	;wreg free
  3951                           
  3952                           ;My_terminal.c: 57: }
  3953                           
  3954                           ;My_terminal.c: 55: }
  3955                           ;My_terminal.c: 56: break;
  3956  0110D6  0012               	return	
  3957  0110D8                     l12311:
  3958  0110D8  0104               	movlb	4	; () banked
  3959  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  3960                           
  3961                           ; Switch size 1, requested type "space"
  3962                           ; Number of cases is 4, Range of values is 8 to 127
  3963                           ; switch strategies available:
  3964                           ; Name         Instructions Cycles
  3965                           ; simple_byte           13     7 (average)
  3966                           ;	Chosen strategy is simple_byte
  3967  0110DC  0A08               	xorlw	8	; case 8
  3968  0110DE  B4D8               	btfsc	status,2,c
  3969  0110E0  D799               	goto	l12289
  3970  0110E2  0A05               	xorlw	5	; case 13
  3971  0110E4  B4D8               	btfsc	status,2,c
  3972  0110E6  D682               	goto	l12251
  3973  0110E8  0A2D               	xorlw	45	; case 32
  3974  0110EA  B4D8               	btfsc	status,2,c
  3975  0110EC  D77E               	goto	l12287
  3976  0110EE  0A5F               	xorlw	95	; case 127
  3977  0110F0  B4D8               	btfsc	status,2,c
  3978  0110F2  D7A5               	goto	l12293
  3979  0110F4  D7D6               	goto	l12303
  3980  0110F6                     __end_of_terminal_task:
  3981                           	opt stack 0
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           prodh	equ	0xFF4
  3987                           prodl	equ	0xFF3
  3988                           intcon	equ	0xFF2
  3989                           postinc0	equ	0xFEE
  3990                           wreg	equ	0xFE8
  3991                           postdec1	equ	0xFE5
  3992                           fsr1h	equ	0xFE2
  3993                           fsr1l	equ	0xFE1
  3994                           indf2	equ	0xFDF
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _terminal_operation *****************
  4000 ;; Defined at:
  4001 ;;		line 200 in file "ChargeStation_task.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4004 ;;		 -> usb_tx(8), 
  4005 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4006 ;;		 -> terminal_task@op0(25), 
  4007 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4008 ;;		 -> terminal_task@op1(25), 
  4009 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4010 ;;		 -> terminal_task@op2(25), 
  4011 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4012 ;;		 -> terminal_task@op3(25), 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  percentage      1  133[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:       11 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   18
  4031 ;; This function calls:
  4032 ;;		_atoi
  4033 ;;		_bootload
  4034 ;;		_ctmu_set_ratio
  4035 ;;		_ringbuf_put_str
  4036 ;;		_strcmp
  4037 ;;		_terminal_time
  4038 ;; This function is called by:
  4039 ;;		_terminal_task
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text2
  4044  0120C4                     __ptext2:
  4045                           	opt stack 0
  4046  0120C4                     _terminal_operation:
  4047                           	opt stack 11
  4048                           
  4049                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4050                           
  4051                           ;incstack = 0
  4052  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4053  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4054  0120CC  0ED9               	movlw	low STR_11
  4055  0120CE  0100               	movlb	0	; () banked
  4056  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4057  0120D2  0EFF               	movlw	high STR_11
  4058  0120D4  0100               	movlb	0	; () banked
  4059  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4060  0120D8  EC11  F0B2         	call	_strcmp	;wreg free
  4061  0120DC  0100               	movlb	0	; () banked
  4062  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4063  0120E0  0100               	movlb	0	; () banked
  4064  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4065  0120E4  B4D8               	btfsc	status,2,c
  4066  0120E6  D012               	goto	l11809
  4067                           
  4068                           ; BSR set to: 0
  4069  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4070  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4071  0120F0  0EFD               	movlw	low STR_12
  4072  0120F2  0100               	movlb	0	; () banked
  4073  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4074  0120F6  0EFF               	movlw	high STR_12
  4075  0120F8  0100               	movlb	0	; () banked
  4076  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4077  0120FC  EC11  F0B2         	call	_strcmp	;wreg free
  4078  012100  0100               	movlb	0	; () banked
  4079  012102  5160               	movf	?_strcmp& (0+255),w,b
  4080  012104  0100               	movlb	0	; () banked
  4081  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4082  012108  A4D8               	btfss	status,2,c
  4083  01210A  D00C               	goto	l11811
  4084  01210C                     l11809:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4088                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4089                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4090                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4091                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4092                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4093                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4094                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4095  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4096  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4097  012114  0EE6               	movlw	low STR_13
  4098  012116  0100               	movlb	0	; () banked
  4099  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4100  01211A  0EFB               	movlw	high STR_13
  4101  01211C  0100               	movlb	0	; () banked
  4102  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4103  012120  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  4104  012124                     l11811:
  4105                           
  4106                           ;ChargeStation_task.c: 216: }
  4107                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4108  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4109  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4110  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4111  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4112  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4113  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4114  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4115  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4116  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4117                           
  4118                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4119  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4120  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4121  012150  0E70               	movlw	low STR_14
  4122  012152  0100               	movlb	0	; () banked
  4123  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4124  012156  0EFF               	movlw	high STR_14
  4125  012158  0100               	movlb	0	; () banked
  4126  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4127  01215C  EC11  F0B2         	call	_strcmp	;wreg free
  4128  012160  0100               	movlb	0	; () banked
  4129  012162  5160               	movf	?_strcmp& (0+255),w,b
  4130  012164  0100               	movlb	0	; () banked
  4131  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4132  012168  B4D8               	btfsc	status,2,c
  4133                           
  4134                           ; BSR set to: 0
  4135  01216A  00FF               	reset		;# 
  4136                           
  4137                           ;ChargeStation_task.c: 220: }
  4138                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4139  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4140  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4141  012174  0E79               	movlw	low STR_15
  4142  012176  0100               	movlb	0	; () banked
  4143  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4144  01217A  0EFF               	movlw	high STR_15
  4145  01217C  0100               	movlb	0	; () banked
  4146  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4147  012180  EC11  F0B2         	call	_strcmp	;wreg free
  4148  012184  0100               	movlb	0	; () banked
  4149  012186  5160               	movf	?_strcmp& (0+255),w,b
  4150  012188  0100               	movlb	0	; () banked
  4151  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4152  01218C  B4D8               	btfsc	status,2,c
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;ChargeStation_task.c: 222: bootload();
  4156  01218E  EC32  F0B3         	call	_bootload	;wreg free
  4157                           
  4158                           ;ChargeStation_task.c: 223: }
  4159                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4160  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4161  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4162  01219A  0EEE               	movlw	low STR_16
  4163  01219C  0100               	movlb	0	; () banked
  4164  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4165  0121A0  0EFF               	movlw	high STR_16
  4166  0121A2  0100               	movlb	0	; () banked
  4167  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4168  0121A6  EC11  F0B2         	call	_strcmp	;wreg free
  4169  0121AA  0100               	movlb	0	; () banked
  4170  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4171  0121AE  0100               	movlb	0	; () banked
  4172  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4173  0121B2  B4D8               	btfsc	status,2,c
  4174  0121B4  D012               	goto	l11825
  4175                           
  4176                           ; BSR set to: 0
  4177  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4178  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4179  0121BE  0E31               	movlw	low STR_17
  4180  0121C0  0100               	movlb	0	; () banked
  4181  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4182  0121C4  0EFF               	movlw	high STR_17
  4183  0121C6  0100               	movlb	0	; () banked
  4184  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4185  0121CA  EC11  F0B2         	call	_strcmp	;wreg free
  4186  0121CE  0100               	movlb	0	; () banked
  4187  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4188  0121D2  0100               	movlb	0	; () banked
  4189  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4190  0121D6  A4D8               	btfss	status,2,c
  4191  0121D8  D002               	goto	l11827
  4192  0121DA                     l11825:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4196  0121DA  0E01               	movlw	1
  4197  0121DC  6E23               	movwf	_terminal_data_out,c
  4198  0121DE                     l11827:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;ChargeStation_task.c: 226: }
  4202                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4203  0121DE  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4204  0121E2  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4205  0121E6  0EE6               	movlw	low (STR_96+3)
  4206  0121E8  0100               	movlb	0	; () banked
  4207  0121EA  6F62               	movwf	strcmp@s2& (0+255),b
  4208  0121EC  0EFF               	movlw	high (STR_96+3)
  4209  0121EE  0100               	movlb	0	; () banked
  4210  0121F0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4211  0121F2  EC11  F0B2         	call	_strcmp	;wreg free
  4212  0121F6  0100               	movlb	0	; () banked
  4213  0121F8  5160               	movf	?_strcmp& (0+255),w,b
  4214  0121FA  0100               	movlb	0	; () banked
  4215  0121FC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4216  0121FE  A4D8               	btfss	status,2,c
  4217  012200  D002               	goto	l11831
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4221  012202  0E00               	movlw	0
  4222  012204  6E23               	movwf	_terminal_data_out,c
  4223  012206                     l11831:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;ChargeStation_task.c: 229: }
  4227                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4228  012206  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4229  01220A  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4230  01220E  0EC3               	movlw	low STR_19
  4231  012210  0100               	movlb	0	; () banked
  4232  012212  6F62               	movwf	strcmp@s2& (0+255),b
  4233  012214  0EFF               	movlw	high STR_19
  4234  012216  0100               	movlb	0	; () banked
  4235  012218  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4236  01221A  EC11  F0B2         	call	_strcmp	;wreg free
  4237  01221E  0100               	movlb	0	; () banked
  4238  012220  5160               	movf	?_strcmp& (0+255),w,b
  4239  012222  0100               	movlb	0	; () banked
  4240  012224  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4241  012226  A4D8               	btfss	status,2,c
  4242  012228  0012               	return	
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4246  01222A  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4247  01222E  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4248  012232  0E53               	movlw	low STR_20
  4249  012234  0100               	movlb	0	; () banked
  4250  012236  6F62               	movwf	strcmp@s2& (0+255),b
  4251  012238  0EFF               	movlw	high STR_20
  4252  01223A  0100               	movlb	0	; () banked
  4253  01223C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4254  01223E  EC11  F0B2         	call	_strcmp	;wreg free
  4255  012242  0100               	movlb	0	; () banked
  4256  012244  5160               	movf	?_strcmp& (0+255),w,b
  4257  012246  0100               	movlb	0	; () banked
  4258  012248  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4259  01224A  B4D8               	btfsc	status,2,c
  4260  01224C  D012               	goto	l11837
  4261                           
  4262                           ; BSR set to: 0
  4263  01224E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4264  012252  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4265  012256  0EDE               	movlw	low STR_21
  4266  012258  0100               	movlb	0	; () banked
  4267  01225A  6F62               	movwf	strcmp@s2& (0+255),b
  4268  01225C  0EFF               	movlw	high STR_21
  4269  01225E  0100               	movlb	0	; () banked
  4270  012260  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4271  012262  EC11  F0B2         	call	_strcmp	;wreg free
  4272  012266  0100               	movlb	0	; () banked
  4273  012268  5160               	movf	?_strcmp& (0+255),w,b
  4274  01226A  0100               	movlb	0	; () banked
  4275  01226C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4276  01226E  A4D8               	btfss	status,2,c
  4277  012270  D02C               	goto	l11849
  4278  012272                     l11837:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4282  012272  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4283  012276  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4284  01227A  EC38  F0A0         	call	_atoi	;wreg free
  4285  01227E  0100               	movlb	0	; () banked
  4286  012280  517C               	movf	?_atoi& (0+255),w,b
  4287  012282  0100               	movlb	0	; () banked
  4288  012284  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4292  012286  0E65               	movlw	101
  4293  012288  0100               	movlb	0	; () banked
  4294  01228A  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4295  01228C  D012               	goto	l11847
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4299  01228E  C0E5  F019         	movff	terminal_operation@percentage,_ctmu_ratio
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4303  012292  5019               	movf	_ctmu_ratio,w,c
  4304  012294  ECA1  F0A1         	call	_ctmu_set_ratio
  4305                           
  4306                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4307  012298  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4308  01229C  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4309  0122A0  0E1D               	movlw	low STR_22
  4310  0122A2  0100               	movlb	0	; () banked
  4311  0122A4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4312  0122A6  0EFE               	movlw	high STR_22
  4313  0122A8  0100               	movlb	0	; () banked
  4314  0122AA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4315  0122AC  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  4316                           
  4317                           ;ChargeStation_task.c: 237: } else {
  4318  0122B0  D00C               	goto	l11849
  4319  0122B2                     l11847:
  4320                           
  4321                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4322  0122B2  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4323  0122B6  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4324  0122BA  0EBD               	movlw	low STR_23
  4325  0122BC  0100               	movlb	0	; () banked
  4326  0122BE  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4327  0122C0  0EFD               	movlw	high STR_23
  4328  0122C2  0100               	movlb	0	; () banked
  4329  0122C4  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4330  0122C6  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  4331  0122CA                     l11849:
  4332                           
  4333                           ;ChargeStation_task.c: 239: }
  4334                           ;ChargeStation_task.c: 240: }
  4335                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4336  0122CA  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4337  0122CE  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4338  0122D2  0EC9               	movlw	low STR_24
  4339  0122D4  0100               	movlb	0	; () banked
  4340  0122D6  6F62               	movwf	strcmp@s2& (0+255),b
  4341  0122D8  0EFF               	movlw	high STR_24
  4342  0122DA  0100               	movlb	0	; () banked
  4343  0122DC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4344  0122DE  EC11  F0B2         	call	_strcmp	;wreg free
  4345  0122E2  0100               	movlb	0	; () banked
  4346  0122E4  5160               	movf	?_strcmp& (0+255),w,b
  4347  0122E6  0100               	movlb	0	; () banked
  4348  0122E8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4349  0122EA  B4D8               	btfsc	status,2,c
  4350  0122EC  D012               	goto	l11853
  4351                           
  4352                           ; BSR set to: 0
  4353  0122EE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4354  0122F2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4355  0122F6  0ED2               	movlw	low (STR_107+3)
  4356  0122F8  0100               	movlb	0	; () banked
  4357  0122FA  6F62               	movwf	strcmp@s2& (0+255),b
  4358  0122FC  0EFF               	movlw	high (STR_107+3)
  4359  0122FE  0100               	movlb	0	; () banked
  4360  012300  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4361  012302  EC11  F0B2         	call	_strcmp	;wreg free
  4362  012306  0100               	movlb	0	; () banked
  4363  012308  5160               	movf	?_strcmp& (0+255),w,b
  4364  01230A  0100               	movlb	0	; () banked
  4365  01230C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4366  01230E  A4D8               	btfss	status,2,c
  4367  012310  0012               	return	
  4368  012312                     l11853:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4372  012312  5019               	movf	_ctmu_ratio,w,c
  4373  012314  ECA1  F0A1         	call	_ctmu_set_ratio
  4374                           
  4375                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4376  012318  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4377  01231C  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4378  012320  0E4D               	movlw	low STR_26
  4379  012322  0100               	movlb	0	; () banked
  4380  012324  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4381  012326  0EFE               	movlw	high STR_26
  4382  012328  0100               	movlb	0	; () banked
  4383  01232A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4384  01232C  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  4385  012330  0012               	return	
  4386  012332                     __end_of_terminal_operation:
  4387                           	opt stack 0
  4388                           tblptru	equ	0xFF8
  4389                           tblptrh	equ	0xFF7
  4390                           tblptrl	equ	0xFF6
  4391                           tablat	equ	0xFF5
  4392                           prodh	equ	0xFF4
  4393                           prodl	equ	0xFF3
  4394                           intcon	equ	0xFF2
  4395                           postinc0	equ	0xFEE
  4396                           wreg	equ	0xFE8
  4397                           postdec1	equ	0xFE5
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           indf2	equ	0xFDF
  4401                           fsr2h	equ	0xFDA
  4402                           fsr2l	equ	0xFD9
  4403                           status	equ	0xFD8
  4404                           
  4405 ;; *************** function _terminal_time *****************
  4406 ;; Defined at:
  4407 ;;		line 93 in file "../My_library/My_terminal.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4410 ;;		 -> usb_tx(8), 
  4411 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4412 ;;		 -> terminal_task@op0(25), 
  4413 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4414 ;;		 -> terminal_task@op1(25), 
  4415 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4416 ;;		 -> terminal_task@op2(25), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;		None               void
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4428 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;Total ram usage:        9 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:   17
  4435 ;; This function calls:
  4436 ;;		_atoi
  4437 ;;		_month_length
  4438 ;;		_print_time
  4439 ;;		_strcmp
  4440 ;;		_terminal_at_hand
  4441 ;; This function is called by:
  4442 ;;		_terminal_operation
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text3
  4447  0109E0                     __ptext3:
  4448                           	opt stack 0
  4449  0109E0                     _terminal_time:
  4450                           	opt stack 11
  4451                           
  4452                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4453                           
  4454                           ;incstack = 0
  4455  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4456  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4457  0109E8  0E3D               	movlw	low STR_102
  4458  0109EA  0100               	movlb	0	; () banked
  4459  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4460  0109EE  0EFF               	movlw	high STR_102
  4461  0109F0  0100               	movlb	0	; () banked
  4462  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4463  0109F4  EC11  F0B2         	call	_strcmp	;wreg free
  4464  0109F8  0100               	movlb	0	; () banked
  4465  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4466  0109FC  0100               	movlb	0	; () banked
  4467  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4468  010A00  B4D8               	btfsc	status,2,c
  4469  010A02  D012               	goto	l10971
  4470                           
  4471                           ; BSR set to: 0
  4472  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4473  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4474  010A0C  0EEC               	movlw	low (STR_104+1)
  4475  010A0E  0100               	movlb	0	; () banked
  4476  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4477  010A12  0EFF               	movlw	high (STR_104+1)
  4478  010A14  0100               	movlb	0	; () banked
  4479  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4480  010A18  EC11  F0B2         	call	_strcmp	;wreg free
  4481  010A1C  0100               	movlb	0	; () banked
  4482  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4483  010A20  0100               	movlb	0	; () banked
  4484  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4485  010A24  A4D8               	btfss	status,2,c
  4486  010A26  D006               	goto	l10973
  4487  010A28                     l10971:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;My_terminal.c: 95: print_time(tx);
  4491  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4492  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4493  010A30  ECDF  F0AD         	call	_print_time	;wreg free
  4494  010A34                     l10973:
  4495                           
  4496                           ;My_terminal.c: 96: }
  4497                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4498  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4499  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4500  010A3C  0EEB               	movlw	low STR_104
  4501  010A3E  0100               	movlb	0	; () banked
  4502  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4503  010A42  0EFF               	movlw	high STR_104
  4504  010A44  0100               	movlb	0	; () banked
  4505  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4506  010A48  EC11  F0B2         	call	_strcmp	;wreg free
  4507  010A4C  0100               	movlb	0	; () banked
  4508  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4509  010A50  0100               	movlb	0	; () banked
  4510  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4511  010A54  B4D8               	btfsc	status,2,c
  4512  010A56  D012               	goto	l10977
  4513                           
  4514                           ; BSR set to: 0
  4515  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4516  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4517  010A60  0E19               	movlw	low STR_105
  4518  010A62  0100               	movlb	0	; () banked
  4519  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4520  010A66  0EFF               	movlw	high STR_105
  4521  010A68  0100               	movlb	0	; () banked
  4522  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4523  010A6C  EC11  F0B2         	call	_strcmp	;wreg free
  4524  010A70  0100               	movlb	0	; () banked
  4525  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4526  010A74  0100               	movlb	0	; () banked
  4527  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4528  010A78  A4D8               	btfss	status,2,c
  4529  010A7A  0012               	return	
  4530  010A7C                     l10977:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4534  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4535  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4536  010A84  0EE9               	movlw	low (STR_111+2)
  4537  010A86  0100               	movlb	0	; () banked
  4538  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4539  010A8A  0EFF               	movlw	high (STR_111+2)
  4540  010A8C  0100               	movlb	0	; () banked
  4541  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4542  010A90  EC11  F0B2         	call	_strcmp	;wreg free
  4543  010A94  0100               	movlb	0	; () banked
  4544  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4545  010A98  0100               	movlb	0	; () banked
  4546  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4547  010A9C  B4D8               	btfsc	status,2,c
  4548  010A9E  D012               	goto	l10981
  4549                           
  4550                           ; BSR set to: 0
  4551  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4552  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4553  010AA8  0ECF               	movlw	low STR_107
  4554  010AAA  0100               	movlb	0	; () banked
  4555  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4556  010AAE  0EFF               	movlw	high STR_107
  4557  010AB0  0100               	movlb	0	; () banked
  4558  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4559  010AB4  EC11  F0B2         	call	_strcmp	;wreg free
  4560  010AB8  0100               	movlb	0	; () banked
  4561  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4562  010ABC  0100               	movlb	0	; () banked
  4563  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4564  010AC0  A4D8               	btfss	status,2,c
  4565  010AC2  D01C               	goto	l10983
  4566  010AC4                     l10981:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4570  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4571  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4572  010ACC  0E7C               	movlw	low (_now+10)
  4573  010ACE  0100               	movlb	0	; () banked
  4574  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4575  010AD2  0E01               	movlw	high (_now+10)
  4576  010AD4  0100               	movlb	0	; () banked
  4577  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4578  010AD8  0E00               	movlw	0
  4579  010ADA  0100               	movlb	0	; () banked
  4580  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4581  010ADE  0E63               	movlw	99
  4582  010AE0  0100               	movlb	0	; () banked
  4583  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4584  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4585  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4586  010AEC  EC38  F0A0         	call	_atoi	;wreg free
  4587  010AF0  0100               	movlb	0	; () banked
  4588  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4589  010AF4  0100               	movlb	0	; () banked
  4590  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4591  010AF8  ECB1  F0B1         	call	_terminal_at_hand	;wreg free
  4592  010AFC                     l10983:
  4593                           
  4594                           ;My_terminal.c: 100: }
  4595                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4596  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4597  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4598  010B04  0EF1               	movlw	low STR_108
  4599  010B06  0100               	movlb	0	; () banked
  4600  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4601  010B0A  0EFF               	movlw	high STR_108
  4602  010B0C  0100               	movlb	0	; () banked
  4603  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4604  010B10  EC11  F0B2         	call	_strcmp	;wreg free
  4605  010B14  0100               	movlb	0	; () banked
  4606  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4607  010B18  0100               	movlb	0	; () banked
  4608  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4609  010B1C  B4D8               	btfsc	status,2,c
  4610  010B1E  D012               	goto	l10987
  4611                           
  4612                           ; BSR set to: 0
  4613  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4614  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4615  010B28  0E9F               	movlw	low STR_109
  4616  010B2A  0100               	movlb	0	; () banked
  4617  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4618  010B2E  0EFF               	movlw	high STR_109
  4619  010B30  0100               	movlb	0	; () banked
  4620  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4621  010B34  EC11  F0B2         	call	_strcmp	;wreg free
  4622  010B38  0100               	movlb	0	; () banked
  4623  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4624  010B3C  0100               	movlb	0	; () banked
  4625  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4626  010B40  A4D8               	btfss	status,2,c
  4627  010B42  D01C               	goto	l10989
  4628  010B44                     l10987:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4632  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4633  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4634  010B4C  0E7B               	movlw	low (_now+9)
  4635  010B4E  0100               	movlb	0	; () banked
  4636  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4637  010B52  0E01               	movlw	high (_now+9)
  4638  010B54  0100               	movlb	0	; () banked
  4639  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4640  010B58  0E01               	movlw	1
  4641  010B5A  0100               	movlb	0	; () banked
  4642  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4643  010B5E  0E0C               	movlw	12
  4644  010B60  0100               	movlb	0	; () banked
  4645  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4646  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4647  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4648  010B6C  EC38  F0A0         	call	_atoi	;wreg free
  4649  010B70  0100               	movlb	0	; () banked
  4650  010B72  517C               	movf	?_atoi& (0+255),w,b
  4651  010B74  0100               	movlb	0	; () banked
  4652  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4653  010B78  ECB1  F0B1         	call	_terminal_at_hand	;wreg free
  4654  010B7C                     l10989:
  4655                           
  4656                           ;My_terminal.c: 103: }
  4657                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4658  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4659  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4660  010B84  0EFF               	movlw	low (STR_27+30)
  4661  010B86  0100               	movlb	0	; () banked
  4662  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4663  010B8A  0EFD               	movlw	high (STR_27+30)
  4664  010B8C  0100               	movlb	0	; () banked
  4665  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4666  010B90  EC11  F0B2         	call	_strcmp	;wreg free
  4667  010B94  0100               	movlb	0	; () banked
  4668  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4669  010B98  0100               	movlb	0	; () banked
  4670  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4671  010B9C  B4D8               	btfsc	status,2,c
  4672  010B9E  D012               	goto	l10993
  4673                           
  4674                           ; BSR set to: 0
  4675  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4676  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4677  010BA8  0EE7               	movlw	low STR_111
  4678  010BAA  0100               	movlb	0	; () banked
  4679  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4680  010BAE  0EFF               	movlw	high STR_111
  4681  010BB0  0100               	movlb	0	; () banked
  4682  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4683  010BB4  EC11  F0B2         	call	_strcmp	;wreg free
  4684  010BB8  0100               	movlb	0	; () banked
  4685  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4686  010BBC  0100               	movlb	0	; () banked
  4687  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4688  010BC0  A4D8               	btfss	status,2,c
  4689  010BC2  D023               	goto	l10997
  4690  010BC4                     l10993:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4694  010BC4  C17B  F066         	movff	_now+9,month_length@month
  4695  010BC8  0101               	movlb	1	; () banked
  4696  010BCA  517C               	movf	(_now+10)& (0+255),w,b
  4697  010BCC  EC65  F0A3         	call	_month_length
  4698  010BD0  0100               	movlb	0	; () banked
  4699  010BD2  6FDA               	movwf	_terminal_time$6796& (0+255),b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4703  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4704  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4705  010BDC  0E7A               	movlw	low (_now+8)
  4706  010BDE  0100               	movlb	0	; () banked
  4707  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4708  010BE2  0E01               	movlw	high (_now+8)
  4709  010BE4  0100               	movlb	0	; () banked
  4710  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4711  010BE8  0E01               	movlw	1
  4712  010BEA  0100               	movlb	0	; () banked
  4713  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4714  010BEE  C0DA  F0D0         	movff	_terminal_time$6796,terminal_at_hand@max
  4715  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4716  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4717  010BFA  EC38  F0A0         	call	_atoi	;wreg free
  4718  010BFE  0100               	movlb	0	; () banked
  4719  010C00  517C               	movf	?_atoi& (0+255),w,b
  4720  010C02  0100               	movlb	0	; () banked
  4721  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4722  010C06  ECB1  F0B1         	call	_terminal_at_hand	;wreg free
  4723  010C0A                     l10997:
  4724                           
  4725                           ;My_terminal.c: 106: }
  4726                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4727  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4728  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4729  010C12  0E4B               	movlw	low (STR_28+22)
  4730  010C14  0100               	movlb	0	; () banked
  4731  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4732  010C18  0EFE               	movlw	high (STR_28+22)
  4733  010C1A  0100               	movlb	0	; () banked
  4734  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4735  010C1E  EC11  F0B2         	call	_strcmp	;wreg free
  4736  010C22  0100               	movlb	0	; () banked
  4737  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4738  010C26  0100               	movlb	0	; () banked
  4739  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4740  010C2A  B4D8               	btfsc	status,2,c
  4741  010C2C  D012               	goto	l11001
  4742                           
  4743                           ; BSR set to: 0
  4744  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4745  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4746  010C36  0ED4               	movlw	low STR_113
  4747  010C38  0100               	movlb	0	; () banked
  4748  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4749  010C3C  0EFF               	movlw	high STR_113
  4750  010C3E  0100               	movlb	0	; () banked
  4751  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4752  010C42  EC11  F0B2         	call	_strcmp	;wreg free
  4753  010C46  0100               	movlb	0	; () banked
  4754  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4755  010C4A  0100               	movlb	0	; () banked
  4756  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4757  010C4E  A4D8               	btfss	status,2,c
  4758  010C50  D01C               	goto	l11003
  4759  010C52                     l11001:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4763  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4764  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4765  010C5A  0E78               	movlw	low (_now+6)
  4766  010C5C  0100               	movlb	0	; () banked
  4767  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4768  010C60  0E01               	movlw	high (_now+6)
  4769  010C62  0100               	movlb	0	; () banked
  4770  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4771  010C66  0E00               	movlw	0
  4772  010C68  0100               	movlb	0	; () banked
  4773  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4774  010C6C  0E17               	movlw	23
  4775  010C6E  0100               	movlb	0	; () banked
  4776  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4777  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4778  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4779  010C7A  EC38  F0A0         	call	_atoi	;wreg free
  4780  010C7E  0100               	movlb	0	; () banked
  4781  010C80  517C               	movf	?_atoi& (0+255),w,b
  4782  010C82  0100               	movlb	0	; () banked
  4783  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4784  010C86  ECB1  F0B1         	call	_terminal_at_hand	;wreg free
  4785  010C8A                     l11003:
  4786                           
  4787                           ;My_terminal.c: 109: }
  4788                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4789  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4790  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4791  010C92  0EF3               	movlw	low STR_114
  4792  010C94  0100               	movlb	0	; () banked
  4793  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4794  010C98  0EFF               	movlw	high STR_114
  4795  010C9A  0100               	movlb	0	; () banked
  4796  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4797  010C9E  EC11  F0B2         	call	_strcmp	;wreg free
  4798  010CA2  0100               	movlb	0	; () banked
  4799  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4800  010CA6  0100               	movlb	0	; () banked
  4801  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4802  010CAA  B4D8               	btfsc	status,2,c
  4803  010CAC  D012               	goto	l11007
  4804                           
  4805                           ; BSR set to: 0
  4806  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4807  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4808  010CB6  0E98               	movlw	low STR_115
  4809  010CB8  0100               	movlb	0	; () banked
  4810  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4811  010CBC  0EFF               	movlw	high STR_115
  4812  010CBE  0100               	movlb	0	; () banked
  4813  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4814  010CC2  EC11  F0B2         	call	_strcmp	;wreg free
  4815  010CC6  0100               	movlb	0	; () banked
  4816  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4817  010CCA  0100               	movlb	0	; () banked
  4818  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4819  010CCE  A4D8               	btfss	status,2,c
  4820  010CD0  D01C               	goto	l11009
  4821  010CD2                     l11007:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4825  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4826  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4827  010CDA  0E77               	movlw	low (_now+5)
  4828  010CDC  0100               	movlb	0	; () banked
  4829  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4830  010CE0  0E01               	movlw	high (_now+5)
  4831  010CE2  0100               	movlb	0	; () banked
  4832  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4833  010CE6  0E00               	movlw	0
  4834  010CE8  0100               	movlb	0	; () banked
  4835  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4836  010CEC  0E3B               	movlw	59
  4837  010CEE  0100               	movlb	0	; () banked
  4838  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4839  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4840  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4841  010CFA  EC38  F0A0         	call	_atoi	;wreg free
  4842  010CFE  0100               	movlb	0	; () banked
  4843  010D00  517C               	movf	?_atoi& (0+255),w,b
  4844  010D02  0100               	movlb	0	; () banked
  4845  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4846  010D06  ECB1  F0B1         	call	_terminal_at_hand	;wreg free
  4847  010D0A                     l11009:
  4848                           
  4849                           ;My_terminal.c: 112: }
  4850                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4851  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4852  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4853  010D12  0EC1               	movlw	low (STR_30+4)
  4854  010D14  0100               	movlb	0	; () banked
  4855  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4856  010D18  0EFF               	movlw	high (STR_30+4)
  4857  010D1A  0100               	movlb	0	; () banked
  4858  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4859  010D1E  EC11  F0B2         	call	_strcmp	;wreg free
  4860  010D22  0100               	movlb	0	; () banked
  4861  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4862  010D26  0100               	movlb	0	; () banked
  4863  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4864  010D2A  B4D8               	btfsc	status,2,c
  4865  010D2C  D012               	goto	l11013
  4866                           
  4867                           ; BSR set to: 0
  4868  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4869  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4870  010D36  0E91               	movlw	low STR_117
  4871  010D38  0100               	movlb	0	; () banked
  4872  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4873  010D3C  0EFF               	movlw	high STR_117
  4874  010D3E  0100               	movlb	0	; () banked
  4875  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4876  010D42  EC11  F0B2         	call	_strcmp	;wreg free
  4877  010D46  0100               	movlb	0	; () banked
  4878  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4879  010D4A  0100               	movlb	0	; () banked
  4880  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4881  010D4E  A4D8               	btfss	status,2,c
  4882  010D50  0012               	return	
  4883  010D52                     l11013:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4887  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4888  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4889  010D5A  0E76               	movlw	low (_now+4)
  4890  010D5C  0100               	movlb	0	; () banked
  4891  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4892  010D60  0E01               	movlw	high (_now+4)
  4893  010D62  0100               	movlb	0	; () banked
  4894  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4895  010D66  0E00               	movlw	0
  4896  010D68  0100               	movlb	0	; () banked
  4897  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4898  010D6C  0E3B               	movlw	59
  4899  010D6E  0100               	movlb	0	; () banked
  4900  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4901  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4902  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4903  010D7A  EC38  F0A0         	call	_atoi	;wreg free
  4904  010D7E  0100               	movlb	0	; () banked
  4905  010D80  517C               	movf	?_atoi& (0+255),w,b
  4906  010D82  0100               	movlb	0	; () banked
  4907  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4908  010D86  ECB1  F0B1         	call	_terminal_at_hand	;wreg free
  4909  010D8A  0012               	return	
  4910  010D8C                     __end_of_terminal_time:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           postdec1	equ	0xFE5
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           indf2	equ	0xFDF
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _terminal_at_hand *****************
  4930 ;; Defined at:
  4931 ;;		line 82 in file "../My_library/My_terminal.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4934 ;;		 -> usb_tx(8), 
  4935 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  4936 ;;		 -> now(14), 
  4937 ;;  min             1  111[BANK0 ] unsigned char 
  4938 ;;  max             1  112[BANK0 ] unsigned char 
  4939 ;;  value           1  113[BANK0 ] unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;		None               void
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4951 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;Total ram usage:        7 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:   16
  4958 ;; This function calls:
  4959 ;;		_RTCC_from_caltime
  4960 ;;		_print_time
  4961 ;;		_ringbuf_put_str
  4962 ;; This function is called by:
  4963 ;;		_terminal_time
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text4
  4968  016362                     __ptext4:
  4969                           	opt stack 0
  4970  016362                     _terminal_at_hand:
  4971                           	opt stack 11
  4972                           
  4973                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4974                           
  4975                           ;incstack = 0
  4976  016362  0100               	movlb	0	; () banked
  4977  016364  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  4978  016366  0100               	movlb	0	; () banked
  4979  016368  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  4980  01636A  A0D8               	btfss	status,0,c
  4981  01636C  D01D               	goto	l10859
  4982                           
  4983                           ; BSR set to: 0
  4984  01636E  0100               	movlb	0	; () banked
  4985  016370  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  4986  016372  0100               	movlb	0	; () banked
  4987  016374  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  4988  016376  A0D8               	btfss	status,0,c
  4989  016378  D017               	goto	l10859
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;My_terminal.c: 84: *hand = value;
  4993  01637A  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4994  01637E  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4995  016382  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4999  016386  0E72               	movlw	low _now
  5000  016388  0100               	movlb	0	; () banked
  5001  01638A  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5002  01638C  0E01               	movlw	high _now
  5003  01638E  0100               	movlb	0	; () banked
  5004  016390  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5005  016392  EC73  F0B5         	call	_RTCC_from_caltime	;wreg free
  5006                           
  5007                           ;My_terminal.c: 86: time_change_flag = 1;
  5008  016396  0E01               	movlw	1
  5009  016398  6E25               	movwf	_time_change_flag,c
  5010                           
  5011                           ;My_terminal.c: 87: print_time(tx);
  5012  01639A  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5013  01639E  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5014  0163A2  ECDF  F0AD         	call	_print_time	;wreg free
  5015                           
  5016                           ;My_terminal.c: 88: } else {
  5017  0163A6  0012               	return	
  5018  0163A8                     l10859:
  5019                           
  5020                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5021  0163A8  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5022  0163AC  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5023  0163B0  0E82               	movlw	low STR_101
  5024  0163B2  0100               	movlb	0	; () banked
  5025  0163B4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5026  0163B6  0EFF               	movlw	high STR_101
  5027  0163B8  0100               	movlb	0	; () banked
  5028  0163BA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5029  0163BC  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  5030  0163C0  0012               	return	
  5031  0163C2                     __end_of_terminal_at_hand:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           postinc0	equ	0xFEE
  5041                           wreg	equ	0xFE8
  5042                           postdec1	equ	0xFE5
  5043                           fsr1h	equ	0xFE2
  5044                           fsr1l	equ	0xFE1
  5045                           indf2	equ	0xFDF
  5046                           fsr2h	equ	0xFDA
  5047                           fsr2l	equ	0xFD9
  5048                           status	equ	0xFD8
  5049                           
  5050 ;; *************** function _print_time *****************
  5051 ;; Defined at:
  5052 ;;		line 68 in file "../My_library/My_terminal.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5055 ;;		 -> usb_tx(8), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  str            30   77[BANK0 ] unsigned char [30]
  5058 ;; Return value:  Size  Location     Type
  5059 ;;		None               void
  5060 ;; Registers used:
  5061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5071 ;;Total ram usage:       32 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:   15
  5074 ;; This function calls:
  5075 ;;		_RTCC_from_RTCC
  5076 ;;		_ringbuf_put_str
  5077 ;;		_sprintf
  5078 ;; This function is called by:
  5079 ;;		_terminal_at_hand
  5080 ;;		_terminal_time
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text5
  5085  015BBE                     __ptext5:
  5086                           	opt stack 0
  5087  015BBE                     _print_time:
  5088                           	opt stack 11
  5089                           
  5090                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5091                           
  5092                           ;incstack = 0
  5093  015BBE  0E72               	movlw	low _now
  5094  015BC0  0100               	movlb	0	; () banked
  5095  015BC2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5096  015BC4  0E01               	movlw	high _now
  5097  015BC6  0100               	movlb	0	; () banked
  5098  015BC8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5099  015BCA  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  5100                           
  5101                           ;My_terminal.c: 70: char str[30];
  5102                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5103                           ;My_terminal.c: 72: now.YY,
  5104                           ;My_terminal.c: 73: now.MM,
  5105                           ;My_terminal.c: 74: now.DD,
  5106                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5107                           ;My_terminal.c: 76: now.hh,
  5108                           ;My_terminal.c: 77: now.mm,
  5109                           ;My_terminal.c: 78: now.ss);
  5110  015BCE  0EAD               	movlw	low print_time@str
  5111  015BD0  0100               	movlb	0	; () banked
  5112  015BD2  6F83               	movwf	sprintf@sp& (0+255),b
  5113  015BD4  0E00               	movlw	high print_time@str
  5114  015BD6  0100               	movlb	0	; () banked
  5115  015BD8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5116  015BDA  0E98               	movlw	low STR_100
  5117  015BDC  0100               	movlb	0	; () banked
  5118  015BDE  6F85               	movwf	sprintf@f& (0+255),b
  5119  015BE0  0EFD               	movlw	high STR_100
  5120  015BE2  0100               	movlb	0	; () banked
  5121  015BE4  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5122  015BE6  C17C  F087         	movff	_now+10,?_sprintf+4
  5123  015BEA  0100               	movlb	0	; () banked
  5124  015BEC  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5125  015BEE  C17B  F089         	movff	_now+9,?_sprintf+6
  5126  015BF2  0100               	movlb	0	; () banked
  5127  015BF4  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5128  015BF6  C17A  F08B         	movff	_now+8,?_sprintf+8
  5129  015BFA  0100               	movlb	0	; () banked
  5130  015BFC  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5131  015BFE  0101               	movlb	1	; () banked
  5132  015C00  5179               	movf	(_now+7)& (0+255),w,b
  5133  015C02  0D04               	mullw	4
  5134  015C04  0EA4               	movlw	low _weekday_3char
  5135  015C06  24F3               	addwf	prodl,w,c
  5136  015C08  0100               	movlb	0	; () banked
  5137  015C0A  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5138  015C0C  0EFB               	movlw	high _weekday_3char
  5139  015C0E  20F4               	addwfc	prodh,w,c
  5140  015C10  0100               	movlb	0	; () banked
  5141  015C12  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5142  015C14  C178  F08F         	movff	_now+6,?_sprintf+12
  5143  015C18  0100               	movlb	0	; () banked
  5144  015C1A  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5145  015C1C  C177  F091         	movff	_now+5,?_sprintf+14
  5146  015C20  0100               	movlb	0	; () banked
  5147  015C22  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5148  015C24  C176  F093         	movff	_now+4,?_sprintf+16
  5149  015C28  0100               	movlb	0	; () banked
  5150  015C2A  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5151  015C2C  EC00  F080         	call	_sprintf	;wreg free
  5152                           
  5153                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5154  015C30  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5155  015C34  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5156  015C38  0EAD               	movlw	low print_time@str
  5157  015C3A  0100               	movlb	0	; () banked
  5158  015C3C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5159  015C3E  0E00               	movlw	high print_time@str
  5160  015C40  0100               	movlb	0	; () banked
  5161  015C42  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5162  015C44  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
  5163  015C48  0012               	return		;funcret
  5164  015C4A                     __end_of_print_time:
  5165                           	opt stack 0
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           intcon	equ	0xFF2
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           postdec1	equ	0xFE5
  5176                           fsr1h	equ	0xFE2
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           fsr2h	equ	0xFDA
  5180                           fsr2l	equ	0xFD9
  5181                           status	equ	0xFD8
  5182                           
  5183 ;; *************** function _RTCC_from_caltime *****************
  5184 ;; Defined at:
  5185 ;;		line 205 in file "../My_library/My_RTCC.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  tm              2   47[BANK0 ] PTR struct .
  5188 ;;		 -> now(14), 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;		None               void
  5193 ;; Registers used:
  5194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;Total ram usage:        2 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:   14
  5207 ;; This function calls:
  5208 ;;		_caltime_to_RTCC
  5209 ;;		_caltime_to_epoch
  5210 ;;		_epoch_to_caltime
  5211 ;; This function is called by:
  5212 ;;		_terminal_at_hand
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text6
  5217  016AE6                     __ptext6:
  5218                           	opt stack 0
  5219  016AE6                     _RTCC_from_caltime:
  5220                           	opt stack 12
  5221                           
  5222                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  5223                           
  5224                           ;incstack = 0
  5225  016AE6  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5226  016AEA  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5227  016AEE  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5228                           
  5229                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  5230  016AF2  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5231  016AF6  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5232  016AFA  EC21  F096         	call	_epoch_to_caltime	;wreg free
  5233                           
  5234                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  5235  016AFE  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5236  016B02  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5237  016B06  ECAD  F0A4         	call	_caltime_to_RTCC	;wreg free
  5238  016B0A  0012               	return		;funcret
  5239  016B0C                     __end_of_RTCC_from_caltime:
  5240                           	opt stack 0
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           prodh	equ	0xFF4
  5246                           prodl	equ	0xFF3
  5247                           intcon	equ	0xFF2
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _strcmp *****************
  5259 ;; Defined at:
  5260 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5263 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5264 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5265 ;;		 -> STR_117(7), STR_116(2), STR_115(7), STR_114(2), 
  5266 ;;		 -> STR_113(5), STR_112(2), STR_111(4), STR_110(2), 
  5267 ;;		 -> STR_109(6), STR_108(2), STR_107(5), STR_106(2), 
  5268 ;;		 -> STR_105(12), STR_104(3), STR_103(2), STR_102(11), 
  5269 ;;		 -> STR_25(2), STR_24(6), STR_21(5), STR_20(11), 
  5270 ;;		 -> STR_19(6), STR_18(1), STR_17(12), STR_16(3), 
  5271 ;;		 -> STR_15(9), STR_14(9), STR_12(2), STR_11(5), 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  r               1    5[BANK0 ] char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  2    0[BANK0 ] int 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5286 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;Total ram usage:        6 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:   11
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_terminal_operation
  5294 ;;		_terminal_time
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text7
  5299  016422                     __ptext7:
  5300                           	opt stack 0
  5301  016422                     _strcmp:
  5302                           	opt stack 16
  5303                           
  5304                           ;incstack = 0
  5305  016422  D006               	goto	l10625
  5306  016424                     l10623:
  5307  016424  0100               	movlb	0	; () banked
  5308  016426  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5309  016428  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5310  01642A  0100               	movlb	0	; () banked
  5311  01642C  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5312  01642E  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5313  016430                     l10625:
  5314  016430  C060  FFD9         	movff	strcmp@s1,fsr2l
  5315  016434  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5316  016438  50DF               	movf	indf2,w,c
  5317  01643A  0100               	movlb	0	; () banked
  5318  01643C  6F64               	movwf	??_strcmp& (0+255),b
  5319  01643E  C062  FFF6         	movff	strcmp@s2,tblptrl
  5320  016442  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5321  016446                     	if	0	;tblptru may be non-zero
  5322  016446                     	endif
  5323  016446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5324  016446  0E00               	movlw	low (__mediumconst shr (0+16))
  5325  016448  6EF8               	movwf	tblptru,c
  5326  01644A                     	endif
  5327  01644A  0008               	tblrd		*
  5328  01644C  50F5               	movf	tablat,w,c
  5329  01644E  0800               	sublw	0
  5330  016450  0100               	movlb	0	; () banked
  5331  016452  2564               	addwf	??_strcmp& (0+255),w,b
  5332  016454  0100               	movlb	0	; () banked
  5333  016456  6F65               	movwf	strcmp@r& (0+255),b
  5334  016458  0100               	movlb	0	; () banked
  5335  01645A  5165               	movf	strcmp@r& (0+255),w,b
  5336  01645C  A4D8               	btfss	status,2,c
  5337  01645E  D007               	goto	l10629
  5338                           
  5339                           ; BSR set to: 0
  5340  016460  C060  FFD9         	movff	strcmp@s1,fsr2l
  5341  016464  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5342  016468  50DF               	movf	indf2,w,c
  5343  01646A  A4D8               	btfss	status,2,c
  5344  01646C  D7DB               	goto	l10623
  5345  01646E                     l10629:
  5346                           
  5347                           ; BSR set to: 0
  5348  01646E  0100               	movlb	0	; () banked
  5349  016470  5165               	movf	strcmp@r& (0+255),w,b
  5350  016472  0100               	movlb	0	; () banked
  5351  016474  6F60               	movwf	?_strcmp& (0+255),b
  5352  016476  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5353  016478  BF60               	btfsc	?_strcmp& (0+255),7,b
  5354  01647A  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5355  01647C  0012               	return	
  5356  01647E                     __end_of_strcmp:
  5357                           	opt stack 0
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           postinc0	equ	0xFEE
  5366                           wreg	equ	0xFE8
  5367                           postdec1	equ	0xFE5
  5368                           fsr1h	equ	0xFE2
  5369                           fsr1l	equ	0xFE1
  5370                           indf2	equ	0xFDF
  5371                           fsr2h	equ	0xFDA
  5372                           fsr2l	equ	0xFD9
  5373                           status	equ	0xFD8
  5374                           
  5375 ;; *************** function _atoi *****************
  5376 ;; Defined at:
  5377 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5380 ;;		 -> terminal_task@op2(25), 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  a               2   33[BANK0 ] int 
  5383 ;;  sign            1   32[BANK0 ] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  2   28[BANK0 ] int 
  5386 ;; Registers used:
  5387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5396 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5397 ;;Total ram usage:        7 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:   12
  5400 ;; This function calls:
  5401 ;;		___wmul
  5402 ;;		_isdigit
  5403 ;; This function is called by:
  5404 ;;		_terminal_operation
  5405 ;;		_terminal_time
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text8
  5410  014070                     __ptext8:
  5411                           	opt stack 0
  5412  014070                     _atoi:
  5413                           	opt stack 15
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;incstack = 0
  5417  014070  D003               	goto	l10637
  5418  014072                     l10635:
  5419  014072  0100               	movlb	0	; () banked
  5420  014074  4B7C               	infsnz	atoi@s& (0+255),f,b
  5421  014076  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5422  014078                     l10637:
  5423  014078  C07C  FFD9         	movff	atoi@s,fsr2l
  5424  01407C  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5425  014080  0E20               	movlw	32
  5426  014082  18DE               	xorwf	postinc2,w,c
  5427  014084  B4D8               	btfsc	status,2,c
  5428  014086  D7F5               	goto	l10635
  5429  014088  C07C  FFD9         	movff	atoi@s,fsr2l
  5430  01408C  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5431  014090  0E09               	movlw	9
  5432  014092  18DE               	xorwf	postinc2,w,c
  5433  014094  B4D8               	btfsc	status,2,c
  5434  014096  D7ED               	goto	l10635
  5435  014098  0E00               	movlw	0
  5436  01409A  0100               	movlb	0	; () banked
  5437  01409C  6F82               	movwf	(atoi@a+1)& (0+255),b
  5438  01409E  0E00               	movlw	0
  5439  0140A0  6F81               	movwf	atoi@a& (0+255),b
  5440  0140A2  0E00               	movlw	0
  5441  0140A4  0100               	movlb	0	; () banked
  5442  0140A6  6F80               	movwf	atoi@sign& (0+255),b
  5443                           
  5444                           ; BSR set to: 0
  5445  0140A8  C07C  FFD9         	movff	atoi@s,fsr2l
  5446  0140AC  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5447  0140B0  0E2D               	movlw	45
  5448  0140B2  18DE               	xorwf	postinc2,w,c
  5449  0140B4  A4D8               	btfss	status,2,c
  5450  0140B6  D003               	goto	l10647
  5451                           
  5452                           ; BSR set to: 0
  5453  0140B8  0100               	movlb	0	; () banked
  5454  0140BA  2B80               	incf	atoi@sign& (0+255),f,b
  5455  0140BC  D02E               	goto	l10653
  5456  0140BE                     l10647:
  5457                           
  5458                           ; BSR set to: 0
  5459  0140BE  C07C  FFD9         	movff	atoi@s,fsr2l
  5460  0140C2  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5461  0140C6  0E2B               	movlw	43
  5462  0140C8  18DE               	xorwf	postinc2,w,c
  5463  0140CA  A4D8               	btfss	status,2,c
  5464  0140CC  D029               	goto	l10655
  5465  0140CE  D025               	goto	l10653
  5466  0140D0                     l10651:
  5467  0140D0  C081  F076         	movff	atoi@a,___wmul@multiplier
  5468  0140D4  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5469  0140D8  0E00               	movlw	0
  5470  0140DA  0100               	movlb	0	; () banked
  5471  0140DC  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5472  0140DE  0E0A               	movlw	10
  5473  0140E0  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5474  0140E2  EC1D  F0B4         	call	___wmul	;wreg free
  5475  0140E6  C07C  FFD9         	movff	atoi@s,fsr2l
  5476  0140EA  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5477  0140EE  50DF               	movf	indf2,w,c
  5478  0140F0  0100               	movlb	0	; () banked
  5479  0140F2  6F7E               	movwf	??_atoi& (0+255),b
  5480  0140F4  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5481  0140F6  0100               	movlb	0	; () banked
  5482  0140F8  5176               	movf	?___wmul& (0+255),w,b
  5483  0140FA  0100               	movlb	0	; () banked
  5484  0140FC  277E               	addwf	??_atoi& (0+255),f,b
  5485  0140FE  0100               	movlb	0	; () banked
  5486  014100  5177               	movf	(?___wmul+1)& (0+255),w,b
  5487  014102  0100               	movlb	0	; () banked
  5488  014104  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5489  014106  0ED0               	movlw	208
  5490  014108  0100               	movlb	0	; () banked
  5491  01410A  257E               	addwf	??_atoi& (0+255),w,b
  5492  01410C  0100               	movlb	0	; () banked
  5493  01410E  6F81               	movwf	atoi@a& (0+255),b
  5494  014110  0EFF               	movlw	255
  5495  014112  0100               	movlb	0	; () banked
  5496  014114  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5497  014116  0100               	movlb	0	; () banked
  5498  014118  6F82               	movwf	(atoi@a+1)& (0+255),b
  5499  01411A                     l10653:
  5500                           
  5501                           ; BSR set to: 0
  5502  01411A  0100               	movlb	0	; () banked
  5503  01411C  4B7C               	infsnz	atoi@s& (0+255),f,b
  5504  01411E  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5505  014120                     l10655:
  5506                           
  5507                           ; BSR set to: 0
  5508  014120  C07C  FFD9         	movff	atoi@s,fsr2l
  5509  014124  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5510  014128  50DF               	movf	indf2,w,c
  5511  01412A  EC36  F0B5         	call	_isdigit
  5512  01412E  B0D8               	btfsc	status,0,c
  5513  014130  D7CF               	goto	l10651
  5514  014132  0100               	movlb	0	; () banked
  5515  014134  5180               	movf	atoi@sign& (0+255),w,b
  5516  014136  0100               	movlb	0	; () banked
  5517  014138  B4D8               	btfsc	status,2,c
  5518  01413A  D00E               	goto	l2055
  5519                           
  5520                           ; BSR set to: 0
  5521  01413C  C081  F07E         	movff	atoi@a,??_atoi
  5522  014140  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5523  014144  0100               	movlb	0	; () banked
  5524  014146  1F7E               	comf	??_atoi& (0+255),f,b
  5525  014148  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5526  01414A  4B7E               	infsnz	??_atoi& (0+255),f,b
  5527  01414C  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5528  01414E  C07E  F07C         	movff	??_atoi,?_atoi
  5529  014152  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5530  014156  0012               	return	
  5531  014158                     l2055:
  5532                           
  5533                           ; BSR set to: 0
  5534  014158  C081  F07C         	movff	atoi@a,?_atoi
  5535  01415C  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5536                           
  5537                           ; BSR set to: 0
  5538  014160  0012               	return		;funcret
  5539  014162                     __end_of_atoi:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           intcon	equ	0xFF2
  5548                           postinc0	equ	0xFEE
  5549                           wreg	equ	0xFE8
  5550                           postdec1	equ	0xFE5
  5551                           fsr1h	equ	0xFE2
  5552                           fsr1l	equ	0xFE1
  5553                           indf2	equ	0xFDF
  5554                           postinc2	equ	0xFDE
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function _bootload *****************
  5560 ;; Defined at:
  5561 ;;		line 191 in file "ChargeStation_task.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;		None               void
  5568 ;; Registers used:
  5569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:   15
  5582 ;; This function calls:
  5583 ;;		_I2C_LCD_Clear
  5584 ;;		_I2C_LCD_Puts
  5585 ;;		_I2C_LCD_SetCursor
  5586 ;; This function is called by:
  5587 ;;		_terminal_operation
  5588 ;;		_main
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text9
  5593  016664                     __ptext9:
  5594                           	opt stack 0
  5595  016664                     _bootload:
  5596                           	opt stack 13
  5597                           
  5598                           ;ChargeStation_task.c: 192: I2C_LCD_Clear();
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;incstack = 0
  5602  016664  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
  5603                           
  5604                           ;ChargeStation_task.c: 193: I2C_LCD_SetCursor(0, 0);
  5605  016668  0E00               	movlw	0
  5606  01666A  0100               	movlb	0	; () banked
  5607  01666C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5608  01666E  0E00               	movlw	0
  5609  016670  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  5610                           
  5611                           ;ChargeStation_task.c: 194: I2C_LCD_Puts("PIC18F27J53");
  5612  016674  0E25               	movlw	low STR_9
  5613  016676  0100               	movlb	0	; () banked
  5614  016678  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5615  01667A  0EFF               	movlw	high STR_9
  5616  01667C  0100               	movlb	0	; () banked
  5617  01667E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5618  016680  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5619                           
  5620                           ;ChargeStation_task.c: 195: I2C_LCD_SetCursor(0, 1);
  5621  016684  0E01               	movlw	1
  5622  016686  0100               	movlb	0	; () banked
  5623  016688  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5624  01668A  0E00               	movlw	0
  5625  01668C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  5626                           
  5627                           ;ChargeStation_task.c: 196: I2C_LCD_Puts("Bootloader mode");
  5628  016690  0EC3               	movlw	low STR_10
  5629  016692  0100               	movlb	0	; () banked
  5630  016694  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5631  016696  0EFE               	movlw	high STR_10
  5632  016698  0100               	movlb	0	; () banked
  5633  01669A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5634  01669C  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5635  0166A0  EF0E F000          	goto	28	;# 
  5636  0166A4  0012               	return		;funcret
  5637  0166A6                     __end_of_bootload:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           wreg	equ	0xFE8
  5648                           postdec1	equ	0xFE5
  5649                           fsr1h	equ	0xFE2
  5650                           fsr1l	equ	0xFE1
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657 ;; *************** function _ringbuf_put_num *****************
  5658 ;; Defined at:
  5659 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5662 ;;		 -> usb_tx(8), 
  5663 ;;  value           2   37[BANK0 ] const unsigned int 
  5664 ;;  digits          1   39[BANK0 ] unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  i               1   40[BANK0 ] unsigned char 
  5667 ;;  temp            2   41[BANK0 ] unsigned int 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5677 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;Total ram usage:        8 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:   13
  5684 ;; This function calls:
  5685 ;;		___lwdiv
  5686 ;;		___lwmod
  5687 ;;		_ringbuf_put
  5688 ;; This function is called by:
  5689 ;;		_terminal_task
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text10
  5694  015D5A                     __ptext10:
  5695                           	opt stack 0
  5696  015D5A                     _ringbuf_put_num:
  5697                           	opt stack 16
  5698                           
  5699                           ;My_ringbuf.c: 29: while (digits--) {
  5700                           
  5701                           ;incstack = 0
  5702  015D5A  D039               	goto	l12017
  5703  015D5C                     l777:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5707  015D5C  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5708  015D60  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5712  015D64  0E00               	movlw	0
  5713  015D66  0100               	movlb	0	; () banked
  5714  015D68  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5715  015D6A  D011               	goto	l12011
  5716  015D6C                     l12007:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;My_ringbuf.c: 32: temp /= 10;
  5720  015D6C  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5721  015D70  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5722  015D74  0E00               	movlw	0
  5723  015D76  0100               	movlb	0	; () banked
  5724  015D78  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5725  015D7A  0E0A               	movlw	10
  5726  015D7C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5727  015D7E  EC2A  F0AF         	call	___lwdiv	;wreg free
  5728  015D82  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5729  015D86  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5730  015D8A  0100               	movlb	0	; () banked
  5731  015D8C  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5732  015D8E                     l12011:
  5733                           
  5734                           ; BSR set to: 0
  5735  015D8E  0100               	movlb	0	; () banked
  5736  015D90  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5737  015D92  0100               	movlb	0	; () banked
  5738  015D94  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5739  015D96  A0D8               	btfss	status,0,c
  5740  015D98  D7E9               	goto	l12007
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;My_ringbuf.c: 33: }
  5744                           ;My_ringbuf.c: 34: temp %= 10;
  5745                           
  5746                           ; BSR set to: 0
  5747  015D9A  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5748  015D9E  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5749  015DA2  0E00               	movlw	0
  5750  015DA4  0100               	movlb	0	; () banked
  5751  015DA6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5752  015DA8  0E0A               	movlw	10
  5753  015DAA  6F62               	movwf	___lwmod@divisor& (0+255),b
  5754  015DAC  EC80  F0B1         	call	___lwmod	;wreg free
  5755  015DB0  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5756  015DB4  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5757                           
  5758                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5759  015DB8  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5760  015DBC  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5761  015DC0  0100               	movlb	0	; () banked
  5762  015DC2  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5763  015DC4  0F30               	addlw	48
  5764  015DC6  0100               	movlb	0	; () banked
  5765  015DC8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5766  015DCA  ECED  F0A5         	call	_ringbuf_put	;wreg free
  5767  015DCE                     l12017:
  5768  015DCE  0100               	movlb	0	; () banked
  5769  015DD0  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5770  015DD2  0100               	movlb	0	; () banked
  5771  015DD4  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5772  015DD6  B4D8               	btfsc	status,2,c
  5773  015DD8  0012               	return	
  5774  015DDA  D7C0               	goto	l777
  5775  015DDC                     __end_of_ringbuf_put_num:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           postinc0	equ	0xFEE
  5785                           wreg	equ	0xFE8
  5786                           postdec1	equ	0xFE5
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _ringbuf_delete *****************
  5796 ;; Defined at:
  5797 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5800 ;;		 -> terminal_task@command(8), 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;		None               void
  5805 ;; Registers used:
  5806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:   11
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_terminal_task
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text11
  5827  016B0C                     __ptext11:
  5828                           	opt stack 0
  5829  016B0C                     _ringbuf_delete:
  5830                           	opt stack 18
  5831                           
  5832                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;incstack = 0
  5836  016B0C  0100               	movlb	0	; () banked
  5837  016B0E  EE20 F006          	lfsr	2,6
  5838  016B12  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5839  016B14  26D9               	addwf	fsr2l,f,c
  5840  016B16  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5841  016B18  22DA               	addwfc	fsr2h,f,c
  5842  016B1A  0100               	movlb	0	; () banked
  5843  016B1C  EE10 F004          	lfsr	1,4
  5844  016B20  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5845  016B22  26E1               	addwf	fsr1l,f,c
  5846  016B24  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5847  016B26  22E2               	addwfc	fsr1h,f,c
  5848  016B28  CFDE FFE6          	movff	postinc2,postinc1
  5849  016B2C  CFDD FFE5          	movff	postdec2,postdec1
  5850                           
  5851                           ; BSR set to: 0
  5852  016B30  0012               	return		;funcret
  5853  016B32                     __end_of_ringbuf_delete:
  5854                           	opt stack 0
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           wreg	equ	0xFE8
  5864                           postinc1	equ	0xFE6
  5865                           postdec1	equ	0xFE5
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           indf2	equ	0xFDF
  5869                           postinc2	equ	0xFDE
  5870                           postdec2	equ	0xFDD
  5871                           fsr2h	equ	0xFDA
  5872                           fsr2l	equ	0xFD9
  5873                           status	equ	0xFD8
  5874                           
  5875 ;; *************** function _ringbuf_backspace *****************
  5876 ;; Defined at:
  5877 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5880 ;;		 -> terminal_task@command(8), 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;		None               void
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;Total ram usage:        6 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:   12
  5899 ;; This function calls:
  5900 ;;		_ringbuf_num
  5901 ;; This function is called by:
  5902 ;;		_terminal_task
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text12
  5907  015986                     __ptext12:
  5908                           	opt stack 0
  5909  015986                     _ringbuf_backspace:
  5910                           	opt stack 17
  5911                           
  5912                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;incstack = 0
  5916  015986  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5917  01598A  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5918  01598E  EC2A  F0A1         	call	_ringbuf_num	;wreg free
  5919  015992  0100               	movlb	0	; () banked
  5920  015994  5160               	movf	?_ringbuf_num& (0+255),w,b
  5921  015996  0100               	movlb	0	; () banked
  5922  015998  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5923  01599A  B4D8               	btfsc	status,2,c
  5924  01599C  0012               	return	
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5928  01599E  0100               	movlb	0	; () banked
  5929  0159A0  EE20 F004          	lfsr	2,4
  5930  0159A4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5931  0159A6  26D9               	addwf	fsr2l,f,c
  5932  0159A8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5933  0159AA  22DA               	addwfc	fsr2h,f,c
  5934  0159AC  50DE               	movf	postinc2,w,c
  5935  0159AE  10DE               	iorwf	postinc2,w,c
  5936  0159B0  B4D8               	btfsc	status,2,c
  5937  0159B2  D00B               	goto	l12045
  5938                           
  5939                           ; BSR set to: 0
  5940  0159B4  0100               	movlb	0	; () banked
  5941  0159B6  EE20 F004          	lfsr	2,4
  5942  0159BA  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5943  0159BC  26D9               	addwf	fsr2l,f,c
  5944  0159BE  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5945  0159C0  22DA               	addwfc	fsr2h,f,c
  5946  0159C2  06DE               	decf	postinc2,f,c
  5947  0159C4  0E00               	movlw	0
  5948  0159C6  5ADD               	subwfb	postdec2,f,c
  5949  0159C8  0012               	return	
  5950  0159CA                     l12045:
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5954  0159CA  0EFF               	movlw	255
  5955  0159CC  0100               	movlb	0	; () banked
  5956  0159CE  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5957  0159D0  0EFF               	movlw	255
  5958  0159D2  0100               	movlb	0	; () banked
  5959  0159D4  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5960  0159D6  0100               	movlb	0	; () banked
  5961  0159D8  EE20 F002          	lfsr	2,2
  5962  0159DC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5963  0159DE  26D9               	addwf	fsr2l,f,c
  5964  0159E0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5965  0159E2  22DA               	addwfc	fsr2h,f,c
  5966  0159E4  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5967  0159E8  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5968  0159EC  0100               	movlb	0	; () banked
  5969  0159EE  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5970  0159F0  0100               	movlb	0	; () banked
  5971  0159F2  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5972  0159F4  0100               	movlb	0	; () banked
  5973  0159F6  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5974  0159F8  0100               	movlb	0	; () banked
  5975  0159FA  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5976  0159FC  0100               	movlb	0	; () banked
  5977  0159FE  EE20 F004          	lfsr	2,4
  5978  015A02  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5979  015A04  26D9               	addwf	fsr2l,f,c
  5980  015A06  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5981  015A08  22DA               	addwfc	fsr2h,f,c
  5982  015A0A  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5983  015A0E  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5984                           
  5985                           ; BSR set to: 0
  5986  015A12  0012               	return	
  5987  015A14                     __end_of_ringbuf_backspace:
  5988                           	opt stack 0
  5989                           tblptru	equ	0xFF8
  5990                           tblptrh	equ	0xFF7
  5991                           tblptrl	equ	0xFF6
  5992                           tablat	equ	0xFF5
  5993                           prodh	equ	0xFF4
  5994                           prodl	equ	0xFF3
  5995                           intcon	equ	0xFF2
  5996                           postinc0	equ	0xFEE
  5997                           wreg	equ	0xFE8
  5998                           postinc1	equ	0xFE6
  5999                           postdec1	equ	0xFE5
  6000                           fsr1h	equ	0xFE2
  6001                           fsr1l	equ	0xFE1
  6002                           indf2	equ	0xFDF
  6003                           postinc2	equ	0xFDE
  6004                           postdec2	equ	0xFDD
  6005                           fsr2h	equ	0xFDA
  6006                           fsr2l	equ	0xFD9
  6007                           status	equ	0xFD8
  6008                           
  6009 ;; *************** function _software_init *****************
  6010 ;; Defined at:
  6011 ;;		line 109 in file "main.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  i               1   36[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;		None               void
  6018 ;; Registers used:
  6019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;Total ram usage:        1 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:   14
  6032 ;; This function calls:
  6033 ;;		_LED_output
  6034 ;;		_OUT
  6035 ;;		_ctmu_set_ratio
  6036 ;;		_display
  6037 ;; This function is called by:
  6038 ;;		_main
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text13
  6043  01515C                     __ptext13:
  6044                           	opt stack 0
  6045  01515C                     _software_init:
  6046                           	opt stack 16
  6047                           
  6048                           ;main.c: 111: ctmu_ratio = 90;
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;incstack = 0
  6052  01515C  0E5A               	movlw	90
  6053  01515E  6E19               	movwf	_ctmu_ratio,c
  6054                           
  6055                           ;main.c: 112: ctmu_set_ratio(ctmu_ratio);
  6056  015160  5019               	movf	_ctmu_ratio,w,c
  6057  015162  ECA1  F0A1         	call	_ctmu_set_ratio
  6058                           
  6059                           ;main.c: 115: display(LOGO, "Charge Station", "Made by KERI");
  6060  015166  0EE2               	movlw	low STR_7
  6061  015168  0100               	movlb	0	; () banked
  6062  01516A  6F60               	movwf	display@str0& (0+255),b
  6063  01516C  0EFE               	movlw	high STR_7
  6064  01516E  0100               	movlb	0	; () banked
  6065  015170  6F61               	movwf	(display@str0+1)& (0+255),b
  6066  015172  0EFF               	movlw	low STR_35
  6067  015174  0100               	movlb	0	; () banked
  6068  015176  6F62               	movwf	display@str1& (0+255),b
  6069  015178  0EFE               	movlw	high STR_35
  6070  01517A  0100               	movlb	0	; () banked
  6071  01517C  6F63               	movwf	(display@str1+1)& (0+255),b
  6072  01517E  0E00               	movlw	0
  6073  015180  ECEA  F09B         	call	_display
  6074                           
  6075                           ;main.c: 118: for (uint8_t i = 0; i < 3; i++) {
  6076  015184  0E00               	movlw	0
  6077  015186  0100               	movlb	0	; () banked
  6078  015188  6F84               	movwf	software_init@i& (0+255),b
  6079  01518A                     l12201:
  6080                           
  6081                           ; BSR set to: 0
  6082  01518A  0E02               	movlw	2
  6083  01518C  0100               	movlb	0	; () banked
  6084  01518E  6584               	cpfsgt	software_init@i& (0+255),b
  6085  015190  D001               	goto	l12205
  6086  015192  D040               	goto	l12217
  6087  015194                     l12205:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;main.c: 119: OUT(i, 0);
  6091  015194  0E00               	movlw	0
  6092  015196  0100               	movlb	0	; () banked
  6093  015198  6F60               	movwf	OUT@value& (0+255),b
  6094  01519A  0100               	movlb	0	; () banked
  6095  01519C  5184               	movf	software_init@i& (0+255),w,b
  6096  01519E  ECDA  F0AF         	call	_OUT
  6097                           
  6098                           ;main.c: 120: LED_output(i, 0);
  6099  0151A2  0E00               	movlw	0
  6100  0151A4  0100               	movlb	0	; () banked
  6101  0151A6  6F60               	movwf	LED_output@value& (0+255),b
  6102  0151A8  0100               	movlb	0	; () banked
  6103  0151AA  5184               	movf	software_init@i& (0+255),w,b
  6104  0151AC  ECA1  F0AF         	call	_LED_output
  6105                           
  6106                           ;main.c: 121: port[i].cut_cnt = 0;
  6107  0151B0  0100               	movlb	0	; () banked
  6108  0151B2  5184               	movf	software_init@i& (0+255),w,b
  6109  0151B4  0D17               	mullw	23
  6110  0151B6  0E14               	movlw	20
  6111  0151B8  26F3               	addwf	prodl,f,c
  6112  0151BA  0E00               	movlw	0
  6113  0151BC  22F4               	addwfc	prodh,f,c
  6114  0151BE  0E2D               	movlw	low _port
  6115  0151C0  24F3               	addwf	prodl,w,c
  6116  0151C2  6ED9               	movwf	fsr2l,c
  6117  0151C4  0E01               	movlw	high _port
  6118  0151C6  20F4               	addwfc	prodh,w,c
  6119  0151C8  6EDA               	movwf	fsr2h,c
  6120  0151CA  0E00               	movlw	0
  6121  0151CC  6EDE               	movwf	postinc2,c
  6122  0151CE  0E00               	movlw	0
  6123  0151D0  6EDD               	movwf	postdec2,c
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;main.c: 122: port[i].flag.auto_cut_ON = 1;
  6127  0151D2  0100               	movlb	0	; () banked
  6128  0151D4  5184               	movf	software_init@i& (0+255),w,b
  6129  0151D6  0D17               	mullw	23
  6130  0151D8  0E16               	movlw	22
  6131  0151DA  26F3               	addwf	prodl,f,c
  6132  0151DC  0E00               	movlw	0
  6133  0151DE  22F4               	addwfc	prodh,f,c
  6134  0151E0  0E2D               	movlw	low _port
  6135  0151E2  24F3               	addwf	prodl,w,c
  6136  0151E4  6ED9               	movwf	fsr2l,c
  6137  0151E6  0E01               	movlw	high _port
  6138  0151E8  20F4               	addwfc	prodh,w,c
  6139  0151EA  6EDA               	movwf	fsr2h,c
  6140  0151EC  0101               	movlb	1	; () banked
  6141  0151EE  80DF               	bsf	indf2,0,c
  6142                           
  6143                           ; BSR set to: 1
  6144                           ;main.c: 123: port[i].flag.led_indicator_ON = 1;
  6145  0151F0  0100               	movlb	0	; () banked
  6146  0151F2  5184               	movf	software_init@i& (0+255),w,b
  6147  0151F4  0D17               	mullw	23
  6148  0151F6  0E16               	movlw	22
  6149  0151F8  26F3               	addwf	prodl,f,c
  6150  0151FA  0E00               	movlw	0
  6151  0151FC  22F4               	addwfc	prodh,f,c
  6152  0151FE  0E2D               	movlw	low _port
  6153  015200  24F3               	addwf	prodl,w,c
  6154  015202  6ED9               	movwf	fsr2l,c
  6155  015204  0E01               	movlw	high _port
  6156  015206  20F4               	addwfc	prodh,w,c
  6157  015208  6EDA               	movwf	fsr2h,c
  6158  01520A  0101               	movlb	1	; () banked
  6159  01520C  82DF               	bsf	indf2,1,c
  6160                           
  6161                           ; BSR set to: 1
  6162  01520E  0100               	movlb	0	; () banked
  6163  015210  2B84               	incf	software_init@i& (0+255),f,b
  6164  015212  D7BB               	goto	l12201
  6165  015214                     l12217:
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;main.c: 124: }
  6169                           ;main.c: 127: settings_flag = 0;
  6170  015214  0E00               	movlw	0
  6171  015216  6E21               	movwf	_settings_flag,c
  6172                           
  6173                           ; BSR set to: 0
  6174  015218  0012               	return		;funcret
  6175  01521A                     __end_of_software_init:
  6176                           	opt stack 0
  6177                           tblptru	equ	0xFF8
  6178                           tblptrh	equ	0xFF7
  6179                           tblptrl	equ	0xFF6
  6180                           tablat	equ	0xFF5
  6181                           prodh	equ	0xFF4
  6182                           prodl	equ	0xFF3
  6183                           intcon	equ	0xFF2
  6184                           postinc0	equ	0xFEE
  6185                           wreg	equ	0xFE8
  6186                           postinc1	equ	0xFE6
  6187                           postdec1	equ	0xFE5
  6188                           fsr1h	equ	0xFE2
  6189                           fsr1l	equ	0xFE1
  6190                           indf2	equ	0xFDF
  6191                           postinc2	equ	0xFDE
  6192                           postdec2	equ	0xFDD
  6193                           fsr2h	equ	0xFDA
  6194                           fsr2l	equ	0xFD9
  6195                           status	equ	0xFD8
  6196                           
  6197 ;; *************** function _ctmu_set_ratio *****************
  6198 ;; Defined at:
  6199 ;;		line 14 in file "ctmu.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  percentage      1    wreg     unsigned char 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  percentage      1   35[BANK0 ] unsigned char 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;Total ram usage:        1 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:   13
  6220 ;; This function calls:
  6221 ;;		_CTMU_read
  6222 ;;		___lwdiv
  6223 ;;		___wmul
  6224 ;; This function is called by:
  6225 ;;		_terminal_operation
  6226 ;;		_software_init
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text14
  6231  014342                     __ptext14:
  6232                           	opt stack 0
  6233  014342                     _ctmu_set_ratio:
  6234                           	opt stack 15
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;incstack = 0
  6238                           ;ctmu_set_ratio@percentage stored from wreg
  6239  014342  0100               	movlb	0	; () banked
  6240  014344  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6241                           
  6242                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6243  014346  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6244  01434A  0100               	movlb	0	; () banked
  6245  01434C  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6246  01434E  0E00               	movlw	0
  6247  014350  EC4D  F0A8         	call	_CTMU_read
  6248  014354  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6249  014358  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6250  01435C  EC1D  F0B4         	call	___wmul	;wreg free
  6251  014360  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6252  014364  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6253  014368  0E00               	movlw	0
  6254  01436A  0100               	movlb	0	; () banked
  6255  01436C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6256  01436E  0E64               	movlw	100
  6257  014370  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6258  014372  EC2A  F0AF         	call	___lwdiv	;wreg free
  6259  014376  C07C  F131         	movff	?___lwdiv,_port+4
  6260  01437A  C07D  F132         	movff	?___lwdiv+1,_port+5
  6261                           
  6262                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6263  01437E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6264  014382  0100               	movlb	0	; () banked
  6265  014384  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6266  014386  0E01               	movlw	1
  6267  014388  EC4D  F0A8         	call	_CTMU_read
  6268  01438C  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6269  014390  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6270  014394  EC1D  F0B4         	call	___wmul	;wreg free
  6271  014398  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6272  01439C  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6273  0143A0  0E00               	movlw	0
  6274  0143A2  0100               	movlb	0	; () banked
  6275  0143A4  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6276  0143A6  0E64               	movlw	100
  6277  0143A8  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6278  0143AA  EC2A  F0AF         	call	___lwdiv	;wreg free
  6279  0143AE  C07C  F148         	movff	?___lwdiv,_port+27
  6280  0143B2  C07D  F149         	movff	?___lwdiv+1,_port+28
  6281                           
  6282                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6283  0143B6  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6284  0143BA  0100               	movlb	0	; () banked
  6285  0143BC  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6286  0143BE  0E02               	movlw	2
  6287  0143C0  EC4D  F0A8         	call	_CTMU_read
  6288  0143C4  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6289  0143C8  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6290  0143CC  EC1D  F0B4         	call	___wmul	;wreg free
  6291  0143D0  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6292  0143D4  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6293  0143D8  0E00               	movlw	0
  6294  0143DA  0100               	movlb	0	; () banked
  6295  0143DC  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6296  0143DE  0E64               	movlw	100
  6297  0143E0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6298  0143E2  EC2A  F0AF         	call	___lwdiv	;wreg free
  6299  0143E6  C07C  F15F         	movff	?___lwdiv,_port+50
  6300  0143EA  C07D  F160         	movff	?___lwdiv+1,_port+51
  6301                           
  6302                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6303  0143EE  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6304  0143F2  0100               	movlb	0	; () banked
  6305  0143F4  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6306  0143F6  0E03               	movlw	3
  6307  0143F8  EC4D  F0A8         	call	_CTMU_read
  6308  0143FC  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6309  014400  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6310  014404  EC1D  F0B4         	call	___wmul	;wreg free
  6311  014408  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6312  01440C  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6313  014410  0E00               	movlw	0
  6314  014412  0100               	movlb	0	; () banked
  6315  014414  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6316  014416  0E64               	movlw	100
  6317  014418  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6318  01441A  EC2A  F0AF         	call	___lwdiv	;wreg free
  6319  01441E  C07C  F11A         	movff	?___lwdiv,_ctmu_value_m
  6320  014422  C07D  F11B         	movff	?___lwdiv+1,_ctmu_value_m+1
  6321  014426  0012               	return		;funcret
  6322  014428                     __end_of_ctmu_set_ratio:
  6323                           	opt stack 0
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           postinc0	equ	0xFEE
  6332                           wreg	equ	0xFE8
  6333                           postinc1	equ	0xFE6
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344 ;; *************** function _sleep_task *****************
  6345 ;; Defined at:
  6346 ;;		line 164 in file "ChargeStation_task.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  i               1   10[BANK0 ] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;		None               void
  6353 ;; Registers used:
  6354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;Total ram usage:        1 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:   15
  6367 ;; This function calls:
  6368 ;;		_ADC
  6369 ;;		_I2C_LCD_Clear
  6370 ;;		_I2C_LCD_Puts
  6371 ;;		_I2C_LCD_SetCursor
  6372 ;;		_LED_output
  6373 ;;		_OUT
  6374 ;;		_display
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text15
  6381  014E48                     __ptext15:
  6382                           	opt stack 0
  6383  014E48                     _sleep_task:
  6384                           	opt stack 15
  6385                           
  6386                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6387                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6388                           
  6389                           ;incstack = 0
  6390  014E48  0E0C               	movlw	12
  6391  014E4A  EC83  F0B4         	call	_ADC
  6392  014E4E  0E08               	movlw	8
  6393  014E50  0100               	movlb	0	; () banked
  6394  014E52  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6395  014E54  B0D8               	btfsc	status,0,c
  6396  014E56  D059               	goto	l12157
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6400  014E58  0E01               	movlw	1
  6401  014E5A  6E26               	movwf	sleep_task@sleep_flag,c
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6405  014E5C  9EF2               	bcf	intcon,7,c	;volatile
  6406                           
  6407                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6408  014E5E  0E00               	movlw	0
  6409  014E60  0100               	movlb	0	; () banked
  6410  014E62  6F6A               	movwf	sleep_task@i& (0+255),b
  6411  014E64                     l12131:
  6412                           
  6413                           ; BSR set to: 0
  6414  014E64  0E02               	movlw	2
  6415  014E66  0100               	movlb	0	; () banked
  6416  014E68  656A               	cpfsgt	sleep_task@i& (0+255),b
  6417  014E6A  D001               	goto	l12135
  6418  014E6C  D011               	goto	l12141
  6419  014E6E                     l12135:
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6423  014E6E  0E00               	movlw	0
  6424  014E70  0100               	movlb	0	; () banked
  6425  014E72  6F60               	movwf	OUT@value& (0+255),b
  6426  014E74  0100               	movlb	0	; () banked
  6427  014E76  516A               	movf	sleep_task@i& (0+255),w,b
  6428  014E78  ECDA  F0AF         	call	_OUT
  6429                           
  6430                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6431  014E7C  0E00               	movlw	0
  6432  014E7E  0100               	movlb	0	; () banked
  6433  014E80  6F60               	movwf	LED_output@value& (0+255),b
  6434  014E82  0100               	movlb	0	; () banked
  6435  014E84  516A               	movf	sleep_task@i& (0+255),w,b
  6436  014E86  ECA1  F0AF         	call	_LED_output
  6437  014E8A  0100               	movlb	0	; () banked
  6438  014E8C  2B6A               	incf	sleep_task@i& (0+255),f,b
  6439  014E8E  D7EA               	goto	l12131
  6440  014E90                     l12141:
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;ChargeStation_task.c: 172: }
  6444                           ;ChargeStation_task.c: 173: I2C_LCD_Clear();
  6445  014E90  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
  6446                           
  6447                           ;ChargeStation_task.c: 174: I2C_LCD_SetCursor(0, 0);
  6448  014E94  0E00               	movlw	0
  6449  014E96  0100               	movlb	0	; () banked
  6450  014E98  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6451  014E9A  0E00               	movlw	0
  6452  014E9C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  6453                           
  6454                           ;ChargeStation_task.c: 175: I2C_LCD_Puts("Charge Station 6");
  6455  014EA0  0E92               	movlw	low STR_5
  6456  014EA2  0100               	movlb	0	; () banked
  6457  014EA4  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6458  014EA6  0EFE               	movlw	high STR_5
  6459  014EA8  0100               	movlb	0	; () banked
  6460  014EAA  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6461  014EAC  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6462                           
  6463                           ;ChargeStation_task.c: 176: I2C_LCD_SetCursor(0, 1);
  6464  014EB0  0E01               	movlw	1
  6465  014EB2  0100               	movlb	0	; () banked
  6466  014EB4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6467  014EB6  0E00               	movlw	0
  6468  014EB8  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  6469                           
  6470                           ;ChargeStation_task.c: 177: I2C_LCD_Puts("SLEEPING NOW");
  6471  014EBC  0E0C               	movlw	low STR_6
  6472  014EBE  0100               	movlb	0	; () banked
  6473  014EC0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6474  014EC2  0EFF               	movlw	high STR_6
  6475  014EC4  0100               	movlb	0	; () banked
  6476  014EC6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6477  014EC8  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6478                           
  6479                           ;ChargeStation_task.c: 178: }
  6480                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6481  014ECC  D01E               	goto	l12157
  6482  014ECE                     l12151:
  6483                           
  6484                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6485  014ECE  0E0C               	movlw	12
  6486  014ED0  EC83  F0B4         	call	_ADC
  6487  014ED4  0100               	movlb	0	; () banked
  6488  014ED6  0560               	decf	?_ADC& (0+255),w,b
  6489  014ED8  0E08               	movlw	8
  6490  014EDA  0100               	movlb	0	; () banked
  6491  014EDC  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6492  014EDE  A0D8               	btfss	status,0,c
  6493  014EE0  D012               	goto	l144
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6497  014EE2  0E00               	movlw	0
  6498  014EE4  6E26               	movwf	sleep_task@sleep_flag,c
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6502  014EE6  0EE2               	movlw	low STR_7
  6503  014EE8  0100               	movlb	0	; () banked
  6504  014EEA  6F60               	movwf	display@str0& (0+255),b
  6505  014EEC  0EFE               	movlw	high STR_7
  6506  014EEE  0100               	movlb	0	; () banked
  6507  014EF0  6F61               	movwf	(display@str0+1)& (0+255),b
  6508  014EF2  0EF1               	movlw	low STR_8
  6509  014EF4  0100               	movlb	0	; () banked
  6510  014EF6  6F62               	movwf	display@str1& (0+255),b
  6511  014EF8  0EFE               	movlw	high STR_8
  6512  014EFA  0100               	movlb	0	; () banked
  6513  014EFC  6F63               	movwf	(display@str1+1)& (0+255),b
  6514  014EFE  0E00               	movlw	0
  6515  014F00  ECEA  F09B         	call	_display
  6516                           
  6517                           ;ChargeStation_task.c: 183: break;
  6518  014F04  0012               	return	
  6519  014F06                     l144:
  6520                           
  6521                           ; BSR set to: 0
  6522  014F06  0003               	sleep		;# 
  6523                           
  6524                           ;ChargeStation_task.c: 186: __nop();
  6525  014F08  F000               	nop	
  6526  014F0A                     l12157:
  6527  014F0A  5026               	movf	sleep_task@sleep_flag,w,c
  6528  014F0C  B4D8               	btfsc	status,2,c
  6529  014F0E  0012               	return	
  6530  014F10  D7DE               	goto	l12151
  6531  014F12                     __end_of_sleep_task:
  6532                           	opt stack 0
  6533                           tblptru	equ	0xFF8
  6534                           tblptrh	equ	0xFF7
  6535                           tblptrl	equ	0xFF6
  6536                           tablat	equ	0xFF5
  6537                           prodh	equ	0xFF4
  6538                           prodl	equ	0xFF3
  6539                           intcon	equ	0xFF2
  6540                           postinc0	equ	0xFEE
  6541                           wreg	equ	0xFE8
  6542                           postinc1	equ	0xFE6
  6543                           postdec1	equ	0xFE5
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           indf2	equ	0xFDF
  6547                           postinc2	equ	0xFDE
  6548                           postdec2	equ	0xFDD
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function _normal_task *****************
  6554 ;; Defined at:
  6555 ;;		line 121 in file "ChargeStation_task.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;		None               void
  6562 ;; Registers used:
  6563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:   18
  6576 ;; This function calls:
  6577 ;;		_Auto_cut
  6578 ;;		_data_out
  6579 ;;		_display
  6580 ;;		_display_LCD
  6581 ;;		_integrate_current
  6582 ;;		_integrate_time
  6583 ;;		_port_button_task
  6584 ;;		_settings_task
  6585 ;; This function is called by:
  6586 ;;		_main
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text16
  6591  0155C4                     __ptext16:
  6592                           	opt stack 0
  6593  0155C4                     _normal_task:
  6594                           	opt stack 12
  6595                           
  6596                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6597                           
  6598                           ;incstack = 0
  6599  0155C4  5021               	movf	_settings_flag,w,c
  6600  0155C6  B4D8               	btfsc	status,2,c
  6601  0155C8  D003               	goto	l124
  6602                           
  6603                           ;ChargeStation_task.c: 124: settings_task();
  6604  0155CA  EC0A  F095         	call	_settings_task	;wreg free
  6605                           
  6606                           ;ChargeStation_task.c: 125: } else {
  6607  0155CE  D01F               	goto	l12093
  6608  0155D0                     l124:
  6609                           
  6610                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6611  0155D0  A029               	btfss	_ctmu_m+2,0,c
  6612  0155D2  D013               	goto	l12087
  6613                           
  6614                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6615  0155D4  0E00               	movlw	0
  6616  0155D6  6E2A               	movwf	_ctmu_m+3,c
  6617  0155D8  0E00               	movlw	0
  6618  0155DA  6E29               	movwf	_ctmu_m+2,c
  6619                           
  6620                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6621  0155DC  0EE6               	movlw	low (STR_96+3)
  6622  0155DE  0100               	movlb	0	; () banked
  6623  0155E0  6F60               	movwf	display@str0& (0+255),b
  6624  0155E2  0EFF               	movlw	high (STR_96+3)
  6625  0155E4  0100               	movlb	0	; () banked
  6626  0155E6  6F61               	movwf	(display@str0+1)& (0+255),b
  6627  0155E8  0EE6               	movlw	low (STR_96+3)
  6628  0155EA  0100               	movlb	0	; () banked
  6629  0155EC  6F62               	movwf	display@str1& (0+255),b
  6630  0155EE  0EFF               	movlw	high (STR_96+3)
  6631  0155F0  0100               	movlb	0	; () banked
  6632  0155F2  6F63               	movwf	(display@str1+1)& (0+255),b
  6633  0155F4  0E01               	movlw	1
  6634  0155F6  ECEA  F09B         	call	_display
  6635  0155FA                     l12087:
  6636                           
  6637                           ;ChargeStation_task.c: 129: }
  6638                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6639  0155FA  A42A               	btfss	_ctmu_m+3,2,c
  6640  0155FC  D006               	goto	l12091
  6641                           
  6642                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6643  0155FE  0E00               	movlw	0
  6644  015600  6E2A               	movwf	_ctmu_m+3,c
  6645  015602  0E00               	movlw	0
  6646  015604  6E29               	movwf	_ctmu_m+2,c
  6647                           
  6648                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6649  015606  0E01               	movlw	1
  6650  015608  6E21               	movwf	_settings_flag,c
  6651  01560A                     l12091:
  6652                           
  6653                           ;ChargeStation_task.c: 133: }
  6654                           ;ChargeStation_task.c: 134: port_button_task();
  6655  01560A  EC9C  F098         	call	_port_button_task	;wreg free
  6656  01560E                     l12093:
  6657                           
  6658                           ;ChargeStation_task.c: 135: }
  6659                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6660  01560E  501B               	movf	_cut_time_flag,w,c
  6661  015610  B4D8               	btfsc	status,2,c
  6662  015612  D004               	goto	l12099
  6663                           
  6664                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6665  015614  0E00               	movlw	0
  6666  015616  6E1B               	movwf	_cut_time_flag,c
  6667                           
  6668                           ;ChargeStation_task.c: 139: Auto_cut();
  6669  015618  EC84  F09C         	call	_Auto_cut	;wreg free
  6670  01561C                     l12099:
  6671                           
  6672                           ;ChargeStation_task.c: 140: }
  6673                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6674  01561C  501F               	movf	_integrate_flag,w,c
  6675  01561E  B4D8               	btfsc	status,2,c
  6676  015620  D006               	goto	l129
  6677                           
  6678                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6679  015622  0E00               	movlw	0
  6680  015624  6E1F               	movwf	_integrate_flag,c
  6681                           
  6682                           ;ChargeStation_task.c: 144: integrate_current();
  6683  015626  EC40  F09F         	call	_integrate_current	;wreg free
  6684                           
  6685                           ;ChargeStation_task.c: 145: integrate_time();
  6686  01562A  EC4F  F0B1         	call	_integrate_time	;wreg free
  6687  01562E                     l129:
  6688                           
  6689                           ;ChargeStation_task.c: 146: }
  6690                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6691  01562E  5025               	movf	_time_change_flag,w,c
  6692  015630  B4D8               	btfsc	status,2,c
  6693  015632  D007               	goto	l130
  6694                           
  6695                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6696  015634  0E00               	movlw	0
  6697  015636  6E25               	movwf	_time_change_flag,c
  6698                           
  6699                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6700  015638  0420               	decf	_print_item,w,c
  6701  01563A  A4D8               	btfss	status,2,c
  6702  01563C  D002               	goto	l130
  6703  01563E  0E01               	movlw	1
  6704  015640  6E1D               	movwf	_display_flag,c
  6705  015642                     l130:
  6706                           
  6707                           ;ChargeStation_task.c: 151: }
  6708                           ;ChargeStation_task.c: 153: if (display_flag) {
  6709  015642  501D               	movf	_display_flag,w,c
  6710  015644  B4D8               	btfsc	status,2,c
  6711  015646  D004               	goto	l12117
  6712                           
  6713                           ;ChargeStation_task.c: 154: display_flag = 0;
  6714  015648  0E00               	movlw	0
  6715  01564A  6E1D               	movwf	_display_flag,c
  6716                           
  6717                           ;ChargeStation_task.c: 155: display_LCD();
  6718  01564C  EC8E  F082         	call	_display_LCD	;wreg free
  6719  015650                     l12117:
  6720                           
  6721                           ;ChargeStation_task.c: 156: }
  6722                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6723  015650  5023               	movf	_terminal_data_out,w,c
  6724  015652  B4D8               	btfsc	status,2,c
  6725  015654  0012               	return	
  6726  015656  5024               	movf	_terminal_data_out_flag,w,c
  6727  015658  B4D8               	btfsc	status,2,c
  6728  01565A  0012               	return	
  6729                           
  6730                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6731  01565C  0E00               	movlw	0
  6732  01565E  6E24               	movwf	_terminal_data_out_flag,c
  6733                           
  6734                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6735  015660  0EBA               	movlw	low _usb_tx
  6736  015662  0100               	movlb	0	; () banked
  6737  015664  6FAB               	movwf	data_out@tx& (0+255),b
  6738  015666  0E02               	movlw	high _usb_tx
  6739  015668  0100               	movlb	0	; () banked
  6740  01566A  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6741  01566C  ECE0  F097         	call	_data_out	;wreg free
  6742  015670  0012               	return	
  6743  015672                     __end_of_normal_task:
  6744                           	opt stack 0
  6745                           tblptru	equ	0xFF8
  6746                           tblptrh	equ	0xFF7
  6747                           tblptrl	equ	0xFF6
  6748                           tablat	equ	0xFF5
  6749                           prodh	equ	0xFF4
  6750                           prodl	equ	0xFF3
  6751                           intcon	equ	0xFF2
  6752                           postinc0	equ	0xFEE
  6753                           wreg	equ	0xFE8
  6754                           postinc1	equ	0xFE6
  6755                           postdec1	equ	0xFE5
  6756                           fsr1h	equ	0xFE2
  6757                           fsr1l	equ	0xFE1
  6758                           indf2	equ	0xFDF
  6759                           postinc2	equ	0xFDE
  6760                           postdec2	equ	0xFDD
  6761                           fsr2h	equ	0xFDA
  6762                           fsr2l	equ	0xFD9
  6763                           status	equ	0xFD8
  6764                           
  6765 ;; *************** function _settings_task *****************
  6766 ;; Defined at:
  6767 ;;		line 193 in file "settings.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;Total ram usage:        1 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:   17
  6788 ;; This function calls:
  6789 ;;		_display
  6790 ;;		_settings_adjust_time
  6791 ;;		_settings_auto_stop
  6792 ;;		_settings_integrating_reset
  6793 ;;		_settings_led_indicator
  6794 ;; This function is called by:
  6795 ;;		_normal_task
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text17
  6800  012A14                     __ptext17:
  6801                           	opt stack 0
  6802  012A14                     _settings_task:
  6803                           	opt stack 12
  6804                           
  6805                           ;settings.c: 194: static uint8_t settings_state = 0;
  6806                           ;settings.c: 195: switch (settings_state) {
  6807                           
  6808                           ;incstack = 0
  6809  012A14  D10A               	goto	l11731
  6810  012A16                     l11649:
  6811                           
  6812                           ;settings.c: 197: settings_item = SELECT;
  6813  012A16  0E00               	movlw	0
  6814  012A18  0100               	movlb	0	; () banked
  6815  012A1A  6FFF               	movwf	_settings_item& (0+255),b
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6819  012A1C  0E67               	movlw	low STR_64
  6820  012A1E  0100               	movlb	0	; () banked
  6821  012A20  6F60               	movwf	display@str0& (0+255),b
  6822  012A22  0EFF               	movlw	high STR_64
  6823  012A24  0100               	movlb	0	; () banked
  6824  012A26  6F61               	movwf	(display@str0+1)& (0+255),b
  6825  012A28  0E5F               	movlw	low STR_65
  6826  012A2A  0100               	movlb	0	; () banked
  6827  012A2C  6F62               	movwf	display@str1& (0+255),b
  6828  012A2E  0EFE               	movlw	high STR_65
  6829  012A30  0100               	movlb	0	; () banked
  6830  012A32  6F63               	movwf	(display@str1+1)& (0+255),b
  6831  012A34  0E03               	movlw	3
  6832  012A36  ECEA  F09B         	call	_display
  6833                           
  6834                           ;settings.c: 199: settings_state += 1;
  6835  012A3A  0101               	movlb	1	; () banked
  6836  012A3C  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  6837                           
  6838                           ;settings.c: 200: break;
  6839  012A3E  0012               	return	
  6840  012A40                     l11655:
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;settings.c: 202: {
  6844                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6845  012A40  0E00               	movlw	0
  6846  012A42  0100               	movlb	0	; () banked
  6847  012A44  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6851  012A46  0101               	movlb	1	; () banked
  6852  012A48  A15D               	btfss	(_port+48)& (0+255),0,b
  6853  012A4A  D013               	goto	l11669
  6854                           
  6855                           ; BSR set to: 1
  6856                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6857  012A4C  0E00               	movlw	0
  6858  012A4E  0101               	movlb	1	; () banked
  6859  012A50  6F5E               	movwf	(_port+49)& (0+255),b
  6860  012A52  0E00               	movlw	0
  6861  012A54  6F5D               	movwf	(_port+48)& (0+255),b
  6862                           
  6863                           ; BSR set to: 1
  6864                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6865  012A56  0E04               	movlw	4
  6866  012A58  0100               	movlb	0	; () banked
  6867  012A5A  19FF               	xorwf	_settings_item& (0+255),w,b
  6868  012A5C  A4D8               	btfss	status,2,c
  6869  012A5E  D004               	goto	l11665
  6870                           
  6871                           ; BSR set to: 0
  6872  012A60  0E00               	movlw	0
  6873  012A62  0100               	movlb	0	; () banked
  6874  012A64  6FFF               	movwf	_settings_item& (0+255),b
  6875  012A66  D002               	goto	l11667
  6876  012A68                     l11665:
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;settings.c: 207: else settings_item++;
  6880  012A68  0100               	movlb	0	; () banked
  6881  012A6A  2BFF               	incf	_settings_item& (0+255),f,b
  6882  012A6C                     l11667:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;settings.c: 208: item_change_flag = 1;
  6886  012A6C  0E01               	movlw	1
  6887  012A6E  0100               	movlb	0	; () banked
  6888  012A70  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6889  012A72                     l11669:
  6890                           
  6891                           ;settings.c: 209: }
  6892                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6893  012A72  0101               	movlb	1	; () banked
  6894  012A74  A12F               	btfss	(_port+2)& (0+255),0,b
  6895  012A76  D013               	goto	l11679
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6899  012A78  0E00               	movlw	0
  6900  012A7A  0101               	movlb	1	; () banked
  6901  012A7C  6F30               	movwf	(_port+3)& (0+255),b
  6902  012A7E  0E00               	movlw	0
  6903  012A80  6F2F               	movwf	(_port+2)& (0+255),b
  6904                           
  6905                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6906  012A82  0100               	movlb	0	; () banked
  6907  012A84  51FF               	movf	_settings_item& (0+255),w,b
  6908  012A86  0100               	movlb	0	; () banked
  6909  012A88  A4D8               	btfss	status,2,c
  6910  012A8A  D004               	goto	l11675
  6911                           
  6912                           ; BSR set to: 0
  6913  012A8C  0E04               	movlw	4
  6914  012A8E  0100               	movlb	0	; () banked
  6915  012A90  6FFF               	movwf	_settings_item& (0+255),b
  6916  012A92  D002               	goto	l11677
  6917  012A94                     l11675:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;settings.c: 213: else settings_item--;
  6921  012A94  0100               	movlb	0	; () banked
  6922  012A96  07FF               	decf	_settings_item& (0+255),f,b
  6923  012A98                     l11677:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;settings.c: 214: item_change_flag = 1;
  6927  012A98  0E01               	movlw	1
  6928  012A9A  0100               	movlb	0	; () banked
  6929  012A9C  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6930  012A9E                     l11679:
  6931                           
  6932                           ;settings.c: 215: }
  6933                           ;settings.c: 216: if (item_change_flag) {
  6934  012A9E  0100               	movlb	0	; () banked
  6935  012AA0  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  6936  012AA2  0100               	movlb	0	; () banked
  6937  012AA4  A4D8               	btfss	status,2,c
  6938  012AA6  D051               	goto	l11695
  6939  012AA8  D061               	goto	l549
  6940  012AAA                     l11683:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  6944  012AAA  0E67               	movlw	low STR_64
  6945  012AAC  0100               	movlb	0	; () banked
  6946  012AAE  6F60               	movwf	display@str0& (0+255),b
  6947  012AB0  0EFF               	movlw	high STR_64
  6948  012AB2  0100               	movlb	0	; () banked
  6949  012AB4  6F61               	movwf	(display@str0+1)& (0+255),b
  6950  012AB6  0E5F               	movlw	low STR_65
  6951  012AB8  0100               	movlb	0	; () banked
  6952  012ABA  6F62               	movwf	display@str1& (0+255),b
  6953  012ABC  0EFE               	movlw	high STR_65
  6954  012ABE  0100               	movlb	0	; () banked
  6955  012AC0  6F63               	movwf	(display@str1+1)& (0+255),b
  6956  012AC2  0E03               	movlw	3
  6957  012AC4  ECEA  F09B         	call	_display
  6958                           
  6959                           ;settings.c: 220: break;
  6960  012AC8  D051               	goto	l549
  6961  012ACA                     l11685:
  6962                           
  6963                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  6964  012ACA  0E67               	movlw	low STR_64
  6965  012ACC  0100               	movlb	0	; () banked
  6966  012ACE  6F60               	movwf	display@str0& (0+255),b
  6967  012AD0  0EFF               	movlw	high STR_64
  6968  012AD2  0100               	movlb	0	; () banked
  6969  012AD4  6F61               	movwf	(display@str0+1)& (0+255),b
  6970  012AD6  0EA3               	movlw	low STR_69
  6971  012AD8  0100               	movlb	0	; () banked
  6972  012ADA  6F62               	movwf	display@str1& (0+255),b
  6973  012ADC  0EFE               	movlw	high STR_69
  6974  012ADE  0100               	movlb	0	; () banked
  6975  012AE0  6F63               	movwf	(display@str1+1)& (0+255),b
  6976  012AE2  0E03               	movlw	3
  6977  012AE4  ECEA  F09B         	call	_display
  6978                           
  6979                           ;settings.c: 223: break;
  6980  012AE8  D041               	goto	l549
  6981  012AEA                     l11687:
  6982                           
  6983                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  6984  012AEA  0E67               	movlw	low STR_64
  6985  012AEC  0100               	movlb	0	; () banked
  6986  012AEE  6F60               	movwf	display@str0& (0+255),b
  6987  012AF0  0EFF               	movlw	high STR_64
  6988  012AF2  0100               	movlb	0	; () banked
  6989  012AF4  6F61               	movwf	(display@str0+1)& (0+255),b
  6990  012AF6  0E70               	movlw	low STR_71
  6991  012AF8  0100               	movlb	0	; () banked
  6992  012AFA  6F62               	movwf	display@str1& (0+255),b
  6993  012AFC  0EFE               	movlw	high STR_71
  6994  012AFE  0100               	movlb	0	; () banked
  6995  012B00  6F63               	movwf	(display@str1+1)& (0+255),b
  6996  012B02  0E03               	movlw	3
  6997  012B04  ECEA  F09B         	call	_display
  6998                           
  6999                           ;settings.c: 226: break;
  7000  012B08  D031               	goto	l549
  7001  012B0A                     l11689:
  7002                           
  7003                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7004  012B0A  0E67               	movlw	low STR_64
  7005  012B0C  0100               	movlb	0	; () banked
  7006  012B0E  6F60               	movwf	display@str0& (0+255),b
  7007  012B10  0EFF               	movlw	high STR_64
  7008  012B12  0100               	movlb	0	; () banked
  7009  012B14  6F61               	movwf	(display@str0+1)& (0+255),b
  7010  012B16  0EB3               	movlw	low STR_73
  7011  012B18  0100               	movlb	0	; () banked
  7012  012B1A  6F62               	movwf	display@str1& (0+255),b
  7013  012B1C  0EFE               	movlw	high STR_73
  7014  012B1E  0100               	movlb	0	; () banked
  7015  012B20  6F63               	movwf	(display@str1+1)& (0+255),b
  7016  012B22  0E03               	movlw	3
  7017  012B24  ECEA  F09B         	call	_display
  7018                           
  7019                           ;settings.c: 229: break;
  7020  012B28  D021               	goto	l549
  7021  012B2A                     l11691:
  7022                           
  7023                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7024  012B2A  0E67               	movlw	low STR_64
  7025  012B2C  0100               	movlb	0	; () banked
  7026  012B2E  6F60               	movwf	display@str0& (0+255),b
  7027  012B30  0EFF               	movlw	high STR_64
  7028  012B32  0100               	movlb	0	; () banked
  7029  012B34  6F61               	movwf	(display@str0+1)& (0+255),b
  7030  012B36  0ED3               	movlw	low STR_75
  7031  012B38  0100               	movlb	0	; () banked
  7032  012B3A  6F62               	movwf	display@str1& (0+255),b
  7033  012B3C  0EFE               	movlw	high STR_75
  7034  012B3E  0100               	movlb	0	; () banked
  7035  012B40  6F63               	movwf	(display@str1+1)& (0+255),b
  7036  012B42  0E03               	movlw	3
  7037  012B44  ECEA  F09B         	call	_display
  7038                           
  7039                           ;settings.c: 233: }
  7040                           
  7041                           ;settings.c: 232: break;
  7042  012B48  D011               	goto	l549
  7043  012B4A                     l11695:
  7044  012B4A  0100               	movlb	0	; () banked
  7045  012B4C  51FF               	movf	_settings_item& (0+255),w,b
  7046                           
  7047                           ; Switch size 1, requested type "space"
  7048                           ; Number of cases is 5, Range of values is 0 to 4
  7049                           ; switch strategies available:
  7050                           ; Name         Instructions Cycles
  7051                           ; simple_byte           16     9 (average)
  7052                           ;	Chosen strategy is simple_byte
  7053  012B4E  0A00               	xorlw	0	; case 0
  7054  012B50  B4D8               	btfsc	status,2,c
  7055  012B52  D7AB               	goto	l11683
  7056  012B54  0A01               	xorlw	1	; case 1
  7057  012B56  B4D8               	btfsc	status,2,c
  7058  012B58  D7B8               	goto	l11685
  7059  012B5A  0A03               	xorlw	3	; case 2
  7060  012B5C  B4D8               	btfsc	status,2,c
  7061  012B5E  D7C5               	goto	l11687
  7062  012B60  0A01               	xorlw	1	; case 3
  7063  012B62  B4D8               	btfsc	status,2,c
  7064  012B64  D7D2               	goto	l11689
  7065  012B66  0A07               	xorlw	7	; case 4
  7066  012B68  B4D8               	btfsc	status,2,c
  7067  012B6A  D7DF               	goto	l11691
  7068  012B6C                     l549:
  7069                           
  7070                           ;settings.c: 234: }
  7071                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7072  012B6C  0101               	movlb	1	; () banked
  7073  012B6E  A146               	btfss	(_port+25)& (0+255),0,b
  7074  012B70  D007               	goto	l11701
  7075                           
  7076                           ; BSR set to: 1
  7077                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7078  012B72  0E00               	movlw	0
  7079  012B74  0101               	movlb	1	; () banked
  7080  012B76  6F47               	movwf	(_port+26)& (0+255),b
  7081  012B78  0E00               	movlw	0
  7082  012B7A  6F46               	movwf	(_port+25)& (0+255),b
  7083                           
  7084                           ; BSR set to: 1
  7085                           ;settings.c: 237: settings_state += 1;
  7086  012B7C  0101               	movlb	1	; () banked
  7087  012B7E  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  7088  012B80                     l11701:
  7089                           
  7090                           ; BSR set to: 1
  7091                           ;settings.c: 238: }
  7092                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7093  012B80  A029               	btfss	_ctmu_m+2,0,c
  7094  012B82  0012               	return	
  7095                           
  7096                           ; BSR set to: 1
  7097                           ;settings.c: 240: ctmu_m.flags = 0;
  7098  012B84  0E00               	movlw	0
  7099  012B86  6E2A               	movwf	_ctmu_m+3,c
  7100  012B88  0E00               	movlw	0
  7101  012B8A  6E29               	movwf	_ctmu_m+2,c
  7102                           
  7103                           ;settings.c: 241: settings_state = 0;
  7104  012B8C  0E00               	movlw	0
  7105  012B8E  0101               	movlb	1	; () banked
  7106  012B90  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7107                           
  7108                           ;settings.c: 242: settings_flag = 0;
  7109  012B92  0E00               	movlw	0
  7110  012B94  6E21               	movwf	_settings_flag,c
  7111                           
  7112                           ; BSR set to: 1
  7113                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7114  012B96  0EE6               	movlw	low (STR_96+3)
  7115  012B98  0100               	movlb	0	; () banked
  7116  012B9A  6F60               	movwf	display@str0& (0+255),b
  7117  012B9C  0EFF               	movlw	high (STR_96+3)
  7118  012B9E  0100               	movlb	0	; () banked
  7119  012BA0  6F61               	movwf	(display@str0+1)& (0+255),b
  7120  012BA2  0EE6               	movlw	low (STR_96+3)
  7121  012BA4  0100               	movlb	0	; () banked
  7122  012BA6  6F62               	movwf	display@str1& (0+255),b
  7123  012BA8  0EFF               	movlw	high (STR_96+3)
  7124  012BAA  0100               	movlb	0	; () banked
  7125  012BAC  6F63               	movwf	(display@str1+1)& (0+255),b
  7126  012BAE  0E01               	movlw	1
  7127  012BB0  ECEA  F09B         	call	_display
  7128                           
  7129                           ;settings.c: 244: }
  7130                           ;settings.c: 245: }
  7131                           ;settings.c: 246: break;
  7132  012BB4  0012               	return	
  7133  012BB6                     l11707:
  7134                           
  7135                           ;settings.c: 250: settings_state = 1;
  7136  012BB6  0E01               	movlw	1
  7137  012BB8  0101               	movlb	1	; () banked
  7138  012BBA  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7139                           
  7140                           ;settings.c: 251: break;
  7141  012BBC  0012               	return	
  7142  012BBE                     l11709:
  7143                           
  7144                           ;settings.c: 253: if (settings_adjust_time()) {
  7145  012BBE  ECD4  F0A3         	call	_settings_adjust_time	;wreg free
  7146  012BC2  0900               	iorlw	0
  7147  012BC4  B4D8               	btfsc	status,2,c
  7148  012BC6  0012               	return	
  7149                           
  7150                           ;settings.c: 254: settings_state = 0;
  7151  012BC8  0E00               	movlw	0
  7152  012BCA  0101               	movlb	1	; () banked
  7153  012BCC  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;settings.c: 255: }
  7157                           ;settings.c: 256: break;
  7158  012BCE  0012               	return	
  7159  012BD0                     l11713:
  7160                           
  7161                           ;settings.c: 258: if (settings_auto_stop()) {
  7162  012BD0  ECEC  F093         	call	_settings_auto_stop	;wreg free
  7163  012BD4  0900               	iorlw	0
  7164  012BD6  B4D8               	btfsc	status,2,c
  7165  012BD8  0012               	return	
  7166                           
  7167                           ;settings.c: 259: settings_state = 0;
  7168  012BDA  0E00               	movlw	0
  7169  012BDC  0101               	movlb	1	; () banked
  7170  012BDE  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;settings.c: 260: }
  7174                           ;settings.c: 261: break;
  7175  012BE0  0012               	return	
  7176  012BE2                     l11717:
  7177                           
  7178                           ;settings.c: 263: if (settings_led_indicator()) {
  7179  012BE2  ECC5  F092         	call	_settings_led_indicator	;wreg free
  7180  012BE6  0900               	iorlw	0
  7181  012BE8  B4D8               	btfsc	status,2,c
  7182  012BEA  0012               	return	
  7183                           
  7184                           ;settings.c: 264: settings_state = 0;
  7185  012BEC  0E00               	movlw	0
  7186  012BEE  0101               	movlb	1	; () banked
  7187  012BF0  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7188                           
  7189                           ; BSR set to: 1
  7190                           ;settings.c: 265: }
  7191                           ;settings.c: 266: break;
  7192  012BF2  0012               	return	
  7193  012BF4                     l11721:
  7194                           
  7195                           ;settings.c: 268: if (settings_integrating_reset()) {
  7196  012BF4  EC99  F091         	call	_settings_integrating_reset	;wreg free
  7197  012BF8  0900               	iorlw	0
  7198  012BFA  B4D8               	btfsc	status,2,c
  7199  012BFC  0012               	return	
  7200                           
  7201                           ;settings.c: 269: settings_state = 0;
  7202  012BFE  0E00               	movlw	0
  7203  012C00  0101               	movlb	1	; () banked
  7204  012C02  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;settings.c: 274: }
  7208                           
  7209                           ; BSR set to: 1
  7210                           ;settings.c: 273: break;
  7211                           
  7212                           ;settings.c: 272: default:
  7213                           
  7214                           ; BSR set to: 1
  7215                           ;settings.c: 270: }
  7216                           ;settings.c: 271: break;
  7217  012C04  0012               	return	
  7218  012C06                     l11727:
  7219  012C06  0100               	movlb	0	; () banked
  7220  012C08  51FF               	movf	_settings_item& (0+255),w,b
  7221                           
  7222                           ; Switch size 1, requested type "space"
  7223                           ; Number of cases is 5, Range of values is 0 to 4
  7224                           ; switch strategies available:
  7225                           ; Name         Instructions Cycles
  7226                           ; simple_byte           16     9 (average)
  7227                           ;	Chosen strategy is simple_byte
  7228  012C0A  0A00               	xorlw	0	; case 0
  7229  012C0C  B4D8               	btfsc	status,2,c
  7230  012C0E  D7D3               	goto	l11707
  7231  012C10  0A01               	xorlw	1	; case 1
  7232  012C12  B4D8               	btfsc	status,2,c
  7233  012C14  D7D4               	goto	l11709
  7234  012C16  0A03               	xorlw	3	; case 2
  7235  012C18  B4D8               	btfsc	status,2,c
  7236  012C1A  D7DA               	goto	l11713
  7237  012C1C  0A01               	xorlw	1	; case 3
  7238  012C1E  B4D8               	btfsc	status,2,c
  7239  012C20  D7E0               	goto	l11717
  7240  012C22  0A07               	xorlw	7	; case 4
  7241  012C24  A4D8               	btfss	status,2,c
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;settings.c: 276: }
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;settings.c: 275: break;
  7248  012C26  0012               	return	
  7249  012C28  D7E5               	goto	l11721
  7250  012C2A                     l11731:
  7251  012C2A  0101               	movlb	1	; () banked
  7252  012C2C  512B               	movf	settings_task@settings_state& (0+255),w,b
  7253                           
  7254                           ; Switch size 1, requested type "space"
  7255                           ; Number of cases is 3, Range of values is 0 to 2
  7256                           ; switch strategies available:
  7257                           ; Name         Instructions Cycles
  7258                           ; simple_byte           10     6 (average)
  7259                           ;	Chosen strategy is simple_byte
  7260  012C2E  0A00               	xorlw	0	; case 0
  7261  012C30  B4D8               	btfsc	status,2,c
  7262  012C32  D6F1               	goto	l11649
  7263  012C34  0A01               	xorlw	1	; case 1
  7264  012C36  B4D8               	btfsc	status,2,c
  7265  012C38  D703               	goto	l11655
  7266  012C3A  0A03               	xorlw	3	; case 2
  7267  012C3C  A4D8               	btfss	status,2,c
  7268  012C3E  0012               	return	
  7269  012C40  D7E2               	goto	l11727
  7270  012C42                     __end_of_settings_task:
  7271                           	opt stack 0
  7272                           tblptru	equ	0xFF8
  7273                           tblptrh	equ	0xFF7
  7274                           tblptrl	equ	0xFF6
  7275                           tablat	equ	0xFF5
  7276                           prodh	equ	0xFF4
  7277                           prodl	equ	0xFF3
  7278                           intcon	equ	0xFF2
  7279                           postinc0	equ	0xFEE
  7280                           wreg	equ	0xFE8
  7281                           postinc1	equ	0xFE6
  7282                           postdec1	equ	0xFE5
  7283                           fsr1h	equ	0xFE2
  7284                           fsr1l	equ	0xFE1
  7285                           indf2	equ	0xFDF
  7286                           postinc2	equ	0xFDE
  7287                           postdec2	equ	0xFDD
  7288                           fsr2h	equ	0xFDA
  7289                           fsr2l	equ	0xFD9
  7290                           status	equ	0xFD8
  7291                           
  7292 ;; *************** function _settings_led_indicator *****************
  7293 ;; Defined at:
  7294 ;;		line 96 in file "settings.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  i               1   52[BANK0 ] unsigned char 
  7299 ;;  str            20   27[BANK0 ] unsigned char [20]
  7300 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7301 ;;		 -> settings_led_indicator@str_1327(20), 
  7302 ;;  i               1   51[BANK0 ] unsigned char 
  7303 ;;  j               1   53[BANK0 ] unsigned char 
  7304 ;;  str            20    7[BANK0 ] unsigned char [20]
  7305 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7306 ;;		 -> settings_led_indicator@str(20), 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      unsigned char 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7317 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7320 ;;Total ram usage:       48 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:   12
  7323 ;; This function calls:
  7324 ;;		_LED_output
  7325 ;;		_display
  7326 ;;		_strcpy
  7327 ;; This function is called by:
  7328 ;;		_settings_task
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text18
  7333  01258A                     __ptext18:
  7334                           	opt stack 0
  7335  01258A                     _settings_led_indicator:
  7336                           	opt stack 16
  7337                           
  7338                           ;settings.c: 97: static uint8_t state = 0;
  7339                           ;settings.c: 98: switch (state) {
  7340                           
  7341                           ;incstack = 0
  7342  01258A  D100               	goto	l11237
  7343  01258C                     l11173:
  7344                           
  7345                           ;settings.c: 100: {
  7346                           ;settings.c: 101: char str[20];
  7347                           ;settings.c: 102: char *strp;
  7348                           ;settings.c: 103: strp = str;
  7349  01258C  0E67               	movlw	low settings_led_indicator@str
  7350  01258E  0100               	movlb	0	; () banked
  7351  012590  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7352  012592  0E00               	movlw	high settings_led_indicator@str
  7353  012594  0100               	movlb	0	; () banked
  7354  012596  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7358  012598  0E00               	movlw	0
  7359  01259A  0100               	movlb	0	; () banked
  7360  01259C  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7361  01259E                     l11177:
  7362                           
  7363                           ; BSR set to: 0
  7364  01259E  0E02               	movlw	2
  7365  0125A0  0100               	movlb	0	; () banked
  7366  0125A2  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7367  0125A4  D001               	goto	l11181
  7368  0125A6  D031               	goto	l11193
  7369  0125A8                     l11181:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7373  0125A8  0100               	movlb	0	; () banked
  7374  0125AA  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7375  0125AC  0D17               	mullw	23
  7376  0125AE  0E16               	movlw	22
  7377  0125B0  26F3               	addwf	prodl,f,c
  7378  0125B2  0E00               	movlw	0
  7379  0125B4  22F4               	addwfc	prodh,f,c
  7380  0125B6  0E2D               	movlw	low _port
  7381  0125B8  24F3               	addwf	prodl,w,c
  7382  0125BA  6ED9               	movwf	fsr2l,c
  7383  0125BC  0E01               	movlw	high _port
  7384  0125BE  20F4               	addwfc	prodh,w,c
  7385  0125C0  6EDA               	movwf	fsr2h,c
  7386  0125C2  0101               	movlb	1	; () banked
  7387  0125C4  A2DF               	btfss	indf2,1,c
  7388  0125C6  D00D               	goto	l11185
  7389                           
  7390                           ; BSR set to: 1
  7391  0125C8  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7392  0125CC  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7393  0125D0  0EAB               	movlw	low STR_40
  7394  0125D2  0100               	movlb	0	; () banked
  7395  0125D4  6F62               	movwf	strcpy@from& (0+255),b
  7396  0125D6  0EFF               	movlw	high STR_40
  7397  0125D8  0100               	movlb	0	; () banked
  7398  0125DA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7399  0125DC  ECC9  F0B3         	call	_strcpy	;wreg free
  7400  0125E0  D00C               	goto	l11187
  7401  0125E2                     l11185:
  7402                           
  7403                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7404  0125E2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7405  0125E6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7406  0125EA  0EB1               	movlw	low STR_41
  7407  0125EC  0100               	movlb	0	; () banked
  7408  0125EE  6F62               	movwf	strcpy@from& (0+255),b
  7409  0125F0  0EFF               	movlw	high STR_41
  7410  0125F2  0100               	movlb	0	; () banked
  7411  0125F4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7412  0125F6  ECC9  F0B3         	call	_strcpy	;wreg free
  7413  0125FA                     l11187:
  7414                           
  7415                           ;settings.c: 107: strp += 5;
  7416  0125FA  0E05               	movlw	5
  7417  0125FC  0100               	movlb	0	; () banked
  7418  0125FE  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7419  012600  0E00               	movlw	0
  7420  012602  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7421                           
  7422                           ; BSR set to: 0
  7423  012604  0100               	movlb	0	; () banked
  7424  012606  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7425  012608  D7CA               	goto	l11177
  7426  01260A                     l11193:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;settings.c: 108: }
  7430                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7431  01260A  0E81               	movlw	low STR_42
  7432  01260C  0100               	movlb	0	; () banked
  7433  01260E  6F60               	movwf	display@str0& (0+255),b
  7434  012610  0EFE               	movlw	high STR_42
  7435  012612  0100               	movlb	0	; () banked
  7436  012614  6F61               	movwf	(display@str0+1)& (0+255),b
  7437  012616  0E67               	movlw	low settings_led_indicator@str
  7438  012618  0100               	movlb	0	; () banked
  7439  01261A  6F62               	movwf	display@str1& (0+255),b
  7440  01261C  0E00               	movlw	high settings_led_indicator@str
  7441  01261E  0100               	movlb	0	; () banked
  7442  012620  6F63               	movwf	(display@str1+1)& (0+255),b
  7443  012622  0E03               	movlw	3
  7444  012624  ECEA  F09B         	call	_display
  7445                           
  7446                           ;settings.c: 110: state = 1;
  7447  012628  0E01               	movlw	1
  7448  01262A  0101               	movlb	1	; () banked
  7449  01262C  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7450                           
  7451                           ;settings.c: 111: }
  7452                           ;settings.c: 112: break;
  7453  01262E  D0B6               	goto	l501
  7454  012630                     l11197:
  7455                           
  7456                           ; BSR set to: 1
  7457                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7458  012630  0E00               	movlw	0
  7459  012632  0100               	movlb	0	; () banked
  7460  012634  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7461  012636                     l11199:
  7462                           
  7463                           ; BSR set to: 0
  7464  012636  0E02               	movlw	2
  7465  012638  0100               	movlb	0	; () banked
  7466  01263A  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7467  01263C  D001               	goto	l11203
  7468  01263E  D0AE               	goto	l501
  7469  012640                     l11203:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7473  012640  0100               	movlb	0	; () banked
  7474  012642  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7475  012644  0D17               	mullw	23
  7476  012646  0E02               	movlw	2
  7477  012648  26F3               	addwf	prodl,f,c
  7478  01264A  0E00               	movlw	0
  7479  01264C  22F4               	addwfc	prodh,f,c
  7480  01264E  0E2D               	movlw	low _port
  7481  012650  24F3               	addwf	prodl,w,c
  7482  012652  6ED9               	movwf	fsr2l,c
  7483  012654  0E01               	movlw	high _port
  7484  012656  20F4               	addwfc	prodh,w,c
  7485  012658  6EDA               	movwf	fsr2h,c
  7486  01265A  0101               	movlb	1	; () banked
  7487  01265C  A0DF               	btfss	indf2,0,c
  7488  01265E  D093               	goto	l11231
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7492  012660  0100               	movlb	0	; () banked
  7493  012662  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7494  012664  0D17               	mullw	23
  7495  012666  0E02               	movlw	2
  7496  012668  26F3               	addwf	prodl,f,c
  7497  01266A  0E00               	movlw	0
  7498  01266C  22F4               	addwfc	prodh,f,c
  7499  01266E  0E2D               	movlw	low _port
  7500  012670  24F3               	addwf	prodl,w,c
  7501  012672  6ED9               	movwf	fsr2l,c
  7502  012674  0E01               	movlw	high _port
  7503  012676  20F4               	addwfc	prodh,w,c
  7504  012678  6EDA               	movwf	fsr2h,c
  7505  01267A  0E00               	movlw	0
  7506  01267C  6EDE               	movwf	postinc2,c
  7507  01267E  0E00               	movlw	0
  7508  012680  6EDD               	movwf	postdec2,c
  7509                           
  7510                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7511  012682  0100               	movlb	0	; () banked
  7512  012684  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7513  012686  0D17               	mullw	23
  7514  012688  0E16               	movlw	22
  7515  01268A  26F3               	addwf	prodl,f,c
  7516  01268C  0E00               	movlw	0
  7517  01268E  22F4               	addwfc	prodh,f,c
  7518  012690  0E2D               	movlw	low _port
  7519  012692  24F3               	addwf	prodl,w,c
  7520  012694  6ED9               	movwf	fsr2l,c
  7521  012696  0E01               	movlw	high _port
  7522  012698  20F4               	addwfc	prodh,w,c
  7523  01269A  6EDA               	movwf	fsr2h,c
  7524  01269C  0101               	movlb	1	; () banked
  7525  01269E  B2DF               	btfsc	indf2,1,c
  7526  0126A0  D004               	goto	u13040
  7527  0126A2  0100               	movlb	0	; () banked
  7528  0126A4  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7529  0126A6  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7530  0126A8  D002               	goto	u13058
  7531  0126AA                     u13040:
  7532  0126AA  0100               	movlb	0	; () banked
  7533  0126AC  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7534  0126AE                     u13058:
  7535  0126AE  0100               	movlb	0	; () banked
  7536  0126B0  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7537  0126B2  0D17               	mullw	23
  7538  0126B4  0E16               	movlw	22
  7539  0126B6  26F3               	addwf	prodl,f,c
  7540  0126B8  0E00               	movlw	0
  7541  0126BA  22F4               	addwfc	prodh,f,c
  7542  0126BC  0E2D               	movlw	low _port
  7543  0126BE  24F3               	addwf	prodl,w,c
  7544  0126C0  6ED9               	movwf	fsr2l,c
  7545  0126C2  0E01               	movlw	high _port
  7546  0126C4  20F4               	addwfc	prodh,w,c
  7547  0126C6  6EDA               	movwf	fsr2h,c
  7548  0126C8  0100               	movlb	0	; () banked
  7549  0126CA  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7550  0126CC  0101               	movlb	1	; () banked
  7551  0126CE  50DF               	movf	223,w,c
  7552  0126D0  0100               	movlb	0	; () banked
  7553  0126D2  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7554  0126D4  0BFD               	andlw	-3
  7555  0126D6  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7556  0126D8  0101               	movlb	1	; () banked
  7557  0126DA  6EDF               	movwf	223,c
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;settings.c: 118: LED_output(j, 0);
  7561  0126DC  0E00               	movlw	0
  7562  0126DE  0100               	movlb	0	; () banked
  7563  0126E0  6F60               	movwf	LED_output@value& (0+255),b
  7564  0126E2  0100               	movlb	0	; () banked
  7565  0126E4  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7566  0126E6  ECA1  F0AF         	call	_LED_output
  7567                           
  7568                           ;settings.c: 119: char str[20];
  7569                           ;settings.c: 120: char *strp;
  7570                           ;settings.c: 121: strp = str;
  7571  0126EA  0E7B               	movlw	low settings_led_indicator@str_1327
  7572  0126EC  0100               	movlb	0	; () banked
  7573  0126EE  6F91               	movwf	settings_led_indicator@strp_1328& (0+255),b
  7574  0126F0  0E00               	movlw	high settings_led_indicator@str_1327
  7575  0126F2  0100               	movlb	0	; () banked
  7576  0126F4  6F92               	movwf	(settings_led_indicator@strp_1328+1)& (0+255),b
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7580  0126F6  0E00               	movlw	0
  7581  0126F8  0100               	movlb	0	; () banked
  7582  0126FA  6F94               	movwf	settings_led_indicator@i_1329& (0+255),b
  7583  0126FC                     l11213:
  7584                           
  7585                           ; BSR set to: 0
  7586  0126FC  0E02               	movlw	2
  7587  0126FE  0100               	movlb	0	; () banked
  7588  012700  6594               	cpfsgt	settings_led_indicator@i_1329& (0+255),b
  7589  012702  D001               	goto	l11217
  7590  012704  D031               	goto	l11229
  7591  012706                     l11217:
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7595  012706  0100               	movlb	0	; () banked
  7596  012708  5194               	movf	settings_led_indicator@i_1329& (0+255),w,b
  7597  01270A  0D17               	mullw	23
  7598  01270C  0E16               	movlw	22
  7599  01270E  26F3               	addwf	prodl,f,c
  7600  012710  0E00               	movlw	0
  7601  012712  22F4               	addwfc	prodh,f,c
  7602  012714  0E2D               	movlw	low _port
  7603  012716  24F3               	addwf	prodl,w,c
  7604  012718  6ED9               	movwf	fsr2l,c
  7605  01271A  0E01               	movlw	high _port
  7606  01271C  20F4               	addwfc	prodh,w,c
  7607  01271E  6EDA               	movwf	fsr2h,c
  7608  012720  0101               	movlb	1	; () banked
  7609  012722  A2DF               	btfss	indf2,1,c
  7610  012724  D00D               	goto	l11221
  7611                           
  7612                           ; BSR set to: 1
  7613  012726  C091  F060         	movff	settings_led_indicator@strp_1328,strcpy@to
  7614  01272A  C092  F061         	movff	settings_led_indicator@strp_1328+1,strcpy@to+1
  7615  01272E  0EAB               	movlw	low STR_40
  7616  012730  0100               	movlb	0	; () banked
  7617  012732  6F62               	movwf	strcpy@from& (0+255),b
  7618  012734  0EFF               	movlw	high STR_40
  7619  012736  0100               	movlb	0	; () banked
  7620  012738  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7621  01273A  ECC9  F0B3         	call	_strcpy	;wreg free
  7622  01273E  D00C               	goto	l11223
  7623  012740                     l11221:
  7624                           
  7625                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7626  012740  C091  F060         	movff	settings_led_indicator@strp_1328,strcpy@to
  7627  012744  C092  F061         	movff	settings_led_indicator@strp_1328+1,strcpy@to+1
  7628  012748  0EB1               	movlw	low STR_41
  7629  01274A  0100               	movlb	0	; () banked
  7630  01274C  6F62               	movwf	strcpy@from& (0+255),b
  7631  01274E  0EFF               	movlw	high STR_41
  7632  012750  0100               	movlb	0	; () banked
  7633  012752  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7634  012754  ECC9  F0B3         	call	_strcpy	;wreg free
  7635  012758                     l11223:
  7636                           
  7637                           ;settings.c: 125: strp += 5;
  7638  012758  0E05               	movlw	5
  7639  01275A  0100               	movlb	0	; () banked
  7640  01275C  2791               	addwf	settings_led_indicator@strp_1328& (0+255),f,b
  7641  01275E  0E00               	movlw	0
  7642  012760  2392               	addwfc	(settings_led_indicator@strp_1328+1)& (0+255),f,b
  7643                           
  7644                           ; BSR set to: 0
  7645  012762  0100               	movlb	0	; () banked
  7646  012764  2B94               	incf	settings_led_indicator@i_1329& (0+255),f,b
  7647  012766  D7CA               	goto	l11213
  7648  012768                     l11229:
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;settings.c: 126: }
  7652                           ;settings.c: 127: display(SETTINGS, "", str);
  7653  012768  0EE6               	movlw	low (STR_96+3)
  7654  01276A  0100               	movlb	0	; () banked
  7655  01276C  6F60               	movwf	display@str0& (0+255),b
  7656  01276E  0EFF               	movlw	high (STR_96+3)
  7657  012770  0100               	movlb	0	; () banked
  7658  012772  6F61               	movwf	(display@str0+1)& (0+255),b
  7659  012774  0E7B               	movlw	low settings_led_indicator@str_1327
  7660  012776  0100               	movlb	0	; () banked
  7661  012778  6F62               	movwf	display@str1& (0+255),b
  7662  01277A  0E00               	movlw	high settings_led_indicator@str_1327
  7663  01277C  0100               	movlb	0	; () banked
  7664  01277E  6F63               	movwf	(display@str1+1)& (0+255),b
  7665  012780  0E03               	movlw	3
  7666  012782  ECEA  F09B         	call	_display
  7667  012786                     l11231:
  7668  012786  0100               	movlb	0	; () banked
  7669  012788  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7670  01278A  D755               	goto	l11199
  7671  01278C                     l11237:
  7672  01278C  0101               	movlb	1	; () banked
  7673  01278E  512A               	movf	settings_led_indicator@state& (0+255),w,b
  7674                           
  7675                           ; Switch size 1, requested type "space"
  7676                           ; Number of cases is 2, Range of values is 0 to 1
  7677                           ; switch strategies available:
  7678                           ; Name         Instructions Cycles
  7679                           ; simple_byte            7     4 (average)
  7680                           ;	Chosen strategy is simple_byte
  7681  012790  0A00               	xorlw	0	; case 0
  7682  012792  B4D8               	btfsc	status,2,c
  7683  012794  D6FB               	goto	l11173
  7684  012796  0A01               	xorlw	1	; case 1
  7685  012798  B4D8               	btfsc	status,2,c
  7686  01279A  D74A               	goto	l11197
  7687  01279C                     l501:
  7688                           
  7689                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7690  01279C  A029               	btfss	_ctmu_m+2,0,c
  7691  01279E  D01A               	goto	l11247
  7692                           
  7693                           ;settings.c: 135: ctmu_m.flags = 0;
  7694  0127A0  0E00               	movlw	0
  7695  0127A2  6E2A               	movwf	_ctmu_m+3,c
  7696  0127A4  0E00               	movlw	0
  7697  0127A6  6E29               	movwf	_ctmu_m+2,c
  7698                           
  7699                           ;settings.c: 136: state = 0;
  7700  0127A8  0E00               	movlw	0
  7701  0127AA  0101               	movlb	1	; () banked
  7702  0127AC  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7703                           
  7704                           ;settings.c: 137: settings_flag = 0;
  7705  0127AE  0E00               	movlw	0
  7706  0127B0  6E21               	movwf	_settings_flag,c
  7707                           
  7708                           ; BSR set to: 1
  7709                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7710  0127B2  0EE6               	movlw	low (STR_96+3)
  7711  0127B4  0100               	movlb	0	; () banked
  7712  0127B6  6F60               	movwf	display@str0& (0+255),b
  7713  0127B8  0EFF               	movlw	high (STR_96+3)
  7714  0127BA  0100               	movlb	0	; () banked
  7715  0127BC  6F61               	movwf	(display@str0+1)& (0+255),b
  7716  0127BE  0EE6               	movlw	low (STR_96+3)
  7717  0127C0  0100               	movlb	0	; () banked
  7718  0127C2  6F62               	movwf	display@str1& (0+255),b
  7719  0127C4  0EFF               	movlw	high (STR_96+3)
  7720  0127C6  0100               	movlb	0	; () banked
  7721  0127C8  6F63               	movwf	(display@str1+1)& (0+255),b
  7722  0127CA  0E01               	movlw	1
  7723  0127CC  ECEA  F09B         	call	_display
  7724                           
  7725                           ;settings.c: 139: return 1;
  7726  0127D0  0E01               	movlw	1
  7727  0127D2  0012               	return	
  7728  0127D4                     l11247:
  7729                           
  7730                           ;settings.c: 140: }
  7731                           ;settings.c: 141: return 0;
  7732  0127D4  0E00               	movlw	0
  7733  0127D6  0012               	return	
  7734  0127D8                     __end_of_settings_led_indicator:
  7735                           	opt stack 0
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           intcon	equ	0xFF2
  7743                           postinc0	equ	0xFEE
  7744                           wreg	equ	0xFE8
  7745                           postinc1	equ	0xFE6
  7746                           postdec1	equ	0xFE5
  7747                           fsr1h	equ	0xFE2
  7748                           fsr1l	equ	0xFE1
  7749                           indf2	equ	0xFDF
  7750                           postinc2	equ	0xFDE
  7751                           postdec2	equ	0xFDD
  7752                           fsr2h	equ	0xFDA
  7753                           fsr2l	equ	0xFD9
  7754                           status	equ	0xFD8
  7755                           
  7756 ;; *************** function _settings_integrating_reset *****************
  7757 ;; Defined at:
  7758 ;;		line 144 in file "settings.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;		None
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  i               1   55[BANK0 ] unsigned char 
  7763 ;;  str            20   30[BANK0 ] unsigned char [20]
  7764 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7765 ;;		 -> settings_integrating_reset@str_1344(20), 
  7766 ;;  i               1   54[BANK0 ] unsigned char 
  7767 ;;  j               1   56[BANK0 ] unsigned char 
  7768 ;;  str            20   10[BANK0 ] unsigned char [20]
  7769 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7770 ;;		 -> settings_integrating_reset@str(20), 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1    wreg      unsigned char 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:       51 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:   12
  7787 ;; This function calls:
  7788 ;;		_display
  7789 ;;		_strcpy
  7790 ;; This function is called by:
  7791 ;;		_settings_task
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text19
  7796  012332                     __ptext19:
  7797                           	opt stack 0
  7798  012332                     _settings_integrating_reset:
  7799                           	opt stack 16
  7800                           
  7801                           ;settings.c: 145: static uint8_t state = 0;
  7802                           ;settings.c: 146: switch (state) {
  7803                           
  7804                           ;incstack = 0
  7805  012332  D105               	goto	l11315
  7806  012334                     l11253:
  7807                           
  7808                           ;settings.c: 148: {
  7809                           ;settings.c: 149: char str[20];
  7810                           ;settings.c: 150: char *strp;
  7811                           ;settings.c: 151: strp = str;
  7812  012334  0E6A               	movlw	low settings_integrating_reset@str
  7813  012336  0100               	movlb	0	; () banked
  7814  012338  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7815  01233A  0E00               	movlw	high settings_integrating_reset@str
  7816  01233C  0100               	movlb	0	; () banked
  7817  01233E  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7821  012340  0E00               	movlw	0
  7822  012342  0100               	movlb	0	; () banked
  7823  012344  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7824  012346                     l11257:
  7825                           
  7826                           ; BSR set to: 0
  7827  012346  0E02               	movlw	2
  7828  012348  0100               	movlb	0	; () banked
  7829  01234A  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7830  01234C  D001               	goto	l11261
  7831  01234E  D034               	goto	l11273
  7832  012350                     l11261:
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7836  012350  0100               	movlb	0	; () banked
  7837  012352  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7838  012354  0D17               	mullw	23
  7839  012356  0E0C               	movlw	12
  7840  012358  26F3               	addwf	prodl,f,c
  7841  01235A  0E00               	movlw	0
  7842  01235C  22F4               	addwfc	prodh,f,c
  7843  01235E  0E2D               	movlw	low _port
  7844  012360  24F3               	addwf	prodl,w,c
  7845  012362  6ED9               	movwf	fsr2l,c
  7846  012364  0E01               	movlw	high _port
  7847  012366  20F4               	addwfc	prodh,w,c
  7848  012368  6EDA               	movwf	fsr2h,c
  7849  01236A  50DE               	movf	postinc2,w,c
  7850  01236C  10DE               	iorwf	postinc2,w,c
  7851  01236E  10DE               	iorwf	postinc2,w,c
  7852  012370  10DE               	iorwf	postinc2,w,c
  7853  012372  B4D8               	btfsc	status,2,c
  7854  012374  D00D               	goto	l11265
  7855                           
  7856                           ; BSR set to: 0
  7857  012376  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7858  01237A  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7859  01237E  0EB7               	movlw	low STR_56
  7860  012380  0100               	movlb	0	; () banked
  7861  012382  6F62               	movwf	strcpy@from& (0+255),b
  7862  012384  0EFF               	movlw	high STR_56
  7863  012386  0100               	movlb	0	; () banked
  7864  012388  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7865  01238A  ECC9  F0B3         	call	_strcpy	;wreg free
  7866  01238E  D00C               	goto	l11267
  7867  012390                     l11265:
  7868                           
  7869                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7870  012390  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7871  012394  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7872  012398  0EA5               	movlw	low STR_57
  7873  01239A  0100               	movlb	0	; () banked
  7874  01239C  6F62               	movwf	strcpy@from& (0+255),b
  7875  01239E  0EFF               	movlw	high STR_57
  7876  0123A0  0100               	movlb	0	; () banked
  7877  0123A2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7878  0123A4  ECC9  F0B3         	call	_strcpy	;wreg free
  7879  0123A8                     l11267:
  7880                           
  7881                           ;settings.c: 155: strp += 5;
  7882  0123A8  0E05               	movlw	5
  7883  0123AA  0100               	movlb	0	; () banked
  7884  0123AC  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7885  0123AE  0E00               	movlw	0
  7886  0123B0  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7887                           
  7888                           ; BSR set to: 0
  7889  0123B2  0100               	movlb	0	; () banked
  7890  0123B4  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7891  0123B6  D7C7               	goto	l11257
  7892  0123B8                     l11273:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;settings.c: 156: }
  7896                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7897  0123B8  0E81               	movlw	low STR_42
  7898  0123BA  0100               	movlb	0	; () banked
  7899  0123BC  6F60               	movwf	display@str0& (0+255),b
  7900  0123BE  0EFE               	movlw	high STR_42
  7901  0123C0  0100               	movlb	0	; () banked
  7902  0123C2  6F61               	movwf	(display@str0+1)& (0+255),b
  7903  0123C4  0E6A               	movlw	low settings_integrating_reset@str
  7904  0123C6  0100               	movlb	0	; () banked
  7905  0123C8  6F62               	movwf	display@str1& (0+255),b
  7906  0123CA  0E00               	movlw	high settings_integrating_reset@str
  7907  0123CC  0100               	movlb	0	; () banked
  7908  0123CE  6F63               	movwf	(display@str1+1)& (0+255),b
  7909  0123D0  0E03               	movlw	3
  7910  0123D2  ECEA  F09B         	call	_display
  7911                           
  7912                           ;settings.c: 158: state = 1;
  7913  0123D6  0E01               	movlw	1
  7914  0123D8  0101               	movlb	1	; () banked
  7915  0123DA  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  7916                           
  7917                           ;settings.c: 159: }
  7918                           ;settings.c: 160: break;
  7919  0123DC  D0B8               	goto	l523
  7920  0123DE                     l11277:
  7921                           
  7922                           ; BSR set to: 1
  7923                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  7924  0123DE  0E00               	movlw	0
  7925  0123E0  0100               	movlb	0	; () banked
  7926  0123E2  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  7927  0123E4                     l11279:
  7928                           
  7929                           ; BSR set to: 0
  7930  0123E4  0E02               	movlw	2
  7931  0123E6  0100               	movlb	0	; () banked
  7932  0123E8  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  7933  0123EA  D001               	goto	l11283
  7934  0123EC  D0B0               	goto	l523
  7935  0123EE                     l11283:
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  7939  0123EE  0100               	movlb	0	; () banked
  7940  0123F0  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7941  0123F2  0D17               	mullw	23
  7942  0123F4  0E02               	movlw	2
  7943  0123F6  26F3               	addwf	prodl,f,c
  7944  0123F8  0E00               	movlw	0
  7945  0123FA  22F4               	addwfc	prodh,f,c
  7946  0123FC  0E2D               	movlw	low _port
  7947  0123FE  24F3               	addwf	prodl,w,c
  7948  012400  6ED9               	movwf	fsr2l,c
  7949  012402  0E01               	movlw	high _port
  7950  012404  20F4               	addwfc	prodh,w,c
  7951  012406  6EDA               	movwf	fsr2h,c
  7952  012408  0101               	movlb	1	; () banked
  7953  01240A  A0DF               	btfss	indf2,0,c
  7954  01240C  D095               	goto	l11309
  7955                           
  7956                           ; BSR set to: 1
  7957                           ;settings.c: 164: port[j].ctmu.flags = 0;
  7958  01240E  0100               	movlb	0	; () banked
  7959  012410  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7960  012412  0D17               	mullw	23
  7961  012414  0E02               	movlw	2
  7962  012416  26F3               	addwf	prodl,f,c
  7963  012418  0E00               	movlw	0
  7964  01241A  22F4               	addwfc	prodh,f,c
  7965  01241C  0E2D               	movlw	low _port
  7966  01241E  24F3               	addwf	prodl,w,c
  7967  012420  6ED9               	movwf	fsr2l,c
  7968  012422  0E01               	movlw	high _port
  7969  012424  20F4               	addwfc	prodh,w,c
  7970  012426  6EDA               	movwf	fsr2h,c
  7971  012428  0E00               	movlw	0
  7972  01242A  6EDE               	movwf	postinc2,c
  7973  01242C  0E00               	movlw	0
  7974  01242E  6EDD               	movwf	postdec2,c
  7975                           
  7976                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  7977  012430  0100               	movlb	0	; () banked
  7978  012432  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7979  012434  0D17               	mullw	23
  7980  012436  0E08               	movlw	8
  7981  012438  26F3               	addwf	prodl,f,c
  7982  01243A  0E00               	movlw	0
  7983  01243C  22F4               	addwfc	prodh,f,c
  7984  01243E  0E2D               	movlw	low _port
  7985  012440  24F3               	addwf	prodl,w,c
  7986  012442  6ED9               	movwf	fsr2l,c
  7987  012444  0E01               	movlw	high _port
  7988  012446  20F4               	addwfc	prodh,w,c
  7989  012448  6EDA               	movwf	fsr2h,c
  7990  01244A  6ADE               	clrf	postinc2,c
  7991  01244C  6ADE               	clrf	postinc2,c
  7992  01244E  6ADE               	clrf	postinc2,c
  7993  012450  6ADD               	clrf	postdec2,c
  7994                           
  7995                           ;settings.c: 166: port[j].integrated_current = 0;
  7996  012452  0100               	movlb	0	; () banked
  7997  012454  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7998  012456  0D17               	mullw	23
  7999  012458  0E0C               	movlw	12
  8000  01245A  26F3               	addwf	prodl,f,c
  8001  01245C  0E00               	movlw	0
  8002  01245E  22F4               	addwfc	prodh,f,c
  8003  012460  0E2D               	movlw	low _port
  8004  012462  24F3               	addwf	prodl,w,c
  8005  012464  6ED9               	movwf	fsr2l,c
  8006  012466  0E01               	movlw	high _port
  8007  012468  20F4               	addwfc	prodh,w,c
  8008  01246A  6EDA               	movwf	fsr2h,c
  8009  01246C  6ADE               	clrf	postinc2,c
  8010  01246E  6ADE               	clrf	postinc2,c
  8011  012470  6ADE               	clrf	postinc2,c
  8012  012472  6ADD               	clrf	postdec2,c
  8013                           
  8014                           ;settings.c: 167: port[j].integrated_time = 0;
  8015  012474  0100               	movlb	0	; () banked
  8016  012476  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8017  012478  0D17               	mullw	23
  8018  01247A  0E10               	movlw	16
  8019  01247C  26F3               	addwf	prodl,f,c
  8020  01247E  0E00               	movlw	0
  8021  012480  22F4               	addwfc	prodh,f,c
  8022  012482  0E2D               	movlw	low _port
  8023  012484  24F3               	addwf	prodl,w,c
  8024  012486  6ED9               	movwf	fsr2l,c
  8025  012488  0E01               	movlw	high _port
  8026  01248A  20F4               	addwfc	prodh,w,c
  8027  01248C  6EDA               	movwf	fsr2h,c
  8028  01248E  6ADE               	clrf	postinc2,c
  8029  012490  6ADE               	clrf	postinc2,c
  8030  012492  6ADE               	clrf	postinc2,c
  8031  012494  6ADD               	clrf	postdec2,c
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;settings.c: 168: char str[20];
  8035                           ;settings.c: 169: char *strp;
  8036                           ;settings.c: 170: strp = str;
  8037  012496  0E7E               	movlw	low settings_integrating_reset@str_1344
  8038  012498  0100               	movlb	0	; () banked
  8039  01249A  6F94               	movwf	settings_integrating_reset@strp_1345& (0+255),b
  8040  01249C  0E00               	movlw	high settings_integrating_reset@str_1344
  8041  01249E  0100               	movlb	0	; () banked
  8042  0124A0  6F95               	movwf	(settings_integrating_reset@strp_1345+1)& (0+255),b
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8046  0124A2  0E00               	movlw	0
  8047  0124A4  0100               	movlb	0	; () banked
  8048  0124A6  6F97               	movwf	settings_integrating_reset@i_1346& (0+255),b
  8049  0124A8                     l11291:
  8050                           
  8051                           ; BSR set to: 0
  8052  0124A8  0E02               	movlw	2
  8053  0124AA  0100               	movlb	0	; () banked
  8054  0124AC  6597               	cpfsgt	settings_integrating_reset@i_1346& (0+255),b
  8055  0124AE  D001               	goto	l11295
  8056  0124B0  D034               	goto	l11307
  8057  0124B2                     l11295:
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8061  0124B2  0100               	movlb	0	; () banked
  8062  0124B4  5197               	movf	settings_integrating_reset@i_1346& (0+255),w,b
  8063  0124B6  0D17               	mullw	23
  8064  0124B8  0E0C               	movlw	12
  8065  0124BA  26F3               	addwf	prodl,f,c
  8066  0124BC  0E00               	movlw	0
  8067  0124BE  22F4               	addwfc	prodh,f,c
  8068  0124C0  0E2D               	movlw	low _port
  8069  0124C2  24F3               	addwf	prodl,w,c
  8070  0124C4  6ED9               	movwf	fsr2l,c
  8071  0124C6  0E01               	movlw	high _port
  8072  0124C8  20F4               	addwfc	prodh,w,c
  8073  0124CA  6EDA               	movwf	fsr2h,c
  8074  0124CC  50DE               	movf	postinc2,w,c
  8075  0124CE  10DE               	iorwf	postinc2,w,c
  8076  0124D0  10DE               	iorwf	postinc2,w,c
  8077  0124D2  10DE               	iorwf	postinc2,w,c
  8078  0124D4  B4D8               	btfsc	status,2,c
  8079  0124D6  D00D               	goto	l11299
  8080                           
  8081                           ; BSR set to: 0
  8082  0124D8  C094  F060         	movff	settings_integrating_reset@strp_1345,strcpy@to
  8083  0124DC  C095  F061         	movff	settings_integrating_reset@strp_1345+1,strcpy@to+1
  8084  0124E0  0EB7               	movlw	low STR_56
  8085  0124E2  0100               	movlb	0	; () banked
  8086  0124E4  6F62               	movwf	strcpy@from& (0+255),b
  8087  0124E6  0EFF               	movlw	high STR_56
  8088  0124E8  0100               	movlb	0	; () banked
  8089  0124EA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8090  0124EC  ECC9  F0B3         	call	_strcpy	;wreg free
  8091  0124F0  D00C               	goto	l11301
  8092  0124F2                     l11299:
  8093                           
  8094                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8095  0124F2  C094  F060         	movff	settings_integrating_reset@strp_1345,strcpy@to
  8096  0124F6  C095  F061         	movff	settings_integrating_reset@strp_1345+1,strcpy@to+1
  8097  0124FA  0EA5               	movlw	low STR_57
  8098  0124FC  0100               	movlb	0	; () banked
  8099  0124FE  6F62               	movwf	strcpy@from& (0+255),b
  8100  012500  0EFF               	movlw	high STR_57
  8101  012502  0100               	movlb	0	; () banked
  8102  012504  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8103  012506  ECC9  F0B3         	call	_strcpy	;wreg free
  8104  01250A                     l11301:
  8105                           
  8106                           ;settings.c: 174: strp += 5;
  8107  01250A  0E05               	movlw	5
  8108  01250C  0100               	movlb	0	; () banked
  8109  01250E  2794               	addwf	settings_integrating_reset@strp_1345& (0+255),f,b
  8110  012510  0E00               	movlw	0
  8111  012512  2395               	addwfc	(settings_integrating_reset@strp_1345+1)& (0+255),f,b
  8112                           
  8113                           ; BSR set to: 0
  8114  012514  0100               	movlb	0	; () banked
  8115  012516  2B97               	incf	settings_integrating_reset@i_1346& (0+255),f,b
  8116  012518  D7C7               	goto	l11291
  8117  01251A                     l11307:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;settings.c: 175: }
  8121                           ;settings.c: 176: display(SETTINGS, "", str);
  8122  01251A  0EE6               	movlw	low (STR_96+3)
  8123  01251C  0100               	movlb	0	; () banked
  8124  01251E  6F60               	movwf	display@str0& (0+255),b
  8125  012520  0EFF               	movlw	high (STR_96+3)
  8126  012522  0100               	movlb	0	; () banked
  8127  012524  6F61               	movwf	(display@str0+1)& (0+255),b
  8128  012526  0E7E               	movlw	low settings_integrating_reset@str_1344
  8129  012528  0100               	movlb	0	; () banked
  8130  01252A  6F62               	movwf	display@str1& (0+255),b
  8131  01252C  0E00               	movlw	high settings_integrating_reset@str_1344
  8132  01252E  0100               	movlb	0	; () banked
  8133  012530  6F63               	movwf	(display@str1+1)& (0+255),b
  8134  012532  0E03               	movlw	3
  8135  012534  ECEA  F09B         	call	_display
  8136  012538                     l11309:
  8137  012538  0100               	movlb	0	; () banked
  8138  01253A  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8139  01253C  D753               	goto	l11279
  8140  01253E                     l11315:
  8141  01253E  0101               	movlb	1	; () banked
  8142  012540  5129               	movf	settings_integrating_reset@state& (0+255),w,b
  8143                           
  8144                           ; Switch size 1, requested type "space"
  8145                           ; Number of cases is 2, Range of values is 0 to 1
  8146                           ; switch strategies available:
  8147                           ; Name         Instructions Cycles
  8148                           ; simple_byte            7     4 (average)
  8149                           ;	Chosen strategy is simple_byte
  8150  012542  0A00               	xorlw	0	; case 0
  8151  012544  B4D8               	btfsc	status,2,c
  8152  012546  D6F6               	goto	l11253
  8153  012548  0A01               	xorlw	1	; case 1
  8154  01254A  B4D8               	btfsc	status,2,c
  8155  01254C  D748               	goto	l11277
  8156  01254E                     l523:
  8157                           
  8158                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8159  01254E  A029               	btfss	_ctmu_m+2,0,c
  8160  012550  D01A               	goto	l11325
  8161                           
  8162                           ;settings.c: 184: ctmu_m.flags = 0;
  8163  012552  0E00               	movlw	0
  8164  012554  6E2A               	movwf	_ctmu_m+3,c
  8165  012556  0E00               	movlw	0
  8166  012558  6E29               	movwf	_ctmu_m+2,c
  8167                           
  8168                           ;settings.c: 185: state = 0;
  8169  01255A  0E00               	movlw	0
  8170  01255C  0101               	movlb	1	; () banked
  8171  01255E  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8172                           
  8173                           ;settings.c: 186: settings_flag = 0;
  8174  012560  0E00               	movlw	0
  8175  012562  6E21               	movwf	_settings_flag,c
  8176                           
  8177                           ; BSR set to: 1
  8178                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8179  012564  0EE6               	movlw	low (STR_96+3)
  8180  012566  0100               	movlb	0	; () banked
  8181  012568  6F60               	movwf	display@str0& (0+255),b
  8182  01256A  0EFF               	movlw	high (STR_96+3)
  8183  01256C  0100               	movlb	0	; () banked
  8184  01256E  6F61               	movwf	(display@str0+1)& (0+255),b
  8185  012570  0EE6               	movlw	low (STR_96+3)
  8186  012572  0100               	movlb	0	; () banked
  8187  012574  6F62               	movwf	display@str1& (0+255),b
  8188  012576  0EFF               	movlw	high (STR_96+3)
  8189  012578  0100               	movlb	0	; () banked
  8190  01257A  6F63               	movwf	(display@str1+1)& (0+255),b
  8191  01257C  0E01               	movlw	1
  8192  01257E  ECEA  F09B         	call	_display
  8193                           
  8194                           ;settings.c: 188: return 1;
  8195  012582  0E01               	movlw	1
  8196  012584  0012               	return	
  8197  012586                     l11325:
  8198                           
  8199                           ;settings.c: 189: }
  8200                           ;settings.c: 190: return 0;
  8201  012586  0E00               	movlw	0
  8202  012588  0012               	return	
  8203  01258A                     __end_of_settings_integrating_reset:
  8204                           	opt stack 0
  8205                           tblptru	equ	0xFF8
  8206                           tblptrh	equ	0xFF7
  8207                           tblptrl	equ	0xFF6
  8208                           tablat	equ	0xFF5
  8209                           prodh	equ	0xFF4
  8210                           prodl	equ	0xFF3
  8211                           intcon	equ	0xFF2
  8212                           postinc0	equ	0xFEE
  8213                           wreg	equ	0xFE8
  8214                           postinc1	equ	0xFE6
  8215                           postdec1	equ	0xFE5
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function _settings_auto_stop *****************
  8226 ;; Defined at:
  8227 ;;		line 49 in file "settings.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  i               1   52[BANK0 ] unsigned char 
  8232 ;;  str            20   27[BANK0 ] unsigned char [20]
  8233 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8234 ;;		 -> settings_auto_stop@str_1310(20), 
  8235 ;;  i               1   51[BANK0 ] unsigned char 
  8236 ;;  j               1   53[BANK0 ] unsigned char 
  8237 ;;  str            20    7[BANK0 ] unsigned char [20]
  8238 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8239 ;;		 -> settings_auto_stop@str(20), 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      unsigned char 
  8242 ;; Registers used:
  8243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8250 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8252 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8253 ;;Total ram usage:       48 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:   12
  8256 ;; This function calls:
  8257 ;;		_display
  8258 ;;		_strcpy
  8259 ;; This function is called by:
  8260 ;;		_settings_task
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text20
  8265  0127D8                     __ptext20:
  8266                           	opt stack 0
  8267  0127D8                     _settings_auto_stop:
  8268                           	opt stack 16
  8269                           
  8270                           ;settings.c: 50: static uint8_t state = 0;
  8271                           ;settings.c: 51: switch (state) {
  8272                           
  8273                           ;incstack = 0
  8274  0127D8  D0F7               	goto	l11157
  8275  0127DA                     l11095:
  8276                           
  8277                           ;settings.c: 53: {
  8278                           ;settings.c: 54: char str[20];
  8279                           ;settings.c: 55: char *strp;
  8280                           ;settings.c: 56: strp = str;
  8281  0127DA  0E67               	movlw	low settings_auto_stop@str
  8282  0127DC  0100               	movlb	0	; () banked
  8283  0127DE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8284  0127E0  0E00               	movlw	high settings_auto_stop@str
  8285  0127E2  0100               	movlb	0	; () banked
  8286  0127E4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8290  0127E6  0E00               	movlw	0
  8291  0127E8  0100               	movlb	0	; () banked
  8292  0127EA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8293  0127EC                     l11099:
  8294                           
  8295                           ; BSR set to: 0
  8296  0127EC  0E02               	movlw	2
  8297  0127EE  0100               	movlb	0	; () banked
  8298  0127F0  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8299  0127F2  D001               	goto	l11103
  8300  0127F4  D031               	goto	l11115
  8301  0127F6                     l11103:
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8305  0127F6  0100               	movlb	0	; () banked
  8306  0127F8  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8307  0127FA  0D17               	mullw	23
  8308  0127FC  0E16               	movlw	22
  8309  0127FE  26F3               	addwf	prodl,f,c
  8310  012800  0E00               	movlw	0
  8311  012802  22F4               	addwfc	prodh,f,c
  8312  012804  0E2D               	movlw	low _port
  8313  012806  24F3               	addwf	prodl,w,c
  8314  012808  6ED9               	movwf	fsr2l,c
  8315  01280A  0E01               	movlw	high _port
  8316  01280C  20F4               	addwfc	prodh,w,c
  8317  01280E  6EDA               	movwf	fsr2h,c
  8318  012810  0101               	movlb	1	; () banked
  8319  012812  A0DF               	btfss	indf2,0,c
  8320  012814  D00D               	goto	l11107
  8321                           
  8322                           ; BSR set to: 1
  8323  012816  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8324  01281A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8325  01281E  0EAB               	movlw	low STR_40
  8326  012820  0100               	movlb	0	; () banked
  8327  012822  6F62               	movwf	strcpy@from& (0+255),b
  8328  012824  0EFF               	movlw	high STR_40
  8329  012826  0100               	movlb	0	; () banked
  8330  012828  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8331  01282A  ECC9  F0B3         	call	_strcpy	;wreg free
  8332  01282E  D00C               	goto	l11109
  8333  012830                     l11107:
  8334                           
  8335                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8336  012830  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8337  012834  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8338  012838  0EB1               	movlw	low STR_41
  8339  01283A  0100               	movlb	0	; () banked
  8340  01283C  6F62               	movwf	strcpy@from& (0+255),b
  8341  01283E  0EFF               	movlw	high STR_41
  8342  012840  0100               	movlb	0	; () banked
  8343  012842  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8344  012844  ECC9  F0B3         	call	_strcpy	;wreg free
  8345  012848                     l11109:
  8346                           
  8347                           ;settings.c: 60: strp += 5;
  8348  012848  0E05               	movlw	5
  8349  01284A  0100               	movlb	0	; () banked
  8350  01284C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8351  01284E  0E00               	movlw	0
  8352  012850  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8353                           
  8354                           ; BSR set to: 0
  8355  012852  0100               	movlb	0	; () banked
  8356  012854  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8357  012856  D7CA               	goto	l11099
  8358  012858                     l11115:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;settings.c: 61: }
  8362                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8363  012858  0E81               	movlw	low STR_42
  8364  01285A  0100               	movlb	0	; () banked
  8365  01285C  6F60               	movwf	display@str0& (0+255),b
  8366  01285E  0EFE               	movlw	high STR_42
  8367  012860  0100               	movlb	0	; () banked
  8368  012862  6F61               	movwf	(display@str0+1)& (0+255),b
  8369  012864  0E67               	movlw	low settings_auto_stop@str
  8370  012866  0100               	movlb	0	; () banked
  8371  012868  6F62               	movwf	display@str1& (0+255),b
  8372  01286A  0E00               	movlw	high settings_auto_stop@str
  8373  01286C  0100               	movlb	0	; () banked
  8374  01286E  6F63               	movwf	(display@str1+1)& (0+255),b
  8375  012870  0E03               	movlw	3
  8376  012872  ECEA  F09B         	call	_display
  8377                           
  8378                           ;settings.c: 63: state = 1;
  8379  012876  0E01               	movlw	1
  8380  012878  0101               	movlb	1	; () banked
  8381  01287A  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8382                           
  8383                           ;settings.c: 64: }
  8384                           ;settings.c: 65: break;
  8385  01287C  D0AD               	goto	l479
  8386  01287E                     l11119:
  8387                           
  8388                           ; BSR set to: 1
  8389                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8390  01287E  0E00               	movlw	0
  8391  012880  0100               	movlb	0	; () banked
  8392  012882  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8393  012884                     l11121:
  8394                           
  8395                           ; BSR set to: 0
  8396  012884  0E02               	movlw	2
  8397  012886  0100               	movlb	0	; () banked
  8398  012888  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8399  01288A  D001               	goto	l11125
  8400  01288C  D0A5               	goto	l479
  8401  01288E                     l11125:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8405  01288E  0100               	movlb	0	; () banked
  8406  012890  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8407  012892  0D17               	mullw	23
  8408  012894  0E02               	movlw	2
  8409  012896  26F3               	addwf	prodl,f,c
  8410  012898  0E00               	movlw	0
  8411  01289A  22F4               	addwfc	prodh,f,c
  8412  01289C  0E2D               	movlw	low _port
  8413  01289E  24F3               	addwf	prodl,w,c
  8414  0128A0  6ED9               	movwf	fsr2l,c
  8415  0128A2  0E01               	movlw	high _port
  8416  0128A4  20F4               	addwfc	prodh,w,c
  8417  0128A6  6EDA               	movwf	fsr2h,c
  8418  0128A8  0101               	movlb	1	; () banked
  8419  0128AA  A0DF               	btfss	indf2,0,c
  8420  0128AC  D08A               	goto	l11151
  8421                           
  8422                           ; BSR set to: 1
  8423                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8424  0128AE  0100               	movlb	0	; () banked
  8425  0128B0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8426  0128B2  0D17               	mullw	23
  8427  0128B4  0E02               	movlw	2
  8428  0128B6  26F3               	addwf	prodl,f,c
  8429  0128B8  0E00               	movlw	0
  8430  0128BA  22F4               	addwfc	prodh,f,c
  8431  0128BC  0E2D               	movlw	low _port
  8432  0128BE  24F3               	addwf	prodl,w,c
  8433  0128C0  6ED9               	movwf	fsr2l,c
  8434  0128C2  0E01               	movlw	high _port
  8435  0128C4  20F4               	addwfc	prodh,w,c
  8436  0128C6  6EDA               	movwf	fsr2h,c
  8437  0128C8  0E00               	movlw	0
  8438  0128CA  6EDE               	movwf	postinc2,c
  8439  0128CC  0E00               	movlw	0
  8440  0128CE  6EDD               	movwf	postdec2,c
  8441                           
  8442                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8443  0128D0  0100               	movlb	0	; () banked
  8444  0128D2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8445  0128D4  0D17               	mullw	23
  8446  0128D6  0E16               	movlw	22
  8447  0128D8  26F3               	addwf	prodl,f,c
  8448  0128DA  0E00               	movlw	0
  8449  0128DC  22F4               	addwfc	prodh,f,c
  8450  0128DE  0E2D               	movlw	low _port
  8451  0128E0  24F3               	addwf	prodl,w,c
  8452  0128E2  6ED9               	movwf	fsr2l,c
  8453  0128E4  0E01               	movlw	high _port
  8454  0128E6  20F4               	addwfc	prodh,w,c
  8455  0128E8  6EDA               	movwf	fsr2h,c
  8456  0128EA  0101               	movlb	1	; () banked
  8457  0128EC  B0DF               	btfsc	indf2,0,c
  8458  0128EE  D004               	goto	u12920
  8459  0128F0  0100               	movlb	0	; () banked
  8460  0128F2  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8461  0128F4  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8462  0128F6  D002               	goto	u12938
  8463  0128F8                     u12920:
  8464  0128F8  0100               	movlb	0	; () banked
  8465  0128FA  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8466  0128FC                     u12938:
  8467  0128FC  0100               	movlb	0	; () banked
  8468  0128FE  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8469  012900  0D17               	mullw	23
  8470  012902  0E16               	movlw	22
  8471  012904  26F3               	addwf	prodl,f,c
  8472  012906  0E00               	movlw	0
  8473  012908  22F4               	addwfc	prodh,f,c
  8474  01290A  0E2D               	movlw	low _port
  8475  01290C  24F3               	addwf	prodl,w,c
  8476  01290E  6ED9               	movwf	fsr2l,c
  8477  012910  0E01               	movlw	high _port
  8478  012912  20F4               	addwfc	prodh,w,c
  8479  012914  6EDA               	movwf	fsr2h,c
  8480  012916  0101               	movlb	1	; () banked
  8481  012918  50DF               	movf	223,w,c
  8482  01291A  0100               	movlb	0	; () banked
  8483  01291C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8484  01291E  0BFE               	andlw	-2
  8485  012920  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8486  012922  0101               	movlb	1	; () banked
  8487  012924  6EDF               	movwf	223,c
  8488                           
  8489                           ; BSR set to: 1
  8490                           ;settings.c: 71: char str[20];
  8491                           ;settings.c: 72: char *strp;
  8492                           ;settings.c: 73: strp = str;
  8493  012926  0E7B               	movlw	low settings_auto_stop@str_1310
  8494  012928  0100               	movlb	0	; () banked
  8495  01292A  6F91               	movwf	settings_auto_stop@strp_1311& (0+255),b
  8496  01292C  0E00               	movlw	high settings_auto_stop@str_1310
  8497  01292E  0100               	movlb	0	; () banked
  8498  012930  6F92               	movwf	(settings_auto_stop@strp_1311+1)& (0+255),b
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8502  012932  0E00               	movlw	0
  8503  012934  0100               	movlb	0	; () banked
  8504  012936  6F94               	movwf	settings_auto_stop@i_1312& (0+255),b
  8505  012938                     l11133:
  8506                           
  8507                           ; BSR set to: 0
  8508  012938  0E02               	movlw	2
  8509  01293A  0100               	movlb	0	; () banked
  8510  01293C  6594               	cpfsgt	settings_auto_stop@i_1312& (0+255),b
  8511  01293E  D001               	goto	l11137
  8512  012940  D031               	goto	l11149
  8513  012942                     l11137:
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8517  012942  0100               	movlb	0	; () banked
  8518  012944  5194               	movf	settings_auto_stop@i_1312& (0+255),w,b
  8519  012946  0D17               	mullw	23
  8520  012948  0E16               	movlw	22
  8521  01294A  26F3               	addwf	prodl,f,c
  8522  01294C  0E00               	movlw	0
  8523  01294E  22F4               	addwfc	prodh,f,c
  8524  012950  0E2D               	movlw	low _port
  8525  012952  24F3               	addwf	prodl,w,c
  8526  012954  6ED9               	movwf	fsr2l,c
  8527  012956  0E01               	movlw	high _port
  8528  012958  20F4               	addwfc	prodh,w,c
  8529  01295A  6EDA               	movwf	fsr2h,c
  8530  01295C  0101               	movlb	1	; () banked
  8531  01295E  A0DF               	btfss	indf2,0,c
  8532  012960  D00D               	goto	l11141
  8533                           
  8534                           ; BSR set to: 1
  8535  012962  C091  F060         	movff	settings_auto_stop@strp_1311,strcpy@to
  8536  012966  C092  F061         	movff	settings_auto_stop@strp_1311+1,strcpy@to+1
  8537  01296A  0EAB               	movlw	low STR_40
  8538  01296C  0100               	movlb	0	; () banked
  8539  01296E  6F62               	movwf	strcpy@from& (0+255),b
  8540  012970  0EFF               	movlw	high STR_40
  8541  012972  0100               	movlb	0	; () banked
  8542  012974  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8543  012976  ECC9  F0B3         	call	_strcpy	;wreg free
  8544  01297A  D00C               	goto	l11143
  8545  01297C                     l11141:
  8546                           
  8547                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8548  01297C  C091  F060         	movff	settings_auto_stop@strp_1311,strcpy@to
  8549  012980  C092  F061         	movff	settings_auto_stop@strp_1311+1,strcpy@to+1
  8550  012984  0EB1               	movlw	low STR_41
  8551  012986  0100               	movlb	0	; () banked
  8552  012988  6F62               	movwf	strcpy@from& (0+255),b
  8553  01298A  0EFF               	movlw	high STR_41
  8554  01298C  0100               	movlb	0	; () banked
  8555  01298E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8556  012990  ECC9  F0B3         	call	_strcpy	;wreg free
  8557  012994                     l11143:
  8558                           
  8559                           ;settings.c: 77: strp += 5;
  8560  012994  0E05               	movlw	5
  8561  012996  0100               	movlb	0	; () banked
  8562  012998  2791               	addwf	settings_auto_stop@strp_1311& (0+255),f,b
  8563  01299A  0E00               	movlw	0
  8564  01299C  2392               	addwfc	(settings_auto_stop@strp_1311+1)& (0+255),f,b
  8565                           
  8566                           ; BSR set to: 0
  8567  01299E  0100               	movlb	0	; () banked
  8568  0129A0  2B94               	incf	settings_auto_stop@i_1312& (0+255),f,b
  8569  0129A2  D7CA               	goto	l11133
  8570  0129A4                     l11149:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;settings.c: 78: }
  8574                           ;settings.c: 79: display(SETTINGS, "", str);
  8575  0129A4  0EE6               	movlw	low (STR_96+3)
  8576  0129A6  0100               	movlb	0	; () banked
  8577  0129A8  6F60               	movwf	display@str0& (0+255),b
  8578  0129AA  0EFF               	movlw	high (STR_96+3)
  8579  0129AC  0100               	movlb	0	; () banked
  8580  0129AE  6F61               	movwf	(display@str0+1)& (0+255),b
  8581  0129B0  0E7B               	movlw	low settings_auto_stop@str_1310
  8582  0129B2  0100               	movlb	0	; () banked
  8583  0129B4  6F62               	movwf	display@str1& (0+255),b
  8584  0129B6  0E00               	movlw	high settings_auto_stop@str_1310
  8585  0129B8  0100               	movlb	0	; () banked
  8586  0129BA  6F63               	movwf	(display@str1+1)& (0+255),b
  8587  0129BC  0E03               	movlw	3
  8588  0129BE  ECEA  F09B         	call	_display
  8589  0129C2                     l11151:
  8590  0129C2  0100               	movlb	0	; () banked
  8591  0129C4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8592  0129C6  D75E               	goto	l11121
  8593  0129C8                     l11157:
  8594  0129C8  0101               	movlb	1	; () banked
  8595  0129CA  5128               	movf	settings_auto_stop@state& (0+255),w,b
  8596                           
  8597                           ; Switch size 1, requested type "space"
  8598                           ; Number of cases is 2, Range of values is 0 to 1
  8599                           ; switch strategies available:
  8600                           ; Name         Instructions Cycles
  8601                           ; simple_byte            7     4 (average)
  8602                           ;	Chosen strategy is simple_byte
  8603  0129CC  0A00               	xorlw	0	; case 0
  8604  0129CE  B4D8               	btfsc	status,2,c
  8605  0129D0  D704               	goto	l11095
  8606  0129D2  0A01               	xorlw	1	; case 1
  8607  0129D4  B4D8               	btfsc	status,2,c
  8608  0129D6  D753               	goto	l11119
  8609  0129D8                     l479:
  8610                           
  8611                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8612  0129D8  A029               	btfss	_ctmu_m+2,0,c
  8613  0129DA  D01A               	goto	l11167
  8614                           
  8615                           ;settings.c: 87: ctmu_m.flags = 0;
  8616  0129DC  0E00               	movlw	0
  8617  0129DE  6E2A               	movwf	_ctmu_m+3,c
  8618  0129E0  0E00               	movlw	0
  8619  0129E2  6E29               	movwf	_ctmu_m+2,c
  8620                           
  8621                           ;settings.c: 88: state = 0;
  8622  0129E4  0E00               	movlw	0
  8623  0129E6  0101               	movlb	1	; () banked
  8624  0129E8  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8625                           
  8626                           ;settings.c: 89: settings_flag = 0;
  8627  0129EA  0E00               	movlw	0
  8628  0129EC  6E21               	movwf	_settings_flag,c
  8629                           
  8630                           ; BSR set to: 1
  8631                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8632  0129EE  0EE6               	movlw	low (STR_96+3)
  8633  0129F0  0100               	movlb	0	; () banked
  8634  0129F2  6F60               	movwf	display@str0& (0+255),b
  8635  0129F4  0EFF               	movlw	high (STR_96+3)
  8636  0129F6  0100               	movlb	0	; () banked
  8637  0129F8  6F61               	movwf	(display@str0+1)& (0+255),b
  8638  0129FA  0EE6               	movlw	low (STR_96+3)
  8639  0129FC  0100               	movlb	0	; () banked
  8640  0129FE  6F62               	movwf	display@str1& (0+255),b
  8641  012A00  0EFF               	movlw	high (STR_96+3)
  8642  012A02  0100               	movlb	0	; () banked
  8643  012A04  6F63               	movwf	(display@str1+1)& (0+255),b
  8644  012A06  0E01               	movlw	1
  8645  012A08  ECEA  F09B         	call	_display
  8646                           
  8647                           ;settings.c: 91: return 1;
  8648  012A0C  0E01               	movlw	1
  8649  012A0E  0012               	return	
  8650  012A10                     l11167:
  8651                           
  8652                           ;settings.c: 92: }
  8653                           ;settings.c: 93: return 0;
  8654  012A10  0E00               	movlw	0
  8655  012A12  0012               	return	
  8656  012A14                     __end_of_settings_auto_stop:
  8657                           	opt stack 0
  8658                           tblptru	equ	0xFF8
  8659                           tblptrh	equ	0xFF7
  8660                           tblptrl	equ	0xFF6
  8661                           tablat	equ	0xFF5
  8662                           prodh	equ	0xFF4
  8663                           prodl	equ	0xFF3
  8664                           intcon	equ	0xFF2
  8665                           postinc0	equ	0xFEE
  8666                           wreg	equ	0xFE8
  8667                           postinc1	equ	0xFE6
  8668                           postdec1	equ	0xFE5
  8669                           fsr1h	equ	0xFE2
  8670                           fsr1l	equ	0xFE1
  8671                           indf2	equ	0xFDF
  8672                           postinc2	equ	0xFDE
  8673                           postdec2	equ	0xFDD
  8674                           fsr2h	equ	0xFDA
  8675                           fsr2l	equ	0xFD9
  8676                           status	equ	0xFD8
  8677                           
  8678 ;; *************** function _settings_adjust_time *****************
  8679 ;; Defined at:
  8680 ;;		line 13 in file "settings.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:   16
  8701 ;; This function calls:
  8702 ;;		_RTCC_adjust_time_cursor
  8703 ;;		_RTCC_adjust_time_dec
  8704 ;;		_RTCC_adjust_time_inc
  8705 ;;		_RTCC_adjust_time_toggle
  8706 ;;		_display
  8707 ;; This function is called by:
  8708 ;;		_settings_task
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text21
  8713  0147A8                     __ptext21:
  8714                           	opt stack 0
  8715  0147A8                     _settings_adjust_time:
  8716                           	opt stack 12
  8717                           
  8718                           ;settings.c: 14: static uint8_t state = 0;
  8719                           ;settings.c: 15: switch (state) {
  8720                           
  8721                           ;incstack = 0
  8722  0147A8  D043               	goto	l11079
  8723  0147AA                     l11055:
  8724                           
  8725                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8726  0147AA  0EE6               	movlw	low (STR_96+3)
  8727  0147AC  0100               	movlb	0	; () banked
  8728  0147AE  6F60               	movwf	display@str0& (0+255),b
  8729  0147B0  0EFF               	movlw	high (STR_96+3)
  8730  0147B2  0100               	movlb	0	; () banked
  8731  0147B4  6F61               	movwf	(display@str0+1)& (0+255),b
  8732  0147B6  0EE6               	movlw	low (STR_96+3)
  8733  0147B8  0100               	movlb	0	; () banked
  8734  0147BA  6F62               	movwf	display@str1& (0+255),b
  8735  0147BC  0EFF               	movlw	high (STR_96+3)
  8736  0147BE  0100               	movlb	0	; () banked
  8737  0147C0  6F63               	movwf	(display@str1+1)& (0+255),b
  8738  0147C2  0E01               	movlw	1
  8739  0147C4  ECEA  F09B         	call	_display
  8740                           
  8741                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8742  0147C8  0E72               	movlw	low _now
  8743  0147CA  0100               	movlb	0	; () banked
  8744  0147CC  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8745  0147CE  0E01               	movlw	high _now
  8746  0147D0  0100               	movlb	0	; () banked
  8747  0147D2  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8748  0147D4  EC53  F0B3         	call	_RTCC_adjust_time_toggle	;wreg free
  8749                           
  8750                           ;settings.c: 19: state = 1;
  8751  0147D8  0E01               	movlw	1
  8752  0147DA  0101               	movlb	1	; () banked
  8753  0147DC  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8754                           
  8755                           ;settings.c: 20: break;
  8756  0147DE  D030               	goto	l461
  8757  0147E0                     l462:
  8758                           
  8759                           ; BSR set to: 1
  8760                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8761  0147E0  0101               	movlb	1	; () banked
  8762  0147E2  A146               	btfss	(_port+25)& (0+255),0,b
  8763  0147E4  D00A               	goto	l11065
  8764                           
  8765                           ; BSR set to: 1
  8766                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8767  0147E6  0101               	movlb	1	; () banked
  8768  0147E8  9146               	bcf	(_port+25)& (0+255),0,b
  8769                           
  8770                           ; BSR set to: 1
  8771                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8772  0147EA  0E72               	movlw	low _now
  8773  0147EC  0100               	movlb	0	; () banked
  8774  0147EE  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8775  0147F0  0E01               	movlw	high _now
  8776  0147F2  0100               	movlb	0	; () banked
  8777  0147F4  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8778  0147F6  EC3D  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8779  0147FA                     l11065:
  8780                           
  8781                           ;settings.c: 25: }
  8782                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8783  0147FA  0101               	movlb	1	; () banked
  8784  0147FC  A15D               	btfss	(_port+48)& (0+255),0,b
  8785  0147FE  D00A               	goto	l11071
  8786                           
  8787                           ; BSR set to: 1
  8788                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8789  014800  0101               	movlb	1	; () banked
  8790  014802  915D               	bcf	(_port+48)& (0+255),0,b
  8791                           
  8792                           ; BSR set to: 1
  8793                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8794  014804  0E72               	movlw	low _now
  8795  014806  0100               	movlb	0	; () banked
  8796  014808  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8797  01480A  0E01               	movlw	high _now
  8798  01480C  0100               	movlb	0	; () banked
  8799  01480E  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8800  014810  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8801  014814                     l11071:
  8802                           
  8803                           ;settings.c: 29: }
  8804                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8805  014814  0101               	movlb	1	; () banked
  8806  014816  A12F               	btfss	(_port+2)& (0+255),0,b
  8807  014818  D013               	goto	l461
  8808                           
  8809                           ; BSR set to: 1
  8810                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8811  01481A  0101               	movlb	1	; () banked
  8812  01481C  912F               	bcf	(_port+2)& (0+255),0,b
  8813                           
  8814                           ; BSR set to: 1
  8815                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8816  01481E  0E72               	movlw	low _now
  8817  014820  0100               	movlb	0	; () banked
  8818  014822  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8819  014824  0E01               	movlw	high _now
  8820  014826  0100               	movlb	0	; () banked
  8821  014828  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8822  01482A  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8823                           
  8824                           ;settings.c: 37: }
  8825                           
  8826                           ;settings.c: 36: break;
  8827                           
  8828                           ;settings.c: 35: default:
  8829                           
  8830                           ;settings.c: 33: }
  8831                           ;settings.c: 34: break;
  8832  01482E  D008               	goto	l461
  8833  014830                     l11079:
  8834  014830  0101               	movlb	1	; () banked
  8835  014832  5127               	movf	settings_adjust_time@state& (0+255),w,b
  8836                           
  8837                           ; Switch size 1, requested type "space"
  8838                           ; Number of cases is 2, Range of values is 0 to 1
  8839                           ; switch strategies available:
  8840                           ; Name         Instructions Cycles
  8841                           ; simple_byte            7     4 (average)
  8842                           ;	Chosen strategy is simple_byte
  8843  014834  0A00               	xorlw	0	; case 0
  8844  014836  B4D8               	btfsc	status,2,c
  8845  014838  D7B8               	goto	l11055
  8846  01483A  0A01               	xorlw	1	; case 1
  8847  01483C  B4D8               	btfsc	status,2,c
  8848  01483E  D7D0               	goto	l462
  8849  014840                     l461:
  8850                           
  8851                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8852  014840  A029               	btfss	_ctmu_m+2,0,c
  8853  014842  D01D               	goto	l11089
  8854                           
  8855                           ;settings.c: 39: ctmu_m.flags = 0;
  8856  014844  0E00               	movlw	0
  8857  014846  6E2A               	movwf	_ctmu_m+3,c
  8858  014848  0E00               	movlw	0
  8859  01484A  6E29               	movwf	_ctmu_m+2,c
  8860                           
  8861                           ;settings.c: 40: now.edit.flags = 0;
  8862  01484C  0E00               	movlw	0
  8863  01484E  0101               	movlb	1	; () banked
  8864  014850  6F7F               	movwf	(_now+13)& (0+255),b
  8865                           
  8866                           ;settings.c: 41: state = 0;
  8867  014852  0E00               	movlw	0
  8868  014854  0101               	movlb	1	; () banked
  8869  014856  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8870                           
  8871                           ;settings.c: 42: settings_flag = 0;
  8872  014858  0E00               	movlw	0
  8873  01485A  6E21               	movwf	_settings_flag,c
  8874                           
  8875                           ; BSR set to: 1
  8876                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8877  01485C  0EE6               	movlw	low (STR_96+3)
  8878  01485E  0100               	movlb	0	; () banked
  8879  014860  6F60               	movwf	display@str0& (0+255),b
  8880  014862  0EFF               	movlw	high (STR_96+3)
  8881  014864  0100               	movlb	0	; () banked
  8882  014866  6F61               	movwf	(display@str0+1)& (0+255),b
  8883  014868  0EE6               	movlw	low (STR_96+3)
  8884  01486A  0100               	movlb	0	; () banked
  8885  01486C  6F62               	movwf	display@str1& (0+255),b
  8886  01486E  0EFF               	movlw	high (STR_96+3)
  8887  014870  0100               	movlb	0	; () banked
  8888  014872  6F63               	movwf	(display@str1+1)& (0+255),b
  8889  014874  0E01               	movlw	1
  8890  014876  ECEA  F09B         	call	_display
  8891                           
  8892                           ;settings.c: 44: return 1;
  8893  01487A  0E01               	movlw	1
  8894  01487C  0012               	return	
  8895  01487E                     l11089:
  8896                           
  8897                           ;settings.c: 45: }
  8898                           ;settings.c: 46: return 0;
  8899  01487E  0E00               	movlw	0
  8900  014880  0012               	return	
  8901  014882                     __end_of_settings_adjust_time:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           postinc0	equ	0xFEE
  8911                           wreg	equ	0xFE8
  8912                           postinc1	equ	0xFE6
  8913                           postdec1	equ	0xFE5
  8914                           fsr1h	equ	0xFE2
  8915                           fsr1l	equ	0xFE1
  8916                           indf2	equ	0xFDF
  8917                           postinc2	equ	0xFDE
  8918                           postdec2	equ	0xFDD
  8919                           fsr2h	equ	0xFDA
  8920                           fsr2l	equ	0xFD9
  8921                           status	equ	0xFD8
  8922                           
  8923 ;; *************** function _RTCC_adjust_time_toggle *****************
  8924 ;; Defined at:
  8925 ;;		line 269 in file "../My_library/My_RTCC.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  tm              2    0[BANK0 ] PTR struct .
  8928 ;;		 -> now(14), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;		None               void
  8933 ;; Registers used:
  8934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;Total ram usage:        2 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:   11
  8947 ;; This function calls:
  8948 ;;		Nothing
  8949 ;; This function is called by:
  8950 ;;		_settings_adjust_time
  8951 ;;		_RTCC_adjust_time_button
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text22
  8956  0166A6                     __ptext22:
  8957                           	opt stack 0
  8958  0166A6                     _RTCC_adjust_time_toggle:
  8959                           	opt stack 16
  8960                           
  8961                           ;My_RTCC.c: 270: if (tm->edit.flags) {
  8962                           
  8963                           ;incstack = 0
  8964  0166A6  0100               	movlb	0	; () banked
  8965  0166A8  EE20 F00D          	lfsr	2,13
  8966  0166AC  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  8967  0166AE  26D9               	addwf	fsr2l,f,c
  8968  0166B0  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  8969  0166B2  22DA               	addwfc	fsr2h,f,c
  8970  0166B4  50DF               	movf	indf2,w,c
  8971  0166B6  B4D8               	btfsc	status,2,c
  8972  0166B8  D00A               	goto	l10703
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;My_RTCC.c: 271: tm->edit.flags = 0;
  8976  0166BA  0100               	movlb	0	; () banked
  8977  0166BC  EE20 F00D          	lfsr	2,13
  8978  0166C0  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  8979  0166C2  26D9               	addwf	fsr2l,f,c
  8980  0166C4  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  8981  0166C6  22DA               	addwfc	fsr2h,f,c
  8982  0166C8  0E00               	movlw	0
  8983  0166CA  6EDF               	movwf	indf2,c
  8984                           
  8985                           ;My_RTCC.c: 272: } else {
  8986  0166CC  0012               	return	
  8987  0166CE                     l10703:
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;My_RTCC.c: 273: tm->edit.flag.ss = 1;
  8991  0166CE  0100               	movlb	0	; () banked
  8992  0166D0  EE20 F00D          	lfsr	2,13
  8993  0166D4  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  8994  0166D6  26D9               	addwf	fsr2l,f,c
  8995  0166D8  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  8996  0166DA  22DA               	addwfc	fsr2h,f,c
  8997  0166DC  0100               	movlb	0	; () banked
  8998  0166DE  80DF               	bsf	indf2,0,c
  8999  0166E0  0012               	return	
  9000  0166E2                     __end_of_RTCC_adjust_time_toggle:
  9001                           	opt stack 0
  9002                           tblptru	equ	0xFF8
  9003                           tblptrh	equ	0xFF7
  9004                           tblptrl	equ	0xFF6
  9005                           tablat	equ	0xFF5
  9006                           prodh	equ	0xFF4
  9007                           prodl	equ	0xFF3
  9008                           intcon	equ	0xFF2
  9009                           postinc0	equ	0xFEE
  9010                           wreg	equ	0xFE8
  9011                           postinc1	equ	0xFE6
  9012                           postdec1	equ	0xFE5
  9013                           fsr1h	equ	0xFE2
  9014                           fsr1l	equ	0xFE1
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022 ;; *************** function _RTCC_adjust_time_inc *****************
  9023 ;; Defined at:
  9024 ;;		line 287 in file "../My_library/My_RTCC.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  tm              2   49[BANK0 ] PTR struct .
  9027 ;;		 -> now(14), 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  i               1   55[BANK0 ] unsigned char 
  9030 ;;  i               1   56[BANK0 ] unsigned char 
  9031 ;; Return value:  Size  Location     Type
  9032 ;;		None               void
  9033 ;; Registers used:
  9034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;Total ram usage:        8 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:   15
  9047 ;; This function calls:
  9048 ;;		_RTCC_from_RTCC
  9049 ;;		_RTCC_from_epoch
  9050 ;;		___lmul
  9051 ;;		_month_length
  9052 ;; This function is called by:
  9053 ;;		_settings_adjust_time
  9054 ;;		_RTCC_adjust_time_button
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           	psect	text23
  9059  01166E                     __ptext23:
  9060                           	opt stack 0
  9061  01166E                     _RTCC_adjust_time_inc:
  9062                           	opt stack 12
  9063                           
  9064                           ;My_RTCC.c: 288: RTCC_from_RTCC(tm);
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;incstack = 0
  9068  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9069  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9070  011676  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9071                           
  9072                           ;My_RTCC.c: 289: if (tm->edit.flag.ss) tm->epoch += 1;
  9073  01167A  0100               	movlb	0	; () banked
  9074  01167C  EE20 F00D          	lfsr	2,13
  9075  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9076  011682  26D9               	addwf	fsr2l,f,c
  9077  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9078  011686  22DA               	addwfc	fsr2h,f,c
  9079  011688  0100               	movlb	0	; () banked
  9080  01168A  A0DF               	btfss	indf2,0,c
  9081  01168C  D009               	goto	l940
  9082                           
  9083                           ; BSR set to: 0
  9084  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9085  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9086  011696  2ADE               	incf	postinc2,f,c
  9087  011698  0E00               	movlw	0
  9088  01169A  22DE               	addwfc	postinc2,f,c
  9089  01169C  22DE               	addwfc	postinc2,f,c
  9090  01169E  22DE               	addwfc	postinc2,f,c
  9091  0116A0                     l940:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;My_RTCC.c: 290: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9095  0116A0  0100               	movlb	0	; () banked
  9096  0116A2  EE20 F00D          	lfsr	2,13
  9097  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9098  0116A8  26D9               	addwf	fsr2l,f,c
  9099  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9100  0116AC  22DA               	addwfc	fsr2h,f,c
  9101  0116AE  0100               	movlb	0	; () banked
  9102  0116B0  A2DF               	btfss	indf2,1,c
  9103  0116B2  D00A               	goto	l10739
  9104                           
  9105                           ; BSR set to: 0
  9106  0116B4  0E3C               	movlw	60
  9107  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9108  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9109  0116BE  26DE               	addwf	postinc2,f,c
  9110  0116C0  0E00               	movlw	0
  9111  0116C2  22DE               	addwfc	postinc2,f,c
  9112  0116C4  22DE               	addwfc	postinc2,f,c
  9113  0116C6  22DE               	addwfc	postinc2,f,c
  9114  0116C8                     l10739:
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;My_RTCC.c: 291: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9118  0116C8  0100               	movlb	0	; () banked
  9119  0116CA  EE20 F00D          	lfsr	2,13
  9120  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9121  0116D0  26D9               	addwf	fsr2l,f,c
  9122  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9123  0116D4  22DA               	addwfc	fsr2h,f,c
  9124  0116D6  0100               	movlb	0	; () banked
  9125  0116D8  A4DF               	btfss	indf2,2,c
  9126  0116DA  D00C               	goto	l10743
  9127                           
  9128                           ; BSR set to: 0
  9129  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9130  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9131  0116E4  0E10               	movlw	16
  9132  0116E6  26DE               	addwf	postinc2,f,c
  9133  0116E8  0E0E               	movlw	14
  9134  0116EA  22DE               	addwfc	postinc2,f,c
  9135  0116EC  0E00               	movlw	0
  9136  0116EE  22DE               	addwfc	postinc2,f,c
  9137  0116F0  0E00               	movlw	0
  9138  0116F2  22DE               	addwfc	postinc2,f,c
  9139  0116F4                     l10743:
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;My_RTCC.c: 292: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9143  0116F4  0100               	movlb	0	; () banked
  9144  0116F6  EE20 F00D          	lfsr	2,13
  9145  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9146  0116FC  26D9               	addwf	fsr2l,f,c
  9147  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9148  011700  22DA               	addwfc	fsr2h,f,c
  9149  011702  0100               	movlb	0	; () banked
  9150  011704  A6DF               	btfss	indf2,3,c
  9151  011706  D00C               	goto	l10747
  9152                           
  9153                           ; BSR set to: 0
  9154  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9155  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9156  011710  0E80               	movlw	128
  9157  011712  26DE               	addwf	postinc2,f,c
  9158  011714  0E51               	movlw	81
  9159  011716  22DE               	addwfc	postinc2,f,c
  9160  011718  0E01               	movlw	1
  9161  01171A  22DE               	addwfc	postinc2,f,c
  9162  01171C  0E00               	movlw	0
  9163  01171E  22DE               	addwfc	postinc2,f,c
  9164  011720                     l10747:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;My_RTCC.c: 293: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9168  011720  0100               	movlb	0	; () banked
  9169  011722  EE20 F00D          	lfsr	2,13
  9170  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9171  011728  26D9               	addwf	fsr2l,f,c
  9172  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9173  01172C  22DA               	addwfc	fsr2h,f,c
  9174  01172E  0100               	movlb	0	; () banked
  9175  011730  A8DF               	btfss	indf2,4,c
  9176  011732  D038               	goto	l10751
  9177                           
  9178                           ; BSR set to: 0
  9179  011734  0100               	movlb	0	; () banked
  9180  011736  EE20 F009          	lfsr	2,9
  9181  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9182  01173C  26D9               	addwf	fsr2l,f,c
  9183  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9184  011740  22DA               	addwfc	fsr2h,f,c
  9185  011742  50DF               	movf	indf2,w,c
  9186  011744  0100               	movlb	0	; () banked
  9187  011746  6F66               	movwf	month_length@month& (0+255),b
  9188  011748  0100               	movlb	0	; () banked
  9189  01174A  EE20 F00A          	lfsr	2,10
  9190  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9191  011750  26D9               	addwf	fsr2l,f,c
  9192  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9193  011754  22DA               	addwfc	fsr2h,f,c
  9194  011756  50DF               	movf	indf2,w,c
  9195  011758  EC65  F0A3         	call	_month_length
  9196  01175C  0100               	movlb	0	; () banked
  9197  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9198  011760  0100               	movlb	0	; () banked
  9199  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9200  011764  0100               	movlb	0	; () banked
  9201  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9202  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9203  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9204  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9205  01176E  0E80               	movlw	128
  9206  011770  0100               	movlb	0	; () banked
  9207  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9208  011774  0E51               	movlw	81
  9209  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9210  011778  0E01               	movlw	1
  9211  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9212  01177C  0E00               	movlw	0
  9213  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9214  011780  EC66  F0AF         	call	___lmul	;wreg free
  9215  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9216  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9217  01178C  0100               	movlb	0	; () banked
  9218  01178E  516D               	movf	?___lmul& (0+255),w,b
  9219  011790  26DE               	addwf	postinc2,f,c
  9220  011792  0100               	movlb	0	; () banked
  9221  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9222  011796  22DE               	addwfc	postinc2,f,c
  9223  011798  0100               	movlb	0	; () banked
  9224  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9225  01179C  22DE               	addwfc	postinc2,f,c
  9226  01179E  0100               	movlb	0	; () banked
  9227  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9228  0117A2  22DE               	addwfc	postinc2,f,c
  9229  0117A4                     l10751:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;My_RTCC.c: 294: if (tm->edit.flag.YY) {
  9233  0117A4  0100               	movlb	0	; () banked
  9234  0117A6  EE20 F00D          	lfsr	2,13
  9235  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9236  0117AC  26D9               	addwf	fsr2l,f,c
  9237  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9238  0117B0  22DA               	addwfc	fsr2h,f,c
  9239  0117B2  0100               	movlb	0	; () banked
  9240  0117B4  AADF               	btfss	indf2,5,c
  9241  0117B6  D088               	goto	l10773
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;My_RTCC.c: 295: for (uint8_t i = tm->MM; i <= 12; i++) {
  9245  0117B8  0100               	movlb	0	; () banked
  9246  0117BA  EE20 F009          	lfsr	2,9
  9247  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9248  0117C0  26D9               	addwf	fsr2l,f,c
  9249  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9250  0117C4  22DA               	addwfc	fsr2h,f,c
  9251  0117C6  50DF               	movf	indf2,w,c
  9252  0117C8  0100               	movlb	0	; () banked
  9253  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9254  0117CC                     l10755:
  9255                           
  9256                           ; BSR set to: 0
  9257  0117CC  0E0C               	movlw	12
  9258  0117CE  0100               	movlb	0	; () banked
  9259  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9260  0117D2  D001               	goto	l10759
  9261  0117D4  D033               	goto	l10765
  9262  0117D6                     l10759:
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;My_RTCC.c: 296: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9266  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9267  0117DA  0100               	movlb	0	; () banked
  9268  0117DC  EE20 F00A          	lfsr	2,10
  9269  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9270  0117E2  26D9               	addwf	fsr2l,f,c
  9271  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9272  0117E6  22DA               	addwfc	fsr2h,f,c
  9273  0117E8  50DF               	movf	indf2,w,c
  9274  0117EA  EC65  F0A3         	call	_month_length
  9275  0117EE  0100               	movlb	0	; () banked
  9276  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9277  0117F2  0100               	movlb	0	; () banked
  9278  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9279  0117F6  0100               	movlb	0	; () banked
  9280  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9281  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9282  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9283  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9284  011800  0E80               	movlw	128
  9285  011802  0100               	movlb	0	; () banked
  9286  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9287  011806  0E51               	movlw	81
  9288  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9289  01180A  0E01               	movlw	1
  9290  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9291  01180E  0E00               	movlw	0
  9292  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9293  011812  EC66  F0AF         	call	___lmul	;wreg free
  9294  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9295  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9296  01181E  0100               	movlb	0	; () banked
  9297  011820  516D               	movf	?___lmul& (0+255),w,b
  9298  011822  26DE               	addwf	postinc2,f,c
  9299  011824  0100               	movlb	0	; () banked
  9300  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9301  011828  22DE               	addwfc	postinc2,f,c
  9302  01182A  0100               	movlb	0	; () banked
  9303  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9304  01182E  22DE               	addwfc	postinc2,f,c
  9305  011830  0100               	movlb	0	; () banked
  9306  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9307  011834  22DE               	addwfc	postinc2,f,c
  9308                           
  9309                           ; BSR set to: 0
  9310  011836  0100               	movlb	0	; () banked
  9311  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9312  01183A  D7C8               	goto	l10755
  9313  01183C                     l10765:
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;My_RTCC.c: 297: }
  9317                           ;My_RTCC.c: 298: for (uint8_t i = 1; i < tm->MM; i++) {
  9318  01183C  0E01               	movlw	1
  9319  01183E  0100               	movlb	0	; () banked
  9320  011840  6F97               	movwf	RTCC_adjust_time_inc@i_2910& (0+255),b
  9321  011842  D036               	goto	l10771
  9322  011844                     l10767:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;My_RTCC.c: 299: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9326  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_2910,month_length@month
  9327  011848  0100               	movlb	0	; () banked
  9328  01184A  EE20 F00A          	lfsr	2,10
  9329  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9330  011850  26D9               	addwf	fsr2l,f,c
  9331  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9332  011854  22DA               	addwfc	fsr2h,f,c
  9333  011856  50DF               	movf	indf2,w,c
  9334  011858  0100               	movlb	0	; () banked
  9335  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9336  01185C  0100               	movlb	0	; () banked
  9337  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9338  011860  EC65  F0A3         	call	_month_length
  9339  011864  0100               	movlb	0	; () banked
  9340  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9341  011868  0100               	movlb	0	; () banked
  9342  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9343  01186C  0100               	movlb	0	; () banked
  9344  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9345  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9346  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9347  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9348  011876  0E80               	movlw	128
  9349  011878  0100               	movlb	0	; () banked
  9350  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9351  01187C  0E51               	movlw	81
  9352  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9353  011880  0E01               	movlw	1
  9354  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9355  011884  0E00               	movlw	0
  9356  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9357  011888  EC66  F0AF         	call	___lmul	;wreg free
  9358  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9359  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9360  011894  0100               	movlb	0	; () banked
  9361  011896  516D               	movf	?___lmul& (0+255),w,b
  9362  011898  26DE               	addwf	postinc2,f,c
  9363  01189A  0100               	movlb	0	; () banked
  9364  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9365  01189E  22DE               	addwfc	postinc2,f,c
  9366  0118A0  0100               	movlb	0	; () banked
  9367  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9368  0118A4  22DE               	addwfc	postinc2,f,c
  9369  0118A6  0100               	movlb	0	; () banked
  9370  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9371  0118AA  22DE               	addwfc	postinc2,f,c
  9372                           
  9373                           ; BSR set to: 0
  9374  0118AC  0100               	movlb	0	; () banked
  9375  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_2910& (0+255),f,b
  9376  0118B0                     l10771:
  9377                           
  9378                           ; BSR set to: 0
  9379  0118B0  0100               	movlb	0	; () banked
  9380  0118B2  EE20 F009          	lfsr	2,9
  9381  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9382  0118B8  26D9               	addwf	fsr2l,f,c
  9383  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9384  0118BC  22DA               	addwfc	fsr2h,f,c
  9385  0118BE  50DE               	movf	postinc2,w,c
  9386  0118C0  0100               	movlb	0	; () banked
  9387  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_2910& (0+255),w,b
  9388  0118C4  A0D8               	btfss	status,0,c
  9389  0118C6  D7BE               	goto	l10767
  9390  0118C8                     l10773:
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;My_RTCC.c: 300: }
  9394                           ;My_RTCC.c: 301: }
  9395                           ;My_RTCC.c: 303: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9396  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9397  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9398  0118D0  0E80               	movlw	128
  9399  0118D2  5CDE               	subwf	postinc2,w,c
  9400  0118D4  0E13               	movlw	19
  9401  0118D6  58DE               	subwfb	postinc2,w,c
  9402  0118D8  0E19               	movlw	25
  9403  0118DA  58DE               	subwfb	postinc2,w,c
  9404  0118DC  0EBC               	movlw	188
  9405  0118DE  58DE               	subwfb	postinc2,w,c
  9406  0118E0  A0D8               	btfss	status,0,c
  9407  0118E2  D00C               	goto	l10777
  9408                           
  9409                           ; BSR set to: 0
  9410  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9411  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9412  0118EC  0E80               	movlw	128
  9413  0118EE  5EDE               	subwf	postinc2,f,c
  9414  0118F0  0E13               	movlw	19
  9415  0118F2  5ADE               	subwfb	postinc2,f,c
  9416  0118F4  0E19               	movlw	25
  9417  0118F6  5ADE               	subwfb	postinc2,f,c
  9418  0118F8  0EBC               	movlw	188
  9419  0118FA  5ADE               	subwfb	postinc2,f,c
  9420  0118FC                     l10777:
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;My_RTCC.c: 304: RTCC_from_epoch(&now);
  9424  0118FC  0E72               	movlw	low _now
  9425  0118FE  0100               	movlb	0	; () banked
  9426  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9427  011902  0E01               	movlw	high _now
  9428  011904  0100               	movlb	0	; () banked
  9429  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9430  011908  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  9431                           
  9432                           ;My_RTCC.c: 305: time_change_flag = 1;
  9433  01190C  0E01               	movlw	1
  9434  01190E  6E25               	movwf	_time_change_flag,c
  9435  011910  0012               	return		;funcret
  9436  011912                     __end_of_RTCC_adjust_time_inc:
  9437                           	opt stack 0
  9438                           tblptru	equ	0xFF8
  9439                           tblptrh	equ	0xFF7
  9440                           tblptrl	equ	0xFF6
  9441                           tablat	equ	0xFF5
  9442                           prodh	equ	0xFF4
  9443                           prodl	equ	0xFF3
  9444                           intcon	equ	0xFF2
  9445                           postinc0	equ	0xFEE
  9446                           wreg	equ	0xFE8
  9447                           postinc1	equ	0xFE6
  9448                           postdec1	equ	0xFE5
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           fsr2h	equ	0xFDA
  9455                           fsr2l	equ	0xFD9
  9456                           status	equ	0xFD8
  9457                           
  9458 ;; *************** function _RTCC_adjust_time_dec *****************
  9459 ;; Defined at:
  9460 ;;		line 308 in file "../My_library/My_RTCC.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  tm              2   49[BANK0 ] PTR struct .
  9463 ;;		 -> now(14), 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  i               1   55[BANK0 ] unsigned char 
  9466 ;;  i               1   56[BANK0 ] unsigned char 
  9467 ;; Return value:  Size  Location     Type
  9468 ;;		None               void
  9469 ;; Registers used:
  9470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9480 ;;Total ram usage:        8 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:   15
  9483 ;; This function calls:
  9484 ;;		_RTCC_from_RTCC
  9485 ;;		_RTCC_from_epoch
  9486 ;;		___lmul
  9487 ;;		_month_length
  9488 ;; This function is called by:
  9489 ;;		_settings_adjust_time
  9490 ;;		_RTCC_adjust_time_button
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text24
  9495  011912                     __ptext24:
  9496                           	opt stack 0
  9497  011912                     _RTCC_adjust_time_dec:
  9498                           	opt stack 12
  9499                           
  9500                           ;My_RTCC.c: 309: RTCC_from_RTCC(tm);
  9501                           
  9502                           ;incstack = 0
  9503  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9504  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9505  01191A  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9506                           
  9507                           ;My_RTCC.c: 310: if (tm->edit.flag.ss) tm->epoch -= 1;
  9508  01191E  0100               	movlb	0	; () banked
  9509  011920  EE20 F00D          	lfsr	2,13
  9510  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9511  011926  26D9               	addwf	fsr2l,f,c
  9512  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9513  01192A  22DA               	addwfc	fsr2h,f,c
  9514  01192C  0100               	movlb	0	; () banked
  9515  01192E  A0DF               	btfss	indf2,0,c
  9516  011930  D009               	goto	l955
  9517                           
  9518                           ; BSR set to: 0
  9519  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9520  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9521  01193A  06DE               	decf	postinc2,f,c
  9522  01193C  0E00               	movlw	0
  9523  01193E  5ADE               	subwfb	postinc2,f,c
  9524  011940  5ADE               	subwfb	postinc2,f,c
  9525  011942  5ADE               	subwfb	postinc2,f,c
  9526  011944                     l955:
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;My_RTCC.c: 311: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9530  011944  0100               	movlb	0	; () banked
  9531  011946  EE20 F00D          	lfsr	2,13
  9532  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9533  01194C  26D9               	addwf	fsr2l,f,c
  9534  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9535  011950  22DA               	addwfc	fsr2h,f,c
  9536  011952  0100               	movlb	0	; () banked
  9537  011954  A2DF               	btfss	indf2,1,c
  9538  011956  D00A               	goto	l10789
  9539                           
  9540                           ; BSR set to: 0
  9541  011958  0E3C               	movlw	60
  9542  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9543  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9544  011962  5EDE               	subwf	postinc2,f,c
  9545  011964  0E00               	movlw	0
  9546  011966  5ADE               	subwfb	postinc2,f,c
  9547  011968  5ADE               	subwfb	postinc2,f,c
  9548  01196A  5ADE               	subwfb	postinc2,f,c
  9549  01196C                     l10789:
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;My_RTCC.c: 312: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9553  01196C  0100               	movlb	0	; () banked
  9554  01196E  EE20 F00D          	lfsr	2,13
  9555  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9556  011974  26D9               	addwf	fsr2l,f,c
  9557  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9558  011978  22DA               	addwfc	fsr2h,f,c
  9559  01197A  0100               	movlb	0	; () banked
  9560  01197C  A4DF               	btfss	indf2,2,c
  9561  01197E  D00C               	goto	l10793
  9562                           
  9563                           ; BSR set to: 0
  9564  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9565  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9566  011988  0E10               	movlw	16
  9567  01198A  5EDE               	subwf	postinc2,f,c
  9568  01198C  0E0E               	movlw	14
  9569  01198E  5ADE               	subwfb	postinc2,f,c
  9570  011990  0E00               	movlw	0
  9571  011992  5ADE               	subwfb	postinc2,f,c
  9572  011994  0E00               	movlw	0
  9573  011996  5ADE               	subwfb	postinc2,f,c
  9574  011998                     l10793:
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;My_RTCC.c: 313: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9578  011998  0100               	movlb	0	; () banked
  9579  01199A  EE20 F00D          	lfsr	2,13
  9580  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9581  0119A0  26D9               	addwf	fsr2l,f,c
  9582  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9583  0119A4  22DA               	addwfc	fsr2h,f,c
  9584  0119A6  0100               	movlb	0	; () banked
  9585  0119A8  A6DF               	btfss	indf2,3,c
  9586  0119AA  D00C               	goto	l10797
  9587                           
  9588                           ; BSR set to: 0
  9589  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9590  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9591  0119B4  0E80               	movlw	128
  9592  0119B6  5EDE               	subwf	postinc2,f,c
  9593  0119B8  0E51               	movlw	81
  9594  0119BA  5ADE               	subwfb	postinc2,f,c
  9595  0119BC  0E01               	movlw	1
  9596  0119BE  5ADE               	subwfb	postinc2,f,c
  9597  0119C0  0E00               	movlw	0
  9598  0119C2  5ADE               	subwfb	postinc2,f,c
  9599  0119C4                     l10797:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;My_RTCC.c: 314: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9603  0119C4  0100               	movlb	0	; () banked
  9604  0119C6  EE20 F00D          	lfsr	2,13
  9605  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9606  0119CC  26D9               	addwf	fsr2l,f,c
  9607  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9608  0119D0  22DA               	addwfc	fsr2h,f,c
  9609  0119D2  0100               	movlb	0	; () banked
  9610  0119D4  A8DF               	btfss	indf2,4,c
  9611  0119D6  D038               	goto	l10801
  9612                           
  9613                           ; BSR set to: 0
  9614  0119D8  0100               	movlb	0	; () banked
  9615  0119DA  EE20 F009          	lfsr	2,9
  9616  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9617  0119E0  26D9               	addwf	fsr2l,f,c
  9618  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9619  0119E4  22DA               	addwfc	fsr2h,f,c
  9620  0119E6  50DF               	movf	indf2,w,c
  9621  0119E8  0100               	movlb	0	; () banked
  9622  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9623  0119EC  0100               	movlb	0	; () banked
  9624  0119EE  EE20 F00A          	lfsr	2,10
  9625  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9626  0119F4  26D9               	addwf	fsr2l,f,c
  9627  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9628  0119F8  22DA               	addwfc	fsr2h,f,c
  9629  0119FA  50DF               	movf	indf2,w,c
  9630  0119FC  EC65  F0A3         	call	_month_length
  9631  011A00  0100               	movlb	0	; () banked
  9632  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9633  011A04  0100               	movlb	0	; () banked
  9634  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9635  011A08  0100               	movlb	0	; () banked
  9636  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9637  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9638  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9639  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9640  011A12  0E80               	movlw	128
  9641  011A14  0100               	movlb	0	; () banked
  9642  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9643  011A18  0E51               	movlw	81
  9644  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9645  011A1C  0E01               	movlw	1
  9646  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9647  011A20  0E00               	movlw	0
  9648  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9649  011A24  EC66  F0AF         	call	___lmul	;wreg free
  9650  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9651  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9652  011A30  0100               	movlb	0	; () banked
  9653  011A32  516D               	movf	?___lmul& (0+255),w,b
  9654  011A34  5EDE               	subwf	postinc2,f,c
  9655  011A36  0100               	movlb	0	; () banked
  9656  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9657  011A3A  5ADE               	subwfb	postinc2,f,c
  9658  011A3C  0100               	movlb	0	; () banked
  9659  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9660  011A40  5ADE               	subwfb	postinc2,f,c
  9661  011A42  0100               	movlb	0	; () banked
  9662  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9663  011A46  5ADE               	subwfb	postinc2,f,c
  9664  011A48                     l10801:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;My_RTCC.c: 315: if (tm->edit.flag.YY) {
  9668  011A48  0100               	movlb	0	; () banked
  9669  011A4A  EE20 F00D          	lfsr	2,13
  9670  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9671  011A50  26D9               	addwf	fsr2l,f,c
  9672  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9673  011A54  22DA               	addwfc	fsr2h,f,c
  9674  011A56  0100               	movlb	0	; () banked
  9675  011A58  AADF               	btfss	indf2,5,c
  9676  011A5A  D088               	goto	l10823
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;My_RTCC.c: 316: for (uint8_t i = tm->MM; i >= 1; i--) {
  9680  011A5C  0100               	movlb	0	; () banked
  9681  011A5E  EE20 F009          	lfsr	2,9
  9682  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9683  011A64  26D9               	addwf	fsr2l,f,c
  9684  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9685  011A68  22DA               	addwfc	fsr2h,f,c
  9686  011A6A  50DF               	movf	indf2,w,c
  9687  011A6C  0100               	movlb	0	; () banked
  9688  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9689  011A70                     l10805:
  9690                           
  9691                           ; BSR set to: 0
  9692  011A70  0100               	movlb	0	; () banked
  9693  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9694  011A74  0100               	movlb	0	; () banked
  9695  011A76  B4D8               	btfsc	status,2,c
  9696  011A78  D033               	goto	l10815
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;My_RTCC.c: 317: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9700                           
  9701                           ; BSR set to: 0
  9702                           
  9703                           ; BSR set to: 0
  9704  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9705  011A7E  0100               	movlb	0	; () banked
  9706  011A80  EE20 F00A          	lfsr	2,10
  9707  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9708  011A86  26D9               	addwf	fsr2l,f,c
  9709  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9710  011A8A  22DA               	addwfc	fsr2h,f,c
  9711  011A8C  50DF               	movf	indf2,w,c
  9712  011A8E  EC65  F0A3         	call	_month_length
  9713  011A92  0100               	movlb	0	; () banked
  9714  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9715  011A96  0100               	movlb	0	; () banked
  9716  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9717  011A9A  0100               	movlb	0	; () banked
  9718  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9719  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9720  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9721  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9722  011AA4  0E80               	movlw	128
  9723  011AA6  0100               	movlb	0	; () banked
  9724  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9725  011AAA  0E51               	movlw	81
  9726  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9727  011AAE  0E01               	movlw	1
  9728  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9729  011AB2  0E00               	movlw	0
  9730  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9731  011AB6  EC66  F0AF         	call	___lmul	;wreg free
  9732  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9733  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9734  011AC2  0100               	movlb	0	; () banked
  9735  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9736  011AC6  5EDE               	subwf	postinc2,f,c
  9737  011AC8  0100               	movlb	0	; () banked
  9738  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9739  011ACC  5ADE               	subwfb	postinc2,f,c
  9740  011ACE  0100               	movlb	0	; () banked
  9741  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9742  011AD2  5ADE               	subwfb	postinc2,f,c
  9743  011AD4  0100               	movlb	0	; () banked
  9744  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9745  011AD8  5ADE               	subwfb	postinc2,f,c
  9746                           
  9747                           ; BSR set to: 0
  9748  011ADA  0100               	movlb	0	; () banked
  9749  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9750  011ADE  D7C8               	goto	l10805
  9751  011AE0                     l10815:
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;My_RTCC.c: 318: }
  9755                           ;My_RTCC.c: 319: for (uint8_t i = 12; i > tm->MM; i--) {
  9756  011AE0  0E0C               	movlw	12
  9757  011AE2  0100               	movlb	0	; () banked
  9758  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_2940& (0+255),b
  9759  011AE6  D036               	goto	l10821
  9760  011AE8                     l10817:
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;My_RTCC.c: 320: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9764  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_2940,month_length@month
  9765  011AEC  0100               	movlb	0	; () banked
  9766  011AEE  EE20 F00A          	lfsr	2,10
  9767  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9768  011AF4  26D9               	addwf	fsr2l,f,c
  9769  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9770  011AF8  22DA               	addwfc	fsr2h,f,c
  9771  011AFA  50DF               	movf	indf2,w,c
  9772  011AFC  0100               	movlb	0	; () banked
  9773  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9774  011B00  0100               	movlb	0	; () banked
  9775  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9776  011B04  EC65  F0A3         	call	_month_length
  9777  011B08  0100               	movlb	0	; () banked
  9778  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9779  011B0C  0100               	movlb	0	; () banked
  9780  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9781  011B10  0100               	movlb	0	; () banked
  9782  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9783  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9784  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9785  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9786  011B1A  0E80               	movlw	128
  9787  011B1C  0100               	movlb	0	; () banked
  9788  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9789  011B20  0E51               	movlw	81
  9790  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9791  011B24  0E01               	movlw	1
  9792  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9793  011B28  0E00               	movlw	0
  9794  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9795  011B2C  EC66  F0AF         	call	___lmul	;wreg free
  9796  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9797  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9798  011B38  0100               	movlb	0	; () banked
  9799  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9800  011B3C  5EDE               	subwf	postinc2,f,c
  9801  011B3E  0100               	movlb	0	; () banked
  9802  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9803  011B42  5ADE               	subwfb	postinc2,f,c
  9804  011B44  0100               	movlb	0	; () banked
  9805  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9806  011B48  5ADE               	subwfb	postinc2,f,c
  9807  011B4A  0100               	movlb	0	; () banked
  9808  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9809  011B4E  5ADE               	subwfb	postinc2,f,c
  9810                           
  9811                           ; BSR set to: 0
  9812  011B50  0100               	movlb	0	; () banked
  9813  011B52  0797               	decf	RTCC_adjust_time_dec@i_2940& (0+255),f,b
  9814  011B54                     l10821:
  9815                           
  9816                           ; BSR set to: 0
  9817  011B54  0100               	movlb	0	; () banked
  9818  011B56  EE20 F009          	lfsr	2,9
  9819  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9820  011B5C  26D9               	addwf	fsr2l,f,c
  9821  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9822  011B60  22DA               	addwfc	fsr2h,f,c
  9823  011B62  0100               	movlb	0	; () banked
  9824  011B64  5197               	movf	RTCC_adjust_time_dec@i_2940& (0+255),w,b
  9825  011B66  5CDE               	subwf	postinc2,w,c
  9826  011B68  A0D8               	btfss	status,0,c
  9827  011B6A  D7BE               	goto	l10817
  9828  011B6C                     l10823:
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;My_RTCC.c: 321: }
  9832                           ;My_RTCC.c: 322: }
  9833                           ;My_RTCC.c: 324: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9834  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9835  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9836  011B74  0E80               	movlw	128
  9837  011B76  5CDE               	subwf	postinc2,w,c
  9838  011B78  0E13               	movlw	19
  9839  011B7A  58DE               	subwfb	postinc2,w,c
  9840  011B7C  0E19               	movlw	25
  9841  011B7E  58DE               	subwfb	postinc2,w,c
  9842  011B80  0EBC               	movlw	188
  9843  011B82  58DE               	subwfb	postinc2,w,c
  9844  011B84  A0D8               	btfss	status,0,c
  9845  011B86  D00C               	goto	l10827
  9846                           
  9847                           ; BSR set to: 0
  9848  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9849  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9850  011B90  0E80               	movlw	128
  9851  011B92  26DE               	addwf	postinc2,f,c
  9852  011B94  0E13               	movlw	19
  9853  011B96  22DE               	addwfc	postinc2,f,c
  9854  011B98  0E19               	movlw	25
  9855  011B9A  22DE               	addwfc	postinc2,f,c
  9856  011B9C  0EBC               	movlw	188
  9857  011B9E  22DE               	addwfc	postinc2,f,c
  9858  011BA0                     l10827:
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;My_RTCC.c: 325: RTCC_from_epoch(&now);
  9862  011BA0  0E72               	movlw	low _now
  9863  011BA2  0100               	movlb	0	; () banked
  9864  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9865  011BA6  0E01               	movlw	high _now
  9866  011BA8  0100               	movlb	0	; () banked
  9867  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9868  011BAC  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  9869                           
  9870                           ;My_RTCC.c: 326: time_change_flag = 1;
  9871  011BB0  0E01               	movlw	1
  9872  011BB2  6E25               	movwf	_time_change_flag,c
  9873  011BB4  0012               	return		;funcret
  9874  011BB6                     __end_of_RTCC_adjust_time_dec:
  9875                           	opt stack 0
  9876                           tblptru	equ	0xFF8
  9877                           tblptrh	equ	0xFF7
  9878                           tblptrl	equ	0xFF6
  9879                           tablat	equ	0xFF5
  9880                           prodh	equ	0xFF4
  9881                           prodl	equ	0xFF3
  9882                           intcon	equ	0xFF2
  9883                           postinc0	equ	0xFEE
  9884                           wreg	equ	0xFE8
  9885                           postinc1	equ	0xFE6
  9886                           postdec1	equ	0xFE5
  9887                           fsr1h	equ	0xFE2
  9888                           fsr1l	equ	0xFE1
  9889                           indf2	equ	0xFDF
  9890                           postinc2	equ	0xFDE
  9891                           postdec2	equ	0xFDD
  9892                           fsr2h	equ	0xFDA
  9893                           fsr2l	equ	0xFD9
  9894                           status	equ	0xFD8
  9895                           
  9896 ;; *************** function _RTCC_adjust_time_cursor *****************
  9897 ;; Defined at:
  9898 ;;		line 277 in file "../My_library/My_RTCC.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  tm              2    0[BANK0 ] PTR struct .
  9901 ;;		 -> now(14), 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;		None               void
  9906 ;; Registers used:
  9907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;Total ram usage:        2 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:   11
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_settings_adjust_time
  9924 ;;		_RTCC_adjust_time_button
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           	psect	text25
  9929  013C7A                     __ptext25:
  9930                           	opt stack 0
  9931  013C7A                     _RTCC_adjust_time_cursor:
  9932                           	opt stack 16
  9933                           
  9934                           ;My_RTCC.c: 278: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
  9935                           
  9936                           ;incstack = 0
  9937  013C7A  0100               	movlb	0	; () banked
  9938  013C7C  EE20 F00D          	lfsr	2,13
  9939  013C80  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9940  013C82  26D9               	addwf	fsr2l,f,c
  9941  013C84  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9942  013C86  22DA               	addwfc	fsr2h,f,c
  9943  013C88  0100               	movlb	0	; () banked
  9944  013C8A  A0DF               	btfss	indf2,0,c
  9945  013C8C  D00A               	goto	l10709
  9946                           
  9947                           ; BSR set to: 0
  9948  013C8E  0100               	movlb	0	; () banked
  9949  013C90  EE20 F00D          	lfsr	2,13
  9950  013C94  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9951  013C96  26D9               	addwf	fsr2l,f,c
  9952  013C98  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9953  013C9A  22DA               	addwfc	fsr2h,f,c
  9954  013C9C  0E02               	movlw	2
  9955  013C9E  6EDF               	movwf	indf2,c
  9956  013CA0  0012               	return	
  9957  013CA2                     l10709:
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;My_RTCC.c: 279: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
  9961  013CA2  0100               	movlb	0	; () banked
  9962  013CA4  EE20 F00D          	lfsr	2,13
  9963  013CA8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9964  013CAA  26D9               	addwf	fsr2l,f,c
  9965  013CAC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9966  013CAE  22DA               	addwfc	fsr2h,f,c
  9967  013CB0  0100               	movlb	0	; () banked
  9968  013CB2  A2DF               	btfss	indf2,1,c
  9969  013CB4  D00A               	goto	l10713
  9970                           
  9971                           ; BSR set to: 0
  9972  013CB6  0100               	movlb	0	; () banked
  9973  013CB8  EE20 F00D          	lfsr	2,13
  9974  013CBC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9975  013CBE  26D9               	addwf	fsr2l,f,c
  9976  013CC0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9977  013CC2  22DA               	addwfc	fsr2h,f,c
  9978  013CC4  0E04               	movlw	4
  9979  013CC6  6EDF               	movwf	indf2,c
  9980  013CC8  0012               	return	
  9981  013CCA                     l10713:
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;My_RTCC.c: 280: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
  9985  013CCA  0100               	movlb	0	; () banked
  9986  013CCC  EE20 F00D          	lfsr	2,13
  9987  013CD0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9988  013CD2  26D9               	addwf	fsr2l,f,c
  9989  013CD4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9990  013CD6  22DA               	addwfc	fsr2h,f,c
  9991  013CD8  0100               	movlb	0	; () banked
  9992  013CDA  A4DF               	btfss	indf2,2,c
  9993  013CDC  D00A               	goto	l10717
  9994                           
  9995                           ; BSR set to: 0
  9996  013CDE  0100               	movlb	0	; () banked
  9997  013CE0  EE20 F00D          	lfsr	2,13
  9998  013CE4  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9999  013CE6  26D9               	addwf	fsr2l,f,c
 10000  013CE8  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10001  013CEA  22DA               	addwfc	fsr2h,f,c
 10002  013CEC  0E08               	movlw	8
 10003  013CEE  6EDF               	movwf	indf2,c
 10004  013CF0  0012               	return	
 10005  013CF2                     l10717:
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;My_RTCC.c: 281: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10009  013CF2  0100               	movlb	0	; () banked
 10010  013CF4  EE20 F00D          	lfsr	2,13
 10011  013CF8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10012  013CFA  26D9               	addwf	fsr2l,f,c
 10013  013CFC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10014  013CFE  22DA               	addwfc	fsr2h,f,c
 10015  013D00  0100               	movlb	0	; () banked
 10016  013D02  A6DF               	btfss	indf2,3,c
 10017  013D04  D00A               	goto	l10721
 10018                           
 10019                           ; BSR set to: 0
 10020  013D06  0100               	movlb	0	; () banked
 10021  013D08  EE20 F00D          	lfsr	2,13
 10022  013D0C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10023  013D0E  26D9               	addwf	fsr2l,f,c
 10024  013D10  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10025  013D12  22DA               	addwfc	fsr2h,f,c
 10026  013D14  0E10               	movlw	16
 10027  013D16  6EDF               	movwf	indf2,c
 10028  013D18  0012               	return	
 10029  013D1A                     l10721:
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;My_RTCC.c: 282: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10033  013D1A  0100               	movlb	0	; () banked
 10034  013D1C  EE20 F00D          	lfsr	2,13
 10035  013D20  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10036  013D22  26D9               	addwf	fsr2l,f,c
 10037  013D24  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10038  013D26  22DA               	addwfc	fsr2h,f,c
 10039  013D28  0100               	movlb	0	; () banked
 10040  013D2A  A8DF               	btfss	indf2,4,c
 10041  013D2C  D00A               	goto	l10725
 10042                           
 10043                           ; BSR set to: 0
 10044  013D2E  0100               	movlb	0	; () banked
 10045  013D30  EE20 F00D          	lfsr	2,13
 10046  013D34  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10047  013D36  26D9               	addwf	fsr2l,f,c
 10048  013D38  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10049  013D3A  22DA               	addwfc	fsr2h,f,c
 10050  013D3C  0E20               	movlw	32
 10051  013D3E  6EDF               	movwf	indf2,c
 10052  013D40  0012               	return	
 10053  013D42                     l10725:
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;My_RTCC.c: 283: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10057  013D42  0100               	movlb	0	; () banked
 10058  013D44  EE20 F00D          	lfsr	2,13
 10059  013D48  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10060  013D4A  26D9               	addwf	fsr2l,f,c
 10061  013D4C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10062  013D4E  22DA               	addwfc	fsr2h,f,c
 10063  013D50  0100               	movlb	0	; () banked
 10064  013D52  AADF               	btfss	indf2,5,c
 10065  013D54  D00A               	goto	l10729
 10066                           
 10067                           ; BSR set to: 0
 10068  013D56  0100               	movlb	0	; () banked
 10069  013D58  EE20 F00D          	lfsr	2,13
 10070  013D5C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10071  013D5E  26D9               	addwf	fsr2l,f,c
 10072  013D60  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10073  013D62  22DA               	addwfc	fsr2h,f,c
 10074  013D64  0E01               	movlw	1
 10075  013D66  6EDF               	movwf	indf2,c
 10076  013D68  0012               	return	
 10077  013D6A                     l10729:
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;My_RTCC.c: 284: else tm->edit.flags = 0x00;
 10081  013D6A  0100               	movlb	0	; () banked
 10082  013D6C  EE20 F00D          	lfsr	2,13
 10083  013D70  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10084  013D72  26D9               	addwf	fsr2l,f,c
 10085  013D74  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10086  013D76  22DA               	addwfc	fsr2h,f,c
 10087  013D78  0E00               	movlw	0
 10088  013D7A  6EDF               	movwf	indf2,c
 10089                           
 10090                           ; BSR set to: 0
 10091                           
 10092                           ; BSR set to: 0
 10093                           
 10094                           ; BSR set to: 0
 10095                           
 10096                           ; BSR set to: 0
 10097                           
 10098                           ; BSR set to: 0
 10099  013D7C  0012               	return	
 10100  013D7E                     __end_of_RTCC_adjust_time_cursor:
 10101                           	opt stack 0
 10102                           tblptru	equ	0xFF8
 10103                           tblptrh	equ	0xFF7
 10104                           tblptrl	equ	0xFF6
 10105                           tablat	equ	0xFF5
 10106                           prodh	equ	0xFF4
 10107                           prodl	equ	0xFF3
 10108                           intcon	equ	0xFF2
 10109                           postinc0	equ	0xFEE
 10110                           wreg	equ	0xFE8
 10111                           postinc1	equ	0xFE6
 10112                           postdec1	equ	0xFE5
 10113                           fsr1h	equ	0xFE2
 10114                           fsr1l	equ	0xFE1
 10115                           indf2	equ	0xFDF
 10116                           postinc2	equ	0xFDE
 10117                           postdec2	equ	0xFDD
 10118                           fsr2h	equ	0xFDA
 10119                           fsr2l	equ	0xFD9
 10120                           status	equ	0xFD8
 10121                           
 10122 ;; *************** function _port_button_task *****************
 10123 ;; Defined at:
 10124 ;;		line 82 in file "ChargeStation_task.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;		None
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  i               1    6[BANK0 ] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;		None               void
 10131 ;; Registers used:
 10132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10141 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10142 ;;Total ram usage:        1 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:   12
 10145 ;; This function calls:
 10146 ;;		_LED_output
 10147 ;;		_OUT
 10148 ;;		_display
 10149 ;; This function is called by:
 10150 ;;		_normal_task
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text26
 10155  013138                     __ptext26:
 10156                           	opt stack 0
 10157  013138                     _port_button_task:
 10158                           	opt stack 17
 10159                           
 10160                           ;ChargeStation_task.c: 83: uint8_t i;
 10161                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;incstack = 0
 10165  013138  0E00               	movlw	0
 10166  01313A  0100               	movlb	0	; () banked
 10167  01313C  6F66               	movwf	port_button_task@i& (0+255),b
 10168  01313E                     l11603:
 10169                           
 10170                           ; BSR set to: 0
 10171  01313E  0E02               	movlw	2
 10172  013140  0100               	movlb	0	; () banked
 10173  013142  6566               	cpfsgt	port_button_task@i& (0+255),b
 10174  013144  D001               	goto	l11607
 10175  013146  0012               	return	
 10176  013148                     l11607:
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10180  013148  0100               	movlb	0	; () banked
 10181  01314A  5166               	movf	port_button_task@i& (0+255),w,b
 10182  01314C  0D17               	mullw	23
 10183  01314E  0E03               	movlw	3
 10184  013150  26F3               	addwf	prodl,f,c
 10185  013152  0E00               	movlw	0
 10186  013154  22F4               	addwfc	prodh,f,c
 10187  013156  0E2D               	movlw	low _port
 10188  013158  24F3               	addwf	prodl,w,c
 10189  01315A  6ED9               	movwf	fsr2l,c
 10190  01315C  0E01               	movlw	high _port
 10191  01315E  20F4               	addwfc	prodh,w,c
 10192  013160  6EDA               	movwf	fsr2h,c
 10193  013162  0101               	movlb	1	; () banked
 10194  013164  A0DF               	btfss	indf2,0,c
 10195  013166  D008               	goto	l11611
 10196                           
 10197                           ; BSR set to: 1
 10198                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10199  013168  0E01               	movlw	1
 10200  01316A  0100               	movlb	0	; () banked
 10201  01316C  6F60               	movwf	LED_output@value& (0+255),b
 10202  01316E  0100               	movlb	0	; () banked
 10203  013170  5166               	movf	port_button_task@i& (0+255),w,b
 10204  013172  ECA1  F0AF         	call	_LED_output
 10205                           
 10206                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10207  013176  D027               	goto	l11617
 10208  013178                     l11611:
 10209  013178  0100               	movlb	0	; () banked
 10210  01317A  5166               	movf	port_button_task@i& (0+255),w,b
 10211  01317C  0D17               	mullw	23
 10212  01317E  0E16               	movlw	22
 10213  013180  26F3               	addwf	prodl,f,c
 10214  013182  0E00               	movlw	0
 10215  013184  22F4               	addwfc	prodh,f,c
 10216  013186  0E2D               	movlw	low _port
 10217  013188  24F3               	addwf	prodl,w,c
 10218  01318A  6ED9               	movwf	fsr2l,c
 10219  01318C  0E01               	movlw	high _port
 10220  01318E  20F4               	addwfc	prodh,w,c
 10221  013190  6EDA               	movwf	fsr2h,c
 10222  013192  0101               	movlb	1	; () banked
 10223  013194  B2DF               	btfsc	indf2,1,c
 10224  013196  D017               	goto	l11617
 10225                           
 10226                           ; BSR set to: 1
 10227  013198  0100               	movlb	0	; () banked
 10228  01319A  5166               	movf	port_button_task@i& (0+255),w,b
 10229  01319C  0D17               	mullw	23
 10230  01319E  0E16               	movlw	22
 10231  0131A0  26F3               	addwf	prodl,f,c
 10232  0131A2  0E00               	movlw	0
 10233  0131A4  22F4               	addwfc	prodh,f,c
 10234  0131A6  0E2D               	movlw	low _port
 10235  0131A8  24F3               	addwf	prodl,w,c
 10236  0131AA  6ED9               	movwf	fsr2l,c
 10237  0131AC  0E01               	movlw	high _port
 10238  0131AE  20F4               	addwfc	prodh,w,c
 10239  0131B0  6EDA               	movwf	fsr2h,c
 10240  0131B2  0101               	movlb	1	; () banked
 10241  0131B4  A6DF               	btfss	indf2,3,c
 10242  0131B6  D007               	goto	l11617
 10243                           
 10244                           ; BSR set to: 1
 10245                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10246  0131B8  0E00               	movlw	0
 10247  0131BA  0100               	movlb	0	; () banked
 10248  0131BC  6F60               	movwf	LED_output@value& (0+255),b
 10249  0131BE  0100               	movlb	0	; () banked
 10250  0131C0  5166               	movf	port_button_task@i& (0+255),w,b
 10251  0131C2  ECA1  F0AF         	call	_LED_output
 10252  0131C6                     l11617:
 10253                           
 10254                           ;ChargeStation_task.c: 90: }
 10255                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10256  0131C6  0100               	movlb	0	; () banked
 10257  0131C8  5166               	movf	port_button_task@i& (0+255),w,b
 10258  0131CA  0D17               	mullw	23
 10259  0131CC  0E02               	movlw	2
 10260  0131CE  26F3               	addwf	prodl,f,c
 10261  0131D0  0E00               	movlw	0
 10262  0131D2  22F4               	addwfc	prodh,f,c
 10263  0131D4  0E2D               	movlw	low _port
 10264  0131D6  24F3               	addwf	prodl,w,c
 10265  0131D8  6ED9               	movwf	fsr2l,c
 10266  0131DA  0E01               	movlw	high _port
 10267  0131DC  20F4               	addwfc	prodh,w,c
 10268  0131DE  6EDA               	movwf	fsr2h,c
 10269  0131E0  0101               	movlb	1	; () banked
 10270  0131E2  A0DF               	btfss	indf2,0,c
 10271  0131E4  D058               	goto	l11643
 10272                           
 10273                           ; BSR set to: 1
 10274                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10275  0131E6  0100               	movlb	0	; () banked
 10276  0131E8  5166               	movf	port_button_task@i& (0+255),w,b
 10277  0131EA  0D17               	mullw	23
 10278  0131EC  0E02               	movlw	2
 10279  0131EE  26F3               	addwf	prodl,f,c
 10280  0131F0  0E00               	movlw	0
 10281  0131F2  22F4               	addwfc	prodh,f,c
 10282  0131F4  0E2D               	movlw	low _port
 10283  0131F6  24F3               	addwf	prodl,w,c
 10284  0131F8  6ED9               	movwf	fsr2l,c
 10285  0131FA  0E01               	movlw	high _port
 10286  0131FC  20F4               	addwfc	prodh,w,c
 10287  0131FE  6EDA               	movwf	fsr2h,c
 10288  013200  0E00               	movlw	0
 10289  013202  6EDE               	movwf	postinc2,c
 10290  013204  0E00               	movlw	0
 10291  013206  6EDD               	movwf	postdec2,c
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10295  013208  0E00               	movlw	0
 10296  01320A  0100               	movlb	0	; () banked
 10297  01320C  6F60               	movwf	LED_output@value& (0+255),b
 10298  01320E  0100               	movlb	0	; () banked
 10299  013210  5166               	movf	port_button_task@i& (0+255),w,b
 10300  013212  ECA1  F0AF         	call	_LED_output
 10301                           
 10302                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10303  013216  0100               	movlb	0	; () banked
 10304  013218  5166               	movf	port_button_task@i& (0+255),w,b
 10305  01321A  0100               	movlb	0	; () banked
 10306  01321C  19FE               	xorwf	_print_port& (0+255),w,b
 10307  01321E  B4D8               	btfsc	status,2,c
 10308  013220  D008               	goto	l11635
 10309  013222  D010               	goto	l113
 10310  013224                     l11627:
 10311                           
 10312                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10313  013224  0E01               	movlw	1
 10314  013226  D003               	goto	L2
 10315  013228                     l11629:
 10316                           
 10317                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10318  013228  0E02               	movlw	2
 10319  01322A  D001               	goto	L2
 10320  01322C                     l11631:
 10321                           
 10322                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10323  01322C  0E00               	movlw	0
 10324  01322E                     L2:
 10325  01322E  6E1C               	movwf	_data_item,c
 10326                           
 10327                           ;ChargeStation_task.c: 109: }
 10328                           
 10329                           ;ChargeStation_task.c: 108: break;
 10330  013230  D00B               	goto	l11637
 10331  013232                     l11635:
 10332  013232  501C               	movf	_data_item,w,c
 10333                           
 10334                           ; Switch size 1, requested type "space"
 10335                           ; Number of cases is 3, Range of values is 0 to 2
 10336                           ; switch strategies available:
 10337                           ; Name         Instructions Cycles
 10338                           ; simple_byte           10     6 (average)
 10339                           ;	Chosen strategy is simple_byte
 10340  013234  0A00               	xorlw	0	; case 0
 10341  013236  B4D8               	btfsc	status,2,c
 10342  013238  D7F5               	goto	l11627
 10343  01323A  0A01               	xorlw	1	; case 1
 10344  01323C  B4D8               	btfsc	status,2,c
 10345  01323E  D7F4               	goto	l11629
 10346  013240  0A03               	xorlw	3	; case 2
 10347  013242  D7F4               	goto	l11631
 10348  013244                     l113:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;ChargeStation_task.c: 111: print_port = i;
 10352  013244  C066  F0FE         	movff	port_button_task@i,_print_port
 10353  013248                     l11637:
 10354                           
 10355                           ;ChargeStation_task.c: 112: }
 10356                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10357  013248  0EE6               	movlw	low (STR_96+3)
 10358  01324A  0100               	movlb	0	; () banked
 10359  01324C  6F60               	movwf	display@str0& (0+255),b
 10360  01324E  0EFF               	movlw	high (STR_96+3)
 10361  013250  0100               	movlb	0	; () banked
 10362  013252  6F61               	movwf	(display@str0+1)& (0+255),b
 10363  013254  0EE6               	movlw	low (STR_96+3)
 10364  013256  0100               	movlb	0	; () banked
 10365  013258  6F62               	movwf	display@str1& (0+255),b
 10366  01325A  0EFF               	movlw	high (STR_96+3)
 10367  01325C  0100               	movlb	0	; () banked
 10368  01325E  6F63               	movwf	(display@str1+1)& (0+255),b
 10369  013260  0E02               	movlw	2
 10370  013262  ECEA  F09B         	call	_display
 10371                           
 10372                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10373  013266  0E01               	movlw	1
 10374  013268  0100               	movlb	0	; () banked
 10375  01326A  6F60               	movwf	OUT@value& (0+255),b
 10376  01326C  0100               	movlb	0	; () banked
 10377  01326E  5166               	movf	port_button_task@i& (0+255),w,b
 10378  013270  ECDA  F0AF         	call	_OUT
 10379                           
 10380                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10381  013274  0100               	movlb	0	; () banked
 10382  013276  5166               	movf	port_button_task@i& (0+255),w,b
 10383  013278  0D17               	mullw	23
 10384  01327A  0E14               	movlw	20
 10385  01327C  26F3               	addwf	prodl,f,c
 10386  01327E  0E00               	movlw	0
 10387  013280  22F4               	addwfc	prodh,f,c
 10388  013282  0E2D               	movlw	low _port
 10389  013284  24F3               	addwf	prodl,w,c
 10390  013286  6ED9               	movwf	fsr2l,c
 10391  013288  0E01               	movlw	high _port
 10392  01328A  20F4               	addwfc	prodh,w,c
 10393  01328C  6EDA               	movwf	fsr2h,c
 10394  01328E  0E00               	movlw	0
 10395  013290  6EDE               	movwf	postinc2,c
 10396  013292  0E00               	movlw	0
 10397  013294  6EDD               	movwf	postdec2,c
 10398  013296                     l11643:
 10399  013296  0100               	movlb	0	; () banked
 10400  013298  2B66               	incf	port_button_task@i& (0+255),f,b
 10401  01329A  D751               	goto	l11603
 10402  01329C                     __end_of_port_button_task:
 10403                           	opt stack 0
 10404                           tblptru	equ	0xFF8
 10405                           tblptrh	equ	0xFF7
 10406                           tblptrl	equ	0xFF6
 10407                           tablat	equ	0xFF5
 10408                           prodh	equ	0xFF4
 10409                           prodl	equ	0xFF3
 10410                           intcon	equ	0xFF2
 10411                           postinc0	equ	0xFEE
 10412                           wreg	equ	0xFE8
 10413                           postinc1	equ	0xFE6
 10414                           postdec1	equ	0xFE5
 10415                           fsr1h	equ	0xFE2
 10416                           fsr1l	equ	0xFE1
 10417                           indf2	equ	0xFDF
 10418                           postinc2	equ	0xFDE
 10419                           postdec2	equ	0xFDD
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8
 10423                           
 10424 ;; *************** function _display *****************
 10425 ;; Defined at:
 10426 ;;		line 15 in file "LCD_print.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  item            1    wreg     enum E8527
 10429 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10430 ;;		 -> STR_76(1), STR_74(9), STR_72(9), STR_70(9), 
 10431 ;;		 -> STR_68(9), STR_66(9), STR_64(9), STR_62(1), 
 10432 ;;		 -> STR_61(1), STR_58(17), STR_54(1), STR_53(1), 
 10433 ;;		 -> STR_50(17), STR_46(1), STR_45(1), STR_42(17), 
 10434 ;;		 -> STR_38(1), STR_36(1), STR_34(15), STR_7(15), 
 10435 ;;		 -> STR_3(1), STR_1(1), 
 10436 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10437 ;;		 -> STR_77(1), STR_75(15), STR_73(16), STR_71(17), 
 10438 ;;		 -> STR_69(16), STR_67(17), STR_65(17), STR_63(1), 
 10439 ;;		 -> settings_integrating_reset@str_1344(20), settings_integrating_reset@str(20), STR_55(1), settings_led_indicator@s
      +tr_1327(20), 
 10440 ;;		 -> settings_led_indicator@str(20), STR_47(1), settings_auto_stop@str_1310(20), settings_auto_stop@str(20), 
 10441 ;;		 -> STR_39(1), STR_37(1), STR_35(13), STR_8(14), 
 10442 ;;		 -> STR_4(1), STR_2(1), 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;  item            1    4[BANK0 ] enum E8527
 10445 ;;  i               1    5[BANK0 ] unsigned char 
 10446 ;; Return value:  Size  Location     Type
 10447 ;;		None               void
 10448 ;; Registers used:
 10449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;Total ram usage:        6 bytes
 10460 ;; Hardware stack levels used:    1
 10461 ;; Hardware stack levels required when called:   11
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_port_button_task
 10466 ;;		_normal_task
 10467 ;;		_sleep_task
 10468 ;;		_software_init
 10469 ;;		_settings_adjust_time
 10470 ;;		_settings_auto_stop
 10471 ;;		_settings_led_indicator
 10472 ;;		_settings_integrating_reset
 10473 ;;		_settings_task
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text27
 10478  0137D4                     __ptext27:
 10479                           	opt stack 0
 10480  0137D4                     _display:
 10481                           	opt stack 18
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;incstack = 0
 10485                           ;display@item stored from wreg
 10486  0137D4  0100               	movlb	0	; () banked
 10487  0137D6  6F64               	movwf	display@item& (0+255),b
 10488                           
 10489                           ;LCD_print.c: 16: print_item = item;
 10490  0137D8  C064  F020         	movff	display@item,_print_item
 10491                           
 10492                           ;LCD_print.c: 17: uint8_t i;
 10493                           ;LCD_print.c: 18: if (*str0) {
 10494  0137DC  C060  FFF6         	movff	display@str0,tblptrl
 10495  0137E0  C061  FFF7         	movff	display@str0+1,tblptrh
 10496  0137E4                     	if	0	;tblptru may be non-zero
 10497  0137E4                     	endif
 10498  0137E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10499  0137E4  0E00               	movlw	low (__mediumconst shr (0+16))
 10500  0137E6  6EF8               	movwf	tblptru,c
 10501  0137E8                     	endif
 10502  0137E8  0008               	tblrd		*
 10503  0137EA  50F5               	movf	tablat,w,c
 10504  0137EC  0900               	iorlw	0
 10505  0137EE  B4D8               	btfsc	status,2,c
 10506  0137F0  D031               	goto	l10581
 10507                           
 10508                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10509  0137F2  0E00               	movlw	0
 10510  0137F4  0100               	movlb	0	; () banked
 10511  0137F6  6F65               	movwf	display@i& (0+255),b
 10512  0137F8  D017               	goto	l10577
 10513  0137FA                     l10571:
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10517  0137FA  C060  FFF6         	movff	display@str0,tblptrl
 10518  0137FE  C061  FFF7         	movff	display@str0+1,tblptrh
 10519  013802                     	if	0	;tblptru may be non-zero
 10520  013802                     	endif
 10521  013802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10522  013802  0E00               	movlw	low (__mediumconst shr (0+16))
 10523  013804  6EF8               	movwf	tblptru,c
 10524  013806                     	endif
 10525  013806  0100               	movlb	0	; () banked
 10526  013808  5165               	movf	display@i& (0+255),w,b
 10527  01380A  0D01               	mullw	1
 10528  01380C  0E0E               	movlw	low _display_char
 10529  01380E  24F3               	addwf	prodl,w,c
 10530  013810  6ED9               	movwf	fsr2l,c
 10531  013812  0E02               	movlw	high _display_char
 10532  013814  20F4               	addwfc	prodh,w,c
 10533  013816  6EDA               	movwf	fsr2h,c
 10534  013818  0008               	tblrd		*
 10535  01381A  CFF5 FFDF          	movff	tablat,indf2
 10536                           
 10537                           ; BSR set to: 0
 10538  01381E  0100               	movlb	0	; () banked
 10539  013820  4B60               	infsnz	display@str0& (0+255),f,b
 10540  013822  2B61               	incf	(display@str0+1)& (0+255),f,b
 10541                           
 10542                           ; BSR set to: 0
 10543  013824  0100               	movlb	0	; () banked
 10544  013826  2B65               	incf	display@i& (0+255),f,b
 10545  013828                     l10577:
 10546                           
 10547                           ; BSR set to: 0
 10548  013828  C060  FFF6         	movff	display@str0,tblptrl
 10549  01382C  C061  FFF7         	movff	display@str0+1,tblptrh
 10550  013830                     	if	0	;tblptru may be non-zero
 10551  013830                     	endif
 10552  013830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10553  013830  0E00               	movlw	low (__mediumconst shr (0+16))
 10554  013832  6EF8               	movwf	tblptru,c
 10555  013834                     	endif
 10556  013834  0008               	tblrd		*
 10557  013836  50F5               	movf	tablat,w,c
 10558  013838  0900               	iorlw	0
 10559  01383A  A4D8               	btfss	status,2,c
 10560  01383C  D7DE               	goto	l10571
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;LCD_print.c: 21: }
 10564                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10565                           
 10566                           ; BSR set to: 0
 10567  01383E  0100               	movlb	0	; () banked
 10568  013840  5165               	movf	display@i& (0+255),w,b
 10569  013842  0D01               	mullw	1
 10570  013844  0E0E               	movlw	low _display_char
 10571  013846  24F3               	addwf	prodl,w,c
 10572  013848  6ED9               	movwf	fsr2l,c
 10573  01384A  0E02               	movlw	high _display_char
 10574  01384C  20F4               	addwfc	prodh,w,c
 10575  01384E  6EDA               	movwf	fsr2h,c
 10576  013850  0E00               	movlw	0
 10577  013852  6EDF               	movwf	indf2,c
 10578  013854                     l10581:
 10579                           
 10580                           ;LCD_print.c: 23: }
 10581                           ;LCD_print.c: 24: if (*str1) {
 10582  013854  C062  FFF6         	movff	display@str1,tblptrl
 10583  013858  C063  FFF7         	movff	display@str1+1,tblptrh
 10584  01385C  0E00               	movlw	low (__mediumconst shr (0+16))
 10585  01385E  6EF8               	movwf	tblptru,c
 10586  013860  0E0E               	movlw	(high __ramtop+-1)
 10587  013862  64F7               	cpfsgt	tblptrh,c
 10588  013864  D003               	bra	u11987
 10589  013866  0008               	tblrd		*
 10590  013868  50F5               	movf	tablat,w,c
 10591  01386A  D005               	bra	u11980
 10592  01386C                     u11987:
 10593  01386C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10594  013870  CFF7 FFE2          	movff	tblptrh,fsr1h
 10595  013874  50E7               	movf	indf1,w,c
 10596  013876                     u11980:
 10597  013876  0900               	iorlw	0
 10598  013878  B4D8               	btfsc	status,2,c
 10599  01387A  D043               	goto	l10595
 10600                           
 10601                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10602  01387C  0E00               	movlw	0
 10603  01387E  0100               	movlb	0	; () banked
 10604  013880  6F65               	movwf	display@i& (0+255),b
 10605  013882  D020               	goto	l10591
 10606  013884                     l10585:
 10607                           
 10608                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10609  013884  C062  FFF6         	movff	display@str1,tblptrl
 10610  013888  C063  FFF7         	movff	display@str1+1,tblptrh
 10611  01388C  0E00               	movlw	low (__mediumconst shr (0+16))
 10612  01388E  6EF8               	movwf	tblptru,c
 10613  013890  0100               	movlb	0	; () banked
 10614  013892  5165               	movf	display@i& (0+255),w,b
 10615  013894  0D01               	mullw	1
 10616  013896  0E22               	movlw	low (_display_char+20)
 10617  013898  24F3               	addwf	prodl,w,c
 10618  01389A  6ED9               	movwf	fsr2l,c
 10619  01389C  0E02               	movlw	high (_display_char+20)
 10620  01389E  20F4               	addwfc	prodh,w,c
 10621  0138A0  6EDA               	movwf	fsr2h,c
 10622  0138A2  0E0E               	movlw	(high __ramtop+-1)
 10623  0138A4  64F7               	cpfsgt	tblptrh,c
 10624  0138A6  D003               	bra	u12007
 10625  0138A8  0008               	tblrd		*
 10626  0138AA  50F5               	movf	tablat,w,c
 10627  0138AC  D005               	bra	u12000
 10628  0138AE                     u12007:
 10629  0138AE  CFF6 FFE1          	movff	tblptrl,fsr1l
 10630  0138B2  CFF7 FFE2          	movff	tblptrh,fsr1h
 10631  0138B6  50E7               	movf	indf1,w,c
 10632  0138B8                     u12000:
 10633  0138B8  6EDF               	movwf	indf2,c
 10634  0138BA  0100               	movlb	0	; () banked
 10635  0138BC  4B62               	infsnz	display@str1& (0+255),f,b
 10636  0138BE  2B63               	incf	(display@str1+1)& (0+255),f,b
 10637                           
 10638                           ; BSR set to: 0
 10639  0138C0  0100               	movlb	0	; () banked
 10640  0138C2  2B65               	incf	display@i& (0+255),f,b
 10641  0138C4                     l10591:
 10642                           
 10643                           ; BSR set to: 0
 10644  0138C4  C062  FFF6         	movff	display@str1,tblptrl
 10645  0138C8  C063  FFF7         	movff	display@str1+1,tblptrh
 10646  0138CC  0E00               	movlw	low (__mediumconst shr (0+16))
 10647  0138CE  6EF8               	movwf	tblptru,c
 10648  0138D0  0E0E               	movlw	(high __ramtop+-1)
 10649  0138D2  64F7               	cpfsgt	tblptrh,c
 10650  0138D4  D003               	bra	u12017
 10651  0138D6  0008               	tblrd		*
 10652  0138D8  50F5               	movf	tablat,w,c
 10653  0138DA  D005               	bra	u12010
 10654  0138DC                     u12017:
 10655  0138DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10656  0138E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10657  0138E4  50E7               	movf	indf1,w,c
 10658  0138E6                     u12010:
 10659  0138E6  0900               	iorlw	0
 10660  0138E8  A4D8               	btfss	status,2,c
 10661  0138EA  D7CC               	goto	l10585
 10662                           
 10663                           ;LCD_print.c: 27: }
 10664                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10665  0138EC  0100               	movlb	0	; () banked
 10666  0138EE  5165               	movf	display@i& (0+255),w,b
 10667  0138F0  0D01               	mullw	1
 10668  0138F2  0E22               	movlw	low (_display_char+20)
 10669  0138F4  24F3               	addwf	prodl,w,c
 10670  0138F6  6ED9               	movwf	fsr2l,c
 10671  0138F8  0E02               	movlw	high (_display_char+20)
 10672  0138FA  20F4               	addwfc	prodh,w,c
 10673  0138FC  6EDA               	movwf	fsr2h,c
 10674  0138FE  0E00               	movlw	0
 10675  013900  6EDF               	movwf	indf2,c
 10676  013902                     l10595:
 10677                           
 10678                           ;LCD_print.c: 29: }
 10679                           ;LCD_print.c: 30: display_flag = 1;
 10680  013902  0E01               	movlw	1
 10681  013904  6E1D               	movwf	_display_flag,c
 10682  013906  0012               	return		;funcret
 10683  013908                     __end_of_display:
 10684                           	opt stack 0
 10685                           tblptru	equ	0xFF8
 10686                           tblptrh	equ	0xFF7
 10687                           tblptrl	equ	0xFF6
 10688                           tablat	equ	0xFF5
 10689                           prodh	equ	0xFF4
 10690                           prodl	equ	0xFF3
 10691                           intcon	equ	0xFF2
 10692                           postinc0	equ	0xFEE
 10693                           wreg	equ	0xFE8
 10694                           indf1	equ	0xFE7
 10695                           postinc1	equ	0xFE6
 10696                           postdec1	equ	0xFE5
 10697                           fsr1h	equ	0xFE2
 10698                           fsr1l	equ	0xFE1
 10699                           indf2	equ	0xFDF
 10700                           postinc2	equ	0xFDE
 10701                           postdec2	equ	0xFDD
 10702                           fsr2h	equ	0xFDA
 10703                           fsr2l	equ	0xFD9
 10704                           status	equ	0xFD8
 10705                           
 10706 ;; *************** function _LED_output *****************
 10707 ;; Defined at:
 10708 ;;		line 36 in file "io.c"
 10709 ;; Parameters:    Size  Location     Type
 10710 ;;  b               1    wreg     unsigned char 
 10711 ;;  value           1    0[BANK0 ] unsigned char 
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  b               1    1[BANK0 ] unsigned char 
 10714 ;; Return value:  Size  Location     Type
 10715 ;;		None               void
 10716 ;; Registers used:
 10717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10723 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10727 ;;Total ram usage:        2 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:   11
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_port_button_task
 10734 ;;		_sleep_task
 10735 ;;		_software_init
 10736 ;;		_settings_led_indicator
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text28
 10741  015F42                     __ptext28:
 10742                           	opt stack 0
 10743  015F42                     _LED_output:
 10744                           	opt stack 18
 10745                           
 10746                           ;incstack = 0
 10747                           ;LED_output@b stored from wreg
 10748  015F42  0100               	movlb	0	; () banked
 10749  015F44  6F61               	movwf	LED_output@b& (0+255),b
 10750                           
 10751                           ;io.c: 37: port[b].flag.led_flag = value;
 10752  015F46  0100               	movlb	0	; () banked
 10753  015F48  5161               	movf	LED_output@b& (0+255),w,b
 10754  015F4A  0D17               	mullw	23
 10755  015F4C  0E16               	movlw	22
 10756  015F4E  26F3               	addwf	prodl,f,c
 10757  015F50  0E00               	movlw	0
 10758  015F52  22F4               	addwfc	prodh,f,c
 10759  015F54  0E2D               	movlw	low _port
 10760  015F56  24F3               	addwf	prodl,w,c
 10761  015F58  6ED9               	movwf	fsr2l,c
 10762  015F5A  0E01               	movlw	high _port
 10763  015F5C  20F4               	addwfc	prodh,w,c
 10764  015F5E  6EDA               	movwf	fsr2h,c
 10765  015F60  0100               	movlb	0	; () banked
 10766  015F62  B160               	btfsc	LED_output@value& (0+255),0,b
 10767  015F64  D003               	bra	u11895
 10768  015F66  0101               	movlb	1	; () banked
 10769  015F68  96DF               	bcf	indf2,3,c
 10770  015F6A  D002               	bra	u11896
 10771  015F6C                     u11895:
 10772  015F6C  0101               	movlb	1	; () banked
 10773  015F6E  86DF               	bsf	indf2,3,c
 10774  015F70                     u11896:
 10775                           
 10776                           ;io.c: 38: switch (b) {
 10777  015F70  D015               	goto	l10563
 10778  015F72                     l292:
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;io.c: 40: LATB7 = value;
 10782  015F72  0100               	movlb	0	; () banked
 10783  015F74  A160               	btfss	LED_output@value& (0+255),0,b
 10784  015F76  D002               	goto	u11900
 10785  015F78  8E8A               	bsf	3978,7,c	;volatile
 10786  015F7A  0012               	return	
 10787  015F7C                     u11900:
 10788  015F7C  9E8A               	bcf	3978,7,c	;volatile
 10789                           
 10790                           ;io.c: 41: break;
 10791  015F7E  0012               	return	
 10792  015F80                     l294:
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;io.c: 43: LATB6 = value;
 10796  015F80  0100               	movlb	0	; () banked
 10797  015F82  A160               	btfss	LED_output@value& (0+255),0,b
 10798  015F84  D002               	goto	u11920
 10799  015F86  8C8A               	bsf	3978,6,c	;volatile
 10800  015F88  0012               	return	
 10801  015F8A                     u11920:
 10802  015F8A  9C8A               	bcf	3978,6,c	;volatile
 10803                           
 10804                           ;io.c: 44: break;
 10805  015F8C  0012               	return	
 10806  015F8E                     l295:
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;io.c: 46: LATC2 = value;
 10810  015F8E  0100               	movlb	0	; () banked
 10811  015F90  A160               	btfss	LED_output@value& (0+255),0,b
 10812  015F92  D002               	goto	u11940
 10813  015F94  848B               	bsf	3979,2,c	;volatile
 10814  015F96  0012               	return	
 10815  015F98                     u11940:
 10816  015F98  948B               	bcf	3979,2,c	;volatile
 10817                           
 10818                           ;io.c: 48: }
 10819                           
 10820                           ;io.c: 47: break;
 10821  015F9A  0012               	return	
 10822  015F9C                     l10563:
 10823  015F9C  0100               	movlb	0	; () banked
 10824  015F9E  5161               	movf	LED_output@b& (0+255),w,b
 10825                           
 10826                           ; Switch size 1, requested type "space"
 10827                           ; Number of cases is 3, Range of values is 0 to 2
 10828                           ; switch strategies available:
 10829                           ; Name         Instructions Cycles
 10830                           ; simple_byte           10     6 (average)
 10831                           ;	Chosen strategy is simple_byte
 10832  015FA0  0A00               	xorlw	0	; case 0
 10833  015FA2  B4D8               	btfsc	status,2,c
 10834  015FA4  D7E6               	goto	l292
 10835  015FA6  0A01               	xorlw	1	; case 1
 10836  015FA8  B4D8               	btfsc	status,2,c
 10837  015FAA  D7EA               	goto	l294
 10838  015FAC  0A03               	xorlw	3	; case 2
 10839  015FAE  A4D8               	btfss	status,2,c
 10840  015FB0  0012               	return	
 10841  015FB2  D7ED               	goto	l295
 10842  015FB4                     __end_of_LED_output:
 10843                           	opt stack 0
 10844                           tblptru	equ	0xFF8
 10845                           tblptrh	equ	0xFF7
 10846                           tblptrl	equ	0xFF6
 10847                           tablat	equ	0xFF5
 10848                           prodh	equ	0xFF4
 10849                           prodl	equ	0xFF3
 10850                           intcon	equ	0xFF2
 10851                           postinc0	equ	0xFEE
 10852                           wreg	equ	0xFE8
 10853                           indf1	equ	0xFE7
 10854                           postinc1	equ	0xFE6
 10855                           postdec1	equ	0xFE5
 10856                           fsr1h	equ	0xFE2
 10857                           fsr1l	equ	0xFE1
 10858                           indf2	equ	0xFDF
 10859                           postinc2	equ	0xFDE
 10860                           postdec2	equ	0xFDD
 10861                           fsr2h	equ	0xFDA
 10862                           fsr2l	equ	0xFD9
 10863                           status	equ	0xFD8
 10864                           
 10865 ;; *************** function _integrate_time *****************
 10866 ;; Defined at:
 10867 ;;		line 76 in file "ChargeStation_task.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;		None
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;  i               1    2[BANK0 ] unsigned char 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;		None               void
 10874 ;; Registers used:
 10875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10885 ;;Total ram usage:        3 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:   11
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_normal_task
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text29
 10896  01629E                     __ptext29:
 10897                           	opt stack 0
 10898  01629E                     _integrate_time:
 10899                           	opt stack 18
 10900                           
 10901                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 10902                           
 10903                           ;incstack = 0
 10904  01629E  0E00               	movlw	0
 10905  0162A0  0100               	movlb	0	; () banked
 10906  0162A2  6F62               	movwf	integrate_time@i& (0+255),b
 10907  0162A4                     l11589:
 10908                           
 10909                           ; BSR set to: 0
 10910  0162A4  0E02               	movlw	2
 10911  0162A6  0100               	movlb	0	; () banked
 10912  0162A8  6562               	cpfsgt	integrate_time@i& (0+255),b
 10913  0162AA  D001               	goto	l11593
 10914  0162AC  0012               	return	
 10915  0162AE                     l11593:
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 10919  0162AE  0100               	movlb	0	; () banked
 10920  0162B0  5162               	movf	integrate_time@i& (0+255),w,b
 10921  0162B2  0D17               	mullw	23
 10922  0162B4  0E06               	movlw	6
 10923  0162B6  26F3               	addwf	prodl,f,c
 10924  0162B8  0E00               	movlw	0
 10925  0162BA  22F4               	addwfc	prodh,f,c
 10926  0162BC  0E2D               	movlw	low _port
 10927  0162BE  24F3               	addwf	prodl,w,c
 10928  0162C0  6ED9               	movwf	fsr2l,c
 10929  0162C2  0E01               	movlw	high _port
 10930  0162C4  20F4               	addwfc	prodh,w,c
 10931  0162C6  6EDA               	movwf	fsr2h,c
 10932  0162C8  0E01               	movlw	1
 10933  0162CA  50DB               	movf	plusw2,w,c
 10934  0162CC  E104               	bnz	u13620
 10935  0162CE  0E65               	movlw	101
 10936  0162D0  5CDE               	subwf	postinc2,w,c
 10937  0162D2  A0D8               	btfss	status,0,c
 10938  0162D4  D012               	goto	l11597
 10939  0162D6                     u13620:
 10940                           
 10941                           ; BSR set to: 0
 10942  0162D6  0100               	movlb	0	; () banked
 10943  0162D8  5162               	movf	integrate_time@i& (0+255),w,b
 10944  0162DA  0D17               	mullw	23
 10945  0162DC  0E10               	movlw	16
 10946  0162DE  26F3               	addwf	prodl,f,c
 10947  0162E0  0E00               	movlw	0
 10948  0162E2  22F4               	addwfc	prodh,f,c
 10949  0162E4  0E2D               	movlw	low _port
 10950  0162E6  24F3               	addwf	prodl,w,c
 10951  0162E8  6ED9               	movwf	fsr2l,c
 10952  0162EA  0E01               	movlw	high _port
 10953  0162EC  20F4               	addwfc	prodh,w,c
 10954  0162EE  6EDA               	movwf	fsr2h,c
 10955  0162F0  2ADE               	incf	postinc2,f,c
 10956  0162F2  0E00               	movlw	0
 10957  0162F4  22DE               	addwfc	postinc2,f,c
 10958  0162F6  22DE               	addwfc	postinc2,f,c
 10959  0162F8  22DE               	addwfc	postinc2,f,c
 10960  0162FA                     l11597:
 10961                           
 10962                           ; BSR set to: 0
 10963  0162FA  0100               	movlb	0	; () banked
 10964  0162FC  2B62               	incf	integrate_time@i& (0+255),f,b
 10965  0162FE  D7D2               	goto	l11589
 10966  016300                     __end_of_integrate_time:
 10967                           	opt stack 0
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           intcon	equ	0xFF2
 10975                           postinc0	equ	0xFEE
 10976                           wreg	equ	0xFE8
 10977                           indf1	equ	0xFE7
 10978                           postinc1	equ	0xFE6
 10979                           postdec1	equ	0xFE5
 10980                           fsr1h	equ	0xFE2
 10981                           fsr1l	equ	0xFE1
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           postdec2	equ	0xFDD
 10985                           plusw2	equ	0xFDB
 10986                           fsr2h	equ	0xFDA
 10987                           fsr2l	equ	0xFD9
 10988                           status	equ	0xFD8
 10989                           
 10990 ;; *************** function _integrate_current *****************
 10991 ;; Defined at:
 10992 ;;		line 67 in file "ChargeStation_task.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;		None
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  i               1   15[BANK0 ] unsigned char 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;		None               void
 10999 ;; Registers used:
 11000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11010 ;;Total ram usage:        3 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:   12
 11013 ;; This function calls:
 11014 ;;		___lldiv
 11015 ;; This function is called by:
 11016 ;;		_normal_task
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text30
 11021  013E80                     __ptext30:
 11022                           	opt stack 0
 11023  013E80                     _integrate_current:
 11024                           	opt stack 17
 11025                           
 11026                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;incstack = 0
 11030  013E80  0E00               	movlw	0
 11031  013E82  0100               	movlb	0	; () banked
 11032  013E84  6F6F               	movwf	integrate_current@i& (0+255),b
 11033  013E86                     l11573:
 11034                           
 11035                           ; BSR set to: 0
 11036  013E86  0E02               	movlw	2
 11037  013E88  0100               	movlb	0	; () banked
 11038  013E8A  656F               	cpfsgt	integrate_current@i& (0+255),b
 11039  013E8C  D001               	goto	l11577
 11040  013E8E  0012               	return	
 11041  013E90                     l11577:
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11045  013E90  0100               	movlb	0	; () banked
 11046  013E92  516F               	movf	integrate_current@i& (0+255),w,b
 11047  013E94  0D17               	mullw	23
 11048  013E96  0E06               	movlw	6
 11049  013E98  26F3               	addwf	prodl,f,c
 11050  013E9A  0E00               	movlw	0
 11051  013E9C  22F4               	addwfc	prodh,f,c
 11052  013E9E  0E2D               	movlw	low _port
 11053  013EA0  24F3               	addwf	prodl,w,c
 11054  013EA2  6ED9               	movwf	fsr2l,c
 11055  013EA4  0E01               	movlw	high _port
 11056  013EA6  20F4               	addwfc	prodh,w,c
 11057  013EA8  6EDA               	movwf	fsr2h,c
 11058  013EAA  0E01               	movlw	1
 11059  013EAC  50DB               	movf	plusw2,w,c
 11060  013EAE  E104               	bnz	u13590
 11061  013EB0  0E65               	movlw	101
 11062  013EB2  5CDE               	subwf	postinc2,w,c
 11063  013EB4  A0D8               	btfss	status,0,c
 11064  013EB6  D05F               	goto	l11583
 11065  013EB8                     u13590:
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11069  013EB8  0100               	movlb	0	; () banked
 11070  013EBA  516F               	movf	integrate_current@i& (0+255),w,b
 11071  013EBC  0D17               	mullw	23
 11072  013EBE  0E06               	movlw	6
 11073  013EC0  26F3               	addwf	prodl,f,c
 11074  013EC2  0E00               	movlw	0
 11075  013EC4  22F4               	addwfc	prodh,f,c
 11076  013EC6  0E2D               	movlw	low _port
 11077  013EC8  24F3               	addwf	prodl,w,c
 11078  013ECA  6ED9               	movwf	fsr2l,c
 11079  013ECC  0E01               	movlw	high _port
 11080  013ECE  20F4               	addwfc	prodh,w,c
 11081  013ED0  6EDA               	movwf	fsr2h,c
 11082  013ED2  CFDE F06D          	movff	postinc2,??_integrate_current
 11083  013ED6  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11084  013EDA  0100               	movlb	0	; () banked
 11085  013EDC  516F               	movf	integrate_current@i& (0+255),w,b
 11086  013EDE  0D17               	mullw	23
 11087  013EE0  0E08               	movlw	8
 11088  013EE2  26F3               	addwf	prodl,f,c
 11089  013EE4  0E00               	movlw	0
 11090  013EE6  22F4               	addwfc	prodh,f,c
 11091  013EE8  0E2D               	movlw	low _port
 11092  013EEA  24F3               	addwf	prodl,w,c
 11093  013EEC  6ED9               	movwf	fsr2l,c
 11094  013EEE  0E01               	movlw	high _port
 11095  013EF0  20F4               	addwfc	prodh,w,c
 11096  013EF2  6EDA               	movwf	fsr2h,c
 11097  013EF4  0100               	movlb	0	; () banked
 11098  013EF6  516D               	movf	??_integrate_current& (0+255),w,b
 11099  013EF8  26DE               	addwf	postinc2,f,c
 11100  013EFA  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11101  013EFC  22DE               	addwfc	postinc2,f,c
 11102  013EFE  0E00               	movlw	0
 11103  013F00  22DE               	addwfc	postinc2,f,c
 11104  013F02  22DE               	addwfc	postinc2,f,c
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11108  013F04  0100               	movlb	0	; () banked
 11109  013F06  516F               	movf	integrate_current@i& (0+255),w,b
 11110  013F08  0D17               	mullw	23
 11111  013F0A  0E08               	movlw	8
 11112  013F0C  26F3               	addwf	prodl,f,c
 11113  013F0E  0E00               	movlw	0
 11114  013F10  22F4               	addwfc	prodh,f,c
 11115  013F12  0E2D               	movlw	low _port
 11116  013F14  24F3               	addwf	prodl,w,c
 11117  013F16  6ED9               	movwf	fsr2l,c
 11118  013F18  0E01               	movlw	high _port
 11119  013F1A  20F4               	addwfc	prodh,w,c
 11120  013F1C  6EDA               	movwf	fsr2h,c
 11121  013F1E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11122  013F22  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11123  013F26  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11124  013F2A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11125  013F2E  0E10               	movlw	16
 11126  013F30  0100               	movlb	0	; () banked
 11127  013F32  6F64               	movwf	___lldiv@divisor& (0+255),b
 11128  013F34  0E0E               	movlw	14
 11129  013F36  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11130  013F38  0E00               	movlw	0
 11131  013F3A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11132  013F3C  0E00               	movlw	0
 11133  013F3E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11134  013F40  EC6C  F0A9         	call	___lldiv	;wreg free
 11135  013F44  0100               	movlb	0	; () banked
 11136  013F46  516F               	movf	integrate_current@i& (0+255),w,b
 11137  013F48  0D17               	mullw	23
 11138  013F4A  0E0C               	movlw	12
 11139  013F4C  26F3               	addwf	prodl,f,c
 11140  013F4E  0E00               	movlw	0
 11141  013F50  22F4               	addwfc	prodh,f,c
 11142  013F52  0E2D               	movlw	low _port
 11143  013F54  24F3               	addwf	prodl,w,c
 11144  013F56  6ED9               	movwf	fsr2l,c
 11145  013F58  0E01               	movlw	high _port
 11146  013F5A  20F4               	addwfc	prodh,w,c
 11147  013F5C  6EDA               	movwf	fsr2h,c
 11148  013F5E  0100               	movlb	0	; () banked
 11149  013F60  C060  FFDE         	movff	?___lldiv,postinc2
 11150  013F64  0100               	movlb	0	; () banked
 11151  013F66  C061  FFDE         	movff	?___lldiv+1,postinc2
 11152  013F6A  0100               	movlb	0	; () banked
 11153  013F6C  C062  FFDE         	movff	?___lldiv+2,postinc2
 11154  013F70  0100               	movlb	0	; () banked
 11155  013F72  C063  FFDE         	movff	?___lldiv+3,postinc2
 11156  013F76                     l11583:
 11157                           
 11158                           ; BSR set to: 0
 11159  013F76  0100               	movlb	0	; () banked
 11160  013F78  2B6F               	incf	integrate_current@i& (0+255),f,b
 11161  013F7A  D785               	goto	l11573
 11162  013F7C                     __end_of_integrate_current:
 11163                           	opt stack 0
 11164                           tblptru	equ	0xFF8
 11165                           tblptrh	equ	0xFF7
 11166                           tblptrl	equ	0xFF6
 11167                           tablat	equ	0xFF5
 11168                           prodh	equ	0xFF4
 11169                           prodl	equ	0xFF3
 11170                           intcon	equ	0xFF2
 11171                           postinc0	equ	0xFEE
 11172                           wreg	equ	0xFE8
 11173                           indf1	equ	0xFE7
 11174                           postinc1	equ	0xFE6
 11175                           postdec1	equ	0xFE5
 11176                           fsr1h	equ	0xFE2
 11177                           fsr1l	equ	0xFE1
 11178                           indf2	equ	0xFDF
 11179                           postinc2	equ	0xFDE
 11180                           postdec2	equ	0xFDD
 11181                           plusw2	equ	0xFDB
 11182                           fsr2h	equ	0xFDA
 11183                           fsr2l	equ	0xFD9
 11184                           status	equ	0xFD8
 11185                           
 11186 ;; *************** function _display_LCD *****************
 11187 ;; Defined at:
 11188 ;;		line 33 in file "LCD_print.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  str            20   40[BANK1 ] unsigned char [20]
 11193 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11194 ;; Return value:  Size  Location     Type
 11195 ;;		None               void
 11196 ;; Registers used:
 11197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11204 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11205 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11206 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11207 ;;Total ram usage:       85 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; Hardware stack levels required when called:   16
 11210 ;; This function calls:
 11211 ;;		_I2C_LCD_Clear
 11212 ;;		_I2C_LCD_Puts
 11213 ;;		_I2C_LCD_SetCursor
 11214 ;;		___lldiv
 11215 ;;		___llmod
 11216 ;;		___lwdiv
 11217 ;;		___lwmod
 11218 ;;		_display_time_1602
 11219 ;;		_sprintf
 11220 ;; This function is called by:
 11221 ;;		_normal_task
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text31
 11226  01051C                     __ptext31:
 11227                           	opt stack 0
 11228  01051C                     _display_LCD:
 11229                           	opt stack 13
 11230                           
 11231                           ;LCD_print.c: 34: I2C_LCD_Clear();
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;incstack = 0
 11235  01051C  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
 11236                           
 11237                           ;LCD_print.c: 35: switch (print_item) {
 11238  010520  D251               	goto	l11783
 11239  010522                     l11735:
 11240                           
 11241                           ;LCD_print.c: 37: case SETTINGS:
 11242                           ;LCD_print.c: 38: I2C_LCD_SetCursor(0, 0);
 11243  010522  0E00               	movlw	0
 11244  010524  0100               	movlb	0	; () banked
 11245  010526  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11246  010528  0E00               	movlw	0
 11247  01052A  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 11248                           
 11249                           ;LCD_print.c: 39: I2C_LCD_Puts(display_char[0]);
 11250  01052E  0E0E               	movlw	low _display_char
 11251  010530  0100               	movlb	0	; () banked
 11252  010532  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11253  010534  0E02               	movlw	high _display_char
 11254  010536  0100               	movlb	0	; () banked
 11255  010538  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11256  01053A  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11257                           
 11258                           ;LCD_print.c: 40: I2C_LCD_SetCursor(0, 1);
 11259  01053E  0E01               	movlw	1
 11260  010540  0100               	movlb	0	; () banked
 11261  010542  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11262  010544  0E00               	movlw	0
 11263  010546  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 11264                           
 11265                           ;LCD_print.c: 41: I2C_LCD_Puts(display_char[1]);
 11266  01054A  0E22               	movlw	low (_display_char+20)
 11267  01054C  0100               	movlb	0	; () banked
 11268  01054E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11269  010550  0E02               	movlw	high (_display_char+20)
 11270  010552  0100               	movlb	0	; () banked
 11271  010554  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11272  010556  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11273                           
 11274                           ;LCD_print.c: 42: break;
 11275  01055A  0012               	return	
 11276  01055C                     l11741:
 11277                           
 11278                           ;LCD_print.c: 44: {
 11279                           ;LCD_print.c: 45: char str[2][20];
 11280                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11281  01055C  0E72               	movlw	low _now
 11282  01055E  0100               	movlb	0	; () banked
 11283  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11284  010562  0E01               	movlw	high _now
 11285  010564  0100               	movlb	0	; () banked
 11286  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11287  010568  0E91               	movlw	low display_LCD@str
 11288  01056A  0100               	movlb	0	; () banked
 11289  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11290  01056E  0E01               	movlw	high display_LCD@str
 11291  010570  0100               	movlb	0	; () banked
 11292  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11293  010574  0EA5               	movlw	low (display_LCD@str+20)
 11294  010576  0100               	movlb	0	; () banked
 11295  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11296  01057A  0E01               	movlw	high (display_LCD@str+20)
 11297  01057C  0100               	movlb	0	; () banked
 11298  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11299  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 11300                           
 11301                           ;LCD_print.c: 47: I2C_LCD_SetCursor(0, 0);
 11302  010584  0E00               	movlw	0
 11303  010586  0100               	movlb	0	; () banked
 11304  010588  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11305  01058A  0E00               	movlw	0
 11306  01058C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 11307                           
 11308                           ;LCD_print.c: 48: I2C_LCD_Puts(str[0]);
 11309  010590  0E91               	movlw	low display_LCD@str
 11310  010592  0100               	movlb	0	; () banked
 11311  010594  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11312  010596  0E01               	movlw	high display_LCD@str
 11313  010598  0100               	movlb	0	; () banked
 11314  01059A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11315  01059C  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11316                           
 11317                           ;LCD_print.c: 49: I2C_LCD_SetCursor(0, 1);
 11318  0105A0  0E01               	movlw	1
 11319  0105A2  0100               	movlb	0	; () banked
 11320  0105A4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11321  0105A6  0E00               	movlw	0
 11322  0105A8  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 11323                           
 11324                           ;LCD_print.c: 50: I2C_LCD_Puts(str[1]);
 11325  0105AC  0EA5               	movlw	low (display_LCD@str+20)
 11326  0105AE  0100               	movlb	0	; () banked
 11327  0105B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11328  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11329  0105B4  0100               	movlb	0	; () banked
 11330  0105B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11331  0105B8  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11332                           
 11333                           ;LCD_print.c: 51: }
 11334                           ;LCD_print.c: 52: break;
 11335  0105BC  0012               	return	
 11336  0105BE                     l11751:
 11337                           
 11338                           ;LCD_print.c: 54: {
 11339                           ;LCD_print.c: 55: char str[20];
 11340                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11341                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11342                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11343                           ;LCD_print.c: 59: };
 11344                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11345                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11346                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11347  0105BE  0EB9               	movlw	low display_LCD@str_575
 11348  0105C0  0100               	movlb	0	; () banked
 11349  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11350  0105C4  0E01               	movlw	high display_LCD@str_575
 11351  0105C6  0100               	movlb	0	; () banked
 11352  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11353  0105CA  0EBD               	movlw	low STR_30
 11354  0105CC  0100               	movlb	0	; () banked
 11355  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11356  0105D0  0EFF               	movlw	high STR_30
 11357  0105D2  0100               	movlb	0	; () banked
 11358  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11359  0105D6  0100               	movlb	0	; () banked
 11360  0105D8  51FE               	movf	_print_port& (0+255),w,b
 11361  0105DA  0D17               	mullw	23
 11362  0105DC  0E16               	movlw	22
 11363  0105DE  26F3               	addwf	prodl,f,c
 11364  0105E0  0E00               	movlw	0
 11365  0105E2  22F4               	addwfc	prodh,f,c
 11366  0105E4  0E2D               	movlw	low _port
 11367  0105E6  24F3               	addwf	prodl,w,c
 11368  0105E8  6ED9               	movwf	fsr2l,c
 11369  0105EA  0E01               	movlw	high _port
 11370  0105EC  20F4               	addwfc	prodh,w,c
 11371  0105EE  6EDA               	movwf	fsr2h,c
 11372  0105F0  0101               	movlb	1	; () banked
 11373  0105F2  A0DF               	btfss	indf2,0,c
 11374  0105F4  D004               	goto	u13820
 11375  0105F6  0100               	movlb	0	; () banked
 11376  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11377  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11378  0105FC  D002               	goto	u13828
 11379  0105FE                     u13820:
 11380  0105FE  0100               	movlb	0	; () banked
 11381  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11382  010602                     u13828:
 11383  010602  0100               	movlb	0	; () banked
 11384  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11385  010606  0D3C               	mullw	60
 11386  010608  0E81               	movlw	low display_LCD@port_char
 11387  01060A  0100               	movlb	0	; () banked
 11388  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11389  01060E  0EFA               	movlw	high display_LCD@port_char
 11390  010610  0100               	movlb	0	; () banked
 11391  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11392  010614  50F3               	movf	prodl,w,c
 11393  010616  0100               	movlb	0	; () banked
 11394  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11395  01061A  50F4               	movf	prodh,w,c
 11396  01061C  0100               	movlb	0	; () banked
 11397  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11398  010620  0100               	movlb	0	; () banked
 11399  010622  51FE               	movf	_print_port& (0+255),w,b
 11400  010624  0D14               	mullw	20
 11401  010626  50F3               	movf	prodl,w,c
 11402  010628  0100               	movlb	0	; () banked
 11403  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11404  01062C  0100               	movlb	0	; () banked
 11405  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11406  010630  50F4               	movf	prodh,w,c
 11407  010632  0100               	movlb	0	; () banked
 11408  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11409  010636  0100               	movlb	0	; () banked
 11410  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11411  01063A  0100               	movlb	0	; () banked
 11412  01063C  51FE               	movf	_print_port& (0+255),w,b
 11413  01063E  0D17               	mullw	23
 11414  010640  0E06               	movlw	6
 11415  010642  26F3               	addwf	prodl,f,c
 11416  010644  0E00               	movlw	0
 11417  010646  22F4               	addwfc	prodh,f,c
 11418  010648  0E2D               	movlw	low _port
 11419  01064A  24F3               	addwf	prodl,w,c
 11420  01064C  6ED9               	movwf	fsr2l,c
 11421  01064E  0E01               	movlw	high _port
 11422  010650  20F4               	addwfc	prodh,w,c
 11423  010652  6EDA               	movwf	fsr2h,c
 11424  010654  0E01               	movlw	1
 11425  010656  50DB               	movf	plusw2,w,c
 11426  010658  E104               	bnz	u13831
 11427  01065A  0E65               	movlw	101
 11428  01065C  5CDE               	subwf	postinc2,w,c
 11429  01065E  A0D8               	btfss	status,0,c
 11430  010660  D002               	goto	u13830
 11431  010662                     u13831:
 11432  010662  0E01               	movlw	1
 11433  010664  D001               	goto	u13840
 11434  010666                     u13830:
 11435  010666  0E00               	movlw	0
 11436  010668                     u13840:
 11437  010668  0D05               	mullw	5
 11438  01066A  0ED2               	movlw	low display_LCD@onoff
 11439  01066C  24F3               	addwf	prodl,w,c
 11440  01066E  0100               	movlb	0	; () banked
 11441  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11442  010672  0EFB               	movlw	high display_LCD@onoff
 11443  010674  20F4               	addwfc	prodh,w,c
 11444  010676  0100               	movlb	0	; () banked
 11445  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11446  01067A  EC00  F080         	call	_sprintf	;wreg free
 11447                           
 11448                           ;LCD_print.c: 63: I2C_LCD_SetCursor(0, 0);
 11449  01067E  0E00               	movlw	0
 11450  010680  0100               	movlb	0	; () banked
 11451  010682  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11452  010684  0E00               	movlw	0
 11453  010686  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 11454                           
 11455                           ;LCD_print.c: 64: I2C_LCD_Puts(str);
 11456  01068A  0EB9               	movlw	low display_LCD@str_575
 11457  01068C  0100               	movlb	0	; () banked
 11458  01068E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11459  010690  0E01               	movlw	high display_LCD@str_575
 11460  010692  0100               	movlb	0	; () banked
 11461  010694  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11462  010696  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11463                           
 11464                           ;LCD_print.c: 65: switch (data_item) {
 11465  01069A  D17B               	goto	l11775
 11466  01069C                     l11757:
 11467                           
 11468                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11469  01069C  0EB9               	movlw	low display_LCD@str_575
 11470  01069E  0100               	movlb	0	; () banked
 11471  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11472  0106A2  0E01               	movlw	high display_LCD@str_575
 11473  0106A4  0100               	movlb	0	; () banked
 11474  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11475  0106A8  0E48               	movlw	low STR_31
 11476  0106AA  0100               	movlb	0	; () banked
 11477  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11478  0106AE  0EFF               	movlw	high STR_31
 11479  0106B0  0100               	movlb	0	; () banked
 11480  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11481  0106B4  0100               	movlb	0	; () banked
 11482  0106B6  51FE               	movf	_print_port& (0+255),w,b
 11483  0106B8  0D17               	mullw	23
 11484  0106BA  0E06               	movlw	6
 11485  0106BC  26F3               	addwf	prodl,f,c
 11486  0106BE  0E00               	movlw	0
 11487  0106C0  22F4               	addwfc	prodh,f,c
 11488  0106C2  0E2D               	movlw	low _port
 11489  0106C4  24F3               	addwf	prodl,w,c
 11490  0106C6  6ED9               	movwf	fsr2l,c
 11491  0106C8  0E01               	movlw	high _port
 11492  0106CA  20F4               	addwfc	prodh,w,c
 11493  0106CC  6EDA               	movwf	fsr2h,c
 11494  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11495  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11496  0106D6  0E03               	movlw	3
 11497  0106D8  0100               	movlb	0	; () banked
 11498  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11499  0106DC  0EE8               	movlw	232
 11500  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11501  0106E0  EC2A  F0AF         	call	___lwdiv	;wreg free
 11502  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11503  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11504  0106EC  0100               	movlb	0	; () banked
 11505  0106EE  51FE               	movf	_print_port& (0+255),w,b
 11506  0106F0  0D17               	mullw	23
 11507  0106F2  0E06               	movlw	6
 11508  0106F4  26F3               	addwf	prodl,f,c
 11509  0106F6  0E00               	movlw	0
 11510  0106F8  22F4               	addwfc	prodh,f,c
 11511  0106FA  0E2D               	movlw	low _port
 11512  0106FC  24F3               	addwf	prodl,w,c
 11513  0106FE  6ED9               	movwf	fsr2l,c
 11514  010700  0E01               	movlw	high _port
 11515  010702  20F4               	addwfc	prodh,w,c
 11516  010704  6EDA               	movwf	fsr2h,c
 11517  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11518  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11519  01070E  0E03               	movlw	3
 11520  010710  0100               	movlb	0	; () banked
 11521  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11522  010714  0EE8               	movlw	232
 11523  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11524  010718  EC80  F0B1         	call	___lwmod	;wreg free
 11525  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11526  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11527  010724  EC00  F080         	call	_sprintf	;wreg free
 11528                           
 11529                           ;LCD_print.c: 68: break;
 11530  010728  D13E               	goto	l11777
 11531  01072A                     l11759:
 11532                           
 11533                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11534  01072A  0EB9               	movlw	low display_LCD@str_575
 11535  01072C  0100               	movlb	0	; () banked
 11536  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11537  010730  0E01               	movlw	high display_LCD@str_575
 11538  010732  0100               	movlb	0	; () banked
 11539  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11540  010736  0E44               	movlw	low (STR_28+15)
 11541  010738  0100               	movlb	0	; () banked
 11542  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11543  01073C  0EFE               	movlw	high (STR_28+15)
 11544  01073E  0100               	movlb	0	; () banked
 11545  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11546  010742  0100               	movlb	0	; () banked
 11547  010744  51FE               	movf	_print_port& (0+255),w,b
 11548  010746  0D17               	mullw	23
 11549  010748  0E0C               	movlw	12
 11550  01074A  26F3               	addwf	prodl,f,c
 11551  01074C  0E00               	movlw	0
 11552  01074E  22F4               	addwfc	prodh,f,c
 11553  010750  0E2D               	movlw	low _port
 11554  010752  24F3               	addwf	prodl,w,c
 11555  010754  6ED9               	movwf	fsr2l,c
 11556  010756  0E01               	movlw	high _port
 11557  010758  20F4               	addwfc	prodh,w,c
 11558  01075A  6EDA               	movwf	fsr2h,c
 11559  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11560  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11561  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11562  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11563  01076C  EC00  F080         	call	_sprintf	;wreg free
 11564                           
 11565                           ;LCD_print.c: 71: break;
 11566  010770  D11A               	goto	l11777
 11567  010772                     l11761:
 11568                           
 11569                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11570                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11571                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11572                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11573                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11574  010772  0E10               	movlw	16
 11575  010774  0100               	movlb	0	; () banked
 11576  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11577  010778  0E0E               	movlw	14
 11578  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11579  01077C  0E00               	movlw	0
 11580  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11581  010780  0E00               	movlw	0
 11582  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11583  010784  0100               	movlb	0	; () banked
 11584  010786  51FE               	movf	_print_port& (0+255),w,b
 11585  010788  0D17               	mullw	23
 11586  01078A  0E10               	movlw	16
 11587  01078C  26F3               	addwf	prodl,f,c
 11588  01078E  0E00               	movlw	0
 11589  010790  22F4               	addwfc	prodh,f,c
 11590  010792  0E2D               	movlw	low _port
 11591  010794  24F3               	addwf	prodl,w,c
 11592  010796  6ED9               	movwf	fsr2l,c
 11593  010798  0E01               	movlw	high _port
 11594  01079A  20F4               	addwfc	prodh,w,c
 11595  01079C  6EDA               	movwf	fsr2h,c
 11596  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11597  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11598  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11599  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11600  0107AE  EC6C  F0A9         	call	___lldiv	;wreg free
 11601  0107B2  C060  F1CD         	movff	?___lldiv,_display_LCD$6790
 11602  0107B6  C061  F1CE         	movff	?___lldiv+1,_display_LCD$6790+1
 11603  0107BA  C062  F1CF         	movff	?___lldiv+2,_display_LCD$6790+2
 11604  0107BE  C063  F1D0         	movff	?___lldiv+3,_display_LCD$6790+3
 11605                           
 11606                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11607                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11608                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11609                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11610                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11611  0107C2  C1CD  F060         	movff	_display_LCD$6790,___lldiv@dividend
 11612  0107C6  C1CE  F061         	movff	_display_LCD$6790+1,___lldiv@dividend+1
 11613  0107CA  C1CF  F062         	movff	_display_LCD$6790+2,___lldiv@dividend+2
 11614  0107CE  C1D0  F063         	movff	_display_LCD$6790+3,___lldiv@dividend+3
 11615  0107D2  0E18               	movlw	24
 11616  0107D4  0100               	movlb	0	; () banked
 11617  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11618  0107D8  0E00               	movlw	0
 11619  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11620  0107DC  0E00               	movlw	0
 11621  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11622  0107E0  0E00               	movlw	0
 11623  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11624  0107E4  EC6C  F0A9         	call	___lldiv	;wreg free
 11625  0107E8  C060  F1D1         	movff	?___lldiv,_display_LCD$6791
 11626  0107EC  C061  F1D2         	movff	?___lldiv+1,_display_LCD$6791+1
 11627  0107F0  C062  F1D3         	movff	?___lldiv+2,_display_LCD$6791+2
 11628  0107F4  C063  F1D4         	movff	?___lldiv+3,_display_LCD$6791+3
 11629                           
 11630                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11631                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11632                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11633                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11634                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11635  0107F8  0E10               	movlw	16
 11636  0107FA  0100               	movlb	0	; () banked
 11637  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11638  0107FE  0E0E               	movlw	14
 11639  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11640  010802  0E00               	movlw	0
 11641  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11642  010806  0E00               	movlw	0
 11643  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11644  01080A  0100               	movlb	0	; () banked
 11645  01080C  51FE               	movf	_print_port& (0+255),w,b
 11646  01080E  0D17               	mullw	23
 11647  010810  0E10               	movlw	16
 11648  010812  26F3               	addwf	prodl,f,c
 11649  010814  0E00               	movlw	0
 11650  010816  22F4               	addwfc	prodh,f,c
 11651  010818  0E2D               	movlw	low _port
 11652  01081A  24F3               	addwf	prodl,w,c
 11653  01081C  6ED9               	movwf	fsr2l,c
 11654  01081E  0E01               	movlw	high _port
 11655  010820  20F4               	addwfc	prodh,w,c
 11656  010822  6EDA               	movwf	fsr2h,c
 11657  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11658  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11659  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11660  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11661  010834  EC6C  F0A9         	call	___lldiv	;wreg free
 11662  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11663  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11664  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11665  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11666  010848  0E18               	movlw	24
 11667  01084A  0100               	movlb	0	; () banked
 11668  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11669  01084E  0E00               	movlw	0
 11670  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11671  010852  0E00               	movlw	0
 11672  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11673  010856  0E00               	movlw	0
 11674  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11675  01085A  EC2C  F0AC         	call	___llmod	;wreg free
 11676  01085E  C06D  F1D5         	movff	?___llmod,_display_LCD$6792
 11677  010862  C06E  F1D6         	movff	?___llmod+1,_display_LCD$6792+1
 11678  010866  C06F  F1D7         	movff	?___llmod+2,_display_LCD$6792+2
 11679  01086A  C070  F1D8         	movff	?___llmod+3,_display_LCD$6792+3
 11680                           
 11681                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11682                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11683                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11684                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11685                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11686  01086E  0E3C               	movlw	60
 11687  010870  0100               	movlb	0	; () banked
 11688  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11689  010874  0E00               	movlw	0
 11690  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11691  010878  0E00               	movlw	0
 11692  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11693  01087C  0E00               	movlw	0
 11694  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11695  010880  0100               	movlb	0	; () banked
 11696  010882  51FE               	movf	_print_port& (0+255),w,b
 11697  010884  0D17               	mullw	23
 11698  010886  0E10               	movlw	16
 11699  010888  26F3               	addwf	prodl,f,c
 11700  01088A  0E00               	movlw	0
 11701  01088C  22F4               	addwfc	prodh,f,c
 11702  01088E  0E2D               	movlw	low _port
 11703  010890  24F3               	addwf	prodl,w,c
 11704  010892  6ED9               	movwf	fsr2l,c
 11705  010894  0E01               	movlw	high _port
 11706  010896  20F4               	addwfc	prodh,w,c
 11707  010898  6EDA               	movwf	fsr2h,c
 11708  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11709  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11710  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11711  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11712  0108AA  EC6C  F0A9         	call	___lldiv	;wreg free
 11713  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11714  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11715  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11716  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11717  0108BE  0E3C               	movlw	60
 11718  0108C0  0100               	movlb	0	; () banked
 11719  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11720  0108C4  0E00               	movlw	0
 11721  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11722  0108C8  0E00               	movlw	0
 11723  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11724  0108CC  0E00               	movlw	0
 11725  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11726  0108D0  EC2C  F0AC         	call	___llmod	;wreg free
 11727  0108D4  C06D  F1D9         	movff	?___llmod,_display_LCD$6793
 11728  0108D8  C06E  F1DA         	movff	?___llmod+1,_display_LCD$6793+1
 11729  0108DC  C06F  F1DB         	movff	?___llmod+2,_display_LCD$6793+2
 11730  0108E0  C070  F1DC         	movff	?___llmod+3,_display_LCD$6793+3
 11731                           
 11732                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11733                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11734                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11735                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11736                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11737  0108E4  0100               	movlb	0	; () banked
 11738  0108E6  51FE               	movf	_print_port& (0+255),w,b
 11739  0108E8  0D17               	mullw	23
 11740  0108EA  0E10               	movlw	16
 11741  0108EC  26F3               	addwf	prodl,f,c
 11742  0108EE  0E00               	movlw	0
 11743  0108F0  22F4               	addwfc	prodh,f,c
 11744  0108F2  0E2D               	movlw	low _port
 11745  0108F4  24F3               	addwf	prodl,w,c
 11746  0108F6  6ED9               	movwf	fsr2l,c
 11747  0108F8  0E01               	movlw	high _port
 11748  0108FA  20F4               	addwfc	prodh,w,c
 11749  0108FC  6EDA               	movwf	fsr2h,c
 11750  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11751  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11752  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11753  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11754  01090E  0E3C               	movlw	60
 11755  010910  0100               	movlb	0	; () banked
 11756  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11757  010914  0E00               	movlw	0
 11758  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11759  010918  0E00               	movlw	0
 11760  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11761  01091C  0E00               	movlw	0
 11762  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11763  010920  EC2C  F0AC         	call	___llmod	;wreg free
 11764  010924  C06D  F1DD         	movff	?___llmod,_display_LCD$6794
 11765  010928  C06E  F1DE         	movff	?___llmod+1,_display_LCD$6794+1
 11766  01092C  C06F  F1DF         	movff	?___llmod+2,_display_LCD$6794+2
 11767  010930  C070  F1E0         	movff	?___llmod+3,_display_LCD$6794+3
 11768                           
 11769                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11770                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11771                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11772                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11773                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11774  010934  0EB9               	movlw	low display_LCD@str_575
 11775  010936  0100               	movlb	0	; () banked
 11776  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11777  01093A  0E01               	movlw	high display_LCD@str_575
 11778  01093C  0100               	movlb	0	; () banked
 11779  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11780  010940  0E01               	movlw	low STR_33
 11781  010942  0100               	movlb	0	; () banked
 11782  010944  6F85               	movwf	sprintf@f& (0+255),b
 11783  010946  0EFE               	movlw	high STR_33
 11784  010948  0100               	movlb	0	; () banked
 11785  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11786  01094C  C1D1  F087         	movff	_display_LCD$6791,?_sprintf+4
 11787  010950  C1D2  F088         	movff	_display_LCD$6791+1,?_sprintf+5
 11788  010954  C1D3  F089         	movff	_display_LCD$6791+2,?_sprintf+6
 11789  010958  C1D4  F08A         	movff	_display_LCD$6791+3,?_sprintf+7
 11790  01095C  C1D5  F08B         	movff	_display_LCD$6792,?_sprintf+8
 11791  010960  C1D6  F08C         	movff	_display_LCD$6792+1,?_sprintf+9
 11792  010964  C1D7  F08D         	movff	_display_LCD$6792+2,?_sprintf+10
 11793  010968  C1D8  F08E         	movff	_display_LCD$6792+3,?_sprintf+11
 11794  01096C  C1D9  F08F         	movff	_display_LCD$6793,?_sprintf+12
 11795  010970  C1DA  F090         	movff	_display_LCD$6793+1,?_sprintf+13
 11796  010974  C1DB  F091         	movff	_display_LCD$6793+2,?_sprintf+14
 11797  010978  C1DC  F092         	movff	_display_LCD$6793+3,?_sprintf+15
 11798  01097C  C1DD  F093         	movff	_display_LCD$6794,?_sprintf+16
 11799  010980  C1DE  F094         	movff	_display_LCD$6794+1,?_sprintf+17
 11800  010984  C1DF  F095         	movff	_display_LCD$6794+2,?_sprintf+18
 11801  010988  C1E0  F096         	movff	_display_LCD$6794+3,?_sprintf+19
 11802  01098C  EC00  F080         	call	_sprintf	;wreg free
 11803                           
 11804                           ;LCD_print.c: 79: }
 11805                           
 11806                           ;LCD_print.c: 78: break;
 11807  010990  D00A               	goto	l11777
 11808  010992                     l11775:
 11809  010992  501C               	movf	_data_item,w,c
 11810                           
 11811                           ; Switch size 1, requested type "space"
 11812                           ; Number of cases is 3, Range of values is 0 to 2
 11813                           ; switch strategies available:
 11814                           ; Name         Instructions Cycles
 11815                           ; simple_byte           10     6 (average)
 11816                           ;	Chosen strategy is simple_byte
 11817  010994  0A00               	xorlw	0	; case 0
 11818  010996  B4D8               	btfsc	status,2,c
 11819  010998  D681               	goto	l11757
 11820  01099A  0A01               	xorlw	1	; case 1
 11821  01099C  B4D8               	btfsc	status,2,c
 11822  01099E  D6C5               	goto	l11759
 11823  0109A0  0A03               	xorlw	3	; case 2
 11824  0109A2  B4D8               	btfsc	status,2,c
 11825  0109A4  D6E6               	goto	l11761
 11826  0109A6                     l11777:
 11827                           
 11828                           ;LCD_print.c: 80: I2C_LCD_SetCursor(0, 1);
 11829  0109A6  0E01               	movlw	1
 11830  0109A8  0100               	movlb	0	; () banked
 11831  0109AA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11832  0109AC  0E00               	movlw	0
 11833  0109AE  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 11834                           
 11835                           ;LCD_print.c: 81: I2C_LCD_Puts(str);
 11836  0109B2  0EB9               	movlw	low display_LCD@str_575
 11837  0109B4  0100               	movlb	0	; () banked
 11838  0109B6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11839  0109B8  0E01               	movlw	high display_LCD@str_575
 11840  0109BA  0100               	movlb	0	; () banked
 11841  0109BC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11842  0109BE  EC0A  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11843                           
 11844                           ;LCD_print.c: 84: }
 11845                           
 11846                           ;LCD_print.c: 82: }
 11847                           ;LCD_print.c: 83: break;
 11848  0109C2  0012               	return	
 11849  0109C4                     l11783:
 11850  0109C4  5020               	movf	_print_item,w,c
 11851                           
 11852                           ; Switch size 1, requested type "space"
 11853                           ; Number of cases is 4, Range of values is 0 to 3
 11854                           ; switch strategies available:
 11855                           ; Name         Instructions Cycles
 11856                           ; simple_byte           13     7 (average)
 11857                           ;	Chosen strategy is simple_byte
 11858  0109C6  0A00               	xorlw	0	; case 0
 11859  0109C8  B4D8               	btfsc	status,2,c
 11860  0109CA  D5AB               	goto	l11735
 11861  0109CC  0A01               	xorlw	1	; case 1
 11862  0109CE  B4D8               	btfsc	status,2,c
 11863  0109D0  D5C5               	goto	l11741
 11864  0109D2  0A03               	xorlw	3	; case 2
 11865  0109D4  B4D8               	btfsc	status,2,c
 11866  0109D6  D5F3               	goto	l11751
 11867  0109D8  0A01               	xorlw	1	; case 3
 11868  0109DA  A4D8               	btfss	status,2,c
 11869  0109DC  0012               	return	
 11870  0109DE  D5A1               	goto	l11735
 11871  0109E0                     __end_of_display_LCD:
 11872                           	opt stack 0
 11873                           tblptru	equ	0xFF8
 11874                           tblptrh	equ	0xFF7
 11875                           tblptrl	equ	0xFF6
 11876                           tablat	equ	0xFF5
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           postinc0	equ	0xFEE
 11881                           wreg	equ	0xFE8
 11882                           indf1	equ	0xFE7
 11883                           postinc1	equ	0xFE6
 11884                           postdec1	equ	0xFE5
 11885                           fsr1h	equ	0xFE2
 11886                           fsr1l	equ	0xFE1
 11887                           indf2	equ	0xFDF
 11888                           postinc2	equ	0xFDE
 11889                           postdec2	equ	0xFDD
 11890                           plusw2	equ	0xFDB
 11891                           fsr2h	equ	0xFDA
 11892                           fsr2l	equ	0xFD9
 11893                           status	equ	0xFD8
 11894                           
 11895 ;; *************** function _display_time_1602 *****************
 11896 ;; Defined at:
 11897 ;;		line 244 in file "../My_library/My_RTCC.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;  tm              2   83[BANK0 ] PTR struct .
 11900 ;;		 -> now(14), 
 11901 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 11902 ;;		 -> display_LCD@str(40), 
 11903 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 11904 ;;		 -> display_LCD@str(40), 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;		None
 11907 ;; Return value:  Size  Location     Type
 11908 ;;		None               void
 11909 ;; Registers used:
 11910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11916 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;Total ram usage:        7 bytes
 11921 ;; Hardware stack levels used:    1
 11922 ;; Hardware stack levels required when called:   15
 11923 ;; This function calls:
 11924 ;;		_RTCC_from_RTCC
 11925 ;;		_display_dec
 11926 ;;		_strcat
 11927 ;;		_strcpy
 11928 ;; This function is called by:
 11929 ;;		_display_LCD
 11930 ;; This function uses a non-reentrant model
 11931 ;;
 11932                           
 11933                           	psect	text32
 11934  0113BE                     __ptext32:
 11935                           	opt stack 0
 11936  0113BE                     _display_time_1602:
 11937                           	opt stack 13
 11938                           
 11939                           ;My_RTCC.c: 245: RTCC_from_RTCC(&now);
 11940                           
 11941                           ;incstack = 0
 11942  0113BE  0E72               	movlw	low _now
 11943  0113C0  0100               	movlb	0	; () banked
 11944  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 11945  0113C4  0E01               	movlw	high _now
 11946  0113C6  0100               	movlb	0	; () banked
 11947  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 11948  0113CA  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 11949                           
 11950                           ;My_RTCC.c: 247: strcpy(line0, "");
 11951  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 11952  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 11953  0113D6  0EE6               	movlw	low (STR_96+3)
 11954  0113D8  0100               	movlb	0	; () banked
 11955  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 11956  0113DC  0EFF               	movlw	high (STR_96+3)
 11957  0113DE  0100               	movlb	0	; () banked
 11958  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 11959  0113E2  ECC9  F0B3         	call	_strcpy	;wreg free
 11960                           
 11961                           ;My_RTCC.c: 248: display_dec(line0, 20, tm->edit.flag.YY);
 11962  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 11963  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 11964  0113EE  0E14               	movlw	20
 11965  0113F0  0100               	movlb	0	; () banked
 11966  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 11967  0113F4  0100               	movlb	0	; () banked
 11968  0113F6  EE20 F00D          	lfsr	2,13
 11969  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 11970  0113FC  26D9               	addwf	fsr2l,f,c
 11971  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 11972  011400  22DA               	addwfc	fsr2h,f,c
 11973  011402  0E00               	movlw	0
 11974  011404  BADF               	btfsc	indf2,5,c
 11975  011406  0E01               	movlw	1
 11976  011408  0100               	movlb	0	; () banked
 11977  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 11978  01140C  EC81  F0B0         	call	_display_dec	;wreg free
 11979                           
 11980                           ;My_RTCC.c: 249: display_dec(line0, tm->YY, tm->edit.flag.YY);
 11981  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 11982  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 11983  011418  0100               	movlb	0	; () banked
 11984  01141A  EE20 F00A          	lfsr	2,10
 11985  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 11986  011420  26D9               	addwf	fsr2l,f,c
 11987  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 11988  011424  22DA               	addwfc	fsr2h,f,c
 11989  011426  50DF               	movf	indf2,w,c
 11990  011428  0100               	movlb	0	; () banked
 11991  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 11992  01142C  0100               	movlb	0	; () banked
 11993  01142E  EE20 F00D          	lfsr	2,13
 11994  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 11995  011434  26D9               	addwf	fsr2l,f,c
 11996  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 11997  011438  22DA               	addwfc	fsr2h,f,c
 11998  01143A  0E00               	movlw	0
 11999  01143C  BADF               	btfsc	indf2,5,c
 12000  01143E  0E01               	movlw	1
 12001  011440  0100               	movlb	0	; () banked
 12002  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 12003  011444  EC81  F0B0         	call	_display_dec	;wreg free
 12004                           
 12005                           ;My_RTCC.c: 250: strcat(line0, "/");
 12006  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12007  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12008  011450  0EF9               	movlw	low STR_81
 12009  011452  0100               	movlb	0	; () banked
 12010  011454  6F62               	movwf	strcat@from& (0+255),b
 12011  011456  0EFF               	movlw	high STR_81
 12012  011458  0100               	movlb	0	; () banked
 12013  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12014  01145C  ECE1  F0B1         	call	_strcat	;wreg free
 12015                           
 12016                           ;My_RTCC.c: 251: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12017  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12018  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12019  011468  0100               	movlb	0	; () banked
 12020  01146A  EE20 F009          	lfsr	2,9
 12021  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12022  011470  26D9               	addwf	fsr2l,f,c
 12023  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12024  011474  22DA               	addwfc	fsr2h,f,c
 12025  011476  50DF               	movf	indf2,w,c
 12026  011478  0100               	movlb	0	; () banked
 12027  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 12028  01147C  0100               	movlb	0	; () banked
 12029  01147E  EE20 F00D          	lfsr	2,13
 12030  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12031  011484  26D9               	addwf	fsr2l,f,c
 12032  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12033  011488  22DA               	addwfc	fsr2h,f,c
 12034  01148A  0E00               	movlw	0
 12035  01148C  B8DF               	btfsc	indf2,4,c
 12036  01148E  0E01               	movlw	1
 12037  011490  0100               	movlb	0	; () banked
 12038  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 12039  011494  EC81  F0B0         	call	_display_dec	;wreg free
 12040                           
 12041                           ;My_RTCC.c: 252: strcat(line0, "/");
 12042  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12043  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12044  0114A0  0EF9               	movlw	low STR_81
 12045  0114A2  0100               	movlb	0	; () banked
 12046  0114A4  6F62               	movwf	strcat@from& (0+255),b
 12047  0114A6  0EFF               	movlw	high STR_81
 12048  0114A8  0100               	movlb	0	; () banked
 12049  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12050  0114AC  ECE1  F0B1         	call	_strcat	;wreg free
 12051                           
 12052                           ;My_RTCC.c: 253: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12053  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12054  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12055  0114B8  0100               	movlb	0	; () banked
 12056  0114BA  EE20 F008          	lfsr	2,8
 12057  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12058  0114C0  26D9               	addwf	fsr2l,f,c
 12059  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12060  0114C4  22DA               	addwfc	fsr2h,f,c
 12061  0114C6  50DF               	movf	indf2,w,c
 12062  0114C8  0100               	movlb	0	; () banked
 12063  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 12064  0114CC  0100               	movlb	0	; () banked
 12065  0114CE  EE20 F00D          	lfsr	2,13
 12066  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12067  0114D4  26D9               	addwf	fsr2l,f,c
 12068  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12069  0114D8  22DA               	addwfc	fsr2h,f,c
 12070  0114DA  0E00               	movlw	0
 12071  0114DC  B6DF               	btfsc	indf2,3,c
 12072  0114DE  0E01               	movlw	1
 12073  0114E0  0100               	movlb	0	; () banked
 12074  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 12075  0114E4  EC81  F0B0         	call	_display_dec	;wreg free
 12076                           
 12077                           ;My_RTCC.c: 254: strcat(line0, "(");
 12078  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12079  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12080  0114F0  0EF5               	movlw	low STR_90
 12081  0114F2  0100               	movlb	0	; () banked
 12082  0114F4  6F62               	movwf	strcat@from& (0+255),b
 12083  0114F6  0EFF               	movlw	high STR_90
 12084  0114F8  0100               	movlb	0	; () banked
 12085  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12086  0114FC  ECE1  F0B1         	call	_strcat	;wreg free
 12087                           
 12088                           ;My_RTCC.c: 255: strcat(line0, weekday_3char[tm->EE]);
 12089  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12090  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12091  011508  0100               	movlb	0	; () banked
 12092  01150A  EE20 F007          	lfsr	2,7
 12093  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12094  011510  26D9               	addwf	fsr2l,f,c
 12095  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12096  011514  22DA               	addwfc	fsr2h,f,c
 12097  011516  50DF               	movf	indf2,w,c
 12098  011518  0100               	movlb	0	; () banked
 12099  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 12100  01151C  0100               	movlb	0	; () banked
 12101  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 12102  011520  0D04               	mullw	4
 12103  011522  0EA4               	movlw	low _weekday_3char
 12104  011524  24F3               	addwf	prodl,w,c
 12105  011526  0100               	movlb	0	; () banked
 12106  011528  6F62               	movwf	strcat@from& (0+255),b
 12107  01152A  0EFB               	movlw	high _weekday_3char
 12108  01152C  20F4               	addwfc	prodh,w,c
 12109  01152E  0100               	movlb	0	; () banked
 12110  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 12111  011532  ECE1  F0B1         	call	_strcat	;wreg free
 12112                           
 12113                           ;My_RTCC.c: 256: strcat(line0, ")");
 12114  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12115  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12116  01153E  0E8F               	movlw	low (STR_118+5)
 12117  011540  0100               	movlb	0	; () banked
 12118  011542  6F62               	movwf	strcat@from& (0+255),b
 12119  011544  0EFF               	movlw	high (STR_118+5)
 12120  011546  0100               	movlb	0	; () banked
 12121  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 12122  01154A  ECE1  F0B1         	call	_strcat	;wreg free
 12123                           
 12124                           ;My_RTCC.c: 258: strcpy(line1, "        ");
 12125  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12126  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12127  011556  0E5E               	movlw	low STR_92
 12128  011558  0100               	movlb	0	; () banked
 12129  01155A  6F62               	movwf	strcpy@from& (0+255),b
 12130  01155C  0EFF               	movlw	high STR_92
 12131  01155E  0100               	movlb	0	; () banked
 12132  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12133  011562  ECC9  F0B3         	call	_strcpy	;wreg free
 12134                           
 12135                           ;My_RTCC.c: 259: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12136  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12137  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12138  01156E  0100               	movlb	0	; () banked
 12139  011570  EE20 F006          	lfsr	2,6
 12140  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12141  011576  26D9               	addwf	fsr2l,f,c
 12142  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12143  01157A  22DA               	addwfc	fsr2h,f,c
 12144  01157C  50DF               	movf	indf2,w,c
 12145  01157E  0100               	movlb	0	; () banked
 12146  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 12147  011582  0100               	movlb	0	; () banked
 12148  011584  EE20 F00D          	lfsr	2,13
 12149  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12150  01158A  26D9               	addwf	fsr2l,f,c
 12151  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12152  01158E  22DA               	addwfc	fsr2h,f,c
 12153  011590  0E00               	movlw	0
 12154  011592  B4DF               	btfsc	indf2,2,c
 12155  011594  0E01               	movlw	1
 12156  011596  0100               	movlb	0	; () banked
 12157  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 12158  01159A  EC81  F0B0         	call	_display_dec	;wreg free
 12159                           
 12160                           ;My_RTCC.c: 260: if (tm->colon) strcat(line1, ":");
 12161  01159E  0100               	movlb	0	; () banked
 12162  0115A0  EE20 F00B          	lfsr	2,11
 12163  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12164  0115A6  26D9               	addwf	fsr2l,f,c
 12165  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12166  0115AA  22DA               	addwfc	fsr2h,f,c
 12167  0115AC  50DF               	movf	indf2,w,c
 12168  0115AE  B4D8               	btfsc	status,2,c
 12169  0115B0  D00D               	goto	l11047
 12170                           
 12171                           ; BSR set to: 0
 12172  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12173  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12174  0115BA  0EFB               	movlw	low STR_84
 12175  0115BC  0100               	movlb	0	; () banked
 12176  0115BE  6F62               	movwf	strcat@from& (0+255),b
 12177  0115C0  0EFF               	movlw	high STR_84
 12178  0115C2  0100               	movlb	0	; () banked
 12179  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12180  0115C6  ECE1  F0B1         	call	_strcat	;wreg free
 12181  0115CA  D00C               	goto	l11049
 12182  0115CC                     l11047:
 12183                           
 12184                           ;My_RTCC.c: 261: else strcat(line1, " ");
 12185  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12186  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12187  0115D4  0E65               	movlw	low (STR_92+7)
 12188  0115D6  0100               	movlb	0	; () banked
 12189  0115D8  6F62               	movwf	strcat@from& (0+255),b
 12190  0115DA  0EFF               	movlw	high (STR_92+7)
 12191  0115DC  0100               	movlb	0	; () banked
 12192  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12193  0115E0  ECE1  F0B1         	call	_strcat	;wreg free
 12194  0115E4                     l11049:
 12195                           
 12196                           ;My_RTCC.c: 262: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12197  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12198  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12199  0115EC  0100               	movlb	0	; () banked
 12200  0115EE  EE20 F005          	lfsr	2,5
 12201  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12202  0115F4  26D9               	addwf	fsr2l,f,c
 12203  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12204  0115F8  22DA               	addwfc	fsr2h,f,c
 12205  0115FA  50DF               	movf	indf2,w,c
 12206  0115FC  0100               	movlb	0	; () banked
 12207  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 12208  011600  0100               	movlb	0	; () banked
 12209  011602  EE20 F00D          	lfsr	2,13
 12210  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12211  011608  26D9               	addwf	fsr2l,f,c
 12212  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12213  01160C  22DA               	addwfc	fsr2h,f,c
 12214  01160E  0E00               	movlw	0
 12215  011610  B2DF               	btfsc	indf2,1,c
 12216  011612  0E01               	movlw	1
 12217  011614  0100               	movlb	0	; () banked
 12218  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 12219  011618  EC81  F0B0         	call	_display_dec	;wreg free
 12220                           
 12221                           ;My_RTCC.c: 263: strcat(line1, "-");
 12222  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12223  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12224  011624  0EF7               	movlw	low STR_86
 12225  011626  0100               	movlb	0	; () banked
 12226  011628  6F62               	movwf	strcat@from& (0+255),b
 12227  01162A  0EFF               	movlw	high STR_86
 12228  01162C  0100               	movlb	0	; () banked
 12229  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12230  011630  ECE1  F0B1         	call	_strcat	;wreg free
 12231                           
 12232                           ;My_RTCC.c: 264: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12233  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12234  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12235  01163C  0100               	movlb	0	; () banked
 12236  01163E  EE20 F004          	lfsr	2,4
 12237  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12238  011644  26D9               	addwf	fsr2l,f,c
 12239  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12240  011648  22DA               	addwfc	fsr2h,f,c
 12241  01164A  50DF               	movf	indf2,w,c
 12242  01164C  0100               	movlb	0	; () banked
 12243  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 12244  011650  0100               	movlb	0	; () banked
 12245  011652  EE20 F00D          	lfsr	2,13
 12246  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12247  011658  26D9               	addwf	fsr2l,f,c
 12248  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12249  01165C  22DA               	addwfc	fsr2h,f,c
 12250  01165E  0E00               	movlw	0
 12251  011660  B0DF               	btfsc	indf2,0,c
 12252  011662  0E01               	movlw	1
 12253  011664  0100               	movlb	0	; () banked
 12254  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 12255  011668  EC81  F0B0         	call	_display_dec	;wreg free
 12256  01166C  0012               	return		;funcret
 12257  01166E                     __end_of_display_time_1602:
 12258                           	opt stack 0
 12259                           tblptru	equ	0xFF8
 12260                           tblptrh	equ	0xFF7
 12261                           tblptrl	equ	0xFF6
 12262                           tablat	equ	0xFF5
 12263                           prodh	equ	0xFF4
 12264                           prodl	equ	0xFF3
 12265                           intcon	equ	0xFF2
 12266                           postinc0	equ	0xFEE
 12267                           wreg	equ	0xFE8
 12268                           indf1	equ	0xFE7
 12269                           postinc1	equ	0xFE6
 12270                           postdec1	equ	0xFE5
 12271                           fsr1h	equ	0xFE2
 12272                           fsr1l	equ	0xFE1
 12273                           indf2	equ	0xFDF
 12274                           postinc2	equ	0xFDE
 12275                           postdec2	equ	0xFDD
 12276                           plusw2	equ	0xFDB
 12277                           fsr2h	equ	0xFDA
 12278                           fsr2l	equ	0xFD9
 12279                           status	equ	0xFD8
 12280                           
 12281 ;; *************** function _strcpy *****************
 12282 ;; Defined at:
 12283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12286 ;;		 -> settings_integrating_reset@str_1344(20), settings_integrating_reset@str(20), settings_led_indicator@str_1327(20)
      +, settings_led_indicator@str(20), 
 12287 ;;		 -> settings_auto_stop@str_1310(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12288 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12289 ;;		 -> STR_92(9), STR_87(1), STR_83(1), STR_80(1), 
 12290 ;;		 -> STR_60(6), STR_59(6), STR_57(6), STR_56(6), 
 12291 ;;		 -> STR_52(6), STR_51(6), STR_49(6), STR_48(6), 
 12292 ;;		 -> STR_44(6), STR_43(6), STR_41(6), STR_40(6), 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12295 ;;		 -> settings_integrating_reset@str_1344(20), settings_integrating_reset@str(20), settings_led_indicator@str_1327(20)
      +, settings_led_indicator@str(20), 
 12296 ;;		 -> settings_auto_stop@str_1310(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  2    0[BANK0 ] PTR unsigned char 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12306 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12309 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12310 ;;Total ram usage:        6 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:   11
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		_settings_auto_stop
 12317 ;;		_settings_led_indicator
 12318 ;;		_settings_integrating_reset
 12319 ;;		_display_time_1602
 12320 ;;		_display_time_0802
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text33
 12325  016792                     __ptext33:
 12326                           	opt stack 0
 12327  016792                     _strcpy:
 12328                           	opt stack 16
 12329                           
 12330                           ;incstack = 0
 12331  016792  C060  F064         	movff	strcpy@to,strcpy@cp
 12332  016796  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12333  01679A  D006               	goto	l10835
 12334  01679C                     l10833:
 12335  01679C  0100               	movlb	0	; () banked
 12336  01679E  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12337  0167A0  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12338  0167A2  0100               	movlb	0	; () banked
 12339  0167A4  4B62               	infsnz	strcpy@from& (0+255),f,b
 12340  0167A6  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12341  0167A8                     l10835:
 12342  0167A8  C062  FFF6         	movff	strcpy@from,tblptrl
 12343  0167AC  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12344  0167B0                     	if	0	;tblptru may be non-zero
 12345  0167B0                     	endif
 12346  0167B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12347  0167B0  0E00               	movlw	low (__mediumconst shr (0+16))
 12348  0167B2  6EF8               	movwf	tblptru,c
 12349  0167B4                     	endif
 12350  0167B4  C064  FFD9         	movff	strcpy@cp,fsr2l
 12351  0167B8  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12352  0167BC  0008               	tblrd		*
 12353  0167BE  CFF5 FFDF          	movff	tablat,indf2
 12354  0167C2  50DF               	movf	indf2,w,c
 12355  0167C4  B4D8               	btfsc	status,2,c
 12356  0167C6  0012               	return	
 12357  0167C8  D7E9               	goto	l10833
 12358  0167CA                     __end_of_strcpy:
 12359                           	opt stack 0
 12360                           tblptru	equ	0xFF8
 12361                           tblptrh	equ	0xFF7
 12362                           tblptrl	equ	0xFF6
 12363                           tablat	equ	0xFF5
 12364                           prodh	equ	0xFF4
 12365                           prodl	equ	0xFF3
 12366                           intcon	equ	0xFF2
 12367                           postinc0	equ	0xFEE
 12368                           wreg	equ	0xFE8
 12369                           indf1	equ	0xFE7
 12370                           postinc1	equ	0xFE6
 12371                           postdec1	equ	0xFE5
 12372                           fsr1h	equ	0xFE2
 12373                           fsr1l	equ	0xFE1
 12374                           indf2	equ	0xFDF
 12375                           postinc2	equ	0xFDE
 12376                           postdec2	equ	0xFDD
 12377                           plusw2	equ	0xFDB
 12378                           fsr2h	equ	0xFDA
 12379                           fsr2l	equ	0xFD9
 12380                           status	equ	0xFD8
 12381                           
 12382 ;; *************** function _display_dec *****************
 12383 ;; Defined at:
 12384 ;;		line 218 in file "../My_library/My_RTCC.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12387 ;;		 -> display_LCD@str(40), 
 12388 ;;  dec             1   77[BANK0 ] unsigned char 
 12389 ;;  edit            1   78[BANK0 ] unsigned char 
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;  s               4   79[BANK0 ] unsigned char [4]
 12392 ;; Return value:  Size  Location     Type
 12393 ;;		None               void
 12394 ;; Registers used:
 12395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12401 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12402 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12404 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12405 ;;Total ram usage:        8 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:   13
 12408 ;; This function calls:
 12409 ;;		_sprintf
 12410 ;;		_strcat
 12411 ;; This function is called by:
 12412 ;;		_display_time_1602
 12413 ;;		_display_time_0802
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text34
 12418  016102                     __ptext34:
 12419                           	opt stack 0
 12420  016102                     _display_dec:
 12421                           	opt stack 14
 12422                           
 12423                           ;My_RTCC.c: 219: char s[4];
 12424                           ;My_RTCC.c: 220: sprintf(s, "%02d", dec);
 12425                           
 12426                           ;incstack = 0
 12427  016102  0EAF               	movlw	low display_dec@s
 12428  016104  0100               	movlb	0	; () banked
 12429  016106  6F83               	movwf	sprintf@sp& (0+255),b
 12430  016108  0E00               	movlw	high display_dec@s
 12431  01610A  0100               	movlb	0	; () banked
 12432  01610C  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12433  01610E  0EFC               	movlw	low (STR_27+27)
 12434  016110  0100               	movlb	0	; () banked
 12435  016112  6F85               	movwf	sprintf@f& (0+255),b
 12436  016114  0EFD               	movlw	high (STR_27+27)
 12437  016116  0100               	movlb	0	; () banked
 12438  016118  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12439  01611A  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12440  01611E  0100               	movlb	0	; () banked
 12441  016120  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12442  016122  EC00  F080         	call	_sprintf	;wreg free
 12443                           
 12444                           ;My_RTCC.c: 221: if (edit && now.halfsec)strcat(str, "  ");
 12445  016126  0100               	movlb	0	; () banked
 12446  016128  51AE               	movf	display_dec@edit& (0+255),w,b
 12447  01612A  0100               	movlb	0	; () banked
 12448  01612C  B4D8               	btfsc	status,2,c
 12449  01612E  D011               	goto	l10845
 12450                           
 12451                           ; BSR set to: 0
 12452  016130  0101               	movlb	1	; () banked
 12453  016132  517E               	movf	(_now+12)& (0+255),w,b
 12454  016134  B4D8               	btfsc	status,2,c
 12455  016136  D00D               	goto	l10845
 12456                           
 12457                           ; BSR set to: 1
 12458  016138  C0AB  F060         	movff	display_dec@str,strcat@to
 12459  01613C  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12460  016140  0E64               	movlw	low (STR_92+6)
 12461  016142  0100               	movlb	0	; () banked
 12462  016144  6F62               	movwf	strcat@from& (0+255),b
 12463  016146  0EFF               	movlw	high (STR_92+6)
 12464  016148  0100               	movlb	0	; () banked
 12465  01614A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12466  01614C  ECE1  F0B1         	call	_strcat	;wreg free
 12467  016150  0012               	return	
 12468  016152                     l10845:
 12469                           
 12470                           ;My_RTCC.c: 222: else strcat(str, s);
 12471  016152  C0AB  F060         	movff	display_dec@str,strcat@to
 12472  016156  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12473  01615A  0EAF               	movlw	low display_dec@s
 12474  01615C  0100               	movlb	0	; () banked
 12475  01615E  6F62               	movwf	strcat@from& (0+255),b
 12476  016160  0E00               	movlw	high display_dec@s
 12477  016162  0100               	movlb	0	; () banked
 12478  016164  6F63               	movwf	(strcat@from+1)& (0+255),b
 12479  016166  ECE1  F0B1         	call	_strcat	;wreg free
 12480  01616A  0012               	return	
 12481  01616C                     __end_of_display_dec:
 12482                           	opt stack 0
 12483                           tblptru	equ	0xFF8
 12484                           tblptrh	equ	0xFF7
 12485                           tblptrl	equ	0xFF6
 12486                           tablat	equ	0xFF5
 12487                           prodh	equ	0xFF4
 12488                           prodl	equ	0xFF3
 12489                           intcon	equ	0xFF2
 12490                           postinc0	equ	0xFEE
 12491                           wreg	equ	0xFE8
 12492                           indf1	equ	0xFE7
 12493                           postinc1	equ	0xFE6
 12494                           postdec1	equ	0xFE5
 12495                           fsr1h	equ	0xFE2
 12496                           fsr1l	equ	0xFE1
 12497                           indf2	equ	0xFDF
 12498                           postinc2	equ	0xFDE
 12499                           postdec2	equ	0xFDD
 12500                           plusw2	equ	0xFDB
 12501                           fsr2h	equ	0xFDA
 12502                           fsr2l	equ	0xFD9
 12503                           status	equ	0xFD8
 12504                           
 12505 ;; *************** function _strcat *****************
 12506 ;; Defined at:
 12507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12510 ;;		 -> display_LCD@str(40), 
 12511 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12512 ;;		 -> STR_95(2), STR_94(2), STR_93(2), STR_91(2), 
 12513 ;;		 -> weekday_3char(28), STR_90(2), STR_89(2), STR_88(2), 
 12514 ;;		 -> STR_86(2), STR_85(2), STR_84(2), STR_82(2), 
 12515 ;;		 -> STR_81(2), STR_79(3), display_dec@s(4), 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12518 ;;		 -> display_LCD@str(40), 
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  2    0[BANK0 ] PTR unsigned char 
 12521 ;; Registers used:
 12522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12531 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12532 ;;Total ram usage:        6 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:   11
 12535 ;; This function calls:
 12536 ;;		Nothing
 12537 ;; This function is called by:
 12538 ;;		_display_dec
 12539 ;;		_display_time_1602
 12540 ;;		_display_time_0802
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text35
 12545  0163C2                     __ptext35:
 12546                           	opt stack 0
 12547  0163C2                     _strcat:
 12548                           	opt stack 16
 12549                           
 12550                           ;incstack = 0
 12551  0163C2  C060  F064         	movff	strcat@to,strcat@cp
 12552  0163C6  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12553  0163CA  D003               	goto	l10539
 12554  0163CC                     l10537:
 12555  0163CC  0100               	movlb	0	; () banked
 12556  0163CE  4B64               	infsnz	strcat@cp& (0+255),f,b
 12557  0163D0  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12558  0163D2                     l10539:
 12559  0163D2  C064  FFD9         	movff	strcat@cp,fsr2l
 12560  0163D6  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12561  0163DA  50DF               	movf	indf2,w,c
 12562  0163DC  B4D8               	btfsc	status,2,c
 12563  0163DE  D007               	goto	l10543
 12564  0163E0  D7F5               	goto	l10537
 12565  0163E2                     l10541:
 12566  0163E2  0100               	movlb	0	; () banked
 12567  0163E4  4B64               	infsnz	strcat@cp& (0+255),f,b
 12568  0163E6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12569  0163E8  0100               	movlb	0	; () banked
 12570  0163EA  4B62               	infsnz	strcat@from& (0+255),f,b
 12571  0163EC  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12572  0163EE                     l10543:
 12573  0163EE  C062  FFF6         	movff	strcat@from,tblptrl
 12574  0163F2  C063  FFF7         	movff	strcat@from+1,tblptrh
 12575  0163F6  0E00               	movlw	low (__mediumconst shr (0+16))
 12576  0163F8  6EF8               	movwf	tblptru,c
 12577  0163FA  C064  FFD9         	movff	strcat@cp,fsr2l
 12578  0163FE  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12579  016402  0E0E               	movlw	(high __ramtop+-1)
 12580  016404  64F7               	cpfsgt	tblptrh,c
 12581  016406  D003               	bra	u11867
 12582  016408  0008               	tblrd		*
 12583  01640A  50F5               	movf	tablat,w,c
 12584  01640C  D005               	bra	u11860
 12585  01640E                     u11867:
 12586  01640E  CFF6 FFE1          	movff	tblptrl,fsr1l
 12587  016412  CFF7 FFE2          	movff	tblptrh,fsr1h
 12588  016416  50E7               	movf	indf1,w,c
 12589  016418                     u11860:
 12590  016418  6EDF               	movwf	indf2,c
 12591  01641A  50DF               	movf	indf2,w,c
 12592  01641C  B4D8               	btfsc	status,2,c
 12593  01641E  0012               	return	
 12594  016420  D7E0               	goto	l10541
 12595  016422                     __end_of_strcat:
 12596                           	opt stack 0
 12597                           tblptru	equ	0xFF8
 12598                           tblptrh	equ	0xFF7
 12599                           tblptrl	equ	0xFF6
 12600                           tablat	equ	0xFF5
 12601                           prodh	equ	0xFF4
 12602                           prodl	equ	0xFF3
 12603                           intcon	equ	0xFF2
 12604                           postinc0	equ	0xFEE
 12605                           wreg	equ	0xFE8
 12606                           indf1	equ	0xFE7
 12607                           postinc1	equ	0xFE6
 12608                           postdec1	equ	0xFE5
 12609                           fsr1h	equ	0xFE2
 12610                           fsr1l	equ	0xFE1
 12611                           indf2	equ	0xFDF
 12612                           postinc2	equ	0xFDE
 12613                           postdec2	equ	0xFDD
 12614                           plusw2	equ	0xFDB
 12615                           fsr2h	equ	0xFDA
 12616                           fsr2l	equ	0xFD9
 12617                           status	equ	0xFD8
 12618                           
 12619 ;; *************** function _I2C_LCD_SetCursor *****************
 12620 ;; Defined at:
 12621 ;;		line 26 in file "../My_library/My_ST7032.c"
 12622 ;; Parameters:    Size  Location     Type
 12623 ;;  col             1    wreg     unsigned char 
 12624 ;;  row             1    6[BANK0 ] unsigned char 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;  col             1    9[BANK0 ] unsigned char 
 12627 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 12628 ;; Return value:  Size  Location     Type
 12629 ;;		None               void
 12630 ;; Registers used:
 12631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12637 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;Total ram usage:        4 bytes
 12642 ;; Hardware stack levels used:    1
 12643 ;; Hardware stack levels required when called:   14
 12644 ;; This function calls:
 12645 ;;		_I2C_LCD_Command
 12646 ;; This function is called by:
 12647 ;;		_sleep_task
 12648 ;;		_bootload
 12649 ;;		_display_LCD
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text36
 12654  016990                     __ptext36:
 12655                           	opt stack 0
 12656  016990                     _I2C_LCD_SetCursor:
 12657                           	opt stack 13
 12658                           
 12659                           ;incstack = 0
 12660                           ;I2C_LCD_SetCursor@col stored from wreg
 12661  016990  0100               	movlb	0	; () banked
 12662  016992  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 12663                           
 12664                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 12665  016994  C1E1  F067         	movff	I2C_LCD_SetCursor@F8620,I2C_LCD_SetCursor@row_offsets
 12666  016998  C1E2  F068         	movff	I2C_LCD_SetCursor@F8620+1,I2C_LCD_SetCursor@row_offsets+1
 12667                           
 12668                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 12669  01699C  0100               	movlb	0	; () banked
 12670  01699E  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 12671  0169A0  0D01               	mullw	1
 12672  0169A2  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 12673  0169A4  24F3               	addwf	prodl,w,c
 12674  0169A6  6ED9               	movwf	fsr2l,c
 12675  0169A8  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 12676  0169AA  20F4               	addwfc	prodh,w,c
 12677  0169AC  6EDA               	movwf	fsr2h,c
 12678  0169AE  50DF               	movf	indf2,w,c
 12679  0169B0  0100               	movlb	0	; () banked
 12680  0169B2  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 12681  0169B4  0980               	iorlw	128
 12682  0169B6  EC01  F0B4         	call	_I2C_LCD_Command
 12683  0169BA  0012               	return		;funcret
 12684  0169BC                     __end_of_I2C_LCD_SetCursor:
 12685                           	opt stack 0
 12686                           tblptru	equ	0xFF8
 12687                           tblptrh	equ	0xFF7
 12688                           tblptrl	equ	0xFF6
 12689                           tablat	equ	0xFF5
 12690                           prodh	equ	0xFF4
 12691                           prodl	equ	0xFF3
 12692                           intcon	equ	0xFF2
 12693                           postinc0	equ	0xFEE
 12694                           wreg	equ	0xFE8
 12695                           indf1	equ	0xFE7
 12696                           postinc1	equ	0xFE6
 12697                           postdec1	equ	0xFE5
 12698                           fsr1h	equ	0xFE2
 12699                           fsr1l	equ	0xFE1
 12700                           indf2	equ	0xFDF
 12701                           postinc2	equ	0xFDE
 12702                           postdec2	equ	0xFDD
 12703                           plusw2	equ	0xFDB
 12704                           fsr2h	equ	0xFDA
 12705                           fsr2l	equ	0xFD9
 12706                           status	equ	0xFD8
 12707                           
 12708 ;; *************** function _I2C_LCD_Puts *****************
 12709 ;; Defined at:
 12710 ;;		line 45 in file "../My_library/My_ST7032.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 12713 ;;		 -> display_LCD@str_575(20), display_LCD@str(40), display_char(40), STR_10(16), 
 12714 ;;		 -> STR_9(12), STR_6(13), STR_5(17), 
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;  ans             2    7[BANK0 ] int 
 12717 ;; Return value:  Size  Location     Type
 12718 ;;		None               void
 12719 ;; Registers used:
 12720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12721 ;; Tracked objects:
 12722 ;;		On entry : 0/0
 12723 ;;		On exit  : 0/0
 12724 ;;		Unchanged: 0/0
 12725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12727 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12730 ;;Total ram usage:        5 bytes
 12731 ;; Hardware stack levels used:    1
 12732 ;; Hardware stack levels required when called:   13
 12733 ;; This function calls:
 12734 ;;		_I2C_Send
 12735 ;;		_I2C_Start
 12736 ;;		_I2C_Stop
 12737 ;; This function is called by:
 12738 ;;		_sleep_task
 12739 ;;		_bootload
 12740 ;;		_display_LCD
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           	psect	text37
 12745  015A14                     __ptext37:
 12746                           	opt stack 0
 12747  015A14                     _I2C_LCD_Puts:
 12748                           	opt stack 14
 12749                           
 12750                           ;My_ST7032.c: 46: int ans;
 12751                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
 12752                           
 12753                           ;incstack = 0
 12754  015A14  0E00               	movlw	0
 12755  015A16  0100               	movlb	0	; () banked
 12756  015A18  6F62               	movwf	I2C_Start@rw& (0+255),b
 12757  015A1A  0E3E               	movlw	62
 12758  015A1C  EC6B  F0B4         	call	_I2C_Start
 12759  015A20  0100               	movlb	0	; () banked
 12760  015A22  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 12761  015A24  0100               	movlb	0	; () banked
 12762  015A26  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 12763  015A28  0100               	movlb	0	; () banked
 12764  015A2A  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 12765  015A2C  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;My_ST7032.c: 49: if (ans == 0) {
 12769  015A2E  0100               	movlb	0	; () banked
 12770  015A30  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 12771  015A32  0100               	movlb	0	; () banked
 12772  015A34  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 12773  015A36  A4D8               	btfss	status,2,c
 12774  015A38  D031               	goto	l10619
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
 12778  015A3A  0E40               	movlw	64
 12779  015A3C  EC31  F0B6         	call	_I2C_Send
 12780                           
 12781                           ;My_ST7032.c: 51: while (*s) {
 12782  015A40  D019               	goto	l10617
 12783  015A42                     l10611:
 12784                           
 12785                           ;My_ST7032.c: 52: I2C_Send(*s++);
 12786  015A42  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 12787  015A46  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 12788  015A4A  0E00               	movlw	low (__mediumconst shr (0+16))
 12789  015A4C  6EF8               	movwf	tblptru,c
 12790  015A4E  0E0E               	movlw	(high __ramtop+-1)
 12791  015A50  64F7               	cpfsgt	tblptrh,c
 12792  015A52  D003               	bra	u12047
 12793  015A54  0008               	tblrd		*
 12794  015A56  50F5               	movf	tablat,w,c
 12795  015A58  D005               	bra	u12040
 12796  015A5A                     u12047:
 12797  015A5A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12798  015A5E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12799  015A62  50E7               	movf	indf1,w,c
 12800  015A64                     u12040:
 12801  015A64  EC31  F0B6         	call	_I2C_Send
 12802  015A68  0100               	movlb	0	; () banked
 12803  015A6A  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 12804  015A6C  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
 12808  015A6E  0E68               	movlw	104
 12809  015A70                     u14847:
 12810  015A70  2EE8               	decfsz	wreg,f,c
 12811  015A72  D7FE               	goto	u14847
 12812  015A74                     l10617:
 12813  015A74  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 12814  015A78  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 12815  015A7C  0E00               	movlw	low (__mediumconst shr (0+16))
 12816  015A7E  6EF8               	movwf	tblptru,c
 12817  015A80  0E0E               	movlw	(high __ramtop+-1)
 12818  015A82  64F7               	cpfsgt	tblptrh,c
 12819  015A84  D003               	bra	u12057
 12820  015A86  0008               	tblrd		*
 12821  015A88  50F5               	movf	tablat,w,c
 12822  015A8A  D005               	bra	u12050
 12823  015A8C                     u12057:
 12824  015A8C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12825  015A90  CFF7 FFE2          	movff	tblptrh,fsr1h
 12826  015A94  50E7               	movf	indf1,w,c
 12827  015A96                     u12050:
 12828  015A96  0900               	iorlw	0
 12829  015A98  A4D8               	btfss	status,2,c
 12830  015A9A  D7D3               	goto	l10611
 12831  015A9C                     l10619:
 12832                           
 12833                           ;My_ST7032.c: 54: }
 12834                           ;My_ST7032.c: 55: }
 12835                           ;My_ST7032.c: 56: I2C_Stop();
 12836  015A9C  EC4E  F0B6         	call	_I2C_Stop	;wreg free
 12837  015AA0  0012               	return		;funcret
 12838  015AA2                     __end_of_I2C_LCD_Puts:
 12839                           	opt stack 0
 12840                           tblptru	equ	0xFF8
 12841                           tblptrh	equ	0xFF7
 12842                           tblptrl	equ	0xFF6
 12843                           tablat	equ	0xFF5
 12844                           prodh	equ	0xFF4
 12845                           prodl	equ	0xFF3
 12846                           intcon	equ	0xFF2
 12847                           postinc0	equ	0xFEE
 12848                           wreg	equ	0xFE8
 12849                           indf1	equ	0xFE7
 12850                           postinc1	equ	0xFE6
 12851                           postdec1	equ	0xFE5
 12852                           fsr1h	equ	0xFE2
 12853                           fsr1l	equ	0xFE1
 12854                           indf2	equ	0xFDF
 12855                           postinc2	equ	0xFDE
 12856                           postdec2	equ	0xFDD
 12857                           plusw2	equ	0xFDB
 12858                           fsr2h	equ	0xFDA
 12859                           fsr2l	equ	0xFD9
 12860                           status	equ	0xFD8
 12861                           
 12862 ;; *************** function _data_out *****************
 12863 ;; Defined at:
 12864 ;;		line 248 in file "ChargeStation_task.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 12867 ;;		 -> usb_tx(8), 
 12868 ;; Auto vars:     Size  Location     Type
 12869 ;;  i               1  107[BANK0 ] unsigned char 
 12870 ;;  str            30   77[BANK0 ] unsigned char [30]
 12871 ;; Return value:  Size  Location     Type
 12872 ;;		None               void
 12873 ;; Registers used:
 12874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12883 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12884 ;;Total ram usage:       33 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:   14
 12887 ;; This function calls:
 12888 ;;		___lwdiv
 12889 ;;		___lwmod
 12890 ;;		_ringbuf_put_str
 12891 ;;		_sprintf
 12892 ;; This function is called by:
 12893 ;;		_normal_task
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           	psect	text38
 12898  012FC0                     __ptext38:
 12899                           	opt stack 0
 12900  012FC0                     _data_out:
 12901                           	opt stack 15
 12902                           
 12903                           ;ChargeStation_task.c: 249: char str[30];
 12904                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 12905                           ;ChargeStation_task.c: 251: now.YY,
 12906                           ;ChargeStation_task.c: 252: now.MM,
 12907                           ;ChargeStation_task.c: 253: now.DD,
 12908                           ;ChargeStation_task.c: 254: now.hh,
 12909                           ;ChargeStation_task.c: 255: now.mm,
 12910                           ;ChargeStation_task.c: 256: now.ss
 12911                           ;ChargeStation_task.c: 257: );
 12912                           
 12913                           ;incstack = 0
 12914  012FC0  0EAD               	movlw	low data_out@str
 12915  012FC2  0100               	movlb	0	; () banked
 12916  012FC4  6F83               	movwf	sprintf@sp& (0+255),b
 12917  012FC6  0E00               	movlw	high data_out@str
 12918  012FC8  0100               	movlb	0	; () banked
 12919  012FCA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12920  012FCC  0EE1               	movlw	low STR_27
 12921  012FCE  0100               	movlb	0	; () banked
 12922  012FD0  6F85               	movwf	sprintf@f& (0+255),b
 12923  012FD2  0EFD               	movlw	high STR_27
 12924  012FD4  0100               	movlb	0	; () banked
 12925  012FD6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12926  012FD8  C17C  F087         	movff	_now+10,?_sprintf+4
 12927  012FDC  0100               	movlb	0	; () banked
 12928  012FDE  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12929  012FE0  C17B  F089         	movff	_now+9,?_sprintf+6
 12930  012FE4  0100               	movlb	0	; () banked
 12931  012FE6  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 12932  012FE8  C17A  F08B         	movff	_now+8,?_sprintf+8
 12933  012FEC  0100               	movlb	0	; () banked
 12934  012FEE  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 12935  012FF0  C178  F08D         	movff	_now+6,?_sprintf+10
 12936  012FF4  0100               	movlb	0	; () banked
 12937  012FF6  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 12938  012FF8  C177  F08F         	movff	_now+5,?_sprintf+12
 12939  012FFC  0100               	movlb	0	; () banked
 12940  012FFE  6B90               	clrf	(?_sprintf+13)& (0+255),b
 12941  013000  C176  F091         	movff	_now+4,?_sprintf+14
 12942  013004  0100               	movlb	0	; () banked
 12943  013006  6B92               	clrf	(?_sprintf+15)& (0+255),b
 12944  013008  EC00  F080         	call	_sprintf	;wreg free
 12945                           
 12946                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 12947  01300C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 12948  013010  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 12949  013014  0EAD               	movlw	low data_out@str
 12950  013016  0100               	movlb	0	; () banked
 12951  013018  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 12952  01301A  0E00               	movlw	high data_out@str
 12953  01301C  0100               	movlb	0	; () banked
 12954  01301E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 12955  013020  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
 12956                           
 12957                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 12958  013024  0E00               	movlw	0
 12959  013026  0100               	movlb	0	; () banked
 12960  013028  6FCB               	movwf	data_out@i& (0+255),b
 12961  01302A                     l11791:
 12962                           
 12963                           ; BSR set to: 0
 12964  01302A  0E02               	movlw	2
 12965  01302C  0100               	movlb	0	; () banked
 12966  01302E  65CB               	cpfsgt	data_out@i& (0+255),b
 12967  013030  D001               	goto	l11795
 12968  013032  D075               	goto	l11803
 12969  013034                     l11795:
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 12973                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 12974                           ;ChargeStation_task.c: 262: p[i],
 12975                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 12976                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 12977                           ;ChargeStation_task.c: 265: port[i].integrated_current
 12978                           ;ChargeStation_task.c: 266: );
 12979  013034  0EAD               	movlw	low data_out@str
 12980  013036  0100               	movlb	0	; () banked
 12981  013038  6F83               	movwf	sprintf@sp& (0+255),b
 12982  01303A  0E00               	movlw	high data_out@str
 12983  01303C  0100               	movlb	0	; () banked
 12984  01303E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12985  013040  0E35               	movlw	low STR_28
 12986  013042  0100               	movlb	0	; () banked
 12987  013044  6F85               	movwf	sprintf@f& (0+255),b
 12988  013046  0EFE               	movlw	high STR_28
 12989  013048  0100               	movlb	0	; () banked
 12990  01304A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12991  01304C  0100               	movlb	0	; () banked
 12992  01304E  51CB               	movf	data_out@i& (0+255),w,b
 12993  013050  0D02               	mullw	2
 12994  013052  0EDC               	movlw	low data_out@p
 12995  013054  24F3               	addwf	prodl,w,c
 12996  013056  0100               	movlb	0	; () banked
 12997  013058  6F87               	movwf	(?_sprintf+4)& (0+255),b
 12998  01305A  0EFB               	movlw	high data_out@p
 12999  01305C  20F4               	addwfc	prodh,w,c
 13000  01305E  0100               	movlb	0	; () banked
 13001  013060  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13002  013062  0100               	movlb	0	; () banked
 13003  013064  51CB               	movf	data_out@i& (0+255),w,b
 13004  013066  0D17               	mullw	23
 13005  013068  0E06               	movlw	6
 13006  01306A  26F3               	addwf	prodl,f,c
 13007  01306C  0E00               	movlw	0
 13008  01306E  22F4               	addwfc	prodh,f,c
 13009  013070  0E2D               	movlw	low _port
 13010  013072  24F3               	addwf	prodl,w,c
 13011  013074  6ED9               	movwf	fsr2l,c
 13012  013076  0E01               	movlw	high _port
 13013  013078  20F4               	addwfc	prodh,w,c
 13014  01307A  6EDA               	movwf	fsr2h,c
 13015  01307C  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13016  013080  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13017  013084  0E03               	movlw	3
 13018  013086  0100               	movlb	0	; () banked
 13019  013088  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13020  01308A  0EE8               	movlw	232
 13021  01308C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13022  01308E  EC2A  F0AF         	call	___lwdiv	;wreg free
 13023  013092  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13024  013096  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13025  01309A  0100               	movlb	0	; () banked
 13026  01309C  51CB               	movf	data_out@i& (0+255),w,b
 13027  01309E  0D17               	mullw	23
 13028  0130A0  0E06               	movlw	6
 13029  0130A2  26F3               	addwf	prodl,f,c
 13030  0130A4  0E00               	movlw	0
 13031  0130A6  22F4               	addwfc	prodh,f,c
 13032  0130A8  0E2D               	movlw	low _port
 13033  0130AA  24F3               	addwf	prodl,w,c
 13034  0130AC  6ED9               	movwf	fsr2l,c
 13035  0130AE  0E01               	movlw	high _port
 13036  0130B0  20F4               	addwfc	prodh,w,c
 13037  0130B2  6EDA               	movwf	fsr2h,c
 13038  0130B4  CFDE F060          	movff	postinc2,___lwmod@dividend
 13039  0130B8  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13040  0130BC  0E03               	movlw	3
 13041  0130BE  0100               	movlb	0	; () banked
 13042  0130C0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13043  0130C2  0EE8               	movlw	232
 13044  0130C4  6F62               	movwf	___lwmod@divisor& (0+255),b
 13045  0130C6  EC80  F0B1         	call	___lwmod	;wreg free
 13046  0130CA  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13047  0130CE  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13048  0130D2  0100               	movlb	0	; () banked
 13049  0130D4  51CB               	movf	data_out@i& (0+255),w,b
 13050  0130D6  0D17               	mullw	23
 13051  0130D8  0E0C               	movlw	12
 13052  0130DA  26F3               	addwf	prodl,f,c
 13053  0130DC  0E00               	movlw	0
 13054  0130DE  22F4               	addwfc	prodh,f,c
 13055  0130E0  0E2D               	movlw	low _port
 13056  0130E2  24F3               	addwf	prodl,w,c
 13057  0130E4  6ED9               	movwf	fsr2l,c
 13058  0130E6  0E01               	movlw	high _port
 13059  0130E8  20F4               	addwfc	prodh,w,c
 13060  0130EA  6EDA               	movwf	fsr2h,c
 13061  0130EC  CFDE F08D          	movff	postinc2,?_sprintf+10
 13062  0130F0  CFDE F08E          	movff	postinc2,?_sprintf+11
 13063  0130F4  CFDE F08F          	movff	postinc2,?_sprintf+12
 13064  0130F8  CFDE F090          	movff	postinc2,?_sprintf+13
 13065  0130FC  EC00  F080         	call	_sprintf	;wreg free
 13066                           
 13067                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13068  013100  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13069  013104  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13070  013108  0EAD               	movlw	low data_out@str
 13071  01310A  0100               	movlb	0	; () banked
 13072  01310C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13073  01310E  0E00               	movlw	high data_out@str
 13074  013110  0100               	movlb	0	; () banked
 13075  013112  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13076  013114  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
 13077  013118  0100               	movlb	0	; () banked
 13078  01311A  2BCB               	incf	data_out@i& (0+255),f,b
 13079  01311C  D786               	goto	l11791
 13080  01311E                     l11803:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;ChargeStation_task.c: 268: }
 13084                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13085  01311E  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13086  013122  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13087  013126  0EBB               	movlw	low (STR_100+35)
 13088  013128  0100               	movlb	0	; () banked
 13089  01312A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13090  01312C  0EFD               	movlw	high (STR_100+35)
 13091  01312E  0100               	movlb	0	; () banked
 13092  013130  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13093  013132  ECEB  F0B0         	call	_ringbuf_put_str	;wreg free
 13094  013136  0012               	return		;funcret
 13095  013138                     __end_of_data_out:
 13096                           	opt stack 0
 13097                           tblptru	equ	0xFF8
 13098                           tblptrh	equ	0xFF7
 13099                           tblptrl	equ	0xFF6
 13100                           tablat	equ	0xFF5
 13101                           prodh	equ	0xFF4
 13102                           prodl	equ	0xFF3
 13103                           intcon	equ	0xFF2
 13104                           postinc0	equ	0xFEE
 13105                           wreg	equ	0xFE8
 13106                           indf1	equ	0xFE7
 13107                           postinc1	equ	0xFE6
 13108                           postdec1	equ	0xFE5
 13109                           fsr1h	equ	0xFE2
 13110                           fsr1l	equ	0xFE1
 13111                           indf2	equ	0xFDF
 13112                           postinc2	equ	0xFDE
 13113                           postdec2	equ	0xFDD
 13114                           plusw2	equ	0xFDB
 13115                           fsr2h	equ	0xFDA
 13116                           fsr2l	equ	0xFD9
 13117                           status	equ	0xFD8
 13118                           
 13119 ;; *************** function _sprintf *****************
 13120 ;; Defined at:
 13121 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13124 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), display_LCD@str_575(20), 
 13125 ;;		 -> data_out@str(30), 
 13126 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13127 ;;		 -> STR_100(37), STR_98(5), STR_78(5), STR_33(28), 
 13128 ;;		 -> STR_32(9), STR_31(11), STR_30(6), STR_28(24), 
 13129 ;;		 -> STR_27(32), 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  val             4   67[BANK0 ] unsigned long 
 13132 ;;  tmpval          4    0        struct .
 13133 ;;  width           2   73[BANK0 ] int 
 13134 ;;  len             2   65[BANK0 ] unsigned int 
 13135 ;;  ap              2   63[BANK0 ] PTR void [1]
 13136 ;;		 -> ?_sprintf(2), 
 13137 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13138 ;;		 -> STR_118(7), weekday_3char(28), display_LCD@onoff(10), display_LCD@port_char(120), 
 13139 ;;		 -> data_out@p(6), sp__ADC(2), 
 13140 ;;  prec            2   59[BANK0 ] int 
 13141 ;;  c               1   72[BANK0 ] char 
 13142 ;;  flag            1   71[BANK0 ] unsigned char 
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  2   35[BANK0 ] int 
 13145 ;; Registers used:
 13146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13152 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13153 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13155 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13156 ;;Total ram usage:       40 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:   12
 13159 ;; This function calls:
 13160 ;;		___lldiv
 13161 ;;		___llmod
 13162 ;;		___wmul
 13163 ;;		_isdigit
 13164 ;; This function is called by:
 13165 ;;		_data_out
 13166 ;;		_display_LCD
 13167 ;;		_display_dec
 13168 ;;		_print_time
 13169 ;;		_print_time_dec
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text39
 13174  010000                     __ptext39:
 13175                           	opt stack 0
 13176  010000                     _sprintf:
 13177                           	opt stack 13
 13178                           
 13179                           ;doprnt.c: 494: va_list ap;
 13180                           ;doprnt.c: 499: signed char c;
 13181                           ;doprnt.c: 501: int width;
 13182                           ;doprnt.c: 504: int prec;
 13183                           ;doprnt.c: 508: unsigned char flag;
 13184                           ;doprnt.c: 523: union {
 13185                           ;doprnt.c: 524: unsigned long vd;
 13186                           ;doprnt.c: 525: double integ;
 13187                           ;doprnt.c: 526: } tmpval;
 13188                           ;doprnt.c: 528: unsigned long val;
 13189                           ;doprnt.c: 529: unsigned len;
 13190                           ;doprnt.c: 530: const char * cp;
 13191                           ;doprnt.c: 533: *ap = __va_start();
 13192                           
 13193                           ;incstack = 0
 13194  010000  0E87               	movlw	low (?_sprintf+4)
 13195  010002  0100               	movlb	0	; () banked
 13196  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13197  010006  0E00               	movlw	high (?_sprintf+4)
 13198  010008  0100               	movlb	0	; () banked
 13199  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13200                           
 13201                           ;doprnt.c: 536: while(c = *f++) {
 13202  01000C  D270               	goto	l10411
 13203  01000E                     l10265:
 13204                           
 13205                           ; BSR set to: 0
 13206                           ;doprnt.c: 538: if(c != '%')
 13207  01000E  0E25               	movlw	37
 13208  010010  0100               	movlb	0	; () banked
 13209  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13210  010014  B4D8               	btfsc	status,2,c
 13211  010016  D00A               	goto	l10271
 13212                           
 13213                           ; BSR set to: 0
 13214                           ;doprnt.c: 540: {
 13215                           ;doprnt.c: 541: ((*sp++ = (c)));
 13216  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13217  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13218  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13219                           
 13220                           ; BSR set to: 0
 13221  010024  0100               	movlb	0	; () banked
 13222  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13223  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13224                           
 13225                           ;doprnt.c: 542: continue;
 13226  01002A  D261               	goto	l10411
 13227  01002C                     l10271:
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;doprnt.c: 543: }
 13231                           ;doprnt.c: 546: width = 0;
 13232  01002C  0E00               	movlw	0
 13233  01002E  0100               	movlb	0	; () banked
 13234  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13235  010032  0E00               	movlw	0
 13236  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13237                           
 13238                           ;doprnt.c: 548: flag = 0;
 13239  010036  0E00               	movlw	0
 13240  010038  0100               	movlb	0	; () banked
 13241  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;doprnt.c: 551: switch(*f) {
 13245                           
 13246                           ;doprnt.c: 550: for(;;) {
 13247  01003C  D005               	goto	l10277
 13248  01003E                     l10273:
 13249                           
 13250                           ;doprnt.c: 580: flag |= 0x04;
 13251  01003E  0100               	movlb	0	; () banked
 13252  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13253                           
 13254                           ;doprnt.c: 581: f++;
 13255  010042  0100               	movlb	0	; () banked
 13256  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13257  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13258  010048                     l10277:
 13259  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13260  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13261  010050                     	if	0	;tblptru may be non-zero
 13262  010050                     	endif
 13263  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13264  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13265  010052  6EF8               	movwf	tblptru,c
 13266  010054                     	endif
 13267  010054  0008               	tblrd		*
 13268  010056  50F5               	movf	tablat,w,c
 13269                           
 13270                           ; Switch size 1, requested type "space"
 13271                           ; Number of cases is 1, Range of values is 48 to 48
 13272                           ; switch strategies available:
 13273                           ; Name         Instructions Cycles
 13274                           ; simple_byte            4     3 (average)
 13275                           ;	Chosen strategy is simple_byte
 13276  010058  0A30               	xorlw	48	; case 48
 13277  01005A  B4D8               	btfsc	status,2,c
 13278  01005C  D7F0               	goto	l10273
 13279                           
 13280                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13281                           
 13282                           ;doprnt.c: 586: }
 13283                           
 13284                           ;doprnt.c: 585: break;
 13285  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13286  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13287  010066                     	if	0	;tblptru may be non-zero
 13288  010066                     	endif
 13289  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13290  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13291  010068  6EF8               	movwf	tblptru,c
 13292  01006A                     	endif
 13293  01006A  0008               	tblrd		*
 13294  01006C  50F5               	movf	tablat,w,c
 13295  01006E  EC36  F0B5         	call	_isdigit
 13296  010072  A0D8               	btfss	status,0,c
 13297  010074  D0E0               	goto	l10329
 13298                           
 13299                           ;doprnt.c: 598: width = 0;
 13300  010076  0E00               	movlw	0
 13301  010078  0100               	movlb	0	; () banked
 13302  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13303  01007C  0E00               	movlw	0
 13304  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13305  010080                     l10283:
 13306                           
 13307                           ;doprnt.c: 600: width *= 10;
 13308  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13309  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13310  010088  0E00               	movlw	0
 13311  01008A  0100               	movlb	0	; () banked
 13312  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13313  01008E  0E0A               	movlw	10
 13314  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13315  010092  EC1D  F0B4         	call	___wmul	;wreg free
 13316  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13317  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13318                           
 13319                           ;doprnt.c: 601: width += *f++ - '0';
 13320  01009E  0ED0               	movlw	208
 13321  0100A0  0100               	movlb	0	; () banked
 13322  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13323  0100A4  0EFF               	movlw	255
 13324  0100A6  0100               	movlb	0	; () banked
 13325  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13326  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13327  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13328  0100B2                     	if	0	;tblptru may be non-zero
 13329  0100B2                     	endif
 13330  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13331  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13332  0100B4  6EF8               	movwf	tblptru,c
 13333  0100B6                     	endif
 13334  0100B6  0008               	tblrd		*
 13335  0100B8  50F5               	movf	tablat,w,c
 13336  0100BA  0100               	movlb	0	; () banked
 13337  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13338  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13339  0100C0  0100               	movlb	0	; () banked
 13340  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13341  0100C4  0100               	movlb	0	; () banked
 13342  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13343  0100C8  0100               	movlb	0	; () banked
 13344  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13345  0100CC  0100               	movlb	0	; () banked
 13346  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13347  0100D0  0100               	movlb	0	; () banked
 13348  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13349  0100D4  0100               	movlb	0	; () banked
 13350  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13351  0100D8  0100               	movlb	0	; () banked
 13352  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13353  0100DC  0100               	movlb	0	; () banked
 13354  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13355                           
 13356                           ; BSR set to: 0
 13357  0100E0  0100               	movlb	0	; () banked
 13358  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13359  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13363  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13364  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13365  0100EE                     	if	0	;tblptru may be non-zero
 13366  0100EE                     	endif
 13367  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13368  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13369  0100F0  6EF8               	movwf	tblptru,c
 13370  0100F2                     	endif
 13371  0100F2  0008               	tblrd		*
 13372  0100F4  50F5               	movf	tablat,w,c
 13373  0100F6  EC36  F0B5         	call	_isdigit
 13374  0100FA  A0D8               	btfss	status,0,c
 13375  0100FC  D09C               	goto	l10329
 13376  0100FE  D7C0               	goto	l10283
 13377  010100                     l10291:
 13378                           
 13379                           ;doprnt.c: 643: flag |= 0x10;
 13380  010100  0100               	movlb	0	; () banked
 13381  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13382                           
 13383                           ;doprnt.c: 644: goto loop;
 13384  010104  D098               	goto	l10329
 13385  010106                     l10293:
 13386                           
 13387                           ; BSR set to: 0
 13388                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13389  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13390  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13391  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13392  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13393                           
 13394                           ; BSR set to: 0
 13395  010116  0E02               	movlw	2
 13396  010118  0100               	movlb	0	; () banked
 13397  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13398  01011C  0E00               	movlw	0
 13399  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;doprnt.c: 740: if(!cp)
 13403  010120  0100               	movlb	0	; () banked
 13404  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13405  010124  0100               	movlb	0	; () banked
 13406  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13407  010128  A4D8               	btfss	status,2,c
 13408  01012A  D006               	goto	l10301
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;doprnt.c: 741: cp = "(null)";
 13412  01012C  0E8A               	movlw	low STR_118
 13413  01012E  0100               	movlb	0	; () banked
 13414  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13415  010132  0EFF               	movlw	high STR_118
 13416  010134  0100               	movlb	0	; () banked
 13417  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13418  010138                     l10301:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;doprnt.c: 745: len = 0;
 13422  010138  0E00               	movlw	0
 13423  01013A  0100               	movlb	0	; () banked
 13424  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13425  01013E  0E00               	movlw	0
 13426  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13427                           
 13428                           ;doprnt.c: 746: while(cp[len])
 13429  010142  D003               	goto	l10305
 13430  010144                     l10303:
 13431                           
 13432                           ;doprnt.c: 747: len++;
 13433  010144  0100               	movlb	0	; () banked
 13434  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13435  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13436  01014A                     l10305:
 13437                           
 13438                           ; BSR set to: 0
 13439  01014A  0100               	movlb	0	; () banked
 13440  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13441  01014E  0100               	movlb	0	; () banked
 13442  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13443  010152  0100               	movlb	0	; () banked
 13444  010154  6F97               	movwf	??_sprintf& (0+255),b
 13445  010156  0100               	movlb	0	; () banked
 13446  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13447  01015A  0100               	movlb	0	; () banked
 13448  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13449  01015E  0100               	movlb	0	; () banked
 13450  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13451  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13452  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13453  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13454  01016C  6EF8               	movwf	tblptru,c
 13455  01016E  0E0E               	movlw	(high __ramtop+-1)
 13456  010170  64F7               	cpfsgt	tblptrh,c
 13457  010172  D003               	bra	u11557
 13458  010174  0008               	tblrd		*
 13459  010176  50F5               	movf	tablat,w,c
 13460  010178  D005               	bra	u11550
 13461  01017A                     u11557:
 13462  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13463  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13464  010182  50E7               	movf	indf1,w,c
 13465  010184                     u11550:
 13466  010184  0900               	iorlw	0
 13467  010186  A4D8               	btfss	status,2,c
 13468  010188  D7DD               	goto	l10303
 13469                           
 13470                           ;doprnt.c: 757: if(width > len)
 13471  01018A  0100               	movlb	0	; () banked
 13472  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13473  01018E  0100               	movlb	0	; () banked
 13474  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13475  010192  0100               	movlb	0	; () banked
 13476  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13477  010196  0100               	movlb	0	; () banked
 13478  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13479  01019A  B0D8               	btfsc	status,0,c
 13480  01019C  D009               	goto	l10311
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;doprnt.c: 758: width -= len;
 13484  01019E  0100               	movlb	0	; () banked
 13485  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13486  0101A2  0100               	movlb	0	; () banked
 13487  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13488  0101A6  0100               	movlb	0	; () banked
 13489  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13490  0101AA  0100               	movlb	0	; () banked
 13491  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13492  0101AE  D00F               	goto	l10317
 13493  0101B0                     l10311:
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;doprnt.c: 759: else
 13497                           ;doprnt.c: 760: width = 0;
 13498  0101B0  0E00               	movlw	0
 13499  0101B2  0100               	movlb	0	; () banked
 13500  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13501  0101B6  0E00               	movlw	0
 13502  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;doprnt.c: 764: while(width--)
 13506  0101BA  D009               	goto	l10317
 13507  0101BC                     l10313:
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13511  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13512  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13513  0101C4  0E20               	movlw	32
 13514  0101C6  6EDF               	movwf	indf2,c
 13515                           
 13516                           ; BSR set to: 0
 13517  0101C8  0100               	movlb	0	; () banked
 13518  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13519  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13520  0101CE                     l10317:
 13521                           
 13522                           ; BSR set to: 0
 13523  0101CE  0100               	movlb	0	; () banked
 13524  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13525  0101D2  A0D8               	btfss	status,0,c
 13526  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13527  0101D6  0100               	movlb	0	; () banked
 13528  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13529  0101DA  E1F0               	bnz	l10313
 13530  0101DC  0100               	movlb	0	; () banked
 13531  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13532  0101E0  B4D8               	btfsc	status,2,c
 13533  0101E2  D01D               	goto	l10325
 13534  0101E4  D7EB               	goto	l10313
 13535  0101E6                     l10319:
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13539  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13540  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13541  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13542  0101F0  6EF8               	movwf	tblptru,c
 13543  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13544  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13545  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13546  0101FC  64F7               	cpfsgt	tblptrh,c
 13547  0101FE  D003               	bra	u11597
 13548  010200  0008               	tblrd		*
 13549  010202  50F5               	movf	tablat,w,c
 13550  010204  D005               	bra	u11590
 13551  010206                     u11597:
 13552  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 13553  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13554  01020E  50E7               	movf	indf1,w,c
 13555  010210                     u11590:
 13556  010210  6EDF               	movwf	indf2,c
 13557  010212  0100               	movlb	0	; () banked
 13558  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13559  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13560                           
 13561                           ; BSR set to: 0
 13562  010218  0100               	movlb	0	; () banked
 13563  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13564  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13565  01021E                     l10325:
 13566                           
 13567                           ; BSR set to: 0
 13568  01021E  0100               	movlb	0	; () banked
 13569  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13570  010222  A0D8               	btfss	status,0,c
 13571  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13572  010226  0100               	movlb	0	; () banked
 13573  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13574  01022A  E1DD               	bnz	l10319
 13575  01022C  0100               	movlb	0	; () banked
 13576  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13577  010230  B4D8               	btfsc	status,2,c
 13578  010232  D15D               	goto	l10411
 13579  010234  D7D8               	goto	l10319
 13580  010236                     l10329:
 13581  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13582  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13583  01023E  0100               	movlb	0	; () banked
 13584  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13585  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13586  010244                     	if	0	;tblptru may be non-zero
 13587  010244                     	endif
 13588  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13589  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13590  010246  6EF8               	movwf	tblptru,c
 13591  010248                     	endif
 13592  010248  0008               	tblrd		*
 13593  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13594  01024E  0100               	movlb	0	; () banked
 13595  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13596                           
 13597                           ; Switch size 1, requested type "space"
 13598                           ; Number of cases is 5, Range of values is 0 to 115
 13599                           ; switch strategies available:
 13600                           ; Name         Instructions Cycles
 13601                           ; simple_byte           16     9 (average)
 13602                           ;	Chosen strategy is simple_byte
 13603  010252  0A00               	xorlw	0	; case 0
 13604  010254  B4D8               	btfsc	status,2,c
 13605  010256  D15B               	goto	l10413
 13606  010258  0A64               	xorlw	100	; case 100
 13607  01025A  B4D8               	btfsc	status,2,c
 13608  01025C  D00A               	goto	l1844
 13609  01025E  0A0D               	xorlw	13	; case 105
 13610  010260  B4D8               	btfsc	status,2,c
 13611  010262  D007               	goto	l1844
 13612  010264  0A05               	xorlw	5	; case 108
 13613  010266  B4D8               	btfsc	status,2,c
 13614  010268  D74B               	goto	l10291
 13615  01026A  0A1F               	xorlw	31	; case 115
 13616  01026C  B4D8               	btfsc	status,2,c
 13617  01026E  D74B               	goto	l10293
 13618  010270  D13E               	goto	l10411
 13619  010272                     l1844:
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;doprnt.c: 1253: {
 13623                           ;doprnt.c: 1255: if(flag & 0x10)
 13624  010272  0100               	movlb	0	; () banked
 13625  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13626  010276  D00E               	goto	l10335
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13630  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13631  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13632  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13633  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13634  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13635  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13636                           
 13637                           ; BSR set to: 0
 13638  010290  0E04               	movlw	4
 13639  010292  D00F               	goto	L3
 13640  010294                     l10335:
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;doprnt.c: 1257: else
 13644                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13645  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13646  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13647  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13648  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13649  0102A4  0100               	movlb	0	; () banked
 13650  0102A6  0E00               	movlw	0
 13651  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13652  0102AA  0EFF               	movlw	-1
 13653  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13654  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13655                           
 13656                           ; BSR set to: 0
 13657  0102B0  0E02               	movlw	2
 13658  0102B2                     L3:
 13659  0102B2  0100               	movlb	0	; () banked
 13660  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13661  0102B6  0E00               	movlw	0
 13662  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;doprnt.c: 1261: if((long)val < 0) {
 13666                           
 13667                           ; BSR set to: 0
 13668  0102BA  0100               	movlb	0	; () banked
 13669  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13670  0102BE  D00C               	goto	l10345
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;doprnt.c: 1262: flag |= 0x03;
 13674  0102C0  0E03               	movlw	3
 13675  0102C2  0100               	movlb	0	; () banked
 13676  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;doprnt.c: 1263: val = -val;
 13680  0102C6  0100               	movlb	0	; () banked
 13681  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13682  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13683  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13684  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13685  0102D0  0E00               	movlw	0
 13686  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13687  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13688  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13689  0102D8                     l10345:
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;doprnt.c: 1264: }
 13693                           ;doprnt.c: 1266: }
 13694                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13695  0102D8  0E01               	movlw	1
 13696  0102DA  0100               	movlb	0	; () banked
 13697  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13698  0102DE                     l10347:
 13699                           
 13700                           ; BSR set to: 0
 13701  0102DE  0E0A               	movlw	10
 13702  0102E0  0100               	movlb	0	; () banked
 13703  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13704  0102E4  B4D8               	btfsc	status,2,c
 13705  0102E6  D021               	goto	l10359
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;doprnt.c: 1306: if(val < dpowers[c])
 13709                           
 13710                           ; BSR set to: 0
 13711                           
 13712                           ; BSR set to: 0
 13713  0102E8  0100               	movlb	0	; () banked
 13714  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13715  0102EC  0D04               	mullw	4
 13716  0102EE  0E51               	movlw	low _dpowers
 13717  0102F0  24F3               	addwf	prodl,w,c
 13718  0102F2  6EF6               	movwf	tblptrl,c
 13719  0102F4  0EFA               	movlw	high _dpowers
 13720  0102F6  20F4               	addwfc	prodh,w,c
 13721  0102F8  6EF7               	movwf	tblptrh,c
 13722  0102FA                     	if	1	;There are 3 active tblptr bytes
 13723  0102FA  6AF8               	clrf	tblptru,c
 13724  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13725  0102FE  22F8               	addwfc	tblptru,f,c
 13726  010300                     	endif
 13727  010300  0009               	tblrd		*+
 13728  010302  50F5               	movf	tablat,w,c
 13729  010304  0100               	movlb	0	; () banked
 13730  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13731  010308  0009               	tblrd		*+
 13732  01030A  50F5               	movf	tablat,w,c
 13733  01030C  0100               	movlb	0	; () banked
 13734  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 13735  010310  0009               	tblrd		*+
 13736  010312  50F5               	movf	tablat,w,c
 13737  010314  0100               	movlb	0	; () banked
 13738  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 13739  010318  0009               	tblrd		*+
 13740  01031A  50F5               	movf	tablat,w,c
 13741  01031C  0100               	movlb	0	; () banked
 13742  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 13743  010320  A0D8               	btfss	status,0,c
 13744  010322  D003               	goto	l10359
 13745                           
 13746                           ; BSR set to: 0
 13747                           
 13748                           ; BSR set to: 0
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;doprnt.c: 1307: break;
 13752  010324  0100               	movlb	0	; () banked
 13753  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 13754  010328  D7DA               	goto	l10347
 13755  01032A                     l10359:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13759  01032A  0100               	movlb	0	; () banked
 13760  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 13761  01032E  0100               	movlb	0	; () banked
 13762  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13763  010332  B4D8               	btfsc	status,2,c
 13764  010334  D00B               	goto	l10365
 13765                           
 13766                           ; BSR set to: 0
 13767  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13768  01033A  0E03               	movlw	3
 13769  01033C  0100               	movlb	0	; () banked
 13770  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 13771  010340  B4D8               	btfsc	status,2,c
 13772  010342  D004               	goto	l10365
 13773                           
 13774                           ; BSR set to: 0
 13775                           ;doprnt.c: 1346: width--;
 13776  010344  0100               	movlb	0	; () banked
 13777  010346  07A9               	decf	sprintf@width& (0+255),f,b
 13778  010348  A0D8               	btfss	status,0,c
 13779  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13780  01034C                     l10365:
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;doprnt.c: 1381: if(width > c)
 13784  01034C  0E80               	movlw	128
 13785  01034E  0100               	movlb	0	; () banked
 13786  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13787  010352  0E7F               	movlw	127
 13788  010354  0100               	movlb	0	; () banked
 13789  010356  6F97               	movwf	??_sprintf& (0+255),b
 13790  010358  0100               	movlb	0	; () banked
 13791  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 13792  01035C  0100               	movlb	0	; () banked
 13793  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 13794  010360  0100               	movlb	0	; () banked
 13795  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13796  010364  0A80               	xorlw	128
 13797  010366  0100               	movlb	0	; () banked
 13798  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 13799  01036A  B0D8               	btfsc	status,0,c
 13800  01036C  D00B               	goto	l10369
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;doprnt.c: 1382: width -= c;
 13804  01036E  0100               	movlb	0	; () banked
 13805  010370  51A8               	movf	sprintf@c& (0+255),w,b
 13806  010372  0100               	movlb	0	; () banked
 13807  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 13808  010376  0E00               	movlw	0
 13809  010378  0100               	movlb	0	; () banked
 13810  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13811  01037C  0EFF               	movlw	255
 13812  01037E  0100               	movlb	0	; () banked
 13813  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13814  010382  D005               	goto	l10371
 13815  010384                     l10369:
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;doprnt.c: 1383: else
 13819                           ;doprnt.c: 1384: width = 0;
 13820  010384  0E00               	movlw	0
 13821  010386  0100               	movlb	0	; () banked
 13822  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13823  01038A  0E00               	movlw	0
 13824  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 13825  01038E                     l10371:
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;doprnt.c: 1387: if(flag & 0x04) {
 13829  01038E  0100               	movlb	0	; () banked
 13830  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 13831  010392  D024               	goto	l10387
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;doprnt.c: 1392: if(flag & 0x03)
 13835  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13836  010398  0E03               	movlw	3
 13837  01039A  0100               	movlb	0	; () banked
 13838  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 13839  01039E  B4D8               	btfsc	status,2,c
 13840  0103A0  D009               	goto	l10379
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 13844  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13845  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13846  0103AA  0E2D               	movlw	45
 13847  0103AC  6EDF               	movwf	indf2,c
 13848                           
 13849                           ; BSR set to: 0
 13850  0103AE  0100               	movlb	0	; () banked
 13851  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13852  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13853  0103B4                     l10379:
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;doprnt.c: 1415: if(width)
 13857  0103B4  0100               	movlb	0	; () banked
 13858  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 13859  0103B8  0100               	movlb	0	; () banked
 13860  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13861  0103BC  B4D8               	btfsc	status,2,c
 13862  0103BE  D037               	goto	l10401
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 13866                           
 13867                           ; BSR set to: 0
 13868                           
 13869                           ;doprnt.c: 1416: do
 13870  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 13871  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13872  0103C8  0E30               	movlw	48
 13873  0103CA  6EDF               	movwf	indf2,c
 13874                           
 13875                           ; BSR set to: 0
 13876  0103CC  0100               	movlb	0	; () banked
 13877  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13878  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;doprnt.c: 1418: while(--width);
 13882  0103D2  0100               	movlb	0	; () banked
 13883  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 13884  0103D6  A0D8               	btfss	status,0,c
 13885  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13886  0103DA  D7EC               	goto	l10379
 13887  0103DC                     l10387:
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;doprnt.c: 1422: {
 13891                           ;doprnt.c: 1424: if(width
 13892                           ;doprnt.c: 1428: )
 13893  0103DC  0100               	movlb	0	; () banked
 13894  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 13895  0103E0  0100               	movlb	0	; () banked
 13896  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13897  0103E4  B4D8               	btfsc	status,2,c
 13898  0103E6  D013               	goto	l10395
 13899  0103E8                     l10389:
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 13903  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 13904  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13905  0103F0  0E20               	movlw	32
 13906  0103F2  6EDF               	movwf	indf2,c
 13907                           
 13908                           ; BSR set to: 0
 13909  0103F4  0100               	movlb	0	; () banked
 13910  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13911  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;doprnt.c: 1431: while(--width);
 13915  0103FA  0100               	movlb	0	; () banked
 13916  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 13917  0103FE  A0D8               	btfss	status,0,c
 13918  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13919  010402  0100               	movlb	0	; () banked
 13920  010404  51A9               	movf	sprintf@width& (0+255),w,b
 13921  010406  0100               	movlb	0	; () banked
 13922  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13923  01040A  A4D8               	btfss	status,2,c
 13924  01040C  D7ED               	goto	l10389
 13925  01040E                     l10395:
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;doprnt.c: 1438: if(flag & 0x03)
 13929  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13930  010412  0E03               	movlw	3
 13931  010414  0100               	movlb	0	; () banked
 13932  010416  1797               	andwf	??_sprintf& (0+255),f,b
 13933  010418  B4D8               	btfsc	status,2,c
 13934  01041A  D009               	goto	l10401
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 13938  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 13939  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13940  010424  0E2D               	movlw	45
 13941  010426  6EDF               	movwf	indf2,c
 13942                           
 13943                           ; BSR set to: 0
 13944  010428  0100               	movlb	0	; () banked
 13945  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13946  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13947  01042E                     l10401:
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;doprnt.c: 1469: }
 13951                           ;doprnt.c: 1472: prec = c;
 13952  01042E  0100               	movlb	0	; () banked
 13953  010430  51A8               	movf	sprintf@c& (0+255),w,b
 13954  010432  0100               	movlb	0	; () banked
 13955  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 13956  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 13957  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 13958  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 13959                           
 13960                           ;doprnt.c: 1474: while(prec--) {
 13961  01043C  D04D               	goto	l10409
 13962  01043E                     l10403:
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;doprnt.c: 1478: {
 13966                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13967  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 13968  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 13969  010446  0100               	movlb	0	; () banked
 13970  010448  90D8               	bcf	status,0,c
 13971  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 13972  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 13973  01044E  0100               	movlb	0	; () banked
 13974  010450  90D8               	bcf	status,0,c
 13975  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 13976  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 13977  010456  0E51               	movlw	low _dpowers
 13978  010458  0100               	movlb	0	; () banked
 13979  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 13980  01045C  6EF6               	movwf	tblptrl,c
 13981  01045E  0EFA               	movlw	high _dpowers
 13982  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 13983  010462  6EF7               	movwf	tblptrh,c
 13984  010464                     	if	1	;There are 3 active tblptr bytes
 13985  010464  6AF8               	clrf	tblptru,c
 13986  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 13987  010468  22F8               	addwfc	tblptru,f,c
 13988  01046A                     	endif
 13989  01046A  0009               	tblrd		*+
 13990  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 13991  010470  0009               	tblrd		*+
 13992  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 13993  010476  0009               	tblrd		*+
 13994  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 13995  01047C  000A               	tblrd		*-
 13996  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 13997  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 13998  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 13999  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14000  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14001  010492  EC6C  F0A9         	call	___lldiv	;wreg free
 14002  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14003  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14004  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14005  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14006  0104A6  0E0A               	movlw	10
 14007  0104A8  0100               	movlb	0	; () banked
 14008  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14009  0104AC  0E00               	movlw	0
 14010  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14011  0104B0  0E00               	movlw	0
 14012  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14013  0104B4  0E00               	movlw	0
 14014  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14015  0104B8  EC2C  F0AC         	call	___llmod	;wreg free
 14016  0104BC  0100               	movlb	0	; () banked
 14017  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14018  0104C0  0F30               	addlw	48
 14019  0104C2  0100               	movlb	0	; () banked
 14020  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14021                           
 14022                           ; BSR set to: 0
 14023                           ;doprnt.c: 1523: }
 14024                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14025  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14026  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14027  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14028                           
 14029                           ; BSR set to: 0
 14030  0104D2  0100               	movlb	0	; () banked
 14031  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14032  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14033  0104D8                     l10409:
 14034                           
 14035                           ; BSR set to: 0
 14036  0104D8  0100               	movlb	0	; () banked
 14037  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14038  0104DC  A0D8               	btfss	status,0,c
 14039  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14040  0104E0  0100               	movlb	0	; () banked
 14041  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14042  0104E4  E1AC               	bnz	l10403
 14043  0104E6  0100               	movlb	0	; () banked
 14044  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14045  0104EA  A4D8               	btfss	status,2,c
 14046  0104EC  D7A8               	goto	l10403
 14047  0104EE                     l10411:
 14048                           
 14049                           ; BSR set to: 0
 14050  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14051  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14052  0104F6  0100               	movlb	0	; () banked
 14053  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14054  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14055  0104FC                     	if	0	;tblptru may be non-zero
 14056  0104FC                     	endif
 14057  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14058  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14059  0104FE  6EF8               	movwf	tblptru,c
 14060  010500                     	endif
 14061  010500  0008               	tblrd		*
 14062  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14063  010506  0100               	movlb	0	; () banked
 14064  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14065  01050A  A4D8               	btfss	status,2,c
 14066  01050C  D580               	goto	l10265
 14067  01050E                     l10413:
 14068                           
 14069                           ;doprnt.c: 1538: *sp = 0;
 14070  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14071  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14072  010516  0E00               	movlw	0
 14073  010518  6EDF               	movwf	indf2,c
 14074  01051A  0012               	return	
 14075  01051C                     __end_of_sprintf:
 14076                           	opt stack 0
 14077                           tblptru	equ	0xFF8
 14078                           tblptrh	equ	0xFF7
 14079                           tblptrl	equ	0xFF6
 14080                           tablat	equ	0xFF5
 14081                           prodh	equ	0xFF4
 14082                           prodl	equ	0xFF3
 14083                           intcon	equ	0xFF2
 14084                           postinc0	equ	0xFEE
 14085                           wreg	equ	0xFE8
 14086                           indf1	equ	0xFE7
 14087                           postinc1	equ	0xFE6
 14088                           postdec1	equ	0xFE5
 14089                           fsr1h	equ	0xFE2
 14090                           fsr1l	equ	0xFE1
 14091                           indf2	equ	0xFDF
 14092                           postinc2	equ	0xFDE
 14093                           postdec2	equ	0xFDD
 14094                           plusw2	equ	0xFDB
 14095                           fsr2h	equ	0xFDA
 14096                           fsr2l	equ	0xFD9
 14097                           status	equ	0xFD8
 14098                           
 14099 ;; *************** function _isdigit *****************
 14100 ;; Defined at:
 14101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14102 ;; Parameters:    Size  Location     Type
 14103 ;;  c               1    wreg     unsigned char 
 14104 ;; Auto vars:     Size  Location     Type
 14105 ;;  c               1    2[BANK0 ] unsigned char 
 14106 ;; Return value:  Size  Location     Type
 14107 ;;		None               void
 14108 ;; Registers used:
 14109 ;;		wreg, status,2, status,0
 14110 ;; Tracked objects:
 14111 ;;		On entry : 0/0
 14112 ;;		On exit  : 0/0
 14113 ;;		Unchanged: 0/0
 14114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14117 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14118 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14119 ;;Total ram usage:        3 bytes
 14120 ;; Hardware stack levels used:    1
 14121 ;; Hardware stack levels required when called:   11
 14122 ;; This function calls:
 14123 ;;		Nothing
 14124 ;; This function is called by:
 14125 ;;		_sprintf
 14126 ;;		_atoi
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           	psect	text40
 14131  016A6C                     __ptext40:
 14132                           	opt stack 0
 14133  016A6C                     _isdigit:
 14134                           	opt stack 13
 14135                           
 14136                           ;incstack = 0
 14137                           ;isdigit@c stored from wreg
 14138  016A6C  0100               	movlb	0	; () banked
 14139  016A6E  6F62               	movwf	isdigit@c& (0+255),b
 14140  016A70  0E00               	movlw	0
 14141  016A72  0100               	movlb	0	; () banked
 14142  016A74  6F61               	movwf	_isdigit$6286& (0+255),b
 14143                           
 14144                           ; BSR set to: 0
 14145  016A76  0E3A               	movlw	58
 14146  016A78  0100               	movlb	0	; () banked
 14147  016A7A  6162               	cpfslt	isdigit@c& (0+255),b
 14148  016A7C  D007               	goto	l10229
 14149                           
 14150                           ; BSR set to: 0
 14151  016A7E  0E2F               	movlw	47
 14152  016A80  0100               	movlb	0	; () banked
 14153  016A82  6562               	cpfsgt	isdigit@c& (0+255),b
 14154  016A84  D003               	goto	l10229
 14155                           
 14156                           ; BSR set to: 0
 14157  016A86  0E01               	movlw	1
 14158  016A88  0100               	movlb	0	; () banked
 14159  016A8A  6F61               	movwf	_isdigit$6286& (0+255),b
 14160  016A8C                     l10229:
 14161                           
 14162                           ; BSR set to: 0
 14163  016A8C  C061  F060         	movff	_isdigit$6286,??_isdigit
 14164  016A90  0100               	movlb	0	; () banked
 14165  016A92  3160               	rrcf	??_isdigit& (0+255),w,b
 14166  016A94  0012               	return	
 14167  016A96                     __end_of_isdigit:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           postinc0	equ	0xFEE
 14177                           wreg	equ	0xFE8
 14178                           indf1	equ	0xFE7
 14179                           postinc1	equ	0xFE6
 14180                           postdec1	equ	0xFE5
 14181                           fsr1h	equ	0xFE2
 14182                           fsr1l	equ	0xFE1
 14183                           indf2	equ	0xFDF
 14184                           postinc2	equ	0xFDE
 14185                           postdec2	equ	0xFDD
 14186                           plusw2	equ	0xFDB
 14187                           fsr2h	equ	0xFDA
 14188                           fsr2l	equ	0xFD9
 14189                           status	equ	0xFD8
 14190                           
 14191 ;; *************** function ___llmod *****************
 14192 ;; Defined at:
 14193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  dividend        4   13[BANK0 ] unsigned long 
 14196 ;;  divisor         4   17[BANK0 ] unsigned long 
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;  counter         1   21[BANK0 ] unsigned char 
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  4   13[BANK0 ] unsigned long 
 14201 ;; Registers used:
 14202 ;;		wreg, status,2, status,0
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14208 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14211 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14212 ;;Total ram usage:        9 bytes
 14213 ;; Hardware stack levels used:    1
 14214 ;; Hardware stack levels required when called:   11
 14215 ;; This function calls:
 14216 ;;		Nothing
 14217 ;; This function is called by:
 14218 ;;		_display_LCD
 14219 ;;		_sprintf
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text41
 14224  015858                     __ptext41:
 14225                           	opt stack 0
 14226  015858                     ___llmod:
 14227                           	opt stack 13
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;incstack = 0
 14231  015858  0100               	movlb	0	; () banked
 14232  01585A  5171               	movf	___llmod@divisor& (0+255),w,b
 14233  01585C  0100               	movlb	0	; () banked
 14234  01585E  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14235  015860  0100               	movlb	0	; () banked
 14236  015862  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14237  015864  0100               	movlb	0	; () banked
 14238  015866  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14239  015868  B4D8               	btfsc	status,2,c
 14240  01586A  D03A               	goto	l2262
 14241                           
 14242                           ; BSR set to: 0
 14243  01586C  0E01               	movlw	1
 14244  01586E  0100               	movlb	0	; () banked
 14245  015870  6F75               	movwf	___llmod@counter& (0+255),b
 14246  015872  D008               	goto	l10245
 14247  015874                     l10243:
 14248                           
 14249                           ; BSR set to: 0
 14250  015874  0100               	movlb	0	; () banked
 14251  015876  90D8               	bcf	status,0,c
 14252  015878  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14253  01587A  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14254  01587C  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14255  01587E  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14256  015880  0100               	movlb	0	; () banked
 14257  015882  2B75               	incf	___llmod@counter& (0+255),f,b
 14258  015884                     l10245:
 14259                           
 14260                           ; BSR set to: 0
 14261  015884  0100               	movlb	0	; () banked
 14262  015886  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14263  015888  D7F5               	goto	l10243
 14264  01588A                     l10247:
 14265                           
 14266                           ; BSR set to: 0
 14267  01588A  0100               	movlb	0	; () banked
 14268  01588C  5171               	movf	___llmod@divisor& (0+255),w,b
 14269  01588E  0100               	movlb	0	; () banked
 14270  015890  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14271  015892  0100               	movlb	0	; () banked
 14272  015894  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14273  015896  0100               	movlb	0	; () banked
 14274  015898  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14275  01589A  0100               	movlb	0	; () banked
 14276  01589C  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14277  01589E  0100               	movlb	0	; () banked
 14278  0158A0  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14279  0158A2  0100               	movlb	0	; () banked
 14280  0158A4  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14281  0158A6  0100               	movlb	0	; () banked
 14282  0158A8  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14283  0158AA  A0D8               	btfss	status,0,c
 14284  0158AC  D010               	goto	l10251
 14285                           
 14286                           ; BSR set to: 0
 14287  0158AE  0100               	movlb	0	; () banked
 14288  0158B0  5171               	movf	___llmod@divisor& (0+255),w,b
 14289  0158B2  0100               	movlb	0	; () banked
 14290  0158B4  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14291  0158B6  0100               	movlb	0	; () banked
 14292  0158B8  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14293  0158BA  0100               	movlb	0	; () banked
 14294  0158BC  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14295  0158BE  0100               	movlb	0	; () banked
 14296  0158C0  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14297  0158C2  0100               	movlb	0	; () banked
 14298  0158C4  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14299  0158C6  0100               	movlb	0	; () banked
 14300  0158C8  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14301  0158CA  0100               	movlb	0	; () banked
 14302  0158CC  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14303  0158CE                     l10251:
 14304                           
 14305                           ; BSR set to: 0
 14306  0158CE  0100               	movlb	0	; () banked
 14307  0158D0  90D8               	bcf	status,0,c
 14308  0158D2  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14309  0158D4  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14310  0158D6  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14311  0158D8  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14312                           
 14313                           ; BSR set to: 0
 14314  0158DA  0100               	movlb	0	; () banked
 14315  0158DC  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14316  0158DE  D7D5               	goto	l10247
 14317  0158E0                     l2262:
 14318                           
 14319                           ; BSR set to: 0
 14320  0158E0  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14321  0158E4  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14322  0158E8  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14323  0158EC  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14324                           
 14325                           ; BSR set to: 0
 14326  0158F0  0012               	return		;funcret
 14327  0158F2                     __end_of___llmod:
 14328                           	opt stack 0
 14329                           tblptru	equ	0xFF8
 14330                           tblptrh	equ	0xFF7
 14331                           tblptrl	equ	0xFF6
 14332                           tablat	equ	0xFF5
 14333                           prodh	equ	0xFF4
 14334                           prodl	equ	0xFF3
 14335                           intcon	equ	0xFF2
 14336                           postinc0	equ	0xFEE
 14337                           wreg	equ	0xFE8
 14338                           indf1	equ	0xFE7
 14339                           postinc1	equ	0xFE6
 14340                           postdec1	equ	0xFE5
 14341                           fsr1h	equ	0xFE2
 14342                           fsr1l	equ	0xFE1
 14343                           indf2	equ	0xFDF
 14344                           postinc2	equ	0xFDE
 14345                           postdec2	equ	0xFDD
 14346                           plusw2	equ	0xFDB
 14347                           fsr2h	equ	0xFDA
 14348                           fsr2l	equ	0xFD9
 14349                           status	equ	0xFD8
 14350                           
 14351 ;; *************** function _ringbuf_put_str *****************
 14352 ;; Defined at:
 14353 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14354 ;; Parameters:    Size  Location     Type
 14355 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14356 ;;		 -> usb_tx(8), 
 14357 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14358 ;;		 -> STR_101(8), print_time@str(30), STR_99(3), print_time_dec@str(10), 
 14359 ;;		 -> STR_97(4), STR_96(4), STR_29(2), data_out@str(30), 
 14360 ;;		 -> STR_26(18), STR_23(36), STR_22(24), STR_13(434), 
 14361 ;; Auto vars:     Size  Location     Type
 14362 ;;		None
 14363 ;; Return value:  Size  Location     Type
 14364 ;;		None               void
 14365 ;; Registers used:
 14366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14367 ;; Tracked objects:
 14368 ;;		On entry : 0/0
 14369 ;;		On exit  : 0/0
 14370 ;;		Unchanged: 0/0
 14371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14375 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14376 ;;Total ram usage:        4 bytes
 14377 ;; Hardware stack levels used:    1
 14378 ;; Hardware stack levels required when called:   13
 14379 ;; This function calls:
 14380 ;;		_ringbuf_put
 14381 ;; This function is called by:
 14382 ;;		_terminal_operation
 14383 ;;		_data_out
 14384 ;;		_terminal_task
 14385 ;;		_print_time
 14386 ;;		_terminal_at_hand
 14387 ;;		_print_time_dec
 14388 ;; This function uses a non-reentrant model
 14389 ;;
 14390                           
 14391                           	psect	text42
 14392  0161D6                     __ptext42:
 14393                           	opt stack 0
 14394  0161D6                     _ringbuf_put_str:
 14395                           	opt stack 13
 14396                           
 14397                           ;My_ringbuf.c: 40: while (*str) {
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;incstack = 0
 14401  0161D6  D01C               	goto	l10261
 14402  0161D8                     l10257:
 14403                           
 14404                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14405  0161D8  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14406  0161DC  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14407  0161E0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14408  0161E4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14409  0161E8  0E00               	movlw	low (__mediumconst shr (0+16))
 14410  0161EA  6EF8               	movwf	tblptru,c
 14411  0161EC  0E0E               	movlw	(high __ramtop+-1)
 14412  0161EE  64F7               	cpfsgt	tblptrh,c
 14413  0161F0  D003               	bra	u11487
 14414  0161F2  0008               	tblrd		*
 14415  0161F4  50F5               	movf	tablat,w,c
 14416  0161F6  D005               	bra	u11480
 14417  0161F8                     u11487:
 14418  0161F8  CFF6 FFE1          	movff	tblptrl,fsr1l
 14419  0161FC  CFF7 FFE2          	movff	tblptrh,fsr1h
 14420  016200  50E7               	movf	indf1,w,c
 14421  016202                     u11480:
 14422  016202  0100               	movlb	0	; () banked
 14423  016204  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 14424  016206  ECED  F0A5         	call	_ringbuf_put	;wreg free
 14425  01620A  0100               	movlb	0	; () banked
 14426  01620C  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14427  01620E  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14428  016210                     l10261:
 14429  016210  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14430  016214  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14431  016218  0E00               	movlw	low (__mediumconst shr (0+16))
 14432  01621A  6EF8               	movwf	tblptru,c
 14433  01621C  0E0E               	movlw	(high __ramtop+-1)
 14434  01621E  64F7               	cpfsgt	tblptrh,c
 14435  016220  D003               	bra	u11497
 14436  016222  0008               	tblrd		*
 14437  016224  50F5               	movf	tablat,w,c
 14438  016226  D005               	bra	u11490
 14439  016228                     u11497:
 14440  016228  CFF6 FFE1          	movff	tblptrl,fsr1l
 14441  01622C  CFF7 FFE2          	movff	tblptrh,fsr1h
 14442  016230  50E7               	movf	indf1,w,c
 14443  016232                     u11490:
 14444  016232  0900               	iorlw	0
 14445  016234  B4D8               	btfsc	status,2,c
 14446  016236  0012               	return	
 14447  016238  D7CF               	goto	l10257
 14448  01623A                     __end_of_ringbuf_put_str:
 14449                           	opt stack 0
 14450                           tblptru	equ	0xFF8
 14451                           tblptrh	equ	0xFF7
 14452                           tblptrl	equ	0xFF6
 14453                           tablat	equ	0xFF5
 14454                           prodh	equ	0xFF4
 14455                           prodl	equ	0xFF3
 14456                           intcon	equ	0xFF2
 14457                           postinc0	equ	0xFEE
 14458                           wreg	equ	0xFE8
 14459                           indf1	equ	0xFE7
 14460                           postinc1	equ	0xFE6
 14461                           postdec1	equ	0xFE5
 14462                           fsr1h	equ	0xFE2
 14463                           fsr1l	equ	0xFE1
 14464                           indf2	equ	0xFDF
 14465                           postinc2	equ	0xFDE
 14466                           postdec2	equ	0xFDD
 14467                           plusw2	equ	0xFDB
 14468                           fsr2h	equ	0xFDA
 14469                           fsr2l	equ	0xFD9
 14470                           status	equ	0xFD8
 14471                           
 14472 ;; *************** function ___lwmod *****************
 14473 ;; Defined at:
 14474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;  dividend        2    0[BANK0 ] unsigned int 
 14477 ;;  divisor         2    2[BANK0 ] unsigned int 
 14478 ;; Auto vars:     Size  Location     Type
 14479 ;;  counter         1    4[BANK0 ] unsigned char 
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  2    0[BANK0 ] unsigned int 
 14482 ;; Registers used:
 14483 ;;		wreg, status,2, status,0
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14492 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14493 ;;Total ram usage:        5 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; Hardware stack levels required when called:   11
 14496 ;; This function calls:
 14497 ;;		Nothing
 14498 ;; This function is called by:
 14499 ;;		_data_out
 14500 ;;		_display_LCD
 14501 ;;		_ringbuf_put_num
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text43
 14506  016300                     __ptext43:
 14507                           	opt stack 0
 14508  016300                     ___lwmod:
 14509                           	opt stack 17
 14510                           
 14511                           ;incstack = 0
 14512  016300  0100               	movlb	0	; () banked
 14513  016302  5162               	movf	___lwmod@divisor& (0+255),w,b
 14514  016304  0100               	movlb	0	; () banked
 14515  016306  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14516  016308  B4D8               	btfsc	status,2,c
 14517  01630A  D026               	goto	l2315
 14518                           
 14519                           ; BSR set to: 0
 14520  01630C  0E01               	movlw	1
 14521  01630E  0100               	movlb	0	; () banked
 14522  016310  6F64               	movwf	___lwmod@counter& (0+255),b
 14523  016312  D006               	goto	l11539
 14524  016314                     l11537:
 14525                           
 14526                           ; BSR set to: 0
 14527  016314  0100               	movlb	0	; () banked
 14528  016316  90D8               	bcf	status,0,c
 14529  016318  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14530  01631A  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14531  01631C  0100               	movlb	0	; () banked
 14532  01631E  2B64               	incf	___lwmod@counter& (0+255),f,b
 14533  016320                     l11539:
 14534                           
 14535                           ; BSR set to: 0
 14536  016320  0100               	movlb	0	; () banked
 14537  016322  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14538  016324  D7F7               	goto	l11537
 14539  016326                     l11541:
 14540                           
 14541                           ; BSR set to: 0
 14542  016326  0100               	movlb	0	; () banked
 14543  016328  5162               	movf	___lwmod@divisor& (0+255),w,b
 14544  01632A  0100               	movlb	0	; () banked
 14545  01632C  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14546  01632E  0100               	movlb	0	; () banked
 14547  016330  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14548  016332  0100               	movlb	0	; () banked
 14549  016334  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14550  016336  A0D8               	btfss	status,0,c
 14551  016338  D008               	goto	l11545
 14552                           
 14553                           ; BSR set to: 0
 14554  01633A  0100               	movlb	0	; () banked
 14555  01633C  5162               	movf	___lwmod@divisor& (0+255),w,b
 14556  01633E  0100               	movlb	0	; () banked
 14557  016340  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14558  016342  0100               	movlb	0	; () banked
 14559  016344  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14560  016346  0100               	movlb	0	; () banked
 14561  016348  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14562  01634A                     l11545:
 14563                           
 14564                           ; BSR set to: 0
 14565  01634A  0100               	movlb	0	; () banked
 14566  01634C  90D8               	bcf	status,0,c
 14567  01634E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14568  016350  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14569                           
 14570                           ; BSR set to: 0
 14571  016352  0100               	movlb	0	; () banked
 14572  016354  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14573  016356  D7E7               	goto	l11541
 14574  016358                     l2315:
 14575                           
 14576                           ; BSR set to: 0
 14577  016358  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14578  01635C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14579                           
 14580                           ; BSR set to: 0
 14581  016360  0012               	return		;funcret
 14582  016362                     __end_of___lwmod:
 14583                           	opt stack 0
 14584                           tblptru	equ	0xFF8
 14585                           tblptrh	equ	0xFF7
 14586                           tblptrl	equ	0xFF6
 14587                           tablat	equ	0xFF5
 14588                           prodh	equ	0xFF4
 14589                           prodl	equ	0xFF3
 14590                           intcon	equ	0xFF2
 14591                           postinc0	equ	0xFEE
 14592                           wreg	equ	0xFE8
 14593                           indf1	equ	0xFE7
 14594                           postinc1	equ	0xFE6
 14595                           postdec1	equ	0xFE5
 14596                           fsr1h	equ	0xFE2
 14597                           fsr1l	equ	0xFE1
 14598                           indf2	equ	0xFDF
 14599                           postinc2	equ	0xFDE
 14600                           postdec2	equ	0xFDD
 14601                           plusw2	equ	0xFDB
 14602                           fsr2h	equ	0xFDA
 14603                           fsr2l	equ	0xFD9
 14604                           status	equ	0xFD8
 14605                           
 14606 ;; *************** function _Auto_cut *****************
 14607 ;; Defined at:
 14608 ;;		line 49 in file "ChargeStation_task.c"
 14609 ;; Parameters:    Size  Location     Type
 14610 ;;		None
 14611 ;; Auto vars:     Size  Location     Type
 14612 ;;  i               1   30[BANK0 ] unsigned char 
 14613 ;; Return value:  Size  Location     Type
 14614 ;;		None               void
 14615 ;; Registers used:
 14616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14617 ;; Tracked objects:
 14618 ;;		On entry : 0/0
 14619 ;;		On exit  : 0/0
 14620 ;;		Unchanged: 0/0
 14621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14624 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14625 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14626 ;;Total ram usage:        3 bytes
 14627 ;; Hardware stack levels used:    1
 14628 ;; Hardware stack levels required when called:   12
 14629 ;; This function calls:
 14630 ;;		_ADC
 14631 ;;		_ANALOG_IN
 14632 ;;		_OUT
 14633 ;;		___wmul
 14634 ;; This function is called by:
 14635 ;;		_normal_task
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	text44
 14640  013908                     __ptext44:
 14641                           	opt stack 0
 14642  013908                     _Auto_cut:
 14643                           	opt stack 17
 14644                           
 14645                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;incstack = 0
 14649  013908  0E00               	movlw	0
 14650  01390A  0100               	movlb	0	; () banked
 14651  01390C  6F7E               	movwf	Auto_cut@i& (0+255),b
 14652  01390E                     l11551:
 14653                           
 14654                           ; BSR set to: 0
 14655  01390E  0E02               	movlw	2
 14656  013910  0100               	movlb	0	; () banked
 14657  013912  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14658  013914  D001               	goto	l11555
 14659  013916  0012               	return	
 14660  013918                     l11555:
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14664  013918  0100               	movlb	0	; () banked
 14665  01391A  517E               	movf	Auto_cut@i& (0+255),w,b
 14666  01391C  ECDE  F0B4         	call	_ANALOG_IN
 14667  013920  EC83  F0B4         	call	_ADC
 14668  013924  C060  F076         	movff	?_ADC,___wmul@multiplier
 14669  013928  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14670  01392C  0E00               	movlw	0
 14671  01392E  0100               	movlb	0	; () banked
 14672  013930  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14673  013932  0E0D               	movlw	13
 14674  013934  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14675  013936  EC1D  F0B4         	call	___wmul	;wreg free
 14676  01393A  0E04               	movlw	4
 14677  01393C  0100               	movlb	0	; () banked
 14678  01393E  6F7C               	movwf	??_Auto_cut& (0+255),b
 14679  013940                     u13535:
 14680  013940  0100               	movlb	0	; () banked
 14681  013942  90D8               	bcf	status,0,c
 14682  013944  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14683  013946  3376               	rrcf	?___wmul& (0+255),f,b
 14684  013948  0100               	movlb	0	; () banked
 14685  01394A  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14686  01394C  D7F9               	goto	u13535
 14687  01394E  0100               	movlb	0	; () banked
 14688  013950  517E               	movf	Auto_cut@i& (0+255),w,b
 14689  013952  0D17               	mullw	23
 14690  013954  0E06               	movlw	6
 14691  013956  26F3               	addwf	prodl,f,c
 14692  013958  0E00               	movlw	0
 14693  01395A  22F4               	addwfc	prodh,f,c
 14694  01395C  0E2D               	movlw	low _port
 14695  01395E  24F3               	addwf	prodl,w,c
 14696  013960  6ED9               	movwf	fsr2l,c
 14697  013962  0E01               	movlw	high _port
 14698  013964  20F4               	addwfc	prodh,w,c
 14699  013966  6EDA               	movwf	fsr2h,c
 14700  013968  0100               	movlb	0	; () banked
 14701  01396A  C076  FFDE         	movff	?___wmul,postinc2
 14702  01396E  0100               	movlb	0	; () banked
 14703  013970  C077  FFDD         	movff	?___wmul+1,postdec2
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14707  013974  0100               	movlb	0	; () banked
 14708  013976  517E               	movf	Auto_cut@i& (0+255),w,b
 14709  013978  0D17               	mullw	23
 14710  01397A  0E16               	movlw	22
 14711  01397C  26F3               	addwf	prodl,f,c
 14712  01397E  0E00               	movlw	0
 14713  013980  22F4               	addwfc	prodh,f,c
 14714  013982  0E2D               	movlw	low _port
 14715  013984  24F3               	addwf	prodl,w,c
 14716  013986  6ED9               	movwf	fsr2l,c
 14717  013988  0E01               	movlw	high _port
 14718  01398A  20F4               	addwfc	prodh,w,c
 14719  01398C  6EDA               	movwf	fsr2h,c
 14720  01398E  0101               	movlb	1	; () banked
 14721  013990  A0DF               	btfss	indf2,0,c
 14722  013992  D051               	goto	l11567
 14723                           
 14724                           ; BSR set to: 1
 14725                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 14726  013994  0100               	movlb	0	; () banked
 14727  013996  517E               	movf	Auto_cut@i& (0+255),w,b
 14728  013998  0D17               	mullw	23
 14729  01399A  0E06               	movlw	6
 14730  01399C  26F3               	addwf	prodl,f,c
 14731  01399E  0E00               	movlw	0
 14732  0139A0  22F4               	addwfc	prodh,f,c
 14733  0139A2  0E2D               	movlw	low _port
 14734  0139A4  24F3               	addwf	prodl,w,c
 14735  0139A6  6ED9               	movwf	fsr2l,c
 14736  0139A8  0E01               	movlw	high _port
 14737  0139AA  20F4               	addwfc	prodh,w,c
 14738  0139AC  6EDA               	movwf	fsr2h,c
 14739  0139AE  0E01               	movlw	1
 14740  0139B0  50DB               	movf	plusw2,w,c
 14741  0139B2  E130               	bnz	l11565
 14742  0139B4  0E64               	movlw	100
 14743  0139B6  5CDE               	subwf	postinc2,w,c
 14744  0139B8  B0D8               	btfsc	status,0,c
 14745  0139BA  D02C               	goto	l11565
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 14749  0139BC  0100               	movlb	0	; () banked
 14750  0139BE  517E               	movf	Auto_cut@i& (0+255),w,b
 14751  0139C0  0D17               	mullw	23
 14752  0139C2  0E14               	movlw	20
 14753  0139C4  26F3               	addwf	prodl,f,c
 14754  0139C6  0E00               	movlw	0
 14755  0139C8  22F4               	addwfc	prodh,f,c
 14756  0139CA  0E2D               	movlw	low _port
 14757  0139CC  24F3               	addwf	prodl,w,c
 14758  0139CE  6ED9               	movwf	fsr2l,c
 14759  0139D0  0E01               	movlw	high _port
 14760  0139D2  20F4               	addwfc	prodh,w,c
 14761  0139D4  6EDA               	movwf	fsr2h,c
 14762  0139D6  2ADE               	incf	postinc2,f,c
 14763  0139D8  0E00               	movlw	0
 14764  0139DA  22DD               	addwfc	postdec2,f,c
 14765                           
 14766                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 14767  0139DC  0100               	movlb	0	; () banked
 14768  0139DE  517E               	movf	Auto_cut@i& (0+255),w,b
 14769  0139E0  0D17               	mullw	23
 14770  0139E2  0E14               	movlw	20
 14771  0139E4  26F3               	addwf	prodl,f,c
 14772  0139E6  0E00               	movlw	0
 14773  0139E8  22F4               	addwfc	prodh,f,c
 14774  0139EA  0E2D               	movlw	low _port
 14775  0139EC  24F3               	addwf	prodl,w,c
 14776  0139EE  6ED9               	movwf	fsr2l,c
 14777  0139F0  0E01               	movlw	high _port
 14778  0139F2  20F4               	addwfc	prodh,w,c
 14779  0139F4  6EDA               	movwf	fsr2h,c
 14780  0139F6  0E01               	movlw	1
 14781  0139F8  50DB               	movf	plusw2,w,c
 14782  0139FA  E104               	bnz	u13560
 14783  0139FC  0E07               	movlw	7
 14784  0139FE  5CDE               	subwf	postinc2,w,c
 14785  013A00  A0D8               	btfss	status,0,c
 14786  013A02  D019               	goto	l11567
 14787  013A04                     u13560:
 14788                           
 14789                           ; BSR set to: 0
 14790                           ;ChargeStation_task.c: 57: OUT(i, 0);
 14791  013A04  0E00               	movlw	0
 14792  013A06  0100               	movlb	0	; () banked
 14793  013A08  6F60               	movwf	OUT@value& (0+255),b
 14794  013A0A  0100               	movlb	0	; () banked
 14795  013A0C  517E               	movf	Auto_cut@i& (0+255),w,b
 14796  013A0E  ECDA  F0AF         	call	_OUT
 14797                           
 14798                           ;ChargeStation_task.c: 58: }
 14799                           ;ChargeStation_task.c: 59: } else {
 14800  013A12  D011               	goto	l11567
 14801  013A14                     l11565:
 14802                           
 14803                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 14804  013A14  0100               	movlb	0	; () banked
 14805  013A16  517E               	movf	Auto_cut@i& (0+255),w,b
 14806  013A18  0D17               	mullw	23
 14807  013A1A  0E14               	movlw	20
 14808  013A1C  26F3               	addwf	prodl,f,c
 14809  013A1E  0E00               	movlw	0
 14810  013A20  22F4               	addwfc	prodh,f,c
 14811  013A22  0E2D               	movlw	low _port
 14812  013A24  24F3               	addwf	prodl,w,c
 14813  013A26  6ED9               	movwf	fsr2l,c
 14814  013A28  0E01               	movlw	high _port
 14815  013A2A  20F4               	addwfc	prodh,w,c
 14816  013A2C  6EDA               	movwf	fsr2h,c
 14817  013A2E  0E00               	movlw	0
 14818  013A30  6EDE               	movwf	postinc2,c
 14819  013A32  0E00               	movlw	0
 14820  013A34  6EDD               	movwf	postdec2,c
 14821  013A36                     l11567:
 14822  013A36  0100               	movlb	0	; () banked
 14823  013A38  2B7E               	incf	Auto_cut@i& (0+255),f,b
 14824  013A3A  D769               	goto	l11551
 14825  013A3C                     __end_of_Auto_cut:
 14826                           	opt stack 0
 14827                           tblptru	equ	0xFF8
 14828                           tblptrh	equ	0xFF7
 14829                           tblptrl	equ	0xFF6
 14830                           tablat	equ	0xFF5
 14831                           prodh	equ	0xFF4
 14832                           prodl	equ	0xFF3
 14833                           intcon	equ	0xFF2
 14834                           postinc0	equ	0xFEE
 14835                           wreg	equ	0xFE8
 14836                           indf1	equ	0xFE7
 14837                           postinc1	equ	0xFE6
 14838                           postdec1	equ	0xFE5
 14839                           fsr1h	equ	0xFE2
 14840                           fsr1l	equ	0xFE1
 14841                           indf2	equ	0xFDF
 14842                           postinc2	equ	0xFDE
 14843                           postdec2	equ	0xFDD
 14844                           plusw2	equ	0xFDB
 14845                           fsr2h	equ	0xFDA
 14846                           fsr2l	equ	0xFD9
 14847                           status	equ	0xFD8
 14848                           
 14849 ;; *************** function ___wmul *****************
 14850 ;; Defined at:
 14851 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;  multiplier      2   22[BANK0 ] unsigned int 
 14854 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  product         2   26[BANK0 ] unsigned int 
 14857 ;; Return value:  Size  Location     Type
 14858 ;;                  2   22[BANK0 ] unsigned int 
 14859 ;; Registers used:
 14860 ;;		wreg, status,2, status,0, prodl, prodh
 14861 ;; Tracked objects:
 14862 ;;		On entry : 0/0
 14863 ;;		On exit  : 0/0
 14864 ;;		Unchanged: 0/0
 14865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14866 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14869 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14870 ;;Total ram usage:        6 bytes
 14871 ;; Hardware stack levels used:    1
 14872 ;; Hardware stack levels required when called:   11
 14873 ;; This function calls:
 14874 ;;		Nothing
 14875 ;; This function is called by:
 14876 ;;		_Auto_cut
 14877 ;;		_ctmu_set_ratio
 14878 ;;		_sprintf
 14879 ;;		_atoi
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text45
 14884  01683A                     __ptext45:
 14885                           	opt stack 0
 14886  01683A                     ___wmul:
 14887                           	opt stack 13
 14888                           
 14889                           ; BSR set to: 0
 14890                           ;incstack = 0
 14891  01683A  0100               	movlb	0	; () banked
 14892  01683C  5176               	movf	___wmul@multiplier& (0+255),w,b
 14893  01683E  0100               	movlb	0	; () banked
 14894  016840  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14895  016842  CFF3 F07A          	movff	prodl,___wmul@product
 14896  016846  CFF4 F07B          	movff	prodh,___wmul@product+1
 14897  01684A  0100               	movlb	0	; () banked
 14898  01684C  5176               	movf	___wmul@multiplier& (0+255),w,b
 14899  01684E  0100               	movlb	0	; () banked
 14900  016850  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14901  016852  50F3               	movf	prodl,w,c
 14902  016854  0100               	movlb	0	; () banked
 14903  016856  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14904  016858  0100               	movlb	0	; () banked
 14905  01685A  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14906  01685C  0100               	movlb	0	; () banked
 14907  01685E  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14908  016860  50F3               	movf	prodl,w,c
 14909  016862  0100               	movlb	0	; () banked
 14910  016864  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14911                           
 14912                           ; BSR set to: 0
 14913  016866  C07A  F076         	movff	___wmul@product,?___wmul
 14914  01686A  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 14915  01686E  0012               	return	
 14916  016870                     __end_of___wmul:
 14917                           	opt stack 0
 14918                           tblptru	equ	0xFF8
 14919                           tblptrh	equ	0xFF7
 14920                           tblptrl	equ	0xFF6
 14921                           tablat	equ	0xFF5
 14922                           prodh	equ	0xFF4
 14923                           prodl	equ	0xFF3
 14924                           intcon	equ	0xFF2
 14925                           postinc0	equ	0xFEE
 14926                           wreg	equ	0xFE8
 14927                           indf1	equ	0xFE7
 14928                           postinc1	equ	0xFE6
 14929                           postdec1	equ	0xFE5
 14930                           fsr1h	equ	0xFE2
 14931                           fsr1l	equ	0xFE1
 14932                           indf2	equ	0xFDF
 14933                           postinc2	equ	0xFDE
 14934                           postdec2	equ	0xFDD
 14935                           plusw2	equ	0xFDB
 14936                           fsr2h	equ	0xFDA
 14937                           fsr2l	equ	0xFD9
 14938                           status	equ	0xFD8
 14939                           
 14940 ;; *************** function _OUT *****************
 14941 ;; Defined at:
 14942 ;;		line 7 in file "io.c"
 14943 ;; Parameters:    Size  Location     Type
 14944 ;;  b               1    wreg     unsigned char 
 14945 ;;  value           1    0[BANK0 ] unsigned char 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  b               1    1[BANK0 ] unsigned char 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;		None               void
 14950 ;; Registers used:
 14951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14957 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14961 ;;Total ram usage:        2 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; Hardware stack levels required when called:   11
 14964 ;; This function calls:
 14965 ;;		Nothing
 14966 ;; This function is called by:
 14967 ;;		_Auto_cut
 14968 ;;		_port_button_task
 14969 ;;		_sleep_task
 14970 ;;		_software_init
 14971 ;; This function uses a non-reentrant model
 14972 ;;
 14973                           
 14974                           	psect	text46
 14975  015FB4                     __ptext46:
 14976                           	opt stack 0
 14977  015FB4                     _OUT:
 14978                           	opt stack 18
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;incstack = 0
 14982                           ;OUT@b stored from wreg
 14983  015FB4  0100               	movlb	0	; () banked
 14984  015FB6  6F61               	movwf	OUT@b& (0+255),b
 14985                           
 14986                           ;io.c: 8: port[b].flag.out_flag = value;
 14987  015FB8  0100               	movlb	0	; () banked
 14988  015FBA  5161               	movf	OUT@b& (0+255),w,b
 14989  015FBC  0D17               	mullw	23
 14990  015FBE  0E16               	movlw	22
 14991  015FC0  26F3               	addwf	prodl,f,c
 14992  015FC2  0E00               	movlw	0
 14993  015FC4  22F4               	addwfc	prodh,f,c
 14994  015FC6  0E2D               	movlw	low _port
 14995  015FC8  24F3               	addwf	prodl,w,c
 14996  015FCA  6ED9               	movwf	fsr2l,c
 14997  015FCC  0E01               	movlw	high _port
 14998  015FCE  20F4               	addwfc	prodh,w,c
 14999  015FD0  6EDA               	movwf	fsr2h,c
 15000  015FD2  0100               	movlb	0	; () banked
 15001  015FD4  B160               	btfsc	OUT@value& (0+255),0,b
 15002  015FD6  D003               	bra	u12595
 15003  015FD8  0101               	movlb	1	; () banked
 15004  015FDA  94DF               	bcf	indf2,2,c
 15005  015FDC  D002               	bra	u12596
 15006  015FDE                     u12595:
 15007  015FDE  0101               	movlb	1	; () banked
 15008  015FE0  84DF               	bsf	indf2,2,c
 15009  015FE2                     u12596:
 15010                           
 15011                           ;io.c: 9: switch (b) {
 15012  015FE2  D015               	goto	l10955
 15013  015FE4                     l276:
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;io.c: 11: LATA5 = value;
 15017  015FE4  0100               	movlb	0	; () banked
 15018  015FE6  A160               	btfss	OUT@value& (0+255),0,b
 15019  015FE8  D002               	goto	u12600
 15020  015FEA  8A89               	bsf	3977,5,c	;volatile
 15021  015FEC  0012               	return	
 15022  015FEE                     u12600:
 15023  015FEE  9A89               	bcf	3977,5,c	;volatile
 15024                           
 15025                           ;io.c: 12: break;
 15026  015FF0  0012               	return	
 15027  015FF2                     l278:
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;io.c: 14: LATA6 = value;
 15031  015FF2  0100               	movlb	0	; () banked
 15032  015FF4  A160               	btfss	OUT@value& (0+255),0,b
 15033  015FF6  D002               	goto	u12620
 15034  015FF8  8C89               	bsf	3977,6,c	;volatile
 15035  015FFA  0012               	return	
 15036  015FFC                     u12620:
 15037  015FFC  9C89               	bcf	3977,6,c	;volatile
 15038                           
 15039                           ;io.c: 15: break;
 15040  015FFE  0012               	return	
 15041  016000                     l279:
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;io.c: 17: LATA7 = value;
 15045  016000  0100               	movlb	0	; () banked
 15046  016002  A160               	btfss	OUT@value& (0+255),0,b
 15047  016004  D002               	goto	u12640
 15048  016006  8E89               	bsf	3977,7,c	;volatile
 15049  016008  0012               	return	
 15050  01600A                     u12640:
 15051  01600A  9E89               	bcf	3977,7,c	;volatile
 15052                           
 15053                           ;io.c: 19: }
 15054                           
 15055                           ;io.c: 18: break;
 15056  01600C  0012               	return	
 15057  01600E                     l10955:
 15058  01600E  0100               	movlb	0	; () banked
 15059  016010  5161               	movf	OUT@b& (0+255),w,b
 15060                           
 15061                           ; Switch size 1, requested type "space"
 15062                           ; Number of cases is 3, Range of values is 0 to 2
 15063                           ; switch strategies available:
 15064                           ; Name         Instructions Cycles
 15065                           ; simple_byte           10     6 (average)
 15066                           ;	Chosen strategy is simple_byte
 15067  016012  0A00               	xorlw	0	; case 0
 15068  016014  B4D8               	btfsc	status,2,c
 15069  016016  D7E6               	goto	l276
 15070  016018  0A01               	xorlw	1	; case 1
 15071  01601A  B4D8               	btfsc	status,2,c
 15072  01601C  D7EA               	goto	l278
 15073  01601E  0A03               	xorlw	3	; case 2
 15074  016020  A4D8               	btfss	status,2,c
 15075  016022  0012               	return	
 15076  016024  D7ED               	goto	l279
 15077  016026                     __end_of_OUT:
 15078                           	opt stack 0
 15079                           tblptru	equ	0xFF8
 15080                           tblptrh	equ	0xFF7
 15081                           tblptrl	equ	0xFF6
 15082                           tablat	equ	0xFF5
 15083                           prodh	equ	0xFF4
 15084                           prodl	equ	0xFF3
 15085                           intcon	equ	0xFF2
 15086                           postinc0	equ	0xFEE
 15087                           wreg	equ	0xFE8
 15088                           indf1	equ	0xFE7
 15089                           postinc1	equ	0xFE6
 15090                           postdec1	equ	0xFE5
 15091                           fsr1h	equ	0xFE2
 15092                           fsr1l	equ	0xFE1
 15093                           indf2	equ	0xFDF
 15094                           postinc2	equ	0xFDE
 15095                           postdec2	equ	0xFDD
 15096                           plusw2	equ	0xFDB
 15097                           fsr2h	equ	0xFDA
 15098                           fsr2l	equ	0xFD9
 15099                           status	equ	0xFD8
 15100                           
 15101 ;; *************** function _ANALOG_IN *****************
 15102 ;; Defined at:
 15103 ;;		line 23 in file "io.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;  b               1    wreg     unsigned char 
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;  b               1    0[BANK0 ] unsigned char 
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      unsigned char 
 15110 ;; Registers used:
 15111 ;;		wreg, status,2, status,0
 15112 ;; Tracked objects:
 15113 ;;		On entry : 0/0
 15114 ;;		On exit  : 0/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15121 ;;Total ram usage:        1 bytes
 15122 ;; Hardware stack levels used:    1
 15123 ;; Hardware stack levels required when called:   11
 15124 ;; This function calls:
 15125 ;;		Nothing
 15126 ;; This function is called by:
 15127 ;;		_Auto_cut
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text47
 15132  0169BC                     __ptext47:
 15133                           	opt stack 0
 15134  0169BC                     _ANALOG_IN:
 15135                           	opt stack 17
 15136                           
 15137                           ;incstack = 0
 15138                           ;ANALOG_IN@b stored from wreg
 15139  0169BC  0100               	movlb	0	; () banked
 15140  0169BE  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15141                           
 15142                           ;io.c: 24: switch (b) {
 15143  0169C0  D006               	goto	l10937
 15144  0169C2                     l10923:
 15145                           
 15146                           ;io.c: 26: return 8;
 15147  0169C2  0E08               	movlw	8
 15148  0169C4  0012               	return	
 15149  0169C6                     l10927:
 15150                           
 15151                           ;io.c: 28: return 9;
 15152  0169C6  0E09               	movlw	9
 15153  0169C8  0012               	return	
 15154  0169CA                     l10931:
 15155                           
 15156                           ;io.c: 30: return 10;
 15157  0169CA  0E0A               	movlw	10
 15158  0169CC  0012               	return	
 15159  0169CE                     l10937:
 15160  0169CE  0100               	movlb	0	; () banked
 15161  0169D0  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15162                           
 15163                           ; Switch size 1, requested type "space"
 15164                           ; Number of cases is 3, Range of values is 0 to 2
 15165                           ; switch strategies available:
 15166                           ; Name         Instructions Cycles
 15167                           ; simple_byte           10     6 (average)
 15168                           ;	Chosen strategy is simple_byte
 15169  0169D2  0A00               	xorlw	0	; case 0
 15170  0169D4  B4D8               	btfsc	status,2,c
 15171  0169D6  D7F5               	goto	l10923
 15172  0169D8  0A01               	xorlw	1	; case 1
 15173  0169DA  B4D8               	btfsc	status,2,c
 15174  0169DC  D7F4               	goto	l10927
 15175  0169DE  0A03               	xorlw	3	; case 2
 15176  0169E0  B4D8               	btfsc	status,2,c
 15177  0169E2  D7F3               	goto	l10931
 15178                           
 15179                           ;io.c: 32: return 0;
 15180                           
 15181                           ; BSR set to: 0
 15182  0169E4  0E00               	movlw	0
 15183  0169E6  0012               	return	
 15184  0169E8                     __end_of_ANALOG_IN:
 15185                           	opt stack 0
 15186                           tblptru	equ	0xFF8
 15187                           tblptrh	equ	0xFF7
 15188                           tblptrl	equ	0xFF6
 15189                           tablat	equ	0xFF5
 15190                           prodh	equ	0xFF4
 15191                           prodl	equ	0xFF3
 15192                           intcon	equ	0xFF2
 15193                           postinc0	equ	0xFEE
 15194                           wreg	equ	0xFE8
 15195                           indf1	equ	0xFE7
 15196                           postinc1	equ	0xFE6
 15197                           postdec1	equ	0xFE5
 15198                           fsr1h	equ	0xFE2
 15199                           fsr1l	equ	0xFE1
 15200                           indf2	equ	0xFDF
 15201                           postinc2	equ	0xFDE
 15202                           postdec2	equ	0xFDD
 15203                           plusw2	equ	0xFDB
 15204                           fsr2h	equ	0xFDA
 15205                           fsr2l	equ	0xFD9
 15206                           status	equ	0xFD8
 15207                           
 15208 ;; *************** function _ADC *****************
 15209 ;; Defined at:
 15210 ;;		line 155 in file "../My_library/My_PIC.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;  ch              1    wreg     unsigned char 
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;  ch              1    3[BANK0 ] unsigned char 
 15215 ;; Return value:  Size  Location     Type
 15216 ;;                  2    0[BANK0 ] unsigned int 
 15217 ;; Registers used:
 15218 ;;		wreg, status,2, status,0
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/0
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15227 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15228 ;;Total ram usage:        4 bytes
 15229 ;; Hardware stack levels used:    1
 15230 ;; Hardware stack levels required when called:   11
 15231 ;; This function calls:
 15232 ;;		Nothing
 15233 ;; This function is called by:
 15234 ;;		_Auto_cut
 15235 ;;		_sleep_task
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text48
 15240  016906                     __ptext48:
 15241                           	opt stack 0
 15242  016906                     _ADC:
 15243                           	opt stack 18
 15244                           
 15245                           ;incstack = 0
 15246                           ;ADC@ch stored from wreg
 15247  016906  0100               	movlb	0	; () banked
 15248  016908  6F63               	movwf	ADC@ch& (0+255),b
 15249                           
 15250                           ;My_PIC.c: 156: ADCON0bits.CHS = ch;
 15251  01690A  C063  F062         	movff	ADC@ch,??_ADC
 15252  01690E  0100               	movlb	0	; () banked
 15253  016910  4762               	rlncf	??_ADC& (0+255),f,b
 15254  016912  4762               	rlncf	??_ADC& (0+255),f,b
 15255  016914  50C2               	movf	4034,w,c	;volatile
 15256  016916  0100               	movlb	0	; () banked
 15257  016918  1962               	xorwf	??_ADC& (0+255),w,b
 15258  01691A  0BC3               	andlw	-61
 15259  01691C  1962               	xorwf	??_ADC& (0+255),w,b
 15260  01691E  6EC2               	movwf	4034,c	;volatile
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;My_PIC.c: 157: ADCON0bits.ADON = 1;
 15264  016920  80C2               	bsf	4034,0,c	;volatile
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;My_PIC.c: 159: PIR1bits.ADIF = 0;
 15268  016922  9C9E               	bcf	3998,6,c	;volatile
 15269                           
 15270                           ; BSR set to: 0
 15271                           ;My_PIC.c: 160: ADCON0bits.GO_nDONE = 1;
 15272  016924  82C2               	bsf	4034,1,c	;volatile
 15273  016926                     l727:
 15274  016926  AC9E               	btfss	3998,6,c	;volatile
 15275  016928  D7FE               	goto	l727
 15276                           
 15277                           ;My_PIC.c: 162: return ADRES;
 15278  01692A  CFC3 F060          	movff	4035,?_ADC	;volatile
 15279  01692E  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15280  016932  0012               	return		;funcret
 15281  016934                     __end_of_ADC:
 15282                           	opt stack 0
 15283                           tblptru	equ	0xFF8
 15284                           tblptrh	equ	0xFF7
 15285                           tblptrl	equ	0xFF6
 15286                           tablat	equ	0xFF5
 15287                           prodh	equ	0xFF4
 15288                           prodl	equ	0xFF3
 15289                           intcon	equ	0xFF2
 15290                           postinc0	equ	0xFEE
 15291                           wreg	equ	0xFE8
 15292                           indf1	equ	0xFE7
 15293                           postinc1	equ	0xFE6
 15294                           postdec1	equ	0xFE5
 15295                           fsr1h	equ	0xFE2
 15296                           fsr1l	equ	0xFE1
 15297                           indf2	equ	0xFDF
 15298                           postinc2	equ	0xFDE
 15299                           postdec2	equ	0xFDD
 15300                           plusw2	equ	0xFDB
 15301                           fsr2h	equ	0xFDA
 15302                           fsr2l	equ	0xFD9
 15303                           status	equ	0xFD8
 15304                           
 15305 ;; *************** function _hardware_init *****************
 15306 ;; Defined at:
 15307 ;;		line 82 in file "main.c"
 15308 ;; Parameters:    Size  Location     Type
 15309 ;;		None
 15310 ;; Auto vars:     Size  Location     Type
 15311 ;;		None
 15312 ;; Return value:  Size  Location     Type
 15313 ;;		None               void
 15314 ;; Registers used:
 15315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15316 ;; Tracked objects:
 15317 ;;		On entry : 0/0
 15318 ;;		On exit  : 0/0
 15319 ;;		Unchanged: 0/0
 15320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15325 ;;Total ram usage:        0 bytes
 15326 ;; Hardware stack levels used:    1
 15327 ;; Hardware stack levels required when called:   16
 15328 ;; This function calls:
 15329 ;;		_ADC_init
 15330 ;;		_CTMU_init
 15331 ;;		_I2C_LCD_init
 15332 ;;		_I2C_init
 15333 ;;		_RTCC_init
 15334 ;;		_USB_init
 15335 ;;		_ringbuf_init
 15336 ;;		_timer0_init
 15337 ;;		_timer1_init
 15338 ;;		_timer3_init
 15339 ;; This function is called by:
 15340 ;;		_main
 15341 ;; This function uses a non-reentrant model
 15342 ;;
 15343                           
 15344                           	psect	text49
 15345  015672                     __ptext49:
 15346                           	opt stack 0
 15347  015672                     _hardware_init:
 15348                           	opt stack 14
 15349                           
 15350                           ;main.c: 83: OSCCONbits.IRCF = 7;
 15351                           
 15352                           ;incstack = 0
 15353  015672  88D3               	bsf	4051,4,c	;volatile
 15354  015674  8AD3               	bsf	4051,5,c	;volatile
 15355  015676  8CD3               	bsf	4051,6,c	;volatile
 15356                           
 15357                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 15358  015678  8C9B               	bsf	3995,6,c	;volatile
 15359                           
 15360                           ;main.c: 85: OSCCONbits.SCS = 0;
 15361  01567A  0EFC               	movlw	-4
 15362  01567C  16D3               	andwf	4051,f,c	;volatile
 15363                           
 15364                           ;main.c: 86: TRISA = 0b00011111;
 15365  01567E  0E1F               	movlw	31
 15366  015680  6E92               	movwf	3986,c	;volatile
 15367                           
 15368                           ;main.c: 87: TRISB = 0b00111111;
 15369  015682  0E3F               	movlw	63
 15370  015684  6E93               	movwf	3987,c	;volatile
 15371                           
 15372                           ;main.c: 88: TRISC = 0b10110010;
 15373  015686  0EB2               	movlw	178
 15374  015688  6E94               	movwf	3988,c	;volatile
 15375                           
 15376                           ;main.c: 89: ANCON0 = 0b11110000;
 15377  01568A  0EF0               	movlw	240
 15378  01568C  010F               	movlb	15	; () banked
 15379  01568E  6F48               	movwf	72,b	;volatile
 15380                           
 15381                           ;main.c: 90: ANCON1 = 0b00001000;
 15382  015690  0E08               	movlw	8
 15383  015692  010F               	movlb	15	; () banked
 15384  015694  6F49               	movwf	73,b	;volatile
 15385                           
 15386                           ; BSR set to: 15
 15387                           ;main.c: 91: INTCON2bits.RBPU = 0;
 15388  015696  9EF1               	bcf	intcon2,7,c	;volatile
 15389                           
 15390                           ; BSR set to: 15
 15391                           ;main.c: 93: timer0_init(0);
 15392  015698  0E00               	movlw	0
 15393  01569A  EC8F  F0B3         	call	_timer0_init
 15394                           
 15395                           ;main.c: 94: timer1_init(0, 2);
 15396  01569E  0E02               	movlw	2
 15397  0156A0  0100               	movlb	0	; () banked
 15398  0156A2  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15399  0156A4  0E00               	movlw	0
 15400  0156A6  ECC0  F0B2         	call	_timer1_init
 15401                           
 15402                           ;main.c: 95: timer3_init(2);
 15403  0156AA  0E02               	movlw	2
 15404  0156AC  ECF4  F0B4         	call	_timer3_init
 15405                           
 15406                           ;main.c: 96: I2C_init();
 15407  0156B0  EC3D  F0B6         	call	_I2C_init	;wreg free
 15408                           
 15409                           ;main.c: 97: I2C_LCD_init();
 15410  0156B4  EC25  F0AE         	call	_I2C_LCD_init	;wreg free
 15411                           
 15412                           ;main.c: 98: RTCC_init();
 15413  0156B8  ECB6  F0B0         	call	_RTCC_init	;wreg free
 15414                           
 15415                           ;main.c: 99: ADC_init(0);
 15416  0156BC  0E00               	movlw	0
 15417  0156BE  ECBF  F0B5         	call	_ADC_init
 15418                           
 15419                           ;main.c: 100: CTMU_init();
 15420  0156C2  EC5F  F0B5         	call	_CTMU_init	;wreg free
 15421                           
 15422                           ;main.c: 102: USB_init();
 15423  0156C6  ECEE  F0B5         	call	_USB_init	;wreg free
 15424                           
 15425                           ;main.c: 103: static uint8_t usbtx[2000];
 15426                           ;main.c: 104: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 15427  0156CA  0EBA               	movlw	low _usb_tx
 15428  0156CC  0100               	movlb	0	; () banked
 15429  0156CE  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15430  0156D0  0E02               	movlw	high _usb_tx
 15431  0156D2  0100               	movlb	0	; () banked
 15432  0156D4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15433  0156D6  0E69               	movlw	low hardware_init@usbtx
 15434  0156D8  0100               	movlb	0	; () banked
 15435  0156DA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15436  0156DC  0E04               	movlw	high hardware_init@usbtx
 15437  0156DE  0100               	movlb	0	; () banked
 15438  0156E0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15439  0156E2  0E07               	movlw	7
 15440  0156E4  0100               	movlb	0	; () banked
 15441  0156E6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15442  0156E8  0ED0               	movlw	208
 15443  0156EA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15444  0156EC  EC6D  F0B2         	call	_ringbuf_init	;wreg free
 15445                           
 15446                           ;main.c: 105: static uint8_t usbrx[100];
 15447                           ;main.c: 106: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 15448  0156F0  0EB2               	movlw	low _usb_rx
 15449  0156F2  0100               	movlb	0	; () banked
 15450  0156F4  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15451  0156F6  0E02               	movlw	high _usb_rx
 15452  0156F8  0100               	movlb	0	; () banked
 15453  0156FA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15454  0156FC  0E00               	movlw	low hardware_init@usbrx
 15455  0156FE  0100               	movlb	0	; () banked
 15456  015700  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15457  015702  0E03               	movlw	high hardware_init@usbrx
 15458  015704  0100               	movlb	0	; () banked
 15459  015706  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15460  015708  0E00               	movlw	0
 15461  01570A  0100               	movlb	0	; () banked
 15462  01570C  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15463  01570E  0E64               	movlw	100
 15464  015710  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15465  015712  EC6D  F0B2         	call	_ringbuf_init	;wreg free
 15466  015716  0012               	return		;funcret
 15467  015718                     __end_of_hardware_init:
 15468                           	opt stack 0
 15469                           tblptru	equ	0xFF8
 15470                           tblptrh	equ	0xFF7
 15471                           tblptrl	equ	0xFF6
 15472                           tablat	equ	0xFF5
 15473                           prodh	equ	0xFF4
 15474                           prodl	equ	0xFF3
 15475                           intcon	equ	0xFF2
 15476                           intcon2	equ	0xFF1
 15477                           postinc0	equ	0xFEE
 15478                           wreg	equ	0xFE8
 15479                           indf1	equ	0xFE7
 15480                           postinc1	equ	0xFE6
 15481                           postdec1	equ	0xFE5
 15482                           fsr1h	equ	0xFE2
 15483                           fsr1l	equ	0xFE1
 15484                           indf2	equ	0xFDF
 15485                           postinc2	equ	0xFDE
 15486                           postdec2	equ	0xFDD
 15487                           plusw2	equ	0xFDB
 15488                           fsr2h	equ	0xFDA
 15489                           fsr2l	equ	0xFD9
 15490                           status	equ	0xFD8
 15491                           
 15492 ;; *************** function _timer3_init *****************
 15493 ;; Defined at:
 15494 ;;		line 72 in file "../My_library/My_PIC.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;  prescaler       1    wreg     unsigned char 
 15497 ;; Auto vars:     Size  Location     Type
 15498 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15499 ;; Return value:  Size  Location     Type
 15500 ;;		None               void
 15501 ;; Registers used:
 15502 ;;		wreg, status,2, status,0
 15503 ;; Tracked objects:
 15504 ;;		On entry : 0/0
 15505 ;;		On exit  : 0/0
 15506 ;;		Unchanged: 0/0
 15507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15512 ;;Total ram usage:        2 bytes
 15513 ;; Hardware stack levels used:    1
 15514 ;; Hardware stack levels required when called:   11
 15515 ;; This function calls:
 15516 ;;		Nothing
 15517 ;; This function is called by:
 15518 ;;		_hardware_init
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           	psect	text50
 15523  0169E8                     __ptext50:
 15524                           	opt stack 0
 15525  0169E8                     _timer3_init:
 15526                           	opt stack 18
 15527                           
 15528                           ;incstack = 0
 15529                           ;timer3_init@prescaler stored from wreg
 15530  0169E8  0100               	movlb	0	; () banked
 15531  0169EA  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15532                           
 15533                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
 15534  0169EC  0E3F               	movlw	-193
 15535  0169EE  1679               	andwf	3961,f,c	;volatile
 15536                           
 15537                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
 15538  0169F0  9679               	bcf	3961,3,c	;volatile
 15539                           
 15540                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
 15541  0169F2  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15542  0169F6  0100               	movlb	0	; () banked
 15543  0169F8  3B60               	swapf	??_timer3_init& (0+255),f,b
 15544  0169FA  5079               	movf	3961,w,c	;volatile
 15545  0169FC  0100               	movlb	0	; () banked
 15546  0169FE  1960               	xorwf	??_timer3_init& (0+255),w,b
 15547  016A00  0BCF               	andlw	-49
 15548  016A02  1960               	xorwf	??_timer3_init& (0+255),w,b
 15549  016A04  6E79               	movwf	3961,c	;volatile
 15550                           
 15551                           ; BSR set to: 0
 15552                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
 15553  016A06  9E79               	bcf	3961,7,c	;volatile
 15554                           
 15555                           ; BSR set to: 0
 15556                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
 15557  016A08  8079               	bsf	3961,0,c	;volatile
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
 15561  016A0A  92A2               	bcf	4002,1,c	;volatile
 15562                           
 15563                           ; BSR set to: 0
 15564                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
 15565  016A0C  92A1               	bcf	4001,1,c	;volatile
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
 15569  016A0E  82A0               	bsf	4000,1,c	;volatile
 15570                           
 15571                           ; BSR set to: 0
 15572                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15573  016A10  8CF2               	bsf	intcon,6,c	;volatile
 15574                           
 15575                           ; BSR set to: 0
 15576  016A12  0012               	return		;funcret
 15577  016A14                     __end_of_timer3_init:
 15578                           	opt stack 0
 15579                           tblptru	equ	0xFF8
 15580                           tblptrh	equ	0xFF7
 15581                           tblptrl	equ	0xFF6
 15582                           tablat	equ	0xFF5
 15583                           prodh	equ	0xFF4
 15584                           prodl	equ	0xFF3
 15585                           intcon	equ	0xFF2
 15586                           intcon2	equ	0xFF1
 15587                           postinc0	equ	0xFEE
 15588                           wreg	equ	0xFE8
 15589                           indf1	equ	0xFE7
 15590                           postinc1	equ	0xFE6
 15591                           postdec1	equ	0xFE5
 15592                           fsr1h	equ	0xFE2
 15593                           fsr1l	equ	0xFE1
 15594                           indf2	equ	0xFDF
 15595                           postinc2	equ	0xFDE
 15596                           postdec2	equ	0xFDD
 15597                           plusw2	equ	0xFDB
 15598                           fsr2h	equ	0xFDA
 15599                           fsr2l	equ	0xFD9
 15600                           status	equ	0xFD8
 15601                           
 15602 ;; *************** function _timer1_init *****************
 15603 ;; Defined at:
 15604 ;;		line 41 in file "../My_library/My_PIC.c"
 15605 ;; Parameters:    Size  Location     Type
 15606 ;;  prescaler       1    wreg     unsigned char 
 15607 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15608 ;; Auto vars:     Size  Location     Type
 15609 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15610 ;; Return value:  Size  Location     Type
 15611 ;;		None               void
 15612 ;; Registers used:
 15613 ;;		wreg, status,2, status,0
 15614 ;; Tracked objects:
 15615 ;;		On entry : 0/0
 15616 ;;		On exit  : 0/0
 15617 ;;		Unchanged: 0/0
 15618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15619 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15622 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15623 ;;Total ram usage:        3 bytes
 15624 ;; Hardware stack levels used:    1
 15625 ;; Hardware stack levels required when called:   11
 15626 ;; This function calls:
 15627 ;;		Nothing
 15628 ;; This function is called by:
 15629 ;;		_hardware_init
 15630 ;; This function uses a non-reentrant model
 15631 ;;
 15632                           
 15633                           	psect	text51
 15634  016580                     __ptext51:
 15635                           	opt stack 0
 15636  016580                     _timer1_init:
 15637                           	opt stack 18
 15638                           
 15639                           ; BSR set to: 0
 15640                           ;incstack = 0
 15641                           ;timer1_init@prescaler stored from wreg
 15642  016580  0100               	movlb	0	; () banked
 15643  016582  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15644                           
 15645                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
 15646  016584  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15647  016588  0100               	movlb	0	; () banked
 15648  01658A  3B61               	swapf	??_timer1_init& (0+255),f,b
 15649  01658C  4761               	rlncf	??_timer1_init& (0+255),f,b
 15650  01658E  4761               	rlncf	??_timer1_init& (0+255),f,b
 15651  016590  50CD               	movf	4045,w,c	;volatile
 15652  016592  0100               	movlb	0	; () banked
 15653  016594  1961               	xorwf	??_timer1_init& (0+255),w,b
 15654  016596  0B3F               	andlw	-193
 15655  016598  1961               	xorwf	??_timer1_init& (0+255),w,b
 15656  01659A  6ECD               	movwf	4045,c	;volatile
 15657                           
 15658                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15659  01659C  0E02               	movlw	2
 15660  01659E  0100               	movlb	0	; () banked
 15661  0165A0  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15662  0165A2  A4D8               	btfss	status,2,c
 15663  0165A4  D002               	goto	l710
 15664                           
 15665                           ; BSR set to: 0
 15666  0165A6  86CD               	bsf	4045,3,c	;volatile
 15667  0165A8  D001               	goto	l11879
 15668  0165AA                     l710:
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
 15672  0165AA  96CD               	bcf	4045,3,c	;volatile
 15673  0165AC                     l11879:
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
 15677  0165AC  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15678  0165B0  0100               	movlb	0	; () banked
 15679  0165B2  3B61               	swapf	??_timer1_init& (0+255),f,b
 15680  0165B4  50CD               	movf	4045,w,c	;volatile
 15681  0165B6  0100               	movlb	0	; () banked
 15682  0165B8  1961               	xorwf	??_timer1_init& (0+255),w,b
 15683  0165BA  0BCF               	andlw	-49
 15684  0165BC  1961               	xorwf	??_timer1_init& (0+255),w,b
 15685  0165BE  6ECD               	movwf	4045,c	;volatile
 15686                           
 15687                           ; BSR set to: 0
 15688                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
 15689  0165C0  84CD               	bsf	4045,2,c	;volatile
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
 15693  0165C2  92CD               	bcf	4045,1,c	;volatile
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
 15697  0165C4  80CD               	bsf	4045,0,c	;volatile
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
 15701  0165C6  909F               	bcf	3999,0,c	;volatile
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
 15705  0165C8  909E               	bcf	3998,0,c	;volatile
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
 15709  0165CA  809D               	bsf	3997,0,c	;volatile
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
 15713  0165CC  8CF2               	bsf	intcon,6,c	;volatile
 15714                           
 15715                           ; BSR set to: 0
 15716  0165CE  0012               	return		;funcret
 15717  0165D0                     __end_of_timer1_init:
 15718                           	opt stack 0
 15719                           tblptru	equ	0xFF8
 15720                           tblptrh	equ	0xFF7
 15721                           tblptrl	equ	0xFF6
 15722                           tablat	equ	0xFF5
 15723                           prodh	equ	0xFF4
 15724                           prodl	equ	0xFF3
 15725                           intcon	equ	0xFF2
 15726                           intcon2	equ	0xFF1
 15727                           postinc0	equ	0xFEE
 15728                           wreg	equ	0xFE8
 15729                           indf1	equ	0xFE7
 15730                           postinc1	equ	0xFE6
 15731                           postdec1	equ	0xFE5
 15732                           fsr1h	equ	0xFE2
 15733                           fsr1l	equ	0xFE1
 15734                           indf2	equ	0xFDF
 15735                           postinc2	equ	0xFDE
 15736                           postdec2	equ	0xFDD
 15737                           plusw2	equ	0xFDB
 15738                           fsr2h	equ	0xFDA
 15739                           fsr2l	equ	0xFD9
 15740                           status	equ	0xFD8
 15741                           
 15742 ;; *************** function _timer0_init *****************
 15743 ;; Defined at:
 15744 ;;		line 6 in file "../My_library/My_PIC.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;  prescaler       1    wreg     unsigned char 
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15749 ;; Return value:  Size  Location     Type
 15750 ;;		None               void
 15751 ;; Registers used:
 15752 ;;		wreg, status,2, status,0
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15760 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15762 ;;Total ram usage:        2 bytes
 15763 ;; Hardware stack levels used:    1
 15764 ;; Hardware stack levels required when called:   11
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		_hardware_init
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           	psect	text52
 15773  01671E                     __ptext52:
 15774                           	opt stack 0
 15775  01671E                     _timer0_init:
 15776                           	opt stack 18
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;incstack = 0
 15780                           ;timer0_init@prescaler stored from wreg
 15781  01671E  0100               	movlb	0	; () banked
 15782  016720  6F61               	movwf	timer0_init@prescaler& (0+255),b
 15783                           
 15784                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
 15785  016722  8ED5               	bsf	4053,7,c	;volatile
 15786                           
 15787                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
 15788  016724  8CD5               	bsf	4053,6,c	;volatile
 15789                           
 15790                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
 15791  016726  9AD5               	bcf	4053,5,c	;volatile
 15792                           
 15793                           ;My_PIC.c: 10: if (prescaler == 0) {
 15794  016728  0100               	movlb	0	; () banked
 15795  01672A  5161               	movf	timer0_init@prescaler& (0+255),w,b
 15796  01672C  0100               	movlb	0	; () banked
 15797  01672E  A4D8               	btfss	status,2,c
 15798  016730  D002               	goto	l705
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
 15802  016732  86D5               	bsf	4053,3,c	;volatile
 15803                           
 15804                           ;My_PIC.c: 12: } else {
 15805  016734  D00C               	goto	l11867
 15806  016736                     l705:
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
 15810  016736  96D5               	bcf	4053,3,c	;volatile
 15811                           
 15812                           ; BSR set to: 0
 15813                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
 15814  016738  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 15815  01673C  0EFF               	movlw	255
 15816  01673E  0100               	movlb	0	; () banked
 15817  016740  2760               	addwf	??_timer0_init& (0+255),f,b
 15818  016742  50D5               	movf	4053,w,c	;volatile
 15819  016744  0100               	movlb	0	; () banked
 15820  016746  1960               	xorwf	??_timer0_init& (0+255),w,b
 15821  016748  0BF8               	andlw	-8
 15822  01674A  1960               	xorwf	??_timer0_init& (0+255),w,b
 15823  01674C  6ED5               	movwf	4053,c	;volatile
 15824  01674E                     l11867:
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;My_PIC.c: 15: }
 15828                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
 15829  01674E  8AF2               	bsf	intcon,5,c	;volatile
 15830                           
 15831                           ; BSR set to: 0
 15832                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
 15833  016750  94F2               	bcf	intcon,2,c	;volatile
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
 15837  016752  94F1               	bcf	intcon2,2,c	;volatile
 15838                           
 15839                           ; BSR set to: 0
 15840                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
 15841  016754  8CF2               	bsf	intcon,6,c	;volatile
 15842                           
 15843                           ; BSR set to: 0
 15844  016756  0012               	return		;funcret
 15845  016758                     __end_of_timer0_init:
 15846                           	opt stack 0
 15847                           tblptru	equ	0xFF8
 15848                           tblptrh	equ	0xFF7
 15849                           tblptrl	equ	0xFF6
 15850                           tablat	equ	0xFF5
 15851                           prodh	equ	0xFF4
 15852                           prodl	equ	0xFF3
 15853                           intcon	equ	0xFF2
 15854                           intcon2	equ	0xFF1
 15855                           postinc0	equ	0xFEE
 15856                           wreg	equ	0xFE8
 15857                           indf1	equ	0xFE7
 15858                           postinc1	equ	0xFE6
 15859                           postdec1	equ	0xFE5
 15860                           fsr1h	equ	0xFE2
 15861                           fsr1l	equ	0xFE1
 15862                           indf2	equ	0xFDF
 15863                           postinc2	equ	0xFDE
 15864                           postdec2	equ	0xFDD
 15865                           plusw2	equ	0xFDB
 15866                           fsr2h	equ	0xFDA
 15867                           fsr2l	equ	0xFD9
 15868                           status	equ	0xFD8
 15869                           
 15870 ;; *************** function _ringbuf_init *****************
 15871 ;; Defined at:
 15872 ;;		line 5 in file "../My_library/My_ringbuf.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 15875 ;;		 -> terminal_task@command(8), usb_rx(8), usb_tx(8), 
 15876 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 15877 ;;		 -> terminal_task@buf(100), hardware_init@usbrx(100), hardware_init@usbtx(2000), 
 15878 ;;  bufsize         2    4[BANK0 ] unsigned int 
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;		None
 15881 ;; Return value:  Size  Location     Type
 15882 ;;		None               void
 15883 ;; Registers used:
 15884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15890 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15893 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15894 ;;Total ram usage:        6 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:   11
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		_hardware_init
 15901 ;;		_terminal_task
 15902 ;; This function uses a non-reentrant model
 15903 ;;
 15904                           
 15905                           	psect	text53
 15906  0164DA                     __ptext53:
 15907                           	opt stack 0
 15908  0164DA                     _ringbuf_init:
 15909                           	opt stack 18
 15910                           
 15911                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;incstack = 0
 15915  0164DA  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 15916  0164DE  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 15917  0164E2  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 15918  0164E6  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 15919                           
 15920                           ;My_ringbuf.c: 7: rb->size = bufsize;
 15921  0164EA  0100               	movlb	0	; () banked
 15922  0164EC  EE20 F002          	lfsr	2,2
 15923  0164F0  5160               	movf	ringbuf_init@rb& (0+255),w,b
 15924  0164F2  26D9               	addwf	fsr2l,f,c
 15925  0164F4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 15926  0164F6  22DA               	addwfc	fsr2h,f,c
 15927  0164F8  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 15928  0164FC  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;My_ringbuf.c: 8: rb->head = 0;
 15932  016500  0100               	movlb	0	; () banked
 15933  016502  EE20 F004          	lfsr	2,4
 15934  016506  5160               	movf	ringbuf_init@rb& (0+255),w,b
 15935  016508  26D9               	addwf	fsr2l,f,c
 15936  01650A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 15937  01650C  22DA               	addwfc	fsr2h,f,c
 15938  01650E  0E00               	movlw	0
 15939  016510  6EDE               	movwf	postinc2,c
 15940  016512  0E00               	movlw	0
 15941  016514  6EDD               	movwf	postdec2,c
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;My_ringbuf.c: 9: rb->tail = 0;
 15945  016516  0100               	movlb	0	; () banked
 15946  016518  EE20 F006          	lfsr	2,6
 15947  01651C  5160               	movf	ringbuf_init@rb& (0+255),w,b
 15948  01651E  26D9               	addwf	fsr2l,f,c
 15949  016520  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 15950  016522  22DA               	addwfc	fsr2h,f,c
 15951  016524  0E00               	movlw	0
 15952  016526  6EDE               	movwf	postinc2,c
 15953  016528  0E00               	movlw	0
 15954  01652A  6EDD               	movwf	postdec2,c
 15955                           
 15956                           ; BSR set to: 0
 15957  01652C  0012               	return		;funcret
 15958  01652E                     __end_of_ringbuf_init:
 15959                           	opt stack 0
 15960                           tblptru	equ	0xFF8
 15961                           tblptrh	equ	0xFF7
 15962                           tblptrl	equ	0xFF6
 15963                           tablat	equ	0xFF5
 15964                           prodh	equ	0xFF4
 15965                           prodl	equ	0xFF3
 15966                           intcon	equ	0xFF2
 15967                           intcon2	equ	0xFF1
 15968                           postinc0	equ	0xFEE
 15969                           wreg	equ	0xFE8
 15970                           indf1	equ	0xFE7
 15971                           postinc1	equ	0xFE6
 15972                           postdec1	equ	0xFE5
 15973                           fsr1h	equ	0xFE2
 15974                           fsr1l	equ	0xFE1
 15975                           indf2	equ	0xFDF
 15976                           postinc2	equ	0xFDE
 15977                           postdec2	equ	0xFDD
 15978                           plusw2	equ	0xFDB
 15979                           fsr2h	equ	0xFDA
 15980                           fsr2l	equ	0xFD9
 15981                           status	equ	0xFD8
 15982                           
 15983 ;; *************** function _USB_init *****************
 15984 ;; Defined at:
 15985 ;;		line 11 in file "../My_library/My_usb_cdc.c"
 15986 ;; Parameters:    Size  Location     Type
 15987 ;;		None
 15988 ;; Auto vars:     Size  Location     Type
 15989 ;;		None
 15990 ;; Return value:  Size  Location     Type
 15991 ;;		None               void
 15992 ;; Registers used:
 15993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15994 ;; Tracked objects:
 15995 ;;		On entry : 0/0
 15996 ;;		On exit  : 0/0
 15997 ;;		Unchanged: 0/0
 15998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16003 ;;Total ram usage:        0 bytes
 16004 ;; Hardware stack levels used:    1
 16005 ;; Hardware stack levels required when called:   13
 16006 ;; This function calls:
 16007 ;;		_USBDeviceAttach
 16008 ;;		_USBDeviceInit
 16009 ;; This function is called by:
 16010 ;;		_hardware_init
 16011 ;; This function uses a non-reentrant model
 16012 ;;
 16013                           
 16014                           	psect	text54
 16015  016BDC                     __ptext54:
 16016                           	opt stack 0
 16017  016BDC                     _USB_init:
 16018                           	opt stack 16
 16019                           
 16020                           ;My_usb_cdc.c: 12: USBDeviceInit();
 16021                           
 16022                           ; BSR set to: 0
 16023                           ;incstack = 0
 16024  016BDC  EC4E  F099         	call	_USBDeviceInit	;wreg free
 16025                           
 16026                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 16027  016BE0  ECE5  F0B3         	call	_USBDeviceAttach	;wreg free
 16028                           
 16029                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 16030  016BE4  0E00               	movlw	0
 16031  016BE6  0101               	movlb	1	; () banked
 16032  016BE8  6F88               	movwf	_line_coding& (0+255),b
 16033  016BEA  0EC2               	movlw	194
 16034  016BEC  6F89               	movwf	(_line_coding+1)& (0+255),b
 16035  016BEE  0E01               	movlw	1
 16036  016BF0  6F8A               	movwf	(_line_coding+2)& (0+255),b
 16037  016BF2  0E00               	movlw	0
 16038  016BF4  6F8B               	movwf	(_line_coding+3)& (0+255),b
 16039                           
 16040                           ; BSR set to: 1
 16041  016BF6  0012               	return		;funcret
 16042  016BF8                     __end_of_USB_init:
 16043                           	opt stack 0
 16044                           tblptru	equ	0xFF8
 16045                           tblptrh	equ	0xFF7
 16046                           tblptrl	equ	0xFF6
 16047                           tablat	equ	0xFF5
 16048                           prodh	equ	0xFF4
 16049                           prodl	equ	0xFF3
 16050                           intcon	equ	0xFF2
 16051                           intcon2	equ	0xFF1
 16052                           postinc0	equ	0xFEE
 16053                           wreg	equ	0xFE8
 16054                           indf1	equ	0xFE7
 16055                           postinc1	equ	0xFE6
 16056                           postdec1	equ	0xFE5
 16057                           fsr1h	equ	0xFE2
 16058                           fsr1l	equ	0xFE1
 16059                           indf2	equ	0xFDF
 16060                           postinc2	equ	0xFDE
 16061                           postdec2	equ	0xFDD
 16062                           plusw2	equ	0xFDB
 16063                           fsr2h	equ	0xFDA
 16064                           fsr2l	equ	0xFD9
 16065                           status	equ	0xFD8
 16066                           
 16067 ;; *************** function _USBDeviceInit *****************
 16068 ;; Defined at:
 16069 ;;		line 298 in file "../My_library/usb/usb_device.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;		None
 16072 ;; Auto vars:     Size  Location     Type
 16073 ;;  i               1    8[BANK0 ] unsigned char 
 16074 ;; Return value:  Size  Location     Type
 16075 ;;		None               void
 16076 ;; Registers used:
 16077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16078 ;; Tracked objects:
 16079 ;;		On entry : 0/0
 16080 ;;		On exit  : 0/0
 16081 ;;		Unchanged: 0/0
 16082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;Total ram usage:        1 bytes
 16088 ;; Hardware stack levels used:    1
 16089 ;; Hardware stack levels required when called:   12
 16090 ;; This function calls:
 16091 ;;		_memset
 16092 ;; This function is called by:
 16093 ;;		_USB_init
 16094 ;; This function uses a non-reentrant model
 16095 ;;
 16096                           
 16097                           	psect	text55
 16098  01329C                     __ptext55:
 16099                           	opt stack 0
 16100  01329C                     _USBDeviceInit:
 16101                           	opt stack 16
 16102                           
 16103                           ;usb_device.c: 300: uint8_t i;
 16104                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 16105                           
 16106                           ; BSR set to: 1
 16107                           ;incstack = 0
 16108  01329C  98A0               	bcf	4000,4,c	;volatile
 16109                           
 16110                           ;usb_device.c: 305: {UEIR = 0;};
 16111  01329E  0E00               	movlw	0
 16112  0132A0  6E63               	movwf	3939,c	;volatile
 16113                           
 16114                           ;usb_device.c: 308: {UIR = 0;};
 16115  0132A2  0E00               	movlw	0
 16116  0132A4  6E62               	movwf	3938,c	;volatile
 16117                           
 16118                           ;usb_device.c: 311: UEP0 = 0;
 16119  0132A6  0E00               	movlw	0
 16120  0132A8  010F               	movlb	15	; () banked
 16121  0132AA  6F26               	movwf	38,b	;volatile
 16122                           
 16123                           ; BSR set to: 15
 16124                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 16125  0132AC  0E27               	movlw	39
 16126  0132AE  0100               	movlb	0	; () banked
 16127  0132B0  6F60               	movwf	memset@p1& (0+255),b
 16128  0132B2  0E0F               	movlw	15
 16129  0132B4  0100               	movlb	0	; () banked
 16130  0132B6  6F61               	movwf	(memset@p1+1)& (0+255),b
 16131  0132B8  0E00               	movlw	0
 16132  0132BA  0100               	movlb	0	; () banked
 16133  0132BC  6F63               	movwf	(memset@c+1)& (0+255),b
 16134  0132BE  0E00               	movlw	0
 16135  0132C0  6F62               	movwf	memset@c& (0+255),b
 16136  0132C2  0E00               	movlw	0
 16137  0132C4  0100               	movlb	0	; () banked
 16138  0132C6  6F65               	movwf	(memset@n+1)& (0+255),b
 16139  0132C8  0E02               	movlw	2
 16140  0132CA  6F64               	movwf	memset@n& (0+255),b
 16141  0132CC  EC38  F0B4         	call	_memset	;wreg free
 16142                           
 16143                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16144  0132D0  0E16               	movlw	22
 16145  0132D2  010F               	movlb	15	; () banked
 16146  0132D4  6F39               	movwf	57,b	;volatile
 16147                           
 16148                           ; BSR set to: 15
 16149  0132D6  0E9F               	movlw	159
 16150  0132D8  010F               	movlb	15	; () banked
 16151  0132DA  6F37               	movwf	55,b	;volatile
 16152                           
 16153                           ; BSR set to: 15
 16154  0132DC  0E7B               	movlw	123
 16155  0132DE  010F               	movlb	15	; () banked
 16156  0132E0  6F36               	movwf	54,b	;volatile
 16157                           
 16158                           ; BSR set to: 15
 16159                           ;usb_device.c: 318: ;
 16160                           ;usb_device.c: 321: ;
 16161                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16162  0132E2  0E00               	movlw	0
 16163  0132E4  0100               	movlb	0	; () banked
 16164  0132E6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16165  0132E8                     l11343:
 16166                           
 16167                           ; BSR set to: 0
 16168  0132E8  0E0B               	movlw	11
 16169  0132EA  0100               	movlb	0	; () banked
 16170  0132EC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16171  0132EE  D001               	goto	l11347
 16172  0132F0  D010               	goto	l1439
 16173  0132F2                     l11347:
 16174                           
 16175                           ; BSR set to: 0
 16176                           ;usb_device.c: 325: {
 16177                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 16178  0132F2  0100               	movlb	0	; () banked
 16179  0132F4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16180  0132F6  0D04               	mullw	4
 16181  0132F8  0E00               	movlw	0
 16182  0132FA  24F3               	addwf	prodl,w,c
 16183  0132FC  6ED9               	movwf	fsr2l,c
 16184  0132FE  0E0D               	movlw	13
 16185  013300  20F4               	addwfc	prodh,w,c
 16186  013302  6EDA               	movwf	fsr2h,c
 16187  013304  6ADE               	clrf	postinc2,c
 16188  013306  6ADE               	clrf	postinc2,c
 16189  013308  6ADE               	clrf	postinc2,c
 16190  01330A  6ADD               	clrf	postdec2,c
 16191                           
 16192                           ; BSR set to: 0
 16193  01330C  0100               	movlb	0	; () banked
 16194  01330E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16195  013310  D7EB               	goto	l11343
 16196  013312                     l1439:
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;usb_device.c: 327: }
 16200                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 16201  013312  8C65               	bsf	3941,6,c	;volatile
 16202                           
 16203                           ; BSR set to: 0
 16204                           ;usb_device.c: 333: UADDR = 0x00;
 16205  013314  0E00               	movlw	0
 16206  013316  010F               	movlb	15	; () banked
 16207  013318  6F38               	movwf	56,b	;volatile
 16208                           
 16209                           ; BSR set to: 15
 16210                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 16211  01331A  9865               	bcf	3941,4,c	;volatile
 16212                           
 16213                           ; BSR set to: 15
 16214                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 16215  01331C  9C65               	bcf	3941,6,c	;volatile
 16216                           
 16217                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 16218  01331E  D00C               	goto	l11367
 16219  013320                     l11359:
 16220                           
 16221                           ;usb_device.c: 343: {
 16222                           ;usb_device.c: 344: (UIR &= 0xF7);
 16223  013320  9662               	bcf	3938,3,c	;volatile
 16224                           
 16225                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 16226  013322  0E00               	movlw	0
 16227  013324  0100               	movlb	0	; () banked
 16228  013326  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 16232  013328  0E00               	movlw	0
 16233  01332A  0100               	movlb	0	; () banked
 16234  01332C  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16235                           
 16236                           ; BSR set to: 0
 16237                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 16238  01332E  0E00               	movlw	0
 16239  013330  0100               	movlb	0	; () banked
 16240  013332  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16241  013334  0E00               	movlw	0
 16242  013336  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16243  013338                     l11367:
 16244  013338  B662               	btfsc	3938,3,c	;volatile
 16245  01333A  D7F2               	goto	l11359
 16246                           
 16247                           ;usb_device.c: 349: }
 16248                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 16249  01333C  0E01               	movlw	1
 16250  01333E  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16251                           
 16252                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 16253  013340  0E01               	movlw	1
 16254  013342  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16255                           
 16256                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 16257  013344  0E00               	movlw	0
 16258  013346  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16259                           
 16260                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 16261  013348  0E00               	movlw	0
 16262  01334A  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16263                           
 16264                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 16265  01334C  0E00               	movlw	0
 16266  01334E  0101               	movlb	1	; () banked
 16267  013350  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16268                           
 16269                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 16270  013352  0E00               	movlw	0
 16271  013354  0100               	movlb	0	; () banked
 16272  013356  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16273  013358                     l11371:
 16274                           
 16275                           ; BSR set to: 0
 16276  013358  0E02               	movlw	2
 16277  01335A  0100               	movlb	0	; () banked
 16278  01335C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16279  01335E  D001               	goto	l11375
 16280  013360  D033               	goto	l11381
 16281  013362                     l11375:
 16282                           
 16283                           ; BSR set to: 0
 16284                           ;usb_device.c: 363: {
 16285                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 16286  013362  0100               	movlb	0	; () banked
 16287  013364  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16288  013366  0D02               	mullw	2
 16289  013368  0EF5               	movlw	low _pBDTEntryIn
 16290  01336A  24F3               	addwf	prodl,w,c
 16291  01336C  6ED9               	movwf	fsr2l,c
 16292  01336E  0E00               	movlw	high _pBDTEntryIn
 16293  013370  20F4               	addwfc	prodh,w,c
 16294  013372  6EDA               	movwf	fsr2h,c
 16295  013374  0E00               	movlw	0
 16296  013376  6EDE               	movwf	postinc2,c
 16297  013378  0E00               	movlw	0
 16298  01337A  6EDD               	movwf	postdec2,c
 16299                           
 16300                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 16301  01337C  0100               	movlb	0	; () banked
 16302  01337E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16303  013380  0D02               	mullw	2
 16304  013382  0E00               	movlw	low _pBDTEntryOut
 16305  013384  24F3               	addwf	prodl,w,c
 16306  013386  6ED9               	movwf	fsr2l,c
 16307  013388  0E01               	movlw	high _pBDTEntryOut
 16308  01338A  20F4               	addwfc	prodh,w,c
 16309  01338C  6EDA               	movwf	fsr2h,c
 16310  01338E  0E00               	movlw	0
 16311  013390  6EDE               	movwf	postinc2,c
 16312  013392  0E00               	movlw	0
 16313  013394  6EDD               	movwf	postdec2,c
 16314                           
 16315                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 16316  013396  0100               	movlb	0	; () banked
 16317  013398  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16318  01339A  0D01               	mullw	1
 16319  01339C  0E01               	movlw	low _ep_data_in
 16320  01339E  24F3               	addwf	prodl,w,c
 16321  0133A0  6ED9               	movwf	fsr2l,c
 16322  0133A2  0E00               	movlw	high _ep_data_in
 16323  0133A4  20F4               	addwfc	prodh,w,c
 16324  0133A6  6EDA               	movwf	fsr2h,c
 16325  0133A8  0E00               	movlw	0
 16326  0133AA  6EDF               	movwf	indf2,c
 16327                           
 16328                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 16329  0133AC  0100               	movlb	0	; () banked
 16330  0133AE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16331  0133B0  0D01               	mullw	1
 16332  0133B2  0E04               	movlw	low _ep_data_out
 16333  0133B4  24F3               	addwf	prodl,w,c
 16334  0133B6  6ED9               	movwf	fsr2l,c
 16335  0133B8  0E00               	movlw	high _ep_data_out
 16336  0133BA  20F4               	addwfc	prodh,w,c
 16337  0133BC  6EDA               	movwf	fsr2h,c
 16338  0133BE  0E00               	movlw	0
 16339  0133C0  6EDF               	movwf	indf2,c
 16340                           
 16341                           ; BSR set to: 0
 16342  0133C2  0100               	movlb	0	; () banked
 16343  0133C4  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16344  0133C6  D7C8               	goto	l11371
 16345  0133C8                     l11381:
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;usb_device.c: 368: }
 16349                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16350  0133C8  0E08               	movlw	8
 16351  0133CA  0100               	movlb	0	; () banked
 16352  0133CC  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16353  0133CE  0E0D               	movlw	13
 16354  0133D0  0100               	movlb	0	; () banked
 16355  0133D2  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 16359  0133D4  0E16               	movlw	22
 16360  0133D6  010F               	movlb	15	; () banked
 16361  0133D8  6F26               	movwf	38,b	;volatile
 16362                           
 16363                           ; BSR set to: 15
 16364                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16365  0133DA  0E0D               	movlw	13
 16366  0133DC  010D               	movlb	13	; () banked
 16367  0133DE  6F03               	movwf	3,b	;volatile
 16368  0133E0  0E30               	movlw	48
 16369  0133E2  6F02               	movwf	2,b	;volatile
 16370                           
 16371                           ; BSR set to: 13
 16372                           ;usb_device.c: 376: BDT[0].CNT = 8;
 16373  0133E4  0E08               	movlw	8
 16374  0133E6  010D               	movlb	13	; () banked
 16375  0133E8  6F01               	movwf	1,b	;volatile
 16376                           
 16377                           ; BSR set to: 13
 16378                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 16379  0133EA  0E04               	movlw	4
 16380  0133EC  010D               	movlb	13	; () banked
 16381  0133EE  6F00               	movwf	0,b	;volatile
 16382                           
 16383                           ; BSR set to: 13
 16384                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 16385  0133F0  010D               	movlb	13	; () banked
 16386  0133F2  8F00               	bsf	0,7,b	;volatile
 16387                           
 16388                           ; BSR set to: 13
 16389                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 16390  0133F4  0E00               	movlw	0
 16391  0133F6  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16392                           
 16393                           ; BSR set to: 13
 16394                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 16395  0133F8  0E00               	movlw	0
 16396  0133FA  6E14               	movwf	_USBDeviceState,c	;volatile
 16397                           
 16398                           ; BSR set to: 13
 16399  0133FC  0012               	return		;funcret
 16400  0133FE                     __end_of_USBDeviceInit:
 16401                           	opt stack 0
 16402                           tblptru	equ	0xFF8
 16403                           tblptrh	equ	0xFF7
 16404                           tblptrl	equ	0xFF6
 16405                           tablat	equ	0xFF5
 16406                           prodh	equ	0xFF4
 16407                           prodl	equ	0xFF3
 16408                           intcon	equ	0xFF2
 16409                           intcon2	equ	0xFF1
 16410                           postinc0	equ	0xFEE
 16411                           wreg	equ	0xFE8
 16412                           indf1	equ	0xFE7
 16413                           postinc1	equ	0xFE6
 16414                           postdec1	equ	0xFE5
 16415                           fsr1h	equ	0xFE2
 16416                           fsr1l	equ	0xFE1
 16417                           indf2	equ	0xFDF
 16418                           postinc2	equ	0xFDE
 16419                           postdec2	equ	0xFDD
 16420                           plusw2	equ	0xFDB
 16421                           fsr2h	equ	0xFDA
 16422                           fsr2l	equ	0xFD9
 16423                           status	equ	0xFD8
 16424                           
 16425 ;; *************** function _memset *****************
 16426 ;; Defined at:
 16427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;  p1              2    0[BANK0 ] PTR void 
 16430 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16431 ;;  c               2    2[BANK0 ] int 
 16432 ;;  n               2    4[BANK0 ] unsigned int 
 16433 ;; Auto vars:     Size  Location     Type
 16434 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16435 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16436 ;; Return value:  Size  Location     Type
 16437 ;;                  2    0[BANK0 ] PTR void 
 16438 ;; Registers used:
 16439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16440 ;; Tracked objects:
 16441 ;;		On entry : 0/0
 16442 ;;		On exit  : 0/0
 16443 ;;		Unchanged: 0/0
 16444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16445 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16448 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16449 ;;Total ram usage:        8 bytes
 16450 ;; Hardware stack levels used:    1
 16451 ;; Hardware stack levels required when called:   11
 16452 ;; This function calls:
 16453 ;;		Nothing
 16454 ;; This function is called by:
 16455 ;;		_USBDeviceInit
 16456 ;; This function uses a non-reentrant model
 16457 ;;
 16458                           
 16459                           	psect	text56
 16460  016870                     __ptext56:
 16461                           	opt stack 0
 16462  016870                     _memset:
 16463                           	opt stack 16
 16464                           
 16465                           ; BSR set to: 13
 16466                           ;incstack = 0
 16467  016870  C060  F066         	movff	memset@p1,memset@p
 16468  016874  C061  F067         	movff	memset@p1+1,memset@p+1
 16469  016878  D009               	goto	l10867
 16470  01687A                     l10863:
 16471  01687A  C066  FFD9         	movff	memset@p,fsr2l
 16472  01687E  C067  FFDA         	movff	memset@p+1,fsr2h
 16473  016882  C062  FFDF         	movff	memset@c,indf2
 16474  016886  0100               	movlb	0	; () banked
 16475  016888  4B66               	infsnz	memset@p& (0+255),f,b
 16476  01688A  2B67               	incf	(memset@p+1)& (0+255),f,b
 16477  01688C                     l10867:
 16478  01688C  0100               	movlb	0	; () banked
 16479  01688E  0764               	decf	memset@n& (0+255),f,b
 16480  016890  A0D8               	btfss	status,0,c
 16481  016892  0765               	decf	(memset@n+1)& (0+255),f,b
 16482  016894  0100               	movlb	0	; () banked
 16483  016896  2964               	incf	memset@n& (0+255),w,b
 16484  016898  E1F0               	bnz	l10863
 16485  01689A  0100               	movlb	0	; () banked
 16486  01689C  2965               	incf	(memset@n+1)& (0+255),w,b
 16487  01689E  B4D8               	btfsc	status,2,c
 16488  0168A0  0012               	return	
 16489  0168A2  D7EB               	goto	l10863
 16490  0168A4                     __end_of_memset:
 16491                           	opt stack 0
 16492                           tblptru	equ	0xFF8
 16493                           tblptrh	equ	0xFF7
 16494                           tblptrl	equ	0xFF6
 16495                           tablat	equ	0xFF5
 16496                           prodh	equ	0xFF4
 16497                           prodl	equ	0xFF3
 16498                           intcon	equ	0xFF2
 16499                           intcon2	equ	0xFF1
 16500                           postinc0	equ	0xFEE
 16501                           wreg	equ	0xFE8
 16502                           indf1	equ	0xFE7
 16503                           postinc1	equ	0xFE6
 16504                           postdec1	equ	0xFE5
 16505                           fsr1h	equ	0xFE2
 16506                           fsr1l	equ	0xFE1
 16507                           indf2	equ	0xFDF
 16508                           postinc2	equ	0xFDE
 16509                           postdec2	equ	0xFDD
 16510                           plusw2	equ	0xFDB
 16511                           fsr2h	equ	0xFDA
 16512                           fsr2l	equ	0xFD9
 16513                           status	equ	0xFD8
 16514                           
 16515 ;; *************** function _USBDeviceAttach *****************
 16516 ;; Defined at:
 16517 ;;		line 1352 in file "../My_library/usb/usb_device.c"
 16518 ;; Parameters:    Size  Location     Type
 16519 ;;		None
 16520 ;; Auto vars:     Size  Location     Type
 16521 ;;		None
 16522 ;; Return value:  Size  Location     Type
 16523 ;;		None               void
 16524 ;; Registers used:
 16525 ;;		wreg, status,2
 16526 ;; Tracked objects:
 16527 ;;		On entry : 0/0
 16528 ;;		On exit  : 0/0
 16529 ;;		Unchanged: 0/0
 16530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16535 ;;Total ram usage:        0 bytes
 16536 ;; Hardware stack levels used:    1
 16537 ;; Hardware stack levels required when called:   11
 16538 ;; This function calls:
 16539 ;;		Nothing
 16540 ;; This function is called by:
 16541 ;;		_USB_init
 16542 ;; This function uses a non-reentrant model
 16543 ;;
 16544                           
 16545                           	psect	text57
 16546  0167CA                     __ptext57:
 16547                           	opt stack 0
 16548  0167CA                     _USBDeviceAttach:
 16549                           	opt stack 17
 16550                           
 16551                           ;usb_device.c: 1356: {
 16552                           ;usb_device.c: 1357: if(1 == 1)
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;incstack = 0
 16556  0167CA  5014               	movf	_USBDeviceState,w,c	;volatile
 16557  0167CC  A4D8               	btfss	status,2,c
 16558  0167CE  0012               	return	
 16559                           
 16560                           ;usb_device.c: 1358: {
 16561                           ;usb_device.c: 1360: UCON = 0;
 16562  0167D0  0E00               	movlw	0
 16563  0167D2  6E65               	movwf	3941,c	;volatile
 16564                           
 16565                           ;usb_device.c: 1363: UIE = 0;
 16566  0167D4  0E00               	movlw	0
 16567  0167D6  010F               	movlb	15	; () banked
 16568  0167D8  6F36               	movwf	54,b	;volatile
 16569                           
 16570                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16571  0167DA  0E16               	movlw	22
 16572  0167DC  010F               	movlb	15	; () banked
 16573  0167DE  6F39               	movwf	57,b	;volatile
 16574  0167E0  0E9F               	movlw	159
 16575  0167E2  010F               	movlb	15	; () banked
 16576  0167E4  6F37               	movwf	55,b	;volatile
 16577  0167E6  0E7B               	movlw	123
 16578  0167E8  010F               	movlb	15	; () banked
 16579  0167EA  6F36               	movwf	54,b	;volatile
 16580                           
 16581                           ; BSR set to: 15
 16582                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16583  0167EC  8ED0               	bsf	4048,7,c	;volatile
 16584                           
 16585                           ; BSR set to: 15
 16586  0167EE  88A2               	bsf	4002,4,c	;volatile
 16587                           
 16588                           ; BSR set to: 15
 16589  0167F0  88A0               	bsf	4000,4,c	;volatile
 16590                           
 16591                           ; BSR set to: 15
 16592  0167F2  8EF2               	bsf	intcon,7,c	;volatile
 16593                           
 16594                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16595  0167F4  D001               	goto	l1500
 16596  0167F6                     l1501:
 16597  0167F6  8665               	bsf	3941,3,c	;volatile
 16598  0167F8                     l1500:
 16599  0167F8  A665               	btfss	3941,3,c	;volatile
 16600  0167FA  D7FD               	goto	l1501
 16601                           
 16602                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 16603  0167FC  0E01               	movlw	1
 16604  0167FE  6E14               	movwf	_USBDeviceState,c	;volatile
 16605  016800  0012               	return	
 16606  016802                     __end_of_USBDeviceAttach:
 16607                           	opt stack 0
 16608                           tblptru	equ	0xFF8
 16609                           tblptrh	equ	0xFF7
 16610                           tblptrl	equ	0xFF6
 16611                           tablat	equ	0xFF5
 16612                           prodh	equ	0xFF4
 16613                           prodl	equ	0xFF3
 16614                           intcon	equ	0xFF2
 16615                           intcon2	equ	0xFF1
 16616                           postinc0	equ	0xFEE
 16617                           wreg	equ	0xFE8
 16618                           indf1	equ	0xFE7
 16619                           postinc1	equ	0xFE6
 16620                           postdec1	equ	0xFE5
 16621                           fsr1h	equ	0xFE2
 16622                           fsr1l	equ	0xFE1
 16623                           indf2	equ	0xFDF
 16624                           postinc2	equ	0xFDE
 16625                           postdec2	equ	0xFDD
 16626                           plusw2	equ	0xFDB
 16627                           fsr2h	equ	0xFDA
 16628                           fsr2l	equ	0xFD9
 16629                           status	equ	0xFD8
 16630                           
 16631 ;; *************** function _RTCC_init *****************
 16632 ;; Defined at:
 16633 ;;		line 22 in file "../My_library/My_RTCC.c"
 16634 ;; Parameters:    Size  Location     Type
 16635 ;;		None
 16636 ;; Auto vars:     Size  Location     Type
 16637 ;;		None
 16638 ;; Return value:  Size  Location     Type
 16639 ;;		None               void
 16640 ;; Registers used:
 16641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16642 ;; Tracked objects:
 16643 ;;		On entry : 0/0
 16644 ;;		On exit  : 0/0
 16645 ;;		Unchanged: 0/0
 16646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16651 ;;Total ram usage:        0 bytes
 16652 ;; Hardware stack levels used:    1
 16653 ;; Hardware stack levels required when called:   15
 16654 ;; This function calls:
 16655 ;;		_RTCC_from_RTCC
 16656 ;;		_RTCC_from_epoch
 16657 ;; This function is called by:
 16658 ;;		_hardware_init
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           	psect	text58
 16663  01616C                     __ptext58:
 16664                           	opt stack 0
 16665  01616C                     _RTCC_init:
 16666                           	opt stack 14
 16667                           
 16668                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 16669                           
 16670                           ;incstack = 0
 16671  01616C  010F               	movlb	15	; () banked
 16672  01616E  8B3F               	bsf	63,5,b	;volatile
 16673                           
 16674                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 16675  016170  010F               	movlb	15	; () banked
 16676  016172  BB3F               	btfsc	63,5,b	;volatile
 16677  016174  D006               	goto	l11949
 16678                           
 16679                           ; BSR set to: 15
 16680                           ;My_RTCC.c: 25: EECON2 = 0x55;
 16681  016176  0E55               	movlw	85
 16682  016178  6EA7               	movwf	4007,c	;volatile
 16683                           
 16684                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 16685  01617A  0EAA               	movlw	170
 16686  01617C  6EA7               	movwf	4007,c	;volatile
 16687                           
 16688                           ; BSR set to: 15
 16689                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 16690  01617E  010F               	movlb	15	; () banked
 16691  016180  8B3F               	bsf	63,5,b	;volatile
 16692  016182                     l11949:
 16693                           
 16694                           ; BSR set to: 15
 16695                           ;My_RTCC.c: 28: }
 16696                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 16697  016182  010F               	movlb	15	; () banked
 16698  016184  8F3F               	bsf	63,7,b	;volatile
 16699                           
 16700                           ; BSR set to: 15
 16701                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 16702  016186  010F               	movlb	15	; () banked
 16703  016188  953F               	bcf	63,2,b	;volatile
 16704                           
 16705                           ; BSR set to: 15
 16706                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 16707  01618A  010F               	movlb	15	; () banked
 16708  01618C  833C               	bsf	60,1,b	;volatile
 16709                           
 16710                           ; BSR set to: 15
 16711                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 16712  01618E  010F               	movlb	15	; () banked
 16713  016190  853C               	bsf	60,2,b	;volatile
 16714                           
 16715                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 16716  016192  0E00               	movlw	0
 16717  016194  010F               	movlb	15	; () banked
 16718  016196  6F3E               	movwf	62,b	;volatile
 16719                           
 16720                           ; BSR set to: 15
 16721                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 16722  016198  86CD               	bsf	4045,3,c	;volatile
 16723                           
 16724                           ; BSR set to: 15
 16725                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
 16726  01619A  0E72               	movlw	low _now
 16727  01619C  0100               	movlb	0	; () banked
 16728  01619E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 16729  0161A0  0E01               	movlw	high _now
 16730  0161A2  0100               	movlb	0	; () banked
 16731  0161A4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 16732  0161A6  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 16733                           
 16734                           ;My_RTCC.c: 38: if (now.DD == 0) {
 16735  0161AA  0101               	movlb	1	; () banked
 16736  0161AC  517A               	movf	(_now+8)& (0+255),w,b
 16737  0161AE  A4D8               	btfss	status,2,c
 16738  0161B0  0012               	return	
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;My_RTCC.c: 39: now.epoch = 0;
 16742  0161B2  0E00               	movlw	0
 16743  0161B4  0101               	movlb	1	; () banked
 16744  0161B6  6F72               	movwf	_now& (0+255),b
 16745  0161B8  0E00               	movlw	0
 16746  0161BA  6F73               	movwf	(_now+1)& (0+255),b
 16747  0161BC  0E00               	movlw	0
 16748  0161BE  6F74               	movwf	(_now+2)& (0+255),b
 16749  0161C0  0E00               	movlw	0
 16750  0161C2  6F75               	movwf	(_now+3)& (0+255),b
 16751                           
 16752                           ; BSR set to: 1
 16753                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
 16754  0161C4  0E72               	movlw	low _now
 16755  0161C6  0100               	movlb	0	; () banked
 16756  0161C8  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 16757  0161CA  0E01               	movlw	high _now
 16758  0161CC  0100               	movlb	0	; () banked
 16759  0161CE  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 16760  0161D0  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
 16761  0161D4  0012               	return	
 16762  0161D6                     __end_of_RTCC_init:
 16763                           	opt stack 0
 16764                           tblptru	equ	0xFF8
 16765                           tblptrh	equ	0xFF7
 16766                           tblptrl	equ	0xFF6
 16767                           tablat	equ	0xFF5
 16768                           prodh	equ	0xFF4
 16769                           prodl	equ	0xFF3
 16770                           intcon	equ	0xFF2
 16771                           intcon2	equ	0xFF1
 16772                           postinc0	equ	0xFEE
 16773                           wreg	equ	0xFE8
 16774                           indf1	equ	0xFE7
 16775                           postinc1	equ	0xFE6
 16776                           postdec1	equ	0xFE5
 16777                           fsr1h	equ	0xFE2
 16778                           fsr1l	equ	0xFE1
 16779                           indf2	equ	0xFDF
 16780                           postinc2	equ	0xFDE
 16781                           postdec2	equ	0xFDD
 16782                           plusw2	equ	0xFDB
 16783                           fsr2h	equ	0xFDA
 16784                           fsr2l	equ	0xFD9
 16785                           status	equ	0xFD8
 16786                           
 16787 ;; *************** function _RTCC_from_epoch *****************
 16788 ;; Defined at:
 16789 ;;		line 211 in file "../My_library/My_RTCC.c"
 16790 ;; Parameters:    Size  Location     Type
 16791 ;;  tm              2   47[BANK0 ] PTR struct .
 16792 ;;		 -> now(14), 
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;		None
 16795 ;; Return value:  Size  Location     Type
 16796 ;;		None               void
 16797 ;; Registers used:
 16798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16807 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16808 ;;Total ram usage:        2 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; Hardware stack levels required when called:   14
 16811 ;; This function calls:
 16812 ;;		_caltime_to_RTCC
 16813 ;;		_epoch_to_caltime
 16814 ;; This function is called by:
 16815 ;;		_RTCC_init
 16816 ;;		_RTCC_adjust_time_inc
 16817 ;;		_RTCC_adjust_time_dec
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           	psect	text59
 16822  016C14                     __ptext59:
 16823                           	opt stack 0
 16824  016C14                     _RTCC_from_epoch:
 16825                           	opt stack 12
 16826                           
 16827                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
 16828                           
 16829                           ;incstack = 0
 16830  016C14  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 16831  016C18  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 16832  016C1C  EC21  F096         	call	_epoch_to_caltime	;wreg free
 16833                           
 16834                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
 16835  016C20  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 16836  016C24  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 16837  016C28  ECAD  F0A4         	call	_caltime_to_RTCC	;wreg free
 16838  016C2C  0012               	return		;funcret
 16839  016C2E                     __end_of_RTCC_from_epoch:
 16840                           	opt stack 0
 16841                           tblptru	equ	0xFF8
 16842                           tblptrh	equ	0xFF7
 16843                           tblptrl	equ	0xFF6
 16844                           tablat	equ	0xFF5
 16845                           prodh	equ	0xFF4
 16846                           prodl	equ	0xFF3
 16847                           intcon	equ	0xFF2
 16848                           intcon2	equ	0xFF1
 16849                           postinc0	equ	0xFEE
 16850                           wreg	equ	0xFE8
 16851                           indf1	equ	0xFE7
 16852                           postinc1	equ	0xFE6
 16853                           postdec1	equ	0xFE5
 16854                           fsr1h	equ	0xFE2
 16855                           fsr1l	equ	0xFE1
 16856                           indf2	equ	0xFDF
 16857                           postinc2	equ	0xFDE
 16858                           postdec2	equ	0xFDD
 16859                           plusw2	equ	0xFDB
 16860                           fsr2h	equ	0xFDA
 16861                           fsr2l	equ	0xFD9
 16862                           status	equ	0xFD8
 16863                           
 16864 ;; *************** function _epoch_to_caltime *****************
 16865 ;; Defined at:
 16866 ;;		line 126 in file "../My_library/My_RTCC.c"
 16867 ;; Parameters:    Size  Location     Type
 16868 ;;  tm              2   33[BANK0 ] PTR struct .
 16869 ;;		 -> now(14), 
 16870 ;; Auto vars:     Size  Location     Type
 16871 ;;  num             4   43[BANK0 ] unsigned long 
 16872 ;;  day             2   39[BANK0 ] unsigned int 
 16873 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 16874 ;;  month           1   42[BANK0 ] unsigned char 
 16875 ;;  year            1   41[BANK0 ] unsigned char 
 16876 ;; Return value:  Size  Location     Type
 16877 ;;		None               void
 16878 ;; Registers used:
 16879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;Total ram usage:       14 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:   13
 16892 ;; This function calls:
 16893 ;;		_get_quot_rem
 16894 ;;		_month_length
 16895 ;; This function is called by:
 16896 ;;		_RTCC_from_caltime
 16897 ;;		_RTCC_from_epoch
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901                           	psect	text60
 16902  012C42                     __ptext60:
 16903                           	opt stack 0
 16904  012C42                     _epoch_to_caltime:
 16905                           	opt stack 12
 16906                           
 16907                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
 16908                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
 16909                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
 16910                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
 16911                           ;My_RTCC.c: 133: uint16_t day;
 16912                           ;My_RTCC.c: 134: uint8_t year = 0;
 16913                           
 16914                           ;incstack = 0
 16915  012C42  0E00               	movlw	0
 16916  012C44  0100               	movlb	0	; () banked
 16917  012C46  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 16918                           
 16919                           ;My_RTCC.c: 135: uint8_t month = 1;
 16920  012C48  0E01               	movlw	1
 16921  012C4A  0100               	movlb	0	; () banked
 16922  012C4C  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 16923                           
 16924                           ; BSR set to: 0
 16925                           ;My_RTCC.c: 136: epoch_t num;
 16926                           ;My_RTCC.c: 138: num = tm->epoch;
 16927  012C4E  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 16928  012C52  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 16929  012C56  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 16930  012C5A  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 16931  012C5E  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 16932  012C62  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
 16936  012C66  0E8B               	movlw	low epoch_to_caltime@num
 16937  012C68  0100               	movlb	0	; () banked
 16938  012C6A  6F79               	movwf	get_quot_rem@quot& (0+255),b
 16939  012C6C  0E00               	movlw	high epoch_to_caltime@num
 16940  012C6E  0100               	movlb	0	; () banked
 16941  012C70  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 16942  012C72  0E3C               	movlw	60
 16943  012C74  0100               	movlb	0	; () banked
 16944  012C76  6F7B               	movwf	get_quot_rem@div& (0+255),b
 16945  012C78  EC83  F0A5         	call	_get_quot_rem	;wreg free
 16946  012C7C  0100               	movlb	0	; () banked
 16947  012C7E  EE20 F004          	lfsr	2,4
 16948  012C82  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 16949  012C84  26D9               	addwf	fsr2l,f,c
 16950  012C86  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 16951  012C88  22DA               	addwfc	fsr2h,f,c
 16952  012C8A  0100               	movlb	0	; () banked
 16953  012C8C  C079  FFDF         	movff	?_get_quot_rem,indf2
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
 16957  012C90  0E8B               	movlw	low epoch_to_caltime@num
 16958  012C92  0100               	movlb	0	; () banked
 16959  012C94  6F79               	movwf	get_quot_rem@quot& (0+255),b
 16960  012C96  0E00               	movlw	high epoch_to_caltime@num
 16961  012C98  0100               	movlb	0	; () banked
 16962  012C9A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 16963  012C9C  0E3C               	movlw	60
 16964  012C9E  0100               	movlb	0	; () banked
 16965  012CA0  6F7B               	movwf	get_quot_rem@div& (0+255),b
 16966  012CA2  EC83  F0A5         	call	_get_quot_rem	;wreg free
 16967  012CA6  0100               	movlb	0	; () banked
 16968  012CA8  EE20 F005          	lfsr	2,5
 16969  012CAC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 16970  012CAE  26D9               	addwf	fsr2l,f,c
 16971  012CB0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 16972  012CB2  22DA               	addwfc	fsr2h,f,c
 16973  012CB4  0100               	movlb	0	; () banked
 16974  012CB6  C079  FFDF         	movff	?_get_quot_rem,indf2
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
 16978  012CBA  0E8B               	movlw	low epoch_to_caltime@num
 16979  012CBC  0100               	movlb	0	; () banked
 16980  012CBE  6F79               	movwf	get_quot_rem@quot& (0+255),b
 16981  012CC0  0E00               	movlw	high epoch_to_caltime@num
 16982  012CC2  0100               	movlb	0	; () banked
 16983  012CC4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 16984  012CC6  0E18               	movlw	24
 16985  012CC8  0100               	movlb	0	; () banked
 16986  012CCA  6F7B               	movwf	get_quot_rem@div& (0+255),b
 16987  012CCC  EC83  F0A5         	call	_get_quot_rem	;wreg free
 16988  012CD0  0100               	movlb	0	; () banked
 16989  012CD2  EE20 F006          	lfsr	2,6
 16990  012CD6  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 16991  012CD8  26D9               	addwf	fsr2l,f,c
 16992  012CDA  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 16993  012CDC  22DA               	addwfc	fsr2h,f,c
 16994  012CDE  0100               	movlb	0	; () banked
 16995  012CE0  C079  FFDF         	movff	?_get_quot_rem,indf2
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;My_RTCC.c: 142: day = num;
 16999  012CE4  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17000  012CE8  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17001                           
 17002                           ; BSR set to: 0
 17003                           ;My_RTCC.c: 143: day_since_epoch = day;
 17004  012CEC  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17005  012CF0  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17006                           
 17007                           ; BSR set to: 0
 17008                           ;My_RTCC.c: 145: num += 6;
 17009  012CF4  0E06               	movlw	6
 17010  012CF6  0100               	movlb	0	; () banked
 17011  012CF8  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17012  012CFA  0E00               	movlw	0
 17013  012CFC  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17014  012CFE  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17015  012D00  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
 17019  012D02  0E8B               	movlw	low epoch_to_caltime@num
 17020  012D04  0100               	movlb	0	; () banked
 17021  012D06  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17022  012D08  0E00               	movlw	high epoch_to_caltime@num
 17023  012D0A  0100               	movlb	0	; () banked
 17024  012D0C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17025  012D0E  0E07               	movlw	7
 17026  012D10  0100               	movlb	0	; () banked
 17027  012D12  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17028  012D14  EC83  F0A5         	call	_get_quot_rem	;wreg free
 17029  012D18  0100               	movlb	0	; () banked
 17030  012D1A  EE20 F007          	lfsr	2,7
 17031  012D1E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17032  012D20  26D9               	addwf	fsr2l,f,c
 17033  012D22  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17034  012D24  22DA               	addwfc	fsr2h,f,c
 17035  012D26  0100               	movlb	0	; () banked
 17036  012D28  C079  FFDF         	movff	?_get_quot_rem,indf2
 17037                           
 17038                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
 17039  012D2C  D03F               	goto	l10515
 17040  012D2E                     l877:
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;My_RTCC.c: 156: LATB2 = 1;
 17044  012D2E  848A               	bsf	3978,2,c	;volatile
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;My_RTCC.c: 157: day = day - month_length(year, month);
 17048  012D30  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17049  012D34  0100               	movlb	0	; () banked
 17050  012D36  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17051  012D38  EC65  F0A3         	call	_month_length
 17052  012D3C  0100               	movlb	0	; () banked
 17053  012D3E  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17054  012D40  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17055  012D42  0100               	movlb	0	; () banked
 17056  012D44  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17057  012D46  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17058  012D48  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17059  012D4A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17060  012D4C  0100               	movlb	0	; () banked
 17061  012D4E  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17062  012D50  0100               	movlb	0	; () banked
 17063  012D52  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17064  012D54  0100               	movlb	0	; () banked
 17065  012D56  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17066  012D58  0100               	movlb	0	; () banked
 17067  012D5A  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17068  012D5C  0100               	movlb	0	; () banked
 17069  012D5E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17070  012D60  0100               	movlb	0	; () banked
 17071  012D62  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;My_RTCC.c: 158: if (month == 12) {
 17075  012D64  0E0C               	movlw	12
 17076  012D66  0100               	movlb	0	; () banked
 17077  012D68  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17078  012D6A  A4D8               	btfss	status,2,c
 17079  012D6C  D019               	goto	l10509
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;My_RTCC.c: 159: month = 1;
 17083  012D6E  0E01               	movlw	1
 17084  012D70  0100               	movlb	0	; () banked
 17085  012D72  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17086                           
 17087                           ; BSR set to: 0
 17088                           ;My_RTCC.c: 160: year++;
 17089  012D74  0100               	movlb	0	; () banked
 17090  012D76  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;My_RTCC.c: 162: if (year >= 100) {
 17094  012D78  0E63               	movlw	99
 17095  012D7A  0100               	movlb	0	; () banked
 17096  012D7C  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17097  012D7E  D012               	goto	l10511
 17098                           
 17099                           ; BSR set to: 0
 17100                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
 17101  012D80  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17102  012D84  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17103  012D88  0E80               	movlw	128
 17104  012D8A  5EDE               	subwf	postinc2,f,c
 17105  012D8C  0E13               	movlw	19
 17106  012D8E  5ADE               	subwfb	postinc2,f,c
 17107  012D90  0E19               	movlw	25
 17108  012D92  5ADE               	subwfb	postinc2,f,c
 17109  012D94  0EBC               	movlw	188
 17110  012D96  5ADE               	subwfb	postinc2,f,c
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;My_RTCC.c: 164: year = 0;
 17114  012D98  0E00               	movlw	0
 17115  012D9A  0100               	movlb	0	; () banked
 17116  012D9C  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;My_RTCC.c: 165: }
 17120                           ;My_RTCC.c: 166: } else {
 17121  012D9E  D002               	goto	l10511
 17122  012DA0                     l10509:
 17123                           
 17124                           ; BSR set to: 0
 17125                           ;My_RTCC.c: 167: month++;
 17126  012DA0  0100               	movlb	0	; () banked
 17127  012DA2  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17128  012DA4                     l10511:
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;My_RTCC.c: 168: }
 17132                           ;My_RTCC.c: 169: month_cache = month;
 17133  012DA4  C08A  F1E3         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;My_RTCC.c: 170: year_cache = year;
 17137  012DA8  C089  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17138  012DAC                     l10515:
 17139                           
 17140                           ; BSR set to: 0
 17141  012DAC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17142  012DB0  0100               	movlb	0	; () banked
 17143  012DB2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17144  012DB4  EC65  F0A3         	call	_month_length
 17145  012DB8  0100               	movlb	0	; () banked
 17146  012DBA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17147  012DBC  0100               	movlb	0	; () banked
 17148  012DBE  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17149  012DC0  0100               	movlb	0	; () banked
 17150  012DC2  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17151  012DC4  0E00               	movlw	0
 17152  012DC6  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17153  012DC8  B0D8               	btfsc	status,0,c
 17154  012DCA  D7B1               	goto	l877
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;My_RTCC.c: 171: }
 17158                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
 17159                           
 17160                           ; BSR set to: 0
 17161  012DCC  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 17162  012DD0  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 17163  012DD4  0100               	movlb	0	; () banked
 17164  012DD6  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17165  012DD8  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17166  012DDA  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17167  012DDC  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17168  012DDE  0100               	movlb	0	; () banked
 17169  012DE0  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 17170  012DE2  0100               	movlb	0	; () banked
 17171  012DE4  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17172  012DE6  0101               	movlb	1	; () banked
 17173  012DE8  6F1E               	movwf	epoch_to_caltime@day_cache& (0+255),b
 17174  012DEA  0100               	movlb	0	; () banked
 17175  012DEC  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 17176  012DEE  0100               	movlb	0	; () banked
 17177  012DF0  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17178  012DF2  0101               	movlb	1	; () banked
 17179  012DF4  6F1F               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 17180                           
 17181                           ; BSR set to: 1
 17182                           ;My_RTCC.c: 173: day++;
 17183  012DF6  0100               	movlb	0	; () banked
 17184  012DF8  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 17185  012DFA  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;My_RTCC.c: 175: tm->YY = year;
 17189  012DFC  0100               	movlb	0	; () banked
 17190  012DFE  EE20 F00A          	lfsr	2,10
 17191  012E02  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17192  012E04  26D9               	addwf	fsr2l,f,c
 17193  012E06  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17194  012E08  22DA               	addwfc	fsr2h,f,c
 17195  012E0A  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 17196                           
 17197                           ; BSR set to: 0
 17198                           ;My_RTCC.c: 176: tm->MM = month;
 17199  012E0E  0100               	movlb	0	; () banked
 17200  012E10  EE20 F009          	lfsr	2,9
 17201  012E14  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17202  012E16  26D9               	addwf	fsr2l,f,c
 17203  012E18  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17204  012E1A  22DA               	addwfc	fsr2h,f,c
 17205  012E1C  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;My_RTCC.c: 177: tm->DD = day;
 17209  012E20  0100               	movlb	0	; () banked
 17210  012E22  EE20 F008          	lfsr	2,8
 17211  012E26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17212  012E28  26D9               	addwf	fsr2l,f,c
 17213  012E2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17214  012E2C  22DA               	addwfc	fsr2h,f,c
 17215  012E2E  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 17216                           
 17217                           ; BSR set to: 0
 17218  012E32  0012               	return		;funcret
 17219  012E34                     __end_of_epoch_to_caltime:
 17220                           	opt stack 0
 17221                           tblptru	equ	0xFF8
 17222                           tblptrh	equ	0xFF7
 17223                           tblptrl	equ	0xFF6
 17224                           tablat	equ	0xFF5
 17225                           prodh	equ	0xFF4
 17226                           prodl	equ	0xFF3
 17227                           intcon	equ	0xFF2
 17228                           intcon2	equ	0xFF1
 17229                           postinc0	equ	0xFEE
 17230                           wreg	equ	0xFE8
 17231                           indf1	equ	0xFE7
 17232                           postinc1	equ	0xFE6
 17233                           postdec1	equ	0xFE5
 17234                           fsr1h	equ	0xFE2
 17235                           fsr1l	equ	0xFE1
 17236                           indf2	equ	0xFDF
 17237                           postinc2	equ	0xFDE
 17238                           postdec2	equ	0xFDD
 17239                           plusw2	equ	0xFDB
 17240                           fsr2h	equ	0xFDA
 17241                           fsr2l	equ	0xFD9
 17242                           status	equ	0xFD8
 17243                           
 17244 ;; *************** function _get_quot_rem *****************
 17245 ;; Defined at:
 17246 ;;		line 81 in file "../My_library/My_RTCC.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 17249 ;;		 -> epoch_to_caltime@num(4), 
 17250 ;;  div             1   27[BANK0 ] unsigned char 
 17251 ;; Auto vars:     Size  Location     Type
 17252 ;;  num             4   29[BANK0 ] unsigned long 
 17253 ;; Return value:  Size  Location     Type
 17254 ;;                  4   25[BANK0 ] unsigned long 
 17255 ;; Registers used:
 17256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17257 ;; Tracked objects:
 17258 ;;		On entry : 0/0
 17259 ;;		On exit  : 0/0
 17260 ;;		Unchanged: 0/0
 17261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17265 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17266 ;;Total ram usage:        8 bytes
 17267 ;; Hardware stack levels used:    1
 17268 ;; Hardware stack levels required when called:   12
 17269 ;; This function calls:
 17270 ;;		___lldiv
 17271 ;;		___lmul
 17272 ;; This function is called by:
 17273 ;;		_epoch_to_caltime
 17274 ;; This function uses a non-reentrant model
 17275 ;;
 17276                           
 17277                           	psect	text61
 17278  014B06                     __ptext61:
 17279                           	opt stack 0
 17280  014B06                     _get_quot_rem:
 17281                           	opt stack 12
 17282                           
 17283                           ;My_RTCC.c: 84: epoch_t num = *quot;
 17284                           
 17285                           ; BSR set to: 0
 17286                           ;incstack = 0
 17287  014B06  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17288  014B0A  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17289  014B0E  CFDE F07D          	movff	postinc2,get_quot_rem@num
 17290  014B12  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 17291  014B16  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 17292  014B1A  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 17293                           
 17294                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
 17295  014B1E  0100               	movlb	0	; () banked
 17296  014B20  517B               	movf	get_quot_rem@div& (0+255),w,b
 17297  014B22  0100               	movlb	0	; () banked
 17298  014B24  6F64               	movwf	___lldiv@divisor& (0+255),b
 17299  014B26  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 17300  014B28  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 17301  014B2A  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 17302  014B2C  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 17303  014B30  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 17304  014B34  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 17305  014B38  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 17306  014B3C  EC6C  F0A9         	call	___lldiv	;wreg free
 17307  014B40  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17308  014B44  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17309  014B48  0100               	movlb	0	; () banked
 17310  014B4A  C060  FFDE         	movff	?___lldiv,postinc2
 17311  014B4E  0100               	movlb	0	; () banked
 17312  014B50  C061  FFDE         	movff	?___lldiv+1,postinc2
 17313  014B54  0100               	movlb	0	; () banked
 17314  014B56  C062  FFDE         	movff	?___lldiv+2,postinc2
 17315  014B5A  0100               	movlb	0	; () banked
 17316  014B5C  C063  FFDD         	movff	?___lldiv+3,postdec2
 17317  014B60  52DD               	movf	postdec2,f,c
 17318  014B62  52DD               	movf	postdec2,f,c
 17319  014B64  CFDE F06D          	movff	postinc2,___lmul@multiplier
 17320  014B68  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 17321  014B6C  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 17322  014B70  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 17323  014B74  0100               	movlb	0	; () banked
 17324  014B76  517B               	movf	get_quot_rem@div& (0+255),w,b
 17325  014B78  0100               	movlb	0	; () banked
 17326  014B7A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 17327  014B7C  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 17328  014B7E  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17329  014B80  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17330  014B82  EC66  F0AF         	call	___lmul	;wreg free
 17331  014B86  0100               	movlb	0	; () banked
 17332  014B88  1F6D               	comf	?___lmul& (0+255),f,b
 17333  014B8A  0100               	movlb	0	; () banked
 17334  014B8C  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 17335  014B8E  0100               	movlb	0	; () banked
 17336  014B90  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 17337  014B92  0100               	movlb	0	; () banked
 17338  014B94  1F70               	comf	(?___lmul+3)& (0+255),f,b
 17339  014B96  0100               	movlb	0	; () banked
 17340  014B98  2B6D               	incf	?___lmul& (0+255),f,b
 17341  014B9A  0E00               	movlw	0
 17342  014B9C  0100               	movlb	0	; () banked
 17343  014B9E  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 17344  014BA0  0100               	movlb	0	; () banked
 17345  014BA2  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 17346  014BA4  0100               	movlb	0	; () banked
 17347  014BA6  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 17348  014BA8  0100               	movlb	0	; () banked
 17349  014BAA  517D               	movf	get_quot_rem@num& (0+255),w,b
 17350  014BAC  0100               	movlb	0	; () banked
 17351  014BAE  256D               	addwf	?___lmul& (0+255),w,b
 17352  014BB0  0100               	movlb	0	; () banked
 17353  014BB2  6F79               	movwf	?_get_quot_rem& (0+255),b
 17354  014BB4  0100               	movlb	0	; () banked
 17355  014BB6  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 17356  014BB8  0100               	movlb	0	; () banked
 17357  014BBA  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 17358  014BBC  0100               	movlb	0	; () banked
 17359  014BBE  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 17360  014BC0  0100               	movlb	0	; () banked
 17361  014BC2  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 17362  014BC4  0100               	movlb	0	; () banked
 17363  014BC6  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 17364  014BC8  0100               	movlb	0	; () banked
 17365  014BCA  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 17366  014BCC  0100               	movlb	0	; () banked
 17367  014BCE  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 17368  014BD0  0100               	movlb	0	; () banked
 17369  014BD2  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 17370  014BD4  0100               	movlb	0	; () banked
 17371  014BD6  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 17372  014BD8  0012               	return	
 17373  014BDA                     __end_of_get_quot_rem:
 17374                           	opt stack 0
 17375                           tblptru	equ	0xFF8
 17376                           tblptrh	equ	0xFF7
 17377                           tblptrl	equ	0xFF6
 17378                           tablat	equ	0xFF5
 17379                           prodh	equ	0xFF4
 17380                           prodl	equ	0xFF3
 17381                           intcon	equ	0xFF2
 17382                           intcon2	equ	0xFF1
 17383                           postinc0	equ	0xFEE
 17384                           wreg	equ	0xFE8
 17385                           indf1	equ	0xFE7
 17386                           postinc1	equ	0xFE6
 17387                           postdec1	equ	0xFE5
 17388                           fsr1h	equ	0xFE2
 17389                           fsr1l	equ	0xFE1
 17390                           indf2	equ	0xFDF
 17391                           postinc2	equ	0xFDE
 17392                           postdec2	equ	0xFDD
 17393                           plusw2	equ	0xFDB
 17394                           fsr2h	equ	0xFDA
 17395                           fsr2l	equ	0xFD9
 17396                           status	equ	0xFD8
 17397                           
 17398 ;; *************** function _caltime_to_RTCC *****************
 17399 ;; Defined at:
 17400 ;;		line 106 in file "../My_library/My_RTCC.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;  tm              2    9[BANK0 ] PTR struct .
 17403 ;;		 -> now(14), 
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;		None
 17406 ;; Return value:  Size  Location     Type
 17407 ;;		None               void
 17408 ;; Registers used:
 17409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17410 ;; Tracked objects:
 17411 ;;		On entry : 0/0
 17412 ;;		On exit  : 0/0
 17413 ;;		Unchanged: 0/0
 17414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17419 ;;Total ram usage:        2 bytes
 17420 ;; Hardware stack levels used:    1
 17421 ;; Hardware stack levels required when called:   13
 17422 ;; This function calls:
 17423 ;;		_d_to_x
 17424 ;; This function is called by:
 17425 ;;		_RTCC_from_caltime
 17426 ;;		_RTCC_from_epoch
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text62
 17431  01495A                     __ptext62:
 17432                           	opt stack 0
 17433  01495A                     _caltime_to_RTCC:
 17434                           	opt stack 12
 17435  01495A                     l864:
 17436  01495A  010F               	movlb	15	; () banked
 17437  01495C  B93F               	btfsc	63,4,b	;volatile
 17438  01495E  D7FD               	goto	l864
 17439                           
 17440                           ; BSR set to: 15
 17441                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
 17442  014960  010F               	movlb	15	; () banked
 17443  014962  813F               	bsf	63,0,b	;volatile
 17444                           
 17445                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
 17446  014964  010F               	movlb	15	; () banked
 17447  014966  833F               	bsf	63,1,b	;volatile
 17448                           
 17449                           ; BSR set to: 15
 17450                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
 17451  014968  0100               	movlb	0	; () banked
 17452  01496A  EE20 F00A          	lfsr	2,10
 17453  01496E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17454  014970  26D9               	addwf	fsr2l,f,c
 17455  014972  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17456  014974  22DA               	addwfc	fsr2h,f,c
 17457  014976  50DF               	movf	indf2,w,c
 17458  014978  EC4B  F0B5         	call	_d_to_x
 17459  01497C  010F               	movlb	15	; () banked
 17460  01497E  6F3A               	movwf	58,b	;volatile
 17461                           
 17462                           ; BSR set to: 15
 17463                           ;My_RTCC.c: 111: RTCVALH = 0x00;
 17464  014980  0E00               	movlw	0
 17465  014982  010F               	movlb	15	; () banked
 17466  014984  6F3B               	movwf	59,b	;volatile
 17467                           
 17468                           ; BSR set to: 15
 17469                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
 17470  014986  010F               	movlb	15	; () banked
 17471  014988  913F               	bcf	63,0,b	;volatile
 17472                           
 17473                           ; BSR set to: 15
 17474                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
 17475  01498A  010F               	movlb	15	; () banked
 17476  01498C  833F               	bsf	63,1,b	;volatile
 17477                           
 17478                           ; BSR set to: 15
 17479                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
 17480  01498E  0100               	movlb	0	; () banked
 17481  014990  EE20 F008          	lfsr	2,8
 17482  014994  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17483  014996  26D9               	addwf	fsr2l,f,c
 17484  014998  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17485  01499A  22DA               	addwfc	fsr2h,f,c
 17486  01499C  50DF               	movf	indf2,w,c
 17487  01499E  EC4B  F0B5         	call	_d_to_x
 17488  0149A2  010F               	movlb	15	; () banked
 17489  0149A4  6F3A               	movwf	58,b	;volatile
 17490                           
 17491                           ; BSR set to: 15
 17492                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
 17493  0149A6  0100               	movlb	0	; () banked
 17494  0149A8  EE20 F009          	lfsr	2,9
 17495  0149AC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17496  0149AE  26D9               	addwf	fsr2l,f,c
 17497  0149B0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17498  0149B2  22DA               	addwfc	fsr2h,f,c
 17499  0149B4  50DF               	movf	indf2,w,c
 17500  0149B6  EC4B  F0B5         	call	_d_to_x
 17501  0149BA  010F               	movlb	15	; () banked
 17502  0149BC  6F3B               	movwf	59,b	;volatile
 17503                           
 17504                           ; BSR set to: 15
 17505                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
 17506  0149BE  010F               	movlb	15	; () banked
 17507  0149C0  813F               	bsf	63,0,b	;volatile
 17508                           
 17509                           ; BSR set to: 15
 17510                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
 17511  0149C2  010F               	movlb	15	; () banked
 17512  0149C4  933F               	bcf	63,1,b	;volatile
 17513                           
 17514                           ; BSR set to: 15
 17515                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
 17516  0149C6  0100               	movlb	0	; () banked
 17517  0149C8  EE20 F006          	lfsr	2,6
 17518  0149CC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17519  0149CE  26D9               	addwf	fsr2l,f,c
 17520  0149D0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17521  0149D2  22DA               	addwfc	fsr2h,f,c
 17522  0149D4  50DF               	movf	indf2,w,c
 17523  0149D6  EC4B  F0B5         	call	_d_to_x
 17524  0149DA  010F               	movlb	15	; () banked
 17525  0149DC  6F3A               	movwf	58,b	;volatile
 17526                           
 17527                           ; BSR set to: 15
 17528                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
 17529  0149DE  0100               	movlb	0	; () banked
 17530  0149E0  EE20 F007          	lfsr	2,7
 17531  0149E4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17532  0149E6  26D9               	addwf	fsr2l,f,c
 17533  0149E8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17534  0149EA  22DA               	addwfc	fsr2h,f,c
 17535  0149EC  50DF               	movf	indf2,w,c
 17536  0149EE  EC4B  F0B5         	call	_d_to_x
 17537  0149F2  010F               	movlb	15	; () banked
 17538  0149F4  6F3B               	movwf	59,b	;volatile
 17539                           
 17540                           ; BSR set to: 15
 17541                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
 17542  0149F6  010F               	movlb	15	; () banked
 17543  0149F8  913F               	bcf	63,0,b	;volatile
 17544                           
 17545                           ; BSR set to: 15
 17546                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
 17547  0149FA  010F               	movlb	15	; () banked
 17548  0149FC  933F               	bcf	63,1,b	;volatile
 17549                           
 17550                           ; BSR set to: 15
 17551                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
 17552  0149FE  0100               	movlb	0	; () banked
 17553  014A00  EE20 F004          	lfsr	2,4
 17554  014A04  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17555  014A06  26D9               	addwf	fsr2l,f,c
 17556  014A08  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17557  014A0A  22DA               	addwfc	fsr2h,f,c
 17558  014A0C  50DF               	movf	indf2,w,c
 17559  014A0E  EC4B  F0B5         	call	_d_to_x
 17560  014A12  010F               	movlb	15	; () banked
 17561  014A14  6F3A               	movwf	58,b	;volatile
 17562                           
 17563                           ; BSR set to: 15
 17564                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
 17565  014A16  0100               	movlb	0	; () banked
 17566  014A18  EE20 F005          	lfsr	2,5
 17567  014A1C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17568  014A1E  26D9               	addwf	fsr2l,f,c
 17569  014A20  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17570  014A22  22DA               	addwfc	fsr2h,f,c
 17571  014A24  50DF               	movf	indf2,w,c
 17572  014A26  EC4B  F0B5         	call	_d_to_x
 17573  014A2A  010F               	movlb	15	; () banked
 17574  014A2C  6F3B               	movwf	59,b	;volatile
 17575                           
 17576                           ; BSR set to: 15
 17577  014A2E  0012               	return		;funcret
 17578  014A30                     __end_of_caltime_to_RTCC:
 17579                           	opt stack 0
 17580                           tblptru	equ	0xFF8
 17581                           tblptrh	equ	0xFF7
 17582                           tblptrl	equ	0xFF6
 17583                           tablat	equ	0xFF5
 17584                           prodh	equ	0xFF4
 17585                           prodl	equ	0xFF3
 17586                           intcon	equ	0xFF2
 17587                           intcon2	equ	0xFF1
 17588                           postinc0	equ	0xFEE
 17589                           wreg	equ	0xFE8
 17590                           indf1	equ	0xFE7
 17591                           postinc1	equ	0xFE6
 17592                           postdec1	equ	0xFE5
 17593                           fsr1h	equ	0xFE2
 17594                           fsr1l	equ	0xFE1
 17595                           indf2	equ	0xFDF
 17596                           postinc2	equ	0xFDE
 17597                           postdec2	equ	0xFDD
 17598                           plusw2	equ	0xFDB
 17599                           fsr2h	equ	0xFDA
 17600                           fsr2l	equ	0xFD9
 17601                           status	equ	0xFD8
 17602                           
 17603 ;; *************** function _d_to_x *****************
 17604 ;; Defined at:
 17605 ;;		line 46 in file "../My_library/My_RTCC.c"
 17606 ;; Parameters:    Size  Location     Type
 17607 ;;  dec             1    wreg     unsigned char 
 17608 ;; Auto vars:     Size  Location     Type
 17609 ;;  dec             1    8[BANK0 ] unsigned char 
 17610 ;; Return value:  Size  Location     Type
 17611 ;;                  1    wreg      unsigned char 
 17612 ;; Registers used:
 17613 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17614 ;; Tracked objects:
 17615 ;;		On entry : 0/0
 17616 ;;		On exit  : 0/0
 17617 ;;		Unchanged: 0/0
 17618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;Total ram usage:        1 bytes
 17624 ;; Hardware stack levels used:    1
 17625 ;; Hardware stack levels required when called:   12
 17626 ;; This function calls:
 17627 ;;		___awdiv
 17628 ;; This function is called by:
 17629 ;;		_caltime_to_RTCC
 17630 ;; This function uses a non-reentrant model
 17631 ;;
 17632                           
 17633                           	psect	text63
 17634  016A96                     __ptext63:
 17635                           	opt stack 0
 17636  016A96                     _d_to_x:
 17637                           	opt stack 12
 17638                           
 17639                           ; BSR set to: 15
 17640                           ;incstack = 0
 17641                           ;d_to_x@dec stored from wreg
 17642  016A96  0100               	movlb	0	; () banked
 17643  016A98  6F68               	movwf	d_to_x@dec& (0+255),b
 17644                           
 17645                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
 17646  016A9A  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 17647  016A9E  0100               	movlb	0	; () banked
 17648  016AA0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 17649  016AA2  0E00               	movlw	0
 17650  016AA4  0100               	movlb	0	; () banked
 17651  016AA6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 17652  016AA8  0E0A               	movlw	10
 17653  016AAA  6F62               	movwf	___awdiv@divisor& (0+255),b
 17654  016AAC  EC0D  F0A9         	call	___awdiv	;wreg free
 17655  016AB0  0100               	movlb	0	; () banked
 17656  016AB2  5160               	movf	?___awdiv& (0+255),w,b
 17657  016AB4  0D06               	mullw	6
 17658  016AB6  50F3               	movf	prodl,w,c
 17659  016AB8  0100               	movlb	0	; () banked
 17660  016ABA  2568               	addwf	d_to_x@dec& (0+255),w,b
 17661  016ABC  0012               	return	
 17662  016ABE                     __end_of_d_to_x:
 17663                           	opt stack 0
 17664                           tblptru	equ	0xFF8
 17665                           tblptrh	equ	0xFF7
 17666                           tblptrl	equ	0xFF6
 17667                           tablat	equ	0xFF5
 17668                           prodh	equ	0xFF4
 17669                           prodl	equ	0xFF3
 17670                           intcon	equ	0xFF2
 17671                           intcon2	equ	0xFF1
 17672                           postinc0	equ	0xFEE
 17673                           wreg	equ	0xFE8
 17674                           indf1	equ	0xFE7
 17675                           postinc1	equ	0xFE6
 17676                           postdec1	equ	0xFE5
 17677                           fsr1h	equ	0xFE2
 17678                           fsr1l	equ	0xFE1
 17679                           indf2	equ	0xFDF
 17680                           postinc2	equ	0xFDE
 17681                           postdec2	equ	0xFDD
 17682                           plusw2	equ	0xFDB
 17683                           fsr2h	equ	0xFDA
 17684                           fsr2l	equ	0xFD9
 17685                           status	equ	0xFD8
 17686                           
 17687 ;; *************** function ___awdiv *****************
 17688 ;; Defined at:
 17689 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 17690 ;; Parameters:    Size  Location     Type
 17691 ;;  dividend        2    0[BANK0 ] int 
 17692 ;;  divisor         2    2[BANK0 ] int 
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;  quotient        2    6[BANK0 ] int 
 17695 ;;  sign            1    5[BANK0 ] unsigned char 
 17696 ;;  counter         1    4[BANK0 ] unsigned char 
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  2    0[BANK0 ] int 
 17699 ;; Registers used:
 17700 ;;		wreg, status,2, status,0
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;Total ram usage:        8 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; Hardware stack levels required when called:   11
 17713 ;; This function calls:
 17714 ;;		Nothing
 17715 ;; This function is called by:
 17716 ;;		_d_to_x
 17717 ;; This function uses a non-reentrant model
 17718 ;;
 17719                           
 17720                           	psect	text64
 17721  01521A                     __ptext64:
 17722                           	opt stack 0
 17723  01521A                     ___awdiv:
 17724                           	opt stack 12
 17725                           
 17726                           ; BSR set to: 0
 17727                           ;incstack = 0
 17728  01521A  0E00               	movlw	0
 17729  01521C  0100               	movlb	0	; () banked
 17730  01521E  6F65               	movwf	___awdiv@sign& (0+255),b
 17731                           
 17732                           ; BSR set to: 0
 17733  015220  0100               	movlb	0	; () banked
 17734  015222  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17735  015224  D008               	goto	l10101
 17736                           
 17737                           ; BSR set to: 0
 17738  015226  0100               	movlb	0	; () banked
 17739  015228  6D62               	negf	___awdiv@divisor& (0+255),b
 17740  01522A  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17741  01522C  B0D8               	btfsc	status,0,c
 17742  01522E  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17743                           
 17744                           ; BSR set to: 0
 17745  015230  0E01               	movlw	1
 17746  015232  0100               	movlb	0	; () banked
 17747  015234  6F65               	movwf	___awdiv@sign& (0+255),b
 17748  015236                     l10101:
 17749                           
 17750                           ; BSR set to: 0
 17751  015236  0100               	movlb	0	; () banked
 17752  015238  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17753  01523A  D008               	goto	l10107
 17754                           
 17755                           ; BSR set to: 0
 17756  01523C  0100               	movlb	0	; () banked
 17757  01523E  6D60               	negf	___awdiv@dividend& (0+255),b
 17758  015240  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17759  015242  B0D8               	btfsc	status,0,c
 17760  015244  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17761                           
 17762                           ; BSR set to: 0
 17763  015246  0E01               	movlw	1
 17764  015248  0100               	movlb	0	; () banked
 17765  01524A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 17766  01524C                     l10107:
 17767                           
 17768                           ; BSR set to: 0
 17769  01524C  0E00               	movlw	0
 17770  01524E  0100               	movlb	0	; () banked
 17771  015250  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 17772  015252  0E00               	movlw	0
 17773  015254  6F66               	movwf	___awdiv@quotient& (0+255),b
 17774                           
 17775                           ; BSR set to: 0
 17776  015256  0100               	movlb	0	; () banked
 17777  015258  5162               	movf	___awdiv@divisor& (0+255),w,b
 17778  01525A  0100               	movlb	0	; () banked
 17779  01525C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17780  01525E  B4D8               	btfsc	status,2,c
 17781  015260  D02C               	goto	l10129
 17782                           
 17783                           ; BSR set to: 0
 17784  015262  0E01               	movlw	1
 17785  015264  0100               	movlb	0	; () banked
 17786  015266  6F64               	movwf	___awdiv@counter& (0+255),b
 17787  015268  D006               	goto	l10115
 17788  01526A                     l10113:
 17789                           
 17790                           ; BSR set to: 0
 17791  01526A  0100               	movlb	0	; () banked
 17792  01526C  90D8               	bcf	status,0,c
 17793  01526E  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 17794  015270  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17795  015272  0100               	movlb	0	; () banked
 17796  015274  2B64               	incf	___awdiv@counter& (0+255),f,b
 17797  015276                     l10115:
 17798                           
 17799                           ; BSR set to: 0
 17800  015276  0100               	movlb	0	; () banked
 17801  015278  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17802  01527A  D7F7               	goto	l10113
 17803  01527C                     l10117:
 17804                           
 17805                           ; BSR set to: 0
 17806  01527C  0100               	movlb	0	; () banked
 17807  01527E  90D8               	bcf	status,0,c
 17808  015280  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 17809  015282  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17810                           
 17811                           ; BSR set to: 0
 17812  015284  0100               	movlb	0	; () banked
 17813  015286  5162               	movf	___awdiv@divisor& (0+255),w,b
 17814  015288  0100               	movlb	0	; () banked
 17815  01528A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 17816  01528C  0100               	movlb	0	; () banked
 17817  01528E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17818  015290  0100               	movlb	0	; () banked
 17819  015292  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17820  015294  A0D8               	btfss	status,0,c
 17821  015296  D00A               	goto	l10125
 17822                           
 17823                           ; BSR set to: 0
 17824  015298  0100               	movlb	0	; () banked
 17825  01529A  5162               	movf	___awdiv@divisor& (0+255),w,b
 17826  01529C  0100               	movlb	0	; () banked
 17827  01529E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 17828  0152A0  0100               	movlb	0	; () banked
 17829  0152A2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17830  0152A4  0100               	movlb	0	; () banked
 17831  0152A6  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17832                           
 17833                           ; BSR set to: 0
 17834  0152A8  0100               	movlb	0	; () banked
 17835  0152AA  8166               	bsf	___awdiv@quotient& (0+255),0,b
 17836  0152AC                     l10125:
 17837                           
 17838                           ; BSR set to: 0
 17839  0152AC  0100               	movlb	0	; () banked
 17840  0152AE  90D8               	bcf	status,0,c
 17841  0152B0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17842  0152B2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 17843                           
 17844                           ; BSR set to: 0
 17845  0152B4  0100               	movlb	0	; () banked
 17846  0152B6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 17847  0152B8  D7E1               	goto	l10117
 17848  0152BA                     l10129:
 17849                           
 17850                           ; BSR set to: 0
 17851  0152BA  0100               	movlb	0	; () banked
 17852  0152BC  5165               	movf	___awdiv@sign& (0+255),w,b
 17853  0152BE  0100               	movlb	0	; () banked
 17854  0152C0  B4D8               	btfsc	status,2,c
 17855  0152C2  D005               	goto	l10133
 17856                           
 17857                           ; BSR set to: 0
 17858  0152C4  0100               	movlb	0	; () banked
 17859  0152C6  6D66               	negf	___awdiv@quotient& (0+255),b
 17860  0152C8  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17861  0152CA  B0D8               	btfsc	status,0,c
 17862  0152CC  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17863  0152CE                     l10133:
 17864                           
 17865                           ; BSR set to: 0
 17866  0152CE  C066  F060         	movff	___awdiv@quotient,?___awdiv
 17867  0152D2  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 17868  0152D6  0012               	return	
 17869  0152D8                     __end_of___awdiv:
 17870                           	opt stack 0
 17871                           tblptru	equ	0xFF8
 17872                           tblptrh	equ	0xFF7
 17873                           tblptrl	equ	0xFF6
 17874                           tablat	equ	0xFF5
 17875                           prodh	equ	0xFF4
 17876                           prodl	equ	0xFF3
 17877                           intcon	equ	0xFF2
 17878                           intcon2	equ	0xFF1
 17879                           postinc0	equ	0xFEE
 17880                           wreg	equ	0xFE8
 17881                           indf1	equ	0xFE7
 17882                           postinc1	equ	0xFE6
 17883                           postdec1	equ	0xFE5
 17884                           fsr1h	equ	0xFE2
 17885                           fsr1l	equ	0xFE1
 17886                           indf2	equ	0xFDF
 17887                           postinc2	equ	0xFDE
 17888                           postdec2	equ	0xFDD
 17889                           plusw2	equ	0xFDB
 17890                           fsr2h	equ	0xFDA
 17891                           fsr2l	equ	0xFD9
 17892                           status	equ	0xFD8
 17893                           
 17894 ;; *************** function _I2C_init *****************
 17895 ;; Defined at:
 17896 ;;		line 11 in file "../My_library/My_I2C.c"
 17897 ;; Parameters:    Size  Location     Type
 17898 ;;		None
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;		None
 17901 ;; Return value:  Size  Location     Type
 17902 ;;		None               void
 17903 ;; Registers used:
 17904 ;;		wreg, status,2
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17914 ;;Total ram usage:        0 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; Hardware stack levels required when called:   11
 17917 ;; This function calls:
 17918 ;;		Nothing
 17919 ;; This function is called by:
 17920 ;;		_hardware_init
 17921 ;; This function uses a non-reentrant model
 17922 ;;
 17923                           
 17924                           	psect	text65
 17925  016C7A                     __ptext65:
 17926                           	opt stack 0
 17927  016C7A                     _I2C_init:
 17928                           	opt stack 18
 17929                           
 17930                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;incstack = 0
 17934  016C7A  0E80               	movlw	128
 17935  016C7C  6EC7               	movwf	4039,c	;volatile
 17936                           
 17937                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
 17938  016C7E  0E28               	movlw	40
 17939  016C80  6EC6               	movwf	4038,c	;volatile
 17940                           
 17941                           ;My_I2C.c: 14: SSP1ADD = 0x13;
 17942  016C82  0E13               	movlw	19
 17943  016C84  6EC8               	movwf	4040,c	;volatile
 17944                           
 17945                           ;My_I2C.c: 17: SSP1IF = 0;
 17946  016C86  969E               	bcf	3998,3,c	;volatile
 17947                           
 17948                           ;My_I2C.c: 18: BCL1IF = 0;
 17949  016C88  96A1               	bcf	4001,3,c	;volatile
 17950  016C8A  0012               	return		;funcret
 17951  016C8C                     __end_of_I2C_init:
 17952                           	opt stack 0
 17953                           tblptru	equ	0xFF8
 17954                           tblptrh	equ	0xFF7
 17955                           tblptrl	equ	0xFF6
 17956                           tablat	equ	0xFF5
 17957                           prodh	equ	0xFF4
 17958                           prodl	equ	0xFF3
 17959                           intcon	equ	0xFF2
 17960                           intcon2	equ	0xFF1
 17961                           postinc0	equ	0xFEE
 17962                           wreg	equ	0xFE8
 17963                           indf1	equ	0xFE7
 17964                           postinc1	equ	0xFE6
 17965                           postdec1	equ	0xFE5
 17966                           fsr1h	equ	0xFE2
 17967                           fsr1l	equ	0xFE1
 17968                           indf2	equ	0xFDF
 17969                           postinc2	equ	0xFDE
 17970                           postdec2	equ	0xFDD
 17971                           plusw2	equ	0xFDB
 17972                           fsr2h	equ	0xFDA
 17973                           fsr2l	equ	0xFD9
 17974                           status	equ	0xFD8
 17975                           
 17976 ;; *************** function _I2C_LCD_init *****************
 17977 ;; Defined at:
 17978 ;;		line 78 in file "../My_library/My_ST7032.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;		None
 17981 ;; Auto vars:     Size  Location     Type
 17982 ;;  i               1    9[BANK0 ] unsigned char 
 17983 ;;  i               1    8[BANK0 ] unsigned char 
 17984 ;; Return value:  Size  Location     Type
 17985 ;;		None               void
 17986 ;; Registers used:
 17987 ;;		wreg, status,2, status,0, cstack
 17988 ;; Tracked objects:
 17989 ;;		On entry : 0/0
 17990 ;;		On exit  : 0/0
 17991 ;;		Unchanged: 0/0
 17992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17996 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17997 ;;Total ram usage:        3 bytes
 17998 ;; Hardware stack levels used:    1
 17999 ;; Hardware stack levels required when called:   15
 18000 ;; This function calls:
 18001 ;;		_I2C_LCD_Clear
 18002 ;;		_I2C_LCD_Command
 18003 ;; This function is called by:
 18004 ;;		_hardware_init
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text66
 18009  015C4A                     __ptext66:
 18010                           	opt stack 0
 18011  015C4A                     _I2C_LCD_init:
 18012                           	opt stack 14
 18013                           
 18014                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18015                           
 18016                           ;incstack = 0
 18017  015C4A  0E00               	movlw	0
 18018  015C4C  0100               	movlb	0	; () banked
 18019  015C4E  6F68               	movwf	I2C_LCD_init@i& (0+255),b
 18020  015C50                     l11921:
 18021                           
 18022                           ; BSR set to: 0
 18023  015C50  0E27               	movlw	39
 18024  015C52  0100               	movlb	0	; () banked
 18025  015C54  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
 18026  015C56  D001               	goto	l11925
 18027  015C58  D00C               	goto	l11929
 18028  015C5A                     l11925:
 18029                           
 18030                           ; BSR set to: 0
 18031  015C5A  0E10               	movlw	16
 18032  015C5C  0100               	movlb	0	; () banked
 18033  015C5E  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18034  015C60  0E94               	movlw	148
 18035  015C62                     u14857:
 18036  015C62  2EE8               	decfsz	wreg,f,c
 18037  015C64  D7FE               	goto	u14857
 18038  015C66  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18039  015C68  D7FC               	goto	u14857
 18040  015C6A  D000               	nop2	
 18041  015C6C  0100               	movlb	0	; () banked
 18042  015C6E  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
 18043  015C70  D7EF               	goto	l11921
 18044  015C72                     l11929:
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
 18048  015C72  0E38               	movlw	56
 18049  015C74  EC01  F0B4         	call	_I2C_LCD_Command
 18050                           
 18051                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
 18052  015C78  0E39               	movlw	57
 18053  015C7A  EC01  F0B4         	call	_I2C_LCD_Command
 18054                           
 18055                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
 18056  015C7E  0E14               	movlw	20
 18057  015C80  EC01  F0B4         	call	_I2C_LCD_Command
 18058                           
 18059                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
 18060  015C84  0E70               	movlw	112
 18061  015C86  EC01  F0B4         	call	_I2C_LCD_Command
 18062                           
 18063                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
 18064  015C8A  0E56               	movlw	86
 18065  015C8C  EC01  F0B4         	call	_I2C_LCD_Command
 18066                           
 18067                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
 18068  015C90  0E6C               	movlw	108
 18069  015C92  EC01  F0B4         	call	_I2C_LCD_Command
 18070                           
 18071                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18072  015C96  0E00               	movlw	0
 18073  015C98  0100               	movlb	0	; () banked
 18074  015C9A  6F69               	movwf	I2C_LCD_init@i_3479& (0+255),b
 18075  015C9C                     l11933:
 18076                           
 18077                           ; BSR set to: 0
 18078  015C9C  0E27               	movlw	39
 18079  015C9E  0100               	movlb	0	; () banked
 18080  015CA0  6569               	cpfsgt	I2C_LCD_init@i_3479& (0+255),b
 18081  015CA2  D001               	goto	l11937
 18082  015CA4  D00C               	goto	l11941
 18083  015CA6                     l11937:
 18084                           
 18085                           ; BSR set to: 0
 18086  015CA6  0E10               	movlw	16
 18087  015CA8  0100               	movlb	0	; () banked
 18088  015CAA  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18089  015CAC  0E94               	movlw	148
 18090  015CAE                     u14867:
 18091  015CAE  2EE8               	decfsz	wreg,f,c
 18092  015CB0  D7FE               	goto	u14867
 18093  015CB2  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18094  015CB4  D7FC               	goto	u14867
 18095  015CB6  D000               	nop2	
 18096  015CB8  0100               	movlb	0	; () banked
 18097  015CBA  2B69               	incf	I2C_LCD_init@i_3479& (0+255),f,b
 18098  015CBC  D7EF               	goto	l11933
 18099  015CBE                     l11941:
 18100                           
 18101                           ; BSR set to: 0
 18102                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
 18103  015CBE  0E38               	movlw	56
 18104  015CC0  EC01  F0B4         	call	_I2C_LCD_Command
 18105                           
 18106                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
 18107  015CC4  0E0C               	movlw	12
 18108  015CC6  EC01  F0B4         	call	_I2C_LCD_Command
 18109                           
 18110                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
 18111  015CCA  0E06               	movlw	6
 18112  015CCC  EC01  F0B4         	call	_I2C_LCD_Command
 18113                           
 18114                           ;My_ST7032.c: 90: I2C_LCD_Clear();
 18115  015CD0  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
 18116  015CD4  0012               	return		;funcret
 18117  015CD6                     __end_of_I2C_LCD_init:
 18118                           	opt stack 0
 18119                           tblptru	equ	0xFF8
 18120                           tblptrh	equ	0xFF7
 18121                           tblptrl	equ	0xFF6
 18122                           tablat	equ	0xFF5
 18123                           prodh	equ	0xFF4
 18124                           prodl	equ	0xFF3
 18125                           intcon	equ	0xFF2
 18126                           intcon2	equ	0xFF1
 18127                           postinc0	equ	0xFEE
 18128                           wreg	equ	0xFE8
 18129                           indf1	equ	0xFE7
 18130                           postinc1	equ	0xFE6
 18131                           postdec1	equ	0xFE5
 18132                           fsr1h	equ	0xFE2
 18133                           fsr1l	equ	0xFE1
 18134                           indf2	equ	0xFDF
 18135                           postinc2	equ	0xFDE
 18136                           postdec2	equ	0xFDD
 18137                           plusw2	equ	0xFDB
 18138                           fsr2h	equ	0xFDA
 18139                           fsr2l	equ	0xFD9
 18140                           status	equ	0xFD8
 18141                           
 18142 ;; *************** function _I2C_LCD_Clear *****************
 18143 ;; Defined at:
 18144 ;;		line 21 in file "../My_library/My_ST7032.c"
 18145 ;; Parameters:    Size  Location     Type
 18146 ;;		None
 18147 ;; Auto vars:     Size  Location     Type
 18148 ;;		None
 18149 ;; Return value:  Size  Location     Type
 18150 ;;		None               void
 18151 ;; Registers used:
 18152 ;;		wreg, status,2, status,0, cstack
 18153 ;; Tracked objects:
 18154 ;;		On entry : 0/0
 18155 ;;		On exit  : 0/0
 18156 ;;		Unchanged: 0/0
 18157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18161 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18162 ;;Total ram usage:        1 bytes
 18163 ;; Hardware stack levels used:    1
 18164 ;; Hardware stack levels required when called:   14
 18165 ;; This function calls:
 18166 ;;		_I2C_LCD_Command
 18167 ;; This function is called by:
 18168 ;;		_sleep_task
 18169 ;;		_bootload
 18170 ;;		_display_LCD
 18171 ;;		_I2C_LCD_init
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175                           	psect	text67
 18176  016C2E                     __ptext67:
 18177                           	opt stack 0
 18178  016C2E                     _I2C_LCD_Clear:
 18179                           	opt stack 13
 18180                           
 18181                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
 18182                           
 18183                           ;incstack = 0
 18184  016C2E  0E01               	movlw	1
 18185  016C30  EC01  F0B4         	call	_I2C_LCD_Command
 18186                           
 18187                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18188  016C34  0E12               	movlw	18
 18189  016C36  0100               	movlb	0	; () banked
 18190  016C38  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18191  016C3A  0E23               	movlw	35
 18192  016C3C                     u14877:
 18193  016C3C  2EE8               	decfsz	wreg,f,c
 18194  016C3E  D7FE               	goto	u14877
 18195  016C40  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18196  016C42  D7FC               	goto	u14877
 18197  016C44  F000               	nop	
 18198  016C46  0012               	return		;funcret
 18199  016C48                     __end_of_I2C_LCD_Clear:
 18200                           	opt stack 0
 18201                           tblptru	equ	0xFF8
 18202                           tblptrh	equ	0xFF7
 18203                           tblptrl	equ	0xFF6
 18204                           tablat	equ	0xFF5
 18205                           prodh	equ	0xFF4
 18206                           prodl	equ	0xFF3
 18207                           intcon	equ	0xFF2
 18208                           intcon2	equ	0xFF1
 18209                           postinc0	equ	0xFEE
 18210                           wreg	equ	0xFE8
 18211                           indf1	equ	0xFE7
 18212                           postinc1	equ	0xFE6
 18213                           postdec1	equ	0xFE5
 18214                           fsr1h	equ	0xFE2
 18215                           fsr1l	equ	0xFE1
 18216                           indf2	equ	0xFDF
 18217                           postinc2	equ	0xFDE
 18218                           postdec2	equ	0xFDD
 18219                           plusw2	equ	0xFDB
 18220                           fsr2h	equ	0xFDA
 18221                           fsr2l	equ	0xFD9
 18222                           status	equ	0xFD8
 18223                           
 18224 ;; *************** function _I2C_LCD_Command *****************
 18225 ;; Defined at:
 18226 ;;		line 8 in file "../My_library/My_ST7032.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  c               1    wreg     unsigned char 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  c               1    4[BANK0 ] unsigned char 
 18231 ;;  ans             1    5[BANK0 ] unsigned char 
 18232 ;; Return value:  Size  Location     Type
 18233 ;;		None               void
 18234 ;; Registers used:
 18235 ;;		wreg, status,2, status,0, cstack
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18245 ;;Total ram usage:        2 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:   13
 18248 ;; This function calls:
 18249 ;;		_I2C_Send
 18250 ;;		_I2C_Start
 18251 ;;		_I2C_Stop
 18252 ;; This function is called by:
 18253 ;;		_I2C_LCD_Clear
 18254 ;;		_I2C_LCD_SetCursor
 18255 ;;		_I2C_LCD_init
 18256 ;; This function uses a non-reentrant model
 18257 ;;
 18258                           
 18259                           	psect	text68
 18260  016802                     __ptext68:
 18261                           	opt stack 0
 18262  016802                     _I2C_LCD_Command:
 18263                           	opt stack 13
 18264                           
 18265                           ;incstack = 0
 18266                           ;I2C_LCD_Command@c stored from wreg
 18267  016802  0100               	movlb	0	; () banked
 18268  016804  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 18269                           
 18270                           ;My_ST7032.c: 9: uint8_t ans;
 18271                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
 18272  016806  0E00               	movlw	0
 18273  016808  0100               	movlb	0	; () banked
 18274  01680A  6F62               	movwf	I2C_Start@rw& (0+255),b
 18275  01680C  0E3E               	movlw	62
 18276  01680E  EC6B  F0B4         	call	_I2C_Start
 18277  016812  0100               	movlb	0	; () banked
 18278  016814  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;My_ST7032.c: 12: if (ans == 0) {
 18282  016816  0100               	movlb	0	; () banked
 18283  016818  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 18284  01681A  0100               	movlb	0	; () banked
 18285  01681C  A4D8               	btfss	status,2,c
 18286  01681E  D007               	goto	l1020
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
 18290  016820  0E80               	movlw	128
 18291  016822  EC31  F0B6         	call	_I2C_Send
 18292                           
 18293                           ;My_ST7032.c: 15: I2C_Send(c);
 18294  016826  0100               	movlb	0	; () banked
 18295  016828  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 18296  01682A  EC31  F0B6         	call	_I2C_Send
 18297  01682E                     l1020:
 18298                           
 18299                           ;My_ST7032.c: 16: }
 18300                           ;My_ST7032.c: 17: I2C_Stop();
 18301  01682E  EC4E  F0B6         	call	_I2C_Stop	;wreg free
 18302                           
 18303                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
 18304  016832  0E68               	movlw	104
 18305  016834                     u14887:
 18306  016834  2EE8               	decfsz	wreg,f,c
 18307  016836  D7FE               	goto	u14887
 18308  016838  0012               	return		;funcret
 18309  01683A                     __end_of_I2C_LCD_Command:
 18310                           	opt stack 0
 18311                           tblptru	equ	0xFF8
 18312                           tblptrh	equ	0xFF7
 18313                           tblptrl	equ	0xFF6
 18314                           tablat	equ	0xFF5
 18315                           prodh	equ	0xFF4
 18316                           prodl	equ	0xFF3
 18317                           intcon	equ	0xFF2
 18318                           intcon2	equ	0xFF1
 18319                           postinc0	equ	0xFEE
 18320                           wreg	equ	0xFE8
 18321                           indf1	equ	0xFE7
 18322                           postinc1	equ	0xFE6
 18323                           postdec1	equ	0xFE5
 18324                           fsr1h	equ	0xFE2
 18325                           fsr1l	equ	0xFE1
 18326                           indf2	equ	0xFDF
 18327                           postinc2	equ	0xFDE
 18328                           postdec2	equ	0xFDD
 18329                           plusw2	equ	0xFDB
 18330                           fsr2h	equ	0xFDA
 18331                           fsr2l	equ	0xFD9
 18332                           status	equ	0xFD8
 18333                           
 18334 ;; *************** function _I2C_Stop *****************
 18335 ;; Defined at:
 18336 ;;		line 45 in file "../My_library/My_I2C.c"
 18337 ;; Parameters:    Size  Location     Type
 18338 ;;		None
 18339 ;; Auto vars:     Size  Location     Type
 18340 ;;		None
 18341 ;; Return value:  Size  Location     Type
 18342 ;;		None               void
 18343 ;; Registers used:
 18344 ;;		wreg, status,2, status,0, cstack
 18345 ;; Tracked objects:
 18346 ;;		On entry : 0/0
 18347 ;;		On exit  : 0/0
 18348 ;;		Unchanged: 0/0
 18349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18354 ;;Total ram usage:        0 bytes
 18355 ;; Hardware stack levels used:    1
 18356 ;; Hardware stack levels required when called:   12
 18357 ;; This function calls:
 18358 ;;		_I2C_IdleCheck
 18359 ;; This function is called by:
 18360 ;;		_I2C_LCD_Command
 18361 ;;		_I2C_LCD_Puts
 18362 ;;		_I2C_LCD_Putc
 18363 ;;		_I2C_LCD_CreateChar
 18364 ;; This function uses a non-reentrant model
 18365 ;;
 18366                           
 18367                           	psect	text69
 18368  016C9C                     __ptext69:
 18369                           	opt stack 0
 18370  016C9C                     _I2C_Stop:
 18371                           	opt stack 13
 18372                           
 18373                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
 18374                           
 18375                           ;incstack = 0
 18376  016C9C  0E05               	movlw	5
 18377  016C9E  ECDF  F0B5         	call	_I2C_IdleCheck
 18378                           
 18379                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
 18380  016CA2  84C5               	bsf	4037,2,c	;volatile
 18381  016CA4  0012               	return		;funcret
 18382  016CA6                     __end_of_I2C_Stop:
 18383                           	opt stack 0
 18384                           tblptru	equ	0xFF8
 18385                           tblptrh	equ	0xFF7
 18386                           tblptrl	equ	0xFF6
 18387                           tablat	equ	0xFF5
 18388                           prodh	equ	0xFF4
 18389                           prodl	equ	0xFF3
 18390                           intcon	equ	0xFF2
 18391                           intcon2	equ	0xFF1
 18392                           postinc0	equ	0xFEE
 18393                           wreg	equ	0xFE8
 18394                           indf1	equ	0xFE7
 18395                           postinc1	equ	0xFE6
 18396                           postdec1	equ	0xFE5
 18397                           fsr1h	equ	0xFE2
 18398                           fsr1l	equ	0xFE1
 18399                           indf2	equ	0xFDF
 18400                           postinc2	equ	0xFDE
 18401                           postdec2	equ	0xFDD
 18402                           plusw2	equ	0xFDB
 18403                           fsr2h	equ	0xFDA
 18404                           fsr2l	equ	0xFD9
 18405                           status	equ	0xFD8
 18406                           
 18407 ;; *************** function _I2C_Start *****************
 18408 ;; Defined at:
 18409 ;;		line 21 in file "../My_library/My_I2C.c"
 18410 ;; Parameters:    Size  Location     Type
 18411 ;;  adrs            1    wreg     unsigned char 
 18412 ;;  rw              1    2[BANK0 ] unsigned char 
 18413 ;; Auto vars:     Size  Location     Type
 18414 ;;  adrs            1    3[BANK0 ] unsigned char 
 18415 ;; Return value:  Size  Location     Type
 18416 ;;                  1    wreg      unsigned char 
 18417 ;; Registers used:
 18418 ;;		wreg, status,2, status,0, cstack
 18419 ;; Tracked objects:
 18420 ;;		On entry : 0/0
 18421 ;;		On exit  : 0/0
 18422 ;;		Unchanged: 0/0
 18423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18424 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18428 ;;Total ram usage:        2 bytes
 18429 ;; Hardware stack levels used:    1
 18430 ;; Hardware stack levels required when called:   12
 18431 ;; This function calls:
 18432 ;;		_I2C_IdleCheck
 18433 ;; This function is called by:
 18434 ;;		_I2C_LCD_Command
 18435 ;;		_I2C_LCD_Puts
 18436 ;;		_I2C_LCD_Putc
 18437 ;;		_I2C_LCD_CreateChar
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           	psect	text70
 18442  0168D6                     __ptext70:
 18443                           	opt stack 0
 18444  0168D6                     _I2C_Start:
 18445                           	opt stack 13
 18446                           
 18447                           ;incstack = 0
 18448                           ;I2C_Start@adrs stored from wreg
 18449  0168D6  0100               	movlb	0	; () banked
 18450  0168D8  6F63               	movwf	I2C_Start@adrs& (0+255),b
 18451                           
 18452                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
 18453  0168DA  0E05               	movlw	5
 18454  0168DC  ECDF  F0B5         	call	_I2C_IdleCheck
 18455                           
 18456                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
 18457  0168E0  80C5               	bsf	4037,0,c	;volatile
 18458                           
 18459                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
 18460  0168E2  0E05               	movlw	5
 18461  0168E4  ECDF  F0B5         	call	_I2C_IdleCheck
 18462                           
 18463                           ;My_I2C.c: 27: SSP1IF = 0;
 18464  0168E8  969E               	bcf	3998,3,c	;volatile
 18465                           
 18466                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 18467  0168EA  0100               	movlb	0	; () banked
 18468  0168EC  5163               	movf	I2C_Start@adrs& (0+255),w,b
 18469  0168EE  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 18470  0168F0  0100               	movlb	0	; () banked
 18471  0168F2  2562               	addwf	I2C_Start@rw& (0+255),w,b
 18472  0168F4  6EC9               	movwf	4041,c	;volatile
 18473  0168F6                     l629:
 18474  0168F6  A69E               	btfss	3998,3,c	;volatile
 18475  0168F8  D7FE               	goto	l629
 18476                           
 18477                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
 18478  0168FA  ACC5               	btfss	4037,6,c	;volatile
 18479  0168FC  D002               	goto	u11790
 18480  0168FE  0E01               	movlw	1
 18481  016900  0012               	return	
 18482  016902                     u11790:
 18483  016902  0E00               	movlw	0
 18484  016904  0012               	return	
 18485  016906                     __end_of_I2C_Start:
 18486                           	opt stack 0
 18487                           tblptru	equ	0xFF8
 18488                           tblptrh	equ	0xFF7
 18489                           tblptrl	equ	0xFF6
 18490                           tablat	equ	0xFF5
 18491                           prodh	equ	0xFF4
 18492                           prodl	equ	0xFF3
 18493                           intcon	equ	0xFF2
 18494                           intcon2	equ	0xFF1
 18495                           postinc0	equ	0xFEE
 18496                           wreg	equ	0xFE8
 18497                           indf1	equ	0xFE7
 18498                           postinc1	equ	0xFE6
 18499                           postdec1	equ	0xFE5
 18500                           fsr1h	equ	0xFE2
 18501                           fsr1l	equ	0xFE1
 18502                           indf2	equ	0xFDF
 18503                           postinc2	equ	0xFDE
 18504                           postdec2	equ	0xFDD
 18505                           plusw2	equ	0xFDB
 18506                           fsr2h	equ	0xFDA
 18507                           fsr2l	equ	0xFD9
 18508                           status	equ	0xFD8
 18509                           
 18510 ;; *************** function _I2C_Send *****************
 18511 ;; Defined at:
 18512 ;;		line 51 in file "../My_library/My_I2C.c"
 18513 ;; Parameters:    Size  Location     Type
 18514 ;;  data            1    wreg     unsigned char 
 18515 ;; Auto vars:     Size  Location     Type
 18516 ;;  data            1    2[BANK0 ] unsigned char 
 18517 ;; Return value:  Size  Location     Type
 18518 ;;                  1    wreg      unsigned char 
 18519 ;; Registers used:
 18520 ;;		wreg, status,2, status,0, cstack
 18521 ;; Tracked objects:
 18522 ;;		On entry : 0/0
 18523 ;;		On exit  : 0/0
 18524 ;;		Unchanged: 0/0
 18525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18530 ;;Total ram usage:        1 bytes
 18531 ;; Hardware stack levels used:    1
 18532 ;; Hardware stack levels required when called:   12
 18533 ;; This function calls:
 18534 ;;		_I2C_IdleCheck
 18535 ;; This function is called by:
 18536 ;;		_I2C_LCD_Command
 18537 ;;		_I2C_LCD_Puts
 18538 ;;		_I2C_LCD_Putc
 18539 ;;		_I2C_LCD_CreateChar
 18540 ;; This function uses a non-reentrant model
 18541 ;;
 18542                           
 18543                           	psect	text71
 18544  016C62                     __ptext71:
 18545                           	opt stack 0
 18546  016C62                     _I2C_Send:
 18547                           	opt stack 13
 18548                           
 18549                           ;incstack = 0
 18550                           ;I2C_Send@data stored from wreg
 18551  016C62  0100               	movlb	0	; () banked
 18552  016C64  6F62               	movwf	I2C_Send@data& (0+255),b
 18553                           
 18554                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
 18555  016C66  0E05               	movlw	5
 18556  016C68  ECDF  F0B5         	call	_I2C_IdleCheck
 18557                           
 18558                           ;My_I2C.c: 53: SSP1IF = 0;
 18559  016C6C  969E               	bcf	3998,3,c	;volatile
 18560                           
 18561                           ;My_I2C.c: 54: SSP1BUF = data;
 18562  016C6E  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 18563  016C72                     l644:
 18564  016C72  A69E               	btfss	3998,3,c	;volatile
 18565  016C74  D7FE               	goto	l644
 18566                           
 18567                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
 18568                           ;	Return value of _I2C_Send is never used
 18569  016C76  50C5               	movf	4037,w,c	;volatile
 18570  016C78  0012               	return	
 18571  016C7A                     __end_of_I2C_Send:
 18572                           	opt stack 0
 18573                           tblptru	equ	0xFF8
 18574                           tblptrh	equ	0xFF7
 18575                           tblptrl	equ	0xFF6
 18576                           tablat	equ	0xFF5
 18577                           prodh	equ	0xFF4
 18578                           prodl	equ	0xFF3
 18579                           intcon	equ	0xFF2
 18580                           intcon2	equ	0xFF1
 18581                           postinc0	equ	0xFEE
 18582                           wreg	equ	0xFE8
 18583                           indf1	equ	0xFE7
 18584                           postinc1	equ	0xFE6
 18585                           postdec1	equ	0xFE5
 18586                           fsr1h	equ	0xFE2
 18587                           fsr1l	equ	0xFE1
 18588                           indf2	equ	0xFDF
 18589                           postinc2	equ	0xFDE
 18590                           postdec2	equ	0xFDD
 18591                           plusw2	equ	0xFDB
 18592                           fsr2h	equ	0xFDA
 18593                           fsr2l	equ	0xFD9
 18594                           status	equ	0xFD8
 18595                           
 18596 ;; *************** function _I2C_IdleCheck *****************
 18597 ;; Defined at:
 18598 ;;		line 7 in file "../My_library/My_I2C.c"
 18599 ;; Parameters:    Size  Location     Type
 18600 ;;  mask            1    wreg     unsigned char 
 18601 ;; Auto vars:     Size  Location     Type
 18602 ;;  mask            1    1[BANK0 ] unsigned char 
 18603 ;; Return value:  Size  Location     Type
 18604 ;;		None               void
 18605 ;; Registers used:
 18606 ;;		wreg, status,2, status,0
 18607 ;; Tracked objects:
 18608 ;;		On entry : 0/0
 18609 ;;		On exit  : 0/0
 18610 ;;		Unchanged: 0/0
 18611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18614 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18616 ;;Total ram usage:        2 bytes
 18617 ;; Hardware stack levels used:    1
 18618 ;; Hardware stack levels required when called:   11
 18619 ;; This function calls:
 18620 ;;		Nothing
 18621 ;; This function is called by:
 18622 ;;		_I2C_Start
 18623 ;;		_I2C_Stop
 18624 ;;		_I2C_Send
 18625 ;;		_I2C_rStart
 18626 ;;		_I2C_Receive
 18627 ;; This function uses a non-reentrant model
 18628 ;;
 18629                           
 18630                           	psect	text72
 18631  016BBE                     __ptext72:
 18632                           	opt stack 0
 18633  016BBE                     _I2C_IdleCheck:
 18634                           	opt stack 13
 18635                           
 18636                           ;incstack = 0
 18637                           ;I2C_IdleCheck@mask stored from wreg
 18638  016BBE  0100               	movlb	0	; () banked
 18639  016BC0  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 18640  016BC2                     l10161:
 18641  016BC2  50C7               	movf	4039,w,c	;volatile
 18642  016BC4  0100               	movlb	0	; () banked
 18643  016BC6  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 18644  016BC8  0100               	movlb	0	; () banked
 18645  016BCA  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 18646  016BCC  50C5               	movf	4037,w,c	;volatile
 18647  016BCE  0B1F               	andlw	31
 18648  016BD0  0100               	movlb	0	; () banked
 18649  016BD2  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 18650  016BD4  0900               	iorlw	0
 18651  016BD6  B4D8               	btfsc	status,2,c
 18652  016BD8  0012               	return	
 18653  016BDA  D7F3               	goto	l10161
 18654  016BDC                     __end_of_I2C_IdleCheck:
 18655                           	opt stack 0
 18656                           tblptru	equ	0xFF8
 18657                           tblptrh	equ	0xFF7
 18658                           tblptrl	equ	0xFF6
 18659                           tablat	equ	0xFF5
 18660                           prodh	equ	0xFF4
 18661                           prodl	equ	0xFF3
 18662                           intcon	equ	0xFF2
 18663                           intcon2	equ	0xFF1
 18664                           postinc0	equ	0xFEE
 18665                           wreg	equ	0xFE8
 18666                           indf1	equ	0xFE7
 18667                           postinc1	equ	0xFE6
 18668                           postdec1	equ	0xFE5
 18669                           fsr1h	equ	0xFE2
 18670                           fsr1l	equ	0xFE1
 18671                           indf2	equ	0xFDF
 18672                           postinc2	equ	0xFDE
 18673                           postdec2	equ	0xFDD
 18674                           plusw2	equ	0xFDB
 18675                           fsr2h	equ	0xFDA
 18676                           fsr2l	equ	0xFD9
 18677                           status	equ	0xFD8
 18678                           
 18679 ;; *************** function _CTMU_init *****************
 18680 ;; Defined at:
 18681 ;;		line 168 in file "../My_library/My_PIC.c"
 18682 ;; Parameters:    Size  Location     Type
 18683 ;;		None
 18684 ;; Auto vars:     Size  Location     Type
 18685 ;;		None
 18686 ;; Return value:  Size  Location     Type
 18687 ;;		None               void
 18688 ;; Registers used:
 18689 ;;		wreg, status,2
 18690 ;; Tracked objects:
 18691 ;;		On entry : 0/0
 18692 ;;		On exit  : 0/0
 18693 ;;		Unchanged: 0/0
 18694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18699 ;;Total ram usage:        0 bytes
 18700 ;; Hardware stack levels used:    1
 18701 ;; Hardware stack levels required when called:   11
 18702 ;; This function calls:
 18703 ;;		Nothing
 18704 ;; This function is called by:
 18705 ;;		_hardware_init
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709                           	psect	text73
 18710  016ABE                     __ptext73:
 18711                           	opt stack 0
 18712  016ABE                     _CTMU_init:
 18713                           	opt stack 18
 18714                           
 18715                           ;My_PIC.c: 169: CTMUCONH = 0x00;
 18716                           
 18717                           ; BSR set to: 0
 18718                           ;incstack = 0
 18719  016ABE  0E00               	movlw	0
 18720  016AC0  6EB3               	movwf	4019,c	;volatile
 18721                           
 18722                           ;My_PIC.c: 170: CTMUCONL = 0x90;
 18723  016AC2  0E90               	movlw	144
 18724  016AC4  6EB2               	movwf	4018,c	;volatile
 18725                           
 18726                           ;My_PIC.c: 171: CTMUICON = 0x01;
 18727  016AC6  0E01               	movlw	1
 18728  016AC8  6EB1               	movwf	4017,c	;volatile
 18729                           
 18730                           ;My_PIC.c: 173: ADCON1bits.ADFM = 1;
 18731  016ACA  8EC1               	bsf	4033,7,c	;volatile
 18732                           
 18733                           ;My_PIC.c: 174: ADCON1bits.ADCAL = 0;
 18734  016ACC  9CC1               	bcf	4033,6,c	;volatile
 18735                           
 18736                           ;My_PIC.c: 175: ADCON1bits.ACQT = 1;
 18737  016ACE  50C1               	movf	4033,w,c	;volatile
 18738  016AD0  0BC7               	andlw	-57
 18739  016AD2  0908               	iorlw	8
 18740  016AD4  6EC1               	movwf	4033,c	;volatile
 18741                           
 18742                           ;My_PIC.c: 176: ADCON1bits.ADCS = 6;
 18743  016AD6  50C1               	movf	4033,w,c	;volatile
 18744  016AD8  0BF8               	andlw	-8
 18745  016ADA  0906               	iorlw	6
 18746  016ADC  6EC1               	movwf	4033,c	;volatile
 18747                           
 18748                           ;My_PIC.c: 178: ADCON0bits.VCFG0 = 0;
 18749  016ADE  9CC2               	bcf	4034,6,c	;volatile
 18750                           
 18751                           ;My_PIC.c: 179: ADCON0bits.VCFG1 = 0;
 18752  016AE0  9EC2               	bcf	4034,7,c	;volatile
 18753                           
 18754                           ;My_PIC.c: 180: ADCON0bits.ADON = 1;
 18755  016AE2  80C2               	bsf	4034,0,c	;volatile
 18756  016AE4  0012               	return		;funcret
 18757  016AE6                     __end_of_CTMU_init:
 18758                           	opt stack 0
 18759                           tblptru	equ	0xFF8
 18760                           tblptrh	equ	0xFF7
 18761                           tblptrl	equ	0xFF6
 18762                           tablat	equ	0xFF5
 18763                           prodh	equ	0xFF4
 18764                           prodl	equ	0xFF3
 18765                           intcon	equ	0xFF2
 18766                           intcon2	equ	0xFF1
 18767                           postinc0	equ	0xFEE
 18768                           wreg	equ	0xFE8
 18769                           indf1	equ	0xFE7
 18770                           postinc1	equ	0xFE6
 18771                           postdec1	equ	0xFE5
 18772                           fsr1h	equ	0xFE2
 18773                           fsr1l	equ	0xFE1
 18774                           indf2	equ	0xFDF
 18775                           postinc2	equ	0xFDE
 18776                           postdec2	equ	0xFDD
 18777                           plusw2	equ	0xFDB
 18778                           fsr2h	equ	0xFDA
 18779                           fsr2l	equ	0xFD9
 18780                           status	equ	0xFD8
 18781                           
 18782 ;; *************** function _ADC_init *****************
 18783 ;; Defined at:
 18784 ;;		line 132 in file "../My_library/My_PIC.c"
 18785 ;; Parameters:    Size  Location     Type
 18786 ;;  p_ref           1    wreg     unsigned char 
 18787 ;; Auto vars:     Size  Location     Type
 18788 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18789 ;; Return value:  Size  Location     Type
 18790 ;;		None               void
 18791 ;; Registers used:
 18792 ;;		wreg, status,2
 18793 ;; Tracked objects:
 18794 ;;		On entry : 0/0
 18795 ;;		On exit  : 0/0
 18796 ;;		Unchanged: 0/0
 18797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18801 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18802 ;;Total ram usage:        1 bytes
 18803 ;; Hardware stack levels used:    1
 18804 ;; Hardware stack levels required when called:   11
 18805 ;; This function calls:
 18806 ;;		Nothing
 18807 ;; This function is called by:
 18808 ;;		_hardware_init
 18809 ;; This function uses a non-reentrant model
 18810 ;;
 18811                           
 18812                           	psect	text74
 18813  016B7E                     __ptext74:
 18814                           	opt stack 0
 18815  016B7E                     _ADC_init:
 18816                           	opt stack 18
 18817                           
 18818                           ;incstack = 0
 18819                           ;ADC_init@p_ref stored from wreg
 18820  016B7E  0100               	movlb	0	; () banked
 18821  016B80  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18822                           
 18823                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
 18824  016B82  9EC2               	bcf	4034,7,c	;volatile
 18825                           
 18826                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
 18827  016B84  0100               	movlb	0	; () banked
 18828  016B86  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18829  016B88  D002               	bra	u14165
 18830  016B8A  9CC2               	bcf	4034,6,c	;volatile
 18831  016B8C  D001               	bra	u14166
 18832  016B8E                     u14165:
 18833  016B8E  8CC2               	bsf	4034,6,c	;volatile
 18834  016B90                     u14166:
 18835                           
 18836                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
 18837  016B90  8EC1               	bsf	4033,7,c	;volatile
 18838                           
 18839                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
 18840  016B92  9CC1               	bcf	4033,6,c	;volatile
 18841                           
 18842                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
 18843  016B94  50C1               	movf	4033,w,c	;volatile
 18844  016B96  0BF8               	andlw	-8
 18845  016B98  0906               	iorlw	6
 18846  016B9A  6EC1               	movwf	4033,c	;volatile
 18847  016B9C  0012               	return		;funcret
 18848  016B9E                     __end_of_ADC_init:
 18849                           	opt stack 0
 18850                           tblptru	equ	0xFF8
 18851                           tblptrh	equ	0xFF7
 18852                           tblptrl	equ	0xFF6
 18853                           tablat	equ	0xFF5
 18854                           prodh	equ	0xFF4
 18855                           prodl	equ	0xFF3
 18856                           intcon	equ	0xFF2
 18857                           intcon2	equ	0xFF1
 18858                           postinc0	equ	0xFEE
 18859                           wreg	equ	0xFE8
 18860                           indf1	equ	0xFE7
 18861                           postinc1	equ	0xFE6
 18862                           postdec1	equ	0xFE5
 18863                           fsr1h	equ	0xFE2
 18864                           fsr1l	equ	0xFE1
 18865                           indf2	equ	0xFDF
 18866                           postinc2	equ	0xFDE
 18867                           postdec2	equ	0xFDD
 18868                           plusw2	equ	0xFDB
 18869                           fsr2h	equ	0xFDA
 18870                           fsr2l	equ	0xFD9
 18871                           status	equ	0xFD8
 18872                           
 18873 ;; *************** function _ctmu_task *****************
 18874 ;; Defined at:
 18875 ;;		line 29 in file "ctmu.c"
 18876 ;; Parameters:    Size  Location     Type
 18877 ;;		None
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;		None
 18880 ;; Return value:  Size  Location     Type
 18881 ;;		None               void
 18882 ;; Registers used:
 18883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18884 ;; Tracked objects:
 18885 ;;		On entry : 0/0
 18886 ;;		On exit  : 0/0
 18887 ;;		Unchanged: 0/0
 18888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18893 ;;Total ram usage:        0 bytes
 18894 ;; Hardware stack levels used:    1
 18895 ;; Hardware stack levels required when called:   14
 18896 ;; This function calls:
 18897 ;;		_ctmu_sampling
 18898 ;; This function is called by:
 18899 ;;		_main
 18900 ;; This function uses a non-reentrant model
 18901 ;;
 18902                           
 18903                           	psect	text75
 18904  016C8C                     __ptext75:
 18905                           	opt stack 0
 18906  016C8C                     _ctmu_task:
 18907                           	opt stack 16
 18908                           
 18909                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18910                           
 18911                           ;incstack = 0
 18912  016C8C  501A               	movf	_ctmu_sampling_flag,w,c
 18913  016C8E  B4D8               	btfsc	status,2,c
 18914  016C90  0012               	return	
 18915                           
 18916                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18917  016C92  0E00               	movlw	0
 18918  016C94  6E1A               	movwf	_ctmu_sampling_flag,c
 18919                           
 18920                           ;ctmu.c: 32: ctmu_sampling();
 18921  016C96  ECBF  F09E         	call	_ctmu_sampling	;wreg free
 18922  016C9A  0012               	return	
 18923  016C9C                     __end_of_ctmu_task:
 18924                           	opt stack 0
 18925                           tblptru	equ	0xFF8
 18926                           tblptrh	equ	0xFF7
 18927                           tblptrl	equ	0xFF6
 18928                           tablat	equ	0xFF5
 18929                           prodh	equ	0xFF4
 18930                           prodl	equ	0xFF3
 18931                           intcon	equ	0xFF2
 18932                           intcon2	equ	0xFF1
 18933                           postinc0	equ	0xFEE
 18934                           wreg	equ	0xFE8
 18935                           indf1	equ	0xFE7
 18936                           postinc1	equ	0xFE6
 18937                           postdec1	equ	0xFE5
 18938                           fsr1h	equ	0xFE2
 18939                           fsr1l	equ	0xFE1
 18940                           indf2	equ	0xFDF
 18941                           postinc2	equ	0xFDE
 18942                           postdec2	equ	0xFDD
 18943                           plusw2	equ	0xFDB
 18944                           fsr2h	equ	0xFDA
 18945                           fsr2l	equ	0xFD9
 18946                           status	equ	0xFD8
 18947                           
 18948 ;; *************** function _ctmu_sampling *****************
 18949 ;; Defined at:
 18950 ;;		line 22 in file "ctmu.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;		None
 18953 ;; Auto vars:     Size  Location     Type
 18954 ;;		None
 18955 ;; Return value:  Size  Location     Type
 18956 ;;		None               void
 18957 ;; Registers used:
 18958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18959 ;; Tracked objects:
 18960 ;;		On entry : 0/0
 18961 ;;		On exit  : 0/0
 18962 ;;		Unchanged: 0/0
 18963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18968 ;;Total ram usage:        0 bytes
 18969 ;; Hardware stack levels used:    1
 18970 ;; Hardware stack levels required when called:   13
 18971 ;; This function calls:
 18972 ;;		_CTMU_read
 18973 ;;		___lwdiv
 18974 ;;		_button_timer_interrupt
 18975 ;; This function is called by:
 18976 ;;		_ctmu_task
 18977 ;; This function uses a non-reentrant model
 18978 ;;
 18979                           
 18980                           	psect	text76
 18981  013D7E                     __ptext76:
 18982                           	opt stack 0
 18983  013D7E                     _ctmu_sampling:
 18984                           	opt stack 16
 18985                           
 18986                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 18987                           
 18988                           ;incstack = 0
 18989  013D7E  0E2D               	movlw	low _port
 18990  013D80  0100               	movlb	0	; () banked
 18991  013D82  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18992  013D84  0E01               	movlw	high _port
 18993  013D86  0100               	movlb	0	; () banked
 18994  013D88  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18995  013D8A  0E00               	movlw	0
 18996  013D8C  EC4D  F0A8         	call	_CTMU_read
 18997  013D90  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18998  013D94  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18999  013D98  C131  F07E         	movff	_port+4,___lwdiv@divisor
 19000  013D9C  C132  F07F         	movff	_port+5,___lwdiv@divisor+1
 19001  013DA0  EC2A  F0AF         	call	___lwdiv	;wreg free
 19002  013DA4  0100               	movlb	0	; () banked
 19003  013DA6  517C               	movf	?___lwdiv& (0+255),w,b
 19004  013DA8  0100               	movlb	0	; () banked
 19005  013DAA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19006  013DAC  A4D8               	btfss	status,2,c
 19007  013DAE  D002               	goto	u14000
 19008  013DB0  0E01               	movlw	1
 19009  013DB2  D001               	goto	u14010
 19010  013DB4                     u14000:
 19011  013DB4  0E00               	movlw	0
 19012  013DB6                     u14010:
 19013  013DB6  0100               	movlb	0	; () banked
 19014  013DB8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19015  013DBA  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19016                           
 19017                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19018  013DBE  0E44               	movlw	low (_port+23)
 19019  013DC0  0100               	movlb	0	; () banked
 19020  013DC2  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19021  013DC4  0E01               	movlw	high (_port+23)
 19022  013DC6  0100               	movlb	0	; () banked
 19023  013DC8  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19024  013DCA  0E01               	movlw	1
 19025  013DCC  EC4D  F0A8         	call	_CTMU_read
 19026  013DD0  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19027  013DD4  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19028  013DD8  C148  F07E         	movff	_port+27,___lwdiv@divisor
 19029  013DDC  C149  F07F         	movff	_port+28,___lwdiv@divisor+1
 19030  013DE0  EC2A  F0AF         	call	___lwdiv	;wreg free
 19031  013DE4  0100               	movlb	0	; () banked
 19032  013DE6  517C               	movf	?___lwdiv& (0+255),w,b
 19033  013DE8  0100               	movlb	0	; () banked
 19034  013DEA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19035  013DEC  A4D8               	btfss	status,2,c
 19036  013DEE  D002               	goto	u14020
 19037  013DF0  0E01               	movlw	1
 19038  013DF2  D001               	goto	u14030
 19039  013DF4                     u14020:
 19040  013DF4  0E00               	movlw	0
 19041  013DF6                     u14030:
 19042  013DF6  0100               	movlb	0	; () banked
 19043  013DF8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19044  013DFA  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19045                           
 19046                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19047  013DFE  0E5B               	movlw	low (_port+46)
 19048  013E00  0100               	movlb	0	; () banked
 19049  013E02  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19050  013E04  0E01               	movlw	high (_port+46)
 19051  013E06  0100               	movlb	0	; () banked
 19052  013E08  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19053  013E0A  0E02               	movlw	2
 19054  013E0C  EC4D  F0A8         	call	_CTMU_read
 19055  013E10  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19056  013E14  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19057  013E18  C15F  F07E         	movff	_port+50,___lwdiv@divisor
 19058  013E1C  C160  F07F         	movff	_port+51,___lwdiv@divisor+1
 19059  013E20  EC2A  F0AF         	call	___lwdiv	;wreg free
 19060  013E24  0100               	movlb	0	; () banked
 19061  013E26  517C               	movf	?___lwdiv& (0+255),w,b
 19062  013E28  0100               	movlb	0	; () banked
 19063  013E2A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19064  013E2C  A4D8               	btfss	status,2,c
 19065  013E2E  D002               	goto	u14040
 19066  013E30  0E01               	movlw	1
 19067  013E32  D001               	goto	u14050
 19068  013E34                     u14040:
 19069  013E34  0E00               	movlw	0
 19070  013E36                     u14050:
 19071  013E36  0100               	movlb	0	; () banked
 19072  013E38  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19073  013E3A  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19074                           
 19075                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19076  013E3E  0E27               	movlw	low _ctmu_m
 19077  013E40  0100               	movlb	0	; () banked
 19078  013E42  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19079  013E44  0E00               	movlw	high _ctmu_m
 19080  013E46  0100               	movlb	0	; () banked
 19081  013E48  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19082  013E4A  0E03               	movlw	3
 19083  013E4C  EC4D  F0A8         	call	_CTMU_read
 19084  013E50  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19085  013E54  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19086  013E58  C11A  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19087  013E5C  C11B  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19088  013E60  EC2A  F0AF         	call	___lwdiv	;wreg free
 19089  013E64  0100               	movlb	0	; () banked
 19090  013E66  517C               	movf	?___lwdiv& (0+255),w,b
 19091  013E68  0100               	movlb	0	; () banked
 19092  013E6A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19093  013E6C  A4D8               	btfss	status,2,c
 19094  013E6E  D002               	goto	u14060
 19095  013E70  0E01               	movlw	1
 19096  013E72  D001               	goto	u14070
 19097  013E74                     u14060:
 19098  013E74  0E00               	movlw	0
 19099  013E76                     u14070:
 19100  013E76  0100               	movlb	0	; () banked
 19101  013E78  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19102  013E7A  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19103  013E7E  0012               	return		;funcret
 19104  013E80                     __end_of_ctmu_sampling:
 19105                           	opt stack 0
 19106                           tblptru	equ	0xFF8
 19107                           tblptrh	equ	0xFF7
 19108                           tblptrl	equ	0xFF6
 19109                           tablat	equ	0xFF5
 19110                           prodh	equ	0xFF4
 19111                           prodl	equ	0xFF3
 19112                           intcon	equ	0xFF2
 19113                           intcon2	equ	0xFF1
 19114                           postinc0	equ	0xFEE
 19115                           wreg	equ	0xFE8
 19116                           indf1	equ	0xFE7
 19117                           postinc1	equ	0xFE6
 19118                           postdec1	equ	0xFE5
 19119                           fsr1h	equ	0xFE2
 19120                           fsr1l	equ	0xFE1
 19121                           indf2	equ	0xFDF
 19122                           postinc2	equ	0xFDE
 19123                           postdec2	equ	0xFDD
 19124                           plusw2	equ	0xFDB
 19125                           fsr2h	equ	0xFDA
 19126                           fsr2l	equ	0xFD9
 19127                           status	equ	0xFD8
 19128                           
 19129 ;; *************** function _button_timer_interrupt *****************
 19130 ;; Defined at:
 19131 ;;		line 3 in file "../My_library/My_button.c"
 19132 ;; Parameters:    Size  Location     Type
 19133 ;;  bt              2   35[BANK0 ] PTR struct button
 19134 ;;		 -> ctmu_m(4), port(69), 
 19135 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;		None               void
 19140 ;; Registers used:
 19141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19147 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19150 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19151 ;;Total ram usage:        5 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:   11
 19154 ;; This function calls:
 19155 ;;		Nothing
 19156 ;; This function is called by:
 19157 ;;		_ctmu_sampling
 19158 ;; This function uses a non-reentrant model
 19159 ;;
 19160                           
 19161                           	psect	text77
 19162  0110F6                     __ptext77:
 19163                           	opt stack 0
 19164  0110F6                     _button_timer_interrupt:
 19165                           	opt stack 17
 19166                           
 19167                           ;My_button.c: 4: if (sw_value) {
 19168                           
 19169                           ;incstack = 0
 19170  0110F6  0100               	movlb	0	; () banked
 19171  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19172  0110FA  0100               	movlb	0	; () banked
 19173  0110FC  B4D8               	btfsc	status,2,c
 19174  0110FE  D0A8               	goto	l8011
 19175                           
 19176                           ; BSR set to: 0
 19177                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19178  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19179  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19180  011108  0E84               	movlw	132
 19181  01110A  18DE               	xorwf	postinc2,w,c
 19182  01110C  E10D               	bnz	l576
 19183  01110E  0E03               	movlw	3
 19184  011110  18DE               	xorwf	postinc2,w,c
 19185  011112  A4D8               	btfss	status,2,c
 19186  011114  D009               	goto	l576
 19187                           
 19188                           ; BSR set to: 0
 19189  011116  0100               	movlb	0	; () banked
 19190  011118  EE20 F003          	lfsr	2,3
 19191  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19192  01111E  26D9               	addwf	fsr2l,f,c
 19193  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19194  011122  22DA               	addwfc	fsr2h,f,c
 19195  011124  0100               	movlb	0	; () banked
 19196  011126  8EDF               	bsf	indf2,7,c
 19197  011128                     l576:
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19201  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19202  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19203  011130  0EBC               	movlw	188
 19204  011132  18DE               	xorwf	postinc2,w,c
 19205  011134  E10D               	bnz	l577
 19206  011136  0E02               	movlw	2
 19207  011138  18DE               	xorwf	postinc2,w,c
 19208  01113A  A4D8               	btfss	status,2,c
 19209  01113C  D009               	goto	l577
 19210                           
 19211                           ; BSR set to: 0
 19212  01113E  0100               	movlb	0	; () banked
 19213  011140  EE20 F003          	lfsr	2,3
 19214  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19215  011146  26D9               	addwf	fsr2l,f,c
 19216  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19217  01114A  22DA               	addwfc	fsr2h,f,c
 19218  01114C  0100               	movlb	0	; () banked
 19219  01114E  8CDF               	bsf	indf2,6,c
 19220  011150                     l577:
 19221                           
 19222                           ; BSR set to: 0
 19223                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19224  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19225  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19226  011158  0EF4               	movlw	244
 19227  01115A  18DE               	xorwf	postinc2,w,c
 19228  01115C  E10C               	bnz	l578
 19229  01115E  04DE               	decf	postinc2,w,c
 19230  011160  A4D8               	btfss	status,2,c
 19231  011162  D009               	goto	l578
 19232                           
 19233                           ; BSR set to: 0
 19234  011164  0100               	movlb	0	; () banked
 19235  011166  EE20 F003          	lfsr	2,3
 19236  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19237  01116C  26D9               	addwf	fsr2l,f,c
 19238  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19239  011170  22DA               	addwfc	fsr2h,f,c
 19240  011172  0100               	movlb	0	; () banked
 19241  011174  8ADF               	bsf	indf2,5,c
 19242  011176                     l578:
 19243                           
 19244                           ; BSR set to: 0
 19245                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19246  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19247  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19248  01117E  0E2C               	movlw	44
 19249  011180  18DE               	xorwf	postinc2,w,c
 19250  011182  E10C               	bnz	l579
 19251  011184  04DE               	decf	postinc2,w,c
 19252  011186  A4D8               	btfss	status,2,c
 19253  011188  D009               	goto	l579
 19254                           
 19255                           ; BSR set to: 0
 19256  01118A  0100               	movlb	0	; () banked
 19257  01118C  EE20 F003          	lfsr	2,3
 19258  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19259  011192  26D9               	addwf	fsr2l,f,c
 19260  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19261  011196  22DA               	addwfc	fsr2h,f,c
 19262  011198  0100               	movlb	0	; () banked
 19263  01119A  88DF               	bsf	indf2,4,c
 19264  01119C                     l579:
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19268  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19269  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19270  0111A4  0E96               	movlw	150
 19271  0111A6  18DE               	xorwf	postinc2,w,c
 19272  0111A8  10DE               	iorwf	postinc2,w,c
 19273  0111AA  A4D8               	btfss	status,2,c
 19274  0111AC  D009               	goto	l580
 19275                           
 19276                           ; BSR set to: 0
 19277  0111AE  0100               	movlb	0	; () banked
 19278  0111B0  EE20 F003          	lfsr	2,3
 19279  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19280  0111B6  26D9               	addwf	fsr2l,f,c
 19281  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19282  0111BA  22DA               	addwfc	fsr2h,f,c
 19283  0111BC  0100               	movlb	0	; () banked
 19284  0111BE  86DF               	bsf	indf2,3,c
 19285  0111C0                     l580:
 19286                           
 19287                           ; BSR set to: 0
 19288                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19289  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19290  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19291  0111C8  0E3C               	movlw	60
 19292  0111CA  18DE               	xorwf	postinc2,w,c
 19293  0111CC  10DE               	iorwf	postinc2,w,c
 19294  0111CE  A4D8               	btfss	status,2,c
 19295  0111D0  D009               	goto	l581
 19296                           
 19297                           ; BSR set to: 0
 19298  0111D2  0100               	movlb	0	; () banked
 19299  0111D4  EE20 F003          	lfsr	2,3
 19300  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19301  0111DA  26D9               	addwf	fsr2l,f,c
 19302  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19303  0111DE  22DA               	addwfc	fsr2h,f,c
 19304  0111E0  0100               	movlb	0	; () banked
 19305  0111E2  84DF               	bsf	indf2,2,c
 19306  0111E4                     l581:
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19310  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19311  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19312  0111EC  0E10               	movlw	16
 19313  0111EE  18DE               	xorwf	postinc2,w,c
 19314  0111F0  10DE               	iorwf	postinc2,w,c
 19315  0111F2  A4D8               	btfss	status,2,c
 19316  0111F4  D009               	goto	l582
 19317                           
 19318                           ; BSR set to: 0
 19319  0111F6  0100               	movlb	0	; () banked
 19320  0111F8  EE20 F003          	lfsr	2,3
 19321  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19322  0111FE  26D9               	addwf	fsr2l,f,c
 19323  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19324  011202  22DA               	addwfc	fsr2h,f,c
 19325  011204  0100               	movlb	0	; () banked
 19326  011206  82DF               	bsf	indf2,1,c
 19327  011208                     l582:
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19331  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19332  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19333  011210  0E02               	movlw	2
 19334  011212  18DE               	xorwf	postinc2,w,c
 19335  011214  10DE               	iorwf	postinc2,w,c
 19336  011216  A4D8               	btfss	status,2,c
 19337  011218  D009               	goto	l583
 19338                           
 19339                           ; BSR set to: 0
 19340  01121A  0100               	movlb	0	; () banked
 19341  01121C  EE20 F003          	lfsr	2,3
 19342  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19343  011222  26D9               	addwf	fsr2l,f,c
 19344  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19345  011226  22DA               	addwfc	fsr2h,f,c
 19346  011228  0100               	movlb	0	; () banked
 19347  01122A  80DF               	bsf	indf2,0,c
 19348  01122C                     l583:
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19352  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19353  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19354  011234  0E85               	movlw	133
 19355  011236  5CDE               	subwf	postinc2,w,c
 19356  011238  0E03               	movlw	3
 19357  01123A  58DE               	subwfb	postinc2,w,c
 19358  01123C  B0D8               	btfsc	status,0,c
 19359  01123E  0012               	return	
 19360                           
 19361                           ; BSR set to: 0
 19362  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19363  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19364  011248  2ADE               	incf	postinc2,f,c
 19365  01124A  0E00               	movlw	0
 19366  01124C  22DD               	addwfc	postdec2,f,c
 19367                           
 19368                           ; BSR set to: 0
 19369                           ;My_button.c: 14: } else {
 19370  01124E  0012               	return	
 19371  011250                     l8011:
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19375  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19376  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19377  011258  0E84               	movlw	132
 19378  01125A  5CDE               	subwf	postinc2,w,c
 19379  01125C  0E03               	movlw	3
 19380  01125E  58DE               	subwfb	postinc2,w,c
 19381  011260  A0D8               	btfss	status,0,c
 19382  011262  D00A               	goto	l8015
 19383                           
 19384                           ; BSR set to: 0
 19385  011264  0100               	movlb	0	; () banked
 19386  011266  EE20 F002          	lfsr	2,2
 19387  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19388  01126C  26D9               	addwf	fsr2l,f,c
 19389  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19390  011270  22DA               	addwfc	fsr2h,f,c
 19391  011272  0100               	movlb	0	; () banked
 19392  011274  8EDF               	bsf	indf2,7,c
 19393  011276  D08F               	goto	l8043
 19394  011278                     l8015:
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19398  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19399  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19400  011280  0EBC               	movlw	188
 19401  011282  5CDE               	subwf	postinc2,w,c
 19402  011284  0E02               	movlw	2
 19403  011286  58DE               	subwfb	postinc2,w,c
 19404  011288  A0D8               	btfss	status,0,c
 19405  01128A  D00A               	goto	l8019
 19406                           
 19407                           ; BSR set to: 0
 19408  01128C  0100               	movlb	0	; () banked
 19409  01128E  EE20 F002          	lfsr	2,2
 19410  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19411  011294  26D9               	addwf	fsr2l,f,c
 19412  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19413  011298  22DA               	addwfc	fsr2h,f,c
 19414  01129A  0100               	movlb	0	; () banked
 19415  01129C  8CDF               	bsf	indf2,6,c
 19416  01129E  D07B               	goto	l8043
 19417  0112A0                     l8019:
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19421  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19422  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19423  0112A8  0EF4               	movlw	244
 19424  0112AA  5CDE               	subwf	postinc2,w,c
 19425  0112AC  0E01               	movlw	1
 19426  0112AE  58DE               	subwfb	postinc2,w,c
 19427  0112B0  A0D8               	btfss	status,0,c
 19428  0112B2  D00A               	goto	l8023
 19429                           
 19430                           ; BSR set to: 0
 19431  0112B4  0100               	movlb	0	; () banked
 19432  0112B6  EE20 F002          	lfsr	2,2
 19433  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19434  0112BC  26D9               	addwf	fsr2l,f,c
 19435  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19436  0112C0  22DA               	addwfc	fsr2h,f,c
 19437  0112C2  0100               	movlb	0	; () banked
 19438  0112C4  8ADF               	bsf	indf2,5,c
 19439  0112C6  D067               	goto	l8043
 19440  0112C8                     l8023:
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19444  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19445  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19446  0112D0  0E2C               	movlw	44
 19447  0112D2  5CDE               	subwf	postinc2,w,c
 19448  0112D4  0E01               	movlw	1
 19449  0112D6  58DE               	subwfb	postinc2,w,c
 19450  0112D8  A0D8               	btfss	status,0,c
 19451  0112DA  D00A               	goto	l8027
 19452                           
 19453                           ; BSR set to: 0
 19454  0112DC  0100               	movlb	0	; () banked
 19455  0112DE  EE20 F002          	lfsr	2,2
 19456  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19457  0112E4  26D9               	addwf	fsr2l,f,c
 19458  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19459  0112E8  22DA               	addwfc	fsr2h,f,c
 19460  0112EA  0100               	movlb	0	; () banked
 19461  0112EC  88DF               	bsf	indf2,4,c
 19462  0112EE  D053               	goto	l8043
 19463  0112F0                     l8027:
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19467  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19468  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19469  0112F8  0E01               	movlw	1
 19470  0112FA  50DB               	movf	plusw2,w,c
 19471  0112FC  E104               	bnz	u8240
 19472  0112FE  0E96               	movlw	150
 19473  011300  5CDE               	subwf	postinc2,w,c
 19474  011302  A0D8               	btfss	status,0,c
 19475  011304  D00A               	goto	l8031
 19476  011306                     u8240:
 19477                           
 19478                           ; BSR set to: 0
 19479  011306  0100               	movlb	0	; () banked
 19480  011308  EE20 F002          	lfsr	2,2
 19481  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19482  01130E  26D9               	addwf	fsr2l,f,c
 19483  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19484  011312  22DA               	addwfc	fsr2h,f,c
 19485  011314  0100               	movlb	0	; () banked
 19486  011316  86DF               	bsf	indf2,3,c
 19487  011318  D03E               	goto	l8043
 19488  01131A                     l8031:
 19489                           
 19490                           ; BSR set to: 0
 19491                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19492  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19493  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19494  011322  0E01               	movlw	1
 19495  011324  50DB               	movf	plusw2,w,c
 19496  011326  E104               	bnz	u8250
 19497  011328  0E3C               	movlw	60
 19498  01132A  5CDE               	subwf	postinc2,w,c
 19499  01132C  A0D8               	btfss	status,0,c
 19500  01132E  D00A               	goto	l8035
 19501  011330                     u8250:
 19502                           
 19503                           ; BSR set to: 0
 19504  011330  0100               	movlb	0	; () banked
 19505  011332  EE20 F002          	lfsr	2,2
 19506  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19507  011338  26D9               	addwf	fsr2l,f,c
 19508  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19509  01133C  22DA               	addwfc	fsr2h,f,c
 19510  01133E  0100               	movlb	0	; () banked
 19511  011340  84DF               	bsf	indf2,2,c
 19512  011342  D029               	goto	l8043
 19513  011344                     l8035:
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19517  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19518  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19519  01134C  0E01               	movlw	1
 19520  01134E  50DB               	movf	plusw2,w,c
 19521  011350  E104               	bnz	u8260
 19522  011352  0E10               	movlw	16
 19523  011354  5CDE               	subwf	postinc2,w,c
 19524  011356  A0D8               	btfss	status,0,c
 19525  011358  D00A               	goto	l8039
 19526  01135A                     u8260:
 19527                           
 19528                           ; BSR set to: 0
 19529  01135A  0100               	movlb	0	; () banked
 19530  01135C  EE20 F002          	lfsr	2,2
 19531  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19532  011362  26D9               	addwf	fsr2l,f,c
 19533  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19534  011366  22DA               	addwfc	fsr2h,f,c
 19535  011368  0100               	movlb	0	; () banked
 19536  01136A  82DF               	bsf	indf2,1,c
 19537  01136C  D014               	goto	l8043
 19538  01136E                     l8039:
 19539                           
 19540                           ; BSR set to: 0
 19541                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19542  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19543  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19544  011376  0E01               	movlw	1
 19545  011378  50DB               	movf	plusw2,w,c
 19546  01137A  E104               	bnz	u8270
 19547  01137C  0E02               	movlw	2
 19548  01137E  5CDE               	subwf	postinc2,w,c
 19549  011380  A0D8               	btfss	status,0,c
 19550  011382  D009               	goto	l8043
 19551  011384                     u8270:
 19552                           
 19553                           ; BSR set to: 0
 19554  011384  0100               	movlb	0	; () banked
 19555  011386  EE20 F002          	lfsr	2,2
 19556  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19557  01138C  26D9               	addwf	fsr2l,f,c
 19558  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19559  011390  22DA               	addwfc	fsr2h,f,c
 19560  011392  0100               	movlb	0	; () banked
 19561  011394  80DF               	bsf	indf2,0,c
 19562  011396                     l8043:
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;My_button.c: 23: bt->cnt_sw = 0;
 19566  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19567  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19568  01139E  0E00               	movlw	0
 19569  0113A0  6EDE               	movwf	postinc2,c
 19570  0113A2  0E00               	movlw	0
 19571  0113A4  6EDD               	movwf	postdec2,c
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19575  0113A6  0100               	movlb	0	; () banked
 19576  0113A8  EE20 F002          	lfsr	2,2
 19577  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19578  0113AE  26D9               	addwf	fsr2l,f,c
 19579  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19580  0113B2  22DA               	addwfc	fsr2h,f,c
 19581  0113B4  0EFF               	movlw	255
 19582  0113B6  16DE               	andwf	postinc2,f,c
 19583  0113B8  0E00               	movlw	0
 19584  0113BA  16DD               	andwf	postdec2,f,c
 19585  0113BC  0012               	return	
 19586  0113BE                     __end_of_button_timer_interrupt:
 19587                           	opt stack 0
 19588                           tblptru	equ	0xFF8
 19589                           tblptrh	equ	0xFF7
 19590                           tblptrl	equ	0xFF6
 19591                           tablat	equ	0xFF5
 19592                           prodh	equ	0xFF4
 19593                           prodl	equ	0xFF3
 19594                           intcon	equ	0xFF2
 19595                           intcon2	equ	0xFF1
 19596                           postinc0	equ	0xFEE
 19597                           wreg	equ	0xFE8
 19598                           indf1	equ	0xFE7
 19599                           postinc1	equ	0xFE6
 19600                           postdec1	equ	0xFE5
 19601                           fsr1h	equ	0xFE2
 19602                           fsr1l	equ	0xFE1
 19603                           indf2	equ	0xFDF
 19604                           postinc2	equ	0xFDE
 19605                           postdec2	equ	0xFDD
 19606                           plusw2	equ	0xFDB
 19607                           fsr2h	equ	0xFDA
 19608                           fsr2l	equ	0xFD9
 19609                           status	equ	0xFD8
 19610                           
 19611 ;; *************** function ___lwdiv *****************
 19612 ;; Defined at:
 19613 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19614 ;; Parameters:    Size  Location     Type
 19615 ;;  dividend        2   28[BANK0 ] unsigned int 
 19616 ;;  divisor         2   30[BANK0 ] unsigned int 
 19617 ;; Auto vars:     Size  Location     Type
 19618 ;;  quotient        2   33[BANK0 ] unsigned int 
 19619 ;;  counter         1   32[BANK0 ] unsigned char 
 19620 ;; Return value:  Size  Location     Type
 19621 ;;                  2   28[BANK0 ] unsigned int 
 19622 ;; Registers used:
 19623 ;;		wreg, status,2, status,0
 19624 ;; Tracked objects:
 19625 ;;		On entry : 0/0
 19626 ;;		On exit  : 0/0
 19627 ;;		Unchanged: 0/0
 19628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19630 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19632 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19633 ;;Total ram usage:        7 bytes
 19634 ;; Hardware stack levels used:    1
 19635 ;; Hardware stack levels required when called:   11
 19636 ;; This function calls:
 19637 ;;		Nothing
 19638 ;; This function is called by:
 19639 ;;		_data_out
 19640 ;;		_display_LCD
 19641 ;;		_ctmu_set_ratio
 19642 ;;		_ctmu_sampling
 19643 ;;		_ringbuf_put_num
 19644 ;; This function uses a non-reentrant model
 19645 ;;
 19646                           
 19647                           	psect	text78
 19648  015E54                     __ptext78:
 19649                           	opt stack 0
 19650  015E54                     ___lwdiv:
 19651                           	opt stack 16
 19652                           
 19653                           ; BSR set to: 0
 19654                           ;incstack = 0
 19655  015E54  0E00               	movlw	0
 19656  015E56  0100               	movlb	0	; () banked
 19657  015E58  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19658  015E5A  0E00               	movlw	0
 19659  015E5C  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19660                           
 19661                           ; BSR set to: 0
 19662  015E5E  0100               	movlb	0	; () banked
 19663  015E60  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19664  015E62  0100               	movlb	0	; () banked
 19665  015E64  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19666  015E66  B4D8               	btfsc	status,2,c
 19667  015E68  D02C               	goto	l2305
 19668                           
 19669                           ; BSR set to: 0
 19670  015E6A  0E01               	movlw	1
 19671  015E6C  0100               	movlb	0	; () banked
 19672  015E6E  6F80               	movwf	___lwdiv@counter& (0+255),b
 19673  015E70  D006               	goto	l10907
 19674  015E72                     l10905:
 19675                           
 19676                           ; BSR set to: 0
 19677  015E72  0100               	movlb	0	; () banked
 19678  015E74  90D8               	bcf	status,0,c
 19679  015E76  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19680  015E78  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19681  015E7A  0100               	movlb	0	; () banked
 19682  015E7C  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19683  015E7E                     l10907:
 19684                           
 19685                           ; BSR set to: 0
 19686  015E7E  0100               	movlb	0	; () banked
 19687  015E80  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19688  015E82  D7F7               	goto	l10905
 19689  015E84                     l10909:
 19690                           
 19691                           ; BSR set to: 0
 19692  015E84  0100               	movlb	0	; () banked
 19693  015E86  90D8               	bcf	status,0,c
 19694  015E88  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19695  015E8A  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19696                           
 19697                           ; BSR set to: 0
 19698  015E8C  0100               	movlb	0	; () banked
 19699  015E8E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19700  015E90  0100               	movlb	0	; () banked
 19701  015E92  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19702  015E94  0100               	movlb	0	; () banked
 19703  015E96  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19704  015E98  0100               	movlb	0	; () banked
 19705  015E9A  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19706  015E9C  A0D8               	btfss	status,0,c
 19707  015E9E  D00A               	goto	l10917
 19708                           
 19709                           ; BSR set to: 0
 19710  015EA0  0100               	movlb	0	; () banked
 19711  015EA2  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19712  015EA4  0100               	movlb	0	; () banked
 19713  015EA6  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19714  015EA8  0100               	movlb	0	; () banked
 19715  015EAA  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19716  015EAC  0100               	movlb	0	; () banked
 19717  015EAE  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19718                           
 19719                           ; BSR set to: 0
 19720  015EB0  0100               	movlb	0	; () banked
 19721  015EB2  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19722  015EB4                     l10917:
 19723                           
 19724                           ; BSR set to: 0
 19725  015EB4  0100               	movlb	0	; () banked
 19726  015EB6  90D8               	bcf	status,0,c
 19727  015EB8  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19728  015EBA  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19729                           
 19730                           ; BSR set to: 0
 19731  015EBC  0100               	movlb	0	; () banked
 19732  015EBE  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19733  015EC0  D7E1               	goto	l10909
 19734  015EC2                     l2305:
 19735                           
 19736                           ; BSR set to: 0
 19737  015EC2  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19738  015EC6  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19739                           
 19740                           ; BSR set to: 0
 19741  015ECA  0012               	return		;funcret
 19742  015ECC                     __end_of___lwdiv:
 19743                           	opt stack 0
 19744                           tblptru	equ	0xFF8
 19745                           tblptrh	equ	0xFF7
 19746                           tblptrl	equ	0xFF6
 19747                           tablat	equ	0xFF5
 19748                           prodh	equ	0xFF4
 19749                           prodl	equ	0xFF3
 19750                           intcon	equ	0xFF2
 19751                           intcon2	equ	0xFF1
 19752                           postinc0	equ	0xFEE
 19753                           wreg	equ	0xFE8
 19754                           indf1	equ	0xFE7
 19755                           postinc1	equ	0xFE6
 19756                           postdec1	equ	0xFE5
 19757                           fsr1h	equ	0xFE2
 19758                           fsr1l	equ	0xFE1
 19759                           indf2	equ	0xFDF
 19760                           postinc2	equ	0xFDE
 19761                           postdec2	equ	0xFDD
 19762                           plusw2	equ	0xFDB
 19763                           fsr2h	equ	0xFDA
 19764                           fsr2l	equ	0xFD9
 19765                           status	equ	0xFD8
 19766                           
 19767 ;; *************** function _CTMU_read *****************
 19768 ;; Defined at:
 19769 ;;		line 183 in file "../My_library/My_PIC.c"
 19770 ;; Parameters:    Size  Location     Type
 19771 ;;  ch              1    wreg     unsigned char 
 19772 ;; Auto vars:     Size  Location     Type
 19773 ;;  ch              1   16[BANK0 ] unsigned char 
 19774 ;;  i               1   21[BANK0 ] unsigned char 
 19775 ;;  sum             4   17[BANK0 ] unsigned long 
 19776 ;; Return value:  Size  Location     Type
 19777 ;;                  2   13[BANK0 ] unsigned int 
 19778 ;; Registers used:
 19779 ;;		wreg, status,2, status,0, cstack
 19780 ;; Tracked objects:
 19781 ;;		On entry : 0/0
 19782 ;;		On exit  : 0/0
 19783 ;;		Unchanged: 0/0
 19784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19786 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19788 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19789 ;;Total ram usage:        9 bytes
 19790 ;; Hardware stack levels used:    1
 19791 ;; Hardware stack levels required when called:   12
 19792 ;; This function calls:
 19793 ;;		___lldiv
 19794 ;; This function is called by:
 19795 ;;		_ctmu_set_ratio
 19796 ;;		_ctmu_sampling
 19797 ;; This function uses a non-reentrant model
 19798 ;;
 19799                           
 19800                           	psect	text79
 19801  01509A                     __ptext79:
 19802                           	opt stack 0
 19803  01509A                     _CTMU_read:
 19804                           	opt stack 15
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;incstack = 0
 19808                           ;CTMU_read@ch stored from wreg
 19809  01509A  0100               	movlb	0	; () banked
 19810  01509C  6F70               	movwf	CTMU_read@ch& (0+255),b
 19811                           
 19812                           ;My_PIC.c: 184: uint32_t sum = 0;
 19813  01509E  0E00               	movlw	0
 19814  0150A0  0100               	movlb	0	; () banked
 19815  0150A2  6F71               	movwf	CTMU_read@sum& (0+255),b
 19816  0150A4  0E00               	movlw	0
 19817  0150A6  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19818  0150A8  0E00               	movlw	0
 19819  0150AA  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19820  0150AC  0E00               	movlw	0
 19821  0150AE  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19822                           
 19823                           ;My_PIC.c: 185: for (uint8_t i = 0; i < 10; i++) {
 19824  0150B0  0E00               	movlw	0
 19825  0150B2  0100               	movlb	0	; () banked
 19826  0150B4  6F75               	movwf	CTMU_read@i& (0+255),b
 19827  0150B6                     l10663:
 19828                           
 19829                           ; BSR set to: 0
 19830  0150B6  0E09               	movlw	9
 19831  0150B8  0100               	movlb	0	; () banked
 19832  0150BA  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19833  0150BC  D001               	goto	l10667
 19834  0150BE  D02B               	goto	l10695
 19835  0150C0                     l10667:
 19836                           
 19837                           ; BSR set to: 0
 19838                           ;My_PIC.c: 186: ADCON0bits.CHS = ch;
 19839  0150C0  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19840  0150C4  0100               	movlb	0	; () banked
 19841  0150C6  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19842  0150C8  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19843  0150CA  50C2               	movf	4034,w,c	;volatile
 19844  0150CC  0100               	movlb	0	; () banked
 19845  0150CE  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19846  0150D0  0BC3               	andlw	-61
 19847  0150D2  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19848  0150D4  6EC2               	movwf	4034,c	;volatile
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;My_PIC.c: 187: CTMUCONHbits.CTMUEN = 1;
 19852  0150D6  8EB3               	bsf	4019,7,c	;volatile
 19853                           
 19854                           ; BSR set to: 0
 19855                           ;My_PIC.c: 188: CTMUCONLbits.EDG1STAT = 0;
 19856  0150D8  90B2               	bcf	4018,0,c	;volatile
 19857                           
 19858                           ; BSR set to: 0
 19859                           ;My_PIC.c: 189: CTMUCONLbits.EDG2STAT = 0;
 19860  0150DA  92B2               	bcf	4018,1,c	;volatile
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;My_PIC.c: 192: CTMUCONHbits.IDISSEN = 1;
 19864  0150DC  82B3               	bsf	4019,1,c	;volatile
 19865                           
 19866                           ; BSR set to: 0
 19867                           ;My_PIC.c: 193: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19868  0150DE  0E50               	movlw	80
 19869  0150E0                     u14897:
 19870  0150E0  2EE8               	decfsz	wreg,f,c
 19871  0150E2  D7FE               	goto	u14897
 19872                           
 19873                           ;My_PIC.c: 194: CTMUCONHbits.IDISSEN = 0;
 19874  0150E4  92B3               	bcf	4019,1,c	;volatile
 19875                           
 19876                           ;My_PIC.c: 196: CTMUCONLbits.EDG1STAT = 1;
 19877  0150E6  80B2               	bsf	4018,0,c	;volatile
 19878                           
 19879                           ;My_PIC.c: 197: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19880  0150E8  0E14               	movlw	20
 19881  0150EA                     u14907:
 19882  0150EA  2EE8               	decfsz	wreg,f,c
 19883  0150EC  D7FE               	goto	u14907
 19884                           
 19885                           ;My_PIC.c: 198: CTMUCONLbits.EDG1STAT = 0;
 19886  0150EE  90B2               	bcf	4018,0,c	;volatile
 19887                           
 19888                           ;My_PIC.c: 200: PIR1bits.ADIF = 0;
 19889  0150F0  9C9E               	bcf	3998,6,c	;volatile
 19890                           
 19891                           ;My_PIC.c: 201: ADCON0bits.GO = 1;
 19892  0150F2  82C2               	bsf	4034,1,c	;volatile
 19893  0150F4                     l738:
 19894  0150F4  AC9E               	btfss	3998,6,c	;volatile
 19895  0150F6  D7FE               	goto	l738
 19896                           
 19897                           ;My_PIC.c: 203: sum += ADRES;
 19898  0150F8  50C3               	movf	4035,w,c	;volatile
 19899  0150FA  0100               	movlb	0	; () banked
 19900  0150FC  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19901  0150FE  50C4               	movf	4036,w,c	;volatile
 19902  015100  0100               	movlb	0	; () banked
 19903  015102  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19904  015104  0E00               	movlw	0
 19905  015106  0100               	movlb	0	; () banked
 19906  015108  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19907  01510A  0E00               	movlw	0
 19908  01510C  0100               	movlb	0	; () banked
 19909  01510E  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19910  015110  0100               	movlb	0	; () banked
 19911  015112  2B75               	incf	CTMU_read@i& (0+255),f,b
 19912  015114  D7D0               	goto	l10663
 19913  015116                     l10695:
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;My_PIC.c: 204: }
 19917                           ;My_PIC.c: 205: return sum / 10 / 4;
 19918  015116  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19919  01511A  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19920  01511E  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19921  015122  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19922  015126  0E0A               	movlw	10
 19923  015128  0100               	movlb	0	; () banked
 19924  01512A  6F64               	movwf	___lldiv@divisor& (0+255),b
 19925  01512C  0E00               	movlw	0
 19926  01512E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19927  015130  0E00               	movlw	0
 19928  015132  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19929  015134  0E00               	movlw	0
 19930  015136  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19931  015138  EC6C  F0A9         	call	___lldiv	;wreg free
 19932  01513C  0E03               	movlw	3
 19933  01513E  D007               	goto	u12180
 19934  015140                     u12185:
 19935  015140  0100               	movlb	0	; () banked
 19936  015142  90D8               	bcf	status,0,c
 19937  015144  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 19938  015146  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 19939  015148  0100               	movlb	0	; () banked
 19940  01514A  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 19941  01514C  3360               	rrcf	?___lldiv& (0+255),f,b
 19942  01514E                     u12180:
 19943  01514E  2EE8               	decfsz	wreg,f,c
 19944  015150  D7F7               	goto	u12185
 19945  015152  C060  F06D         	movff	?___lldiv,?_CTMU_read
 19946  015156  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 19947  01515A  0012               	return	
 19948  01515C                     __end_of_CTMU_read:
 19949                           	opt stack 0
 19950                           tblptru	equ	0xFF8
 19951                           tblptrh	equ	0xFF7
 19952                           tblptrl	equ	0xFF6
 19953                           tablat	equ	0xFF5
 19954                           prodh	equ	0xFF4
 19955                           prodl	equ	0xFF3
 19956                           intcon	equ	0xFF2
 19957                           intcon2	equ	0xFF1
 19958                           postinc0	equ	0xFEE
 19959                           wreg	equ	0xFE8
 19960                           indf1	equ	0xFE7
 19961                           postinc1	equ	0xFE6
 19962                           postdec1	equ	0xFE5
 19963                           fsr1h	equ	0xFE2
 19964                           fsr1l	equ	0xFE1
 19965                           indf2	equ	0xFDF
 19966                           postinc2	equ	0xFDE
 19967                           postdec2	equ	0xFDD
 19968                           plusw2	equ	0xFDB
 19969                           fsr2h	equ	0xFDA
 19970                           fsr2l	equ	0xFD9
 19971                           status	equ	0xFD8
 19972                           
 19973 ;; *************** function ___lldiv *****************
 19974 ;; Defined at:
 19975 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 19976 ;; Parameters:    Size  Location     Type
 19977 ;;  dividend        4    0[BANK0 ] unsigned long 
 19978 ;;  divisor         4    4[BANK0 ] unsigned long 
 19979 ;; Auto vars:     Size  Location     Type
 19980 ;;  quotient        4    8[BANK0 ] unsigned long 
 19981 ;;  counter         1   12[BANK0 ] unsigned char 
 19982 ;; Return value:  Size  Location     Type
 19983 ;;                  4    0[BANK0 ] unsigned long 
 19984 ;; Registers used:
 19985 ;;		wreg, status,2, status,0
 19986 ;; Tracked objects:
 19987 ;;		On entry : 0/0
 19988 ;;		On exit  : 0/0
 19989 ;;		Unchanged: 0/0
 19990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19991 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19992 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19994 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19995 ;;Total ram usage:       13 bytes
 19996 ;; Hardware stack levels used:    1
 19997 ;; Hardware stack levels required when called:   11
 19998 ;; This function calls:
 19999 ;;		Nothing
 20000 ;; This function is called by:
 20001 ;;		_integrate_current
 20002 ;;		_display_LCD
 20003 ;;		_CTMU_read
 20004 ;;		_get_quot_rem
 20005 ;;		_sprintf
 20006 ;; This function uses a non-reentrant model
 20007 ;;
 20008                           
 20009                           	psect	text80
 20010  0152D8                     __ptext80:
 20011                           	opt stack 0
 20012  0152D8                     ___lldiv:
 20013                           	opt stack 13
 20014                           
 20015                           ; BSR set to: 0
 20016                           ;incstack = 0
 20017  0152D8  0E00               	movlw	0
 20018  0152DA  0100               	movlb	0	; () banked
 20019  0152DC  6F68               	movwf	___lldiv@quotient& (0+255),b
 20020  0152DE  0E00               	movlw	0
 20021  0152E0  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20022  0152E2  0E00               	movlw	0
 20023  0152E4  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20024  0152E6  0E00               	movlw	0
 20025  0152E8  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20026                           
 20027                           ; BSR set to: 0
 20028  0152EA  0100               	movlb	0	; () banked
 20029  0152EC  5164               	movf	___lldiv@divisor& (0+255),w,b
 20030  0152EE  0100               	movlb	0	; () banked
 20031  0152F0  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20032  0152F2  0100               	movlb	0	; () banked
 20033  0152F4  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20034  0152F6  0100               	movlb	0	; () banked
 20035  0152F8  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20036  0152FA  B4D8               	btfsc	status,2,c
 20037  0152FC  D042               	goto	l2252
 20038                           
 20039                           ; BSR set to: 0
 20040  0152FE  0E01               	movlw	1
 20041  015300  0100               	movlb	0	; () banked
 20042  015302  6F6C               	movwf	___lldiv@counter& (0+255),b
 20043  015304  D008               	goto	l10145
 20044  015306                     l10143:
 20045                           
 20046                           ; BSR set to: 0
 20047  015306  0100               	movlb	0	; () banked
 20048  015308  90D8               	bcf	status,0,c
 20049  01530A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20050  01530C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20051  01530E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20052  015310  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20053  015312  0100               	movlb	0	; () banked
 20054  015314  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20055  015316                     l10145:
 20056                           
 20057                           ; BSR set to: 0
 20058  015316  0100               	movlb	0	; () banked
 20059  015318  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20060  01531A  D7F5               	goto	l10143
 20061  01531C                     l10147:
 20062                           
 20063                           ; BSR set to: 0
 20064  01531C  0100               	movlb	0	; () banked
 20065  01531E  90D8               	bcf	status,0,c
 20066  015320  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20067  015322  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20068  015324  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20069  015326  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20070                           
 20071                           ; BSR set to: 0
 20072  015328  0100               	movlb	0	; () banked
 20073  01532A  5164               	movf	___lldiv@divisor& (0+255),w,b
 20074  01532C  0100               	movlb	0	; () banked
 20075  01532E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20076  015330  0100               	movlb	0	; () banked
 20077  015332  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20078  015334  0100               	movlb	0	; () banked
 20079  015336  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20080  015338  0100               	movlb	0	; () banked
 20081  01533A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20082  01533C  0100               	movlb	0	; () banked
 20083  01533E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20084  015340  0100               	movlb	0	; () banked
 20085  015342  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20086  015344  0100               	movlb	0	; () banked
 20087  015346  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20088  015348  A0D8               	btfss	status,0,c
 20089  01534A  D012               	goto	l10155
 20090                           
 20091                           ; BSR set to: 0
 20092  01534C  0100               	movlb	0	; () banked
 20093  01534E  5164               	movf	___lldiv@divisor& (0+255),w,b
 20094  015350  0100               	movlb	0	; () banked
 20095  015352  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20096  015354  0100               	movlb	0	; () banked
 20097  015356  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20098  015358  0100               	movlb	0	; () banked
 20099  01535A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20100  01535C  0100               	movlb	0	; () banked
 20101  01535E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20102  015360  0100               	movlb	0	; () banked
 20103  015362  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20104  015364  0100               	movlb	0	; () banked
 20105  015366  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20106  015368  0100               	movlb	0	; () banked
 20107  01536A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20108                           
 20109                           ; BSR set to: 0
 20110  01536C  0100               	movlb	0	; () banked
 20111  01536E  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20112  015370                     l10155:
 20113                           
 20114                           ; BSR set to: 0
 20115  015370  0100               	movlb	0	; () banked
 20116  015372  90D8               	bcf	status,0,c
 20117  015374  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20118  015376  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20119  015378  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20120  01537A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20121                           
 20122                           ; BSR set to: 0
 20123  01537C  0100               	movlb	0	; () banked
 20124  01537E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20125  015380  D7CD               	goto	l10147
 20126  015382                     l2252:
 20127                           
 20128                           ; BSR set to: 0
 20129  015382  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20130  015386  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20131  01538A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20132  01538E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20133                           
 20134                           ; BSR set to: 0
 20135  015392  0012               	return		;funcret
 20136  015394                     __end_of___lldiv:
 20137                           	opt stack 0
 20138                           tblptru	equ	0xFF8
 20139                           tblptrh	equ	0xFF7
 20140                           tblptrl	equ	0xFF6
 20141                           tablat	equ	0xFF5
 20142                           prodh	equ	0xFF4
 20143                           prodl	equ	0xFF3
 20144                           intcon	equ	0xFF2
 20145                           intcon2	equ	0xFF1
 20146                           postinc0	equ	0xFEE
 20147                           wreg	equ	0xFE8
 20148                           indf1	equ	0xFE7
 20149                           postinc1	equ	0xFE6
 20150                           postdec1	equ	0xFE5
 20151                           fsr1h	equ	0xFE2
 20152                           fsr1l	equ	0xFE1
 20153                           indf2	equ	0xFDF
 20154                           postinc2	equ	0xFDE
 20155                           postdec2	equ	0xFDD
 20156                           plusw2	equ	0xFDB
 20157                           fsr2h	equ	0xFDA
 20158                           fsr2l	equ	0xFD9
 20159                           status	equ	0xFD8
 20160                           
 20161 ;; *************** function _USB_task *****************
 20162 ;; Defined at:
 20163 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 20164 ;; Parameters:    Size  Location     Type
 20165 ;;		None
 20166 ;; Auto vars:     Size  Location     Type
 20167 ;;  rx_len          2   20[BANK0 ] int 
 20168 ;;  data            1   22[BANK0 ] unsigned char 
 20169 ;; Return value:  Size  Location     Type
 20170 ;;		None               void
 20171 ;; Registers used:
 20172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20173 ;; Tracked objects:
 20174 ;;		On entry : 0/0
 20175 ;;		On exit  : 0/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20179 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20181 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20182 ;;Total ram usage:        3 bytes
 20183 ;; Hardware stack levels used:    1
 20184 ;; Hardware stack levels required when called:   14
 20185 ;; This function calls:
 20186 ;;		_get_string_usb
 20187 ;;		_put_string_usb
 20188 ;;		_ringbuf_num
 20189 ;;		_ringbuf_pop
 20190 ;;		_ringbuf_put
 20191 ;; This function is called by:
 20192 ;;		_main
 20193 ;; This function uses a non-reentrant model
 20194 ;;
 20195                           
 20196                           	psect	text81
 20197  015AA2                     __ptext81:
 20198                           	opt stack 0
 20199  015AA2                     _USB_task:
 20200                           	opt stack 16
 20201                           
 20202                           ;My_usb_cdc.c: 67: char data;
 20203                           ;My_usb_cdc.c: 68: int rx_len;
 20204                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;incstack = 0
 20208  015AA2  0E76               	movlw	low USB_task@data
 20209  015AA4  0100               	movlb	0	; () banked
 20210  015AA6  6F6D               	movwf	get_string_usb@s& (0+255),b
 20211  015AA8  0E00               	movlw	high USB_task@data
 20212  015AAA  0100               	movlb	0	; () banked
 20213  015AAC  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20214  015AAE  0E00               	movlw	0
 20215  015AB0  0100               	movlb	0	; () banked
 20216  015AB2  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20217  015AB4  0E01               	movlw	1
 20218  015AB6  6F6F               	movwf	get_string_usb@len& (0+255),b
 20219  015AB8  ECE8  F0B2         	call	_get_string_usb	;wreg free
 20220  015ABC  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 20221  015AC0  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 20222                           
 20223                           ;My_usb_cdc.c: 70: if (rx_len) {
 20224  015AC4  0100               	movlb	0	; () banked
 20225  015AC6  5174               	movf	USB_task@rx_len& (0+255),w,b
 20226  015AC8  0100               	movlb	0	; () banked
 20227  015ACA  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 20228  015ACC  B4D8               	btfsc	status,2,c
 20229  015ACE  D00A               	goto	l1291
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 20233  015AD0  0EB2               	movlw	low _usb_rx
 20234  015AD2  0100               	movlb	0	; () banked
 20235  015AD4  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20236  015AD6  0E02               	movlw	high _usb_rx
 20237  015AD8  0100               	movlb	0	; () banked
 20238  015ADA  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20239  015ADC  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 20240  015AE0  ECED  F0A5         	call	_ringbuf_put	;wreg free
 20241  015AE4                     l1291:
 20242                           
 20243                           ;My_usb_cdc.c: 72: }
 20244                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 20245  015AE4  0EBA               	movlw	low _usb_tx
 20246  015AE6  0100               	movlb	0	; () banked
 20247  015AE8  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20248  015AEA  0E02               	movlw	high _usb_tx
 20249  015AEC  0100               	movlb	0	; () banked
 20250  015AEE  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20251  015AF0  EC2A  F0A1         	call	_ringbuf_num	;wreg free
 20252  015AF4  0100               	movlb	0	; () banked
 20253  015AF6  5160               	movf	?_ringbuf_num& (0+255),w,b
 20254  015AF8  0100               	movlb	0	; () banked
 20255  015AFA  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20256  015AFC  B4D8               	btfsc	status,2,c
 20257  015AFE  0012               	return	
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 20261  015B00  0EBA               	movlw	low _usb_tx
 20262  015B02  0100               	movlb	0	; () banked
 20263  015B04  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20264  015B06  0E02               	movlw	high _usb_tx
 20265  015B08  0100               	movlb	0	; () banked
 20266  015B0A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20267  015B0C  ECBE  F0A6         	call	_ringbuf_pop	;wreg free
 20268  015B10  0100               	movlb	0	; () banked
 20269  015B12  6F76               	movwf	USB_task@data& (0+255),b
 20270                           
 20271                           ; BSR set to: 0
 20272                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 20273  015B14  0E76               	movlw	low USB_task@data
 20274  015B16  0100               	movlb	0	; () banked
 20275  015B18  6F6C               	movwf	put_string_usb@s& (0+255),b
 20276  015B1A  0E00               	movlw	high USB_task@data
 20277  015B1C  0100               	movlb	0	; () banked
 20278  015B1E  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20279  015B20  0E00               	movlw	0
 20280  015B22  0100               	movlb	0	; () banked
 20281  015B24  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20282  015B26  0E01               	movlw	1
 20283  015B28  6F6E               	movwf	put_string_usb@len& (0+255),b
 20284  015B2A  EC9A  F0B4         	call	_put_string_usb	;wreg free
 20285  015B2E  0012               	return	
 20286  015B30                     __end_of_USB_task:
 20287                           	opt stack 0
 20288                           tblptru	equ	0xFF8
 20289                           tblptrh	equ	0xFF7
 20290                           tblptrl	equ	0xFF6
 20291                           tablat	equ	0xFF5
 20292                           prodh	equ	0xFF4
 20293                           prodl	equ	0xFF3
 20294                           intcon	equ	0xFF2
 20295                           intcon2	equ	0xFF1
 20296                           postinc0	equ	0xFEE
 20297                           wreg	equ	0xFE8
 20298                           indf1	equ	0xFE7
 20299                           postinc1	equ	0xFE6
 20300                           postdec1	equ	0xFE5
 20301                           fsr1h	equ	0xFE2
 20302                           fsr1l	equ	0xFE1
 20303                           indf2	equ	0xFDF
 20304                           postinc2	equ	0xFDE
 20305                           postdec2	equ	0xFDD
 20306                           plusw2	equ	0xFDB
 20307                           fsr2h	equ	0xFDA
 20308                           fsr2l	equ	0xFD9
 20309                           status	equ	0xFD8
 20310                           
 20311 ;; *************** function _ringbuf_put *****************
 20312 ;; Defined at:
 20313 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20314 ;; Parameters:    Size  Location     Type
 20315 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20316 ;;		 -> uart_rx(8), terminal_task@command(8), usb_rx(8), usb_tx(8), 
 20317 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20318 ;; Auto vars:     Size  Location     Type
 20319 ;;		None
 20320 ;; Return value:  Size  Location     Type
 20321 ;;		None               void
 20322 ;; Registers used:
 20323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20324 ;; Tracked objects:
 20325 ;;		On entry : 0/0
 20326 ;;		On exit  : 0/0
 20327 ;;		Unchanged: 0/0
 20328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20329 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20332 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20333 ;;Total ram usage:        7 bytes
 20334 ;; Hardware stack levels used:    1
 20335 ;; Hardware stack levels required when called:   12
 20336 ;; This function calls:
 20337 ;;		_ringbuf_num
 20338 ;; This function is called by:
 20339 ;;		_ringbuf_put_num
 20340 ;;		_ringbuf_put_str
 20341 ;;		_terminal_task
 20342 ;;		_USB_task
 20343 ;;		_UART_ISR
 20344 ;; This function uses a non-reentrant model
 20345 ;;
 20346                           
 20347                           	psect	text82
 20348  014BDA                     __ptext82:
 20349                           	opt stack 0
 20350  014BDA                     _ringbuf_put:
 20351                           	opt stack 13
 20352                           
 20353                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20354                           
 20355                           ;incstack = 0
 20356  014BDA  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20357  014BDE  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20358  014BE2  EC2A  F0A1         	call	_ringbuf_num	;wreg free
 20359  014BE6  0100               	movlb	0	; () banked
 20360  014BE8  EE20 F002          	lfsr	2,2
 20361  014BEC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20362  014BEE  26D9               	addwf	fsr2l,f,c
 20363  014BF0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20364  014BF2  22DA               	addwfc	fsr2h,f,c
 20365  014BF4  50DE               	movf	postinc2,w,c
 20366  014BF6  0100               	movlb	0	; () banked
 20367  014BF8  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20368  014BFA  50DE               	movf	postinc2,w,c
 20369  014BFC  0100               	movlb	0	; () banked
 20370  014BFE  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20371  014C00  B0D8               	btfsc	status,0,c
 20372  014C02  0012               	return	
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20376  014C04  0100               	movlb	0	; () banked
 20377  014C06  EE20 F004          	lfsr	2,4
 20378  014C0A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20379  014C0C  26D9               	addwf	fsr2l,f,c
 20380  014C0E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20381  014C10  22DA               	addwfc	fsr2h,f,c
 20382  014C12  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20383  014C16  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20384  014C1A  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20385  014C1E  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20386  014C22  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20387  014C26  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20388  014C2A  0100               	movlb	0	; () banked
 20389  014C2C  516B               	movf	??_ringbuf_put& (0+255),w,b
 20390  014C2E  0100               	movlb	0	; () banked
 20391  014C30  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20392  014C32  6ED9               	movwf	fsr2l,c
 20393  014C34  0100               	movlb	0	; () banked
 20394  014C36  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20395  014C38  0100               	movlb	0	; () banked
 20396  014C3A  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20397  014C3C  6EDA               	movwf	fsr2h,c
 20398  014C3E  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20399                           
 20400                           ; BSR set to: 0
 20401                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20402  014C42  0100               	movlb	0	; () banked
 20403  014C44  EE20 F002          	lfsr	2,2
 20404  014C48  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20405  014C4A  26D9               	addwf	fsr2l,f,c
 20406  014C4C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20407  014C4E  22DA               	addwfc	fsr2h,f,c
 20408  014C50  0100               	movlb	0	; () banked
 20409  014C52  EE10 F004          	lfsr	1,4
 20410  014C56  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20411  014C58  26E1               	addwf	fsr1l,f,c
 20412  014C5A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20413  014C5C  22E2               	addwfc	fsr1h,f,c
 20414  014C5E  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20415  014C62  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20416  014C66  0E01               	movlw	1
 20417  014C68  0100               	movlb	0	; () banked
 20418  014C6A  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20419  014C6C  0E00               	movlw	0
 20420  014C6E  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20421  014C70  50DE               	movf	postinc2,w,c
 20422  014C72  0100               	movlb	0	; () banked
 20423  014C74  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20424  014C76  50DE               	movf	postinc2,w,c
 20425  014C78  0100               	movlb	0	; () banked
 20426  014C7A  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20427  014C7C  B0D8               	btfsc	status,0,c
 20428  014C7E  D00B               	goto	l10171
 20429                           
 20430                           ; BSR set to: 0
 20431  014C80  0100               	movlb	0	; () banked
 20432  014C82  EE20 F004          	lfsr	2,4
 20433  014C86  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20434  014C88  26D9               	addwf	fsr2l,f,c
 20435  014C8A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20436  014C8C  22DA               	addwfc	fsr2h,f,c
 20437  014C8E  2ADE               	incf	postinc2,f,c
 20438  014C90  0E00               	movlw	0
 20439  014C92  22DD               	addwfc	postdec2,f,c
 20440  014C94  0012               	return	
 20441  014C96                     l10171:
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;My_ringbuf.c: 24: else rb->head = 0;
 20445  014C96  0100               	movlb	0	; () banked
 20446  014C98  EE20 F004          	lfsr	2,4
 20447  014C9C  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20448  014C9E  26D9               	addwf	fsr2l,f,c
 20449  014CA0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20450  014CA2  22DA               	addwfc	fsr2h,f,c
 20451  014CA4  0E00               	movlw	0
 20452  014CA6  6EDE               	movwf	postinc2,c
 20453  014CA8  0E00               	movlw	0
 20454  014CAA  6EDD               	movwf	postdec2,c
 20455                           
 20456                           ; BSR set to: 0
 20457  014CAC  0012               	return	
 20458  014CAE                     __end_of_ringbuf_put:
 20459                           	opt stack 0
 20460                           tblptru	equ	0xFF8
 20461                           tblptrh	equ	0xFF7
 20462                           tblptrl	equ	0xFF6
 20463                           tablat	equ	0xFF5
 20464                           prodh	equ	0xFF4
 20465                           prodl	equ	0xFF3
 20466                           intcon	equ	0xFF2
 20467                           intcon2	equ	0xFF1
 20468                           postinc0	equ	0xFEE
 20469                           wreg	equ	0xFE8
 20470                           indf1	equ	0xFE7
 20471                           postinc1	equ	0xFE6
 20472                           postdec1	equ	0xFE5
 20473                           fsr1h	equ	0xFE2
 20474                           fsr1l	equ	0xFE1
 20475                           indf2	equ	0xFDF
 20476                           postinc2	equ	0xFDE
 20477                           postdec2	equ	0xFDD
 20478                           plusw2	equ	0xFDB
 20479                           fsr2h	equ	0xFDA
 20480                           fsr2l	equ	0xFD9
 20481                           status	equ	0xFD8
 20482                           
 20483 ;; *************** function _ringbuf_pop *****************
 20484 ;; Defined at:
 20485 ;;		line 45 in file "../My_library/My_ringbuf.c"
 20486 ;; Parameters:    Size  Location     Type
 20487 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20488 ;;		 -> uart_tx(8), terminal_task@command(8), usb_rx(8), usb_tx(8), 
 20489 ;; Auto vars:     Size  Location     Type
 20490 ;;  ret             1   14[BANK0 ] unsigned char 
 20491 ;; Return value:  Size  Location     Type
 20492 ;;                  1    wreg      unsigned char 
 20493 ;; Registers used:
 20494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20495 ;; Tracked objects:
 20496 ;;		On entry : 0/0
 20497 ;;		On exit  : 0/0
 20498 ;;		Unchanged: 0/0
 20499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20504 ;;Total ram usage:        7 bytes
 20505 ;; Hardware stack levels used:    1
 20506 ;; Hardware stack levels required when called:   12
 20507 ;; This function calls:
 20508 ;;		_ringbuf_num
 20509 ;; This function is called by:
 20510 ;;		_terminal_task
 20511 ;;		_USB_task
 20512 ;;		_UART_ISR
 20513 ;; This function uses a non-reentrant model
 20514 ;;
 20515                           
 20516                           	psect	text83
 20517  014D7C                     __ptext83:
 20518                           	opt stack 0
 20519  014D7C                     _ringbuf_pop:
 20520                           	opt stack 17
 20521                           
 20522                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20523                           
 20524                           ; BSR set to: 0
 20525                           ;incstack = 0
 20526  014D7C  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 20527  014D80  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 20528  014D84  EC2A  F0A1         	call	_ringbuf_num	;wreg free
 20529  014D88  0100               	movlb	0	; () banked
 20530  014D8A  5160               	movf	?_ringbuf_num& (0+255),w,b
 20531  014D8C  0100               	movlb	0	; () banked
 20532  014D8E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20533  014D90  B4D8               	btfsc	status,2,c
 20534  014D92  D058               	goto	l12035
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20538  014D94  0100               	movlb	0	; () banked
 20539  014D96  EE20 F006          	lfsr	2,6
 20540  014D9A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20541  014D9C  26D9               	addwf	fsr2l,f,c
 20542  014D9E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20543  014DA0  22DA               	addwfc	fsr2h,f,c
 20544  014DA2  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 20545  014DA6  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 20546  014DAA  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 20547  014DAE  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 20548  014DB2  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 20549  014DB6  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 20550  014DBA  0100               	movlb	0	; () banked
 20551  014DBC  516A               	movf	??_ringbuf_pop& (0+255),w,b
 20552  014DBE  0100               	movlb	0	; () banked
 20553  014DC0  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 20554  014DC2  6ED9               	movwf	fsr2l,c
 20555  014DC4  0100               	movlb	0	; () banked
 20556  014DC6  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 20557  014DC8  0100               	movlb	0	; () banked
 20558  014DCA  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 20559  014DCC  6EDA               	movwf	fsr2h,c
 20560  014DCE  50DF               	movf	indf2,w,c
 20561  014DD0  0100               	movlb	0	; () banked
 20562  014DD2  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20566  014DD4  0100               	movlb	0	; () banked
 20567  014DD6  EE20 F002          	lfsr	2,2
 20568  014DDA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20569  014DDC  26D9               	addwf	fsr2l,f,c
 20570  014DDE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20571  014DE0  22DA               	addwfc	fsr2h,f,c
 20572  014DE2  0100               	movlb	0	; () banked
 20573  014DE4  EE10 F006          	lfsr	1,6
 20574  014DE8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20575  014DEA  26E1               	addwf	fsr1l,f,c
 20576  014DEC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20577  014DEE  22E2               	addwfc	fsr1h,f,c
 20578  014DF0  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 20579  014DF4  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 20580  014DF8  0E01               	movlw	1
 20581  014DFA  0100               	movlb	0	; () banked
 20582  014DFC  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 20583  014DFE  0E00               	movlw	0
 20584  014E00  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 20585  014E02  50DE               	movf	postinc2,w,c
 20586  014E04  0100               	movlb	0	; () banked
 20587  014E06  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 20588  014E08  50DE               	movf	postinc2,w,c
 20589  014E0A  0100               	movlb	0	; () banked
 20590  014E0C  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 20591  014E0E  B0D8               	btfsc	status,0,c
 20592  014E10  D00B               	goto	l12027
 20593                           
 20594                           ; BSR set to: 0
 20595                           ;My_ringbuf.c: 49: rb->tail++;
 20596  014E12  0100               	movlb	0	; () banked
 20597  014E14  EE20 F006          	lfsr	2,6
 20598  014E18  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20599  014E1A  26D9               	addwf	fsr2l,f,c
 20600  014E1C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20601  014E1E  22DA               	addwfc	fsr2h,f,c
 20602  014E20  2ADE               	incf	postinc2,f,c
 20603  014E22  0E00               	movlw	0
 20604  014E24  22DD               	addwfc	postdec2,f,c
 20605                           
 20606                           ;My_ringbuf.c: 50: } else {
 20607  014E26  D00B               	goto	l12029
 20608  014E28                     l12027:
 20609                           
 20610                           ; BSR set to: 0
 20611                           ;My_ringbuf.c: 51: rb->tail = 0;
 20612  014E28  0100               	movlb	0	; () banked
 20613  014E2A  EE20 F006          	lfsr	2,6
 20614  014E2E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20615  014E30  26D9               	addwf	fsr2l,f,c
 20616  014E32  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20617  014E34  22DA               	addwfc	fsr2h,f,c
 20618  014E36  0E00               	movlw	0
 20619  014E38  6EDE               	movwf	postinc2,c
 20620  014E3A  0E00               	movlw	0
 20621  014E3C  6EDD               	movwf	postdec2,c
 20622  014E3E                     l12029:
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;My_ringbuf.c: 52: }
 20626                           ;My_ringbuf.c: 53: return ret;
 20627  014E3E  0100               	movlb	0	; () banked
 20628  014E40  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;My_ringbuf.c: 54: } else {
 20632                           
 20633                           ; BSR set to: 0
 20634  014E42  0012               	return	
 20635  014E44                     l12035:
 20636                           
 20637                           ; BSR set to: 0
 20638                           ;My_ringbuf.c: 55: return 0;
 20639  014E44  0E00               	movlw	0
 20640                           
 20641                           ; BSR set to: 0
 20642  014E46  0012               	return	
 20643  014E48                     __end_of_ringbuf_pop:
 20644                           	opt stack 0
 20645                           tblptru	equ	0xFF8
 20646                           tblptrh	equ	0xFF7
 20647                           tblptrl	equ	0xFF6
 20648                           tablat	equ	0xFF5
 20649                           prodh	equ	0xFF4
 20650                           prodl	equ	0xFF3
 20651                           intcon	equ	0xFF2
 20652                           intcon2	equ	0xFF1
 20653                           postinc0	equ	0xFEE
 20654                           wreg	equ	0xFE8
 20655                           indf1	equ	0xFE7
 20656                           postinc1	equ	0xFE6
 20657                           postdec1	equ	0xFE5
 20658                           fsr1h	equ	0xFE2
 20659                           fsr1l	equ	0xFE1
 20660                           indf2	equ	0xFDF
 20661                           postinc2	equ	0xFDE
 20662                           postdec2	equ	0xFDD
 20663                           plusw2	equ	0xFDB
 20664                           fsr2h	equ	0xFDA
 20665                           fsr2l	equ	0xFD9
 20666                           status	equ	0xFD8
 20667                           
 20668 ;; *************** function _ringbuf_num *****************
 20669 ;; Defined at:
 20670 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20671 ;; Parameters:    Size  Location     Type
 20672 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 20673 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), usb_rx(8), 
 20674 ;;		 -> usb_tx(8), 
 20675 ;; Auto vars:     Size  Location     Type
 20676 ;;		None
 20677 ;; Return value:  Size  Location     Type
 20678 ;;                  2    0[BANK0 ] unsigned int 
 20679 ;; Registers used:
 20680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20681 ;; Tracked objects:
 20682 ;;		On entry : 0/0
 20683 ;;		On exit  : 0/0
 20684 ;;		Unchanged: 0/0
 20685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20688 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20689 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20690 ;;Total ram usage:        8 bytes
 20691 ;; Hardware stack levels used:    1
 20692 ;; Hardware stack levels required when called:   11
 20693 ;; This function calls:
 20694 ;;		Nothing
 20695 ;; This function is called by:
 20696 ;;		_ringbuf_put
 20697 ;;		_ringbuf_pop
 20698 ;;		_ringbuf_backspace
 20699 ;;		_terminal_task
 20700 ;;		_USB_task
 20701 ;;		_UART_ISR
 20702 ;;		_UART_task
 20703 ;; This function uses a non-reentrant model
 20704 ;;
 20705                           
 20706                           	psect	text84
 20707  014254                     __ptext84:
 20708                           	opt stack 0
 20709  014254                     _ringbuf_num:
 20710                           	opt stack 13
 20711                           
 20712                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;incstack = 0
 20716  014254  0100               	movlb	0	; () banked
 20717  014256  EE20 F006          	lfsr	2,6
 20718  01425A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20719  01425C  26D9               	addwf	fsr2l,f,c
 20720  01425E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20721  014260  22DA               	addwfc	fsr2h,f,c
 20722  014262  0100               	movlb	0	; () banked
 20723  014264  EE10 F004          	lfsr	1,4
 20724  014268  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20725  01426A  26E1               	addwf	fsr1l,f,c
 20726  01426C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20727  01426E  22E2               	addwfc	fsr1h,f,c
 20728  014270  50DE               	movf	postinc2,w,c
 20729  014272  5CE6               	subwf	postinc1,w,c
 20730  014274  50DE               	movf	postinc2,w,c
 20731  014276  58E6               	subwfb	postinc1,w,c
 20732  014278  A0D8               	btfss	status,0,c
 20733  01427A  D028               	goto	l10063
 20734                           
 20735                           ; BSR set to: 0
 20736                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20737  01427C  0100               	movlb	0	; () banked
 20738  01427E  EE20 F004          	lfsr	2,4
 20739  014282  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20740  014284  26D9               	addwf	fsr2l,f,c
 20741  014286  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20742  014288  22DA               	addwfc	fsr2h,f,c
 20743  01428A  CFDE F062          	movff	postinc2,??_ringbuf_num
 20744  01428E  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20745  014292  0100               	movlb	0	; () banked
 20746  014294  EE20 F006          	lfsr	2,6
 20747  014298  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20748  01429A  26D9               	addwf	fsr2l,f,c
 20749  01429C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20750  01429E  22DA               	addwfc	fsr2h,f,c
 20751  0142A0  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20752  0142A4  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20753  0142A8  0100               	movlb	0	; () banked
 20754  0142AA  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 20755  0142AC  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 20756  0142AE  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 20757  0142B0  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 20758  0142B2  0100               	movlb	0	; () banked
 20759  0142B4  5162               	movf	??_ringbuf_num& (0+255),w,b
 20760  0142B6  0100               	movlb	0	; () banked
 20761  0142B8  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 20762  0142BA  0100               	movlb	0	; () banked
 20763  0142BC  6F60               	movwf	?_ringbuf_num& (0+255),b
 20764  0142BE  0100               	movlb	0	; () banked
 20765  0142C0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20766  0142C2  0100               	movlb	0	; () banked
 20767  0142C4  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 20768  0142C6  0100               	movlb	0	; () banked
 20769  0142C8  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20770                           
 20771                           ; BSR set to: 0
 20772                           ;My_ringbuf.c: 15: } else {
 20773                           
 20774                           ; BSR set to: 0
 20775  0142CA  0012               	return	
 20776  0142CC                     l10063:
 20777                           
 20778                           ; BSR set to: 0
 20779                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20780  0142CC  0100               	movlb	0	; () banked
 20781  0142CE  EE20 F004          	lfsr	2,4
 20782  0142D2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20783  0142D4  26D9               	addwf	fsr2l,f,c
 20784  0142D6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20785  0142D8  22DA               	addwfc	fsr2h,f,c
 20786  0142DA  CFDE F062          	movff	postinc2,??_ringbuf_num
 20787  0142DE  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20788  0142E2  0100               	movlb	0	; () banked
 20789  0142E4  EE20 F002          	lfsr	2,2
 20790  0142E8  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20791  0142EA  26D9               	addwf	fsr2l,f,c
 20792  0142EC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20793  0142EE  22DA               	addwfc	fsr2h,f,c
 20794  0142F0  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20795  0142F4  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20796  0142F8  0100               	movlb	0	; () banked
 20797  0142FA  EE20 F006          	lfsr	2,6
 20798  0142FE  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20799  014300  26D9               	addwf	fsr2l,f,c
 20800  014302  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20801  014304  22DA               	addwfc	fsr2h,f,c
 20802  014306  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 20803  01430A  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 20804  01430E  0100               	movlb	0	; () banked
 20805  014310  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 20806  014312  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 20807  014314  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 20808  014316  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 20809  014318  0100               	movlb	0	; () banked
 20810  01431A  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 20811  01431C  0100               	movlb	0	; () banked
 20812  01431E  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 20813  014320  0100               	movlb	0	; () banked
 20814  014322  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 20815  014324  0100               	movlb	0	; () banked
 20816  014326  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 20817  014328  0100               	movlb	0	; () banked
 20818  01432A  5162               	movf	??_ringbuf_num& (0+255),w,b
 20819  01432C  0100               	movlb	0	; () banked
 20820  01432E  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 20821  014330  0100               	movlb	0	; () banked
 20822  014332  6F60               	movwf	?_ringbuf_num& (0+255),b
 20823  014334  0100               	movlb	0	; () banked
 20824  014336  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20825  014338  0100               	movlb	0	; () banked
 20826  01433A  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 20827  01433C  0100               	movlb	0	; () banked
 20828  01433E  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20829                           
 20830                           ; BSR set to: 0
 20831  014340  0012               	return	
 20832  014342                     __end_of_ringbuf_num:
 20833                           	opt stack 0
 20834                           tblptru	equ	0xFF8
 20835                           tblptrh	equ	0xFF7
 20836                           tblptrl	equ	0xFF6
 20837                           tablat	equ	0xFF5
 20838                           prodh	equ	0xFF4
 20839                           prodl	equ	0xFF3
 20840                           intcon	equ	0xFF2
 20841                           intcon2	equ	0xFF1
 20842                           postinc0	equ	0xFEE
 20843                           wreg	equ	0xFE8
 20844                           indf1	equ	0xFE7
 20845                           postinc1	equ	0xFE6
 20846                           postdec1	equ	0xFE5
 20847                           fsr1h	equ	0xFE2
 20848                           fsr1l	equ	0xFE1
 20849                           indf2	equ	0xFDF
 20850                           postinc2	equ	0xFDE
 20851                           postdec2	equ	0xFDD
 20852                           plusw2	equ	0xFDB
 20853                           fsr2h	equ	0xFDA
 20854                           fsr2l	equ	0xFD9
 20855                           status	equ	0xFD8
 20856                           
 20857 ;; *************** function _put_string_usb *****************
 20858 ;; Defined at:
 20859 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 20860 ;; Parameters:    Size  Location     Type
 20861 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20862 ;;		 -> USB_task@data(1), 
 20863 ;;  len             2   14[BANK0 ] int 
 20864 ;; Auto vars:     Size  Location     Type
 20865 ;;		None
 20866 ;; Return value:  Size  Location     Type
 20867 ;;                  2   12[BANK0 ] int 
 20868 ;; Registers used:
 20869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20870 ;; Tracked objects:
 20871 ;;		On entry : 0/0
 20872 ;;		On exit  : 0/0
 20873 ;;		Unchanged: 0/0
 20874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20875 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20878 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20879 ;;Total ram usage:        4 bytes
 20880 ;; Hardware stack levels used:    1
 20881 ;; Hardware stack levels required when called:   13
 20882 ;; This function calls:
 20883 ;;		_CDCTxService
 20884 ;;		_is_usb_available
 20885 ;;		_putUSBUSART
 20886 ;; This function is called by:
 20887 ;;		_USB_task
 20888 ;; This function uses a non-reentrant model
 20889 ;;
 20890                           
 20891                           	psect	text85
 20892  016934                     __ptext85:
 20893                           	opt stack 0
 20894  016934                     _put_string_usb:
 20895                           	opt stack 16
 20896                           
 20897                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 20898                           
 20899                           ; BSR set to: 0
 20900                           ;incstack = 0
 20901  016934  ECFC  F0B5         	call	_is_usb_available	;wreg free
 20902  016938  0900               	iorlw	0
 20903  01693A  B4D8               	btfsc	status,2,c
 20904  01693C  0012               	return	
 20905  01693E  D002               	goto	l12055
 20906  016940                     l12053:
 20907  016940  EC1A  F097         	call	_CDCTxService	;wreg free
 20908  016944                     l12055:
 20909  016944  0100               	movlb	0	; () banked
 20910  016946  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20911  016948  A4D8               	btfss	status,2,c
 20912  01694A  D7FA               	goto	l12053
 20913                           
 20914                           ; BSR set to: 0
 20915                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 20916                           
 20917                           ; BSR set to: 0
 20918  01694C  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 20919  016950  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 20920  016954  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 20921  016958  EC99  F0B5         	call	_putUSBUSART	;wreg free
 20922                           
 20923                           ;My_usb_cdc.c: 28: CDCTxService();
 20924  01695C  EC1A  F097         	call	_CDCTxService	;wreg free
 20925  016960  0012               	return	
 20926  016962                     __end_of_put_string_usb:
 20927                           	opt stack 0
 20928                           tblptru	equ	0xFF8
 20929                           tblptrh	equ	0xFF7
 20930                           tblptrl	equ	0xFF6
 20931                           tablat	equ	0xFF5
 20932                           prodh	equ	0xFF4
 20933                           prodl	equ	0xFF3
 20934                           intcon	equ	0xFF2
 20935                           intcon2	equ	0xFF1
 20936                           postinc0	equ	0xFEE
 20937                           wreg	equ	0xFE8
 20938                           indf1	equ	0xFE7
 20939                           postinc1	equ	0xFE6
 20940                           postdec1	equ	0xFE5
 20941                           fsr1h	equ	0xFE2
 20942                           fsr1l	equ	0xFE1
 20943                           indf2	equ	0xFDF
 20944                           postinc2	equ	0xFDE
 20945                           postdec2	equ	0xFDD
 20946                           plusw2	equ	0xFDB
 20947                           fsr2h	equ	0xFDA
 20948                           fsr2l	equ	0xFD9
 20949                           status	equ	0xFD8
 20950                           
 20951 ;; *************** function _putUSBUSART *****************
 20952 ;; Defined at:
 20953 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 20954 ;; Parameters:    Size  Location     Type
 20955 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20956 ;;		 -> USB_task@data(1), 
 20957 ;;  length          1    2[BANK0 ] unsigned char 
 20958 ;; Auto vars:     Size  Location     Type
 20959 ;;		None
 20960 ;; Return value:  Size  Location     Type
 20961 ;;		None               void
 20962 ;; Registers used:
 20963 ;;		wreg, status,2, status,0
 20964 ;; Tracked objects:
 20965 ;;		On entry : 0/0
 20966 ;;		On exit  : 0/0
 20967 ;;		Unchanged: 0/0
 20968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20969 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20973 ;;Total ram usage:        3 bytes
 20974 ;; Hardware stack levels used:    1
 20975 ;; Hardware stack levels required when called:   11
 20976 ;; This function calls:
 20977 ;;		Nothing
 20978 ;; This function is called by:
 20979 ;;		_put_string_usb
 20980 ;; This function uses a non-reentrant model
 20981 ;;
 20982                           
 20983                           	psect	text86
 20984  016B32                     __ptext86:
 20985                           	opt stack 0
 20986  016B32                     _putUSBUSART:
 20987                           	opt stack 17
 20988                           
 20989                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20990                           
 20991                           ;incstack = 0
 20992  016B32  98A0               	bcf	4000,4,c	;volatile
 20993                           
 20994                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20995  016B34  0100               	movlb	0	; () banked
 20996  016B36  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20997  016B38  A4D8               	btfss	status,2,c
 20998  016B3A  D00C               	goto	l11503
 20999                           
 21000                           ; BSR set to: 0
 21001                           ;usb_device_cdc.c: 640: {
 21002                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 21003  016B3C  C060  F113         	movff	putUSBUSART@data,_pCDCSrc
 21004  016B40  C061  F114         	movff	putUSBUSART@data+1,_pCDCSrc+1
 21005                           
 21006                           ; BSR set to: 0
 21007  016B44  C062  F0FD         	movff	putUSBUSART@length,_cdc_tx_len
 21008                           
 21009                           ; BSR set to: 0
 21010  016B48  0E01               	movlw	1
 21011  016B4A  0101               	movlb	1	; () banked
 21012  016B4C  6F24               	movwf	_cdc_mem_type& (0+255),b
 21013                           
 21014                           ; BSR set to: 1
 21015  016B4E  0E01               	movlw	1
 21016  016B50  0100               	movlb	0	; () banked
 21017  016B52  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21018  016B54                     l11503:
 21019                           
 21020                           ; BSR set to: 0
 21021                           ;usb_device_cdc.c: 642: }
 21022                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21023  016B54  88A0               	bsf	4000,4,c	;volatile
 21024                           
 21025                           ; BSR set to: 0
 21026  016B56  0012               	return		;funcret
 21027  016B58                     __end_of_putUSBUSART:
 21028                           	opt stack 0
 21029                           tblptru	equ	0xFF8
 21030                           tblptrh	equ	0xFF7
 21031                           tblptrl	equ	0xFF6
 21032                           tablat	equ	0xFF5
 21033                           prodh	equ	0xFF4
 21034                           prodl	equ	0xFF3
 21035                           intcon	equ	0xFF2
 21036                           intcon2	equ	0xFF1
 21037                           postinc0	equ	0xFEE
 21038                           wreg	equ	0xFE8
 21039                           indf1	equ	0xFE7
 21040                           postinc1	equ	0xFE6
 21041                           postdec1	equ	0xFE5
 21042                           fsr1h	equ	0xFE2
 21043                           fsr1l	equ	0xFE1
 21044                           indf2	equ	0xFDF
 21045                           postinc2	equ	0xFDE
 21046                           postdec2	equ	0xFDD
 21047                           plusw2	equ	0xFDB
 21048                           fsr2h	equ	0xFDA
 21049                           fsr2l	equ	0xFD9
 21050                           status	equ	0xFD8
 21051                           
 21052 ;; *************** function _get_string_usb *****************
 21053 ;; Defined at:
 21054 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21057 ;;		 -> USB_task@data(1), 
 21058 ;;  len             2   15[BANK0 ] int 
 21059 ;; Auto vars:     Size  Location     Type
 21060 ;;  rx_len          2   18[BANK0 ] int 
 21061 ;; Return value:  Size  Location     Type
 21062 ;;                  2   13[BANK0 ] int 
 21063 ;; Registers used:
 21064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21065 ;; Tracked objects:
 21066 ;;		On entry : 0/0
 21067 ;;		On exit  : 0/0
 21068 ;;		Unchanged: 0/0
 21069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21071 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21073 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21074 ;;Total ram usage:        7 bytes
 21075 ;; Hardware stack levels used:    1
 21076 ;; Hardware stack levels required when called:   13
 21077 ;; This function calls:
 21078 ;;		_CDCTxService
 21079 ;;		_getsUSBUSART
 21080 ;;		_is_usb_available
 21081 ;; This function is called by:
 21082 ;;		_USB_task
 21083 ;; This function uses a non-reentrant model
 21084 ;;
 21085                           
 21086                           	psect	text87
 21087  0165D0                     __ptext87:
 21088                           	opt stack 0
 21089  0165D0                     _get_string_usb:
 21090                           	opt stack 16
 21091                           
 21092                           ;My_usb_cdc.c: 33: int rx_len;
 21093                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 21094                           
 21095                           ; BSR set to: 0
 21096                           ;incstack = 0
 21097  0165D0  ECFC  F0B5         	call	_is_usb_available	;wreg free
 21098  0165D4  0900               	iorlw	0
 21099  0165D6  A4D8               	btfss	status,2,c
 21100  0165D8  D008               	goto	l12071
 21101                           
 21102                           ;My_usb_cdc.c: 36: return 0;
 21103  0165DA  0E00               	movlw	0
 21104  0165DC  0100               	movlb	0	; () banked
 21105  0165DE  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 21106  0165E0  0E00               	movlw	0
 21107  0165E2  6F6D               	movwf	?_get_string_usb& (0+255),b
 21108                           
 21109                           ; BSR set to: 0
 21110  0165E4  0012               	return	
 21111  0165E6                     l12069:
 21112                           
 21113                           ; BSR set to: 0
 21114  0165E6  EC1A  F097         	call	_CDCTxService	;wreg free
 21115  0165EA                     l12071:
 21116  0165EA  0100               	movlb	0	; () banked
 21117  0165EC  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21118  0165EE  A4D8               	btfss	status,2,c
 21119  0165F0  D7FA               	goto	l12069
 21120                           
 21121                           ; BSR set to: 0
 21122                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 21123                           
 21124                           ; BSR set to: 0
 21125  0165F2  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 21126  0165F6  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 21127  0165FA  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 21128  0165FE  EC85  F0A2         	call	_getsUSBUSART	;wreg free
 21129  016602  0100               	movlb	0	; () banked
 21130  016604  6F71               	movwf	??_get_string_usb& (0+255),b
 21131  016606  0100               	movlb	0	; () banked
 21132  016608  5171               	movf	??_get_string_usb& (0+255),w,b
 21133  01660A  0100               	movlb	0	; () banked
 21134  01660C  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 21135  01660E  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 21136                           
 21137                           ;My_usb_cdc.c: 40: CDCTxService();
 21138  016610  EC1A  F097         	call	_CDCTxService	;wreg free
 21139                           
 21140                           ;My_usb_cdc.c: 41: return rx_len;
 21141  016614  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 21142  016618  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 21143  01661C  0012               	return	
 21144  01661E                     __end_of_get_string_usb:
 21145                           	opt stack 0
 21146                           tblptru	equ	0xFF8
 21147                           tblptrh	equ	0xFF7
 21148                           tblptrl	equ	0xFF6
 21149                           tablat	equ	0xFF5
 21150                           prodh	equ	0xFF4
 21151                           prodl	equ	0xFF3
 21152                           intcon	equ	0xFF2
 21153                           intcon2	equ	0xFF1
 21154                           postinc0	equ	0xFEE
 21155                           wreg	equ	0xFE8
 21156                           indf1	equ	0xFE7
 21157                           postinc1	equ	0xFE6
 21158                           postdec1	equ	0xFE5
 21159                           fsr1h	equ	0xFE2
 21160                           fsr1l	equ	0xFE1
 21161                           indf2	equ	0xFDF
 21162                           postinc2	equ	0xFDE
 21163                           postdec2	equ	0xFDD
 21164                           plusw2	equ	0xFDB
 21165                           fsr2h	equ	0xFDA
 21166                           fsr2l	equ	0xFD9
 21167                           status	equ	0xFD8
 21168                           
 21169 ;; *************** function _is_usb_available *****************
 21170 ;; Defined at:
 21171 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 21172 ;; Parameters:    Size  Location     Type
 21173 ;;		None
 21174 ;; Auto vars:     Size  Location     Type
 21175 ;;		None
 21176 ;; Return value:  Size  Location     Type
 21177 ;;                  1    wreg      unsigned char 
 21178 ;; Registers used:
 21179 ;;		wreg, status,2, status,0
 21180 ;; Tracked objects:
 21181 ;;		On entry : 0/0
 21182 ;;		On exit  : 0/0
 21183 ;;		Unchanged: 0/0
 21184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21189 ;;Total ram usage:        1 bytes
 21190 ;; Hardware stack levels used:    1
 21191 ;; Hardware stack levels required when called:   11
 21192 ;; This function calls:
 21193 ;;		Nothing
 21194 ;; This function is called by:
 21195 ;;		_put_string_usb
 21196 ;;		_get_string_usb
 21197 ;; This function uses a non-reentrant model
 21198 ;;
 21199                           
 21200                           	psect	text88
 21201  016BF8                     __ptext88:
 21202                           	opt stack 0
 21203  016BF8                     _is_usb_available:
 21204                           	opt stack 17
 21205                           
 21206                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 21207                           
 21208                           ;incstack = 0
 21209  016BF8  0E00               	movlw	0
 21210  016BFA  0100               	movlb	0	; () banked
 21211  016BFC  6F60               	movwf	_is_usb_available$4168& (0+255),b
 21212                           
 21213                           ; BSR set to: 0
 21214  016BFE  0E1F               	movlw	31
 21215  016C00  6414               	cpfsgt	_USBDeviceState,c	;volatile
 21216  016C02  D005               	goto	l1259
 21217                           
 21218                           ; BSR set to: 0
 21219  016C04  B265               	btfsc	3941,1,c	;volatile
 21220  016C06  D003               	goto	l1259
 21221                           
 21222                           ; BSR set to: 0
 21223  016C08  0E01               	movlw	1
 21224  016C0A  0100               	movlb	0	; () banked
 21225  016C0C  6F60               	movwf	_is_usb_available$4168& (0+255),b
 21226  016C0E                     l1259:
 21227                           
 21228                           ; BSR set to: 0
 21229  016C0E  0100               	movlb	0	; () banked
 21230  016C10  5160               	movf	_is_usb_available$4168& (0+255),w,b
 21231  016C12  0012               	return	
 21232  016C14                     __end_of_is_usb_available:
 21233                           	opt stack 0
 21234                           tblptru	equ	0xFF8
 21235                           tblptrh	equ	0xFF7
 21236                           tblptrl	equ	0xFF6
 21237                           tablat	equ	0xFF5
 21238                           prodh	equ	0xFF4
 21239                           prodl	equ	0xFF3
 21240                           intcon	equ	0xFF2
 21241                           intcon2	equ	0xFF1
 21242                           postinc0	equ	0xFEE
 21243                           wreg	equ	0xFE8
 21244                           indf1	equ	0xFE7
 21245                           postinc1	equ	0xFE6
 21246                           postdec1	equ	0xFE5
 21247                           fsr1h	equ	0xFE2
 21248                           fsr1l	equ	0xFE1
 21249                           indf2	equ	0xFDF
 21250                           postinc2	equ	0xFDE
 21251                           postdec2	equ	0xFDD
 21252                           plusw2	equ	0xFDB
 21253                           fsr2h	equ	0xFDA
 21254                           fsr2l	equ	0xFD9
 21255                           status	equ	0xFD8
 21256                           
 21257 ;; *************** function _getsUSBUSART *****************
 21258 ;; Defined at:
 21259 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 21260 ;; Parameters:    Size  Location     Type
 21261 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21262 ;;		 -> USB_task@data(1), 
 21263 ;;  len             1    9[BANK0 ] unsigned char 
 21264 ;; Auto vars:     Size  Location     Type
 21265 ;;		None
 21266 ;; Return value:  Size  Location     Type
 21267 ;;                  1    wreg      unsigned char 
 21268 ;; Registers used:
 21269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21270 ;; Tracked objects:
 21271 ;;		On entry : 0/0
 21272 ;;		On exit  : 0/0
 21273 ;;		Unchanged: 0/0
 21274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21275 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21276 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21278 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21279 ;;Total ram usage:        6 bytes
 21280 ;; Hardware stack levels used:    1
 21281 ;; Hardware stack levels required when called:   12
 21282 ;; This function calls:
 21283 ;;		_USBTransferOnePacket
 21284 ;; This function is called by:
 21285 ;;		_get_string_usb
 21286 ;; This function uses a non-reentrant model
 21287 ;;
 21288                           
 21289                           	psect	text89
 21290  01450A                     __ptext89:
 21291                           	opt stack 0
 21292  01450A                     _getsUSBUSART:
 21293                           	opt stack 16
 21294                           
 21295                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 21296                           
 21297                           ; BSR set to: 0
 21298                           ;incstack = 0
 21299  01450A  0E00               	movlw	0
 21300  01450C  0100               	movlb	0	; () banked
 21301  01450E  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21305  014510  5007               	movf	_CDCDataOutHandle,w,c
 21306  014512  1008               	iorwf	_CDCDataOutHandle+1,w,c
 21307  014514  B4D8               	btfsc	status,2,c
 21308  014516  D012               	goto	l11511
 21309                           
 21310                           ; BSR set to: 0
 21311  014518  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21312  01451C  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21313  014520  AEDF               	btfss	indf2,7,c
 21314  014522  D004               	goto	u13450
 21315  014524  0100               	movlb	0	; () banked
 21316  014526  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21317  014528  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21318  01452A  D002               	goto	u13458
 21319  01452C                     u13450:
 21320  01452C  0100               	movlb	0	; () banked
 21321  01452E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21322  014530                     u13458:
 21323  014530  0100               	movlb	0	; () banked
 21324  014532  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21325  014534  0100               	movlb	0	; () banked
 21326  014536  6F6B               	movwf	_getsUSBUSART$5985& (0+255),b
 21327  014538  6B6C               	clrf	(_getsUSBUSART$5985+1)& (0+255),b
 21328  01453A  D005               	goto	l11513
 21329  01453C                     l11511:
 21330                           
 21331                           ; BSR set to: 0
 21332  01453C  0E00               	movlw	0
 21333  01453E  0100               	movlb	0	; () banked
 21334  014540  6F6C               	movwf	(_getsUSBUSART$5985+1)& (0+255),b
 21335  014542  0E00               	movlw	0
 21336  014544  6F6B               	movwf	_getsUSBUSART$5985& (0+255),b
 21337  014546                     l11513:
 21338                           
 21339                           ; BSR set to: 0
 21340  014546  0100               	movlb	0	; () banked
 21341  014548  516B               	movf	_getsUSBUSART$5985& (0+255),w,b
 21342  01454A  0100               	movlb	0	; () banked
 21343  01454C  116C               	iorwf	(_getsUSBUSART$5985+1)& (0+255),w,b
 21344  01454E  A4D8               	btfss	status,2,c
 21345  014550  D049               	goto	l11529
 21346                           
 21347                           ; BSR set to: 0
 21348                           ;usb_device_cdc.c: 547: {
 21349                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21350  014552  EE20 F001          	lfsr	2,1
 21351  014556  5007               	movf	_CDCDataOutHandle,w,c
 21352  014558  26D9               	addwf	fsr2l,f,c
 21353  01455A  5008               	movf	_CDCDataOutHandle+1,w,c
 21354  01455C  22DA               	addwfc	fsr2h,f,c
 21355  01455E  0100               	movlb	0	; () banked
 21356  014560  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21357  014562  5CDE               	subwf	postinc2,w,c
 21358  014564  B0D8               	btfsc	status,0,c
 21359  014566  D009               	goto	l11519
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21363  014568  EE20 F001          	lfsr	2,1
 21364  01456C  5007               	movf	_CDCDataOutHandle,w,c
 21365  01456E  26D9               	addwf	fsr2l,f,c
 21366  014570  5008               	movf	_CDCDataOutHandle+1,w,c
 21367  014572  22DA               	addwfc	fsr2h,f,c
 21368  014574  50DF               	movf	indf2,w,c
 21369  014576  0100               	movlb	0	; () banked
 21370  014578  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21371  01457A                     l11519:
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21375  01457A  0E00               	movlw	0
 21376  01457C  0100               	movlb	0	; () banked
 21377  01457E  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21378  014580  D018               	goto	l11525
 21379  014582                     l11521:
 21380                           
 21381                           ; BSR set to: 0
 21382                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21383  014582  0100               	movlb	0	; () banked
 21384  014584  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21385  014586  0D01               	mullw	1
 21386  014588  0E64               	movlw	low _cdc_data_rx
 21387  01458A  24F3               	addwf	prodl,w,c
 21388  01458C  6ED9               	movwf	fsr2l,c
 21389  01458E  0E03               	movlw	high _cdc_data_rx
 21390  014590  20F4               	addwfc	prodh,w,c
 21391  014592  6EDA               	movwf	fsr2h,c
 21392  014594  0100               	movlb	0	; () banked
 21393  014596  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21394  014598  0D01               	mullw	1
 21395  01459A  50F3               	movf	prodl,w,c
 21396  01459C  0100               	movlb	0	; () banked
 21397  01459E  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21398  0145A0  6EE1               	movwf	fsr1l,c
 21399  0145A2  50F4               	movf	prodh,w,c
 21400  0145A4  0100               	movlb	0	; () banked
 21401  0145A6  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21402  0145A8  6EE2               	movwf	fsr1h,c
 21403  0145AA  CFDF FFE7          	movff	indf2,indf1
 21404                           
 21405                           ; BSR set to: 0
 21406  0145AE  0100               	movlb	0	; () banked
 21407  0145B0  2BFB               	incf	_cdc_rx_len& (0+255),f,b
 21408  0145B2                     l11525:
 21409                           
 21410                           ; BSR set to: 0
 21411  0145B2  0100               	movlb	0	; () banked
 21412  0145B4  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21413  0145B6  0100               	movlb	0	; () banked
 21414  0145B8  5DFB               	subwf	_cdc_rx_len& (0+255),w,b
 21415  0145BA  A0D8               	btfss	status,0,c
 21416  0145BC  D7E2               	goto	l11521
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21420                           
 21421                           ; BSR set to: 0
 21422  0145BE  0E00               	movlw	0
 21423  0145C0  0100               	movlb	0	; () banked
 21424  0145C2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21425  0145C4  0E64               	movlw	low _cdc_data_rx
 21426  0145C6  0100               	movlb	0	; () banked
 21427  0145C8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21428  0145CA  0E03               	movlw	high _cdc_data_rx
 21429  0145CC  0100               	movlb	0	; () banked
 21430  0145CE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21431  0145D0  0E40               	movlw	64
 21432  0145D2  0100               	movlb	0	; () banked
 21433  0145D4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21434  0145D6  0E02               	movlw	2
 21435  0145D8  EC41  F0A4         	call	_USBTransferOnePacket
 21436  0145DC  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21437  0145E0  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21438  0145E4                     l11529:
 21439                           
 21440                           ;usb_device_cdc.c: 567: }
 21441                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21442  0145E4  0100               	movlb	0	; () banked
 21443  0145E6  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21444  0145E8  0012               	return	
 21445  0145EA                     __end_of_getsUSBUSART:
 21446                           	opt stack 0
 21447                           tblptru	equ	0xFF8
 21448                           tblptrh	equ	0xFF7
 21449                           tblptrl	equ	0xFF6
 21450                           tablat	equ	0xFF5
 21451                           prodh	equ	0xFF4
 21452                           prodl	equ	0xFF3
 21453                           intcon	equ	0xFF2
 21454                           intcon2	equ	0xFF1
 21455                           postinc0	equ	0xFEE
 21456                           wreg	equ	0xFE8
 21457                           indf1	equ	0xFE7
 21458                           postinc1	equ	0xFE6
 21459                           postdec1	equ	0xFE5
 21460                           fsr1h	equ	0xFE2
 21461                           fsr1l	equ	0xFE1
 21462                           indf2	equ	0xFDF
 21463                           postinc2	equ	0xFDE
 21464                           postdec2	equ	0xFDD
 21465                           plusw2	equ	0xFDB
 21466                           fsr2h	equ	0xFDA
 21467                           fsr2l	equ	0xFD9
 21468                           status	equ	0xFD8
 21469                           
 21470 ;; *************** function _CDCTxService *****************
 21471 ;; Defined at:
 21472 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 21473 ;; Parameters:    Size  Location     Type
 21474 ;;		None
 21475 ;; Auto vars:     Size  Location     Type
 21476 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21477 ;;  i               1   10[BANK0 ] unsigned char 
 21478 ;; Return value:  Size  Location     Type
 21479 ;;		None               void
 21480 ;; Registers used:
 21481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21482 ;; Tracked objects:
 21483 ;;		On entry : 0/0
 21484 ;;		On exit  : 0/0
 21485 ;;		Unchanged: 0/0
 21486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21490 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21491 ;;Total ram usage:        5 bytes
 21492 ;; Hardware stack levels used:    1
 21493 ;; Hardware stack levels required when called:   12
 21494 ;; This function calls:
 21495 ;;		_USBTransferOnePacket
 21496 ;; This function is called by:
 21497 ;;		_put_string_usb
 21498 ;;		_get_string_usb
 21499 ;; This function uses a non-reentrant model
 21500 ;;
 21501                           
 21502                           	psect	text90
 21503  012E34                     __ptext90:
 21504                           	opt stack 0
 21505  012E34                     _CDCTxService:
 21506                           	opt stack 16
 21507                           
 21508                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21509                           ;usb_device_cdc.c: 896: uint8_t i;
 21510                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;incstack = 0
 21514  012E34  98A0               	bcf	4000,4,c	;volatile
 21515                           
 21516                           ;usb_device_cdc.c: 900: {};
 21517                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21518  012E36  0101               	movlb	1	; () banked
 21519  012E38  5118               	movf	_CDCDataInHandle& (0+255),w,b
 21520  012E3A  0101               	movlb	1	; () banked
 21521  012E3C  1119               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21522  012E3E  B4D8               	btfsc	status,2,c
 21523  012E40  D013               	goto	l11427
 21524                           
 21525                           ; BSR set to: 1
 21526  012E42  C118  FFD9         	movff	_CDCDataInHandle,fsr2l
 21527  012E46  C119  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21528  012E4A  0101               	movlb	1	; () banked
 21529  012E4C  AEDF               	btfss	indf2,7,c
 21530  012E4E  D004               	goto	u13310
 21531  012E50  0100               	movlb	0	; () banked
 21532  012E52  6B67               	clrf	??_CDCTxService& (0+255),b
 21533  012E54  2B67               	incf	??_CDCTxService& (0+255),f,b
 21534  012E56  D002               	goto	u13318
 21535  012E58                     u13310:
 21536  012E58  0100               	movlb	0	; () banked
 21537  012E5A  6B67               	clrf	??_CDCTxService& (0+255),b
 21538  012E5C                     u13318:
 21539  012E5C  0100               	movlb	0	; () banked
 21540  012E5E  5167               	movf	??_CDCTxService& (0+255),w,b
 21541  012E60  0100               	movlb	0	; () banked
 21542  012E62  6F68               	movwf	_CDCTxService$6033& (0+255),b
 21543  012E64  6B69               	clrf	(_CDCTxService$6033+1)& (0+255),b
 21544  012E66  D005               	goto	l11429
 21545  012E68                     l11427:
 21546  012E68  0E00               	movlw	0
 21547  012E6A  0100               	movlb	0	; () banked
 21548  012E6C  6F69               	movwf	(_CDCTxService$6033+1)& (0+255),b
 21549  012E6E  0E00               	movlw	0
 21550  012E70  6F68               	movwf	_CDCTxService$6033& (0+255),b
 21551  012E72                     l11429:
 21552                           
 21553                           ; BSR set to: 0
 21554  012E72  0100               	movlb	0	; () banked
 21555  012E74  5168               	movf	_CDCTxService$6033& (0+255),w,b
 21556  012E76  0100               	movlb	0	; () banked
 21557  012E78  1169               	iorwf	(_CDCTxService$6033+1)& (0+255),w,b
 21558  012E7A  B4D8               	btfsc	status,2,c
 21559  012E7C  D002               	goto	l11433
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;usb_device_cdc.c: 903: {
 21563                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21564  012E7E  88A0               	bsf	4000,4,c	;volatile
 21565                           
 21566                           ;usb_device_cdc.c: 905: return;
 21567  012E80  0012               	return	
 21568  012E82                     l11433:
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;usb_device_cdc.c: 906: }
 21572                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21573  012E82  0E03               	movlw	3
 21574  012E84  0100               	movlb	0	; () banked
 21575  012E86  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21576  012E88  A4D8               	btfss	status,2,c
 21577  012E8A  D003               	goto	l1797
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21581  012E8C  0E00               	movlw	0
 21582  012E8E  0100               	movlb	0	; () banked
 21583  012E90  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21584  012E92                     l1797:
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21588  012E92  0100               	movlb	0	; () banked
 21589  012E94  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21590  012E96  A4D8               	btfss	status,2,c
 21591  012E98  D002               	goto	l11439
 21592                           
 21593                           ; BSR set to: 0
 21594                           ;usb_device_cdc.c: 920: {
 21595                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21596  012E9A  88A0               	bsf	4000,4,c	;volatile
 21597                           
 21598                           ;usb_device_cdc.c: 922: return;
 21599  012E9C  0012               	return	
 21600  012E9E                     l11439:
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;usb_device_cdc.c: 923: }
 21604                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21605  012E9E  0E02               	movlw	2
 21606  012EA0  0100               	movlb	0	; () banked
 21607  012EA2  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21608  012EA4  A4D8               	btfss	status,2,c
 21609  012EA6  D017               	goto	l11445
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;usb_device_cdc.c: 929: {
 21613                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21614  012EA8  0E01               	movlw	1
 21615  012EAA  0100               	movlb	0	; () banked
 21616  012EAC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21617  012EAE  0E00               	movlw	0
 21618  012EB0  0100               	movlb	0	; () banked
 21619  012EB2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21620  012EB4  0E00               	movlw	0
 21621  012EB6  0100               	movlb	0	; () banked
 21622  012EB8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21623  012EBA  0E00               	movlw	0
 21624  012EBC  0100               	movlb	0	; () banked
 21625  012EBE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21626  012EC0  0E02               	movlw	2
 21627  012EC2  EC41  F0A4         	call	_USBTransferOnePacket
 21628  012EC6  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21629  012ECA  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21630                           
 21631                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21632  012ECE  0E03               	movlw	3
 21633  012ED0  0100               	movlb	0	; () banked
 21634  012ED2  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21635                           
 21636                           ;usb_device_cdc.c: 933: }
 21637  012ED4  D073               	goto	l11489
 21638  012ED6                     l11445:
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21642  012ED6  0100               	movlb	0	; () banked
 21643  012ED8  05FC               	decf	_cdc_trf_state& (0+255),w,b
 21644  012EDA  A4D8               	btfss	status,2,c
 21645  012EDC  D06F               	goto	l11489
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;usb_device_cdc.c: 935: {
 21649                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21650  012EDE  0E40               	movlw	64
 21651  012EE0  0100               	movlb	0	; () banked
 21652  012EE2  65FD               	cpfsgt	_cdc_tx_len& (0+255),b
 21653  012EE4  D004               	goto	l1802
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21657  012EE6  0E40               	movlw	64
 21658  012EE8  0100               	movlb	0	; () banked
 21659  012EEA  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21660  012EEC  D002               	goto	l11451
 21661  012EEE                     l1802:
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;usb_device_cdc.c: 941: else
 21665                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21666  012EEE  C0FD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21667  012EF2                     l11451:
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21671  012EF2  0100               	movlb	0	; () banked
 21672  012EF4  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21673  012EF6  0800               	sublw	0
 21674  012EF8  0100               	movlb	0	; () banked
 21675  012EFA  25FD               	addwf	_cdc_tx_len& (0+255),w,b
 21676  012EFC  0100               	movlb	0	; () banked
 21677  012EFE  6FFD               	movwf	_cdc_tx_len& (0+255),b
 21678                           
 21679                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21680  012F00  0EA4               	movlw	low _cdc_data_tx
 21681  012F02  0101               	movlb	1	; () banked
 21682  012F04  6F10               	movwf	_pCDCDst& (0+255),b
 21683  012F06  0E03               	movlw	high _cdc_data_tx
 21684  012F08  0101               	movlb	1	; () banked
 21685  012F0A  6F11               	movwf	(_pCDCDst+1)& (0+255),b
 21686                           
 21687                           ; BSR set to: 1
 21688                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21689  012F0C  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21690                           
 21691                           ; BSR set to: 1
 21692                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21693  012F10  0101               	movlb	1	; () banked
 21694  012F12  5124               	movf	_cdc_mem_type& (0+255),w,b
 21695  012F14  0101               	movlb	1	; () banked
 21696  012F16  B4D8               	btfsc	status,2,c
 21697  012F18  D013               	goto	l11467
 21698  012F1A  D02A               	goto	l11477
 21699  012F1C                     l11459:
 21700                           
 21701                           ;usb_device_cdc.c: 955: {
 21702                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21703  012F1C  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21704  012F20  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21705  012F24  C110  FFE1         	movff	_pCDCDst,fsr1l
 21706  012F28  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21707  012F2C  CFDF FFE7          	movff	indf2,indf1
 21708                           
 21709                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21710  012F30  0101               	movlb	1	; () banked
 21711  012F32  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21712  012F34  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21713                           
 21714                           ; BSR set to: 1
 21715                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21716  012F36  0101               	movlb	1	; () banked
 21717  012F38  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21718  012F3A  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21719                           
 21720                           ; BSR set to: 1
 21721                           ;usb_device_cdc.c: 959: i--;
 21722  012F3C  0100               	movlb	0	; () banked
 21723  012F3E  076A               	decf	CDCTxService@i& (0+255),f,b
 21724  012F40                     l11467:
 21725  012F40  0100               	movlb	0	; () banked
 21726  012F42  516A               	movf	CDCTxService@i& (0+255),w,b
 21727  012F44  0100               	movlb	0	; () banked
 21728  012F46  B4D8               	btfsc	status,2,c
 21729  012F48  D018               	goto	l11479
 21730  012F4A  D7E8               	goto	l11459
 21731  012F4C                     l11469:
 21732                           
 21733                           ; BSR set to: 0
 21734                           ;usb_device_cdc.c: 965: {
 21735                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21736  012F4C  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21737  012F50  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21738  012F54  C110  FFE1         	movff	_pCDCDst,fsr1l
 21739  012F58  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21740  012F5C  CFDF FFE7          	movff	indf2,indf1
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21744  012F60  0101               	movlb	1	; () banked
 21745  012F62  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21746  012F64  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21747                           
 21748                           ; BSR set to: 1
 21749                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21750  012F66  0101               	movlb	1	; () banked
 21751  012F68  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21752  012F6A  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21753                           
 21754                           ; BSR set to: 1
 21755                           ;usb_device_cdc.c: 969: i--;
 21756  012F6C  0100               	movlb	0	; () banked
 21757  012F6E  076A               	decf	CDCTxService@i& (0+255),f,b
 21758  012F70                     l11477:
 21759  012F70  0100               	movlb	0	; () banked
 21760  012F72  516A               	movf	CDCTxService@i& (0+255),w,b
 21761  012F74  0100               	movlb	0	; () banked
 21762  012F76  A4D8               	btfss	status,2,c
 21763  012F78  D7E9               	goto	l11469
 21764  012F7A                     l11479:
 21765                           
 21766                           ; BSR set to: 0
 21767                           ;usb_device_cdc.c: 970: }
 21768                           ;usb_device_cdc.c: 971: }
 21769                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21770  012F7A  0100               	movlb	0	; () banked
 21771  012F7C  51FD               	movf	_cdc_tx_len& (0+255),w,b
 21772  012F7E  0100               	movlb	0	; () banked
 21773  012F80  A4D8               	btfss	status,2,c
 21774  012F82  D00A               	goto	l11487
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;usb_device_cdc.c: 978: {
 21778                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21779  012F84  0E40               	movlw	64
 21780  012F86  0100               	movlb	0	; () banked
 21781  012F88  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21782  012F8A  A4D8               	btfss	status,2,c
 21783  012F8C  D002               	goto	l11485
 21784                           
 21785                           ; BSR set to: 0
 21786                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21787  012F8E  0E02               	movlw	2
 21788  012F90  D001               	goto	L4
 21789  012F92                     l11485:
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;usb_device_cdc.c: 981: else
 21793                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21794  012F92  0E03               	movlw	3
 21795  012F94                     L4:
 21796  012F94  0100               	movlb	0	; () banked
 21797  012F96  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21798  012F98                     l11487:
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;usb_device_cdc.c: 983: }
 21802                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21803  012F98  0E01               	movlw	1
 21804  012F9A  0100               	movlb	0	; () banked
 21805  012F9C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21806  012F9E  0EA4               	movlw	low _cdc_data_tx
 21807  012FA0  0100               	movlb	0	; () banked
 21808  012FA2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21809  012FA4  0E03               	movlw	high _cdc_data_tx
 21810  012FA6  0100               	movlb	0	; () banked
 21811  012FA8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21812  012FAA  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21813  012FAE  0E02               	movlw	2
 21814  012FB0  EC41  F0A4         	call	_USBTransferOnePacket
 21815  012FB4  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21816  012FB8  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21817  012FBC                     l11489:
 21818                           
 21819                           ;usb_device_cdc.c: 986: }
 21820                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21821  012FBC  88A0               	bsf	4000,4,c	;volatile
 21822  012FBE  0012               	return		;funcret
 21823  012FC0                     __end_of_CDCTxService:
 21824                           	opt stack 0
 21825                           tblptru	equ	0xFF8
 21826                           tblptrh	equ	0xFF7
 21827                           tblptrl	equ	0xFF6
 21828                           tablat	equ	0xFF5
 21829                           prodh	equ	0xFF4
 21830                           prodl	equ	0xFF3
 21831                           intcon	equ	0xFF2
 21832                           intcon2	equ	0xFF1
 21833                           postinc0	equ	0xFEE
 21834                           wreg	equ	0xFE8
 21835                           indf1	equ	0xFE7
 21836                           postinc1	equ	0xFE6
 21837                           postdec1	equ	0xFE5
 21838                           fsr1h	equ	0xFE2
 21839                           fsr1l	equ	0xFE1
 21840                           indf2	equ	0xFDF
 21841                           postinc2	equ	0xFDE
 21842                           postdec2	equ	0xFDD
 21843                           plusw2	equ	0xFDB
 21844                           fsr2h	equ	0xFDA
 21845                           fsr2l	equ	0xFD9
 21846                           status	equ	0xFD8
 21847                           
 21848 ;; *************** function _USBTransferOnePacket *****************
 21849 ;; Defined at:
 21850 ;;		line 995 in file "../My_library/usb/usb_device.c"
 21851 ;; Parameters:    Size  Location     Type
 21852 ;;  ep              1    wreg     unsigned char 
 21853 ;;  dir             1    0[BANK0 ] unsigned char 
 21854 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21855 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21856 ;;  len             1    3[BANK0 ] unsigned char 
 21857 ;; Auto vars:     Size  Location     Type
 21858 ;;  ep              1    4[BANK0 ] unsigned char 
 21859 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21860 ;;		 -> NULL(0), BDT(48), 
 21861 ;; Return value:  Size  Location     Type
 21862 ;;                  2    0[BANK0 ] PTR void 
 21863 ;; Registers used:
 21864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21865 ;; Tracked objects:
 21866 ;;		On entry : 0/0
 21867 ;;		On exit  : 0/0
 21868 ;;		Unchanged: 0/0
 21869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21873 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21874 ;;Total ram usage:        7 bytes
 21875 ;; Hardware stack levels used:    1
 21876 ;; Hardware stack levels required when called:   11
 21877 ;; This function calls:
 21878 ;;		Nothing
 21879 ;; This function is called by:
 21880 ;;		_getsUSBUSART
 21881 ;;		_CDCTxService
 21882 ;;		_USBCDCEventHandler
 21883 ;; This function uses a non-reentrant model
 21884 ;;
 21885                           
 21886                           	psect	text91
 21887  014882                     __ptext91:
 21888                           	opt stack 0
 21889  014882                     _USBTransferOnePacket:
 21890                           	opt stack 16
 21891                           
 21892                           ;incstack = 0
 21893                           ;USBTransferOnePacket@ep stored from wreg
 21894  014882  0100               	movlb	0	; () banked
 21895  014884  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21896                           
 21897                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21898                           ;usb_device.c: 1000: if(dir != 0)
 21899  014886  0100               	movlb	0	; () banked
 21900  014888  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21901  01488A  0100               	movlb	0	; () banked
 21902  01488C  B4D8               	btfsc	status,2,c
 21903  01488E  D008               	goto	l10873
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;usb_device.c: 1001: {
 21907                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21908  014890  0100               	movlb	0	; () banked
 21909  014892  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21910  014894  0D02               	mullw	2
 21911  014896  0EF5               	movlw	low _pBDTEntryIn
 21912  014898  24F3               	addwf	prodl,w,c
 21913  01489A  6ED9               	movwf	fsr2l,c
 21914  01489C  0E00               	movlw	high _pBDTEntryIn
 21915  01489E  D007               	goto	L5
 21916  0148A0                     l10873:
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;usb_device.c: 1005: else
 21920                           ;usb_device.c: 1006: {
 21921                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21922  0148A0  0100               	movlb	0	; () banked
 21923  0148A2  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21924  0148A4  0D02               	mullw	2
 21925  0148A6  0E00               	movlw	low _pBDTEntryOut
 21926  0148A8  24F3               	addwf	prodl,w,c
 21927  0148AA  6ED9               	movwf	fsr2l,c
 21928  0148AC  0E01               	movlw	high _pBDTEntryOut
 21929  0148AE                     L5:
 21930  0148AE  20F4               	addwfc	prodh,w,c
 21931  0148B0  6EDA               	movwf	fsr2h,c
 21932  0148B2  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21933  0148B6  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;usb_device.c: 1009: }
 21937                           ;usb_device.c: 1013: if(handle == 0)
 21938                           
 21939                           ; BSR set to: 0
 21940  0148BA  0100               	movlb	0	; () banked
 21941  0148BC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21942  0148BE  0100               	movlb	0	; () banked
 21943  0148C0  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21944  0148C2  A4D8               	btfss	status,2,c
 21945  0148C4  D007               	goto	l10881
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;usb_device.c: 1014: {
 21949                           ;usb_device.c: 1015: return 0;
 21950  0148C6  0E00               	movlw	0
 21951  0148C8  0100               	movlb	0	; () banked
 21952  0148CA  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21953  0148CC  0E00               	movlw	0
 21954  0148CE  0100               	movlb	0	; () banked
 21955  0148D0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21956                           
 21957                           ; BSR set to: 0
 21958  0148D2  0012               	return	
 21959  0148D4                     l10881:
 21960                           
 21961                           ; BSR set to: 0
 21962                           ;usb_device.c: 1016: }
 21963                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21964  0148D4  0100               	movlb	0	; () banked
 21965  0148D6  EE20 F002          	lfsr	2,2
 21966  0148DA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21967  0148DC  26D9               	addwf	fsr2l,f,c
 21968  0148DE  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21969  0148E0  22DA               	addwfc	fsr2h,f,c
 21970  0148E2  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21971  0148E6  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21972                           
 21973                           ;usb_device.c: 1030: handle->CNT = len;
 21974  0148EA  0100               	movlb	0	; () banked
 21975  0148EC  EE20 F001          	lfsr	2,1
 21976  0148F0  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21977  0148F2  26D9               	addwf	fsr2l,f,c
 21978  0148F4  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21979  0148F6  22DA               	addwfc	fsr2h,f,c
 21980  0148F8  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21984  0148FC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21985  014900  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21986  014904  0E40               	movlw	64
 21987  014906  16DF               	andwf	indf2,f,c
 21988                           
 21989                           ; BSR set to: 0
 21990                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21991  014908  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21992  01490C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21993  014910  0E00               	movlw	0
 21994  014912  86DB               	bsf	plusw2,3,c
 21995                           
 21996                           ; BSR set to: 0
 21997                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21998  014914  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21999  014918  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22000  01491C  0E00               	movlw	0
 22001  01491E  8EDB               	bsf	plusw2,7,c
 22002                           
 22003                           ; BSR set to: 0
 22004                           ;usb_device.c: 1036: if(dir != 0)
 22005  014920  0100               	movlb	0	; () banked
 22006  014922  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22007  014924  0100               	movlb	0	; () banked
 22008  014926  B4D8               	btfsc	status,2,c
 22009  014928  D008               	goto	l10893
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;usb_device.c: 1037: {
 22013                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22014  01492A  0100               	movlb	0	; () banked
 22015  01492C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22016  01492E  0D02               	mullw	2
 22017  014930  0EF5               	movlw	low _pBDTEntryIn
 22018  014932  24F3               	addwf	prodl,w,c
 22019  014934  6ED9               	movwf	fsr2l,c
 22020  014936  0E00               	movlw	high _pBDTEntryIn
 22021  014938  D007               	goto	L6
 22022  01493A                     l10893:
 22023                           
 22024                           ; BSR set to: 0
 22025                           ;usb_device.c: 1041: else
 22026                           ;usb_device.c: 1042: {
 22027                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22028  01493A  0100               	movlb	0	; () banked
 22029  01493C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22030  01493E  0D02               	mullw	2
 22031  014940  0E00               	movlw	low _pBDTEntryOut
 22032  014942  24F3               	addwf	prodl,w,c
 22033  014944  6ED9               	movwf	fsr2l,c
 22034  014946  0E01               	movlw	high _pBDTEntryOut
 22035  014948                     L6:
 22036  014948  20F4               	addwfc	prodh,w,c
 22037  01494A  6EDA               	movwf	fsr2h,c
 22038  01494C  0E04               	movlw	4
 22039  01494E  1ADF               	xorwf	indf2,f,c
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;usb_device.c: 1045: }
 22043                           ;usb_device.c: 1046: return (void*)handle;
 22044                           
 22045                           ; BSR set to: 0
 22046  014950  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22047  014954  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22048  014958  0012               	return	
 22049  01495A                     __end_of_USBTransferOnePacket:
 22050                           	opt stack 0
 22051                           tblptru	equ	0xFF8
 22052                           tblptrh	equ	0xFF7
 22053                           tblptrl	equ	0xFF6
 22054                           tablat	equ	0xFF5
 22055                           prodh	equ	0xFF4
 22056                           prodl	equ	0xFF3
 22057                           intcon	equ	0xFF2
 22058                           intcon2	equ	0xFF1
 22059                           postinc0	equ	0xFEE
 22060                           wreg	equ	0xFE8
 22061                           indf1	equ	0xFE7
 22062                           postinc1	equ	0xFE6
 22063                           postdec1	equ	0xFE5
 22064                           fsr1h	equ	0xFE2
 22065                           fsr1l	equ	0xFE1
 22066                           indf2	equ	0xFDF
 22067                           postinc2	equ	0xFDE
 22068                           postdec2	equ	0xFDD
 22069                           plusw2	equ	0xFDB
 22070                           fsr2h	equ	0xFDA
 22071                           fsr2l	equ	0xFD9
 22072                           status	equ	0xFD8
 22073                           
 22074 ;; *************** function _RTCC_task *****************
 22075 ;; Defined at:
 22076 ;;		line 353 in file "../My_library/My_RTCC.c"
 22077 ;; Parameters:    Size  Location     Type
 22078 ;;		None
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;		None
 22081 ;; Return value:  Size  Location     Type
 22082 ;;		None               void
 22083 ;; Registers used:
 22084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22085 ;; Tracked objects:
 22086 ;;		On entry : 0/0
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22094 ;;Total ram usage:        0 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:   15
 22097 ;; This function calls:
 22098 ;;		_RTCC_from_RTCC
 22099 ;; This function is called by:
 22100 ;;		_main
 22101 ;; This function uses a non-reentrant model
 22102 ;;
 22103                           
 22104                           	psect	text92
 22105  016758                     __ptext92:
 22106                           	opt stack 0
 22107  016758                     _RTCC_task:
 22108                           	opt stack 15
 22109  016758                     l980:
 22110  016758  010F               	movlb	15	; () banked
 22111  01675A  B93F               	btfsc	63,4,b	;volatile
 22112  01675C  D7FD               	goto	l980
 22113                           
 22114                           ; BSR set to: 15
 22115                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 22116                           
 22117                           ; BSR set to: 15
 22118  01675E  0E00               	movlw	0
 22119  016760  B73F               	btfsc	63,3,b	;volatile
 22120  016762  0E01               	movlw	1
 22121  016764  0101               	movlb	1	; () banked
 22122  016766  6F7E               	movwf	(_now+12)& (0+255),b
 22123                           
 22124                           ; BSR set to: 1
 22125                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 22126  016768  0101               	movlb	1	; () banked
 22127  01676A  5122               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22128  01676C  0101               	movlb	1	; () banked
 22129  01676E  197E               	xorwf	(_now+12)& (0+255),w,b
 22130  016770  B4D8               	btfsc	status,2,c
 22131  016772  0012               	return	
 22132                           
 22133                           ; BSR set to: 1
 22134                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 22135  016774  C17E  F122         	movff	_now+12,RTCC_task@prev_halfsec
 22136                           
 22137                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 22138  016778  C17E  F17D         	movff	_now+12,_now+11
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;My_RTCC.c: 360: time_change_flag = 1;
 22142  01677C  0E01               	movlw	1
 22143  01677E  6E25               	movwf	_time_change_flag,c
 22144                           
 22145                           ; BSR set to: 1
 22146                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 22147  016780  0E72               	movlw	low _now
 22148  016782  0100               	movlb	0	; () banked
 22149  016784  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22150  016786  0E01               	movlw	high _now
 22151  016788  0100               	movlb	0	; () banked
 22152  01678A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22153  01678C  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 22154  016790  0012               	return	
 22155  016792                     __end_of_RTCC_task:
 22156                           	opt stack 0
 22157                           tblptru	equ	0xFF8
 22158                           tblptrh	equ	0xFF7
 22159                           tblptrl	equ	0xFF6
 22160                           tablat	equ	0xFF5
 22161                           prodh	equ	0xFF4
 22162                           prodl	equ	0xFF3
 22163                           intcon	equ	0xFF2
 22164                           intcon2	equ	0xFF1
 22165                           postinc0	equ	0xFEE
 22166                           wreg	equ	0xFE8
 22167                           indf1	equ	0xFE7
 22168                           postinc1	equ	0xFE6
 22169                           postdec1	equ	0xFE5
 22170                           fsr1h	equ	0xFE2
 22171                           fsr1l	equ	0xFE1
 22172                           indf2	equ	0xFDF
 22173                           postinc2	equ	0xFDE
 22174                           postdec2	equ	0xFDD
 22175                           plusw2	equ	0xFDB
 22176                           fsr2h	equ	0xFDA
 22177                           fsr2l	equ	0xFD9
 22178                           status	equ	0xFD8
 22179                           
 22180 ;; *************** function _RTCC_from_RTCC *****************
 22181 ;; Defined at:
 22182 ;;		line 200 in file "../My_library/My_RTCC.c"
 22183 ;; Parameters:    Size  Location     Type
 22184 ;;  tm              2   38[BANK0 ] PTR struct .
 22185 ;;		 -> now(14), 
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;		None
 22188 ;; Return value:  Size  Location     Type
 22189 ;;		None               void
 22190 ;; Registers used:
 22191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22192 ;; Tracked objects:
 22193 ;;		On entry : 0/0
 22194 ;;		On exit  : 0/0
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22201 ;;Total ram usage:        2 bytes
 22202 ;; Hardware stack levels used:    1
 22203 ;; Hardware stack levels required when called:   14
 22204 ;; This function calls:
 22205 ;;		_RTCC_to_caltime
 22206 ;;		_caltime_to_epoch
 22207 ;; This function is called by:
 22208 ;;		_RTCC_init
 22209 ;;		_display_time_1602
 22210 ;;		_RTCC_adjust_time_inc
 22211 ;;		_RTCC_adjust_time_dec
 22212 ;;		_RTCC_task
 22213 ;;		_print_time
 22214 ;;		_display_time_0802
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218                           	psect	text93
 22219  016C48                     __ptext93:
 22220                           	opt stack 0
 22221  016C48                     _RTCC_from_RTCC:
 22222                           	opt stack 11
 22223                           
 22224                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 22225                           
 22226                           ;incstack = 0
 22227  016C48  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22228  016C4C  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22229  016C50  ECCA  F0A9         	call	_RTCC_to_caltime	;wreg free
 22230                           
 22231                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 22232  016C54  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22233  016C58  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22234  016C5C  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22235  016C60  0012               	return		;funcret
 22236  016C62                     __end_of_RTCC_from_RTCC:
 22237                           	opt stack 0
 22238                           tblptru	equ	0xFF8
 22239                           tblptrh	equ	0xFF7
 22240                           tblptrl	equ	0xFF6
 22241                           tablat	equ	0xFF5
 22242                           prodh	equ	0xFF4
 22243                           prodl	equ	0xFF3
 22244                           intcon	equ	0xFF2
 22245                           intcon2	equ	0xFF1
 22246                           postinc0	equ	0xFEE
 22247                           wreg	equ	0xFE8
 22248                           indf1	equ	0xFE7
 22249                           postinc1	equ	0xFE6
 22250                           postdec1	equ	0xFE5
 22251                           fsr1h	equ	0xFE2
 22252                           fsr1l	equ	0xFE1
 22253                           indf2	equ	0xFDF
 22254                           postinc2	equ	0xFDE
 22255                           postdec2	equ	0xFDD
 22256                           plusw2	equ	0xFDB
 22257                           fsr2h	equ	0xFDA
 22258                           fsr2l	equ	0xFD9
 22259                           status	equ	0xFD8
 22260                           
 22261 ;; *************** function _caltime_to_epoch *****************
 22262 ;; Defined at:
 22263 ;;		line 180 in file "../My_library/My_RTCC.c"
 22264 ;; Parameters:    Size  Location     Type
 22265 ;;  tm              2   25[BANK0 ] PTR struct .
 22266 ;;		 -> now(14), 
 22267 ;; Auto vars:     Size  Location     Type
 22268 ;;  month           1   37[BANK0 ] unsigned char 
 22269 ;;  month           1   32[BANK0 ] unsigned char 
 22270 ;;  year            1   31[BANK0 ] unsigned char 
 22271 ;;  epoch           4   33[BANK0 ] unsigned long 
 22272 ;; Return value:  Size  Location     Type
 22273 ;;		None               void
 22274 ;; Registers used:
 22275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22276 ;; Tracked objects:
 22277 ;;		On entry : 0/0
 22278 ;;		On exit  : 0/0
 22279 ;;		Unchanged: 0/0
 22280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22282 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22284 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22285 ;;Total ram usage:       13 bytes
 22286 ;; Hardware stack levels used:    1
 22287 ;; Hardware stack levels required when called:   13
 22288 ;; This function calls:
 22289 ;;		___lmul
 22290 ;;		_month_length
 22291 ;; This function is called by:
 22292 ;;		_RTCC_from_RTCC
 22293 ;;		_RTCC_from_caltime
 22294 ;; This function uses a non-reentrant model
 22295 ;;
 22296                           
 22297                           	psect	text94
 22298  011BB6                     __ptext94:
 22299                           	opt stack 0
 22300  011BB6                     _caltime_to_epoch:
 22301                           	opt stack 11
 22302                           
 22303                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 22304                           
 22305                           ;incstack = 0
 22306  011BB6  0E00               	movlw	0
 22307  011BB8  0100               	movlb	0	; () banked
 22308  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22309  011BBC  0E00               	movlw	0
 22310  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22311  011BC0  0E00               	movlw	0
 22312  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22313  011BC4  0E00               	movlw	0
 22314  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22315                           
 22316                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 22317  011BC8  0E00               	movlw	0
 22318  011BCA  0100               	movlb	0	; () banked
 22319  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22320  011BCE  D037               	goto	l10205
 22321  011BD0                     l10191:
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 22325  011BD0  0E01               	movlw	1
 22326  011BD2  0100               	movlb	0	; () banked
 22327  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22328  011BD6                     l10193:
 22329                           
 22330                           ; BSR set to: 0
 22331  011BD6  0E0C               	movlw	12
 22332  011BD8  0100               	movlb	0	; () banked
 22333  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22334  011BDC  D001               	goto	l10197
 22335  011BDE  D02D               	goto	l10203
 22336  011BE0                     l10197:
 22337                           
 22338                           ; BSR set to: 0
 22339                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22340  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22341  011BE4  0100               	movlb	0	; () banked
 22342  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22343  011BE8  EC65  F0A3         	call	_month_length
 22344  011BEC  0100               	movlb	0	; () banked
 22345  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22346  011BF0  0100               	movlb	0	; () banked
 22347  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22348  011BF4  0100               	movlb	0	; () banked
 22349  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22350  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22351  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22352  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22353  011BFE  0E80               	movlw	128
 22354  011C00  0100               	movlb	0	; () banked
 22355  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22356  011C04  0E51               	movlw	81
 22357  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22358  011C08  0E01               	movlw	1
 22359  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22360  011C0C  0E00               	movlw	0
 22361  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22362  011C10  EC66  F0AF         	call	___lmul	;wreg free
 22363  011C14  0100               	movlb	0	; () banked
 22364  011C16  516D               	movf	?___lmul& (0+255),w,b
 22365  011C18  0100               	movlb	0	; () banked
 22366  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22367  011C1C  0100               	movlb	0	; () banked
 22368  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 22369  011C20  0100               	movlb	0	; () banked
 22370  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22371  011C24  0100               	movlb	0	; () banked
 22372  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 22373  011C28  0100               	movlb	0	; () banked
 22374  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22375  011C2C  0100               	movlb	0	; () banked
 22376  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 22377  011C30  0100               	movlb	0	; () banked
 22378  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22379                           
 22380                           ; BSR set to: 0
 22381  011C34  0100               	movlb	0	; () banked
 22382  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22383  011C38  D7CE               	goto	l10193
 22384  011C3A                     l10203:
 22385                           
 22386                           ; BSR set to: 0
 22387  011C3A  0100               	movlb	0	; () banked
 22388  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22389  011C3E                     l10205:
 22390                           
 22391                           ; BSR set to: 0
 22392  011C3E  0100               	movlb	0	; () banked
 22393  011C40  EE20 F00A          	lfsr	2,10
 22394  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22395  011C46  26D9               	addwf	fsr2l,f,c
 22396  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22397  011C4A  22DA               	addwfc	fsr2h,f,c
 22398  011C4C  50DE               	movf	postinc2,w,c
 22399  011C4E  0100               	movlb	0	; () banked
 22400  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22401  011C52  A0D8               	btfss	status,0,c
 22402  011C54  D7BD               	goto	l10191
 22403                           
 22404                           ; BSR set to: 0
 22405                           ;My_RTCC.c: 185: }
 22406                           ;My_RTCC.c: 186: }
 22407                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 22408                           
 22409                           ; BSR set to: 0
 22410  011C56  0E01               	movlw	1
 22411  011C58  0100               	movlb	0	; () banked
 22412  011C5A  6F80               	movwf	caltime_to_epoch@month_2730& (0+255),b
 22413  011C5C  D032               	goto	l10213
 22414  011C5E                     l10209:
 22415                           
 22416                           ; BSR set to: 0
 22417                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22418  011C5E  C080  F066         	movff	caltime_to_epoch@month_2730,month_length@month
 22419  011C62  0100               	movlb	0	; () banked
 22420  011C64  EE20 F00A          	lfsr	2,10
 22421  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22422  011C6A  26D9               	addwf	fsr2l,f,c
 22423  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22424  011C6E  22DA               	addwfc	fsr2h,f,c
 22425  011C70  50DF               	movf	indf2,w,c
 22426  011C72  EC65  F0A3         	call	_month_length
 22427  011C76  0100               	movlb	0	; () banked
 22428  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22429  011C7A  0100               	movlb	0	; () banked
 22430  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22431  011C7E  0100               	movlb	0	; () banked
 22432  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22433  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22434  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22435  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22436  011C88  0E80               	movlw	128
 22437  011C8A  0100               	movlb	0	; () banked
 22438  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22439  011C8E  0E51               	movlw	81
 22440  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22441  011C92  0E01               	movlw	1
 22442  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22443  011C96  0E00               	movlw	0
 22444  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22445  011C9A  EC66  F0AF         	call	___lmul	;wreg free
 22446  011C9E  0100               	movlb	0	; () banked
 22447  011CA0  516D               	movf	?___lmul& (0+255),w,b
 22448  011CA2  0100               	movlb	0	; () banked
 22449  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22450  011CA6  0100               	movlb	0	; () banked
 22451  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 22452  011CAA  0100               	movlb	0	; () banked
 22453  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22454  011CAE  0100               	movlb	0	; () banked
 22455  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22456  011CB2  0100               	movlb	0	; () banked
 22457  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22458  011CB6  0100               	movlb	0	; () banked
 22459  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22460  011CBA  0100               	movlb	0	; () banked
 22461  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22462                           
 22463                           ; BSR set to: 0
 22464  011CBE  0100               	movlb	0	; () banked
 22465  011CC0  2B80               	incf	caltime_to_epoch@month_2730& (0+255),f,b
 22466  011CC2                     l10213:
 22467                           
 22468                           ; BSR set to: 0
 22469  011CC2  0100               	movlb	0	; () banked
 22470  011CC4  EE20 F009          	lfsr	2,9
 22471  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22472  011CCA  26D9               	addwf	fsr2l,f,c
 22473  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22474  011CCE  22DA               	addwfc	fsr2h,f,c
 22475  011CD0  50DE               	movf	postinc2,w,c
 22476  011CD2  0100               	movlb	0	; () banked
 22477  011CD4  5D80               	subwf	caltime_to_epoch@month_2730& (0+255),w,b
 22478  011CD6  A0D8               	btfss	status,0,c
 22479  011CD8  D7C2               	goto	l10209
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;My_RTCC.c: 189: }
 22483                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22484                           
 22485                           ; BSR set to: 0
 22486  011CDA  0EFF               	movlw	255
 22487  011CDC  0100               	movlb	0	; () banked
 22488  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22489  011CE0  0EFF               	movlw	255
 22490  011CE2  0100               	movlb	0	; () banked
 22491  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22492  011CE6  0100               	movlb	0	; () banked
 22493  011CE8  EE20 F008          	lfsr	2,8
 22494  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22495  011CEE  26D9               	addwf	fsr2l,f,c
 22496  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22497  011CF2  22DA               	addwfc	fsr2h,f,c
 22498  011CF4  50DF               	movf	indf2,w,c
 22499  011CF6  0100               	movlb	0	; () banked
 22500  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22501  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22502  011CFC  0100               	movlb	0	; () banked
 22503  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22504  011D00  0100               	movlb	0	; () banked
 22505  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22506  011D04  0100               	movlb	0	; () banked
 22507  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22508  011D08  0100               	movlb	0	; () banked
 22509  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22510  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22511  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22512  011D14  0100               	movlb	0	; () banked
 22513  011D16  0E00               	movlw	0
 22514  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22515  011D1A  0EFF               	movlw	-1
 22516  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22517  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22518  011D20  0E80               	movlw	128
 22519  011D22  0100               	movlb	0	; () banked
 22520  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22521  011D26  0E51               	movlw	81
 22522  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22523  011D2A  0E01               	movlw	1
 22524  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22525  011D2E  0E00               	movlw	0
 22526  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22527  011D32  EC66  F0AF         	call	___lmul	;wreg free
 22528  011D36  0100               	movlb	0	; () banked
 22529  011D38  516D               	movf	?___lmul& (0+255),w,b
 22530  011D3A  0100               	movlb	0	; () banked
 22531  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22532  011D3E  0100               	movlb	0	; () banked
 22533  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 22534  011D42  0100               	movlb	0	; () banked
 22535  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22536  011D46  0100               	movlb	0	; () banked
 22537  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 22538  011D4A  0100               	movlb	0	; () banked
 22539  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22540  011D4E  0100               	movlb	0	; () banked
 22541  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 22542  011D52  0100               	movlb	0	; () banked
 22543  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22544                           
 22545                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 22546  011D56  0100               	movlb	0	; () banked
 22547  011D58  EE20 F006          	lfsr	2,6
 22548  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22549  011D5E  26D9               	addwf	fsr2l,f,c
 22550  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22551  011D62  22DA               	addwfc	fsr2h,f,c
 22552  011D64  50DF               	movf	indf2,w,c
 22553  011D66  0100               	movlb	0	; () banked
 22554  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22555  011D6A  0100               	movlb	0	; () banked
 22556  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22557  011D6E  0100               	movlb	0	; () banked
 22558  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22559  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22560  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22561  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22562  011D78  0E10               	movlw	16
 22563  011D7A  0100               	movlb	0	; () banked
 22564  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22565  011D7E  0E0E               	movlw	14
 22566  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22567  011D82  0E00               	movlw	0
 22568  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22569  011D86  0E00               	movlw	0
 22570  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22571  011D8A  EC66  F0AF         	call	___lmul	;wreg free
 22572  011D8E  0100               	movlb	0	; () banked
 22573  011D90  516D               	movf	?___lmul& (0+255),w,b
 22574  011D92  0100               	movlb	0	; () banked
 22575  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22576  011D96  0100               	movlb	0	; () banked
 22577  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 22578  011D9A  0100               	movlb	0	; () banked
 22579  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22580  011D9E  0100               	movlb	0	; () banked
 22581  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22582  011DA2  0100               	movlb	0	; () banked
 22583  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22584  011DA6  0100               	movlb	0	; () banked
 22585  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22586  011DAA  0100               	movlb	0	; () banked
 22587  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22588                           
 22589                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 22590  011DAE  0100               	movlb	0	; () banked
 22591  011DB0  EE20 F005          	lfsr	2,5
 22592  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22593  011DB6  26D9               	addwf	fsr2l,f,c
 22594  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22595  011DBA  22DA               	addwfc	fsr2h,f,c
 22596  011DBC  50DF               	movf	indf2,w,c
 22597  011DBE  0100               	movlb	0	; () banked
 22598  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22599  011DC2  0100               	movlb	0	; () banked
 22600  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22601  011DC6  0100               	movlb	0	; () banked
 22602  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22603  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22604  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22605  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22606  011DD0  0E3C               	movlw	60
 22607  011DD2  0100               	movlb	0	; () banked
 22608  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22609  011DD6  0E00               	movlw	0
 22610  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22611  011DDA  0E00               	movlw	0
 22612  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22613  011DDE  0E00               	movlw	0
 22614  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22615  011DE2  EC66  F0AF         	call	___lmul	;wreg free
 22616  011DE6  0100               	movlb	0	; () banked
 22617  011DE8  516D               	movf	?___lmul& (0+255),w,b
 22618  011DEA  0100               	movlb	0	; () banked
 22619  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22620  011DEE  0100               	movlb	0	; () banked
 22621  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 22622  011DF2  0100               	movlb	0	; () banked
 22623  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22624  011DF6  0100               	movlb	0	; () banked
 22625  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 22626  011DFA  0100               	movlb	0	; () banked
 22627  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22628  011DFE  0100               	movlb	0	; () banked
 22629  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 22630  011E02  0100               	movlb	0	; () banked
 22631  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22632                           
 22633                           ; BSR set to: 0
 22634                           ;My_RTCC.c: 193: epoch += tm->ss;
 22635  011E06  0100               	movlb	0	; () banked
 22636  011E08  EE20 F004          	lfsr	2,4
 22637  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22638  011E0E  26D9               	addwf	fsr2l,f,c
 22639  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22640  011E12  22DA               	addwfc	fsr2h,f,c
 22641  011E14  50DF               	movf	indf2,w,c
 22642  011E16  0100               	movlb	0	; () banked
 22643  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22644  011E1A  0100               	movlb	0	; () banked
 22645  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22646  011E1E  0100               	movlb	0	; () banked
 22647  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22648  011E22  0E00               	movlw	0
 22649  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22650  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22651  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;My_RTCC.c: 195: tm->epoch = epoch;
 22655  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 22656  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 22657  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 22658  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 22659  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 22660  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 22661                           
 22662                           ; BSR set to: 0
 22663  011E42  0012               	return		;funcret
 22664  011E44                     __end_of_caltime_to_epoch:
 22665                           	opt stack 0
 22666                           tblptru	equ	0xFF8
 22667                           tblptrh	equ	0xFF7
 22668                           tblptrl	equ	0xFF6
 22669                           tablat	equ	0xFF5
 22670                           prodh	equ	0xFF4
 22671                           prodl	equ	0xFF3
 22672                           intcon	equ	0xFF2
 22673                           intcon2	equ	0xFF1
 22674                           postinc0	equ	0xFEE
 22675                           wreg	equ	0xFE8
 22676                           indf1	equ	0xFE7
 22677                           postinc1	equ	0xFE6
 22678                           postdec1	equ	0xFE5
 22679                           fsr1h	equ	0xFE2
 22680                           fsr1l	equ	0xFE1
 22681                           indf2	equ	0xFDF
 22682                           postinc2	equ	0xFDE
 22683                           postdec2	equ	0xFDD
 22684                           plusw2	equ	0xFDB
 22685                           fsr2h	equ	0xFDA
 22686                           fsr2l	equ	0xFD9
 22687                           status	equ	0xFD8
 22688                           
 22689 ;; *************** function _month_length *****************
 22690 ;; Defined at:
 22691 ;;		line 56 in file "../My_library/My_RTCC.c"
 22692 ;; Parameters:    Size  Location     Type
 22693 ;;  year            1    wreg     unsigned char 
 22694 ;;  month           1    6[BANK0 ] unsigned char 
 22695 ;; Auto vars:     Size  Location     Type
 22696 ;;  year            1   11[BANK0 ] unsigned char 
 22697 ;; Return value:  Size  Location     Type
 22698 ;;                  1    wreg      unsigned char 
 22699 ;; Registers used:
 22700 ;;		wreg, status,2, status,0, cstack
 22701 ;; Tracked objects:
 22702 ;;		On entry : 0/0
 22703 ;;		On exit  : 0/0
 22704 ;;		Unchanged: 0/0
 22705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22706 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22709 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22710 ;;Total ram usage:        6 bytes
 22711 ;; Hardware stack levels used:    1
 22712 ;; Hardware stack levels required when called:   12
 22713 ;; This function calls:
 22714 ;;		___awmod
 22715 ;; This function is called by:
 22716 ;;		_epoch_to_caltime
 22717 ;;		_caltime_to_epoch
 22718 ;;		_RTCC_adjust_time_inc
 22719 ;;		_RTCC_adjust_time_dec
 22720 ;;		_terminal_time
 22721 ;; This function uses a non-reentrant model
 22722 ;;
 22723                           
 22724                           	psect	text95
 22725  0146CA                     __ptext95:
 22726                           	opt stack 0
 22727  0146CA                     _month_length:
 22728                           	opt stack 11
 22729                           
 22730                           ; BSR set to: 0
 22731                           ;incstack = 0
 22732                           ;month_length@year stored from wreg
 22733  0146CA  0100               	movlb	0	; () banked
 22734  0146CC  6F6B               	movwf	month_length@year& (0+255),b
 22735                           
 22736                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 22737  0146CE  0E02               	movlw	2
 22738  0146D0  0100               	movlb	0	; () banked
 22739  0146D2  1966               	xorwf	month_length@month& (0+255),w,b
 22740  0146D4  A4D8               	btfss	status,2,c
 22741  0146D6  D03E               	goto	l10079
 22742                           
 22743                           ; BSR set to: 0
 22744  0146D8  C06B  F060         	movff	month_length@year,___awmod@dividend
 22745  0146DC  0100               	movlb	0	; () banked
 22746  0146DE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22747  0146E0  0E00               	movlw	0
 22748  0146E2  0100               	movlb	0	; () banked
 22749  0146E4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22750  0146E6  0E64               	movlw	100
 22751  0146E8  6F62               	movwf	___awmod@divisor& (0+255),b
 22752  0146EA  EC8C  F0AB         	call	___awmod	;wreg free
 22753  0146EE  0100               	movlb	0	; () banked
 22754  0146F0  5160               	movf	?___awmod& (0+255),w,b
 22755  0146F2  0100               	movlb	0	; () banked
 22756  0146F4  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22757  0146F6  A4D8               	btfss	status,2,c
 22758  0146F8  D002               	goto	u11160
 22759  0146FA  0E01               	movlw	1
 22760  0146FC  D001               	goto	u11170
 22761  0146FE                     u11160:
 22762  0146FE  0E00               	movlw	0
 22763  014700                     u11170:
 22764  014700  0800               	sublw	0
 22765  014702  0100               	movlb	0	; () banked
 22766  014704  6F67               	movwf	??_month_length& (0+255),b
 22767  014706  C06B  F060         	movff	month_length@year,___awmod@dividend
 22768  01470A  0100               	movlb	0	; () banked
 22769  01470C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22770  01470E  0E01               	movlw	1
 22771  014710  0100               	movlb	0	; () banked
 22772  014712  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22773  014714  0E90               	movlw	144
 22774  014716  6F62               	movwf	___awmod@divisor& (0+255),b
 22775  014718  EC8C  F0AB         	call	___awmod	;wreg free
 22776  01471C  0100               	movlb	0	; () banked
 22777  01471E  5160               	movf	?___awmod& (0+255),w,b
 22778  014720  0100               	movlb	0	; () banked
 22779  014722  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22780  014724  A4D8               	btfss	status,2,c
 22781  014726  D004               	goto	u11180
 22782  014728  0100               	movlb	0	; () banked
 22783  01472A  6B68               	clrf	(??_month_length+1)& (0+255),b
 22784  01472C  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22785  01472E  D002               	goto	u11198
 22786  014730                     u11180:
 22787  014730  0100               	movlb	0	; () banked
 22788  014732  6B68               	clrf	(??_month_length+1)& (0+255),b
 22789  014734                     u11198:
 22790  014734  C06B  F069         	movff	month_length@year,??_month_length+2
 22791  014738  0E03               	movlw	3
 22792  01473A  0100               	movlb	0	; () banked
 22793  01473C  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22794  01473E  A4D8               	btfss	status,2,c
 22795  014740  D002               	goto	u11200
 22796  014742  0E01               	movlw	1
 22797  014744  D001               	goto	u11210
 22798  014746                     u11200:
 22799  014746  0E00               	movlw	0
 22800  014748                     u11210:
 22801  014748  0100               	movlb	0	; () banked
 22802  01474A  2568               	addwf	(??_month_length+1)& (0+255),w,b
 22803  01474C  0100               	movlb	0	; () banked
 22804  01474E  2567               	addwf	??_month_length& (0+255),w,b
 22805  014750  0F1C               	addlw	28
 22806                           
 22807                           ; BSR set to: 0
 22808                           
 22809                           ; BSR set to: 0
 22810  014752  0012               	return	
 22811  014754                     l10079:
 22812                           
 22813                           ; BSR set to: 0
 22814                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 22815  014754  0100               	movlb	0	; () banked
 22816  014756  5166               	movf	month_length@month& (0+255),w,b
 22817  014758  0B01               	andlw	1
 22818  01475A  0100               	movlb	0	; () banked
 22819  01475C  6F67               	movwf	??_month_length& (0+255),b
 22820  01475E  6B68               	clrf	(??_month_length+1)& (0+255),b
 22821  014760  0100               	movlb	0	; () banked
 22822  014762  1F67               	comf	??_month_length& (0+255),f,b
 22823  014764  1F68               	comf	(??_month_length+1)& (0+255),f,b
 22824  014766  4B67               	infsnz	??_month_length& (0+255),f,b
 22825  014768  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22826  01476A  0100               	movlb	0	; () banked
 22827  01476C  5166               	movf	month_length@month& (0+255),w,b
 22828  01476E  0100               	movlb	0	; () banked
 22829  014770  6F69               	movwf	(??_month_length+2)& (0+255),b
 22830  014772  6B6A               	clrf	(??_month_length+3)& (0+255),b
 22831  014774  0100               	movlb	0	; () banked
 22832  014776  5167               	movf	??_month_length& (0+255),w,b
 22833  014778  0100               	movlb	0	; () banked
 22834  01477A  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 22835  01477C  0100               	movlb	0	; () banked
 22836  01477E  5168               	movf	(??_month_length+1)& (0+255),w,b
 22837  014780  0100               	movlb	0	; () banked
 22838  014782  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 22839  014784  0E0D               	movlw	13
 22840  014786  0100               	movlb	0	; () banked
 22841  014788  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22842  01478A  0E00               	movlw	0
 22843  01478C  176A               	andwf	(??_month_length+3)& (0+255),f,b
 22844  01478E  0E04               	movlw	4
 22845  014790  0100               	movlb	0	; () banked
 22846  014792  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 22847  014794  0100               	movlb	0	; () banked
 22848  014796  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 22849  014798  A4D8               	btfss	status,2,c
 22850  01479A  D002               	goto	u11220
 22851  01479C  0E01               	movlw	1
 22852  01479E  D001               	goto	u11230
 22853  0147A0                     u11220:
 22854  0147A0  0E00               	movlw	0
 22855  0147A2                     u11230:
 22856  0147A2  0800               	sublw	0
 22857  0147A4  0F1F               	addlw	31
 22858                           
 22859                           ; BSR set to: 0
 22860  0147A6  0012               	return	
 22861  0147A8                     __end_of_month_length:
 22862                           	opt stack 0
 22863                           tblptru	equ	0xFF8
 22864                           tblptrh	equ	0xFF7
 22865                           tblptrl	equ	0xFF6
 22866                           tablat	equ	0xFF5
 22867                           prodh	equ	0xFF4
 22868                           prodl	equ	0xFF3
 22869                           intcon	equ	0xFF2
 22870                           intcon2	equ	0xFF1
 22871                           postinc0	equ	0xFEE
 22872                           wreg	equ	0xFE8
 22873                           indf1	equ	0xFE7
 22874                           postinc1	equ	0xFE6
 22875                           postdec1	equ	0xFE5
 22876                           fsr1h	equ	0xFE2
 22877                           fsr1l	equ	0xFE1
 22878                           indf2	equ	0xFDF
 22879                           postinc2	equ	0xFDE
 22880                           postdec2	equ	0xFDD
 22881                           plusw2	equ	0xFDB
 22882                           fsr2h	equ	0xFDA
 22883                           fsr2l	equ	0xFD9
 22884                           status	equ	0xFD8
 22885                           
 22886 ;; *************** function ___awmod *****************
 22887 ;; Defined at:
 22888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 22889 ;; Parameters:    Size  Location     Type
 22890 ;;  dividend        2    0[BANK0 ] int 
 22891 ;;  divisor         2    2[BANK0 ] int 
 22892 ;; Auto vars:     Size  Location     Type
 22893 ;;  sign            1    5[BANK0 ] unsigned char 
 22894 ;;  counter         1    4[BANK0 ] unsigned char 
 22895 ;; Return value:  Size  Location     Type
 22896 ;;                  2    0[BANK0 ] int 
 22897 ;; Registers used:
 22898 ;;		wreg, status,2, status,0
 22899 ;; Tracked objects:
 22900 ;;		On entry : 0/0
 22901 ;;		On exit  : 0/0
 22902 ;;		Unchanged: 0/0
 22903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22907 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22908 ;;Total ram usage:        6 bytes
 22909 ;; Hardware stack levels used:    1
 22910 ;; Hardware stack levels required when called:   11
 22911 ;; This function calls:
 22912 ;;		Nothing
 22913 ;; This function is called by:
 22914 ;;		_month_length
 22915 ;; This function uses a non-reentrant model
 22916 ;;
 22917                           
 22918                           	psect	text96
 22919  015718                     __ptext96:
 22920                           	opt stack 0
 22921  015718                     ___awmod:
 22922                           	opt stack 11
 22923                           
 22924                           ; BSR set to: 0
 22925                           ;incstack = 0
 22926  015718  0E00               	movlw	0
 22927  01571A  0100               	movlb	0	; () banked
 22928  01571C  6F65               	movwf	___awmod@sign& (0+255),b
 22929                           
 22930                           ; BSR set to: 0
 22931  01571E  0100               	movlb	0	; () banked
 22932  015720  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 22933  015722  D008               	goto	l10027
 22934                           
 22935                           ; BSR set to: 0
 22936  015724  0100               	movlb	0	; () banked
 22937  015726  6D60               	negf	___awmod@dividend& (0+255),b
 22938  015728  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 22939  01572A  B0D8               	btfsc	status,0,c
 22940  01572C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 22941                           
 22942                           ; BSR set to: 0
 22943  01572E  0E01               	movlw	1
 22944  015730  0100               	movlb	0	; () banked
 22945  015732  6F65               	movwf	___awmod@sign& (0+255),b
 22946  015734                     l10027:
 22947                           
 22948                           ; BSR set to: 0
 22949  015734  0100               	movlb	0	; () banked
 22950  015736  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22951  015738  D005               	goto	l10031
 22952                           
 22953                           ; BSR set to: 0
 22954  01573A  0100               	movlb	0	; () banked
 22955  01573C  6D62               	negf	___awmod@divisor& (0+255),b
 22956  01573E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 22957  015740  B0D8               	btfsc	status,0,c
 22958  015742  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 22959  015744                     l10031:
 22960                           
 22961                           ; BSR set to: 0
 22962  015744  0100               	movlb	0	; () banked
 22963  015746  5162               	movf	___awmod@divisor& (0+255),w,b
 22964  015748  0100               	movlb	0	; () banked
 22965  01574A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 22966  01574C  B4D8               	btfsc	status,2,c
 22967  01574E  D026               	goto	l10047
 22968                           
 22969                           ; BSR set to: 0
 22970  015750  0E01               	movlw	1
 22971  015752  0100               	movlb	0	; () banked
 22972  015754  6F64               	movwf	___awmod@counter& (0+255),b
 22973  015756  D006               	goto	l10037
 22974  015758                     l10035:
 22975                           
 22976                           ; BSR set to: 0
 22977  015758  0100               	movlb	0	; () banked
 22978  01575A  90D8               	bcf	status,0,c
 22979  01575C  3762               	rlcf	___awmod@divisor& (0+255),f,b
 22980  01575E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 22981  015760  0100               	movlb	0	; () banked
 22982  015762  2B64               	incf	___awmod@counter& (0+255),f,b
 22983  015764                     l10037:
 22984                           
 22985                           ; BSR set to: 0
 22986  015764  0100               	movlb	0	; () banked
 22987  015766  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22988  015768  D7F7               	goto	l10035
 22989  01576A                     l10039:
 22990                           
 22991                           ; BSR set to: 0
 22992  01576A  0100               	movlb	0	; () banked
 22993  01576C  5162               	movf	___awmod@divisor& (0+255),w,b
 22994  01576E  0100               	movlb	0	; () banked
 22995  015770  5D60               	subwf	___awmod@dividend& (0+255),w,b
 22996  015772  0100               	movlb	0	; () banked
 22997  015774  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22998  015776  0100               	movlb	0	; () banked
 22999  015778  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23000  01577A  A0D8               	btfss	status,0,c
 23001  01577C  D008               	goto	l10043
 23002                           
 23003                           ; BSR set to: 0
 23004  01577E  0100               	movlb	0	; () banked
 23005  015780  5162               	movf	___awmod@divisor& (0+255),w,b
 23006  015782  0100               	movlb	0	; () banked
 23007  015784  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23008  015786  0100               	movlb	0	; () banked
 23009  015788  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23010  01578A  0100               	movlb	0	; () banked
 23011  01578C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23012  01578E                     l10043:
 23013                           
 23014                           ; BSR set to: 0
 23015  01578E  0100               	movlb	0	; () banked
 23016  015790  90D8               	bcf	status,0,c
 23017  015792  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23018  015794  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23019                           
 23020                           ; BSR set to: 0
 23021  015796  0100               	movlb	0	; () banked
 23022  015798  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23023  01579A  D7E7               	goto	l10039
 23024  01579C                     l10047:
 23025                           
 23026                           ; BSR set to: 0
 23027  01579C  0100               	movlb	0	; () banked
 23028  01579E  5165               	movf	___awmod@sign& (0+255),w,b
 23029  0157A0  0100               	movlb	0	; () banked
 23030  0157A2  B4D8               	btfsc	status,2,c
 23031  0157A4  D005               	goto	l10051
 23032                           
 23033                           ; BSR set to: 0
 23034  0157A6  0100               	movlb	0	; () banked
 23035  0157A8  6D60               	negf	___awmod@dividend& (0+255),b
 23036  0157AA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23037  0157AC  B0D8               	btfsc	status,0,c
 23038  0157AE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23039  0157B0                     l10051:
 23040                           
 23041                           ; BSR set to: 0
 23042  0157B0  C060  F060         	movff	___awmod@dividend,?___awmod
 23043  0157B4  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23044  0157B8  0012               	return	
 23045  0157BA                     __end_of___awmod:
 23046                           	opt stack 0
 23047                           tblptru	equ	0xFF8
 23048                           tblptrh	equ	0xFF7
 23049                           tblptrl	equ	0xFF6
 23050                           tablat	equ	0xFF5
 23051                           prodh	equ	0xFF4
 23052                           prodl	equ	0xFF3
 23053                           intcon	equ	0xFF2
 23054                           intcon2	equ	0xFF1
 23055                           postinc0	equ	0xFEE
 23056                           wreg	equ	0xFE8
 23057                           indf1	equ	0xFE7
 23058                           postinc1	equ	0xFE6
 23059                           postdec1	equ	0xFE5
 23060                           fsr1h	equ	0xFE2
 23061                           fsr1l	equ	0xFE1
 23062                           indf2	equ	0xFDF
 23063                           postinc2	equ	0xFDE
 23064                           postdec2	equ	0xFDD
 23065                           plusw2	equ	0xFDB
 23066                           fsr2h	equ	0xFDA
 23067                           fsr2l	equ	0xFD9
 23068                           status	equ	0xFD8
 23069                           
 23070 ;; *************** function ___lmul *****************
 23071 ;; Defined at:
 23072 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23075 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23076 ;; Auto vars:     Size  Location     Type
 23077 ;;  product         4   21[BANK0 ] unsigned long 
 23078 ;; Return value:  Size  Location     Type
 23079 ;;                  4   13[BANK0 ] unsigned long 
 23080 ;; Registers used:
 23081 ;;		wreg, status,2, status,0
 23082 ;; Tracked objects:
 23083 ;;		On entry : 0/0
 23084 ;;		On exit  : 0/0
 23085 ;;		Unchanged: 0/0
 23086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23087 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23088 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23090 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23091 ;;Total ram usage:       12 bytes
 23092 ;; Hardware stack levels used:    1
 23093 ;; Hardware stack levels required when called:   11
 23094 ;; This function calls:
 23095 ;;		Nothing
 23096 ;; This function is called by:
 23097 ;;		_get_quot_rem
 23098 ;;		_caltime_to_epoch
 23099 ;;		_RTCC_adjust_time_inc
 23100 ;;		_RTCC_adjust_time_dec
 23101 ;; This function uses a non-reentrant model
 23102 ;;
 23103                           
 23104                           	psect	text97
 23105  015ECC                     __ptext97:
 23106                           	opt stack 0
 23107  015ECC                     ___lmul:
 23108                           	opt stack 12
 23109                           
 23110                           ; BSR set to: 0
 23111                           ;incstack = 0
 23112  015ECC  0E00               	movlw	0
 23113  015ECE  0100               	movlb	0	; () banked
 23114  015ED0  6F75               	movwf	___lmul@product& (0+255),b
 23115  015ED2  0E00               	movlw	0
 23116  015ED4  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23117  015ED6  0E00               	movlw	0
 23118  015ED8  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23119  015EDA  0E00               	movlw	0
 23120  015EDC  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23121  015EDE                     l10085:
 23122                           
 23123                           ; BSR set to: 0
 23124  015EDE  0100               	movlb	0	; () banked
 23125  015EE0  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23126  015EE2  D010               	goto	l10089
 23127                           
 23128                           ; BSR set to: 0
 23129  015EE4  0100               	movlb	0	; () banked
 23130  015EE6  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23131  015EE8  0100               	movlb	0	; () banked
 23132  015EEA  2775               	addwf	___lmul@product& (0+255),f,b
 23133  015EEC  0100               	movlb	0	; () banked
 23134  015EEE  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23135  015EF0  0100               	movlb	0	; () banked
 23136  015EF2  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23137  015EF4  0100               	movlb	0	; () banked
 23138  015EF6  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23139  015EF8  0100               	movlb	0	; () banked
 23140  015EFA  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23141  015EFC  0100               	movlb	0	; () banked
 23142  015EFE  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23143  015F00  0100               	movlb	0	; () banked
 23144  015F02  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23145  015F04                     l10089:
 23146                           
 23147                           ; BSR set to: 0
 23148  015F04  0100               	movlb	0	; () banked
 23149  015F06  90D8               	bcf	status,0,c
 23150  015F08  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23151  015F0A  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23152  015F0C  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23153  015F0E  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23154                           
 23155                           ; BSR set to: 0
 23156  015F10  0100               	movlb	0	; () banked
 23157  015F12  90D8               	bcf	status,0,c
 23158  015F14  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23159  015F16  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23160  015F18  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23161  015F1A  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23162  015F1C  0100               	movlb	0	; () banked
 23163  015F1E  516D               	movf	___lmul@multiplier& (0+255),w,b
 23164  015F20  0100               	movlb	0	; () banked
 23165  015F22  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23166  015F24  0100               	movlb	0	; () banked
 23167  015F26  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23168  015F28  0100               	movlb	0	; () banked
 23169  015F2A  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23170  015F2C  A4D8               	btfss	status,2,c
 23171  015F2E  D7D7               	goto	l10085
 23172                           
 23173                           ; BSR set to: 0
 23174  015F30  C075  F06D         	movff	___lmul@product,?___lmul
 23175  015F34  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23176  015F38  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23177  015F3C  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23178                           
 23179                           ; BSR set to: 0
 23180  015F40  0012               	return		;funcret
 23181  015F42                     __end_of___lmul:
 23182                           	opt stack 0
 23183                           tblptru	equ	0xFF8
 23184                           tblptrh	equ	0xFF7
 23185                           tblptrl	equ	0xFF6
 23186                           tablat	equ	0xFF5
 23187                           prodh	equ	0xFF4
 23188                           prodl	equ	0xFF3
 23189                           intcon	equ	0xFF2
 23190                           intcon2	equ	0xFF1
 23191                           postinc0	equ	0xFEE
 23192                           wreg	equ	0xFE8
 23193                           indf1	equ	0xFE7
 23194                           postinc1	equ	0xFE6
 23195                           postdec1	equ	0xFE5
 23196                           fsr1h	equ	0xFE2
 23197                           fsr1l	equ	0xFE1
 23198                           indf2	equ	0xFDF
 23199                           postinc2	equ	0xFDE
 23200                           postdec2	equ	0xFDD
 23201                           plusw2	equ	0xFDB
 23202                           fsr2h	equ	0xFDA
 23203                           fsr2l	equ	0xFD9
 23204                           status	equ	0xFD8
 23205                           
 23206 ;; *************** function _RTCC_to_caltime *****************
 23207 ;; Defined at:
 23208 ;;		line 90 in file "../My_library/My_RTCC.c"
 23209 ;; Parameters:    Size  Location     Type
 23210 ;;  tm              2    2[BANK0 ] PTR struct .
 23211 ;;		 -> now(14), 
 23212 ;; Auto vars:     Size  Location     Type
 23213 ;;  dumy            1    4[BANK0 ] unsigned char 
 23214 ;; Return value:  Size  Location     Type
 23215 ;;		None               void
 23216 ;; Registers used:
 23217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23218 ;; Tracked objects:
 23219 ;;		On entry : 0/0
 23220 ;;		On exit  : 0/0
 23221 ;;		Unchanged: 0/0
 23222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23226 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23227 ;;Total ram usage:        3 bytes
 23228 ;; Hardware stack levels used:    1
 23229 ;; Hardware stack levels required when called:   12
 23230 ;; This function calls:
 23231 ;;		_x_to_d
 23232 ;; This function is called by:
 23233 ;;		_RTCC_from_RTCC
 23234 ;; This function uses a non-reentrant model
 23235 ;;
 23236                           
 23237                           	psect	text98
 23238  015394                     __ptext98:
 23239                           	opt stack 0
 23240  015394                     _RTCC_to_caltime:
 23241                           	opt stack 12
 23242  015394                     l858:
 23243  015394  010F               	movlb	15	; () banked
 23244  015396  B93F               	btfsc	63,4,b	;volatile
 23245  015398  D7FD               	goto	l858
 23246                           
 23247                           ; BSR set to: 15
 23248                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 23249  01539A  010F               	movlb	15	; () banked
 23250  01539C  813F               	bsf	63,0,b	;volatile
 23251                           
 23252                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 23253  01539E  010F               	movlb	15	; () banked
 23254  0153A0  833F               	bsf	63,1,b	;volatile
 23255                           
 23256                           ; BSR set to: 15
 23257                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 23258  0153A2  0100               	movlb	0	; () banked
 23259  0153A4  EE20 F00A          	lfsr	2,10
 23260  0153A8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23261  0153AA  26D9               	addwf	fsr2l,f,c
 23262  0153AC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23263  0153AE  22DA               	addwfc	fsr2h,f,c
 23264  0153B0  010F               	movlb	15	; () banked
 23265  0153B2  513A               	movf	58,w,b	;volatile
 23266  0153B4  ECCF  F0B5         	call	_x_to_d
 23267  0153B8  6EDF               	movwf	indf2,c
 23268                           
 23269                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 23270  0153BA  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23271                           
 23272                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 23273  0153BE  0100               	movlb	0	; () banked
 23274  0153C0  EE20 F008          	lfsr	2,8
 23275  0153C4  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23276  0153C6  26D9               	addwf	fsr2l,f,c
 23277  0153C8  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23278  0153CA  22DA               	addwfc	fsr2h,f,c
 23279  0153CC  010F               	movlb	15	; () banked
 23280  0153CE  513A               	movf	58,w,b	;volatile
 23281  0153D0  ECCF  F0B5         	call	_x_to_d
 23282  0153D4  6EDF               	movwf	indf2,c
 23283                           
 23284                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 23285  0153D6  0100               	movlb	0	; () banked
 23286  0153D8  EE20 F009          	lfsr	2,9
 23287  0153DC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23288  0153DE  26D9               	addwf	fsr2l,f,c
 23289  0153E0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23290  0153E2  22DA               	addwfc	fsr2h,f,c
 23291  0153E4  010F               	movlb	15	; () banked
 23292  0153E6  513B               	movf	59,w,b	;volatile
 23293  0153E8  ECCF  F0B5         	call	_x_to_d
 23294  0153EC  6EDF               	movwf	indf2,c
 23295                           
 23296                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 23297  0153EE  0100               	movlb	0	; () banked
 23298  0153F0  EE20 F006          	lfsr	2,6
 23299  0153F4  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23300  0153F6  26D9               	addwf	fsr2l,f,c
 23301  0153F8  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23302  0153FA  22DA               	addwfc	fsr2h,f,c
 23303  0153FC  010F               	movlb	15	; () banked
 23304  0153FE  513A               	movf	58,w,b	;volatile
 23305  015400  ECCF  F0B5         	call	_x_to_d
 23306  015404  6EDF               	movwf	indf2,c
 23307                           
 23308                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 23309  015406  0100               	movlb	0	; () banked
 23310  015408  EE20 F007          	lfsr	2,7
 23311  01540C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23312  01540E  26D9               	addwf	fsr2l,f,c
 23313  015410  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23314  015412  22DA               	addwfc	fsr2h,f,c
 23315  015414  010F               	movlb	15	; () banked
 23316  015416  513B               	movf	59,w,b	;volatile
 23317  015418  ECCF  F0B5         	call	_x_to_d
 23318  01541C  6EDF               	movwf	indf2,c
 23319                           
 23320                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 23321  01541E  0100               	movlb	0	; () banked
 23322  015420  EE20 F004          	lfsr	2,4
 23323  015424  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23324  015426  26D9               	addwf	fsr2l,f,c
 23325  015428  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23326  01542A  22DA               	addwfc	fsr2h,f,c
 23327  01542C  010F               	movlb	15	; () banked
 23328  01542E  513A               	movf	58,w,b	;volatile
 23329  015430  ECCF  F0B5         	call	_x_to_d
 23330  015434  6EDF               	movwf	indf2,c
 23331                           
 23332                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 23333  015436  0100               	movlb	0	; () banked
 23334  015438  EE20 F005          	lfsr	2,5
 23335  01543C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23336  01543E  26D9               	addwf	fsr2l,f,c
 23337  015440  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23338  015442  22DA               	addwfc	fsr2h,f,c
 23339  015444  010F               	movlb	15	; () banked
 23340  015446  513B               	movf	59,w,b	;volatile
 23341  015448  ECCF  F0B5         	call	_x_to_d
 23342  01544C  6EDF               	movwf	indf2,c
 23343  01544E  0012               	return		;funcret
 23344  015450                     __end_of_RTCC_to_caltime:
 23345                           	opt stack 0
 23346                           tblptru	equ	0xFF8
 23347                           tblptrh	equ	0xFF7
 23348                           tblptrl	equ	0xFF6
 23349                           tablat	equ	0xFF5
 23350                           prodh	equ	0xFF4
 23351                           prodl	equ	0xFF3
 23352                           intcon	equ	0xFF2
 23353                           intcon2	equ	0xFF1
 23354                           postinc0	equ	0xFEE
 23355                           wreg	equ	0xFE8
 23356                           indf1	equ	0xFE7
 23357                           postinc1	equ	0xFE6
 23358                           postdec1	equ	0xFE5
 23359                           fsr1h	equ	0xFE2
 23360                           fsr1l	equ	0xFE1
 23361                           indf2	equ	0xFDF
 23362                           postinc2	equ	0xFDE
 23363                           postdec2	equ	0xFDD
 23364                           plusw2	equ	0xFDB
 23365                           fsr2h	equ	0xFDA
 23366                           fsr2l	equ	0xFD9
 23367                           status	equ	0xFD8
 23368                           
 23369 ;; *************** function _x_to_d *****************
 23370 ;; Defined at:
 23371 ;;		line 52 in file "../My_library/My_RTCC.c"
 23372 ;; Parameters:    Size  Location     Type
 23373 ;;  hex             1    wreg     unsigned char 
 23374 ;; Auto vars:     Size  Location     Type
 23375 ;;  hex             1    1[BANK0 ] unsigned char 
 23376 ;; Return value:  Size  Location     Type
 23377 ;;                  1    wreg      unsigned char 
 23378 ;; Registers used:
 23379 ;;		wreg, status,2, status,0, prodl, prodh
 23380 ;; Tracked objects:
 23381 ;;		On entry : 0/0
 23382 ;;		On exit  : 0/0
 23383 ;;		Unchanged: 0/0
 23384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23389 ;;Total ram usage:        2 bytes
 23390 ;; Hardware stack levels used:    1
 23391 ;; Hardware stack levels required when called:   11
 23392 ;; This function calls:
 23393 ;;		Nothing
 23394 ;; This function is called by:
 23395 ;;		_RTCC_to_caltime
 23396 ;; This function uses a non-reentrant model
 23397 ;;
 23398                           
 23399                           	psect	text99
 23400  016B9E                     __ptext99:
 23401                           	opt stack 0
 23402  016B9E                     _x_to_d:
 23403                           	opt stack 12
 23404                           
 23405                           ;incstack = 0
 23406                           ;x_to_d@hex stored from wreg
 23407  016B9E  0100               	movlb	0	; () banked
 23408  016BA0  6F61               	movwf	x_to_d@hex& (0+255),b
 23409                           
 23410                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23411  016BA2  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23412  016BA6  0E0F               	movlw	15
 23413  016BA8  0100               	movlb	0	; () banked
 23414  016BAA  1760               	andwf	??_x_to_d& (0+255),f,b
 23415  016BAC  0100               	movlb	0	; () banked
 23416  016BAE  3961               	swapf	x_to_d@hex& (0+255),w,b
 23417  016BB0  0B0F               	andlw	15
 23418  016BB2  0B0F               	andlw	15
 23419  016BB4  0D0A               	mullw	10
 23420  016BB6  50F3               	movf	prodl,w,c
 23421  016BB8  0100               	movlb	0	; () banked
 23422  016BBA  2560               	addwf	??_x_to_d& (0+255),w,b
 23423  016BBC  0012               	return	
 23424  016BBE                     __end_of_x_to_d:
 23425                           	opt stack 0
 23426                           tblptru	equ	0xFF8
 23427                           tblptrh	equ	0xFF7
 23428                           tblptrl	equ	0xFF6
 23429                           tablat	equ	0xFF5
 23430                           prodh	equ	0xFF4
 23431                           prodl	equ	0xFF3
 23432                           intcon	equ	0xFF2
 23433                           intcon2	equ	0xFF1
 23434                           postinc0	equ	0xFEE
 23435                           wreg	equ	0xFE8
 23436                           indf1	equ	0xFE7
 23437                           postinc1	equ	0xFE6
 23438                           postdec1	equ	0xFE5
 23439                           fsr1h	equ	0xFE2
 23440                           fsr1l	equ	0xFE1
 23441                           indf2	equ	0xFDF
 23442                           postinc2	equ	0xFDE
 23443                           postdec2	equ	0xFDD
 23444                           plusw2	equ	0xFDB
 23445                           fsr2h	equ	0xFDA
 23446                           fsr2l	equ	0xFD9
 23447                           status	equ	0xFD8
 23448                           
 23449 ;; *************** function _ISR *****************
 23450 ;; Defined at:
 23451 ;;		line 49 in file "main.c"
 23452 ;; Parameters:    Size  Location     Type
 23453 ;;		None
 23454 ;; Auto vars:     Size  Location     Type
 23455 ;;		None
 23456 ;; Return value:  Size  Location     Type
 23457 ;;		None               void
 23458 ;; Registers used:
 23459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23460 ;; Tracked objects:
 23461 ;;		On entry : 0/0
 23462 ;;		On exit  : 0/0
 23463 ;;		Unchanged: 0/0
 23464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23467 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23468 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23469 ;;Total ram usage:       14 bytes
 23470 ;; Hardware stack levels used:    1
 23471 ;; Hardware stack levels required when called:   10
 23472 ;; This function calls:
 23473 ;;		_LED_indicator
 23474 ;;		_USB_ISR
 23475 ;;		_millis_timer
 23476 ;; This function is called by:
 23477 ;;		Interrupt level 2
 23478 ;; This function uses a non-reentrant model
 23479 ;;
 23480                           
 23481                           	psect	intcode
 23482  001008                     __pintcode:
 23483                           	opt stack 0
 23484  001008                     _ISR:
 23485                           	opt stack 11
 23486                           
 23487                           ; BSR set to: 0
 23488                           ;incstack = 0
 23489  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23490  00100A  CFFA F04B          	movff	pclath,??_ISR
 23491  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 23492  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23493  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23494  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23495  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23496  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23497  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 23498  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 23499  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 23500  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23501  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23502  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 23503  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 23504                           
 23505                           ;main.c: 50: USB_ISR();
 23506  001042  EC53  F0B6         	call	_USB_ISR	;wreg free
 23507                           
 23508                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23509  001046  B4F2               	btfsc	intcon,2,c	;volatile
 23510  001048  AAF2               	btfss	intcon,5,c	;volatile
 23511  00104A  D003               	goto	i2l9669
 23512                           
 23513                           ;main.c: 52: INTCONbits.T0IF = 0;
 23514  00104C  94F2               	bcf	intcon,2,c	;volatile
 23515                           
 23516                           ;main.c: 53: millis_timer();
 23517  00104E  ECAC  F0B5         	call	_millis_timer	;wreg free
 23518  001052                     i2l9669:
 23519                           
 23520                           ;main.c: 54: }
 23521                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 23522  001052  B09E               	btfsc	3998,0,c	;volatile
 23523  001054  A09D               	btfss	3997,0,c	;volatile
 23524  001056  D017               	goto	i2l9685
 23525                           
 23526                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 23527  001058  909E               	bcf	3998,0,c	;volatile
 23528                           
 23529                           ;main.c: 57: TMR1H = 0xC0;
 23530  00105A  0EC0               	movlw	192
 23531  00105C  6ECF               	movwf	4047,c	;volatile
 23532                           
 23533                           ;main.c: 58: cut_time_flag = 1;
 23534  00105E  0E01               	movlw	1
 23535  001060  6E1B               	movwf	_cut_time_flag,c
 23536                           
 23537                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 23538                           ;main.c: 60: if (cnt_t1) {
 23539  001062  500E               	movf	ISR@cnt_t1,w,c
 23540  001064  B4D8               	btfsc	status,2,c
 23541  001066  D003               	goto	i2l9679
 23542                           
 23543                           ;main.c: 61: cnt_t1 = 0;
 23544  001068  0E00               	movlw	0
 23545  00106A  6E0E               	movwf	ISR@cnt_t1,c
 23546                           
 23547                           ;main.c: 62: } else {
 23548  00106C  D00C               	goto	i2l9685
 23549  00106E                     i2l9679:
 23550                           
 23551                           ;main.c: 63: cnt_t1 = 1;
 23552  00106E  0E01               	movlw	1
 23553  001070  6E0E               	movwf	ISR@cnt_t1,c
 23554                           
 23555                           ;main.c: 64: terminal_data_out_flag = 1;
 23556  001072  0E01               	movlw	1
 23557  001074  6E24               	movwf	_terminal_data_out_flag,c
 23558                           
 23559                           ;main.c: 65: integrate_flag = 1;
 23560  001076  0E01               	movlw	1
 23561  001078  6E1F               	movwf	_integrate_flag,c
 23562                           
 23563                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 23564  00107A  0E02               	movlw	2
 23565  00107C  1820               	xorwf	_print_item,w,c
 23566  00107E  A4D8               	btfss	status,2,c
 23567  001080  D002               	goto	i2l9685
 23568  001082  0E01               	movlw	1
 23569  001084  6E1D               	movwf	_display_flag,c
 23570  001086                     i2l9685:
 23571                           
 23572                           ;main.c: 67: }
 23573                           ;main.c: 68: }
 23574                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 23575  001086  B2A1               	btfsc	4001,1,c	;volatile
 23576  001088  A2A0               	btfss	4000,1,c	;volatile
 23577  00108A  D00C               	goto	i2l411
 23578                           
 23579                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 23580  00108C  92A1               	bcf	4001,1,c	;volatile
 23581                           
 23582                           ;main.c: 71: ctmu_sampling_flag = 1;
 23583  00108E  0E01               	movlw	1
 23584  001090  6E1A               	movwf	_ctmu_sampling_flag,c
 23585                           
 23586                           ;main.c: 72: static uint8_t cnt;
 23587                           ;main.c: 73: if (cnt) {
 23588  001092  500D               	movf	ISR@cnt,w,c
 23589  001094  B4D8               	btfsc	status,2,c
 23590  001096  D002               	goto	i2l9695
 23591                           
 23592                           ;main.c: 74: cnt--;
 23593  001098  060D               	decf	ISR@cnt,f,c
 23594                           
 23595                           ;main.c: 75: } else {
 23596  00109A  D004               	goto	i2l411
 23597  00109C                     i2l9695:
 23598                           
 23599                           ;main.c: 76: cnt = 8;
 23600  00109C  0E08               	movlw	8
 23601  00109E  6E0D               	movwf	ISR@cnt,c
 23602                           
 23603                           ;main.c: 77: LED_indicator();
 23604  0010A0  EC1E  F09D         	call	_LED_indicator	;wreg free
 23605  0010A4                     i2l411:
 23606  0010A4  C058  FFF5         	movff	??_ISR+13,tablat
 23607  0010A8  C057  FFF8         	movff	??_ISR+12,tblptru
 23608  0010AC  C056  FFF7         	movff	??_ISR+11,tblptrh
 23609  0010B0  C055  FFF6         	movff	??_ISR+10,tblptrl
 23610  0010B4  C054  FFF4         	movff	??_ISR+9,prodh
 23611  0010B8  C053  FFF3         	movff	??_ISR+8,prodl
 23612  0010BC  C052  FFDA         	movff	??_ISR+7,fsr2h
 23613  0010C0  C051  FFD9         	movff	??_ISR+6,fsr2l
 23614  0010C4  C050  FFE2         	movff	??_ISR+5,fsr1h
 23615  0010C8  C04F  FFE1         	movff	??_ISR+4,fsr1l
 23616  0010CC  C04E  FFEA         	movff	??_ISR+3,fsr0h
 23617  0010D0  C04D  FFE9         	movff	??_ISR+2,fsr0l
 23618  0010D4  C04C  FFFB         	movff	??_ISR+1,pclatu
 23619  0010D8  C04B  FFFA         	movff	??_ISR,pclath
 23620  0010DC  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23621  0010DE  0011               	retfie		f
 23622  0010E0                     __end_of_ISR:
 23623                           	opt stack 0
 23624                           pclatu	equ	0xFFB
 23625                           pclath	equ	0xFFA
 23626                           tblptru	equ	0xFF8
 23627                           tblptrh	equ	0xFF7
 23628                           tblptrl	equ	0xFF6
 23629                           tablat	equ	0xFF5
 23630                           prodh	equ	0xFF4
 23631                           prodl	equ	0xFF3
 23632                           intcon	equ	0xFF2
 23633                           intcon2	equ	0xFF1
 23634                           postinc0	equ	0xFEE
 23635                           fsr0h	equ	0xFEA
 23636                           fsr0l	equ	0xFE9
 23637                           wreg	equ	0xFE8
 23638                           indf1	equ	0xFE7
 23639                           postinc1	equ	0xFE6
 23640                           postdec1	equ	0xFE5
 23641                           fsr1h	equ	0xFE2
 23642                           fsr1l	equ	0xFE1
 23643                           indf2	equ	0xFDF
 23644                           postinc2	equ	0xFDE
 23645                           postdec2	equ	0xFDD
 23646                           plusw2	equ	0xFDB
 23647                           fsr2h	equ	0xFDA
 23648                           fsr2l	equ	0xFD9
 23649                           status	equ	0xFD8
 23650                           
 23651 ;; *************** function _millis_timer *****************
 23652 ;; Defined at:
 23653 ;;		line 218 in file "../My_library/My_PIC.c"
 23654 ;; Parameters:    Size  Location     Type
 23655 ;;		None
 23656 ;; Auto vars:     Size  Location     Type
 23657 ;;		None
 23658 ;; Return value:  Size  Location     Type
 23659 ;;		None               void
 23660 ;; Registers used:
 23661 ;;		wreg, status,2, status,0
 23662 ;; Tracked objects:
 23663 ;;		On entry : 0/0
 23664 ;;		On exit  : 0/0
 23665 ;;		Unchanged: 0/0
 23666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23671 ;;Total ram usage:        0 bytes
 23672 ;; Hardware stack levels used:    1
 23673 ;; This function calls:
 23674 ;;		Nothing
 23675 ;; This function is called by:
 23676 ;;		_ISR
 23677 ;; This function uses a non-reentrant model
 23678 ;;
 23679                           
 23680                           	psect	text101
 23681  016B58                     __ptext101:
 23682                           	opt stack 0
 23683  016B58                     _millis_timer:
 23684                           	opt stack 20
 23685                           
 23686                           ;My_PIC.c: 219: static uint16_t cnt;
 23687                           ;My_PIC.c: 220: if (cnt) {
 23688                           
 23689                           ;incstack = 0
 23690  016B58  0101               	movlb	1	; () banked
 23691  016B5A  5120               	movf	millis_timer@cnt& (0+255),w,b
 23692  016B5C  0101               	movlb	1	; () banked
 23693  016B5E  1121               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 23694  016B60  A4D8               	btfss	status,2,c
 23695  016B62  0012               	return	
 23696                           
 23697                           ; BSR set to: 1
 23698                           ;My_PIC.c: 223: cnt = 47;
 23699                           
 23700                           ; BSR set to: 1
 23701                           
 23702                           ; BSR set to: 1
 23703                           ;My_PIC.c: 222: } else {
 23704  016B64  0E00               	movlw	0
 23705  016B66  0101               	movlb	1	; () banked
 23706  016B68  6F21               	movwf	(millis_timer@cnt+1)& (0+255),b
 23707  016B6A  0E2F               	movlw	47
 23708  016B6C  6F20               	movwf	millis_timer@cnt& (0+255),b
 23709                           
 23710                           ; BSR set to: 1
 23711                           ;My_PIC.c: 224: ms++;
 23712  016B6E  0E01               	movlw	1
 23713  016B70  0101               	movlb	1	; () banked
 23714  016B72  2706               	addwf	_ms& (0+255),f,b
 23715  016B74  0E00               	movlw	0
 23716  016B76  2307               	addwfc	(_ms+1)& (0+255),f,b
 23717  016B78  2308               	addwfc	(_ms+2)& (0+255),f,b
 23718  016B7A  2309               	addwfc	(_ms+3)& (0+255),f,b
 23719  016B7C  0012               	return	
 23720  016B7E                     __end_of_millis_timer:
 23721                           	opt stack 0
 23722                           pclatu	equ	0xFFB
 23723                           pclath	equ	0xFFA
 23724                           tblptru	equ	0xFF8
 23725                           tblptrh	equ	0xFF7
 23726                           tblptrl	equ	0xFF6
 23727                           tablat	equ	0xFF5
 23728                           prodh	equ	0xFF4
 23729                           prodl	equ	0xFF3
 23730                           intcon	equ	0xFF2
 23731                           intcon2	equ	0xFF1
 23732                           postinc0	equ	0xFEE
 23733                           fsr0h	equ	0xFEA
 23734                           fsr0l	equ	0xFE9
 23735                           wreg	equ	0xFE8
 23736                           indf1	equ	0xFE7
 23737                           postinc1	equ	0xFE6
 23738                           postdec1	equ	0xFE5
 23739                           fsr1h	equ	0xFE2
 23740                           fsr1l	equ	0xFE1
 23741                           indf2	equ	0xFDF
 23742                           postinc2	equ	0xFDE
 23743                           postdec2	equ	0xFDD
 23744                           plusw2	equ	0xFDB
 23745                           fsr2h	equ	0xFDA
 23746                           fsr2l	equ	0xFD9
 23747                           status	equ	0xFD8
 23748                           
 23749 ;; *************** function _USB_ISR *****************
 23750 ;; Defined at:
 23751 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 23752 ;; Parameters:    Size  Location     Type
 23753 ;;		None
 23754 ;; Auto vars:     Size  Location     Type
 23755 ;;		None
 23756 ;; Return value:  Size  Location     Type
 23757 ;;		None               void
 23758 ;; Registers used:
 23759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23760 ;; Tracked objects:
 23761 ;;		On entry : 0/0
 23762 ;;		On exit  : 0/0
 23763 ;;		Unchanged: 0/0
 23764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23769 ;;Total ram usage:        0 bytes
 23770 ;; Hardware stack levels used:    1
 23771 ;; Hardware stack levels required when called:    9
 23772 ;; This function calls:
 23773 ;;		_USBDeviceTasks
 23774 ;; This function is called by:
 23775 ;;		_ISR
 23776 ;; This function uses a non-reentrant model
 23777 ;;
 23778                           
 23779                           	psect	text102
 23780  016CA6                     __ptext102:
 23781                           	opt stack 0
 23782  016CA6                     _USB_ISR:
 23783                           	opt stack 11
 23784                           
 23785                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 23786                           
 23787                           ; BSR set to: 1
 23788                           ;incstack = 0
 23789  016CA6  ECA6  F09A         	call	_USBDeviceTasks	;wreg free
 23790  016CAA  0012               	return		;funcret
 23791  016CAC                     __end_of_USB_ISR:
 23792                           	opt stack 0
 23793                           pclatu	equ	0xFFB
 23794                           pclath	equ	0xFFA
 23795                           tblptru	equ	0xFF8
 23796                           tblptrh	equ	0xFF7
 23797                           tblptrl	equ	0xFF6
 23798                           tablat	equ	0xFF5
 23799                           prodh	equ	0xFF4
 23800                           prodl	equ	0xFF3
 23801                           intcon	equ	0xFF2
 23802                           intcon2	equ	0xFF1
 23803                           postinc0	equ	0xFEE
 23804                           fsr0h	equ	0xFEA
 23805                           fsr0l	equ	0xFE9
 23806                           wreg	equ	0xFE8
 23807                           indf1	equ	0xFE7
 23808                           postinc1	equ	0xFE6
 23809                           postdec1	equ	0xFE5
 23810                           fsr1h	equ	0xFE2
 23811                           fsr1l	equ	0xFE1
 23812                           indf2	equ	0xFDF
 23813                           postinc2	equ	0xFDE
 23814                           postdec2	equ	0xFDD
 23815                           plusw2	equ	0xFDB
 23816                           fsr2h	equ	0xFDA
 23817                           fsr2l	equ	0xFD9
 23818                           status	equ	0xFD8
 23819                           
 23820 ;; *************** function _USBDeviceTasks *****************
 23821 ;; Defined at:
 23822 ;;		line 489 in file "../My_library/usb/usb_device.c"
 23823 ;; Parameters:    Size  Location     Type
 23824 ;;		None
 23825 ;; Auto vars:     Size  Location     Type
 23826 ;;  i               1   29[COMRAM] unsigned char 
 23827 ;; Return value:  Size  Location     Type
 23828 ;;		None               void
 23829 ;; Registers used:
 23830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23831 ;; Tracked objects:
 23832 ;;		On entry : 0/0
 23833 ;;		On exit  : 0/0
 23834 ;;		Unchanged: 0/0
 23835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23840 ;;Total ram usage:        1 bytes
 23841 ;; Hardware stack levels used:    1
 23842 ;; Hardware stack levels required when called:    8
 23843 ;; This function calls:
 23844 ;;		_USBCtrlEPAllowStatusStage
 23845 ;;		_USBCtrlEPService
 23846 ;;		_USBStallHandler
 23847 ;;		_USBSuspend
 23848 ;;		_USBWakeFromSuspend
 23849 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23850 ;;		i2_USBDeviceInit
 23851 ;; This function is called by:
 23852 ;;		_USB_ISR
 23853 ;; This function uses a non-reentrant model
 23854 ;;
 23855                           
 23856                           	psect	text103
 23857  01354C                     __ptext103:
 23858                           	opt stack 0
 23859  01354C                     _USBDeviceTasks:
 23860                           	opt stack 11
 23861                           
 23862                           ;usb_device.c: 491: uint8_t i;
 23863                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23864                           
 23865                           ;incstack = 0
 23866  01354C  0414               	decf	_USBDeviceState,w,c	;volatile
 23867  01354E  B4D8               	btfsc	status,2,c
 23868                           
 23869                           ;usb_device.c: 603: {
 23870                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23871  013550  BA65               	btfsc	3941,5,c	;volatile
 23872  013552  D008               	goto	i2l9191
 23873                           
 23874                           ;usb_device.c: 614: {
 23875                           ;usb_device.c: 615: {UIR = 0;};
 23876  013554  0E00               	movlw	0
 23877  013556  6E62               	movwf	3938,c	;volatile
 23878                           
 23879                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23880  013558  010F               	movlb	15	; () banked
 23881  01355A  8136               	bsf	54,0,b	;volatile
 23882                           
 23883                           ; BSR set to: 15
 23884                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23885  01355C  010F               	movlb	15	; () banked
 23886  01355E  8936               	bsf	54,4,b	;volatile
 23887                           
 23888                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23889  013560  0E02               	movlw	2
 23890  013562  6E14               	movwf	_USBDeviceState,c	;volatile
 23891  013564                     i2l9191:
 23892                           
 23893                           ;usb_device.c: 622: }
 23894                           ;usb_device.c: 623: }
 23895                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23896  013564  A462               	btfss	3938,2,c	;volatile
 23897  013566  D006               	goto	i2l9199
 23898  013568  010F               	movlb	15	; () banked
 23899  01356A  A536               	btfss	54,2,b	;volatile
 23900  01356C  D003               	goto	i2l9199
 23901                           
 23902                           ; BSR set to: 15
 23903                           ;usb_device.c: 640: {
 23904                           ;usb_device.c: 641: (UIR &= 0xFB);
 23905  01356E  9462               	bcf	3938,2,c	;volatile
 23906                           
 23907                           ; BSR set to: 15
 23908                           ;usb_device.c: 645: USBWakeFromSuspend();
 23909  013570  EC52  F0B4         	call	_USBWakeFromSuspend	;wreg free
 23910  013574                     i2l9199:
 23911                           
 23912                           ;usb_device.c: 647: }
 23913                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 23914  013574  A265               	btfss	3941,1,c	;volatile
 23915  013576  D002               	goto	i2l1451
 23916                           
 23917                           ;usb_device.c: 653: {
 23918                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 23919  013578  98A1               	bcf	4001,4,c	;volatile
 23920                           
 23921                           ;usb_device.c: 655: return;
 23922  01357A  0012               	return	
 23923  01357C                     i2l1451:
 23924                           
 23925                           ;usb_device.c: 656: }
 23926                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 23927  01357C  A062               	btfss	3938,0,c	;volatile
 23928  01357E  D009               	goto	i2l9213
 23929  013580  010F               	movlb	15	; () banked
 23930  013582  A136               	btfss	54,0,b	;volatile
 23931  013584  D006               	goto	i2l9213
 23932                           
 23933                           ; BSR set to: 15
 23934                           ;usb_device.c: 669: {
 23935                           ;usb_device.c: 670: USBDeviceInit();
 23936  013586  EC48  F09B         	call	i2_USBDeviceInit	;wreg free
 23937                           
 23938                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 23939  01358A  88A0               	bsf	4000,4,c	;volatile
 23940                           
 23941                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 23942  01358C  0E04               	movlw	4
 23943  01358E  6E14               	movwf	_USBDeviceState,c	;volatile
 23944                           
 23945                           ;usb_device.c: 686: (UIR &= 0xFE);
 23946  013590  9062               	bcf	3938,0,c	;volatile
 23947  013592                     i2l9213:
 23948                           
 23949                           ;usb_device.c: 687: }
 23950                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 23951  013592  A862               	btfss	3938,4,c	;volatile
 23952  013594  D006               	goto	i2l9221
 23953  013596  010F               	movlb	15	; () banked
 23954  013598  A936               	btfss	54,4,b	;volatile
 23955  01359A  D003               	goto	i2l9221
 23956                           
 23957                           ; BSR set to: 15
 23958                           ;usb_device.c: 693: {
 23959                           ;usb_device.c: 698: USBSuspend();
 23960  01359C  EC0A  F0B5         	call	_USBSuspend	;wreg free
 23961                           
 23962                           ;usb_device.c: 701: (UIR &= 0xEF);
 23963  0135A0  9862               	bcf	3938,4,c	;volatile
 23964  0135A2                     i2l9221:
 23965                           
 23966                           ;usb_device.c: 702: }
 23967                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 23968  0135A2  AC62               	btfss	3938,6,c	;volatile
 23969  0135A4  D019               	goto	i2l9237
 23970                           
 23971                           ;usb_device.c: 705: {
 23972                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 23973  0135A6  010F               	movlb	15	; () banked
 23974  0135A8  AD36               	btfss	54,6,b	;volatile
 23975  0135AA  D00E               	goto	i2l9227
 23976                           
 23977                           ; BSR set to: 15
 23978                           ;usb_device.c: 707: {
 23979                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 23980  0135AC  0E00               	movlw	0
 23981  0135AE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23982  0135B0  0E73               	movlw	115
 23983  0135B2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23984  0135B4  0E00               	movlw	0
 23985  0135B6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23986  0135B8  0E00               	movlw	0
 23987  0135BA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23988  0135BC  0E00               	movlw	0
 23989  0135BE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23990  0135C0  0E01               	movlw	1
 23991  0135C2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23992  0135C4  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23993  0135C8                     i2l9227:
 23994                           
 23995                           ;usb_device.c: 709: }
 23996                           ;usb_device.c: 710: (UIR &= 0xBF);
 23997  0135C8  9C62               	bcf	3938,6,c	;volatile
 23998                           
 23999                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 24000  0135CA  5017               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24001  0135CC  A4D8               	btfss	status,2,c
 24002                           
 24003                           ;usb_device.c: 736: {
 24004                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 24005  0135CE  0617               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24006                           
 24007                           ;usb_device.c: 738: }
 24008                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 24009  0135D0  5017               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24010  0135D2  B4D8               	btfsc	status,2,c
 24011                           
 24012                           ;usb_device.c: 745: {
 24013                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 24014  0135D4  EC89  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24015  0135D8                     i2l9237:
 24016                           
 24017                           ;usb_device.c: 747: }
 24018                           ;usb_device.c: 749: }
 24019                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24020  0135D8  AA62               	btfss	3938,5,c	;volatile
 24021  0135DA  D004               	goto	i2l9243
 24022  0135DC  010F               	movlb	15	; () banked
 24023  0135DE  BB36               	btfsc	54,5,b	;volatile
 24024                           
 24025                           ; BSR set to: 15
 24026                           ;usb_device.c: 752: {
 24027                           ;usb_device.c: 753: USBStallHandler();
 24028  0135E0  EC0F  F0B3         	call	_USBStallHandler	;wreg free
 24029  0135E4                     i2l9243:
 24030                           
 24031                           ;usb_device.c: 754: }
 24032                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24033  0135E4  A262               	btfss	3938,1,c	;volatile
 24034  0135E6  D012               	goto	i2l9251
 24035  0135E8  010F               	movlb	15	; () banked
 24036  0135EA  A336               	btfss	54,1,b	;volatile
 24037  0135EC  D00F               	goto	i2l9251
 24038                           
 24039                           ; BSR set to: 15
 24040                           ;usb_device.c: 757: {
 24041                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24042  0135EE  0E7F               	movlw	127
 24043  0135F0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24044  0135F2  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24045  0135F4  0E00               	movlw	0
 24046  0135F6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24047  0135F8  0E00               	movlw	0
 24048  0135FA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24049  0135FC  0E00               	movlw	0
 24050  0135FE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24051  013600  0E01               	movlw	1
 24052  013602  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24053  013604  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24054                           
 24055                           ;usb_device.c: 759: {UEIR = 0;};
 24056  013608  0E00               	movlw	0
 24057  01360A  6E63               	movwf	3939,c	;volatile
 24058  01360C                     i2l9251:
 24059                           
 24060                           ;usb_device.c: 767: }
 24061                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24062  01360C  0E04               	movlw	4
 24063  01360E  6014               	cpfslt	_USBDeviceState,c	;volatile
 24064  013610  D002               	goto	i2l1461
 24065                           
 24066                           ;usb_device.c: 775: {
 24067                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24068  013612  98A1               	bcf	4001,4,c	;volatile
 24069                           
 24070                           ;usb_device.c: 777: return;
 24071  013614  0012               	return	
 24072  013616                     i2l1461:
 24073                           
 24074                           ;usb_device.c: 778: }
 24075                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24076  013616  010F               	movlb	15	; () banked
 24077  013618  A736               	btfss	54,3,b	;volatile
 24078  01361A  D038               	goto	i2l1462
 24079                           
 24080                           ; BSR set to: 15
 24081                           ;usb_device.c: 784: {
 24082                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24083  01361C  0E00               	movlw	0
 24084  01361E  6E4A               	movwf	USBDeviceTasks@i,c
 24085  013620                     i2l9257:
 24086                           
 24087                           ; BSR set to: 15
 24088  013620  0E03               	movlw	3
 24089  013622  644A               	cpfsgt	USBDeviceTasks@i,c
 24090  013624  D001               	goto	i2l1463
 24091  013626  D032               	goto	i2l1462
 24092  013628                     i2l1463:
 24093                           
 24094                           ;usb_device.c: 786: {
 24095                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24096  013628  A662               	btfss	3938,3,c	;volatile
 24097  01362A  D030               	goto	i2l1462
 24098                           
 24099                           ;usb_device.c: 788: {
 24100                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24101  01362C  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24102                           
 24103                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24104  013630  302C               	rrcf	_USTATcopy,w,c	;volatile
 24105  013632  32E8               	rrcf	wreg,f,c
 24106  013634  32E8               	rrcf	wreg,f,c
 24107  013636  0B0F               	andlw	15
 24108  013638  6E1E               	movwf	_endpoint_number,c	;volatile
 24109                           
 24110                           ;usb_device.c: 793: (UIR &= 0xF7);
 24111  01363A  9662               	bcf	3938,3,c	;volatile
 24112                           
 24113                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24114  01363C  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24115  01363E  D007               	goto	i2l9271
 24116                           
 24117                           ;usb_device.c: 799: {
 24118                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24119  013640  501E               	movf	_endpoint_number,w,c	;volatile
 24120  013642  0D01               	mullw	1
 24121  013644  0E04               	movlw	low _ep_data_out
 24122  013646  24F3               	addwf	prodl,w,c
 24123  013648  6ED9               	movwf	fsr2l,c
 24124  01364A  0E00               	movlw	high _ep_data_out
 24125  01364C  D006               	goto	L7
 24126  01364E                     i2l9271:
 24127                           
 24128                           ;usb_device.c: 802: else
 24129                           ;usb_device.c: 803: {
 24130                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24131  01364E  501E               	movf	_endpoint_number,w,c	;volatile
 24132  013650  0D01               	mullw	1
 24133  013652  0E01               	movlw	low _ep_data_in
 24134  013654  24F3               	addwf	prodl,w,c
 24135  013656  6ED9               	movwf	fsr2l,c
 24136  013658  0E00               	movlw	high _ep_data_in
 24137  01365A                     L7:
 24138  01365A  20F4               	addwfc	prodh,w,c
 24139  01365C  6EDA               	movwf	fsr2h,c
 24140  01365E  70DF               	btg	indf2,0,c
 24141                           
 24142                           ;usb_device.c: 805: }
 24143                           ;usb_device.c: 810: if(endpoint_number == 0)
 24144  013660  501E               	movf	_endpoint_number,w,c	;volatile
 24145  013662  A4D8               	btfss	status,2,c
 24146  013664  D003               	goto	i2l9277
 24147                           
 24148                           ;usb_device.c: 811: {
 24149                           ;usb_device.c: 812: USBCtrlEPService();
 24150  013666  EC57  F0A6         	call	_USBCtrlEPService	;wreg free
 24151                           
 24152                           ;usb_device.c: 813: }
 24153  01366A  D00E               	goto	i2l9279
 24154  01366C                     i2l9277:
 24155                           
 24156                           ;usb_device.c: 814: else
 24157                           ;usb_device.c: 815: {
 24158                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24159  01366C  0E00               	movlw	0
 24160  01366E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24161  013670  0E72               	movlw	114
 24162  013672  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24163  013674  0E2C               	movlw	low _USTATcopy
 24164  013676  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24165  013678  0E00               	movlw	high _USTATcopy
 24166  01367A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24167  01367C  0E00               	movlw	0
 24168  01367E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24169  013680  0E00               	movlw	0
 24170  013682  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24171  013684  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24172  013688                     i2l9279:
 24173  013688  2A4A               	incf	USBDeviceTasks@i,f,c
 24174  01368A  D7CA               	goto	i2l9257
 24175  01368C                     i2l1462:
 24176                           
 24177                           ;usb_device.c: 822: }
 24178                           ;usb_device.c: 823: }
 24179                           ;usb_device.c: 824: }
 24180                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24181  01368C  98A1               	bcf	4001,4,c	;volatile
 24182  01368E  0012               	return		;funcret
 24183  013690                     __end_of_USBDeviceTasks:
 24184                           	opt stack 0
 24185                           pclatu	equ	0xFFB
 24186                           pclath	equ	0xFFA
 24187                           tblptru	equ	0xFF8
 24188                           tblptrh	equ	0xFF7
 24189                           tblptrl	equ	0xFF6
 24190                           tablat	equ	0xFF5
 24191                           prodh	equ	0xFF4
 24192                           prodl	equ	0xFF3
 24193                           intcon	equ	0xFF2
 24194                           intcon2	equ	0xFF1
 24195                           postinc0	equ	0xFEE
 24196                           fsr0h	equ	0xFEA
 24197                           fsr0l	equ	0xFE9
 24198                           wreg	equ	0xFE8
 24199                           indf1	equ	0xFE7
 24200                           postinc1	equ	0xFE6
 24201                           postdec1	equ	0xFE5
 24202                           fsr1h	equ	0xFE2
 24203                           fsr1l	equ	0xFE1
 24204                           indf2	equ	0xFDF
 24205                           postinc2	equ	0xFDE
 24206                           postdec2	equ	0xFDD
 24207                           plusw2	equ	0xFDB
 24208                           fsr2h	equ	0xFDA
 24209                           fsr2l	equ	0xFD9
 24210                           status	equ	0xFD8
 24211                           
 24212 ;; *************** function i2_USBDeviceInit *****************
 24213 ;; Defined at:
 24214 ;;		line 298 in file "../My_library/usb/usb_device.c"
 24215 ;; Parameters:    Size  Location     Type
 24216 ;;		None
 24217 ;; Auto vars:     Size  Location     Type
 24218 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24219 ;; Return value:  Size  Location     Type
 24220 ;;		None               void
 24221 ;; Registers used:
 24222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24223 ;; Tracked objects:
 24224 ;;		On entry : 0/0
 24225 ;;		On exit  : 0/0
 24226 ;;		Unchanged: 0/0
 24227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24232 ;;Total ram usage:        1 bytes
 24233 ;; Hardware stack levels used:    1
 24234 ;; Hardware stack levels required when called:    1
 24235 ;; This function calls:
 24236 ;;		i2_memset
 24237 ;; This function is called by:
 24238 ;;		_USBDeviceTasks
 24239 ;; This function uses a non-reentrant model
 24240 ;;
 24241                           
 24242                           	psect	text104
 24243  013690                     __ptext104:
 24244                           	opt stack 0
 24245  013690                     i2_USBDeviceInit:
 24246                           	opt stack 17
 24247                           
 24248                           ;usb_device.c: 300: uint8_t i;
 24249                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24250                           
 24251                           ;incstack = 0
 24252  013690  98A0               	bcf	4000,4,c	;volatile
 24253                           
 24254                           ;usb_device.c: 305: {UEIR = 0;};
 24255  013692  0E00               	movlw	0
 24256  013694  6E63               	movwf	3939,c	;volatile
 24257                           
 24258                           ;usb_device.c: 308: {UIR = 0;};
 24259  013696  0E00               	movlw	0
 24260  013698  6E62               	movwf	3938,c	;volatile
 24261                           
 24262                           ;usb_device.c: 311: UEP0 = 0;
 24263  01369A  0E00               	movlw	0
 24264  01369C  010F               	movlb	15	; () banked
 24265  01369E  6F26               	movwf	38,b	;volatile
 24266                           
 24267                           ; BSR set to: 15
 24268                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24269  0136A0  0E27               	movlw	39
 24270  0136A2  6E2D               	movwf	i2memset@p1,c
 24271  0136A4  0E0F               	movlw	15
 24272  0136A6  6E2E               	movwf	i2memset@p1+1,c
 24273  0136A8  0E00               	movlw	0
 24274  0136AA  6E30               	movwf	i2memset@c+1,c
 24275  0136AC  0E00               	movlw	0
 24276  0136AE  6E2F               	movwf	i2memset@c,c
 24277  0136B0  0E00               	movlw	0
 24278  0136B2  6E32               	movwf	i2memset@n+1,c
 24279  0136B4  0E02               	movlw	2
 24280  0136B6  6E31               	movwf	i2memset@n,c
 24281  0136B8  EC20  F0B5         	call	i2_memset	;wreg free
 24282                           
 24283                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24284  0136BC  0E16               	movlw	22
 24285  0136BE  010F               	movlb	15	; () banked
 24286  0136C0  6F39               	movwf	57,b	;volatile
 24287                           
 24288                           ; BSR set to: 15
 24289  0136C2  0E9F               	movlw	159
 24290  0136C4  010F               	movlb	15	; () banked
 24291  0136C6  6F37               	movwf	55,b	;volatile
 24292                           
 24293                           ; BSR set to: 15
 24294  0136C8  0E7B               	movlw	123
 24295  0136CA  010F               	movlb	15	; () banked
 24296  0136CC  6F36               	movwf	54,b	;volatile
 24297                           
 24298                           ; BSR set to: 15
 24299                           ;usb_device.c: 318: ;
 24300                           ;usb_device.c: 321: ;
 24301                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24302  0136CE  0E00               	movlw	0
 24303  0136D0  6E35               	movwf	i2USBDeviceInit@i,c
 24304  0136D2                     i2l8627:
 24305                           
 24306                           ; BSR set to: 15
 24307  0136D2  0E0B               	movlw	11
 24308  0136D4  6435               	cpfsgt	i2USBDeviceInit@i,c
 24309  0136D6  D001               	goto	i2l8631
 24310  0136D8  D00E               	goto	i2l1439
 24311  0136DA                     i2l8631:
 24312                           
 24313                           ;usb_device.c: 325: {
 24314                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24315  0136DA  5035               	movf	i2USBDeviceInit@i,w,c
 24316  0136DC  0D04               	mullw	4
 24317  0136DE  0E00               	movlw	0
 24318  0136E0  24F3               	addwf	prodl,w,c
 24319  0136E2  6ED9               	movwf	fsr2l,c
 24320  0136E4  0E0D               	movlw	13
 24321  0136E6  20F4               	addwfc	prodh,w,c
 24322  0136E8  6EDA               	movwf	fsr2h,c
 24323  0136EA  6ADE               	clrf	postinc2,c
 24324  0136EC  6ADE               	clrf	postinc2,c
 24325  0136EE  6ADE               	clrf	postinc2,c
 24326  0136F0  6ADD               	clrf	postdec2,c
 24327  0136F2  2A35               	incf	i2USBDeviceInit@i,f,c
 24328  0136F4  D7EE               	goto	i2l8627
 24329  0136F6                     i2l1439:
 24330                           
 24331                           ;usb_device.c: 327: }
 24332                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24333  0136F6  8C65               	bsf	3941,6,c	;volatile
 24334                           
 24335                           ;usb_device.c: 333: UADDR = 0x00;
 24336  0136F8  0E00               	movlw	0
 24337  0136FA  010F               	movlb	15	; () banked
 24338  0136FC  6F38               	movwf	56,b	;volatile
 24339                           
 24340                           ; BSR set to: 15
 24341                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24342  0136FE  9865               	bcf	3941,4,c	;volatile
 24343                           
 24344                           ; BSR set to: 15
 24345                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24346  013700  9C65               	bcf	3941,6,c	;volatile
 24347                           
 24348                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24349  013702  D00C               	goto	i2l8651
 24350  013704                     i2l8643:
 24351                           
 24352                           ;usb_device.c: 343: {
 24353                           ;usb_device.c: 344: (UIR &= 0xF7);
 24354  013704  9662               	bcf	3938,3,c	;volatile
 24355                           
 24356                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24357  013706  0E00               	movlw	0
 24358  013708  0100               	movlb	0	; () banked
 24359  01370A  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24360                           
 24361                           ; BSR set to: 0
 24362                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24363  01370C  0E00               	movlw	0
 24364  01370E  0100               	movlb	0	; () banked
 24365  013710  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24366                           
 24367                           ; BSR set to: 0
 24368                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24369  013712  0E00               	movlw	0
 24370  013714  0100               	movlb	0	; () banked
 24371  013716  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24372  013718  0E00               	movlw	0
 24373  01371A  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24374  01371C                     i2l8651:
 24375  01371C  B662               	btfsc	3938,3,c	;volatile
 24376  01371E  D7F2               	goto	i2l8643
 24377                           
 24378                           ;usb_device.c: 349: }
 24379                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24380  013720  0E01               	movlw	1
 24381  013722  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24382                           
 24383                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24384  013724  0E01               	movlw	1
 24385  013726  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24386                           
 24387                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24388  013728  0E00               	movlw	0
 24389  01372A  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24390                           
 24391                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24392  01372C  0E00               	movlw	0
 24393  01372E  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24394                           
 24395                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24396  013730  0E00               	movlw	0
 24397  013732  0101               	movlb	1	; () banked
 24398  013734  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24399                           
 24400                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24401  013736  0E00               	movlw	0
 24402  013738  6E35               	movwf	i2USBDeviceInit@i,c
 24403  01373A                     i2l8655:
 24404                           
 24405                           ; BSR set to: 1
 24406  01373A  0E02               	movlw	2
 24407  01373C  6435               	cpfsgt	i2USBDeviceInit@i,c
 24408  01373E  D001               	goto	i2l8659
 24409  013740  D02E               	goto	i2l8665
 24410  013742                     i2l8659:
 24411                           
 24412                           ;usb_device.c: 363: {
 24413                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24414  013742  5035               	movf	i2USBDeviceInit@i,w,c
 24415  013744  0D02               	mullw	2
 24416  013746  0EF5               	movlw	low _pBDTEntryIn
 24417  013748  24F3               	addwf	prodl,w,c
 24418  01374A  6ED9               	movwf	fsr2l,c
 24419  01374C  0E00               	movlw	high _pBDTEntryIn
 24420  01374E  20F4               	addwfc	prodh,w,c
 24421  013750  6EDA               	movwf	fsr2h,c
 24422  013752  0E00               	movlw	0
 24423  013754  6EDE               	movwf	postinc2,c
 24424  013756  0E00               	movlw	0
 24425  013758  6EDD               	movwf	postdec2,c
 24426                           
 24427                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24428  01375A  5035               	movf	i2USBDeviceInit@i,w,c
 24429  01375C  0D02               	mullw	2
 24430  01375E  0E00               	movlw	low _pBDTEntryOut
 24431  013760  24F3               	addwf	prodl,w,c
 24432  013762  6ED9               	movwf	fsr2l,c
 24433  013764  0E01               	movlw	high _pBDTEntryOut
 24434  013766  20F4               	addwfc	prodh,w,c
 24435  013768  6EDA               	movwf	fsr2h,c
 24436  01376A  0E00               	movlw	0
 24437  01376C  6EDE               	movwf	postinc2,c
 24438  01376E  0E00               	movlw	0
 24439  013770  6EDD               	movwf	postdec2,c
 24440                           
 24441                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24442  013772  5035               	movf	i2USBDeviceInit@i,w,c
 24443  013774  0D01               	mullw	1
 24444  013776  0E01               	movlw	low _ep_data_in
 24445  013778  24F3               	addwf	prodl,w,c
 24446  01377A  6ED9               	movwf	fsr2l,c
 24447  01377C  0E00               	movlw	high _ep_data_in
 24448  01377E  20F4               	addwfc	prodh,w,c
 24449  013780  6EDA               	movwf	fsr2h,c
 24450  013782  0E00               	movlw	0
 24451  013784  6EDF               	movwf	indf2,c
 24452                           
 24453                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24454  013786  5035               	movf	i2USBDeviceInit@i,w,c
 24455  013788  0D01               	mullw	1
 24456  01378A  0E04               	movlw	low _ep_data_out
 24457  01378C  24F3               	addwf	prodl,w,c
 24458  01378E  6ED9               	movwf	fsr2l,c
 24459  013790  0E00               	movlw	high _ep_data_out
 24460  013792  20F4               	addwfc	prodh,w,c
 24461  013794  6EDA               	movwf	fsr2h,c
 24462  013796  0E00               	movlw	0
 24463  013798  6EDF               	movwf	indf2,c
 24464  01379A  2A35               	incf	i2USBDeviceInit@i,f,c
 24465  01379C  D7CE               	goto	i2l8655
 24466  01379E                     i2l8665:
 24467                           
 24468                           ;usb_device.c: 368: }
 24469                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24470  01379E  0E08               	movlw	8
 24471  0137A0  0100               	movlb	0	; () banked
 24472  0137A2  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24473  0137A4  0E0D               	movlw	13
 24474  0137A6  0100               	movlb	0	; () banked
 24475  0137A8  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 24479  0137AA  0E16               	movlw	22
 24480  0137AC  010F               	movlb	15	; () banked
 24481  0137AE  6F26               	movwf	38,b	;volatile
 24482                           
 24483                           ; BSR set to: 15
 24484                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24485  0137B0  0E0D               	movlw	13
 24486  0137B2  010D               	movlb	13	; () banked
 24487  0137B4  6F03               	movwf	3,b	;volatile
 24488  0137B6  0E30               	movlw	48
 24489  0137B8  6F02               	movwf	2,b	;volatile
 24490                           
 24491                           ; BSR set to: 13
 24492                           ;usb_device.c: 376: BDT[0].CNT = 8;
 24493  0137BA  0E08               	movlw	8
 24494  0137BC  010D               	movlb	13	; () banked
 24495  0137BE  6F01               	movwf	1,b	;volatile
 24496                           
 24497                           ; BSR set to: 13
 24498                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 24499  0137C0  0E04               	movlw	4
 24500  0137C2  010D               	movlb	13	; () banked
 24501  0137C4  6F00               	movwf	0,b	;volatile
 24502                           
 24503                           ; BSR set to: 13
 24504                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 24505  0137C6  010D               	movlb	13	; () banked
 24506  0137C8  8F00               	bsf	0,7,b	;volatile
 24507                           
 24508                           ; BSR set to: 13
 24509                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 24510  0137CA  0E00               	movlw	0
 24511  0137CC  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 24512                           
 24513                           ; BSR set to: 13
 24514                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 24515  0137CE  0E00               	movlw	0
 24516  0137D0  6E14               	movwf	_USBDeviceState,c	;volatile
 24517                           
 24518                           ; BSR set to: 13
 24519  0137D2  0012               	return		;funcret
 24520  0137D4                     __end_ofi2_USBDeviceInit:
 24521                           	opt stack 0
 24522                           pclatu	equ	0xFFB
 24523                           pclath	equ	0xFFA
 24524                           tblptru	equ	0xFF8
 24525                           tblptrh	equ	0xFF7
 24526                           tblptrl	equ	0xFF6
 24527                           tablat	equ	0xFF5
 24528                           prodh	equ	0xFF4
 24529                           prodl	equ	0xFF3
 24530                           intcon	equ	0xFF2
 24531                           intcon2	equ	0xFF1
 24532                           postinc0	equ	0xFEE
 24533                           fsr0h	equ	0xFEA
 24534                           fsr0l	equ	0xFE9
 24535                           wreg	equ	0xFE8
 24536                           indf1	equ	0xFE7
 24537                           postinc1	equ	0xFE6
 24538                           postdec1	equ	0xFE5
 24539                           fsr1h	equ	0xFE2
 24540                           fsr1l	equ	0xFE1
 24541                           indf2	equ	0xFDF
 24542                           postinc2	equ	0xFDE
 24543                           postdec2	equ	0xFDD
 24544                           plusw2	equ	0xFDB
 24545                           fsr2h	equ	0xFDA
 24546                           fsr2l	equ	0xFD9
 24547                           status	equ	0xFD8
 24548                           
 24549 ;; *************** function _USBWakeFromSuspend *****************
 24550 ;; Defined at:
 24551 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 24552 ;; Parameters:    Size  Location     Type
 24553 ;;		None
 24554 ;; Auto vars:     Size  Location     Type
 24555 ;;		None
 24556 ;; Return value:  Size  Location     Type
 24557 ;;		None               void
 24558 ;; Registers used:
 24559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24560 ;; Tracked objects:
 24561 ;;		On entry : 0/0
 24562 ;;		On exit  : 0/0
 24563 ;;		Unchanged: 0/0
 24564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24569 ;;Total ram usage:        0 bytes
 24570 ;; Hardware stack levels used:    1
 24571 ;; Hardware stack levels required when called:    4
 24572 ;; This function calls:
 24573 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24574 ;; This function is called by:
 24575 ;;		_USBDeviceTasks
 24576 ;; This function uses a non-reentrant model
 24577 ;;
 24578                           
 24579                           	psect	text105
 24580  0168A4                     __ptext105:
 24581                           	opt stack 0
 24582  0168A4                     _USBWakeFromSuspend:
 24583                           	opt stack 14
 24584                           
 24585                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 24586                           
 24587                           ; BSR set to: 13
 24588                           ;incstack = 0
 24589  0168A4  0E00               	movlw	0
 24590  0168A6  0101               	movlb	1	; () banked
 24591  0168A8  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24592                           
 24593                           ; BSR set to: 1
 24594                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24595  0168AA  0E00               	movlw	0
 24596  0168AC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24597  0168AE  0E74               	movlw	116
 24598  0168B0  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24599  0168B2  0E00               	movlw	0
 24600  0168B4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24601  0168B6  0E00               	movlw	0
 24602  0168B8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24603  0168BA  0E00               	movlw	0
 24604  0168BC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24605  0168BE  0E00               	movlw	0
 24606  0168C0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24607  0168C2  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24608                           
 24609                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 24610  0168C6  9265               	bcf	3941,1,c	;volatile
 24611                           
 24612                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 24613  0168C8  010F               	movlb	15	; () banked
 24614  0168CA  9536               	bcf	54,2,b	;volatile
 24615                           
 24616                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 24617  0168CC  D001               	goto	i2l8537
 24618  0168CE                     i2l8535:
 24619                           
 24620                           ;usb_device.c: 2342: {
 24621                           ;usb_device.c: 2343: (UIR &= 0xFB);
 24622  0168CE  9462               	bcf	3938,2,c	;volatile
 24623  0168D0                     i2l8537:
 24624  0168D0  A462               	btfss	3938,2,c	;volatile
 24625  0168D2  0012               	return	
 24626  0168D4  D7FC               	goto	i2l8535
 24627  0168D6                     __end_of_USBWakeFromSuspend:
 24628                           	opt stack 0
 24629                           pclatu	equ	0xFFB
 24630                           pclath	equ	0xFFA
 24631                           tblptru	equ	0xFF8
 24632                           tblptrh	equ	0xFF7
 24633                           tblptrl	equ	0xFF6
 24634                           tablat	equ	0xFF5
 24635                           prodh	equ	0xFF4
 24636                           prodl	equ	0xFF3
 24637                           intcon	equ	0xFF2
 24638                           intcon2	equ	0xFF1
 24639                           postinc0	equ	0xFEE
 24640                           fsr0h	equ	0xFEA
 24641                           fsr0l	equ	0xFE9
 24642                           wreg	equ	0xFE8
 24643                           indf1	equ	0xFE7
 24644                           postinc1	equ	0xFE6
 24645                           postdec1	equ	0xFE5
 24646                           fsr1h	equ	0xFE2
 24647                           fsr1l	equ	0xFE1
 24648                           indf2	equ	0xFDF
 24649                           postinc2	equ	0xFDE
 24650                           postdec2	equ	0xFDD
 24651                           plusw2	equ	0xFDB
 24652                           fsr2h	equ	0xFDA
 24653                           fsr2l	equ	0xFD9
 24654                           status	equ	0xFD8
 24655                           
 24656 ;; *************** function _USBSuspend *****************
 24657 ;; Defined at:
 24658 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 24659 ;; Parameters:    Size  Location     Type
 24660 ;;		None
 24661 ;; Auto vars:     Size  Location     Type
 24662 ;;		None
 24663 ;; Return value:  Size  Location     Type
 24664 ;;		None               void
 24665 ;; Registers used:
 24666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24667 ;; Tracked objects:
 24668 ;;		On entry : 0/0
 24669 ;;		On exit  : 0/0
 24670 ;;		Unchanged: 0/0
 24671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;Total ram usage:        0 bytes
 24677 ;; Hardware stack levels used:    1
 24678 ;; Hardware stack levels required when called:    4
 24679 ;; This function calls:
 24680 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24681 ;; This function is called by:
 24682 ;;		_USBDeviceTasks
 24683 ;; This function uses a non-reentrant model
 24684 ;;
 24685                           
 24686                           	psect	text106
 24687  016A14                     __ptext106:
 24688                           	opt stack 0
 24689  016A14                     _USBSuspend:
 24690                           	opt stack 14
 24691                           
 24692                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 24693                           
 24694                           ;incstack = 0
 24695  016A14  010F               	movlb	15	; () banked
 24696  016A16  8536               	bsf	54,2,b	;volatile
 24697                           
 24698                           ; BSR set to: 15
 24699                           ;usb_device.c: 2271: (UIR &= 0xEF);
 24700  016A18  9862               	bcf	3938,4,c	;volatile
 24701                           
 24702                           ; BSR set to: 15
 24703                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 24704  016A1A  8265               	bsf	3941,1,c	;volatile
 24705                           
 24706                           ; BSR set to: 15
 24707                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 24708  016A1C  0E01               	movlw	1
 24709  016A1E  0101               	movlb	1	; () banked
 24710  016A20  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24711                           
 24712                           ; BSR set to: 1
 24713                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24714  016A22  0E00               	movlw	0
 24715  016A24  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24716  016A26  0E75               	movlw	117
 24717  016A28  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24718  016A2A  0E00               	movlw	0
 24719  016A2C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24720  016A2E  0E00               	movlw	0
 24721  016A30  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24722  016A32  0E00               	movlw	0
 24723  016A34  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24724  016A36  0E00               	movlw	0
 24725  016A38  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24726  016A3A  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24727  016A3E  0012               	return		;funcret
 24728  016A40                     __end_of_USBSuspend:
 24729                           	opt stack 0
 24730                           pclatu	equ	0xFFB
 24731                           pclath	equ	0xFFA
 24732                           tblptru	equ	0xFF8
 24733                           tblptrh	equ	0xFF7
 24734                           tblptrl	equ	0xFF6
 24735                           tablat	equ	0xFF5
 24736                           prodh	equ	0xFF4
 24737                           prodl	equ	0xFF3
 24738                           intcon	equ	0xFF2
 24739                           intcon2	equ	0xFF1
 24740                           postinc0	equ	0xFEE
 24741                           fsr0h	equ	0xFEA
 24742                           fsr0l	equ	0xFE9
 24743                           wreg	equ	0xFE8
 24744                           indf1	equ	0xFE7
 24745                           postinc1	equ	0xFE6
 24746                           postdec1	equ	0xFE5
 24747                           fsr1h	equ	0xFE2
 24748                           fsr1l	equ	0xFE1
 24749                           indf2	equ	0xFDF
 24750                           postinc2	equ	0xFDE
 24751                           postdec2	equ	0xFDD
 24752                           plusw2	equ	0xFDB
 24753                           fsr2h	equ	0xFDA
 24754                           fsr2l	equ	0xFD9
 24755                           status	equ	0xFD8
 24756                           
 24757 ;; *************** function _USBStallHandler *****************
 24758 ;; Defined at:
 24759 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 24760 ;; Parameters:    Size  Location     Type
 24761 ;;		None
 24762 ;; Auto vars:     Size  Location     Type
 24763 ;;		None
 24764 ;; Return value:  Size  Location     Type
 24765 ;;		None               void
 24766 ;; Registers used:
 24767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24768 ;; Tracked objects:
 24769 ;;		On entry : 0/0
 24770 ;;		On exit  : 0/0
 24771 ;;		Unchanged: 0/0
 24772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24777 ;;Total ram usage:        1 bytes
 24778 ;; Hardware stack levels used:    1
 24779 ;; This function calls:
 24780 ;;		Nothing
 24781 ;; This function is called by:
 24782 ;;		_USBDeviceTasks
 24783 ;; This function uses a non-reentrant model
 24784 ;;
 24785                           
 24786                           	psect	text107
 24787  01661E                     __ptext107:
 24788                           	opt stack 0
 24789  01661E                     _USBStallHandler:
 24790                           	opt stack 18
 24791                           
 24792                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 24793                           
 24794                           ;incstack = 0
 24795  01661E  010F               	movlb	15	; () banked
 24796  016620  A126               	btfss	38,0,b	;volatile
 24797  016622  D01E               	goto	i2l1601
 24798                           
 24799                           ; BSR set to: 15
 24800                           ;usb_device.c: 2215: {
 24801                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24802  016624  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24803  016628  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24804  01662C  0E80               	movlw	128
 24805  01662E  18DE               	xorwf	postinc2,w,c
 24806  016630  A4D8               	btfss	status,2,c
 24807  016632  D014               	goto	i2l8559
 24808                           
 24809                           ; BSR set to: 15
 24810  016634  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 24811  016638  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24812  01663C  0E84               	movlw	132
 24813  01663E  18DE               	xorwf	postinc2,w,c
 24814  016640  A4D8               	btfss	status,2,c
 24815  016642  D00C               	goto	i2l8559
 24816                           
 24817                           ; BSR set to: 15
 24818                           ;usb_device.c: 2218: {
 24819                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24820  016644  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24821  016648  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24822  01664C  0E0C               	movlw	12
 24823  01664E  6EDF               	movwf	indf2,c
 24824                           
 24825                           ; BSR set to: 15
 24826                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24827  016650  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24828  016654  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24829  016658  0E00               	movlw	0
 24830  01665A  8EDB               	bsf	plusw2,7,c
 24831  01665C                     i2l8559:
 24832                           
 24833                           ; BSR set to: 15
 24834                           ;usb_device.c: 2222: }
 24835                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 24836  01665C  010F               	movlb	15	; () banked
 24837  01665E  9126               	bcf	38,0,b	;volatile
 24838  016660                     i2l1601:
 24839                           
 24840                           ; BSR set to: 15
 24841                           ;usb_device.c: 2224: }
 24842                           ;usb_device.c: 2226: (UIR &= 0xDF);
 24843  016660  9A62               	bcf	3938,5,c	;volatile
 24844                           
 24845                           ; BSR set to: 15
 24846  016662  0012               	return		;funcret
 24847  016664                     __end_of_USBStallHandler:
 24848                           	opt stack 0
 24849                           pclatu	equ	0xFFB
 24850                           pclath	equ	0xFFA
 24851                           tblptru	equ	0xFF8
 24852                           tblptrh	equ	0xFF7
 24853                           tblptrl	equ	0xFF6
 24854                           tablat	equ	0xFF5
 24855                           prodh	equ	0xFF4
 24856                           prodl	equ	0xFF3
 24857                           intcon	equ	0xFF2
 24858                           intcon2	equ	0xFF1
 24859                           postinc0	equ	0xFEE
 24860                           fsr0h	equ	0xFEA
 24861                           fsr0l	equ	0xFE9
 24862                           wreg	equ	0xFE8
 24863                           indf1	equ	0xFE7
 24864                           postinc1	equ	0xFE6
 24865                           postdec1	equ	0xFE5
 24866                           fsr1h	equ	0xFE2
 24867                           fsr1l	equ	0xFE1
 24868                           indf2	equ	0xFDF
 24869                           postinc2	equ	0xFDE
 24870                           postdec2	equ	0xFDD
 24871                           plusw2	equ	0xFDB
 24872                           fsr2h	equ	0xFDA
 24873                           fsr2l	equ	0xFD9
 24874                           status	equ	0xFD8
 24875                           
 24876 ;; *************** function _USBCtrlEPService *****************
 24877 ;; Defined at:
 24878 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 24879 ;; Parameters:    Size  Location     Type
 24880 ;;		None
 24881 ;; Auto vars:     Size  Location     Type
 24882 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24883 ;; Return value:  Size  Location     Type
 24884 ;;		None               void
 24885 ;; Registers used:
 24886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24887 ;; Tracked objects:
 24888 ;;		On entry : 0/0
 24889 ;;		On exit  : 0/0
 24890 ;;		Unchanged: 0/0
 24891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24896 ;;Total ram usage:        3 bytes
 24897 ;; Hardware stack levels used:    1
 24898 ;; Hardware stack levels required when called:    7
 24899 ;; This function calls:
 24900 ;;		_USBCtrlTrfInHandler
 24901 ;;		_USBCtrlTrfOutHandler
 24902 ;;		_USBCtrlTrfSetupHandler
 24903 ;; This function is called by:
 24904 ;;		_USBDeviceTasks
 24905 ;; This function uses a non-reentrant model
 24906 ;;
 24907                           
 24908                           	psect	text108
 24909  014CAE                     __ptext108:
 24910                           	opt stack 0
 24911  014CAE                     _USBCtrlEPService:
 24912                           	opt stack 11
 24913                           
 24914                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 24915                           
 24916                           ; BSR set to: 15
 24917                           ;incstack = 0
 24918  014CAE  0E2D               	movlw	45
 24919  014CB0  6E17               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 24920                           
 24921                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 24922  014CB2  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24923  014CB6  0EFD               	movlw	253
 24924  014CB8  1647               	andwf	??_USBCtrlEPService,f,c
 24925  014CBA  A4D8               	btfss	status,2,c
 24926  014CBC  D057               	goto	i2l8593
 24927                           
 24928                           ;usb_device.c: 2380: {
 24929                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 24930  014CBE  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24931  014CC2  90D8               	bcf	status,0,c
 24932  014CC4  3247               	rrcf	??_USBCtrlEPService,f,c
 24933  014CC6  0E3F               	movlw	63
 24934  014CC8  1647               	andwf	??_USBCtrlEPService,f,c
 24935  014CCA  5047               	movf	??_USBCtrlEPService,w,c
 24936  014CCC  0D04               	mullw	4
 24937  014CCE  0E00               	movlw	0
 24938  014CD0  24F3               	addwf	prodl,w,c
 24939  014CD2  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 24940  014CD4  0E0D               	movlw	13
 24941  014CD6  20F4               	addwfc	prodh,w,c
 24942  014CD8  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24943                           
 24944                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24945  014CDA  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24946  014CDE  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24947                           
 24948                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 24949  014CE2  0E04               	movlw	4
 24950  014CE4  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 24951                           
 24952                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 24953  014CE6  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24954  014CEA  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24955  014CEE  30DF               	rrcf	indf2,w,c
 24956  014CF0  32E8               	rrcf	wreg,f,c
 24957  014CF2  0B0F               	andlw	15
 24958  014CF4  0A0D               	xorlw	13
 24959  014CF6  A4D8               	btfss	status,2,c
 24960  014CF8  D036               	goto	i2l8591
 24961                           
 24962                           ;usb_device.c: 2397: {
 24963                           ;usb_device.c: 2398: unsigned char setup_cnt;
 24964                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 24965  014CFA  0E00               	movlw	0
 24966  014CFC  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 24967  014CFE                     i2l8575:
 24968  014CFE  0E07               	movlw	7
 24969  014D00  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 24970  014D02  D001               	goto	i2l8579
 24971  014D04  D023               	goto	i2l8587
 24972  014D06                     i2l8579:
 24973                           
 24974                           ;usb_device.c: 2405: {
 24975                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 24976  014D06  EE20 F002          	lfsr	2,2
 24977  014D0A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24978  014D0C  26D9               	addwf	fsr2l,f,c
 24979  014D0E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24980  014D10  22DA               	addwfc	fsr2h,f,c
 24981  014D12  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 24982  014D16  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 24983  014D1A  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 24984  014D1E  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 24985  014D22  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 24986  014D24  0D01               	mullw	1
 24987  014D26  0E30               	movlw	48
 24988  014D28  24F3               	addwf	prodl,w,c
 24989  014D2A  6EE1               	movwf	fsr1l,c
 24990  014D2C  0E0D               	movlw	13
 24991  014D2E  20F4               	addwfc	prodh,w,c
 24992  014D30  6EE2               	movwf	fsr1h,c
 24993  014D32  CFDF FFE7          	movff	indf2,indf1
 24994                           
 24995                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 24996  014D36  EE20 F002          	lfsr	2,2
 24997  014D3A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24998  014D3C  26D9               	addwf	fsr2l,f,c
 24999  014D3E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25000  014D40  22DA               	addwfc	fsr2h,f,c
 25001  014D42  2ADE               	incf	postinc2,f,c
 25002  014D44  0E00               	movlw	0
 25003  014D46  22DD               	addwfc	postdec2,f,c
 25004  014D48  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25005  014D4A  D7D9               	goto	i2l8575
 25006  014D4C                     i2l8587:
 25007                           
 25008                           ;usb_device.c: 2408: }
 25009                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25010  014D4C  EE20 F002          	lfsr	2,2
 25011  014D50  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25012  014D52  26D9               	addwf	fsr2l,f,c
 25013  014D54  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25014  014D56  22DA               	addwfc	fsr2h,f,c
 25015  014D58  0E30               	movlw	48
 25016  014D5A  6EDE               	movwf	postinc2,c
 25017  014D5C  0E0D               	movlw	13
 25018  014D5E  6EDD               	movwf	postdec2,c
 25019                           
 25020                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 25021  014D60  EC98  F0AD         	call	_USBCtrlTrfSetupHandler	;wreg free
 25022                           
 25023                           ;usb_device.c: 2413: }
 25024  014D64  0012               	return	
 25025  014D66                     i2l8591:
 25026                           
 25027                           ;usb_device.c: 2414: else
 25028                           ;usb_device.c: 2415: {
 25029                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 25030  014D66  EC3F  F0B2         	call	_USBCtrlTrfOutHandler	;wreg free
 25031                           
 25032                           ;usb_device.c: 2418: }
 25033                           ;usb_device.c: 2419: }
 25034  014D6A  0012               	return	
 25035  014D6C                     i2l8593:
 25036                           
 25037                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 25038  014D6C  502C               	movf	_USTATcopy,w,c	;volatile
 25039  014D6E  0BFD               	andlw	253
 25040  014D70  0A04               	xorlw	4
 25041  014D72  A4D8               	btfss	status,2,c
 25042  014D74  0012               	return	
 25043                           
 25044                           ;usb_device.c: 2421: {
 25045                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 25046  014D76  ECEB  F0A7         	call	_USBCtrlTrfInHandler	;wreg free
 25047  014D7A  0012               	return	
 25048  014D7C                     __end_of_USBCtrlEPService:
 25049                           	opt stack 0
 25050                           pclatu	equ	0xFFB
 25051                           pclath	equ	0xFFA
 25052                           tblptru	equ	0xFF8
 25053                           tblptrh	equ	0xFF7
 25054                           tblptrl	equ	0xFF6
 25055                           tablat	equ	0xFF5
 25056                           prodh	equ	0xFF4
 25057                           prodl	equ	0xFF3
 25058                           intcon	equ	0xFF2
 25059                           intcon2	equ	0xFF1
 25060                           postinc0	equ	0xFEE
 25061                           fsr0h	equ	0xFEA
 25062                           fsr0l	equ	0xFE9
 25063                           wreg	equ	0xFE8
 25064                           indf1	equ	0xFE7
 25065                           postinc1	equ	0xFE6
 25066                           postdec1	equ	0xFE5
 25067                           fsr1h	equ	0xFE2
 25068                           fsr1l	equ	0xFE1
 25069                           indf2	equ	0xFDF
 25070                           postinc2	equ	0xFDE
 25071                           postdec2	equ	0xFDD
 25072                           plusw2	equ	0xFDB
 25073                           fsr2h	equ	0xFDA
 25074                           fsr2l	equ	0xFD9
 25075                           status	equ	0xFD8
 25076                           
 25077 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25078 ;; Defined at:
 25079 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 25080 ;; Parameters:    Size  Location     Type
 25081 ;;		None
 25082 ;; Auto vars:     Size  Location     Type
 25083 ;;		None
 25084 ;; Return value:  Size  Location     Type
 25085 ;;		None               void
 25086 ;; Registers used:
 25087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25088 ;; Tracked objects:
 25089 ;;		On entry : 0/0
 25090 ;;		On exit  : 0/0
 25091 ;;		Unchanged: 0/0
 25092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25097 ;;Total ram usage:        0 bytes
 25098 ;; Hardware stack levels used:    1
 25099 ;; Hardware stack levels required when called:    6
 25100 ;; This function calls:
 25101 ;;		_USBCheckStdRequest
 25102 ;;		_USBCtrlEPServiceComplete
 25103 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25104 ;; This function is called by:
 25105 ;;		_USBCtrlEPService
 25106 ;; This function uses a non-reentrant model
 25107 ;;
 25108                           
 25109                           	psect	text109
 25110  015B30                     __ptext109:
 25111                           	opt stack 0
 25112  015B30                     _USBCtrlTrfSetupHandler:
 25113                           	opt stack 11
 25114                           
 25115                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25116                           
 25117                           ;incstack = 0
 25118  015B30  0E00               	movlw	0
 25119  015B32  6E22               	movwf	_shortPacketStatus,c	;volatile
 25120                           
 25121                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25122  015B34  0E00               	movlw	0
 25123  015B36  6E13               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25124                           
 25125                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25126  015B38  0E00               	movlw	0
 25127  015B3A  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25128                           
 25129                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25130  015B3C  0E00               	movlw	0
 25131  015B3E  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25132                           
 25133                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25134  015B40  0E00               	movlw	0
 25135  015B42  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25136                           
 25137                           ;usb_device.c: 2479: controlTransferState = 0;
 25138  015B44  0E00               	movlw	0
 25139  015B46  6E18               	movwf	_controlTransferState,c	;volatile
 25140                           
 25141                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25142  015B48  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25143  015B4C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25144  015B50  0E7F               	movlw	127
 25145  015B52  16DF               	andwf	indf2,f,c
 25146                           
 25147                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25148  015B54  0E04               	movlw	4
 25149  015B56  0100               	movlb	0	; () banked
 25150  015B58  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25154  015B5A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25155  015B5E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25156  015B62  0E7F               	movlw	127
 25157  015B64  16DF               	andwf	indf2,f,c
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25161  015B66  0E04               	movlw	4
 25162  015B68  0100               	movlb	0	; () banked
 25163  015B6A  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25164                           
 25165                           ; BSR set to: 0
 25166                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25167  015B6C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25168  015B70  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25169  015B74  0E7F               	movlw	127
 25170  015B76  16DF               	andwf	indf2,f,c
 25171                           
 25172                           ; BSR set to: 0
 25173                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25174  015B78  0E00               	movlw	0
 25175  015B7A  0100               	movlb	0	; () banked
 25176  015B7C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25177                           
 25178                           ; BSR set to: 0
 25179                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25180  015B7E  0E00               	movlw	0
 25181  015B80  0100               	movlb	0	; () banked
 25182  015B82  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25183  015B84  0E00               	movlw	0
 25184  015B86  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25185                           
 25186                           ; BSR set to: 0
 25187                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25188  015B88  0E00               	movlw	0
 25189  015B8A  0100               	movlb	0	; () banked
 25190  015B8C  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25194  015B8E  0E00               	movlw	0
 25195  015B90  0100               	movlb	0	; () banked
 25196  015B92  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25197  015B94  0E00               	movlw	0
 25198  015B96  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;usb_device.c: 2503: USBCheckStdRequest();
 25202  015B98  ECB1  F0A0         	call	_USBCheckStdRequest	;wreg free
 25203                           
 25204                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25205  015B9C  0E00               	movlw	0
 25206  015B9E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25207  015BA0  0E03               	movlw	3
 25208  015BA2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25209  015BA4  0E00               	movlw	0
 25210  015BA6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25211  015BA8  0E00               	movlw	0
 25212  015BAA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25213  015BAC  0E00               	movlw	0
 25214  015BAE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25215  015BB0  0E00               	movlw	0
 25216  015BB2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25217  015BB4  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25218                           
 25219                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25220  015BB8  ECBE  F09F         	call	_USBCtrlEPServiceComplete	;wreg free
 25221  015BBC  0012               	return		;funcret
 25222  015BBE                     __end_of_USBCtrlTrfSetupHandler:
 25223                           	opt stack 0
 25224                           pclatu	equ	0xFFB
 25225                           pclath	equ	0xFFA
 25226                           tblptru	equ	0xFF8
 25227                           tblptrh	equ	0xFF7
 25228                           tblptrl	equ	0xFF6
 25229                           tablat	equ	0xFF5
 25230                           prodh	equ	0xFF4
 25231                           prodl	equ	0xFF3
 25232                           intcon	equ	0xFF2
 25233                           intcon2	equ	0xFF1
 25234                           postinc0	equ	0xFEE
 25235                           fsr0h	equ	0xFEA
 25236                           fsr0l	equ	0xFE9
 25237                           wreg	equ	0xFE8
 25238                           indf1	equ	0xFE7
 25239                           postinc1	equ	0xFE6
 25240                           postdec1	equ	0xFE5
 25241                           fsr1h	equ	0xFE2
 25242                           fsr1l	equ	0xFE1
 25243                           indf2	equ	0xFDF
 25244                           postinc2	equ	0xFDE
 25245                           postdec2	equ	0xFDD
 25246                           plusw2	equ	0xFDB
 25247                           fsr2h	equ	0xFDA
 25248                           fsr2l	equ	0xFD9
 25249                           status	equ	0xFD8
 25250                           
 25251 ;; *************** function _USBCtrlEPServiceComplete *****************
 25252 ;; Defined at:
 25253 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 25254 ;; Parameters:    Size  Location     Type
 25255 ;;		None
 25256 ;; Auto vars:     Size  Location     Type
 25257 ;;		None
 25258 ;; Return value:  Size  Location     Type
 25259 ;;		None               void
 25260 ;; Registers used:
 25261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25262 ;; Tracked objects:
 25263 ;;		On entry : 0/0
 25264 ;;		On exit  : 0/0
 25265 ;;		Unchanged: 0/0
 25266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25271 ;;Total ram usage:        0 bytes
 25272 ;; Hardware stack levels used:    1
 25273 ;; Hardware stack levels required when called:    2
 25274 ;; This function calls:
 25275 ;;		_USBCtrlEPAllowDataStage
 25276 ;;		_USBCtrlEPAllowStatusStage
 25277 ;; This function is called by:
 25278 ;;		_USBCtrlTrfSetupHandler
 25279 ;; This function uses a non-reentrant model
 25280 ;;
 25281                           
 25282                           	psect	text110
 25283  013F7C                     __ptext110:
 25284                           	opt stack 0
 25285  013F7C                     _USBCtrlEPServiceComplete:
 25286                           	opt stack 14
 25287                           
 25288                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25289                           
 25290                           ;incstack = 0
 25291  013F7C  9865               	bcf	3941,4,c	;volatile
 25292                           
 25293                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25294  013F7E  0100               	movlb	0	; () banked
 25295  013F80  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25296  013F82  D039               	goto	i2l1525
 25297                           
 25298                           ; BSR set to: 0
 25299                           ;usb_device.c: 1629: {
 25300                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25301  013F84  0100               	movlb	0	; () banked
 25302  013F86  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25303  013F88  D00B               	goto	i2l7295
 25304                           
 25305                           ; BSR set to: 0
 25306                           ;usb_device.c: 1631: {
 25307                           ;usb_device.c: 1632: controlTransferState = 2;
 25308  013F8A  0E02               	movlw	2
 25309  013F8C  6E18               	movwf	_controlTransferState,c	;volatile
 25310                           
 25311                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25312  013F8E  5012               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25313  013F90  B4D8               	btfsc	status,2,c
 25314                           
 25315                           ; BSR set to: 0
 25316                           ;usb_device.c: 1644: {
 25317                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25318  013F92  ECDD  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25319                           
 25320                           ;usb_device.c: 1646: }
 25321                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25322  013F96  0E00               	movlw	0
 25323  013F98  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25324                           
 25325                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25326  013F9A  0E00               	movlw	0
 25327  013F9C  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25328                           
 25329                           ;usb_device.c: 1652: }
 25330  013F9E  0012               	return	
 25331  013FA0                     i2l7295:
 25332                           
 25333                           ;usb_device.c: 1653: else
 25334                           ;usb_device.c: 1654: {
 25335                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25336  013FA0  EE20 F001          	lfsr	2,1
 25337  013FA4  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25338  013FA6  26D9               	addwf	fsr2l,f,c
 25339  013FA8  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25340  013FAA  22DA               	addwfc	fsr2h,f,c
 25341  013FAC  0E08               	movlw	8
 25342  013FAE  6EDF               	movwf	indf2,c
 25343                           
 25344                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25345  013FB0  EE20 F002          	lfsr	2,2
 25346  013FB4  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25347  013FB6  26D9               	addwf	fsr2l,f,c
 25348  013FB8  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25349  013FBA  22DA               	addwfc	fsr2h,f,c
 25350  013FBC  0E30               	movlw	48
 25351  013FBE  6EDE               	movwf	postinc2,c
 25352  013FC0  0E0D               	movlw	13
 25353  013FC2  6EDD               	movwf	postdec2,c
 25354                           
 25355                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25356  013FC4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25357  013FC8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25358  013FCC  0E0C               	movlw	12
 25359  013FCE  6EDF               	movwf	indf2,c
 25360                           
 25361                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25362  013FD0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25363  013FD4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25364  013FD8  0E00               	movlw	0
 25365  013FDA  8EDB               	bsf	plusw2,7,c
 25366                           
 25367                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25368  013FDC  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25369  013FE0  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25370  013FE4  0E04               	movlw	4
 25371  013FE6  6EDF               	movwf	indf2,c
 25372                           
 25373                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25374  013FE8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25375  013FEC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25376  013FF0  0E00               	movlw	0
 25377  013FF2  8EDB               	bsf	plusw2,7,c
 25378                           
 25379                           ;usb_device.c: 1665: }
 25380                           ;usb_device.c: 1666: }
 25381  013FF4  0012               	return	
 25382  013FF6                     i2l1525:
 25383                           
 25384                           ; BSR set to: 0
 25385                           ;usb_device.c: 1667: else
 25386                           ;usb_device.c: 1668: {
 25387                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25388  013FF6  010D               	movlb	13	; () banked
 25389  013FF8  AF30               	btfss	48,7,b	;volatile
 25390  013FFA  D010               	goto	i2l7315
 25391                           
 25392                           ; BSR set to: 13
 25393                           ;usb_device.c: 1670: {
 25394                           ;usb_device.c: 1671: controlTransferState = 1;
 25395  013FFC  0E01               	movlw	1
 25396  013FFE  6E18               	movwf	_controlTransferState,c	;volatile
 25397                           
 25398                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25399  014000  5011               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25400  014002  B4D8               	btfsc	status,2,c
 25401                           
 25402                           ; BSR set to: 13
 25403                           ;usb_device.c: 1686: {
 25404                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25405  014004  ECDD  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25406                           
 25407                           ;usb_device.c: 1688: }
 25408                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25409  014008  0E00               	movlw	0
 25410  01400A  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25411                           
 25412                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25413  01400C  0E00               	movlw	0
 25414  01400E  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25415                           
 25416                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25417  014010  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25418  014012  A4D8               	btfss	status,2,c
 25419  014014  0012               	return	
 25420                           
 25421                           ;usb_device.c: 1713: {
 25422                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25423  014016  EC89  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25424                           
 25425                           ;usb_device.c: 1715: }
 25426                           ;usb_device.c: 1716: }
 25427  01401A  0012               	return	
 25428  01401C                     i2l7315:
 25429                           
 25430                           ;usb_device.c: 1717: else
 25431                           ;usb_device.c: 1718: {
 25432                           ;usb_device.c: 1729: controlTransferState = 2;
 25433  01401C  0E02               	movlw	2
 25434  01401E  6E18               	movwf	_controlTransferState,c	;volatile
 25435                           
 25436                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25437  014020  EE20 F001          	lfsr	2,1
 25438  014024  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25439  014026  26D9               	addwf	fsr2l,f,c
 25440  014028  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25441  01402A  22DA               	addwfc	fsr2h,f,c
 25442  01402C  0E08               	movlw	8
 25443  01402E  6EDF               	movwf	indf2,c
 25444                           
 25445                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25446  014030  EE20 F002          	lfsr	2,2
 25447  014034  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25448  014036  26D9               	addwf	fsr2l,f,c
 25449  014038  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25450  01403A  22DA               	addwfc	fsr2h,f,c
 25451  01403C  0E30               	movlw	48
 25452  01403E  6EDE               	movwf	postinc2,c
 25453  014040  0E0D               	movlw	13
 25454  014042  6EDD               	movwf	postdec2,c
 25455                           
 25456                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25457  014044  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25458  014048  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25459  01404C  0E04               	movlw	4
 25460  01404E  6EDF               	movwf	indf2,c
 25461                           
 25462                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25463  014050  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25464  014054  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25465  014058  0E00               	movlw	0
 25466  01405A  8EDB               	bsf	plusw2,7,c
 25467                           
 25468                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 25469  01405C  0E00               	movlw	0
 25470  01405E  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25471                           
 25472                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 25473  014060  0E00               	movlw	0
 25474  014062  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25475                           
 25476                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 25477  014064  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25478  014066  A4D8               	btfss	status,2,c
 25479  014068  0012               	return	
 25480                           
 25481                           ;usb_device.c: 1741: {
 25482                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 25483  01406A  EC89  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25484  01406E  0012               	return	
 25485  014070                     __end_of_USBCtrlEPServiceComplete:
 25486                           	opt stack 0
 25487                           pclatu	equ	0xFFB
 25488                           pclath	equ	0xFFA
 25489                           tblptru	equ	0xFF8
 25490                           tblptrh	equ	0xFF7
 25491                           tblptrl	equ	0xFF6
 25492                           tablat	equ	0xFF5
 25493                           prodh	equ	0xFF4
 25494                           prodl	equ	0xFF3
 25495                           intcon	equ	0xFF2
 25496                           intcon2	equ	0xFF1
 25497                           postinc0	equ	0xFEE
 25498                           fsr0h	equ	0xFEA
 25499                           fsr0l	equ	0xFE9
 25500                           wreg	equ	0xFE8
 25501                           indf1	equ	0xFE7
 25502                           postinc1	equ	0xFE6
 25503                           postdec1	equ	0xFE5
 25504                           fsr1h	equ	0xFE2
 25505                           fsr1l	equ	0xFE1
 25506                           indf2	equ	0xFDF
 25507                           postinc2	equ	0xFDE
 25508                           postdec2	equ	0xFDD
 25509                           plusw2	equ	0xFDB
 25510                           fsr2h	equ	0xFDA
 25511                           fsr2l	equ	0xFD9
 25512                           status	equ	0xFD8
 25513                           
 25514 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25515 ;; Defined at:
 25516 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 25517 ;; Parameters:    Size  Location     Type
 25518 ;;		None
 25519 ;; Auto vars:     Size  Location     Type
 25520 ;;		None
 25521 ;; Return value:  Size  Location     Type
 25522 ;;		None               void
 25523 ;; Registers used:
 25524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25525 ;; Tracked objects:
 25526 ;;		On entry : 0/0
 25527 ;;		On exit  : 0/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25534 ;;Total ram usage:        0 bytes
 25535 ;; Hardware stack levels used:    1
 25536 ;; Hardware stack levels required when called:    1
 25537 ;; This function calls:
 25538 ;;		_USBCtrlTrfTxService
 25539 ;; This function is called by:
 25540 ;;		_USBCtrlEPServiceComplete
 25541 ;; This function uses a non-reentrant model
 25542 ;;
 25543                           
 25544                           	psect	text111
 25545  0157BA                     __ptext111:
 25546                           	opt stack 0
 25547  0157BA                     _USBCtrlEPAllowDataStage:
 25548                           	opt stack 14
 25549                           
 25550                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 25551                           
 25552                           ;incstack = 0
 25553  0157BA  0E00               	movlw	0
 25554  0157BC  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25555                           
 25556                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 25557  0157BE  0E00               	movlw	0
 25558  0157C0  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25559                           
 25560                           ;usb_device.c: 1493: if(controlTransferState == 2)
 25561  0157C2  0E02               	movlw	2
 25562  0157C4  1818               	xorwf	_controlTransferState,w,c	;volatile
 25563  0157C6  A4D8               	btfss	status,2,c
 25564  0157C8  D01F               	goto	i2l7057
 25565                           
 25566                           ;usb_device.c: 1494: {
 25567                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 25568  0157CA  EE20 F001          	lfsr	2,1
 25569  0157CE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25570  0157D0  26D9               	addwf	fsr2l,f,c
 25571  0157D2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25572  0157D4  22DA               	addwfc	fsr2h,f,c
 25573  0157D6  0E08               	movlw	8
 25574  0157D8  6EDF               	movwf	indf2,c
 25575                           
 25576                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25577  0157DA  EE20 F002          	lfsr	2,2
 25578  0157DE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25579  0157E0  26D9               	addwf	fsr2l,f,c
 25580  0157E2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25581  0157E4  22DA               	addwfc	fsr2h,f,c
 25582  0157E6  0E38               	movlw	56
 25583  0157E8  6EDE               	movwf	postinc2,c
 25584  0157EA  0E0D               	movlw	13
 25585  0157EC  6EDD               	movwf	postdec2,c
 25586                           
 25587                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25588  0157EE  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25589  0157F2  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25590  0157F6  0E48               	movlw	72
 25591  0157F8  6EDF               	movwf	indf2,c
 25592                           
 25593                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25594  0157FA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25595  0157FE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25596  015802  0E00               	movlw	0
 25597  015804  8EDB               	bsf	plusw2,7,c
 25598                           
 25599                           ;usb_device.c: 1500: }
 25600  015806  0012               	return	
 25601  015808                     i2l7057:
 25602                           
 25603                           ;usb_device.c: 1501: else
 25604                           ;usb_device.c: 1502: {
 25605                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25606  015808  0100               	movlb	0	; () banked
 25607  01580A  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25608  01580C  010D               	movlb	13	; () banked
 25609  01580E  5D36               	subwf	54,w,b	;volatile
 25610  015810  0100               	movlb	0	; () banked
 25611  015812  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25612  015814  010D               	movlb	13	; () banked
 25613  015816  5937               	subwfb	55,w,b	;volatile
 25614  015818  B0D8               	btfsc	status,0,c
 25615  01581A  D004               	goto	i2l7061
 25616                           
 25617                           ; BSR set to: 13
 25618                           ;usb_device.c: 1506: {
 25619                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 25620  01581C  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 25621  015820  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 25622  015824                     i2l7061:
 25623                           
 25624                           ; BSR set to: 13
 25625                           ;usb_device.c: 1508: }
 25626                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 25627  015824  ECF5  F0A2         	call	_USBCtrlTrfTxService	;wreg free
 25628                           
 25629                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25630  015828  0100               	movlb	0	; () banked
 25631  01582A  EE20 F002          	lfsr	2,2
 25632  01582E  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 25633  015830  26D9               	addwf	fsr2l,f,c
 25634  015832  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25635  015834  22DA               	addwfc	fsr2h,f,c
 25636  015836  0E38               	movlw	56
 25637  015838  6EDE               	movwf	postinc2,c
 25638  01583A  0E0D               	movlw	13
 25639  01583C  6EDD               	movwf	postdec2,c
 25640                           
 25641                           ; BSR set to: 0
 25642                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25643  01583E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25644  015842  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25645  015846  0E48               	movlw	72
 25646  015848  6EDF               	movwf	indf2,c
 25647                           
 25648                           ; BSR set to: 0
 25649                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25650  01584A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25651  01584E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25652  015852  0E00               	movlw	0
 25653  015854  8EDB               	bsf	plusw2,7,c
 25654  015856  0012               	return	
 25655  015858                     __end_of_USBCtrlEPAllowDataStage:
 25656                           	opt stack 0
 25657                           pclatu	equ	0xFFB
 25658                           pclath	equ	0xFFA
 25659                           tblptru	equ	0xFF8
 25660                           tblptrh	equ	0xFF7
 25661                           tblptrl	equ	0xFF6
 25662                           tablat	equ	0xFF5
 25663                           prodh	equ	0xFF4
 25664                           prodl	equ	0xFF3
 25665                           intcon	equ	0xFF2
 25666                           intcon2	equ	0xFF1
 25667                           postinc0	equ	0xFEE
 25668                           fsr0h	equ	0xFEA
 25669                           fsr0l	equ	0xFE9
 25670                           wreg	equ	0xFE8
 25671                           indf1	equ	0xFE7
 25672                           postinc1	equ	0xFE6
 25673                           postdec1	equ	0xFE5
 25674                           fsr1h	equ	0xFE2
 25675                           fsr1l	equ	0xFE1
 25676                           indf2	equ	0xFDF
 25677                           postinc2	equ	0xFDE
 25678                           postdec2	equ	0xFDD
 25679                           plusw2	equ	0xFDB
 25680                           fsr2h	equ	0xFDA
 25681                           fsr2l	equ	0xFD9
 25682                           status	equ	0xFD8
 25683                           
 25684 ;; *************** function _USBCheckStdRequest *****************
 25685 ;; Defined at:
 25686 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 25687 ;; Parameters:    Size  Location     Type
 25688 ;;		None
 25689 ;; Auto vars:     Size  Location     Type
 25690 ;;		None
 25691 ;; Return value:  Size  Location     Type
 25692 ;;		None               void
 25693 ;; Registers used:
 25694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25695 ;; Tracked objects:
 25696 ;;		On entry : 0/0
 25697 ;;		On exit  : 0/0
 25698 ;;		Unchanged: 0/0
 25699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25704 ;;Total ram usage:        0 bytes
 25705 ;; Hardware stack levels used:    1
 25706 ;; Hardware stack levels required when called:    5
 25707 ;; This function calls:
 25708 ;;		_USBStdFeatureReqHandler
 25709 ;;		_USBStdGetDscHandler
 25710 ;;		_USBStdGetStatusHandler
 25711 ;;		_USBStdSetCfgHandler
 25712 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25713 ;; This function is called by:
 25714 ;;		_USBCtrlTrfSetupHandler
 25715 ;; This function uses a non-reentrant model
 25716 ;;
 25717                           
 25718                           	psect	text112
 25719  014162                     __ptext112:
 25720                           	opt stack 0
 25721  014162                     _USBCheckStdRequest:
 25722                           	opt stack 11
 25723                           
 25724                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 25725                           
 25726                           ;incstack = 0
 25727  014162  010D               	movlb	13	; () banked
 25728  014164  3930               	swapf	48,w,b	;volatile
 25729  014166  32E8               	rrcf	wreg,f,c
 25730  014168  0B03               	andlw	3
 25731  01416A  0900               	iorlw	0
 25732  01416C  A4D8               	btfss	status,2,c
 25733  01416E  0012               	return	
 25734  014170  D04F               	goto	i2l7413
 25735  014172                     i2l1652:
 25736                           
 25737                           ; BSR set to: 13
 25738                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 25739  014172  0100               	movlb	0	; () banked
 25740  014174  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25741                           
 25742                           ; BSR set to: 0
 25743                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 25744  014176  0E08               	movlw	8
 25745  014178  6E14               	movwf	_USBDeviceState,c	;volatile
 25746                           
 25747                           ;usb_device.c: 2699: break;
 25748  01417A  0012               	return	
 25749  01417C                     i2l7383:
 25750                           
 25751                           ;usb_device.c: 2701: USBStdGetDscHandler();
 25752  01417C  ECFF  F099         	call	_USBStdGetDscHandler	;wreg free
 25753                           
 25754                           ;usb_device.c: 2702: break;
 25755  014180  0012               	return	
 25756  014182                     i2l7385:
 25757                           
 25758                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 25759  014182  EC14  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 25760                           
 25761                           ;usb_device.c: 2705: break;
 25762  014186  0012               	return	
 25763  014188                     i2l7387:
 25764                           
 25765                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25766  014188  0E2B               	movlw	low _USBActiveConfiguration
 25767  01418A  0100               	movlb	0	; () banked
 25768  01418C  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25769  01418E  0E00               	movlw	high _USBActiveConfiguration
 25770  014190  0100               	movlb	0	; () banked
 25771  014192  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25772                           
 25773                           ; BSR set to: 0
 25774                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25775  014194  0100               	movlb	0	; () banked
 25776  014196  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25777                           
 25778                           ; BSR set to: 0
 25779                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 25780  014198  0E01               	movlw	1
 25781  01419A  0100               	movlb	0	; () banked
 25782  01419C  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25783                           
 25784                           ; BSR set to: 0
 25785                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 25786  01419E  0100               	movlb	0	; () banked
 25787  0141A0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25788                           
 25789                           ;usb_device.c: 2711: break;
 25790  0141A2  0012               	return	
 25791  0141A4                     i2l7395:
 25792                           
 25793                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 25794  0141A4  EC28  F0AA         	call	_USBStdGetStatusHandler	;wreg free
 25795                           
 25796                           ;usb_device.c: 2714: break;
 25797  0141A8  0012               	return	
 25798  0141AA                     i2l7397:
 25799                           
 25800                           ;usb_device.c: 2716: case 3:
 25801                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 25802  0141AA  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 25803                           
 25804                           ;usb_device.c: 2718: break;
 25805  0141AE  0012               	return	
 25806  0141B0                     i2l7399:
 25807                           
 25808                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25809  0141B0  010D               	movlb	13	; () banked
 25810  0141B2  5134               	movf	52,w,b	;volatile
 25811  0141B4  0D01               	mullw	1
 25812  0141B6  0E8F               	movlw	low _USBAlternateInterface
 25813  0141B8  24F3               	addwf	prodl,w,c
 25814  0141BA  0100               	movlb	0	; () banked
 25815  0141BC  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25816  0141BE  0E01               	movlw	high _USBAlternateInterface
 25817  0141C0  20F4               	addwfc	prodh,w,c
 25818  0141C2  0100               	movlb	0	; () banked
 25819  0141C4  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25820                           
 25821                           ; BSR set to: 0
 25822                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25823  0141C6  0100               	movlb	0	; () banked
 25824  0141C8  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25825                           
 25826                           ; BSR set to: 0
 25827                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 25828  0141CA  0E01               	movlw	1
 25829  0141CC  0100               	movlb	0	; () banked
 25830  0141CE  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25831                           
 25832                           ; BSR set to: 0
 25833                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 25834  0141D0  0100               	movlb	0	; () banked
 25835  0141D2  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25836                           
 25837                           ;usb_device.c: 2724: break;
 25838  0141D4  0012               	return	
 25839  0141D6                     i2l1661:
 25840                           
 25841                           ; BSR set to: 13
 25842                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 25843  0141D6  0100               	movlb	0	; () banked
 25844  0141D8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25845                           
 25846                           ; BSR set to: 0
 25847                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25848  0141DA  010D               	movlb	13	; () banked
 25849  0141DC  5134               	movf	52,w,b	;volatile
 25850  0141DE  0D01               	mullw	1
 25851  0141E0  0E8F               	movlw	low _USBAlternateInterface
 25852  0141E2  24F3               	addwf	prodl,w,c
 25853  0141E4  6ED9               	movwf	fsr2l,c
 25854  0141E6  0E01               	movlw	high _USBAlternateInterface
 25855  0141E8  20F4               	addwfc	prodh,w,c
 25856  0141EA  6EDA               	movwf	fsr2h,c
 25857  0141EC  CD32 FFDF          	movff	3378,indf2	;volatile
 25858                           
 25859                           ;usb_device.c: 2728: break;
 25860  0141F0  0012               	return	
 25861  0141F2                     i2l7409:
 25862                           
 25863                           ; BSR set to: 13
 25864                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25865  0141F2  0E00               	movlw	0
 25866  0141F4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25867  0141F6  0E02               	movlw	2
 25868  0141F8  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25869  0141FA  0E00               	movlw	0
 25870  0141FC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25871  0141FE  0E00               	movlw	0
 25872  014200  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25873  014202  0E00               	movlw	0
 25874  014204  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25875  014206  0E00               	movlw	0
 25876  014208  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25877  01420A  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25878                           
 25879                           ;usb_device.c: 2735: }
 25880                           
 25881                           ;usb_device.c: 2734: break;
 25882                           
 25883                           ;usb_device.c: 2733: default:
 25884                           
 25885                           ;usb_device.c: 2732: case 12:
 25886                           
 25887                           ;usb_device.c: 2731: break;
 25888  01420E  0012               	return	
 25889  014210                     i2l7413:
 25890  014210  010D               	movlb	13	; () banked
 25891  014212  5131               	movf	49,w,b	;volatile
 25892                           
 25893                           ; Switch size 1, requested type "space"
 25894                           ; Number of cases is 11, Range of values is 0 to 12
 25895                           ; switch strategies available:
 25896                           ; Name         Instructions Cycles
 25897                           ; simple_byte           34    18 (average)
 25898                           ;	Chosen strategy is simple_byte
 25899  014214  0A00               	xorlw	0	; case 0
 25900  014216  B4D8               	btfsc	status,2,c
 25901  014218  D7C5               	goto	i2l7395
 25902  01421A  0A01               	xorlw	1	; case 1
 25903  01421C  B4D8               	btfsc	status,2,c
 25904  01421E  D7C5               	goto	i2l7397
 25905  014220  0A02               	xorlw	2	; case 3
 25906  014222  B4D8               	btfsc	status,2,c
 25907  014224  D7C2               	goto	i2l7397
 25908  014226  0A06               	xorlw	6	; case 5
 25909  014228  B4D8               	btfsc	status,2,c
 25910  01422A  D7A3               	goto	i2l1652
 25911  01422C  0A03               	xorlw	3	; case 6
 25912  01422E  B4D8               	btfsc	status,2,c
 25913  014230  D7A5               	goto	i2l7383
 25914  014232  0A01               	xorlw	1	; case 7
 25915  014234  B4D8               	btfsc	status,2,c
 25916  014236  D7DD               	goto	i2l7409
 25917  014238  0A0F               	xorlw	15	; case 8
 25918  01423A  B4D8               	btfsc	status,2,c
 25919  01423C  D7A5               	goto	i2l7387
 25920  01423E  0A01               	xorlw	1	; case 9
 25921  014240  B4D8               	btfsc	status,2,c
 25922  014242  D79F               	goto	i2l7385
 25923  014244  0A03               	xorlw	3	; case 10
 25924  014246  B4D8               	btfsc	status,2,c
 25925  014248  D7B3               	goto	i2l7399
 25926  01424A  0A01               	xorlw	1	; case 11
 25927  01424C  B4D8               	btfsc	status,2,c
 25928  01424E  D7C3               	goto	i2l1661
 25929  014250  0A07               	xorlw	7	; case 12
 25930  014252  0012               	return	
 25931  014254                     __end_of_USBCheckStdRequest:
 25932                           	opt stack 0
 25933                           pclatu	equ	0xFFB
 25934                           pclath	equ	0xFFA
 25935                           tblptru	equ	0xFF8
 25936                           tblptrh	equ	0xFF7
 25937                           tblptrl	equ	0xFF6
 25938                           tablat	equ	0xFF5
 25939                           prodh	equ	0xFF4
 25940                           prodl	equ	0xFF3
 25941                           intcon	equ	0xFF2
 25942                           intcon2	equ	0xFF1
 25943                           postinc0	equ	0xFEE
 25944                           fsr0h	equ	0xFEA
 25945                           fsr0l	equ	0xFE9
 25946                           wreg	equ	0xFE8
 25947                           indf1	equ	0xFE7
 25948                           postinc1	equ	0xFE6
 25949                           postdec1	equ	0xFE5
 25950                           fsr1h	equ	0xFE2
 25951                           fsr1l	equ	0xFE1
 25952                           indf2	equ	0xFDF
 25953                           postinc2	equ	0xFDE
 25954                           postdec2	equ	0xFDD
 25955                           plusw2	equ	0xFDB
 25956                           fsr2h	equ	0xFDA
 25957                           fsr2l	equ	0xFD9
 25958                           status	equ	0xFD8
 25959                           
 25960 ;; *************** function _USBStdSetCfgHandler *****************
 25961 ;; Defined at:
 25962 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 25963 ;; Parameters:    Size  Location     Type
 25964 ;;		None
 25965 ;; Auto vars:     Size  Location     Type
 25966 ;;  i               1   20[COMRAM] unsigned char 
 25967 ;; Return value:  Size  Location     Type
 25968 ;;		None               void
 25969 ;; Registers used:
 25970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25971 ;; Tracked objects:
 25972 ;;		On entry : 0/0
 25973 ;;		On exit  : 0/0
 25974 ;;		Unchanged: 0/0
 25975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25980 ;;Total ram usage:        1 bytes
 25981 ;; Hardware stack levels used:    1
 25982 ;; Hardware stack levels required when called:    4
 25983 ;; This function calls:
 25984 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25985 ;;		i2_memset
 25986 ;; This function is called by:
 25987 ;;		_USBCheckStdRequest
 25988 ;; This function uses a non-reentrant model
 25989 ;;
 25990                           
 25991                           	psect	text113
 25992  014428                     __ptext113:
 25993                           	opt stack 0
 25994  014428                     _USBStdSetCfgHandler:
 25995                           	opt stack 11
 25996                           
 25997                           ;usb_device.c: 1970: uint8_t i;
 25998                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 25999                           
 26000                           ;incstack = 0
 26001  014428  0100               	movlb	0	; () banked
 26002  01442A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26003                           
 26004                           ; BSR set to: 0
 26005                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 26006  01442C  0E27               	movlw	39
 26007  01442E  6E2D               	movwf	i2memset@p1,c
 26008  014430  0E0F               	movlw	15
 26009  014432  6E2E               	movwf	i2memset@p1+1,c
 26010  014434  0E00               	movlw	0
 26011  014436  6E30               	movwf	i2memset@c+1,c
 26012  014438  0E00               	movlw	0
 26013  01443A  6E2F               	movwf	i2memset@c,c
 26014  01443C  0E00               	movlw	0
 26015  01443E  6E32               	movwf	i2memset@n+1,c
 26016  014440  0E02               	movlw	2
 26017  014442  6E31               	movwf	i2memset@n,c
 26018  014444  EC20  F0B5         	call	i2_memset	;wreg free
 26019                           
 26020                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26021  014448  0E00               	movlw	0
 26022  01444A  6E2D               	movwf	i2memset@p1,c
 26023  01444C  0E0D               	movlw	13
 26024  01444E  6E2E               	movwf	i2memset@p1+1,c
 26025  014450  0E00               	movlw	0
 26026  014452  6E30               	movwf	i2memset@c+1,c
 26027  014454  0E00               	movlw	0
 26028  014456  6E2F               	movwf	i2memset@c,c
 26029  014458  0E00               	movlw	0
 26030  01445A  6E32               	movwf	i2memset@n+1,c
 26031  01445C  0E30               	movlw	48
 26032  01445E  6E31               	movwf	i2memset@n,c
 26033  014460  EC20  F0B5         	call	i2_memset	;wreg free
 26034                           
 26035                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 26036  014464  8C65               	bsf	3941,6,c	;volatile
 26037                           
 26038                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 26039  014466  0E00               	movlw	0
 26040  014468  6E41               	movwf	USBStdSetCfgHandler@i,c
 26041  01446A                     i2l7077:
 26042  01446A  0E02               	movlw	2
 26043  01446C  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26044  01446E  D001               	goto	i2l7081
 26045  014470  D016               	goto	i2l7087
 26046  014472                     i2l7081:
 26047                           
 26048                           ;usb_device.c: 1988: {
 26049                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26050  014472  5041               	movf	USBStdSetCfgHandler@i,w,c
 26051  014474  0D01               	mullw	1
 26052  014476  0E01               	movlw	low _ep_data_in
 26053  014478  24F3               	addwf	prodl,w,c
 26054  01447A  6ED9               	movwf	fsr2l,c
 26055  01447C  0E00               	movlw	high _ep_data_in
 26056  01447E  20F4               	addwfc	prodh,w,c
 26057  014480  6EDA               	movwf	fsr2h,c
 26058  014482  0E00               	movlw	0
 26059  014484  6EDF               	movwf	indf2,c
 26060                           
 26061                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26062  014486  5041               	movf	USBStdSetCfgHandler@i,w,c
 26063  014488  0D01               	mullw	1
 26064  01448A  0E04               	movlw	low _ep_data_out
 26065  01448C  24F3               	addwf	prodl,w,c
 26066  01448E  6ED9               	movwf	fsr2l,c
 26067  014490  0E00               	movlw	high _ep_data_out
 26068  014492  20F4               	addwfc	prodh,w,c
 26069  014494  6EDA               	movwf	fsr2h,c
 26070  014496  0E00               	movlw	0
 26071  014498  6EDF               	movwf	indf2,c
 26072  01449A  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26073  01449C  D7E6               	goto	i2l7077
 26074  01449E                     i2l7087:
 26075                           
 26076                           ;usb_device.c: 1991: }
 26077                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26078  01449E  0E8F               	movlw	low _USBAlternateInterface
 26079  0144A0  6E2D               	movwf	i2memset@p1,c
 26080  0144A2  0E01               	movlw	high _USBAlternateInterface
 26081  0144A4  6E2E               	movwf	i2memset@p1+1,c
 26082  0144A6  0E00               	movlw	0
 26083  0144A8  6E30               	movwf	i2memset@c+1,c
 26084  0144AA  0E00               	movlw	0
 26085  0144AC  6E2F               	movwf	i2memset@c,c
 26086  0144AE  0E00               	movlw	0
 26087  0144B0  6E32               	movwf	i2memset@n+1,c
 26088  0144B2  0E02               	movlw	2
 26089  0144B4  6E31               	movwf	i2memset@n,c
 26090  0144B6  EC20  F0B5         	call	i2_memset	;wreg free
 26091                           
 26092                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26093  0144BA  9C65               	bcf	3941,6,c	;volatile
 26094                           
 26095                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26096  0144BC  0E08               	movlw	8
 26097  0144BE  0100               	movlb	0	; () banked
 26098  0144C0  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26099  0144C2  0E0D               	movlw	13
 26100  0144C4  0100               	movlb	0	; () banked
 26101  0144C6  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26102                           
 26103                           ; BSR set to: 0
 26104                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26105  0144C8  0E00               	movlw	0
 26106  0144CA  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26107  0144CC  0E0D               	movlw	13
 26108  0144CE  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26109                           
 26110                           ; BSR set to: 0
 26111                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26112  0144D0  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26113  0144D4  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26114                           
 26115                           ; BSR set to: 0
 26116                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26117  0144D8  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26121  0144DC  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26122  0144DE  A4D8               	btfss	status,2,c
 26123  0144E0  D003               	goto	i2l7103
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;usb_device.c: 2010: {
 26127                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26128  0144E2  0E10               	movlw	16
 26129  0144E4  6E14               	movwf	_USBDeviceState,c	;volatile
 26130                           
 26131                           ;usb_device.c: 2013: }
 26132  0144E6  0012               	return	
 26133  0144E8                     i2l7103:
 26134                           
 26135                           ; BSR set to: 0
 26136                           ;usb_device.c: 2014: else
 26137                           ;usb_device.c: 2015: {
 26138                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26139  0144E8  0E00               	movlw	0
 26140  0144EA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26141  0144EC  0E01               	movlw	1
 26142  0144EE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26143  0144F0  0E2B               	movlw	low _USBActiveConfiguration
 26144  0144F2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26145  0144F4  0E00               	movlw	high _USBActiveConfiguration
 26146  0144F6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26147  0144F8  0E00               	movlw	0
 26148  0144FA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26149  0144FC  0E01               	movlw	1
 26150  0144FE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26151  014500  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26152                           
 26153                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26154  014504  0E20               	movlw	32
 26155  014506  6E14               	movwf	_USBDeviceState,c	;volatile
 26156  014508  0012               	return	
 26157  01450A                     __end_of_USBStdSetCfgHandler:
 26158                           	opt stack 0
 26159                           pclatu	equ	0xFFB
 26160                           pclath	equ	0xFFA
 26161                           tblptru	equ	0xFF8
 26162                           tblptrh	equ	0xFF7
 26163                           tblptrl	equ	0xFF6
 26164                           tablat	equ	0xFF5
 26165                           prodh	equ	0xFF4
 26166                           prodl	equ	0xFF3
 26167                           intcon	equ	0xFF2
 26168                           intcon2	equ	0xFF1
 26169                           postinc0	equ	0xFEE
 26170                           fsr0h	equ	0xFEA
 26171                           fsr0l	equ	0xFE9
 26172                           wreg	equ	0xFE8
 26173                           indf1	equ	0xFE7
 26174                           postinc1	equ	0xFE6
 26175                           postdec1	equ	0xFE5
 26176                           fsr1h	equ	0xFE2
 26177                           fsr1l	equ	0xFE1
 26178                           indf2	equ	0xFDF
 26179                           postinc2	equ	0xFDE
 26180                           postdec2	equ	0xFDD
 26181                           plusw2	equ	0xFDB
 26182                           fsr2h	equ	0xFDA
 26183                           fsr2l	equ	0xFD9
 26184                           status	equ	0xFD8
 26185                           
 26186 ;; *************** function i2_memset *****************
 26187 ;; Defined at:
 26188 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26189 ;; Parameters:    Size  Location     Type
 26190 ;;  p1              2    0[COMRAM] PTR void 
 26191 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26192 ;;  c               2    2[COMRAM] int 
 26193 ;;  n               2    4[COMRAM] unsigned int 
 26194 ;; Auto vars:     Size  Location     Type
 26195 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26196 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26197 ;; Return value:  Size  Location     Type
 26198 ;;                  2    0[COMRAM] PTR void 
 26199 ;; Registers used:
 26200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26201 ;; Tracked objects:
 26202 ;;		On entry : 0/0
 26203 ;;		On exit  : 0/0
 26204 ;;		Unchanged: 0/0
 26205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26209 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26210 ;;Total ram usage:        8 bytes
 26211 ;; Hardware stack levels used:    1
 26212 ;; This function calls:
 26213 ;;		Nothing
 26214 ;; This function is called by:
 26215 ;;		_USBStdSetCfgHandler
 26216 ;;		i2_USBDeviceInit
 26217 ;; This function uses a non-reentrant model
 26218 ;;
 26219                           
 26220                           	psect	text114
 26221  016A40                     __ptext114:
 26222                           	opt stack 0
 26223  016A40                     i2_memset:
 26224                           	opt stack 17
 26225                           
 26226                           ;incstack = 0
 26227  016A40  C02D  F033         	movff	i2memset@p1,i2memset@p
 26228  016A44  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26229  016A48  D008               	goto	i2l6739
 26230  016A4A                     i2l6735:
 26231  016A4A  C033  FFD9         	movff	i2memset@p,fsr2l
 26232  016A4E  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26233  016A52  C02F  FFDF         	movff	i2memset@c,indf2
 26234  016A56  4A33               	infsnz	i2memset@p,f,c
 26235  016A58  2A34               	incf	i2memset@p+1,f,c
 26236  016A5A                     i2l6739:
 26237  016A5A  0631               	decf	i2memset@n,f,c
 26238  016A5C  A0D8               	btfss	status,0,c
 26239  016A5E  0632               	decf	i2memset@n+1,f,c
 26240  016A60  2831               	incf	i2memset@n,w,c
 26241  016A62  E1F3               	bnz	i2l6735
 26242  016A64  2832               	incf	i2memset@n+1,w,c
 26243  016A66  B4D8               	btfsc	status,2,c
 26244  016A68  0012               	return	
 26245  016A6A  D7EF               	goto	i2l6735
 26246  016A6C                     __end_ofi2_memset:
 26247                           	opt stack 0
 26248                           pclatu	equ	0xFFB
 26249                           pclath	equ	0xFFA
 26250                           tblptru	equ	0xFF8
 26251                           tblptrh	equ	0xFF7
 26252                           tblptrl	equ	0xFF6
 26253                           tablat	equ	0xFF5
 26254                           prodh	equ	0xFF4
 26255                           prodl	equ	0xFF3
 26256                           intcon	equ	0xFF2
 26257                           intcon2	equ	0xFF1
 26258                           postinc0	equ	0xFEE
 26259                           fsr0h	equ	0xFEA
 26260                           fsr0l	equ	0xFE9
 26261                           wreg	equ	0xFE8
 26262                           indf1	equ	0xFE7
 26263                           postinc1	equ	0xFE6
 26264                           postdec1	equ	0xFE5
 26265                           fsr1h	equ	0xFE2
 26266                           fsr1l	equ	0xFE1
 26267                           indf2	equ	0xFDF
 26268                           postinc2	equ	0xFDE
 26269                           postdec2	equ	0xFDD
 26270                           plusw2	equ	0xFDB
 26271                           fsr2h	equ	0xFDA
 26272                           fsr2l	equ	0xFD9
 26273                           status	equ	0xFD8
 26274                           
 26275 ;; *************** function _USBStdGetStatusHandler *****************
 26276 ;; Defined at:
 26277 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 26278 ;; Parameters:    Size  Location     Type
 26279 ;;		None
 26280 ;; Auto vars:     Size  Location     Type
 26281 ;;  p               2    1[COMRAM] PTR struct __BDT
 26282 ;;		 -> NULL(0), BDT(48), 
 26283 ;; Return value:  Size  Location     Type
 26284 ;;		None               void
 26285 ;; Registers used:
 26286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26287 ;; Tracked objects:
 26288 ;;		On entry : 0/0
 26289 ;;		On exit  : 0/0
 26290 ;;		Unchanged: 0/0
 26291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26296 ;;Total ram usage:        3 bytes
 26297 ;; Hardware stack levels used:    1
 26298 ;; This function calls:
 26299 ;;		Nothing
 26300 ;; This function is called by:
 26301 ;;		_USBCheckStdRequest
 26302 ;; This function uses a non-reentrant model
 26303 ;;
 26304                           
 26305                           	psect	text115
 26306  015450                     __ptext115:
 26307                           	opt stack 0
 26308  015450                     _USBStdGetStatusHandler:
 26309                           	opt stack 15
 26310                           
 26311                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26312                           
 26313                           ;incstack = 0
 26314  015450  0E00               	movlw	0
 26315  015452  010D               	movlb	13	; () banked
 26316  015454  6F38               	movwf	56,b	;volatile
 26317                           
 26318                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26319  015456  0E00               	movlw	0
 26320  015458  010D               	movlb	13	; () banked
 26321  01545A  6F39               	movwf	57,b	;volatile
 26322                           
 26323                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26324  01545C  D03B               	goto	i2l7159
 26325  01545E                     i2l1588:
 26326                           
 26327                           ; BSR set to: 13
 26328                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26329  01545E  0100               	movlb	0	; () banked
 26330  015460  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26331                           
 26332                           ;usb_device.c: 2145: }
 26333                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26334                           
 26335                           ; BSR set to: 13
 26336                           
 26337                           ; BSR set to: 0
 26338                           ;usb_device.c: 2143: {
 26339                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26340                           
 26341                           ;usb_device.c: 2142: if(0 == 1)
 26342  015462  0410               	decf	_RemoteWakeup,w,c	;volatile
 26343  015464  A4D8               	btfss	status,2,c
 26344  015466  D042               	goto	i2l1591
 26345                           
 26346                           ;usb_device.c: 2148: {
 26347                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26348  015468  010D               	movlb	13	; () banked
 26349  01546A  8338               	bsf	56,1,b	;volatile
 26350                           
 26351                           ; BSR set to: 13
 26352                           ;usb_device.c: 2150: }
 26353                           ;usb_device.c: 2151: break;
 26354  01546C  D03F               	goto	i2l1591
 26355  01546E                     i2l1592:
 26356                           
 26357                           ; BSR set to: 13
 26358                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26359  01546E  0100               	movlb	0	; () banked
 26360  015470  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26361                           
 26362                           ;usb_device.c: 2154: break;
 26363  015472  D03C               	goto	i2l1591
 26364  015474                     i2l1593:
 26365                           
 26366                           ; BSR set to: 13
 26367                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26368  015474  0100               	movlb	0	; () banked
 26369  015476  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26370                           
 26371                           ;usb_device.c: 2160: {
 26372                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26373                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26374  015478  010D               	movlb	13	; () banked
 26375  01547A  BF34               	btfsc	52,7,b	;volatile
 26376  01547C  D00B               	goto	i2l7149
 26377                           
 26378                           ; BSR set to: 13
 26379                           ;usb_device.c: 2164: {
 26380                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26381  01547E  010D               	movlb	13	; () banked
 26382  015480  5134               	movf	52,w,b	;volatile
 26383  015482  0B0F               	andlw	15
 26384  015484  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26385  015486  502D               	movf	??_USBStdGetStatusHandler,w,c
 26386  015488  0D02               	mullw	2
 26387  01548A  0E00               	movlw	low _pBDTEntryOut
 26388  01548C  24F3               	addwf	prodl,w,c
 26389  01548E  6ED9               	movwf	fsr2l,c
 26390  015490  0E01               	movlw	high _pBDTEntryOut
 26391  015492  D00A               	goto	L8
 26392  015494                     i2l7149:
 26393                           
 26394                           ; BSR set to: 13
 26395                           ;usb_device.c: 2167: else
 26396                           ;usb_device.c: 2168: {
 26397                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26398  015494  010D               	movlb	13	; () banked
 26399  015496  5134               	movf	52,w,b	;volatile
 26400  015498  0B0F               	andlw	15
 26401  01549A  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26402  01549C  502D               	movf	??_USBStdGetStatusHandler,w,c
 26403  01549E  0D02               	mullw	2
 26404  0154A0  0EF5               	movlw	low _pBDTEntryIn
 26405  0154A2  24F3               	addwf	prodl,w,c
 26406  0154A4  6ED9               	movwf	fsr2l,c
 26407  0154A6  0E00               	movlw	high _pBDTEntryIn
 26408  0154A8                     L8:
 26409  0154A8  20F4               	addwfc	prodh,w,c
 26410  0154AA  6EDA               	movwf	fsr2h,c
 26411  0154AC  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26412  0154B0  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26413                           
 26414                           ; BSR set to: 13
 26415                           ;usb_device.c: 2170: }
 26416                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26417                           
 26418                           ; BSR set to: 13
 26419  0154B4  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26420  0154B8  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26421  0154BC  AEDF               	btfss	indf2,7,c
 26422  0154BE  D016               	goto	i2l1591
 26423                           
 26424                           ; BSR set to: 13
 26425  0154C0  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26426  0154C4  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26427  0154C8  A4DF               	btfss	indf2,2,c
 26428  0154CA  D010               	goto	i2l1591
 26429                           
 26430                           ; BSR set to: 13
 26431                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26432  0154CC  0E01               	movlw	1
 26433  0154CE  010D               	movlb	13	; () banked
 26434  0154D0  6F38               	movwf	56,b	;volatile
 26435                           
 26436                           ; BSR set to: 13
 26437                           ;usb_device.c: 2175: }
 26438                           ;usb_device.c: 2176: }
 26439                           
 26440                           ; BSR set to: 13
 26441                           ;usb_device.c: 2174: break;
 26442  0154D2  D00C               	goto	i2l1591
 26443  0154D4                     i2l7159:
 26444                           
 26445                           ; BSR set to: 13
 26446  0154D4  010D               	movlb	13	; () banked
 26447  0154D6  5130               	movf	48,w,b	;volatile
 26448  0154D8  0B1F               	andlw	31
 26449                           
 26450                           ; Switch size 1, requested type "space"
 26451                           ; Number of cases is 3, Range of values is 0 to 2
 26452                           ; switch strategies available:
 26453                           ; Name         Instructions Cycles
 26454                           ; simple_byte           10     6 (average)
 26455                           ;	Chosen strategy is simple_byte
 26456  0154DA  0A00               	xorlw	0	; case 0
 26457  0154DC  B4D8               	btfsc	status,2,c
 26458  0154DE  D7BF               	goto	i2l1588
 26459  0154E0  0A01               	xorlw	1	; case 1
 26460  0154E2  B4D8               	btfsc	status,2,c
 26461  0154E4  D7C4               	goto	i2l1592
 26462  0154E6  0A03               	xorlw	3	; case 2
 26463  0154E8  B4D8               	btfsc	status,2,c
 26464  0154EA  D7C4               	goto	i2l1593
 26465  0154EC                     i2l1591:
 26466                           
 26467                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 26468  0154EC  0100               	movlb	0	; () banked
 26469  0154EE  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26470  0154F0  0012               	return	
 26471                           
 26472                           ; BSR set to: 0
 26473                           ;usb_device.c: 2179: {
 26474                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26475  0154F2  0E38               	movlw	56
 26476  0154F4  0100               	movlb	0	; () banked
 26477  0154F6  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26478  0154F8  0E0D               	movlw	13
 26479  0154FA  0100               	movlb	0	; () banked
 26480  0154FC  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26481                           
 26482                           ; BSR set to: 0
 26483                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26484  0154FE  0100               	movlb	0	; () banked
 26485  015500  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26486                           
 26487                           ; BSR set to: 0
 26488                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 26489  015502  0E02               	movlw	2
 26490  015504  0100               	movlb	0	; () banked
 26491  015506  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26492  015508  0012               	return	
 26493  01550A                     __end_of_USBStdGetStatusHandler:
 26494                           	opt stack 0
 26495                           pclatu	equ	0xFFB
 26496                           pclath	equ	0xFFA
 26497                           tblptru	equ	0xFF8
 26498                           tblptrh	equ	0xFF7
 26499                           tblptrl	equ	0xFF6
 26500                           tablat	equ	0xFF5
 26501                           prodh	equ	0xFF4
 26502                           prodl	equ	0xFF3
 26503                           intcon	equ	0xFF2
 26504                           intcon2	equ	0xFF1
 26505                           postinc0	equ	0xFEE
 26506                           fsr0h	equ	0xFEA
 26507                           fsr0l	equ	0xFE9
 26508                           wreg	equ	0xFE8
 26509                           indf1	equ	0xFE7
 26510                           postinc1	equ	0xFE6
 26511                           postdec1	equ	0xFE5
 26512                           fsr1h	equ	0xFE2
 26513                           fsr1l	equ	0xFE1
 26514                           indf2	equ	0xFDF
 26515                           postinc2	equ	0xFDE
 26516                           postdec2	equ	0xFDD
 26517                           plusw2	equ	0xFDB
 26518                           fsr2h	equ	0xFDA
 26519                           fsr2l	equ	0xFD9
 26520                           status	equ	0xFD8
 26521                           
 26522 ;; *************** function _USBStdGetDscHandler *****************
 26523 ;; Defined at:
 26524 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 26525 ;; Parameters:    Size  Location     Type
 26526 ;;		None
 26527 ;; Auto vars:     Size  Location     Type
 26528 ;;		None
 26529 ;; Return value:  Size  Location     Type
 26530 ;;		None               void
 26531 ;; Registers used:
 26532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26533 ;; Tracked objects:
 26534 ;;		On entry : 0/0
 26535 ;;		On exit  : 0/0
 26536 ;;		Unchanged: 0/0
 26537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26542 ;;Total ram usage:        2 bytes
 26543 ;; Hardware stack levels used:    1
 26544 ;; This function calls:
 26545 ;;		Nothing
 26546 ;; This function is called by:
 26547 ;;		_USBCheckStdRequest
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text116
 26552  0133FE                     __ptext116:
 26553                           	opt stack 0
 26554  0133FE                     _USBStdGetDscHandler:
 26555                           	opt stack 15
 26556                           
 26557                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 26558                           
 26559                           ; BSR set to: 0
 26560                           ;incstack = 0
 26561  0133FE  0E80               	movlw	128
 26562  013400  010D               	movlb	13	; () banked
 26563  013402  1930               	xorwf	48,w,b	;volatile
 26564  013404  A4D8               	btfss	status,2,c
 26565  013406  0012               	return	
 26566                           
 26567                           ; BSR set to: 13
 26568                           ;usb_device.c: 2046: {
 26569                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26570  013408  0EC0               	movlw	192
 26571  01340A  0100               	movlb	0	; () banked
 26572  01340C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26573                           
 26574                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 26575  01340E  D092               	goto	i2l7137
 26576  013410                     i2l7111:
 26577                           
 26578                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26579  013410  0EC0               	movlw	low _device_dsc
 26580  013412  0100               	movlb	0	; () banked
 26581  013414  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26582  013416  0EFB               	movlw	high _device_dsc
 26583  013418  0100               	movlb	0	; () banked
 26584  01341A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26585                           
 26586                           ; BSR set to: 0
 26587                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 26588  01341C  0E00               	movlw	0
 26589  01341E  0100               	movlb	0	; () banked
 26590  013420  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26591  013422  0E12               	movlw	18
 26592  013424  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26593                           
 26594                           ;usb_device.c: 2058: break;
 26595  013426  0012               	return	
 26596  013428                     i2l7115:
 26597                           
 26598                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 26599  013428  010D               	movlb	13	; () banked
 26600  01342A  5132               	movf	50,w,b	;volatile
 26601  01342C  A4D8               	btfss	status,2,c
 26602  01342E  D049               	goto	i2l7123
 26603                           
 26604                           ; BSR set to: 13
 26605                           ;usb_device.c: 2064: {
 26606                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26607  013430  010D               	movlb	13	; () banked
 26608  013432  5132               	movf	50,w,b	;volatile
 26609  013434  0D02               	mullw	2
 26610  013436  0E7F               	movlw	low _USB_CD_Ptr
 26611  013438  24F3               	addwf	prodl,w,c
 26612  01343A  6EF6               	movwf	tblptrl,c
 26613  01343C  0EFA               	movlw	high _USB_CD_Ptr
 26614  01343E  20F4               	addwfc	prodh,w,c
 26615  013440  6EF7               	movwf	tblptrh,c
 26616  013442                     	if	1	;There are 3 active tblptr bytes
 26617  013442  6AF8               	clrf	tblptru,c
 26618  013444  0E00               	movlw	low (__mediumconst shr (0+16))
 26619  013446  22F8               	addwfc	tblptru,f,c
 26620  013448                     	endif
 26621  013448  0009               	tblrd		*+
 26622  01344A  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26623  01344E  000A               	tblrd		*-
 26624  013450  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26625                           
 26626                           ; BSR set to: 13
 26627                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26628  013454  0E02               	movlw	2
 26629  013456  0100               	movlb	0	; () banked
 26630  013458  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26631  01345A  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26632  01345C  0E00               	movlw	0
 26633  01345E  0100               	movlb	0	; () banked
 26634  013460  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26635  013462  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26636  013464  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26637  013468  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26638  01346C  0E00               	movlw	low (__mediumconst shr (0+16))
 26639  01346E  6EF8               	movwf	tblptru,c
 26640  013470  0E0E               	movlw	(high __ramtop+-1)
 26641  013472  64F7               	cpfsgt	tblptrh,c
 26642  013474  D003               	bra	i2u664_47
 26643  013476  0008               	tblrd		*
 26644  013478  50F5               	movf	tablat,w,c
 26645  01347A  D005               	bra	i2u664_40
 26646  01347C                     i2u664_47:
 26647  01347C  CFF6 FFE1          	movff	tblptrl,fsr1l
 26648  013480  CFF7 FFE2          	movff	tblptrh,fsr1h
 26649  013484  50E7               	movf	indf1,w,c
 26650  013486                     i2u664_40:
 26651  013486  0100               	movlb	0	; () banked
 26652  013488  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26653                           
 26654                           ; BSR set to: 0
 26655                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26656  01348A  0E03               	movlw	3
 26657  01348C  0100               	movlb	0	; () banked
 26658  01348E  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26659  013490  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26660  013492  0E00               	movlw	0
 26661  013494  0100               	movlb	0	; () banked
 26662  013496  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26663  013498  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26664  01349A  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26665  01349E  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26666  0134A2  0E00               	movlw	low (__mediumconst shr (0+16))
 26667  0134A4  6EF8               	movwf	tblptru,c
 26668  0134A6  0E0E               	movlw	(high __ramtop+-1)
 26669  0134A8  64F7               	cpfsgt	tblptrh,c
 26670  0134AA  D003               	bra	i2u665_47
 26671  0134AC  0008               	tblrd		*
 26672  0134AE  50F5               	movf	tablat,w,c
 26673  0134B0  D005               	bra	i2u665_40
 26674  0134B2                     i2u665_47:
 26675  0134B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 26676  0134B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 26677  0134BA  50E7               	movf	indf1,w,c
 26678  0134BC                     i2u665_40:
 26679  0134BC  0100               	movlb	0	; () banked
 26680  0134BE  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26681                           
 26682                           ;usb_device.c: 2076: }
 26683  0134C0  0012               	return	
 26684  0134C2                     i2l7123:
 26685                           
 26686                           ;usb_device.c: 2077: else
 26687                           ;usb_device.c: 2078: {
 26688                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 26689  0134C2  0E00               	movlw	0
 26690  0134C4  0100               	movlb	0	; () banked
 26691  0134C6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26692                           
 26693                           ; BSR set to: 0
 26694                           ;usb_device.c: 2080: }
 26695                           ;usb_device.c: 2081: break;
 26696  0134C8  0012               	return	
 26697  0134CA                     i2l7125:
 26698                           
 26699                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 26700  0134CA  0E03               	movlw	3
 26701  0134CC  010D               	movlb	13	; () banked
 26702  0134CE  6132               	cpfslt	50,b	;volatile
 26703  0134D0  D029               	goto	i2l7131
 26704                           
 26705                           ; BSR set to: 13
 26706                           ;usb_device.c: 2087: {
 26707                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26708  0134D2  010D               	movlb	13	; () banked
 26709  0134D4  5132               	movf	50,w,b	;volatile
 26710  0134D6  0D02               	mullw	2
 26711  0134D8  0E79               	movlw	low _USB_SD_Ptr
 26712  0134DA  24F3               	addwf	prodl,w,c
 26713  0134DC  6EF6               	movwf	tblptrl,c
 26714  0134DE  0EFA               	movlw	high _USB_SD_Ptr
 26715  0134E0  20F4               	addwfc	prodh,w,c
 26716  0134E2  6EF7               	movwf	tblptrh,c
 26717  0134E4                     	if	1	;There are 3 active tblptr bytes
 26718  0134E4  6AF8               	clrf	tblptru,c
 26719  0134E6  0E00               	movlw	low (__mediumconst shr (0+16))
 26720  0134E8  22F8               	addwfc	tblptru,f,c
 26721  0134EA                     	endif
 26722  0134EA  0009               	tblrd		*+
 26723  0134EC  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26724  0134F0  000A               	tblrd		*-
 26725  0134F2  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26726                           
 26727                           ; BSR set to: 13
 26728                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26729  0134F6  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 26730  0134FA  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26731  0134FE  0E00               	movlw	low (__mediumconst shr (0+16))
 26732  013500  6EF8               	movwf	tblptru,c
 26733  013502  0E0E               	movlw	(high __ramtop+-1)
 26734  013504  64F7               	cpfsgt	tblptrh,c
 26735  013506  D003               	bra	i2u667_47
 26736  013508  0008               	tblrd		*
 26737  01350A  50F5               	movf	tablat,w,c
 26738  01350C  D005               	bra	i2u667_40
 26739  01350E                     i2u667_47:
 26740  01350E  CFF6 FFE1          	movff	tblptrl,fsr1l
 26741  013512  CFF7 FFE2          	movff	tblptrh,fsr1h
 26742  013516  50E7               	movf	indf1,w,c
 26743  013518                     i2u667_40:
 26744  013518  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26745  01351A  502D               	movf	??_USBStdGetDscHandler,w,c
 26746  01351C  0100               	movlb	0	; () banked
 26747  01351E  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26748  013520  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26749                           
 26750                           ;usb_device.c: 2092: }
 26751  013522  0012               	return	
 26752  013524                     i2l7131:
 26753                           
 26754                           ;usb_device.c: 2102: else
 26755                           ;usb_device.c: 2103: {
 26756                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 26757  013524  0E00               	movlw	0
 26758  013526  0100               	movlb	0	; () banked
 26759  013528  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;usb_device.c: 2105: }
 26763                           ;usb_device.c: 2106: break;
 26764  01352A  0012               	return	
 26765  01352C                     i2l7133:
 26766                           
 26767                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 26768  01352C  0E00               	movlw	0
 26769  01352E  0100               	movlb	0	; () banked
 26770  013530  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26771                           
 26772                           ; BSR set to: 0
 26773                           ;usb_device.c: 2110: }
 26774                           
 26775                           ;usb_device.c: 2109: break;
 26776  013532  0012               	return	
 26777  013534                     i2l7137:
 26778                           
 26779                           ; BSR set to: 0
 26780  013534  010D               	movlb	13	; () banked
 26781  013536  5133               	movf	51,w,b	;volatile
 26782                           
 26783                           ; Switch size 1, requested type "space"
 26784                           ; Number of cases is 3, Range of values is 1 to 3
 26785                           ; switch strategies available:
 26786                           ; Name         Instructions Cycles
 26787                           ; simple_byte           10     6 (average)
 26788                           ;	Chosen strategy is simple_byte
 26789  013538  0A01               	xorlw	1	; case 1
 26790  01353A  B4D8               	btfsc	status,2,c
 26791  01353C  D769               	goto	i2l7111
 26792  01353E  0A03               	xorlw	3	; case 2
 26793  013540  B4D8               	btfsc	status,2,c
 26794  013542  D772               	goto	i2l7115
 26795  013544  0A01               	xorlw	1	; case 3
 26796  013546  B4D8               	btfsc	status,2,c
 26797  013548  D7C0               	goto	i2l7125
 26798  01354A  D7F0               	goto	i2l7133
 26799  01354C                     __end_of_USBStdGetDscHandler:
 26800                           	opt stack 0
 26801                           pclatu	equ	0xFFB
 26802                           pclath	equ	0xFFA
 26803                           tblptru	equ	0xFF8
 26804                           tblptrh	equ	0xFF7
 26805                           tblptrl	equ	0xFF6
 26806                           tablat	equ	0xFF5
 26807                           prodh	equ	0xFF4
 26808                           prodl	equ	0xFF3
 26809                           intcon	equ	0xFF2
 26810                           intcon2	equ	0xFF1
 26811                           postinc0	equ	0xFEE
 26812                           fsr0h	equ	0xFEA
 26813                           fsr0l	equ	0xFE9
 26814                           wreg	equ	0xFE8
 26815                           indf1	equ	0xFE7
 26816                           postinc1	equ	0xFE6
 26817                           postdec1	equ	0xFE5
 26818                           fsr1h	equ	0xFE2
 26819                           fsr1l	equ	0xFE1
 26820                           indf2	equ	0xFDF
 26821                           postinc2	equ	0xFDE
 26822                           postdec2	equ	0xFDD
 26823                           plusw2	equ	0xFDB
 26824                           fsr2h	equ	0xFDA
 26825                           fsr2l	equ	0xFD9
 26826                           status	equ	0xFD8
 26827                           
 26828 ;; *************** function _USBStdFeatureReqHandler *****************
 26829 ;; Defined at:
 26830 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 26831 ;; Parameters:    Size  Location     Type
 26832 ;;		None
 26833 ;; Auto vars:     Size  Location     Type
 26834 ;;  p               2   24[COMRAM] PTR struct __BDT
 26835 ;;		 -> NULL(0), BDT(48), 
 26836 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26837 ;;		 -> UEP0(1), 
 26838 ;;  current_ep_d    1   23[COMRAM] struct .
 26839 ;; Return value:  Size  Location     Type
 26840 ;;		None               void
 26841 ;; Registers used:
 26842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26843 ;; Tracked objects:
 26844 ;;		On entry : 0/0
 26845 ;;		On exit  : 0/0
 26846 ;;		Unchanged: 0/0
 26847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26849 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26852 ;;Total ram usage:        6 bytes
 26853 ;; Hardware stack levels used:    1
 26854 ;; Hardware stack levels required when called:    4
 26855 ;; This function calls:
 26856 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26857 ;; This function is called by:
 26858 ;;		_USBCheckStdRequest
 26859 ;; This function uses a non-reentrant model
 26860 ;;
 26861                           
 26862                           	psect	text117
 26863  011E44                     __ptext117:
 26864                           	opt stack 0
 26865  011E44                     _USBStdFeatureReqHandler:
 26866                           	opt stack 11
 26867                           
 26868                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26869                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26870                           ;usb_device.c: 2764: unsigned char* pUEP;
 26871                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26872                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26873                           
 26874                           ;incstack = 0
 26875  011E44  010D               	movlb	13	; () banked
 26876  011E46  0532               	decf	50,w,b	;volatile
 26877  011E48  A4D8               	btfss	status,2,c
 26878  011E4A  D011               	goto	i2l1667
 26879                           
 26880                           ; BSR set to: 13
 26881  011E4C  010D               	movlb	13	; () banked
 26882  011E4E  5130               	movf	48,w,b	;volatile
 26883  011E50  0B1F               	andlw	31
 26884  011E52  0900               	iorlw	0
 26885  011E54  A4D8               	btfss	status,2,c
 26886  011E56  D00B               	goto	i2l1667
 26887                           
 26888                           ; BSR set to: 13
 26889                           ;usb_device.c: 2804: {
 26890                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26891  011E58  0100               	movlb	0	; () banked
 26892  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26893                           
 26894                           ; BSR set to: 0
 26895                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26896  011E5C  0E03               	movlw	3
 26897  011E5E  010D               	movlb	13	; () banked
 26898  011E60  1931               	xorwf	49,w,b	;volatile
 26899  011E62  A4D8               	btfss	status,2,c
 26900  011E64  D002               	goto	i2l7177
 26901                           
 26902                           ; BSR set to: 13
 26903                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26904  011E66  0E01               	movlw	1
 26905  011E68  D001               	goto	L9
 26906  011E6A                     i2l7177:
 26907                           
 26908                           ; BSR set to: 13
 26909                           ;usb_device.c: 2808: else
 26910                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26911  011E6A  0E00               	movlw	0
 26912  011E6C                     L9:
 26913  011E6C  6E10               	movwf	_RemoteWakeup,c	;volatile
 26914  011E6E                     i2l1667:
 26915                           
 26916                           ; BSR set to: 13
 26917                           ;usb_device.c: 2810: }
 26918                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 26919                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 26920                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 26921                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 26922  011E6E  010D               	movlb	13	; () banked
 26923  011E70  5132               	movf	50,w,b	;volatile
 26924  011E72  A4D8               	btfss	status,2,c
 26925  011E74  0012               	return	
 26926                           
 26927                           ; BSR set to: 13
 26928  011E76  010D               	movlb	13	; () banked
 26929  011E78  5130               	movf	48,w,b	;volatile
 26930  011E7A  0B1F               	andlw	31
 26931  011E7C  0A02               	xorlw	2
 26932  011E7E  A4D8               	btfss	status,2,c
 26933  011E80  0012               	return	
 26934                           
 26935                           ; BSR set to: 13
 26936  011E82  010D               	movlb	13	; () banked
 26937  011E84  5134               	movf	52,w,b	;volatile
 26938  011E86  0B0F               	andlw	15
 26939  011E88  0900               	iorlw	0
 26940  011E8A  B4D8               	btfsc	status,2,c
 26941  011E8C  0012               	return	
 26942                           
 26943                           ; BSR set to: 13
 26944  011E8E  010D               	movlb	13	; () banked
 26945  011E90  5134               	movf	52,w,b	;volatile
 26946  011E92  0B0F               	andlw	15
 26947  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26948  011E96  0E03               	movlw	3
 26949  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 26950  011E9A  0012               	return	
 26951                           
 26952                           ; BSR set to: 13
 26953  011E9C  0E20               	movlw	32
 26954  011E9E  1814               	xorwf	_USBDeviceState,w,c	;volatile
 26955  011EA0  A4D8               	btfss	status,2,c
 26956  011EA2  0012               	return	
 26957                           
 26958                           ; BSR set to: 13
 26959                           ;usb_device.c: 2817: {
 26960                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 26961  011EA4  0100               	movlb	0	; () banked
 26962  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26963                           
 26964                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 26965  011EA8  010D               	movlb	13	; () banked
 26966  011EAA  BF34               	btfsc	52,7,b	;volatile
 26967  011EAC  D01B               	goto	i2l7191
 26968                           
 26969                           ; BSR set to: 13
 26970                           ;usb_device.c: 2824: {
 26971                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26972  011EAE  010D               	movlb	13	; () banked
 26973  011EB0  5134               	movf	52,w,b	;volatile
 26974  011EB2  0B0F               	andlw	15
 26975  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26976  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26977  011EB8  0D02               	mullw	2
 26978  011EBA  0E00               	movlw	low _pBDTEntryOut
 26979  011EBC  24F3               	addwf	prodl,w,c
 26980  011EBE  6ED9               	movwf	fsr2l,c
 26981  011EC0  0E01               	movlw	high _pBDTEntryOut
 26982  011EC2  20F4               	addwfc	prodh,w,c
 26983  011EC4  6EDA               	movwf	fsr2h,c
 26984  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 26985  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26986                           
 26987                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 26988  011ECE  010D               	movlb	13	; () banked
 26989  011ED0  5134               	movf	52,w,b	;volatile
 26990  011ED2  0B0F               	andlw	15
 26991  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26992  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26993  011ED8  0D01               	mullw	1
 26994  011EDA  0E04               	movlw	low _ep_data_out
 26995  011EDC  24F3               	addwf	prodl,w,c
 26996  011EDE  6ED9               	movwf	fsr2l,c
 26997  011EE0  0E00               	movlw	high _ep_data_out
 26998  011EE2  D01A               	goto	L10
 26999  011EE4                     i2l7191:
 27000                           
 27001                           ; BSR set to: 13
 27002                           ;usb_device.c: 2828: else
 27003                           ;usb_device.c: 2829: {
 27004                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27005  011EE4  010D               	movlb	13	; () banked
 27006  011EE6  5134               	movf	52,w,b	;volatile
 27007  011EE8  0B0F               	andlw	15
 27008  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27009  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27010  011EEE  0D02               	mullw	2
 27011  011EF0  0EF5               	movlw	low _pBDTEntryIn
 27012  011EF2  24F3               	addwf	prodl,w,c
 27013  011EF4  6ED9               	movwf	fsr2l,c
 27014  011EF6  0E00               	movlw	high _pBDTEntryIn
 27015  011EF8  20F4               	addwfc	prodh,w,c
 27016  011EFA  6EDA               	movwf	fsr2h,c
 27017  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27018  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27019                           
 27020                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27021  011F04  010D               	movlb	13	; () banked
 27022  011F06  5134               	movf	52,w,b	;volatile
 27023  011F08  0B0F               	andlw	15
 27024  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27025  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27026  011F0E  0D01               	mullw	1
 27027  011F10  0E01               	movlw	low _ep_data_in
 27028  011F12  24F3               	addwf	prodl,w,c
 27029  011F14  6ED9               	movwf	fsr2l,c
 27030  011F16  0E00               	movlw	high _ep_data_in
 27031  011F18                     L10:
 27032  011F18  20F4               	addwfc	prodh,w,c
 27033  011F1A  6EDA               	movwf	fsr2h,c
 27034  011F1C  50DF               	movf	indf2,w,c
 27035  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27036                           
 27037                           ; BSR set to: 13
 27038                           ;usb_device.c: 2832: }
 27039                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 27040                           
 27041                           ; BSR set to: 13
 27042  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27043  011F22  D002               	goto	i2l7197
 27044                           
 27045                           ; BSR set to: 13
 27046                           ;usb_device.c: 2839: {
 27047                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27048  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27049                           
 27050                           ;usb_device.c: 2841: }
 27051  011F26  D001               	goto	i2l7199
 27052  011F28                     i2l7197:
 27053                           
 27054                           ; BSR set to: 13
 27055                           ;usb_device.c: 2842: else
 27056                           ;usb_device.c: 2843: {
 27057                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27058  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27059  011F2A                     i2l7199:
 27060                           
 27061                           ; BSR set to: 13
 27062                           ;usb_device.c: 2845: }
 27063                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27064  011F2A  010D               	movlb	13	; () banked
 27065  011F2C  BF34               	btfsc	52,7,b	;volatile
 27066  011F2E  D00B               	goto	i2l7203
 27067                           
 27068                           ; BSR set to: 13
 27069                           ;usb_device.c: 2851: {
 27070                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27071  011F30  010D               	movlb	13	; () banked
 27072  011F32  5134               	movf	52,w,b	;volatile
 27073  011F34  0B0F               	andlw	15
 27074  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27075  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27076  011F3A  0D02               	mullw	2
 27077  011F3C  0E00               	movlw	low _pBDTEntryOut
 27078  011F3E  24F3               	addwf	prodl,w,c
 27079  011F40  6ED9               	movwf	fsr2l,c
 27080  011F42  0E01               	movlw	high _pBDTEntryOut
 27081  011F44  D00A               	goto	L11
 27082  011F46                     i2l7203:
 27083                           
 27084                           ; BSR set to: 13
 27085                           ;usb_device.c: 2854: else
 27086                           ;usb_device.c: 2855: {
 27087                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27088  011F46  010D               	movlb	13	; () banked
 27089  011F48  5134               	movf	52,w,b	;volatile
 27090  011F4A  0B0F               	andlw	15
 27091  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27092  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27093  011F50  0D02               	mullw	2
 27094  011F52  0EF5               	movlw	low _pBDTEntryIn
 27095  011F54  24F3               	addwf	prodl,w,c
 27096  011F56  6ED9               	movwf	fsr2l,c
 27097  011F58  0E00               	movlw	high _pBDTEntryIn
 27098  011F5A                     L11:
 27099  011F5A  20F4               	addwfc	prodh,w,c
 27100  011F5C  6EDA               	movwf	fsr2h,c
 27101  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27102  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27103                           
 27104                           ; BSR set to: 13
 27105                           ;usb_device.c: 2857: }
 27106                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27107                           
 27108                           ; BSR set to: 13
 27109  011F66  0E03               	movlw	3
 27110  011F68  010D               	movlb	13	; () banked
 27111  011F6A  1931               	xorwf	49,w,b	;volatile
 27112  011F6C  A4D8               	btfss	status,2,c
 27113  011F6E  D02E               	goto	i2l7219
 27114                           
 27115                           ; BSR set to: 13
 27116                           ;usb_device.c: 2861: {
 27117                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27118  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27119  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27120  011F78  AEDF               	btfss	indf2,7,c
 27121  011F7A  D01B               	goto	i2l7215
 27122                           
 27123                           ; BSR set to: 13
 27124                           ;usb_device.c: 2863: {
 27125                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27126  011F7C  010D               	movlb	13	; () banked
 27127  011F7E  BF34               	btfsc	52,7,b	;volatile
 27128  011F80  D00B               	goto	i2l7213
 27129                           
 27130                           ; BSR set to: 13
 27131                           ;usb_device.c: 2867: {
 27132                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27133  011F82  010D               	movlb	13	; () banked
 27134  011F84  5134               	movf	52,w,b	;volatile
 27135  011F86  0B0F               	andlw	15
 27136  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27137  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27138  011F8C  0D01               	mullw	1
 27139  011F8E  0E04               	movlw	low _ep_data_out
 27140  011F90  24F3               	addwf	prodl,w,c
 27141  011F92  6ED9               	movwf	fsr2l,c
 27142  011F94  0E00               	movlw	high _ep_data_out
 27143  011F96  D00A               	goto	L12
 27144  011F98                     i2l7213:
 27145                           
 27146                           ; BSR set to: 13
 27147                           ;usb_device.c: 2870: else
 27148                           ;usb_device.c: 2871: {
 27149                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27150  011F98  010D               	movlb	13	; () banked
 27151  011F9A  5134               	movf	52,w,b	;volatile
 27152  011F9C  0B0F               	andlw	15
 27153  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27154  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27155  011FA2  0D01               	mullw	1
 27156  011FA4  0E01               	movlw	low _ep_data_in
 27157  011FA6  24F3               	addwf	prodl,w,c
 27158  011FA8  6ED9               	movwf	fsr2l,c
 27159  011FAA  0E00               	movlw	high _ep_data_in
 27160  011FAC                     L12:
 27161  011FAC  20F4               	addwfc	prodh,w,c
 27162  011FAE  6EDA               	movwf	fsr2h,c
 27163  011FB0  82DF               	bsf	indf2,1,c
 27164  011FB2                     i2l7215:
 27165                           
 27166                           ; BSR set to: 13
 27167                           ;usb_device.c: 2873: }
 27168                           ;usb_device.c: 2874: }
 27169                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27170  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27171  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27172  011FBA  0E00               	movlw	0
 27173  011FBC  84DB               	bsf	plusw2,2,c
 27174                           
 27175                           ; BSR set to: 13
 27176                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27177  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27178  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27179  011FC6  0E00               	movlw	0
 27180  011FC8  8EDB               	bsf	plusw2,7,c
 27181                           
 27182                           ;usb_device.c: 2879: }
 27183  011FCA  0012               	return	
 27184  011FCC                     i2l7219:
 27185                           
 27186                           ; BSR set to: 13
 27187                           ;usb_device.c: 2880: else
 27188                           ;usb_device.c: 2881: {
 27189                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27190  011FCC  0E04               	movlw	4
 27191  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27192                           
 27193                           ; BSR set to: 13
 27194                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27195  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27196  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27197  011FD8  AEDF               	btfss	indf2,7,c
 27198  011FDA  D01B               	goto	i2l7229
 27199                           
 27200                           ; BSR set to: 13
 27201                           ;usb_device.c: 2888: {
 27202                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27203  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27204  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27205  011FE4  0E7F               	movlw	127
 27206  011FE6  16DF               	andwf	indf2,f,c
 27207                           
 27208                           ; BSR set to: 13
 27209                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27210  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27211  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27212  011FF0  0E00               	movlw	0
 27213  011FF2  8CDB               	bsf	plusw2,6,c
 27214                           
 27215                           ; BSR set to: 13
 27216                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27217  011FF4  0E00               	movlw	0
 27218  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27219  011FF8  0E05               	movlw	5
 27220  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27221  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27222  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27223  012004  0E00               	movlw	0
 27224  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27225  012008  0E02               	movlw	2
 27226  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27227  01200C  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27228                           
 27229                           ;usb_device.c: 2894: }
 27230  012010  D006               	goto	i2l7231
 27231  012012                     i2l7229:
 27232                           
 27233                           ;usb_device.c: 2895: else
 27234                           ;usb_device.c: 2896: {
 27235                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27236  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27237  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27238  01201A  0E00               	movlw	0
 27239  01201C  8CDB               	bsf	plusw2,6,c
 27240  01201E                     i2l7231:
 27241                           
 27242                           ;usb_device.c: 2899: }
 27243                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27244  01201E  0E04               	movlw	4
 27245  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27246                           
 27247                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27248  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27249  012024  D006               	goto	i2l1686
 27250  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27251  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27252  01202E  AEDF               	btfss	indf2,7,c
 27253  012030  D030               	goto	i2l7245
 27254  012032                     i2l1686:
 27255                           
 27256                           ;usb_device.c: 2910: {
 27257                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27258  012032  010D               	movlb	13	; () banked
 27259  012034  BF34               	btfsc	52,7,b	;volatile
 27260  012036  D00B               	goto	i2l7239
 27261                           
 27262                           ; BSR set to: 13
 27263                           ;usb_device.c: 2912: {
 27264                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27265  012038  010D               	movlb	13	; () banked
 27266  01203A  5134               	movf	52,w,b	;volatile
 27267  01203C  0B0F               	andlw	15
 27268  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27269  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27270  012042  0D01               	mullw	1
 27271  012044  0E04               	movlw	low _ep_data_out
 27272  012046  24F3               	addwf	prodl,w,c
 27273  012048  6ED9               	movwf	fsr2l,c
 27274  01204A  0E00               	movlw	high _ep_data_out
 27275  01204C  D00A               	goto	L13
 27276  01204E                     i2l7239:
 27277                           
 27278                           ; BSR set to: 13
 27279                           ;usb_device.c: 2915: else
 27280                           ;usb_device.c: 2916: {
 27281                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27282  01204E  010D               	movlb	13	; () banked
 27283  012050  5134               	movf	52,w,b	;volatile
 27284  012052  0B0F               	andlw	15
 27285  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27286  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27287  012058  0D01               	mullw	1
 27288  01205A  0E01               	movlw	low _ep_data_in
 27289  01205C  24F3               	addwf	prodl,w,c
 27290  01205E  6ED9               	movwf	fsr2l,c
 27291  012060  0E00               	movlw	high _ep_data_in
 27292  012062                     L13:
 27293  012062  20F4               	addwfc	prodh,w,c
 27294  012064  6EDA               	movwf	fsr2h,c
 27295  012066  92DF               	bcf	indf2,1,c
 27296                           
 27297                           ; BSR set to: 13
 27298                           ;usb_device.c: 2918: }
 27299                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27300                           
 27301                           ; BSR set to: 13
 27302  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27303  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27304  012070  0E3B               	movlw	59
 27305  012072  16DF               	andwf	indf2,f,c
 27306                           
 27307                           ; BSR set to: 13
 27308                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27309  012074  0E00               	movlw	0
 27310  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27311  012078  0E05               	movlw	5
 27312  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27313  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27314  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27315  012084  0E00               	movlw	0
 27316  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27317  012088  0E02               	movlw	2
 27318  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27319  01208C  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27320                           
 27321                           ;usb_device.c: 2924: }
 27322  012090  D006               	goto	i2l7247
 27323  012092                     i2l7245:
 27324                           
 27325                           ;usb_device.c: 2925: else
 27326                           ;usb_device.c: 2926: {
 27327                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27328  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27329  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27330  01209A  0E3B               	movlw	59
 27331  01209C  16DF               	andwf	indf2,f,c
 27332  01209E                     i2l7247:
 27333                           
 27334                           ;usb_device.c: 2929: }
 27335                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27336  01209E  010D               	movlb	13	; () banked
 27337  0120A0  5134               	movf	52,w,b	;volatile
 27338  0120A2  0B0F               	andlw	15
 27339  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27340  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27341  0120A8  0D01               	mullw	1
 27342  0120AA  0E26               	movlw	38
 27343  0120AC  24F3               	addwf	prodl,w,c
 27344  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27345  0120B0  0E0F               	movlw	15
 27346  0120B2  20F4               	addwfc	prodh,w,c
 27347  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27348                           
 27349                           ; BSR set to: 13
 27350                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27351  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27352  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27353  0120BE  0EFE               	movlw	254
 27354  0120C0  16DF               	andwf	indf2,f,c
 27355                           
 27356                           ; BSR set to: 13
 27357  0120C2  0012               	return	
 27358  0120C4                     __end_of_USBStdFeatureReqHandler:
 27359                           	opt stack 0
 27360                           pclatu	equ	0xFFB
 27361                           pclath	equ	0xFFA
 27362                           tblptru	equ	0xFF8
 27363                           tblptrh	equ	0xFF7
 27364                           tblptrl	equ	0xFF6
 27365                           tablat	equ	0xFF5
 27366                           prodh	equ	0xFF4
 27367                           prodl	equ	0xFF3
 27368                           intcon	equ	0xFF2
 27369                           intcon2	equ	0xFF1
 27370                           postinc0	equ	0xFEE
 27371                           fsr0h	equ	0xFEA
 27372                           fsr0l	equ	0xFE9
 27373                           wreg	equ	0xFE8
 27374                           indf1	equ	0xFE7
 27375                           postinc1	equ	0xFE6
 27376                           postdec1	equ	0xFE5
 27377                           fsr1h	equ	0xFE2
 27378                           fsr1l	equ	0xFE1
 27379                           indf2	equ	0xFDF
 27380                           postinc2	equ	0xFDE
 27381                           postdec2	equ	0xFDD
 27382                           plusw2	equ	0xFDB
 27383                           fsr2h	equ	0xFDA
 27384                           fsr2l	equ	0xFD9
 27385                           status	equ	0xFD8
 27386                           
 27387 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27388 ;; Defined at:
 27389 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 27390 ;; Parameters:    Size  Location     Type
 27391 ;;  event           2   12[COMRAM] enum E8545
 27392 ;;  pdata           2   14[COMRAM] PTR void 
 27393 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27394 ;;  size            2   16[COMRAM] unsigned int 
 27395 ;; Auto vars:     Size  Location     Type
 27396 ;;		None
 27397 ;; Return value:  Size  Location     Type
 27398 ;;                  1    wreg      unsigned char 
 27399 ;; Registers used:
 27400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27401 ;; Tracked objects:
 27402 ;;		On entry : 0/0
 27403 ;;		On exit  : 0/0
 27404 ;;		Unchanged: 0/0
 27405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27406 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27409 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27410 ;;Total ram usage:        8 bytes
 27411 ;; Hardware stack levels used:    1
 27412 ;; Hardware stack levels required when called:    3
 27413 ;; This function calls:
 27414 ;;		_CDCInitEP
 27415 ;;		_USBCheckCDCRequest
 27416 ;; This function is called by:
 27417 ;;		_USBDeviceTasks
 27418 ;;		_USBStdSetCfgHandler
 27419 ;;		_USBSuspend
 27420 ;;		_USBWakeFromSuspend
 27421 ;;		_USBCtrlTrfSetupHandler
 27422 ;;		_USBCheckStdRequest
 27423 ;;		_USBStdFeatureReqHandler
 27424 ;; This function uses a non-reentrant model
 27425 ;;
 27426                           
 27427                           	psect	text118
 27428  016962                     __ptext118:
 27429                           	opt stack 0
 27430  016962                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27431                           	opt stack 15
 27432                           
 27433                           ;My_usb_cdc.c: 45: switch ((int) event) {
 27434                           
 27435                           ; BSR set to: 13
 27436                           ;incstack = 0
 27437  016962  D006               	goto	i2l6649
 27438  016964                     i2l6643:
 27439                           
 27440                           ;My_usb_cdc.c: 47: CDCInitEP();
 27441  016964  EC13  F0B0         	call	_CDCInitEP	;wreg free
 27442                           
 27443                           ;My_usb_cdc.c: 48: break;
 27444  016968  0012               	return	
 27445  01696A                     i2l6645:
 27446                           
 27447                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 27448  01696A  EC18  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27449                           
 27450                           ;My_usb_cdc.c: 52: }
 27451                           
 27452                           ;My_usb_cdc.c: 51: break;
 27453  01696E  0012               	return	
 27454  016970                     i2l6649:
 27455  016970  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27456  016974  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27457                           
 27458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27459                           ; Switch size 1, requested type "space"
 27460                           ; Number of cases is 1, Range of values is 0 to 0
 27461                           ; switch strategies available:
 27462                           ; Name         Instructions Cycles
 27463                           ; simple_byte            4     3 (average)
 27464                           ;	Chosen strategy is simple_byte
 27465  016978  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27466  01697A  0A00               	xorlw	0	; case 0
 27467  01697C  A4D8               	btfss	status,2,c
 27468  01697E  0012               	return	
 27469                           
 27470                           ; Switch size 1, requested type "space"
 27471                           ; Number of cases is 2, Range of values is 1 to 3
 27472                           ; switch strategies available:
 27473                           ; Name         Instructions Cycles
 27474                           ; simple_byte            7     4 (average)
 27475                           ;	Chosen strategy is simple_byte
 27476  016980  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27477  016982  0A01               	xorlw	1	; case 1
 27478  016984  B4D8               	btfsc	status,2,c
 27479  016986  D7EE               	goto	i2l6643
 27480  016988  0A02               	xorlw	2	; case 3
 27481  01698A  A4D8               	btfss	status,2,c
 27482  01698C  0012               	return	
 27483  01698E  D7ED               	goto	i2l6645
 27484  016990                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27485                           	opt stack 0
 27486                           pclatu	equ	0xFFB
 27487                           pclath	equ	0xFFA
 27488                           tblptru	equ	0xFF8
 27489                           tblptrh	equ	0xFF7
 27490                           tblptrl	equ	0xFF6
 27491                           tablat	equ	0xFF5
 27492                           prodh	equ	0xFF4
 27493                           prodl	equ	0xFF3
 27494                           intcon	equ	0xFF2
 27495                           intcon2	equ	0xFF1
 27496                           postinc0	equ	0xFEE
 27497                           fsr0h	equ	0xFEA
 27498                           fsr0l	equ	0xFE9
 27499                           wreg	equ	0xFE8
 27500                           indf1	equ	0xFE7
 27501                           postinc1	equ	0xFE6
 27502                           postdec1	equ	0xFE5
 27503                           fsr1h	equ	0xFE2
 27504                           fsr1l	equ	0xFE1
 27505                           indf2	equ	0xFDF
 27506                           postinc2	equ	0xFDE
 27507                           postdec2	equ	0xFDD
 27508                           plusw2	equ	0xFDB
 27509                           fsr2h	equ	0xFDA
 27510                           fsr2l	equ	0xFD9
 27511                           status	equ	0xFD8
 27512                           
 27513 ;; *************** function _USBCheckCDCRequest *****************
 27514 ;; Defined at:
 27515 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 27516 ;; Parameters:    Size  Location     Type
 27517 ;;		None
 27518 ;; Auto vars:     Size  Location     Type
 27519 ;;		None
 27520 ;; Return value:  Size  Location     Type
 27521 ;;		None               void
 27522 ;; Registers used:
 27523 ;;		wreg, status,2, status,0
 27524 ;; Tracked objects:
 27525 ;;		On entry : 0/0
 27526 ;;		On exit  : 0/0
 27527 ;;		Unchanged: 0/0
 27528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27533 ;;Total ram usage:        0 bytes
 27534 ;; Hardware stack levels used:    1
 27535 ;; This function calls:
 27536 ;;		Nothing
 27537 ;; This function is called by:
 27538 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27539 ;; This function uses a non-reentrant model
 27540 ;;
 27541                           
 27542                           	psect	text119
 27543  014A30                     __ptext119:
 27544                           	opt stack 0
 27545  014A30                     _USBCheckCDCRequest:
 27546                           	opt stack 17
 27547                           
 27548                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 27549                           
 27550                           ;incstack = 0
 27551  014A30  010D               	movlb	13	; () banked
 27552  014A32  5130               	movf	48,w,b	;volatile
 27553  014A34  0B1F               	andlw	31
 27554  014A36  06E8               	decf	wreg,f,c
 27555  014A38  A4D8               	btfss	status,2,c
 27556  014A3A  0012               	return	
 27557                           
 27558                           ; BSR set to: 13
 27559                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 27560                           
 27561                           ; BSR set to: 13
 27562                           
 27563                           ; BSR set to: 13
 27564  014A3C  010D               	movlb	13	; () banked
 27565  014A3E  3930               	swapf	48,w,b	;volatile
 27566  014A40  32E8               	rrcf	wreg,f,c
 27567  014A42  0B03               	andlw	3
 27568  014A44  06E8               	decf	wreg,f,c
 27569  014A46  A4D8               	btfss	status,2,c
 27570  014A48  0012               	return	
 27571                           
 27572                           ; BSR set to: 13
 27573                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 27574                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 27575                           
 27576                           ; BSR set to: 13
 27577                           
 27578                           ; BSR set to: 13
 27579  014A4A  010D               	movlb	13	; () banked
 27580  014A4C  5134               	movf	52,w,b	;volatile
 27581  014A4E  B4D8               	btfsc	status,2,c
 27582  014A50  D048               	goto	i2l6501
 27583                           
 27584                           ; BSR set to: 13
 27585  014A52  010D               	movlb	13	; () banked
 27586  014A54  0534               	decf	52,w,b	;volatile
 27587  014A56  A4D8               	btfss	status,2,c
 27588  014A58  0012               	return	
 27589  014A5A  D043               	goto	i2l6501
 27590  014A5C                     i2l6477:
 27591                           
 27592                           ; BSR set to: 13
 27593                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27594  014A5C  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27595  014A5E  0100               	movlb	0	; () banked
 27596  014A60  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27597  014A62  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27598  014A64  0100               	movlb	0	; () banked
 27599  014A66  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27600                           
 27601                           ; BSR set to: 0
 27602                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 27603  014A68  0E00               	movlw	0
 27604  014A6A  0100               	movlb	0	; () banked
 27605  014A6C  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27606  014A6E  0E08               	movlw	8
 27607  014A70  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27608                           
 27609                           ; BSR set to: 0
 27610                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27611  014A72  0100               	movlb	0	; () banked
 27612  014A74  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27613                           
 27614                           ; BSR set to: 0
 27615                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 27616  014A76  0100               	movlb	0	; () banked
 27617  014A78  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27618                           
 27619                           ;usb_device_cdc.c: 232: break;
 27620  014A7A  0012               	return	
 27621  014A7C                     i2l6485:
 27622                           
 27623                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27624  014A7C  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27625  014A7E  0100               	movlb	0	; () banked
 27626  014A80  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27627  014A82  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27628  014A84  0100               	movlb	0	; () banked
 27629  014A86  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27630                           
 27631                           ; BSR set to: 0
 27632                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27633  014A88  0100               	movlb	0	; () banked
 27634  014A8A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27635                           
 27636                           ;usb_device_cdc.c: 237: break;
 27637  014A8C  0012               	return	
 27638  014A8E                     i2l1743:
 27639                           
 27640                           ; BSR set to: 13
 27641                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27642  014A8E  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 27643  014A92  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 27644                           
 27645                           ; BSR set to: 13
 27646                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27647  014A96  0E88               	movlw	low _line_coding
 27648  014A98  0100               	movlb	0	; () banked
 27649  014A9A  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 27650  014A9C  0E01               	movlw	high _line_coding
 27651  014A9E  0100               	movlb	0	; () banked
 27652  014AA0  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27653                           
 27654                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27655  014AA2  0E00               	movlw	0
 27656  014AA4  0100               	movlb	0	; () banked
 27657  014AA6  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27658  014AA8  0E00               	movlw	0
 27659  014AAA  0100               	movlb	0	; () banked
 27660  014AAC  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27661  014AAE  0E00               	movlw	0
 27662  014AB0  0100               	movlb	0	; () banked
 27663  014AB2  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27664                           
 27665                           ; BSR set to: 0
 27666                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27667  014AB4  0100               	movlb	0	; () banked
 27668  014AB6  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27669                           
 27670                           ;usb_device_cdc.c: 246: break;
 27671  014AB8  0012               	return	
 27672  014ABA                     i2l6493:
 27673                           
 27674                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27675  014ABA  0E88               	movlw	low _line_coding
 27676  014ABC  0100               	movlb	0	; () banked
 27677  014ABE  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27678  014AC0  0E01               	movlw	high _line_coding
 27679  014AC2  0100               	movlb	0	; () banked
 27680  014AC4  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27681                           
 27682                           ; BSR set to: 0
 27683  014AC6  0E00               	movlw	0
 27684  014AC8  0100               	movlb	0	; () banked
 27685  014ACA  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27686  014ACC  0E07               	movlw	7
 27687  014ACE  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27688                           
 27689                           ; BSR set to: 0
 27690  014AD0  0EC1               	movlw	193
 27691  014AD2  0100               	movlb	0	; () banked
 27692  014AD4  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27693                           
 27694                           ;usb_device_cdc.c: 253: break;
 27695  014AD6  0012               	return	
 27696  014AD8                     i2l1745:
 27697                           
 27698                           ; BSR set to: 13
 27699                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27700  014AD8  CD32 F125          	movff	3378,_control_signal_bitmap	;volatile
 27701                           
 27702                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27703  014ADC  0100               	movlb	0	; () banked
 27704  014ADE  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27705                           
 27706                           ; BSR set to: 0
 27707                           ;usb_device_cdc.c: 315: }
 27708                           
 27709                           ; BSR set to: 0
 27710                           ;usb_device_cdc.c: 314: break;
 27711                           
 27712                           ;usb_device_cdc.c: 313: default:
 27713                           
 27714                           ;usb_device_cdc.c: 289: break;
 27715  014AE0  0012               	return	
 27716  014AE2                     i2l6501:
 27717  014AE2  010D               	movlb	13	; () banked
 27718  014AE4  5131               	movf	49,w,b	;volatile
 27719                           
 27720                           ; Switch size 1, requested type "space"
 27721                           ; Number of cases is 5, Range of values is 0 to 34
 27722                           ; switch strategies available:
 27723                           ; Name         Instructions Cycles
 27724                           ; simple_byte           16     9 (average)
 27725                           ;	Chosen strategy is simple_byte
 27726  014AE6  0A00               	xorlw	0	; case 0
 27727  014AE8  B4D8               	btfsc	status,2,c
 27728  014AEA  D7B8               	goto	i2l6477
 27729  014AEC  0A01               	xorlw	1	; case 1
 27730  014AEE  B4D8               	btfsc	status,2,c
 27731  014AF0  D7C5               	goto	i2l6485
 27732  014AF2  0A21               	xorlw	33	; case 32
 27733  014AF4  B4D8               	btfsc	status,2,c
 27734  014AF6  D7CB               	goto	i2l1743
 27735  014AF8  0A01               	xorlw	1	; case 33
 27736  014AFA  B4D8               	btfsc	status,2,c
 27737  014AFC  D7DE               	goto	i2l6493
 27738  014AFE  0A03               	xorlw	3	; case 34
 27739  014B00  A4D8               	btfss	status,2,c
 27740  014B02  0012               	return	
 27741  014B04  D7E9               	goto	i2l1745
 27742  014B06                     __end_of_USBCheckCDCRequest:
 27743                           	opt stack 0
 27744                           pclatu	equ	0xFFB
 27745                           pclath	equ	0xFFA
 27746                           tblptru	equ	0xFF8
 27747                           tblptrh	equ	0xFF7
 27748                           tblptrl	equ	0xFF6
 27749                           tablat	equ	0xFF5
 27750                           prodh	equ	0xFF4
 27751                           prodl	equ	0xFF3
 27752                           intcon	equ	0xFF2
 27753                           intcon2	equ	0xFF1
 27754                           postinc0	equ	0xFEE
 27755                           fsr0h	equ	0xFEA
 27756                           fsr0l	equ	0xFE9
 27757                           wreg	equ	0xFE8
 27758                           indf1	equ	0xFE7
 27759                           postinc1	equ	0xFE6
 27760                           postdec1	equ	0xFE5
 27761                           fsr1h	equ	0xFE2
 27762                           fsr1l	equ	0xFE1
 27763                           indf2	equ	0xFDF
 27764                           postinc2	equ	0xFDE
 27765                           postdec2	equ	0xFDD
 27766                           plusw2	equ	0xFDB
 27767                           fsr2h	equ	0xFDA
 27768                           fsr2l	equ	0xFD9
 27769                           status	equ	0xFD8
 27770                           
 27771 ;; *************** function _CDCInitEP *****************
 27772 ;; Defined at:
 27773 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 27774 ;; Parameters:    Size  Location     Type
 27775 ;;		None
 27776 ;; Auto vars:     Size  Location     Type
 27777 ;;		None
 27778 ;; Return value:  Size  Location     Type
 27779 ;;		None               void
 27780 ;; Registers used:
 27781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27782 ;; Tracked objects:
 27783 ;;		On entry : 0/0
 27784 ;;		On exit  : 0/0
 27785 ;;		Unchanged: 0/0
 27786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27791 ;;Total ram usage:        0 bytes
 27792 ;; Hardware stack levels used:    1
 27793 ;; Hardware stack levels required when called:    2
 27794 ;; This function calls:
 27795 ;;		_USBEnableEndpoint
 27796 ;;		i2_USBTransferOnePacket
 27797 ;; This function is called by:
 27798 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27799 ;; This function uses a non-reentrant model
 27800 ;;
 27801                           
 27802                           	psect	text120
 27803  016026                     __ptext120:
 27804                           	opt stack 0
 27805  016026                     _CDCInitEP:
 27806                           	opt stack 15
 27807                           
 27808                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 27809                           
 27810                           ;incstack = 0
 27811  016026  0E00               	movlw	0
 27812  016028  0101               	movlb	1	; () banked
 27813  01602A  6F88               	movwf	_line_coding& (0+255),b
 27814  01602C  0E4B               	movlw	75
 27815  01602E  6F89               	movwf	(_line_coding+1)& (0+255),b
 27816  016030  0E00               	movlw	0
 27817  016032  6F8A               	movwf	(_line_coding+2)& (0+255),b
 27818  016034  0E00               	movlw	0
 27819  016036  6F8B               	movwf	(_line_coding+3)& (0+255),b
 27820                           
 27821                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 27822  016038  0E00               	movlw	0
 27823  01603A  0101               	movlb	1	; () banked
 27824  01603C  6F8C               	movwf	(_line_coding+4)& (0+255),b
 27825                           
 27826                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 27827  01603E  0E00               	movlw	0
 27828  016040  0101               	movlb	1	; () banked
 27829  016042  6F8D               	movwf	(_line_coding+5)& (0+255),b
 27830                           
 27831                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 27832  016044  0E08               	movlw	8
 27833  016046  0101               	movlb	1	; () banked
 27834  016048  6F8E               	movwf	(_line_coding+6)& (0+255),b
 27835                           
 27836                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 27837  01604A  0E00               	movlw	0
 27838  01604C  0100               	movlb	0	; () banked
 27839  01604E  6FFB               	movwf	_cdc_rx_len& (0+255),b
 27840                           
 27841                           ; BSR set to: 0
 27842                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 27843  016050  0E1A               	movlw	26
 27844  016052  6E35               	movwf	USBEnableEndpoint@options,c
 27845  016054  0E01               	movlw	1
 27846  016056  EC71  F0B3         	call	_USBEnableEndpoint
 27847                           
 27848                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 27849  01605A  0E1E               	movlw	30
 27850  01605C  6E35               	movwf	USBEnableEndpoint@options,c
 27851  01605E  0E02               	movlw	2
 27852  016060  EC71  F0B3         	call	_USBEnableEndpoint
 27853                           
 27854                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27855  016064  0E00               	movlw	0
 27856  016066  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 27857  016068  0E64               	movlw	low _cdc_data_rx
 27858  01606A  6E2E               	movwf	i2USBTransferOnePacket@data,c
 27859  01606C  0E03               	movlw	high _cdc_data_rx
 27860  01606E  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 27861  016070  0E40               	movlw	64
 27862  016072  6E30               	movwf	i2USBTransferOnePacket@len,c
 27863  016074  0E02               	movlw	2
 27864  016076  EC85  F0AA         	call	i2_USBTransferOnePacket
 27865  01607A  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27866  01607E  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27867                           
 27868                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27869  016082  0E00               	movlw	0
 27870  016084  0101               	movlb	1	; () banked
 27871  016086  6F18               	movwf	_CDCDataInHandle& (0+255),b
 27872  016088  0E00               	movlw	0
 27873  01608A  0101               	movlb	1	; () banked
 27874  01608C  6F19               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27875                           
 27876                           ; BSR set to: 1
 27877                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27878  01608E  0E00               	movlw	0
 27879  016090  0100               	movlb	0	; () banked
 27880  016092  6FFC               	movwf	_cdc_trf_state& (0+255),b
 27881                           
 27882                           ; BSR set to: 0
 27883  016094  0012               	return		;funcret
 27884  016096                     __end_of_CDCInitEP:
 27885                           	opt stack 0
 27886                           pclatu	equ	0xFFB
 27887                           pclath	equ	0xFFA
 27888                           tblptru	equ	0xFF8
 27889                           tblptrh	equ	0xFF7
 27890                           tblptrl	equ	0xFF6
 27891                           tablat	equ	0xFF5
 27892                           prodh	equ	0xFF4
 27893                           prodl	equ	0xFF3
 27894                           intcon	equ	0xFF2
 27895                           intcon2	equ	0xFF1
 27896                           postinc0	equ	0xFEE
 27897                           fsr0h	equ	0xFEA
 27898                           fsr0l	equ	0xFE9
 27899                           wreg	equ	0xFE8
 27900                           indf1	equ	0xFE7
 27901                           postinc1	equ	0xFE6
 27902                           postdec1	equ	0xFE5
 27903                           fsr1h	equ	0xFE2
 27904                           fsr1l	equ	0xFE1
 27905                           indf2	equ	0xFDF
 27906                           postinc2	equ	0xFDE
 27907                           postdec2	equ	0xFDD
 27908                           plusw2	equ	0xFDB
 27909                           fsr2h	equ	0xFDA
 27910                           fsr2l	equ	0xFD9
 27911                           status	equ	0xFD8
 27912                           
 27913 ;; *************** function i2_USBTransferOnePacket *****************
 27914 ;; Defined at:
 27915 ;;		line 995 in file "../My_library/usb/usb_device.c"
 27916 ;; Parameters:    Size  Location     Type
 27917 ;;  ep              1    wreg     unsigned char 
 27918 ;;  dir             1    0[COMRAM] unsigned char 
 27919 ;;  data            2    1[COMRAM] PTR unsigned char 
 27920 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 27921 ;;  len             1    3[COMRAM] unsigned char 
 27922 ;; Auto vars:     Size  Location     Type
 27923 ;;  ep              1    4[COMRAM] unsigned char 
 27924 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 27925 ;;		 -> NULL(0), BDT(48), 
 27926 ;; Return value:  Size  Location     Type
 27927 ;;                  2    0[COMRAM] PTR void 
 27928 ;; Registers used:
 27929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27930 ;; Tracked objects:
 27931 ;;		On entry : 0/0
 27932 ;;		On exit  : 0/0
 27933 ;;		Unchanged: 0/0
 27934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27938 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27939 ;;Total ram usage:        7 bytes
 27940 ;; Hardware stack levels used:    1
 27941 ;; This function calls:
 27942 ;;		Nothing
 27943 ;; This function is called by:
 27944 ;;		_CDCInitEP
 27945 ;; This function uses a non-reentrant model
 27946 ;;
 27947                           
 27948                           	psect	text121
 27949  01550A                     __ptext121:
 27950                           	opt stack 0
 27951  01550A                     i2_USBTransferOnePacket:
 27952                           	opt stack 16
 27953                           
 27954                           ; BSR set to: 0
 27955                           ;incstack = 0
 27956                           ;i2USBTransferOnePacket@ep stored from wreg
 27957  01550A  6E31               	movwf	i2USBTransferOnePacket@ep,c
 27958                           
 27959                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 27960                           ;usb_device.c: 1000: if(dir != 0)
 27961  01550C  502D               	movf	i2USBTransferOnePacket@dir,w,c
 27962  01550E  B4D8               	btfsc	status,2,c
 27963  015510  D007               	goto	i2l6397
 27964                           
 27965                           ;usb_device.c: 1001: {
 27966                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 27967  015512  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27968  015514  0D02               	mullw	2
 27969  015516  0EF5               	movlw	low _pBDTEntryIn
 27970  015518  24F3               	addwf	prodl,w,c
 27971  01551A  6ED9               	movwf	fsr2l,c
 27972  01551C  0E00               	movlw	high _pBDTEntryIn
 27973  01551E  D006               	goto	L14
 27974  015520                     i2l6397:
 27975                           
 27976                           ;usb_device.c: 1005: else
 27977                           ;usb_device.c: 1006: {
 27978                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 27979  015520  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27980  015522  0D02               	mullw	2
 27981  015524  0E00               	movlw	low _pBDTEntryOut
 27982  015526  24F3               	addwf	prodl,w,c
 27983  015528  6ED9               	movwf	fsr2l,c
 27984  01552A  0E01               	movlw	high _pBDTEntryOut
 27985  01552C                     L14:
 27986  01552C  20F4               	addwfc	prodh,w,c
 27987  01552E  6EDA               	movwf	fsr2h,c
 27988  015530  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 27989  015534  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 27990                           
 27991                           ;usb_device.c: 1009: }
 27992                           ;usb_device.c: 1013: if(handle == 0)
 27993  015538  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27994  01553A  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 27995  01553C  A4D8               	btfss	status,2,c
 27996  01553E  D005               	goto	i2l6405
 27997                           
 27998                           ;usb_device.c: 1014: {
 27999                           ;usb_device.c: 1015: return 0;
 28000  015540  0E00               	movlw	0
 28001  015542  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28002  015544  0E00               	movlw	0
 28003  015546  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28004  015548  0012               	return	
 28005  01554A                     i2l6405:
 28006                           
 28007                           ;usb_device.c: 1016: }
 28008                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 28009  01554A  EE20 F002          	lfsr	2,2
 28010  01554E  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28011  015550  26D9               	addwf	fsr2l,f,c
 28012  015552  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28013  015554  22DA               	addwfc	fsr2h,f,c
 28014  015556  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28015  01555A  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28016                           
 28017                           ;usb_device.c: 1030: handle->CNT = len;
 28018  01555E  EE20 F001          	lfsr	2,1
 28019  015562  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28020  015564  26D9               	addwf	fsr2l,f,c
 28021  015566  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28022  015568  22DA               	addwfc	fsr2h,f,c
 28023  01556A  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28024                           
 28025                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 28026  01556E  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28027  015572  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28028  015576  0E40               	movlw	64
 28029  015578  16DF               	andwf	indf2,f,c
 28030                           
 28031                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 28032  01557A  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28033  01557E  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28034  015582  0E00               	movlw	0
 28035  015584  86DB               	bsf	plusw2,3,c
 28036                           
 28037                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 28038  015586  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28039  01558A  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28040  01558E  0E00               	movlw	0
 28041  015590  8EDB               	bsf	plusw2,7,c
 28042                           
 28043                           ;usb_device.c: 1036: if(dir != 0)
 28044  015592  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28045  015594  B4D8               	btfsc	status,2,c
 28046  015596  D007               	goto	i2l6417
 28047                           
 28048                           ;usb_device.c: 1037: {
 28049                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28050  015598  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28051  01559A  0D02               	mullw	2
 28052  01559C  0EF5               	movlw	low _pBDTEntryIn
 28053  01559E  24F3               	addwf	prodl,w,c
 28054  0155A0  6ED9               	movwf	fsr2l,c
 28055  0155A2  0E00               	movlw	high _pBDTEntryIn
 28056  0155A4  D006               	goto	L15
 28057  0155A6                     i2l6417:
 28058                           
 28059                           ;usb_device.c: 1041: else
 28060                           ;usb_device.c: 1042: {
 28061                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28062  0155A6  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28063  0155A8  0D02               	mullw	2
 28064  0155AA  0E00               	movlw	low _pBDTEntryOut
 28065  0155AC  24F3               	addwf	prodl,w,c
 28066  0155AE  6ED9               	movwf	fsr2l,c
 28067  0155B0  0E01               	movlw	high _pBDTEntryOut
 28068  0155B2                     L15:
 28069  0155B2  20F4               	addwfc	prodh,w,c
 28070  0155B4  6EDA               	movwf	fsr2h,c
 28071  0155B6  0E04               	movlw	4
 28072  0155B8  1ADF               	xorwf	indf2,f,c
 28073                           
 28074                           ;usb_device.c: 1045: }
 28075                           ;usb_device.c: 1046: return (void*)handle;
 28076  0155BA  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28077  0155BE  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28078  0155C2  0012               	return	
 28079  0155C4                     __end_ofi2_USBTransferOnePacket:
 28080                           	opt stack 0
 28081                           pclatu	equ	0xFFB
 28082                           pclath	equ	0xFFA
 28083                           tblptru	equ	0xFF8
 28084                           tblptrh	equ	0xFF7
 28085                           tblptrl	equ	0xFF6
 28086                           tablat	equ	0xFF5
 28087                           prodh	equ	0xFF4
 28088                           prodl	equ	0xFF3
 28089                           intcon	equ	0xFF2
 28090                           intcon2	equ	0xFF1
 28091                           postinc0	equ	0xFEE
 28092                           fsr0h	equ	0xFEA
 28093                           fsr0l	equ	0xFE9
 28094                           wreg	equ	0xFE8
 28095                           indf1	equ	0xFE7
 28096                           postinc1	equ	0xFE6
 28097                           postdec1	equ	0xFE5
 28098                           fsr1h	equ	0xFE2
 28099                           fsr1l	equ	0xFE1
 28100                           indf2	equ	0xFDF
 28101                           postinc2	equ	0xFDE
 28102                           postdec2	equ	0xFDD
 28103                           plusw2	equ	0xFDB
 28104                           fsr2h	equ	0xFDA
 28105                           fsr2l	equ	0xFD9
 28106                           status	equ	0xFD8
 28107                           
 28108 ;; *************** function _USBEnableEndpoint *****************
 28109 ;; Defined at:
 28110 ;;		line 878 in file "../My_library/usb/usb_device.c"
 28111 ;; Parameters:    Size  Location     Type
 28112 ;;  ep              1    wreg     unsigned char 
 28113 ;;  options         1    8[COMRAM] unsigned char 
 28114 ;; Auto vars:     Size  Location     Type
 28115 ;;  ep              1   11[COMRAM] unsigned char 
 28116 ;;  p               2    9[COMRAM] PTR unsigned char 
 28117 ;;		 -> UEP0(1), 
 28118 ;; Return value:  Size  Location     Type
 28119 ;;		None               void
 28120 ;; Registers used:
 28121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28122 ;; Tracked objects:
 28123 ;;		On entry : 0/0
 28124 ;;		On exit  : 0/0
 28125 ;;		Unchanged: 0/0
 28126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28127 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28128 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28131 ;;Total ram usage:        4 bytes
 28132 ;; Hardware stack levels used:    1
 28133 ;; Hardware stack levels required when called:    1
 28134 ;; This function calls:
 28135 ;;		_USBConfigureEndpoint
 28136 ;; This function is called by:
 28137 ;;		_CDCInitEP
 28138 ;; This function uses a non-reentrant model
 28139 ;;
 28140                           
 28141                           	psect	text122
 28142  0166E2                     __ptext122:
 28143                           	opt stack 0
 28144  0166E2                     _USBEnableEndpoint:
 28145                           	opt stack 15
 28146                           
 28147                           ;incstack = 0
 28148                           ;USBEnableEndpoint@ep stored from wreg
 28149  0166E2  6E38               	movwf	USBEnableEndpoint@ep,c
 28150                           
 28151                           ;usb_device.c: 880: unsigned char* p;
 28152                           ;usb_device.c: 884: if(options & 0x04)
 28153  0166E4  A435               	btfss	USBEnableEndpoint@options,2,c
 28154  0166E6  D005               	goto	i2l6349
 28155                           
 28156                           ;usb_device.c: 885: {
 28157                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28158  0166E8  0E00               	movlw	0
 28159  0166EA  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28160  0166EC  5038               	movf	USBEnableEndpoint@ep,w,c
 28161  0166EE  EC79  F0AC         	call	_USBConfigureEndpoint
 28162  0166F2                     i2l6349:
 28163                           
 28164                           ;usb_device.c: 887: }
 28165                           ;usb_device.c: 888: if(options & 0x02)
 28166  0166F2  A235               	btfss	USBEnableEndpoint@options,1,c
 28167  0166F4  D005               	goto	i2l6353
 28168                           
 28169                           ;usb_device.c: 889: {
 28170                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28171  0166F6  0E01               	movlw	1
 28172  0166F8  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28173  0166FA  5038               	movf	USBEnableEndpoint@ep,w,c
 28174  0166FC  EC79  F0AC         	call	_USBConfigureEndpoint
 28175  016700                     i2l6353:
 28176                           
 28177                           ;usb_device.c: 891: }
 28178                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28179  016700  5038               	movf	USBEnableEndpoint@ep,w,c
 28180  016702  0D01               	mullw	1
 28181  016704  0E26               	movlw	38
 28182  016706  24F3               	addwf	prodl,w,c
 28183  016708  6E36               	movwf	USBEnableEndpoint@p,c
 28184  01670A  0E0F               	movlw	15
 28185  01670C  20F4               	addwfc	prodh,w,c
 28186  01670E  6E37               	movwf	USBEnableEndpoint@p+1,c
 28187                           
 28188                           ;usb_device.c: 901: *p = options;
 28189  016710  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28190  016714  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28191  016718  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28192  01671C  0012               	return		;funcret
 28193  01671E                     __end_of_USBEnableEndpoint:
 28194                           	opt stack 0
 28195                           pclatu	equ	0xFFB
 28196                           pclath	equ	0xFFA
 28197                           tblptru	equ	0xFF8
 28198                           tblptrh	equ	0xFF7
 28199                           tblptrl	equ	0xFF6
 28200                           tablat	equ	0xFF5
 28201                           prodh	equ	0xFF4
 28202                           prodl	equ	0xFF3
 28203                           intcon	equ	0xFF2
 28204                           intcon2	equ	0xFF1
 28205                           postinc0	equ	0xFEE
 28206                           fsr0h	equ	0xFEA
 28207                           fsr0l	equ	0xFE9
 28208                           wreg	equ	0xFE8
 28209                           indf1	equ	0xFE7
 28210                           postinc1	equ	0xFE6
 28211                           postdec1	equ	0xFE5
 28212                           fsr1h	equ	0xFE2
 28213                           fsr1l	equ	0xFE1
 28214                           indf2	equ	0xFDF
 28215                           postinc2	equ	0xFDE
 28216                           postdec2	equ	0xFDD
 28217                           plusw2	equ	0xFDB
 28218                           fsr2h	equ	0xFDA
 28219                           fsr2l	equ	0xFD9
 28220                           status	equ	0xFD8
 28221                           
 28222 ;; *************** function _USBConfigureEndpoint *****************
 28223 ;; Defined at:
 28224 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 28225 ;; Parameters:    Size  Location     Type
 28226 ;;  EPNum           1    wreg     unsigned char 
 28227 ;;  direction       1    0[COMRAM] unsigned char 
 28228 ;; Auto vars:     Size  Location     Type
 28229 ;;  EPNum           1    5[COMRAM] unsigned char 
 28230 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28231 ;;		 -> BDT(48), 
 28232 ;; Return value:  Size  Location     Type
 28233 ;;		None               void
 28234 ;; Registers used:
 28235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28236 ;; Tracked objects:
 28237 ;;		On entry : 0/0
 28238 ;;		On exit  : 0/0
 28239 ;;		Unchanged: 0/0
 28240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28241 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28242 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28243 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28245 ;;Total ram usage:        8 bytes
 28246 ;; Hardware stack levels used:    1
 28247 ;; This function calls:
 28248 ;;		Nothing
 28249 ;; This function is called by:
 28250 ;;		_USBEnableEndpoint
 28251 ;; This function uses a non-reentrant model
 28252 ;;
 28253                           
 28254                           	psect	text123
 28255  0158F2                     __ptext123:
 28256                           	opt stack 0
 28257  0158F2                     _USBConfigureEndpoint:
 28258                           	opt stack 15
 28259                           
 28260                           ;incstack = 0
 28261                           ;USBConfigureEndpoint@EPNum stored from wreg
 28262  0158F2  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28263                           
 28264                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28265                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28266  0158F4  0E00               	movlw	0
 28267  0158F6  6E33               	movwf	USBConfigureEndpoint@handle,c
 28268  0158F8  0E0D               	movlw	13
 28269  0158FA  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28270                           
 28271                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28272  0158FC  502D               	movf	USBConfigureEndpoint@direction,w,c
 28273  0158FE  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28274  015900  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28275  015902  90D8               	bcf	status,0,c
 28276  015904  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28277  015906  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28278  015908  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28279  01590A  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28280  01590C  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28281  01590E  90D8               	bcf	status,0,c
 28282  015910  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28283  015912  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28284  015914  90D8               	bcf	status,0,c
 28285  015916  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28286  015918  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28287  01591A  502E               	movf	??_USBConfigureEndpoint,w,c
 28288  01591C  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28289  01591E  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28290  015920  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28291  015922  90D8               	bcf	status,0,c
 28292  015924  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28293  015926  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28294  015928  90D8               	bcf	status,0,c
 28295  01592A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28296  01592C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28297  01592E  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28298  015930  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28299  015932  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28300  015934  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28301                           
 28302                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28303  015936  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28304  01593A  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28305  01593E  9EDF               	bcf	indf2,7,c
 28306                           
 28307                           ;usb_device.c: 1557: if(direction == 0)
 28308  015940  502D               	movf	USBConfigureEndpoint@direction,w,c
 28309  015942  A4D8               	btfss	status,2,c
 28310  015944  D007               	goto	i2l6339
 28311                           
 28312                           ;usb_device.c: 1558: {
 28313                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28314  015946  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28315  015948  0D02               	mullw	2
 28316  01594A  0E00               	movlw	low _pBDTEntryOut
 28317  01594C  24F3               	addwf	prodl,w,c
 28318  01594E  6ED9               	movwf	fsr2l,c
 28319  015950  0E01               	movlw	high _pBDTEntryOut
 28320  015952  D006               	goto	L16
 28321  015954                     i2l6339:
 28322                           
 28323                           ;usb_device.c: 1561: else
 28324                           ;usb_device.c: 1562: {
 28325                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28326  015954  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28327  015956  0D02               	mullw	2
 28328  015958  0EF5               	movlw	low _pBDTEntryIn
 28329  01595A  24F3               	addwf	prodl,w,c
 28330  01595C  6ED9               	movwf	fsr2l,c
 28331  01595E  0E00               	movlw	high _pBDTEntryIn
 28332  015960                     L16:
 28333  015960  20F4               	addwfc	prodh,w,c
 28334  015962  6EDA               	movwf	fsr2h,c
 28335  015964  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28336  015968  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28337                           
 28338                           ;usb_device.c: 1564: }
 28339                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28340  01596C  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28341  015970  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28342  015974  9CDF               	bcf	indf2,6,c
 28343                           
 28344                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28345  015976  EE20 F004          	lfsr	2,4
 28346  01597A  5033               	movf	USBConfigureEndpoint@handle,w,c
 28347  01597C  26D9               	addwf	fsr2l,f,c
 28348  01597E  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28349  015980  22DA               	addwfc	fsr2h,f,c
 28350  015982  8CDF               	bsf	indf2,6,c
 28351  015984  0012               	return		;funcret
 28352  015986                     __end_of_USBConfigureEndpoint:
 28353                           	opt stack 0
 28354                           pclatu	equ	0xFFB
 28355                           pclath	equ	0xFFA
 28356                           tblptru	equ	0xFF8
 28357                           tblptrh	equ	0xFF7
 28358                           tblptrl	equ	0xFF6
 28359                           tablat	equ	0xFF5
 28360                           prodh	equ	0xFF4
 28361                           prodl	equ	0xFF3
 28362                           intcon	equ	0xFF2
 28363                           intcon2	equ	0xFF1
 28364                           postinc0	equ	0xFEE
 28365                           fsr0h	equ	0xFEA
 28366                           fsr0l	equ	0xFE9
 28367                           wreg	equ	0xFE8
 28368                           indf1	equ	0xFE7
 28369                           postinc1	equ	0xFE6
 28370                           postdec1	equ	0xFE5
 28371                           fsr1h	equ	0xFE2
 28372                           fsr1l	equ	0xFE1
 28373                           indf2	equ	0xFDF
 28374                           postinc2	equ	0xFDE
 28375                           postdec2	equ	0xFDD
 28376                           plusw2	equ	0xFDB
 28377                           fsr2h	equ	0xFDA
 28378                           fsr2l	equ	0xFD9
 28379                           status	equ	0xFD8
 28380                           
 28381 ;; *************** function _USBCtrlTrfOutHandler *****************
 28382 ;; Defined at:
 28383 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 28384 ;; Parameters:    Size  Location     Type
 28385 ;;		None
 28386 ;; Auto vars:     Size  Location     Type
 28387 ;;		None
 28388 ;; Return value:  Size  Location     Type
 28389 ;;		None               void
 28390 ;; Registers used:
 28391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28392 ;; Tracked objects:
 28393 ;;		On entry : 0/0
 28394 ;;		On exit  : 0/0
 28395 ;;		Unchanged: 0/0
 28396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28401 ;;Total ram usage:        0 bytes
 28402 ;; Hardware stack levels used:    1
 28403 ;; Hardware stack levels required when called:    2
 28404 ;; This function calls:
 28405 ;;		_USBCtrlTrfRxService
 28406 ;; This function is called by:
 28407 ;;		_USBCtrlEPService
 28408 ;; This function uses a non-reentrant model
 28409 ;;
 28410                           
 28411                           	psect	text124
 28412  01647E                     __ptext124:
 28413                           	opt stack 0
 28414  01647E                     _USBCtrlTrfOutHandler:
 28415                           	opt stack 15
 28416                           
 28417                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28418                           
 28419                           ;incstack = 0
 28420  01647E  0E02               	movlw	2
 28421  016480  1818               	xorwf	_controlTransferState,w,c	;volatile
 28422  016482  A4D8               	btfss	status,2,c
 28423  016484  D003               	goto	i2l7785
 28424                           
 28425                           ;usb_device.c: 2544: {
 28426                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28427  016486  ECB1  F09D         	call	_USBCtrlTrfRxService	;wreg free
 28428                           
 28429                           ;usb_device.c: 2546: }
 28430  01648A  0012               	return	
 28431  01648C                     i2l7785:
 28432                           
 28433                           ;usb_device.c: 2547: else
 28434                           ;usb_device.c: 2548: {
 28435                           ;usb_device.c: 2551: controlTransferState = 0;
 28436  01648C  0E00               	movlw	0
 28437  01648E  6E18               	movwf	_controlTransferState,c	;volatile
 28438                           
 28439                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28440  016490  500F               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28441  016492  A4D8               	btfss	status,2,c
 28442  016494  D01F               	goto	i2l7793
 28443                           
 28444                           ;usb_device.c: 2559: {
 28445                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28446  016496  EE20 F001          	lfsr	2,1
 28447  01649A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28448  01649C  26D9               	addwf	fsr2l,f,c
 28449  01649E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28450  0164A0  22DA               	addwfc	fsr2h,f,c
 28451  0164A2  0E08               	movlw	8
 28452  0164A4  6EDF               	movwf	indf2,c
 28453                           
 28454                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28455  0164A6  EE20 F002          	lfsr	2,2
 28456  0164AA  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28457  0164AC  26D9               	addwf	fsr2l,f,c
 28458  0164AE  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28459  0164B0  22DA               	addwfc	fsr2h,f,c
 28460  0164B2  0E30               	movlw	48
 28461  0164B4  6EDE               	movwf	postinc2,c
 28462  0164B6  0E0D               	movlw	13
 28463  0164B8  6EDD               	movwf	postdec2,c
 28464                           
 28465                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28466  0164BA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28467  0164BE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28468  0164C2  0E0C               	movlw	12
 28469  0164C4  6EDF               	movwf	indf2,c
 28470                           
 28471                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28472  0164C6  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28473  0164CA  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28474  0164CE  0E00               	movlw	0
 28475  0164D0  8EDB               	bsf	plusw2,7,c
 28476                           
 28477                           ;usb_device.c: 2564: }
 28478  0164D2  0012               	return	
 28479  0164D4                     i2l7793:
 28480                           
 28481                           ;usb_device.c: 2565: else
 28482                           ;usb_device.c: 2566: {
 28483                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 28484  0164D4  0E00               	movlw	0
 28485  0164D6  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28486  0164D8  0012               	return	
 28487  0164DA                     __end_of_USBCtrlTrfOutHandler:
 28488                           	opt stack 0
 28489                           pclatu	equ	0xFFB
 28490                           pclath	equ	0xFFA
 28491                           tblptru	equ	0xFF8
 28492                           tblptrh	equ	0xFF7
 28493                           tblptrl	equ	0xFF6
 28494                           tablat	equ	0xFF5
 28495                           prodh	equ	0xFF4
 28496                           prodl	equ	0xFF3
 28497                           intcon	equ	0xFF2
 28498                           intcon2	equ	0xFF1
 28499                           postinc0	equ	0xFEE
 28500                           fsr0h	equ	0xFEA
 28501                           fsr0l	equ	0xFE9
 28502                           wreg	equ	0xFE8
 28503                           indf1	equ	0xFE7
 28504                           postinc1	equ	0xFE6
 28505                           postdec1	equ	0xFE5
 28506                           fsr1h	equ	0xFE2
 28507                           fsr1l	equ	0xFE1
 28508                           indf2	equ	0xFDF
 28509                           postinc2	equ	0xFDE
 28510                           postdec2	equ	0xFDD
 28511                           plusw2	equ	0xFDB
 28512                           fsr2h	equ	0xFDA
 28513                           fsr2l	equ	0xFD9
 28514                           status	equ	0xFD8
 28515                           
 28516 ;; *************** function _USBCtrlTrfRxService *****************
 28517 ;; Defined at:
 28518 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 28519 ;; Parameters:    Size  Location     Type
 28520 ;;		None
 28521 ;; Auto vars:     Size  Location     Type
 28522 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28523 ;;  i               1    0[COMRAM] unsigned char 
 28524 ;; Return value:  Size  Location     Type
 28525 ;;		None               void
 28526 ;; Registers used:
 28527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28528 ;; Tracked objects:
 28529 ;;		On entry : 0/0
 28530 ;;		On exit  : 0/0
 28531 ;;		Unchanged: 0/0
 28532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28537 ;;Total ram usage:        2 bytes
 28538 ;; Hardware stack levels used:    1
 28539 ;; Hardware stack levels required when called:    1
 28540 ;; This function calls:
 28541 ;;		_USBCtrlEPAllowStatusStage
 28542 ;; This function is called by:
 28543 ;;		_USBCtrlTrfOutHandler
 28544 ;; This function uses a non-reentrant model
 28545 ;;
 28546                           
 28547                           	psect	text125
 28548  013B62                     __ptext125:
 28549                           	opt stack 0
 28550  013B62                     _USBCtrlTrfRxService:
 28551                           	opt stack 15
 28552                           
 28553                           ;usb_device.c: 1854: uint8_t byteToRead;
 28554                           ;usb_device.c: 1855: uint8_t i;
 28555                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28556                           
 28557                           ;incstack = 0
 28558  013B62  EE20 F001          	lfsr	2,1
 28559  013B66  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28560  013B68  26D9               	addwf	fsr2l,f,c
 28561  013B6A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28562  013B6C  22DA               	addwfc	fsr2h,f,c
 28563  013B6E  50DF               	movf	indf2,w,c
 28564  013B70  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 28565                           
 28566                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 28567  013B72  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28568  013B74  0100               	movlb	0	; () banked
 28569  013B76  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28570  013B78  0E00               	movlw	0
 28571  013B7A  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28572  013B7C  A0D8               	btfss	status,0,c
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;usb_device.c: 1866: {
 28576                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 28577  013B7E  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28578                           
 28579                           ; BSR set to: 0
 28580                           ;usb_device.c: 1868: }
 28581                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 28582                           
 28583                           ; BSR set to: 0
 28584  013B82  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28585  013B84  0100               	movlb	0	; () banked
 28586  013B86  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 28587  013B88  0E00               	movlw	0
 28588  013B8A  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 28589                           
 28590                           ; BSR set to: 0
 28591                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 28592  013B8C  0E00               	movlw	0
 28593  013B8E  6E2D               	movwf	USBCtrlTrfRxService@i,c
 28594  013B90  D012               	goto	i2l7349
 28595  013B92                     i2l7343:
 28596                           
 28597                           ; BSR set to: 0
 28598                           ;usb_device.c: 1875: {
 28599                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28600  013B92  502D               	movf	USBCtrlTrfRxService@i,w,c
 28601  013B94  0D01               	mullw	1
 28602  013B96  0E38               	movlw	56
 28603  013B98  24F3               	addwf	prodl,w,c
 28604  013B9A  6ED9               	movwf	fsr2l,c
 28605  013B9C  0E0D               	movlw	13
 28606  013B9E  20F4               	addwfc	prodh,w,c
 28607  013BA0  6EDA               	movwf	fsr2h,c
 28608  013BA2  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 28609  013BA6  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 28610  013BAA  CFDF FFE7          	movff	indf2,indf1
 28611                           
 28612                           ; BSR set to: 0
 28613  013BAE  0100               	movlb	0	; () banked
 28614  013BB0  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 28615  013BB2  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 28616                           
 28617                           ; BSR set to: 0
 28618  013BB4  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 28619  013BB6                     i2l7349:
 28620                           
 28621                           ; BSR set to: 0
 28622  013BB6  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28623  013BB8  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 28624  013BBA  A0D8               	btfss	status,0,c
 28625  013BBC  D7EA               	goto	i2l7343
 28626                           
 28627                           ; BSR set to: 0
 28628                           ;usb_device.c: 1877: }
 28629                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 28630                           
 28631                           ; BSR set to: 0
 28632  013BBE  0100               	movlb	0	; () banked
 28633  013BC0  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28634  013BC2  0100               	movlb	0	; () banked
 28635  013BC4  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28636  013BC6  B4D8               	btfsc	status,2,c
 28637  013BC8  D032               	goto	i2l7365
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;usb_device.c: 1882: {
 28641                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 28642  013BCA  EE20 F001          	lfsr	2,1
 28643  013BCE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28644  013BD0  26D9               	addwf	fsr2l,f,c
 28645  013BD2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28646  013BD4  22DA               	addwfc	fsr2h,f,c
 28647  013BD6  0E08               	movlw	8
 28648  013BD8  6EDF               	movwf	indf2,c
 28649                           
 28650                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28651  013BDA  EE20 F002          	lfsr	2,2
 28652  013BDE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28653  013BE0  26D9               	addwf	fsr2l,f,c
 28654  013BE2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28655  013BE4  22DA               	addwfc	fsr2h,f,c
 28656  013BE6  0E38               	movlw	56
 28657  013BE8  6EDE               	movwf	postinc2,c
 28658  013BEA  0E0D               	movlw	13
 28659  013BEC  6EDD               	movwf	postdec2,c
 28660                           
 28661                           ; BSR set to: 0
 28662                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28663  013BEE  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28664  013BF2  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28665  013BF6  BCDF               	btfsc	indf2,6,c
 28666  013BF8  D00D               	goto	i2l7361
 28667                           
 28668                           ; BSR set to: 0
 28669                           ;usb_device.c: 1886: {
 28670                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28671  013BFA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28672  013BFE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28673  013C02  0E48               	movlw	72
 28674  013C04  6EDF               	movwf	indf2,c
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28678  013C06  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28679  013C0A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28680  013C0E  0E00               	movlw	0
 28681  013C10  8EDB               	bsf	plusw2,7,c
 28682                           
 28683                           ;usb_device.c: 1889: }
 28684  013C12  0012               	return	
 28685  013C14                     i2l7361:
 28686                           
 28687                           ; BSR set to: 0
 28688                           ;usb_device.c: 1890: else
 28689                           ;usb_device.c: 1891: {
 28690                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28691  013C14  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28692  013C18  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28693  013C1C  0E08               	movlw	8
 28694  013C1E  6EDF               	movwf	indf2,c
 28695                           
 28696                           ; BSR set to: 0
 28697                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28698  013C20  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28699  013C24  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28700  013C28  0E00               	movlw	0
 28701  013C2A  8EDB               	bsf	plusw2,7,c
 28702                           
 28703                           ; BSR set to: 0
 28704                           ;usb_device.c: 1894: }
 28705                           ;usb_device.c: 1895: }
 28706  013C2C  0012               	return	
 28707  013C2E                     i2l7365:
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;usb_device.c: 1896: else
 28711                           ;usb_device.c: 1897: {
 28712                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 28713  013C2E  EE20 F001          	lfsr	2,1
 28714  013C32  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28715  013C34  26D9               	addwf	fsr2l,f,c
 28716  013C36  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28717  013C38  22DA               	addwfc	fsr2h,f,c
 28718  013C3A  0E08               	movlw	8
 28719  013C3C  6EDF               	movwf	indf2,c
 28720                           
 28721                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28722  013C3E  EE20 F002          	lfsr	2,2
 28723  013C42  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28724  013C44  26D9               	addwf	fsr2l,f,c
 28725  013C46  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28726  013C48  22DA               	addwfc	fsr2h,f,c
 28727  013C4A  0E30               	movlw	48
 28728  013C4C  6EDE               	movwf	postinc2,c
 28729  013C4E  0E0D               	movlw	13
 28730  013C50  6EDD               	movwf	postdec2,c
 28731                           
 28732                           ; BSR set to: 0
 28733                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28734  013C52  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28735  013C56  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28736  013C5A  0E04               	movlw	4
 28737  013C5C  6EDF               	movwf	indf2,c
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28741  013C5E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28742  013C62  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28743  013C66  0E00               	movlw	0
 28744  013C68  8EDB               	bsf	plusw2,7,c
 28745                           
 28746                           ; BSR set to: 0
 28747                           ;usb_device.c: 1926: }
 28748                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;usb_device.c: 1915: {
 28752                           ;usb_device.c: 1921: outPipes[0].pFunc();
 28753  013C6A  0100               	movlb	0	; () banked
 28754  013C6C  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28755                           
 28756                           ; BSR set to: 0
 28757                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 28758  013C6E  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28759  013C70  A4D8               	btfss	status,2,c
 28760  013C72  0012               	return	
 28761                           
 28762                           ; BSR set to: 0
 28763                           ;usb_device.c: 1942: {
 28764                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 28765  013C74  EC89  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28766  013C78  0012               	return	
 28767  013C7A                     __end_of_USBCtrlTrfRxService:
 28768                           	opt stack 0
 28769                           pclatu	equ	0xFFB
 28770                           pclath	equ	0xFFA
 28771                           tblptru	equ	0xFF8
 28772                           tblptrh	equ	0xFF7
 28773                           tblptrl	equ	0xFF6
 28774                           tablat	equ	0xFF5
 28775                           prodh	equ	0xFF4
 28776                           prodl	equ	0xFF3
 28777                           intcon	equ	0xFF2
 28778                           intcon2	equ	0xFF1
 28779                           postinc0	equ	0xFEE
 28780                           fsr0h	equ	0xFEA
 28781                           fsr0l	equ	0xFE9
 28782                           wreg	equ	0xFE8
 28783                           indf1	equ	0xFE7
 28784                           postinc1	equ	0xFE6
 28785                           postdec1	equ	0xFE5
 28786                           fsr1h	equ	0xFE2
 28787                           fsr1l	equ	0xFE1
 28788                           indf2	equ	0xFDF
 28789                           postinc2	equ	0xFDE
 28790                           postdec2	equ	0xFDD
 28791                           plusw2	equ	0xFDB
 28792                           fsr2h	equ	0xFDA
 28793                           fsr2l	equ	0xFD9
 28794                           status	equ	0xFD8
 28795                           
 28796 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28797 ;; Defined at:
 28798 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 28799 ;; Parameters:    Size  Location     Type
 28800 ;;		None
 28801 ;; Auto vars:     Size  Location     Type
 28802 ;;		None
 28803 ;; Return value:  Size  Location     Type
 28804 ;;		None               void
 28805 ;; Registers used:
 28806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28807 ;; Tracked objects:
 28808 ;;		On entry : 0/0
 28809 ;;		On exit  : 0/0
 28810 ;;		Unchanged: 0/0
 28811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28816 ;;Total ram usage:        0 bytes
 28817 ;; Hardware stack levels used:    1
 28818 ;; This function calls:
 28819 ;;		Nothing
 28820 ;; This function is called by:
 28821 ;;		_USBDeviceTasks
 28822 ;;		_USBCtrlEPServiceComplete
 28823 ;;		_USBCtrlTrfRxService
 28824 ;; This function uses a non-reentrant model
 28825 ;;
 28826                           
 28827                           	psect	text126
 28828  014F12                     __ptext126:
 28829                           	opt stack 0
 28830  014F12                     _USBCtrlEPAllowStatusStage:
 28831                           	opt stack 15
 28832                           
 28833                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 28834                           
 28835                           ;incstack = 0
 28836  014F12  5015               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 28837  014F14  A4D8               	btfss	status,2,c
 28838  014F16  0012               	return	
 28839                           
 28840                           ;usb_device.c: 1424: {
 28841                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 28842  014F18  0E01               	movlw	1
 28843  014F1A  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28844                           
 28845                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 28846  014F1C  5016               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 28847  014F1E  A4D8               	btfss	status,2,c
 28848  014F20  0012               	return	
 28849                           
 28850                           ;usb_device.c: 1427: {
 28851                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 28852  014F22  0E01               	movlw	1
 28853  014F24  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28854                           
 28855                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28856  014F26  0E02               	movlw	2
 28857  014F28  1818               	xorwf	_controlTransferState,w,c	;volatile
 28858  014F2A  A4D8               	btfss	status,2,c
 28859  014F2C  D016               	goto	i2l7027
 28860                           
 28861                           ;usb_device.c: 1433: {
 28862                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28863  014F2E  0100               	movlb	0	; () banked
 28864  014F30  EE20 F001          	lfsr	2,1
 28865  014F34  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 28866  014F36  26D9               	addwf	fsr2l,f,c
 28867  014F38  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28868  014F3A  22DA               	addwfc	fsr2h,f,c
 28869  014F3C  0E00               	movlw	0
 28870  014F3E  6EDF               	movwf	indf2,c
 28871                           
 28872                           ; BSR set to: 0
 28873                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28874  014F40  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28875  014F44  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28876  014F48  0E48               	movlw	72
 28877  014F4A  6EDF               	movwf	indf2,c
 28878                           
 28879                           ; BSR set to: 0
 28880                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28881  014F4C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28882  014F50  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28883  014F54  0E00               	movlw	0
 28884  014F56  8EDB               	bsf	plusw2,7,c
 28885                           
 28886                           ;usb_device.c: 1437: }
 28887  014F58  0012               	return	
 28888  014F5A                     i2l7027:
 28889                           
 28890                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28891  014F5A  0418               	decf	_controlTransferState,w,c	;volatile
 28892  014F5C  A4D8               	btfss	status,2,c
 28893  014F5E  0012               	return	
 28894                           
 28895                           ;usb_device.c: 1439: {
 28896                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28897  014F60  0E00               	movlw	0
 28898  014F62  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28899                           
 28900                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28901  014F64  EE20 F001          	lfsr	2,1
 28902  014F68  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28903  014F6A  26D9               	addwf	fsr2l,f,c
 28904  014F6C  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28905  014F6E  22DA               	addwfc	fsr2h,f,c
 28906  014F70  0E08               	movlw	8
 28907  014F72  6EDF               	movwf	indf2,c
 28908                           
 28909                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28910  014F74  EE20 F002          	lfsr	2,2
 28911  014F78  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28912  014F7A  26D9               	addwf	fsr2l,f,c
 28913  014F7C  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28914  014F7E  22DA               	addwfc	fsr2h,f,c
 28915  014F80  0E30               	movlw	48
 28916  014F82  6EDE               	movwf	postinc2,c
 28917  014F84  0E0D               	movlw	13
 28918  014F86  6EDD               	movwf	postdec2,c
 28919                           
 28920                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 28921  014F88  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28922  014F8C  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28923  014F90  0E04               	movlw	4
 28924  014F92  6EDF               	movwf	indf2,c
 28925                           
 28926                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28927  014F94  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28928  014F98  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28929  014F9C  0E00               	movlw	0
 28930  014F9E  8EDB               	bsf	plusw2,7,c
 28931                           
 28932                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 28933  014FA0  0E01               	movlw	1
 28934  014FA2  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28935                           
 28936                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 28937  014FA4  EE20 F001          	lfsr	2,1
 28938  014FA8  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28939  014FAA  26D9               	addwf	fsr2l,f,c
 28940  014FAC  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28941  014FAE  22DA               	addwfc	fsr2h,f,c
 28942  014FB0  0E08               	movlw	8
 28943  014FB2  6EDF               	movwf	indf2,c
 28944                           
 28945                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28946  014FB4  EE20 F002          	lfsr	2,2
 28947  014FB8  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28948  014FBA  26D9               	addwf	fsr2l,f,c
 28949  014FBC  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28950  014FBE  22DA               	addwfc	fsr2h,f,c
 28951  014FC0  0E30               	movlw	48
 28952  014FC2  6EDE               	movwf	postinc2,c
 28953  014FC4  0E0D               	movlw	13
 28954  014FC6  6EDD               	movwf	postdec2,c
 28955                           
 28956                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 28957  014FC8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28958  014FCC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28959  014FD0  0E80               	movlw	128
 28960  014FD2  6EDF               	movwf	indf2,c
 28961  014FD4  0012               	return	
 28962  014FD6                     __end_of_USBCtrlEPAllowStatusStage:
 28963                           	opt stack 0
 28964                           pclatu	equ	0xFFB
 28965                           pclath	equ	0xFFA
 28966                           tblptru	equ	0xFF8
 28967                           tblptrh	equ	0xFF7
 28968                           tblptrl	equ	0xFF6
 28969                           tablat	equ	0xFF5
 28970                           prodh	equ	0xFF4
 28971                           prodl	equ	0xFF3
 28972                           intcon	equ	0xFF2
 28973                           intcon2	equ	0xFF1
 28974                           postinc0	equ	0xFEE
 28975                           fsr0h	equ	0xFEA
 28976                           fsr0l	equ	0xFE9
 28977                           wreg	equ	0xFE8
 28978                           indf1	equ	0xFE7
 28979                           postinc1	equ	0xFE6
 28980                           postdec1	equ	0xFE5
 28981                           fsr1h	equ	0xFE2
 28982                           fsr1l	equ	0xFE1
 28983                           indf2	equ	0xFDF
 28984                           postinc2	equ	0xFDE
 28985                           postdec2	equ	0xFDD
 28986                           plusw2	equ	0xFDB
 28987                           fsr2h	equ	0xFDA
 28988                           fsr2l	equ	0xFD9
 28989                           status	equ	0xFD8
 28990                           
 28991 ;; *************** function _USBCtrlTrfInHandler *****************
 28992 ;; Defined at:
 28993 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 28994 ;; Parameters:    Size  Location     Type
 28995 ;;		None
 28996 ;; Auto vars:     Size  Location     Type
 28997 ;;  lastDTS         1    1[COMRAM] unsigned char 
 28998 ;; Return value:  Size  Location     Type
 28999 ;;		None               void
 29000 ;; Registers used:
 29001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29002 ;; Tracked objects:
 29003 ;;		On entry : 0/0
 29004 ;;		On exit  : 0/0
 29005 ;;		Unchanged: 0/0
 29006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29011 ;;Total ram usage:        1 bytes
 29012 ;; Hardware stack levels used:    1
 29013 ;; Hardware stack levels required when called:    1
 29014 ;; This function calls:
 29015 ;;		_USBCtrlTrfTxService
 29016 ;; This function is called by:
 29017 ;;		_USBCtrlEPService
 29018 ;; This function uses a non-reentrant model
 29019 ;;
 29020                           
 29021                           	psect	text127
 29022  014FD6                     __ptext127:
 29023                           	opt stack 0
 29024  014FD6                     _USBCtrlTrfInHandler:
 29025                           	opt stack 16
 29026                           
 29027                           ;usb_device.c: 2597: uint8_t lastDTS;
 29028                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29029                           
 29030                           ;incstack = 0
 29031  014FD6  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29032  014FDA  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29033  014FDE  0E00               	movlw	0
 29034  014FE0  BCDF               	btfsc	indf2,6,c
 29035  014FE2  0E01               	movlw	1
 29036  014FE4  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29037                           
 29038                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29039  014FE6  0E04               	movlw	4
 29040  014FE8  0100               	movlb	0	; () banked
 29041  014FEA  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29042                           
 29043                           ; BSR set to: 0
 29044                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 29045  014FEC  0E08               	movlw	8
 29046  014FEE  1814               	xorwf	_USBDeviceState,w,c	;volatile
 29047  014FF0  A4D8               	btfss	status,2,c
 29048  014FF2  D00D               	goto	i2l7809
 29049                           
 29050                           ; BSR set to: 0
 29051                           ;usb_device.c: 2608: {
 29052                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29053  014FF4  010D               	movlb	13	; () banked
 29054  014FF6  5132               	movf	50,w,b	;volatile
 29055  014FF8  0B7F               	andlw	127
 29056  014FFA  010F               	movlb	15	; () banked
 29057  014FFC  6F38               	movwf	56,b	;volatile
 29058                           
 29059                           ; BSR set to: 15
 29060                           ;usb_device.c: 2610: if(UADDR != 0u)
 29061  014FFE  010F               	movlb	15	; () banked
 29062  015000  5138               	movf	56,w,b	;volatile
 29063  015002  B4D8               	btfsc	status,2,c
 29064  015004  D002               	goto	i2l7807
 29065                           
 29066                           ; BSR set to: 15
 29067                           ;usb_device.c: 2611: {
 29068                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29069  015006  0E10               	movlw	16
 29070  015008  D001               	goto	L17
 29071  01500A                     i2l7807:
 29072                           
 29073                           ; BSR set to: 15
 29074                           ;usb_device.c: 2614: else
 29075                           ;usb_device.c: 2615: {
 29076                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29077  01500A  0E04               	movlw	4
 29078  01500C                     L17:
 29079  01500C  6E14               	movwf	_USBDeviceState,c	;volatile
 29080  01500E                     i2l7809:
 29081                           
 29082                           ;usb_device.c: 2617: }
 29083                           ;usb_device.c: 2618: }
 29084                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29085  01500E  0418               	decf	_controlTransferState,w,c	;volatile
 29086  015010  A4D8               	btfss	status,2,c
 29087  015012  D03B               	goto	i2l1638
 29088                           
 29089                           ;usb_device.c: 2622: {
 29090                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29091  015014  0100               	movlb	0	; () banked
 29092  015016  EE20 F002          	lfsr	2,2
 29093  01501A  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29094  01501C  26D9               	addwf	fsr2l,f,c
 29095  01501E  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29096  015020  22DA               	addwfc	fsr2h,f,c
 29097  015022  0E38               	movlw	56
 29098  015024  6EDE               	movwf	postinc2,c
 29099  015026  0E0D               	movlw	13
 29100  015028  6EDD               	movwf	postdec2,c
 29101                           
 29102                           ; BSR set to: 0
 29103                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29104  01502A  ECF5  F0A2         	call	_USBCtrlTrfTxService	;wreg free
 29105                           
 29106                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29107  01502E  0E02               	movlw	2
 29108  015030  1822               	xorwf	_shortPacketStatus,w,c	;volatile
 29109  015032  A4D8               	btfss	status,2,c
 29110  015034  D00D               	goto	i2l7821
 29111                           
 29112                           ;usb_device.c: 2631: {
 29113                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29114  015036  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29115  01503A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29116  01503E  0E04               	movlw	4
 29117  015040  6EDF               	movwf	indf2,c
 29118                           
 29119                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29120  015042  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29121  015046  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29122  01504A  0E00               	movlw	0
 29123  01504C  8EDB               	bsf	plusw2,7,c
 29124                           
 29125                           ;usb_device.c: 2636: }
 29126  01504E  0012               	return	
 29127  015050                     i2l7821:
 29128                           
 29129                           ;usb_device.c: 2637: else
 29130                           ;usb_device.c: 2638: {
 29131                           ;usb_device.c: 2639: if(lastDTS == 0)
 29132  015050  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29133  015052  A4D8               	btfss	status,2,c
 29134  015054  D00D               	goto	i2l7827
 29135                           
 29136                           ;usb_device.c: 2640: {
 29137                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29138  015056  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29139  01505A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29140  01505E  0E48               	movlw	72
 29141  015060  6EDF               	movwf	indf2,c
 29142                           
 29143                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29144  015062  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29145  015066  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29146  01506A  0E00               	movlw	0
 29147  01506C  8EDB               	bsf	plusw2,7,c
 29148                           
 29149                           ;usb_device.c: 2643: }
 29150  01506E  0012               	return	
 29151  015070                     i2l7827:
 29152                           
 29153                           ;usb_device.c: 2644: else
 29154                           ;usb_device.c: 2645: {
 29155                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29156  015070  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29157  015074  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29158  015078  0E08               	movlw	8
 29159  01507A  6EDF               	movwf	indf2,c
 29160                           
 29161                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29162  01507C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29163  015080  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29164  015084  0E00               	movlw	0
 29165  015086  8EDB               	bsf	plusw2,7,c
 29166                           
 29167                           ;usb_device.c: 2648: }
 29168                           ;usb_device.c: 2649: }
 29169                           ;usb_device.c: 2650: }
 29170  015088  0012               	return	
 29171  01508A                     i2l1638:
 29172                           
 29173                           ;usb_device.c: 2651: else
 29174                           ;usb_device.c: 2652: {
 29175                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29176  01508A  0100               	movlb	0	; () banked
 29177  01508C  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29178  01508E  D002               	goto	i2l7833
 29179                           
 29180                           ; BSR set to: 0
 29181                           ;usb_device.c: 2661: }
 29182                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29183                           
 29184                           ; BSR set to: 0
 29185                           ;usb_device.c: 2659: {
 29186                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29187  015090  0100               	movlb	0	; () banked
 29188  015092  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29189  015094                     i2l7833:
 29190                           
 29191                           ; BSR set to: 0
 29192                           ;usb_device.c: 2663: }
 29193                           ;usb_device.c: 2665: controlTransferState = 0;
 29194  015094  0E00               	movlw	0
 29195  015096  6E18               	movwf	_controlTransferState,c	;volatile
 29196  015098  0012               	return	
 29197  01509A                     __end_of_USBCtrlTrfInHandler:
 29198                           	opt stack 0
 29199                           pclatu	equ	0xFFB
 29200                           pclath	equ	0xFFA
 29201                           tblptru	equ	0xFF8
 29202                           tblptrh	equ	0xFF7
 29203                           tblptrl	equ	0xFF6
 29204                           tablat	equ	0xFF5
 29205                           prodh	equ	0xFF4
 29206                           prodl	equ	0xFF3
 29207                           intcon	equ	0xFF2
 29208                           intcon2	equ	0xFF1
 29209                           postinc0	equ	0xFEE
 29210                           fsr0h	equ	0xFEA
 29211                           fsr0l	equ	0xFE9
 29212                           wreg	equ	0xFE8
 29213                           indf1	equ	0xFE7
 29214                           postinc1	equ	0xFE6
 29215                           postdec1	equ	0xFE5
 29216                           fsr1h	equ	0xFE2
 29217                           fsr1l	equ	0xFE1
 29218                           indf2	equ	0xFDF
 29219                           postinc2	equ	0xFDE
 29220                           postdec2	equ	0xFDD
 29221                           plusw2	equ	0xFDB
 29222                           fsr2h	equ	0xFDA
 29223                           fsr2l	equ	0xFD9
 29224                           status	equ	0xFD8
 29225                           
 29226 ;; *************** function _USBCtrlTrfTxService *****************
 29227 ;; Defined at:
 29228 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 29229 ;; Parameters:    Size  Location     Type
 29230 ;;		None
 29231 ;; Auto vars:     Size  Location     Type
 29232 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29233 ;; Return value:  Size  Location     Type
 29234 ;;		None               void
 29235 ;; Registers used:
 29236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29237 ;; Tracked objects:
 29238 ;;		On entry : 0/0
 29239 ;;		On exit  : 0/0
 29240 ;;		Unchanged: 0/0
 29241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29246 ;;Total ram usage:        1 bytes
 29247 ;; Hardware stack levels used:    1
 29248 ;; This function calls:
 29249 ;;		Nothing
 29250 ;; This function is called by:
 29251 ;;		_USBCtrlEPAllowDataStage
 29252 ;;		_USBCtrlTrfInHandler
 29253 ;; This function uses a non-reentrant model
 29254 ;;
 29255                           
 29256                           	psect	text128
 29257  0145EA                     __ptext128:
 29258                           	opt stack 0
 29259  0145EA                     _USBCtrlTrfTxService:
 29260                           	opt stack 14
 29261                           
 29262                           ;usb_device.c: 1773: uint8_t byteToSend;
 29263                           ;usb_device.c: 1777: byteToSend = 8;
 29264                           
 29265                           ;incstack = 0
 29266  0145EA  0E08               	movlw	8
 29267  0145EC  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29268                           
 29269                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29270  0145EE  0100               	movlb	0	; () banked
 29271  0145F0  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29272  0145F2  E111               	bnz	i2l6669
 29273  0145F4  0E08               	movlw	8
 29274  0145F6  0100               	movlb	0	; () banked
 29275  0145F8  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29276  0145FA  B0D8               	btfsc	status,0,c
 29277  0145FC  D00C               	goto	i2l6669
 29278                           
 29279                           ; BSR set to: 0
 29280                           ;usb_device.c: 1779: {
 29281                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29282  0145FE  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29283                           
 29284                           ; BSR set to: 0
 29285                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29286  014602  5022               	movf	_shortPacketStatus,w,c	;volatile
 29287  014604  A4D8               	btfss	status,2,c
 29288  014606  D002               	goto	i2l6665
 29289                           
 29290                           ; BSR set to: 0
 29291                           ;usb_device.c: 1788: {
 29292                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29293  014608  0E01               	movlw	1
 29294  01460A  D004               	goto	L18
 29295  01460C                     i2l6665:
 29296                           
 29297                           ; BSR set to: 0
 29298                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29299  01460C  0422               	decf	_shortPacketStatus,w,c	;volatile
 29300  01460E  A4D8               	btfss	status,2,c
 29301  014610  D002               	goto	i2l6669
 29302                           
 29303                           ; BSR set to: 0
 29304                           ;usb_device.c: 1792: {
 29305                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29306  014612  0E02               	movlw	2
 29307  014614                     L18:
 29308  014614  6E22               	movwf	_shortPacketStatus,c	;volatile
 29309  014616                     i2l6669:
 29310                           
 29311                           ; BSR set to: 0
 29312                           ;usb_device.c: 1794: }
 29313                           ;usb_device.c: 1795: }
 29314                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29315  014616  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29316  014618  0100               	movlb	0	; () banked
 29317  01461A  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29318  01461C  0E00               	movlw	0
 29319  01461E  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29320                           
 29321                           ; BSR set to: 0
 29322                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29323  014620  0100               	movlb	0	; () banked
 29324  014622  EE20 F001          	lfsr	2,1
 29325  014626  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29326  014628  26D9               	addwf	fsr2l,f,c
 29327  01462A  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29328  01462C  22DA               	addwfc	fsr2h,f,c
 29329  01462E  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29330                           
 29331                           ; BSR set to: 0
 29332                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29333  014632  0E38               	movlw	56
 29334  014634  0101               	movlb	1	; () banked
 29335  014636  6F1C               	movwf	_pDst& (0+255),b
 29336  014638  0E0D               	movlw	13
 29337  01463A  0101               	movlb	1	; () banked
 29338  01463C  6F1D               	movwf	(_pDst+1)& (0+255),b
 29339                           
 29340                           ; BSR set to: 1
 29341                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29342  01463E  0100               	movlb	0	; () banked
 29343  014640  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29344  014642  D01E               	goto	i2l6687
 29345  014644  D03E               	goto	i2l6697
 29346  014646                     i2l6679:
 29347                           
 29348                           ;usb_device.c: 1812: {
 29349                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29350  014646  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29351  01464A  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29352  01464E  0E00               	movlw	low (__mediumconst shr (0+16))
 29353  014650  6EF8               	movwf	tblptru,c
 29354  014652  C11C  FFD9         	movff	_pDst,fsr2l
 29355  014656  C11D  FFDA         	movff	_pDst+1,fsr2h
 29356  01465A  0E0E               	movlw	(high __ramtop+-1)
 29357  01465C  64F7               	cpfsgt	tblptrh,c
 29358  01465E  D003               	bra	i2u606_47
 29359  014660  0008               	tblrd		*
 29360  014662  50F5               	movf	tablat,w,c
 29361  014664  D005               	bra	i2u606_40
 29362  014666                     i2u606_47:
 29363  014666  CFF6 FFE1          	movff	tblptrl,fsr1l
 29364  01466A  CFF7 FFE2          	movff	tblptrh,fsr1h
 29365  01466E  50E7               	movf	indf1,w,c
 29366  014670                     i2u606_40:
 29367  014670  6EDF               	movwf	indf2,c
 29368  014672  0100               	movlb	0	; () banked
 29369  014674  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29370  014676  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29371                           
 29372                           ; BSR set to: 0
 29373  014678  0101               	movlb	1	; () banked
 29374  01467A  4B1C               	infsnz	_pDst& (0+255),f,b
 29375  01467C  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29376                           
 29377                           ; BSR set to: 1
 29378                           ;usb_device.c: 1814: byteToSend--;
 29379  01467E  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29380  014680                     i2l6687:
 29381  014680  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29382  014682  B4D8               	btfsc	status,2,c
 29383  014684  0012               	return	
 29384  014686  D7DF               	goto	i2l6679
 29385  014688                     i2l6689:
 29386                           
 29387                           ;usb_device.c: 1820: {
 29388                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29389  014688  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29390  01468C  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29391  014690  0E00               	movlw	low (__mediumconst shr (0+16))
 29392  014692  6EF8               	movwf	tblptru,c
 29393  014694  C11C  FFD9         	movff	_pDst,fsr2l
 29394  014698  C11D  FFDA         	movff	_pDst+1,fsr2h
 29395  01469C  0E0E               	movlw	(high __ramtop+-1)
 29396  01469E  64F7               	cpfsgt	tblptrh,c
 29397  0146A0  D003               	bra	i2u608_47
 29398  0146A2  0008               	tblrd		*
 29399  0146A4  50F5               	movf	tablat,w,c
 29400  0146A6  D005               	bra	i2u608_40
 29401  0146A8                     i2u608_47:
 29402  0146A8  CFF6 FFE1          	movff	tblptrl,fsr1l
 29403  0146AC  CFF7 FFE2          	movff	tblptrh,fsr1h
 29404  0146B0  50E7               	movf	indf1,w,c
 29405  0146B2                     i2u608_40:
 29406  0146B2  6EDF               	movwf	indf2,c
 29407  0146B4  0100               	movlb	0	; () banked
 29408  0146B6  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29409  0146B8  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29410                           
 29411                           ; BSR set to: 0
 29412  0146BA  0101               	movlb	1	; () banked
 29413  0146BC  4B1C               	infsnz	_pDst& (0+255),f,b
 29414  0146BE  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29415                           
 29416                           ; BSR set to: 1
 29417                           ;usb_device.c: 1822: byteToSend--;
 29418  0146C0  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29419  0146C2                     i2l6697:
 29420  0146C2  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29421  0146C4  B4D8               	btfsc	status,2,c
 29422  0146C6  0012               	return	
 29423  0146C8  D7DF               	goto	i2l6689
 29424  0146CA                     __end_of_USBCtrlTrfTxService:
 29425                           	opt stack 0
 29426                           pclatu	equ	0xFFB
 29427                           pclath	equ	0xFFA
 29428                           tblptru	equ	0xFF8
 29429                           tblptrh	equ	0xFF7
 29430                           tblptrl	equ	0xFF6
 29431                           tablat	equ	0xFF5
 29432                           prodh	equ	0xFF4
 29433                           prodl	equ	0xFF3
 29434                           intcon	equ	0xFF2
 29435                           intcon2	equ	0xFF1
 29436                           postinc0	equ	0xFEE
 29437                           fsr0h	equ	0xFEA
 29438                           fsr0l	equ	0xFE9
 29439                           wreg	equ	0xFE8
 29440                           indf1	equ	0xFE7
 29441                           postinc1	equ	0xFE6
 29442                           postdec1	equ	0xFE5
 29443                           fsr1h	equ	0xFE2
 29444                           fsr1l	equ	0xFE1
 29445                           indf2	equ	0xFDF
 29446                           postinc2	equ	0xFDE
 29447                           postdec2	equ	0xFDD
 29448                           plusw2	equ	0xFDB
 29449                           fsr2h	equ	0xFDA
 29450                           fsr2l	equ	0xFD9
 29451                           status	equ	0xFD8
 29452                           
 29453 ;; *************** function _LED_indicator *****************
 29454 ;; Defined at:
 29455 ;;		line 22 in file "ChargeStation_task.c"
 29456 ;; Parameters:    Size  Location     Type
 29457 ;;		None
 29458 ;; Auto vars:     Size  Location     Type
 29459 ;;  i               1   11[COMRAM] unsigned char 
 29460 ;; Return value:  Size  Location     Type
 29461 ;;		None               void
 29462 ;; Registers used:
 29463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29464 ;; Tracked objects:
 29465 ;;		On entry : 0/0
 29466 ;;		On exit  : 0/0
 29467 ;;		Unchanged: 0/0
 29468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29471 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29473 ;;Total ram usage:        4 bytes
 29474 ;; Hardware stack levels used:    1
 29475 ;; Hardware stack levels required when called:    1
 29476 ;; This function calls:
 29477 ;;		i2_LED_output
 29478 ;;		i2___awdiv
 29479 ;;		i2___lwdiv
 29480 ;; This function is called by:
 29481 ;;		_ISR
 29482 ;; This function uses a non-reentrant model
 29483 ;;
 29484                           
 29485                           	psect	text129
 29486  013A3C                     __ptext129:
 29487                           	opt stack 0
 29488  013A3C                     _LED_indicator:
 29489                           	opt stack 19
 29490                           
 29491                           ;ChargeStation_task.c: 23: uint8_t i;
 29492                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29493                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29494                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29495                           
 29496                           ;incstack = 0
 29497  013A3C  0E00               	movlw	0
 29498  013A3E  6E38               	movwf	LED_indicator@i,c
 29499  013A40                     i2l9387:
 29500  013A40  0E02               	movlw	2
 29501  013A42  6438               	cpfsgt	LED_indicator@i,c
 29502  013A44  D001               	goto	i2l9391
 29503  013A46  0012               	return	
 29504  013A48                     i2l9391:
 29505                           
 29506                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 29507  013A48  5038               	movf	LED_indicator@i,w,c
 29508  013A4A  0D17               	mullw	23
 29509  013A4C  0E16               	movlw	22
 29510  013A4E  26F3               	addwf	prodl,f,c
 29511  013A50  0E00               	movlw	0
 29512  013A52  22F4               	addwfc	prodh,f,c
 29513  013A54  0E2D               	movlw	low _port
 29514  013A56  24F3               	addwf	prodl,w,c
 29515  013A58  6ED9               	movwf	fsr2l,c
 29516  013A5A  0E01               	movlw	high _port
 29517  013A5C  20F4               	addwfc	prodh,w,c
 29518  013A5E  6EDA               	movwf	fsr2h,c
 29519  013A60  0101               	movlb	1	; () banked
 29520  013A62  A2DF               	btfss	indf2,1,c
 29521  013A64  D07C               	goto	i2l9411
 29522                           
 29523                           ; BSR set to: 1
 29524                           ;ChargeStation_task.c: 29: cnt[i]++;
 29525  013A66  5038               	movf	LED_indicator@i,w,c
 29526  013A68  0D01               	mullw	1
 29527  013A6A  0E0A               	movlw	low LED_indicator@cnt
 29528  013A6C  24F3               	addwf	prodl,w,c
 29529  013A6E  6ED9               	movwf	fsr2l,c
 29530  013A70  0E01               	movlw	high LED_indicator@cnt
 29531  013A72  20F4               	addwfc	prodh,w,c
 29532  013A74  6EDA               	movwf	fsr2h,c
 29533  013A76  2ADF               	incf	indf2,f,c
 29534                           
 29535                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 29536  013A78  5038               	movf	LED_indicator@i,w,c
 29537  013A7A  0D01               	mullw	1
 29538  013A7C  0E0A               	movlw	low LED_indicator@cnt
 29539  013A7E  24F3               	addwf	prodl,w,c
 29540  013A80  6ED9               	movwf	fsr2l,c
 29541  013A82  0E01               	movlw	high LED_indicator@cnt
 29542  013A84  20F4               	addwfc	prodh,w,c
 29543  013A86  6EDA               	movwf	fsr2h,c
 29544  013A88  0101               	movlb	1	; () banked
 29545  013A8A  A0DF               	btfss	indf2,0,c
 29546  013A8C  D006               	goto	i2l9397
 29547                           
 29548                           ; BSR set to: 1
 29549                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 29550  013A8E  0E00               	movlw	0
 29551  013A90  6E2D               	movwf	i2LED_output@value,c
 29552  013A92  5038               	movf	LED_indicator@i,w,c
 29553  013A94  EC1D  F0B1         	call	i2_LED_output
 29554                           
 29555                           ;ChargeStation_task.c: 32: } else {
 29556  013A98  D062               	goto	i2l9411
 29557  013A9A                     i2l9397:
 29558                           
 29559                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 29560  013A9A  5038               	movf	LED_indicator@i,w,c
 29561  013A9C  0D17               	mullw	23
 29562  013A9E  0E06               	movlw	6
 29563  013AA0  26F3               	addwf	prodl,f,c
 29564  013AA2  0E00               	movlw	0
 29565  013AA4  22F4               	addwfc	prodh,f,c
 29566  013AA6  0E2D               	movlw	low _port
 29567  013AA8  24F3               	addwf	prodl,w,c
 29568  013AAA  6ED9               	movwf	fsr2l,c
 29569  013AAC  0E01               	movlw	high _port
 29570  013AAE  20F4               	addwfc	prodh,w,c
 29571  013AB0  6EDA               	movwf	fsr2h,c
 29572  013AB2  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 29573  013AB6  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 29574  013ABA  0E00               	movlw	0
 29575  013ABC  6E30               	movwf	i2___lwdiv@divisor+1,c
 29576  013ABE  0E64               	movlw	100
 29577  013AC0  6E2F               	movwf	i2___lwdiv@divisor,c
 29578  013AC2  EC97  F0B2         	call	i2___lwdiv	;wreg free
 29579  013AC6  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 29580  013ACA  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 29581  013ACE  5038               	movf	LED_indicator@i,w,c
 29582  013AD0  0D01               	mullw	1
 29583  013AD2  0E0A               	movlw	low LED_indicator@cnt
 29584  013AD4  24F3               	addwf	prodl,w,c
 29585  013AD6  6ED9               	movwf	fsr2l,c
 29586  013AD8  0E01               	movlw	high LED_indicator@cnt
 29587  013ADA  20F4               	addwfc	prodh,w,c
 29588  013ADC  6EDA               	movwf	fsr2h,c
 29589  013ADE  50DF               	movf	indf2,w,c
 29590  013AE0  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 29591  013AE2  5037               	movf	??_LED_indicator+2,w,c
 29592  013AE4  6E2D               	movwf	i2___awdiv@dividend,c
 29593  013AE6  6A2E               	clrf	i2___awdiv@dividend+1,c
 29594  013AE8  0E00               	movlw	0
 29595  013AEA  6E30               	movwf	i2___awdiv@divisor+1,c
 29596  013AEC  0E02               	movlw	2
 29597  013AEE  6E2F               	movwf	i2___awdiv@divisor,c
 29598  013AF0  EC6B  F0AE         	call	i2___awdiv	;wreg free
 29599  013AF4  502D               	movf	?i2___awdiv,w,c
 29600  013AF6  5C35               	subwf	??_LED_indicator,w,c
 29601  013AF8  502E               	movf	?i2___awdiv+1,w,c
 29602  013AFA  5836               	subwfb	??_LED_indicator+1,w,c
 29603  013AFC  A0D8               	btfss	status,0,c
 29604  013AFE  D00C               	goto	i2l9403
 29605                           
 29606                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 29607  013B00  0E01               	movlw	1
 29608  013B02  6E2D               	movwf	i2LED_output@value,c
 29609  013B04  5038               	movf	LED_indicator@i,w,c
 29610  013B06  EC1D  F0B1         	call	i2_LED_output
 29611                           
 29612                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 29613  013B0A  5038               	movf	LED_indicator@i,w,c
 29614  013B0C  0D01               	mullw	1
 29615  013B0E  0E0D               	movlw	low LED_indicator@cntf
 29616  013B10  24F3               	addwf	prodl,w,c
 29617  013B12  6ED9               	movwf	fsr2l,c
 29618  013B14  0E01               	movlw	high LED_indicator@cntf
 29619  013B16  D01F               	goto	L19
 29620  013B18                     i2l9403:
 29621                           
 29622                           ;ChargeStation_task.c: 37: cntf[i]++;
 29623  013B18  5038               	movf	LED_indicator@i,w,c
 29624  013B1A  0D01               	mullw	1
 29625  013B1C  0E0D               	movlw	low LED_indicator@cntf
 29626  013B1E  24F3               	addwf	prodl,w,c
 29627  013B20  6ED9               	movwf	fsr2l,c
 29628  013B22  0E01               	movlw	high LED_indicator@cntf
 29629  013B24  20F4               	addwfc	prodh,w,c
 29630  013B26  6EDA               	movwf	fsr2h,c
 29631  013B28  2ADF               	incf	indf2,f,c
 29632                           
 29633                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 29634  013B2A  0E00               	movlw	0
 29635  013B2C  6E2D               	movwf	i2LED_output@value,c
 29636  013B2E  5038               	movf	LED_indicator@i,w,c
 29637  013B30  EC1D  F0B1         	call	i2_LED_output
 29638                           
 29639                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 29640  013B34  5038               	movf	LED_indicator@i,w,c
 29641  013B36  0D01               	mullw	1
 29642  013B38  0E0D               	movlw	low LED_indicator@cntf
 29643  013B3A  24F3               	addwf	prodl,w,c
 29644  013B3C  6ED9               	movwf	fsr2l,c
 29645  013B3E  0E01               	movlw	high LED_indicator@cntf
 29646  013B40  20F4               	addwfc	prodh,w,c
 29647  013B42  6EDA               	movwf	fsr2h,c
 29648  013B44  0E01               	movlw	1
 29649  013B46  64DF               	cpfsgt	indf2,c
 29650  013B48  D00A               	goto	i2l9411
 29651                           
 29652                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 29653  013B4A  5038               	movf	LED_indicator@i,w,c
 29654  013B4C  0D01               	mullw	1
 29655  013B4E  0E0A               	movlw	low LED_indicator@cnt
 29656  013B50  24F3               	addwf	prodl,w,c
 29657  013B52  6ED9               	movwf	fsr2l,c
 29658  013B54  0E01               	movlw	high LED_indicator@cnt
 29659  013B56                     L19:
 29660  013B56  20F4               	addwfc	prodh,w,c
 29661  013B58  6EDA               	movwf	fsr2h,c
 29662  013B5A  0E00               	movlw	0
 29663  013B5C  6EDF               	movwf	indf2,c
 29664  013B5E                     i2l9411:
 29665  013B5E  2A38               	incf	LED_indicator@i,f,c
 29666  013B60  D76F               	goto	i2l9387
 29667  013B62                     __end_of_LED_indicator:
 29668                           	opt stack 0
 29669                           pclatu	equ	0xFFB
 29670                           pclath	equ	0xFFA
 29671                           tblptru	equ	0xFF8
 29672                           tblptrh	equ	0xFF7
 29673                           tblptrl	equ	0xFF6
 29674                           tablat	equ	0xFF5
 29675                           prodh	equ	0xFF4
 29676                           prodl	equ	0xFF3
 29677                           intcon	equ	0xFF2
 29678                           intcon2	equ	0xFF1
 29679                           postinc0	equ	0xFEE
 29680                           fsr0h	equ	0xFEA
 29681                           fsr0l	equ	0xFE9
 29682                           wreg	equ	0xFE8
 29683                           indf1	equ	0xFE7
 29684                           postinc1	equ	0xFE6
 29685                           postdec1	equ	0xFE5
 29686                           fsr1h	equ	0xFE2
 29687                           fsr1l	equ	0xFE1
 29688                           indf2	equ	0xFDF
 29689                           postinc2	equ	0xFDE
 29690                           postdec2	equ	0xFDD
 29691                           plusw2	equ	0xFDB
 29692                           fsr2h	equ	0xFDA
 29693                           fsr2l	equ	0xFD9
 29694                           status	equ	0xFD8
 29695                           
 29696 ;; *************** function i2___lwdiv *****************
 29697 ;; Defined at:
 29698 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29699 ;; Parameters:    Size  Location     Type
 29700 ;;  dividend        2    0[COMRAM] unsigned int 
 29701 ;;  divisor         2    2[COMRAM] unsigned int 
 29702 ;; Auto vars:     Size  Location     Type
 29703 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29704 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29705 ;; Return value:  Size  Location     Type
 29706 ;;                  2    0[COMRAM] unsigned int 
 29707 ;; Registers used:
 29708 ;;		wreg, status,2, status,0
 29709 ;; Tracked objects:
 29710 ;;		On entry : 0/0
 29711 ;;		On exit  : 0/0
 29712 ;;		Unchanged: 0/0
 29713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29718 ;;Total ram usage:        7 bytes
 29719 ;; Hardware stack levels used:    1
 29720 ;; This function calls:
 29721 ;;		Nothing
 29722 ;; This function is called by:
 29723 ;;		_LED_indicator
 29724 ;; This function uses a non-reentrant model
 29725 ;;
 29726                           
 29727                           	psect	text130
 29728  01652E                     __ptext130:
 29729                           	opt stack 0
 29730  01652E                     i2___lwdiv:
 29731                           	opt stack 19
 29732                           
 29733                           ;incstack = 0
 29734  01652E  0E00               	movlw	0
 29735  016530  6E32               	movwf	i2___lwdiv@quotient+1,c
 29736  016532  0E00               	movlw	0
 29737  016534  6E31               	movwf	i2___lwdiv@quotient,c
 29738  016536  502F               	movf	i2___lwdiv@divisor,w,c
 29739  016538  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 29740  01653A  B4D8               	btfsc	status,2,c
 29741  01653C  D01C               	goto	i2l2305
 29742  01653E  0E01               	movlw	1
 29743  016540  6E33               	movwf	i2___lwdiv@counter,c
 29744  016542  D004               	goto	i2l9371
 29745  016544                     i2l9369:
 29746  016544  90D8               	bcf	status,0,c
 29747  016546  362F               	rlcf	i2___lwdiv@divisor,f,c
 29748  016548  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 29749  01654A  2A33               	incf	i2___lwdiv@counter,f,c
 29750  01654C                     i2l9371:
 29751  01654C  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 29752  01654E  D7FA               	goto	i2l9369
 29753  016550                     i2l9373:
 29754  016550  90D8               	bcf	status,0,c
 29755  016552  3631               	rlcf	i2___lwdiv@quotient,f,c
 29756  016554  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 29757  016556  502F               	movf	i2___lwdiv@divisor,w,c
 29758  016558  5C2D               	subwf	i2___lwdiv@dividend,w,c
 29759  01655A  5030               	movf	i2___lwdiv@divisor+1,w,c
 29760  01655C  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 29761  01655E  A0D8               	btfss	status,0,c
 29762  016560  D005               	goto	i2l9381
 29763  016562  502F               	movf	i2___lwdiv@divisor,w,c
 29764  016564  5E2D               	subwf	i2___lwdiv@dividend,f,c
 29765  016566  5030               	movf	i2___lwdiv@divisor+1,w,c
 29766  016568  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 29767  01656A  8031               	bsf	i2___lwdiv@quotient,0,c
 29768  01656C                     i2l9381:
 29769  01656C  90D8               	bcf	status,0,c
 29770  01656E  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 29771  016570  322F               	rrcf	i2___lwdiv@divisor,f,c
 29772  016572  2E33               	decfsz	i2___lwdiv@counter,f,c
 29773  016574  D7ED               	goto	i2l9373
 29774  016576                     i2l2305:
 29775  016576  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 29776  01657A  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 29777  01657E  0012               	return		;funcret
 29778  016580                     __end_ofi2___lwdiv:
 29779                           	opt stack 0
 29780                           pclatu	equ	0xFFB
 29781                           pclath	equ	0xFFA
 29782                           tblptru	equ	0xFF8
 29783                           tblptrh	equ	0xFF7
 29784                           tblptrl	equ	0xFF6
 29785                           tablat	equ	0xFF5
 29786                           prodh	equ	0xFF4
 29787                           prodl	equ	0xFF3
 29788                           intcon	equ	0xFF2
 29789                           intcon2	equ	0xFF1
 29790                           postinc0	equ	0xFEE
 29791                           fsr0h	equ	0xFEA
 29792                           fsr0l	equ	0xFE9
 29793                           wreg	equ	0xFE8
 29794                           indf1	equ	0xFE7
 29795                           postinc1	equ	0xFE6
 29796                           postdec1	equ	0xFE5
 29797                           fsr1h	equ	0xFE2
 29798                           fsr1l	equ	0xFE1
 29799                           indf2	equ	0xFDF
 29800                           postinc2	equ	0xFDE
 29801                           postdec2	equ	0xFDD
 29802                           plusw2	equ	0xFDB
 29803                           fsr2h	equ	0xFDA
 29804                           fsr2l	equ	0xFD9
 29805                           status	equ	0xFD8
 29806                           
 29807 ;; *************** function i2___awdiv *****************
 29808 ;; Defined at:
 29809 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 29810 ;; Parameters:    Size  Location     Type
 29811 ;;  dividend        2    0[COMRAM] int 
 29812 ;;  divisor         2    2[COMRAM] int 
 29813 ;; Auto vars:     Size  Location     Type
 29814 ;;  __awdiv         2    6[COMRAM] int 
 29815 ;;  __awdiv         1    5[COMRAM] unsigned char 
 29816 ;;  __awdiv         1    4[COMRAM] unsigned char 
 29817 ;; Return value:  Size  Location     Type
 29818 ;;                  2    0[COMRAM] int 
 29819 ;; Registers used:
 29820 ;;		wreg, status,2, status,0
 29821 ;; Tracked objects:
 29822 ;;		On entry : 0/0
 29823 ;;		On exit  : 0/0
 29824 ;;		Unchanged: 0/0
 29825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29827 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29829 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29830 ;;Total ram usage:        8 bytes
 29831 ;; Hardware stack levels used:    1
 29832 ;; This function calls:
 29833 ;;		Nothing
 29834 ;; This function is called by:
 29835 ;;		_LED_indicator
 29836 ;; This function uses a non-reentrant model
 29837 ;;
 29838                           
 29839                           	psect	text131
 29840  015CD6                     __ptext131:
 29841                           	opt stack 0
 29842  015CD6                     i2___awdiv:
 29843                           	opt stack 19
 29844                           
 29845                           ;incstack = 0
 29846  015CD6  0E00               	movlw	0
 29847  015CD8  6E32               	movwf	i2___awdiv@sign,c
 29848  015CDA  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29849  015CDC  D006               	goto	i2l9327
 29850  015CDE  6C2F               	negf	i2___awdiv@divisor,c
 29851  015CE0  1E30               	comf	i2___awdiv@divisor+1,f,c
 29852  015CE2  B0D8               	btfsc	status,0,c
 29853  015CE4  2A30               	incf	i2___awdiv@divisor+1,f,c
 29854  015CE6  0E01               	movlw	1
 29855  015CE8  6E32               	movwf	i2___awdiv@sign,c
 29856  015CEA                     i2l9327:
 29857  015CEA  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 29858  015CEC  D006               	goto	i2l9333
 29859  015CEE  6C2D               	negf	i2___awdiv@dividend,c
 29860  015CF0  1E2E               	comf	i2___awdiv@dividend+1,f,c
 29861  015CF2  B0D8               	btfsc	status,0,c
 29862  015CF4  2A2E               	incf	i2___awdiv@dividend+1,f,c
 29863  015CF6  0E01               	movlw	1
 29864  015CF8  1A32               	xorwf	i2___awdiv@sign,f,c
 29865  015CFA                     i2l9333:
 29866  015CFA  0E00               	movlw	0
 29867  015CFC  6E34               	movwf	i2___awdiv@quotient+1,c
 29868  015CFE  0E00               	movlw	0
 29869  015D00  6E33               	movwf	i2___awdiv@quotient,c
 29870  015D02  502F               	movf	i2___awdiv@divisor,w,c
 29871  015D04  1030               	iorwf	i2___awdiv@divisor+1,w,c
 29872  015D06  B4D8               	btfsc	status,2,c
 29873  015D08  D01C               	goto	i2l9355
 29874  015D0A  0E01               	movlw	1
 29875  015D0C  6E31               	movwf	i2___awdiv@counter,c
 29876  015D0E  D004               	goto	i2l9341
 29877  015D10                     i2l9339:
 29878  015D10  90D8               	bcf	status,0,c
 29879  015D12  362F               	rlcf	i2___awdiv@divisor,f,c
 29880  015D14  3630               	rlcf	i2___awdiv@divisor+1,f,c
 29881  015D16  2A31               	incf	i2___awdiv@counter,f,c
 29882  015D18                     i2l9341:
 29883  015D18  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29884  015D1A  D7FA               	goto	i2l9339
 29885  015D1C                     i2l9343:
 29886  015D1C  90D8               	bcf	status,0,c
 29887  015D1E  3633               	rlcf	i2___awdiv@quotient,f,c
 29888  015D20  3634               	rlcf	i2___awdiv@quotient+1,f,c
 29889  015D22  502F               	movf	i2___awdiv@divisor,w,c
 29890  015D24  5C2D               	subwf	i2___awdiv@dividend,w,c
 29891  015D26  5030               	movf	i2___awdiv@divisor+1,w,c
 29892  015D28  582E               	subwfb	i2___awdiv@dividend+1,w,c
 29893  015D2A  A0D8               	btfss	status,0,c
 29894  015D2C  D005               	goto	i2l9351
 29895  015D2E  502F               	movf	i2___awdiv@divisor,w,c
 29896  015D30  5E2D               	subwf	i2___awdiv@dividend,f,c
 29897  015D32  5030               	movf	i2___awdiv@divisor+1,w,c
 29898  015D34  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 29899  015D36  8033               	bsf	i2___awdiv@quotient,0,c
 29900  015D38                     i2l9351:
 29901  015D38  90D8               	bcf	status,0,c
 29902  015D3A  3230               	rrcf	i2___awdiv@divisor+1,f,c
 29903  015D3C  322F               	rrcf	i2___awdiv@divisor,f,c
 29904  015D3E  2E31               	decfsz	i2___awdiv@counter,f,c
 29905  015D40  D7ED               	goto	i2l9343
 29906  015D42                     i2l9355:
 29907  015D42  5032               	movf	i2___awdiv@sign,w,c
 29908  015D44  B4D8               	btfsc	status,2,c
 29909  015D46  D004               	goto	i2l9359
 29910  015D48  6C33               	negf	i2___awdiv@quotient,c
 29911  015D4A  1E34               	comf	i2___awdiv@quotient+1,f,c
 29912  015D4C  B0D8               	btfsc	status,0,c
 29913  015D4E  2A34               	incf	i2___awdiv@quotient+1,f,c
 29914  015D50                     i2l9359:
 29915  015D50  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 29916  015D54  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29917  015D58  0012               	return	
 29918  015D5A                     __end_ofi2___awdiv:
 29919                           	opt stack 0
 29920                           pclatu	equ	0xFFB
 29921                           pclath	equ	0xFFA
 29922                           tblptru	equ	0xFF8
 29923                           tblptrh	equ	0xFF7
 29924                           tblptrl	equ	0xFF6
 29925                           tablat	equ	0xFF5
 29926                           prodh	equ	0xFF4
 29927                           prodl	equ	0xFF3
 29928                           intcon	equ	0xFF2
 29929                           intcon2	equ	0xFF1
 29930                           postinc0	equ	0xFEE
 29931                           fsr0h	equ	0xFEA
 29932                           fsr0l	equ	0xFE9
 29933                           wreg	equ	0xFE8
 29934                           indf1	equ	0xFE7
 29935                           postinc1	equ	0xFE6
 29936                           postdec1	equ	0xFE5
 29937                           fsr1h	equ	0xFE2
 29938                           fsr1l	equ	0xFE1
 29939                           indf2	equ	0xFDF
 29940                           postinc2	equ	0xFDE
 29941                           postdec2	equ	0xFDD
 29942                           plusw2	equ	0xFDB
 29943                           fsr2h	equ	0xFDA
 29944                           fsr2l	equ	0xFD9
 29945                           status	equ	0xFD8
 29946                           
 29947 ;; *************** function i2_LED_output *****************
 29948 ;; Defined at:
 29949 ;;		line 36 in file "io.c"
 29950 ;; Parameters:    Size  Location     Type
 29951 ;;  b               1    wreg     unsigned char 
 29952 ;;  value           1    0[COMRAM] unsigned char 
 29953 ;; Auto vars:     Size  Location     Type
 29954 ;;  b               1    1[COMRAM] unsigned char 
 29955 ;; Return value:  Size  Location     Type
 29956 ;;		None               void
 29957 ;; Registers used:
 29958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29959 ;; Tracked objects:
 29960 ;;		On entry : 0/0
 29961 ;;		On exit  : 0/0
 29962 ;;		Unchanged: 0/0
 29963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29968 ;;Total ram usage:        2 bytes
 29969 ;; Hardware stack levels used:    1
 29970 ;; This function calls:
 29971 ;;		Nothing
 29972 ;; This function is called by:
 29973 ;;		_LED_indicator
 29974 ;; This function uses a non-reentrant model
 29975 ;;
 29976                           
 29977                           	psect	text132
 29978  01623A                     __ptext132:
 29979                           	opt stack 0
 29980  01623A                     i2_LED_output:
 29981                           	opt stack 19
 29982                           
 29983                           ;incstack = 0
 29984                           ;i2LED_output@b stored from wreg
 29985  01623A  6E2E               	movwf	i2LED_output@b,c
 29986                           
 29987                           ;io.c: 37: port[b].flag.led_flag = value;
 29988  01623C  502E               	movf	i2LED_output@b,w,c
 29989  01623E  0D17               	mullw	23
 29990  016240  0E16               	movlw	22
 29991  016242  26F3               	addwf	prodl,f,c
 29992  016244  0E00               	movlw	0
 29993  016246  22F4               	addwfc	prodh,f,c
 29994  016248  0E2D               	movlw	low _port
 29995  01624A  24F3               	addwf	prodl,w,c
 29996  01624C  6ED9               	movwf	fsr2l,c
 29997  01624E  0E01               	movlw	high _port
 29998  016250  20F4               	addwfc	prodh,w,c
 29999  016252  6EDA               	movwf	fsr2h,c
 30000  016254  B02D               	btfsc	i2LED_output@value,0,c
 30001  016256  D003               	bra	i2u1010_45
 30002  016258  0101               	movlb	1	; () banked
 30003  01625A  96DF               	bcf	indf2,3,c
 30004  01625C  D002               	bra	i2u1010_46
 30005  01625E                     i2u1010_45:
 30006  01625E  0101               	movlb	1	; () banked
 30007  016260  86DF               	bsf	indf2,3,c
 30008  016262                     i2u1010_46:
 30009                           
 30010                           ;io.c: 38: switch (b) {
 30011  016262  D012               	goto	i2l9317
 30012  016264                     i2l292:
 30013                           
 30014                           ;io.c: 40: LATB7 = value;
 30015  016264  A02D               	btfss	i2LED_output@value,0,c
 30016  016266  D002               	goto	i2u1011_40
 30017  016268  8E8A               	bsf	3978,7,c	;volatile
 30018  01626A  0012               	return	
 30019  01626C                     i2u1011_40:
 30020  01626C  9E8A               	bcf	3978,7,c	;volatile
 30021                           
 30022                           ;io.c: 41: break;
 30023  01626E  0012               	return	
 30024  016270                     i2l294:
 30025                           
 30026                           ;io.c: 43: LATB6 = value;
 30027  016270  A02D               	btfss	i2LED_output@value,0,c
 30028  016272  D002               	goto	i2u1013_40
 30029  016274  8C8A               	bsf	3978,6,c	;volatile
 30030  016276  0012               	return	
 30031  016278                     i2u1013_40:
 30032  016278  9C8A               	bcf	3978,6,c	;volatile
 30033                           
 30034                           ;io.c: 44: break;
 30035  01627A  0012               	return	
 30036  01627C                     i2l295:
 30037                           
 30038                           ;io.c: 46: LATC2 = value;
 30039  01627C  A02D               	btfss	i2LED_output@value,0,c
 30040  01627E  D002               	goto	i2u1015_40
 30041  016280  848B               	bsf	3979,2,c	;volatile
 30042  016282  0012               	return	
 30043  016284                     i2u1015_40:
 30044  016284  948B               	bcf	3979,2,c	;volatile
 30045                           
 30046                           ;io.c: 48: }
 30047                           
 30048                           ;io.c: 47: break;
 30049  016286  0012               	return	
 30050  016288                     i2l9317:
 30051  016288  502E               	movf	i2LED_output@b,w,c
 30052                           
 30053                           ; Switch size 1, requested type "space"
 30054                           ; Number of cases is 3, Range of values is 0 to 2
 30055                           ; switch strategies available:
 30056                           ; Name         Instructions Cycles
 30057                           ; simple_byte           10     6 (average)
 30058                           ;	Chosen strategy is simple_byte
 30059  01628A  0A00               	xorlw	0	; case 0
 30060  01628C  B4D8               	btfsc	status,2,c
 30061  01628E  D7EA               	goto	i2l292
 30062  016290  0A01               	xorlw	1	; case 1
 30063  016292  B4D8               	btfsc	status,2,c
 30064  016294  D7ED               	goto	i2l294
 30065  016296  0A03               	xorlw	3	; case 2
 30066  016298  A4D8               	btfss	status,2,c
 30067  01629A  0012               	return	
 30068  01629C  D7EF               	goto	i2l295
 30069  01629E                     __end_ofi2_LED_output:
 30070                           	opt stack 0
 30071                           pclatu	equ	0xFFB
 30072                           pclath	equ	0xFFA
 30073                           tblptru	equ	0xFF8
 30074                           tblptrh	equ	0xFF7
 30075                           tblptrl	equ	0xFF6
 30076                           tablat	equ	0xFF5
 30077                           prodh	equ	0xFF4
 30078                           prodl	equ	0xFF3
 30079                           intcon	equ	0xFF2
 30080                           intcon2	equ	0xFF1
 30081                           postinc0	equ	0xFEE
 30082                           fsr0h	equ	0xFEA
 30083                           fsr0l	equ	0xFE9
 30084                           wreg	equ	0xFE8
 30085                           indf1	equ	0xFE7
 30086                           postinc1	equ	0xFE6
 30087                           postdec1	equ	0xFE5
 30088                           fsr1h	equ	0xFE2
 30089                           fsr1l	equ	0xFE1
 30090                           indf2	equ	0xFDF
 30091                           postinc2	equ	0xFDE
 30092                           postdec2	equ	0xFDD
 30093                           plusw2	equ	0xFDB
 30094                           fsr2h	equ	0xFDA
 30095                           fsr2l	equ	0xFD9
 30096                           status	equ	0xFD8
 30097                           pclatu	equ	0xFFB
 30098                           pclath	equ	0xFFA
 30099                           tblptru	equ	0xFF8
 30100                           tblptrh	equ	0xFF7
 30101                           tblptrl	equ	0xFF6
 30102                           tablat	equ	0xFF5
 30103                           prodh	equ	0xFF4
 30104                           prodl	equ	0xFF3
 30105                           intcon	equ	0xFF2
 30106                           intcon2	equ	0xFF1
 30107                           postinc0	equ	0xFEE
 30108                           fsr0h	equ	0xFEA
 30109                           fsr0l	equ	0xFE9
 30110                           wreg	equ	0xFE8
 30111                           indf1	equ	0xFE7
 30112                           postinc1	equ	0xFE6
 30113                           postdec1	equ	0xFE5
 30114                           fsr1h	equ	0xFE2
 30115                           fsr1l	equ	0xFE1
 30116                           indf2	equ	0xFDF
 30117                           postinc2	equ	0xFDE
 30118                           postdec2	equ	0xFDD
 30119                           plusw2	equ	0xFDB
 30120                           fsr2h	equ	0xFDA
 30121                           fsr2l	equ	0xFD9
 30122                           status	equ	0xFD8
 30123                           
 30124                           	psect	rparam
 30125  0000                     pclatu	equ	0xFFB
 30126                           pclath	equ	0xFFA
 30127                           tblptru	equ	0xFF8
 30128                           tblptrh	equ	0xFF7
 30129                           tblptrl	equ	0xFF6
 30130                           tablat	equ	0xFF5
 30131                           prodh	equ	0xFF4
 30132                           prodl	equ	0xFF3
 30133                           intcon	equ	0xFF2
 30134                           intcon2	equ	0xFF1
 30135                           postinc0	equ	0xFEE
 30136                           fsr0h	equ	0xFEA
 30137                           fsr0l	equ	0xFE9
 30138                           wreg	equ	0xFE8
 30139                           indf1	equ	0xFE7
 30140                           postinc1	equ	0xFE6
 30141                           postdec1	equ	0xFE5
 30142                           fsr1h	equ	0xFE2
 30143                           fsr1l	equ	0xFE1
 30144                           indf2	equ	0xFDF
 30145                           postinc2	equ	0xFDE
 30146                           postdec2	equ	0xFDD
 30147                           plusw2	equ	0xFDB
 30148                           fsr2h	equ	0xFDA
 30149                           fsr2l	equ	0xFD9
 30150                           status	equ	0xFD8
 30151                           
 30152                           	psect	temp
 30153  000059                     btemp:
 30154                           	opt stack 0
 30155  000059                     	ds	1
 30156  0000                     int$flags	set	btemp
 30157                           pclatu	equ	0xFFB
 30158                           pclath	equ	0xFFA
 30159                           tblptru	equ	0xFF8
 30160                           tblptrh	equ	0xFF7
 30161                           tblptrl	equ	0xFF6
 30162                           tablat	equ	0xFF5
 30163                           prodh	equ	0xFF4
 30164                           prodl	equ	0xFF3
 30165                           intcon	equ	0xFF2
 30166                           intcon2	equ	0xFF1
 30167                           postinc0	equ	0xFEE
 30168                           fsr0h	equ	0xFEA
 30169                           fsr0l	equ	0xFE9
 30170                           wreg	equ	0xFE8
 30171                           indf1	equ	0xFE7
 30172                           postinc1	equ	0xFE6
 30173                           postdec1	equ	0xFE5
 30174                           fsr1h	equ	0xFE2
 30175                           fsr1l	equ	0xFE1
 30176                           indf2	equ	0xFDF
 30177                           postinc2	equ	0xFDE
 30178                           postdec2	equ	0xFDD
 30179                           plusw2	equ	0xFDB
 30180                           fsr2h	equ	0xFDA
 30181                           fsr2l	equ	0xFD9
 30182                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        3
    BSS         2637
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     228
    BANK2           256      0     194
    BANK3           256      0     228
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_92(CODE[9]), STR_87(CODE[1]), STR_83(CODE[1]), STR_80(CODE[1]), 
		 -> STR_60(CODE[6]), STR_59(CODE[6]), STR_57(CODE[6]), STR_56(CODE[6]), 
		 -> STR_52(CODE[6]), STR_51(CODE[6]), STR_49(CODE[6]), STR_48(CODE[6]), 
		 -> STR_44(CODE[6]), STR_43(CODE[6]), STR_41(CODE[6]), STR_40(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1327(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1327(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_117(CODE[7]), STR_116(CODE[2]), STR_115(CODE[7]), STR_114(CODE[2]), 
		 -> STR_113(CODE[5]), STR_112(CODE[2]), STR_111(CODE[4]), STR_110(CODE[2]), 
		 -> STR_109(CODE[6]), STR_108(CODE[2]), STR_107(CODE[5]), STR_106(CODE[2]), 
		 -> STR_105(CODE[12]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[11]), 
		 -> STR_25(CODE[2]), STR_24(CODE[6]), STR_21(CODE[5]), STR_20(CODE[11]), 
		 -> STR_19(CODE[6]), STR_18(CODE[1]), STR_17(CODE[12]), STR_16(CODE[3]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_12(CODE[2]), STR_11(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_95(CODE[2]), STR_94(CODE[2]), STR_93(CODE[2]), STR_91(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_90(CODE[2]), STR_89(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_85(CODE[2]), STR_84(CODE[2]), STR_82(CODE[2]), 
		 -> STR_81(CODE[2]), STR_79(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), weekday_3char(CODE[28]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), 
		 -> data_out@p(CODE[6]), sp__ADC(UNKNOWN), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_100(CODE[37]), STR_98(CODE[5]), STR_78(CODE[5]), STR_33(CODE[28]), 
		 -> STR_32(CODE[9]), STR_31(CODE[11]), STR_30(CODE[6]), STR_28(CODE[24]), 
		 -> STR_27(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), display_LCD@str_575(BANK1[20]), 
		 -> data_out@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5607_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5607_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5607_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5607_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4354$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4344$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4344$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4320$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4320$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4320$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4320$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_575(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_10(CODE[16]), 
		 -> STR_9(CODE[12]), STR_6(CODE[13]), STR_5(CODE[17]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_101(CODE[8]), print_time@str(BANK0[30]), STR_99(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_97(CODE[4]), STR_96(CODE[4]), STR_29(CODE[2]), data_out@str(BANK0[30]), 
		 -> STR_26(CODE[18]), STR_23(CODE[36]), STR_22(CODE[24]), STR_13(CODE[434]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    settings_integrating_reset@strp_1345	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_1344(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_1328	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_1327(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_1311	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_1310(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1327(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_77(CODE[1]), STR_75(CODE[15]), STR_73(CODE[16]), STR_71(CODE[17]), 
		 -> STR_69(CODE[16]), STR_67(CODE[17]), STR_65(CODE[17]), STR_63(CODE[1]), 
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_55(CODE[1]), settings_led_indicator@str_1327(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_47(CODE[1]), settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_39(CODE[1]), STR_37(CODE[1]), STR_35(CODE[13]), STR_8(CODE[14]), 
		 -> STR_4(CODE[1]), STR_2(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_76(CODE[1]), STR_74(CODE[9]), STR_72(CODE[9]), STR_70(CODE[9]), 
		 -> STR_68(CODE[9]), STR_66(CODE[9]), STR_64(CODE[9]), STR_62(CODE[1]), 
		 -> STR_61(CODE[1]), STR_58(CODE[17]), STR_54(CODE[1]), STR_53(CODE[1]), 
		 -> STR_50(CODE[17]), STR_46(CODE[1]), STR_45(CODE[1]), STR_42(CODE[17]), 
		 -> STR_38(CODE[1]), STR_36(CODE[1]), STR_34(CODE[15]), STR_7(CODE[15]), 
		 -> STR_3(CODE[1]), STR_1(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    S136ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_I2C_LCD_SetCursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_task

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  496371
                          _RTCC_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  187093
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  159006
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  112199
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   58695
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   31662
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4694
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    8778
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1562
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   12264
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  217419
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   71362
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2016
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1951
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   29269
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    7375
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   22067
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   16295
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4185
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2372
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1288
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C2      10       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E4       7       89.1%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EB       8        0.0%
DATA                 0      0     BBB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 14:09:27 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 258A                  __end_of_port_button_task 329C  
                      __size_of_I2C_Start 0030                 settings_adjust_time@state 0127  
                         _ringbuf_put_num 5D5A                              ?_display_dec 00AB  
                         _ringbuf_put_str 61D6                              ___awdiv@sign 0065  
                                      _ms 0106                        __size_of_ANALOG_IN 002C  
                           _USBDeviceInit 329C                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 002D                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 0070                              __CFG_CP0$OFF 000000  
             settings_led_indicator@state 012A      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l113 3244  
                                     l130 5642                                       l124 55D0  
                                     l144 4F06                                       l129 562E  
                                     l501 279C               __end_of_USBStdGetDscHandler 354C  
                                     _ADC 6906                                       l523 254E  
                                     l276 5FE4                                       l292 5F72  
                                     l461 4840                                       l710 65AA  
                                     l278 5FF2                                       l294 5F80  
                                     l462 47E0                                       l279 6000  
                                     l295 5F8E                                       l705 6736  
                                     l580 11C0                                       l644 6C72  
                                     l581 11E4                                       l629 68F6  
                                     l549 2B6C                                       l582 1208  
                                     l583 122C                                       l727 6926  
                                     l479 29D8                                       l576 1128  
                                     l577 1150                                       l738 50F4  
                                     l578 1176                                       l579 119C  
                                     l940 16A0                                       _BDT 000D00  
                                     l864 495A                                       l777 5D5C  
                                     l858 5394                                       l955 1944  
                                     l980 6758                                       l877 2D2E  
                                     _ISR 1008                                       _UIE 000F36  
                                     _UIR 000F62                                       _OUT 5FB4  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 6A14  
                                     _now 0172                         _RTCC_from_caltime 6AE6  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 354C                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0014                __end_of_settings_auto_stop 2A14  
                 _RTCC_adjust_time_cursor 3C7A                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002D                              _I2C_LCD_Puts 5A14  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 006A  
                                    ?_ADC 0060                  USBEnableEndpoint@options 0035  
                 _RTCC_adjust_time_toggle 66A6                         ??_I2C_LCD_Command 0064  
                                    ?_ISR 002D                    __end_of_get_string_usb 661E  
                        _terminal_at_hand 6362                                      ?_OUT 0060  
                            _I2C_LCD_init 5C4A                               ?_LED_output 0060  
                                    l1020 682E                                      l1500 67F8  
                                    l1501 67F6                                      l2055 4158  
                                    l2305 5EC2                                      l1259 6C0E  
                                    l1291 5AE4                                      l2315 6358  
                                    l2252 5382                                      l2262 58E0  
                                    l1439 3312                                      l1802 2EEE  
              USBConfigureEndpoint@handle 0033                                      l1844 0272  
                                    OUT@b 0061                                      l1797 2E92  
                                    l8011 1250                                      l8031 131A  
                                    l8023 12C8                                      l8015 1278  
                                    l8035 1344                                      l8027 12F0  
                                    l8019 12A0                                      l8043 1396  
                                    l8039 136E                        __CFG_WPFP$PAGE_127 000000  
                                    STR_1 FFE6                                      STR_2 FFE6  
                                    STR_3 FFE6                                      STR_4 FFE6  
                                    STR_5 FE92                                      STR_6 FF0C  
                                    STR_7 FEE2                                      STR_8 FEF1  
                                    STR_9 FF25                     ??_USBCtrlTrfTxService 002D  
                                    u8240 1306                                      u8250 1330  
                                    u8260 135A                                      u8270 1384  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                            __CFG_WDTPS$8 000000                           _CDCDataInHandle 0118  
                             display@item 0064                       ??_RTCC_from_caltime 0091  
                             display@str0 0060                               display@str1 0062  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 011C  
                                    _atoi 4070                                      _main 6096  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 515C                                      _port 012D  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 020A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 6C7A                           _USBDeviceAttach 67CA  
                                    btemp 0059                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 6CAC                          __end_of_I2C_Stop 6CA6  
                                    pclat 000FFA                          __end_of_I2C_init 6C8C  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 10E0                          __end_of_ADC_init 6B9E  
                           __CFG_IESO$OFF 000000                RTCC_adjust_time_dec@i_2940 0097  
                      __size_of_CTMU_init 0028                        __size_of_CTMU_read 00C2  
              __end_of_USBCheckStdRequest 4254                    ??_USBCtrlTrfOutHandler 002F  
                          terminal_task@i 0468                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0041                             _I2C_LCD_Clear 6C2E  
                         ??_terminal_task 0195                           ??_terminal_time 00DA  
                                   ??_ADC 0062                        terminal_task@ascii 0467  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004B                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 0023  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10101 5236                                     l10031 5744  
                                   l10113 526A                                     l11001 0C52  
                                   l10051 57B0                                     l10043 578E  
                                   l10035 5758                                     l10027 5734  
                                   l10203 1C3A                                     l10115 5276  
                                   l10107 524C                                     l11003 0C8A  
                                   l10037 5764                                     l10213 1CC2  
                                   l10205 1C3E                                     l10133 52CE  
                                   l10125 52AC                                     l10117 527C  
                                   l10301 0138                                     l11013 0D52  
                                   l10039 576A                                     l10047 579C  
                                   l10063 42CC                                     l10143 5306  
                                   l10311 01B0                                     l10303 0144  
                                   l11103 27F6                                     l11007 0CD2  
                                   l10209 1C5E                                     l10145 5316  
                                   l10161 6BC2                                     l10129 52BA  
                                   l10401 042E                                     l10313 01BC  
                                   l10305 014A                                     l11121 2884  
                                   l11009 0D0A                                     l10171 4C96  
                                   l10155 5370                                     l10147 531C  
                                   l10251 58CE                                     l10243 5874  
                                   l10403 043E                                     l10411 04EE  
                                   l11107 2830                                     l11115 2858  
                                   l11203 2640                                     l12011 5D8E  
                                   l10085 5EDE                                     l10261 6210  
                                   l10245 5884                                     l10229 6A8C  
                                   l10325 021E                                     l10317 01CE  
                                   l10413 050E                                     l11141 297C  
                                   l11133 2938                                     l11125 288E  
                                   l11109 2848                                     l11301 250A  
                                   l11221 2740                                     l11213 26FC  
                                   l10079 4754                                     l10191 1BD0  
                                   l10511 2DA4                                     l10247 588A  
                                   l10335 0294                                     l10319 01E6  
                                   l10271 002C                                     l11047 15CC  
                                   l11071 4814                                     l11055 47AA  
                                   l11143 2994                                     l11151 29C2  
                                   l11119 287E                                     l11223 2758  
                                   l11231 2786                                     l12007 5D6C  
                                   l10089 5F04                                     l10193 1BD6  
                                   l10257 61D8                                     l10409 04D8  
                                   l10345 02D8                                     l10329 0236  
                                   l10273 003E                                     l10265 000E  
                                   l11049 15E4                                     l11065 47FA  
                                   l11137 2942                                     l11217 2706  
                                   l12201 518A                                     l12017 5DCE  
                                   l12027 4E28                                     l12035 4E44  
                                   l10515 2DAC                                     l10371 038E  
                                   l10347 02DE                                     l10291 0100  
                                   l10283 0080                                     l10611 5A42  
                                   l11307 251A                                     l11315 253E  
                                   l12131 4E64                                     l10197 1BE0  
                                   l12053 6940                                     l12029 4E3E  
                                   l10509 2DA0                                     l10365 034C  
                                   l10293 0106                                     l10277 0048  
                                   l10541 63E2                                     l11149 29A4  
                                   l11157 29C8                                     l11325 2586  
                                   l11309 2538                                     l11261 2350  
                                   l11253 2334                                     l11229 2768  
                                   l11181 25A8                                     l11173 258C  
                                   l11237 278C                                     l12117 5650  
                                   l12141 4E90                                     l12205 5194  
                                   l12045 59CA                                     l11511 453C  
                                   l12071 65EA                                     l11503 6B54  
                                   l12055 6944                                     l11343 32E8  
                                   l10359 032A                                     l10543 63EE  
                                   l10703 66CE                                     l11079 4830  
                                   l11167 2A10                                     l11095 27DA  
                                   l11247 27D4                                     l12151 4ECE  
                                   l12135 4E6E                                     l10623 6424  
                                   l12303 10A2                                     l12311 10D8  
                                   l11433 2E82                                     l11521 4582  
                                   l11513 4546                                     l10369 0384  
                                   l10617 5A74                                     l10537 63CC  
                                   l10721 3D1A                                     l10713 3CCA  
                                   l10801 1A48                                     l11089 487E  
                                   l11265 2390                                     l11273 23B8  
                                   l11257 2346                                     l11185 25E2  
                                   l11193 260A                                     l11177 259E  
                                   l12217 5214                                     l10625 6430  
                                   l11451 2EF2                                     l11427 2E68  
                                   l11371 3358                                     l11347 32F2  
                                   l10395 040E                                     l10379 03B4  
                                   l10387 03DC                                     l10619 5A9C  
                                   l10539 63D2                                     l10563 5F9C  
                                   l10571 37FA                                     l11611 3178  
                                   l11603 313E                                     l11099 27EC  
                                   l11291 24A8                                     l11283 23EE  
                                   l11267 23A8                                     l11187 25FA  
                                   l12091 560A                                     l10651 40D0  
                                   l10635 4072                                     l12251 0DEC  
                                   l11445 2ED6                                     l11429 2E72  
                                   l11525 45B2                                     l12069 65E6  
                                   l11381 33C8                                     l11541 6326  
                                   l10389 03E8                                     l10581 3854  
                                   l10725 3D42                                     l10717 3CF2  
                                   l10709 3CA2                                     l10821 1B54  
                                   l10805 1A70                                     l11277 23DE  
                                   l11197 2630                                     l11701 2B80  
                                   l12093 560E                                     l12157 4F0A  
                                   l10653 411A                                     l10637 4078  
                                   l10629 646E                                     l11439 2E9E  
                                   l11519 457A                                     l10663 50B6  
                                   l11375 3362                                     l11359 3320  
                                   l11367 3338                                     l11551 390E  
                                   l10591 38C4                                     l11631 322C  
                                   l11607 3148                                     l10815 1AE0  
                                   l10823 1B6C                                     l10751 17A4  
                                   l10743 16F4                                     l11295 24B2  
                                   l11279 23E4                                     l11199 2636  
                                   l12087 55FA                                     l10655 4120  
                                   l10647 40BE                                     l12271 0F10  
                                   l12263 0EBE                                     l12255 0E6C  
                                   l12247 0DC2                                     l12319 60A0  
                                   l11529 45E4                                     l10905 5E72  
                                   l11545 634A                                     l11537 6314  
                                   l10833 679C                                     l10585 3884  
                                   l10577 3828                                     l11617 31C6  
                                   l10729 3D6A                                     l10817 1AE8  
                                   l11721 2BF4                                     l11713 2BD0  
                                   l12281 0F66                                     l12273 0F14  
                                   l12265 0EC2                                     l12257 0E70  
                                   l12361 60FE                                     l11459 2F1C  
                                   l11467 2F40                                     l10667 50C0  
                                   l10907 5E7E                                     l10931 69CA  
                                   l10923 69C2                                     l11555 3918  
                                   l11539 6320                                     l11803 311E  
                                   l10835 67A8                                     l10595 3902  
                                   l11627 3224                                     l11635 3232  
                                   l11643 3296                                     l10827 1BA0  
                                   l10771 18B0                                     l10755 17CC  
                                   l10747 1720                                     l10739 16C8  
                                   l11299 24F2                                     l11707 2BB6  
                                   l11731 2C2A                                     l12099 561C  
                                   l11811 2124                                     l11485 2F92  
                                   l11469 2F4C                                     l11477 2F70  
                                   l10917 5EB4                                     l10909 5E84  
                                   l11565 3A14                                     l10845 6152  
                                   l11741 055C                                     l11573 3E86  
                                   l11629 3228                                     l11637 3248  
                                   l10765 183C                                     l10773 18C8  
                                   l11717 2BE2                                     l11709 2BBE  
                                   l12293 103E                                     l12357 60F6  
                                   l11487 2F98                                     l11479 2F7A  
                                   l10695 5116                                     l10863 687A  
                                   l10927 69C6                                     l11567 3A36  
                                   l11751 05BE                                     l11735 0522  
                                   l11583 3F76                                     l10767 1844  
                                   l10759 17D6                                     l11727 2C06  
                                   l11655 2A40                                     l11831 2206  
                                   l12295 1046                                     l12287 0FEA  
                                   l12279 0F62                                     l10881 48D4  
                                   l10873 48A0                                     l11489 2FBC  
                                   l11921 5C50                                     l10937 69CE  
                                   l11761 0772                                     l11577 3E90  
                                   l11593 62AE                                     l10793 1998  
                                   l10777 18FC                                     l11665 2A68  
                                   l11649 2A16                                     l11825 21DA  
                                   l11809 210C                                     l12289 1014  
                                   l10867 688C                                     l10955 600E  
                                   l11691 2B2A                                     l11683 2AAA  
                                   l11675 2A94                                     l11667 2A6C  
                                   l10859 63A8                                     l10971 0A28  
                                   l11827 21DE                                     l12299 1062  
                                   l10893 493A                                     l11941 5CBE  
                                   l11933 5C9C                                     l11925 5C5A  
                                   l11757 069C                                     l11597 62FA  
                                   l11589 62A4                                     l10797 19C4  
                                   l10789 196C                                     l11685 2ACA  
                                   l11677 2A98                                     l11669 2A72  
                                   l10981 0AC4                                     l10973 0A34  
                                   l11853 2312                                     l11837 2272  
                                   l11791 302A                                     l11759 072A  
                                   l11775 0992                                     l11783 09C4  
                                   l11687 2AEA                                     l11695 2B4A  
                                   l11679 2A9E                                     l10983 0AFC  
                                   l11847 22B2                                     l11937 5CA6  
                                   l11929 5C72                                     l11777 09A6  
                                   l11689 2B0A                                     l10993 0BC4  
                                   l10977 0A7C                                     l11849 22CA  
                                   l11867 674E                                     l11795 3034  
                                   l10987 0B44                                     l11949 6182  
                                   l10997 0C0A                                     l10989 0B7C  
                                   l11879 65AC                 __end_of_RTCC_from_caltime 6B0C  
                                   ?_atoi 007C                                     ?_main 002D  
                 __size_of_put_string_usb 002E                            ??_get_quot_rem 007D  
                         __end_of___awdiv 52D8                                     _ADRES 000FC3  
                                   STR_10 FEC3                                     STR_11 FFD9  
                                   STR_12 FFFD                                     STR_20 FF53  
                                   STR_21 FFDE                                     STR_13 FBE6  
                                   STR_30 FFBD                                     STR_14 FF70  
                                   STR_22 FE1D                                     STR_15 FF79  
                                   STR_31 FF48                                     STR_23 FDBD  
                                   STR_32 FE44                                     STR_16 FFEE  
                                   STR_24 FFC9                                     STR_40 FFAB  
                                   STR_25 FFD2                                     STR_41 FFB1  
                                   STR_17 FF31                                     STR_33 FE01  
                                   STR_18 FFE6                                     STR_34 FEE2  
                                   STR_50 FE81                                     STR_42 FE81  
                                   STR_26 FE4D                                     STR_51 FFAB  
                                   STR_43 FFAB                                     STR_19 FFC3  
                                   STR_35 FEFF                                     STR_27 FDE1  
                                   STR_36 FFE6                                     STR_60 FFA5  
                                   STR_52 FFB1                                     STR_44 FFB1  
                                   STR_28 FE35                           __end_of___awmod 57BA  
                                   STR_61 FFE6                                     STR_53 FFE6  
                                   STR_45 FFE6                                     STR_37 FFE6  
                                   STR_29 FDBB                                     STR_62 FFE6  
                                   STR_54 FFE6                                     STR_46 FFE6  
                                   STR_38 FFE6                                     STR_70 FF67  
                                   STR_63 FFE6                                     STR_55 FFE6  
                                   STR_47 FFE6                                     STR_39 FFE6  
                                   STR_71 FE70                                     STR_48 FFAB  
                                   STR_72 FF67                                     STR_56 FFB7  
                                   STR_64 FF67                                     STR_49 FFB1  
                                   STR_81 FFF9                                     STR_57 FFA5  
                                   STR_73 FEB3                                     STR_65 FE5F  
                                   STR_74 FF67                                     STR_66 FF67  
                                   STR_58 FE81                                     STR_90 FFF5  
                                   STR_59 FFB7                                     STR_91 FF8F  
                                   STR_67 FE5F                                     STR_75 FED3  
                                   STR_76 FFE6                                     STR_68 FF67  
                                   STR_84 FFFB                                     STR_92 FF5E  
                                   STR_77 FFE6                                     STR_93 FFFB  
                                   STR_69 FEA3                                     STR_94 FF65  
                                   STR_78 FDFC                                     STR_86 FFF7  
                                   STR_87 FFE6                                     STR_79 FF64  
                                   STR_95 FFF7                                     STR_88 FFF9  
                                   STR_96 FFE3                                     STR_97 FFE3  
                                   STR_89 FFF9         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 5394                                     u11200 4746  
                                   u12000 38B8                                     u11210 4748  
                                   u12010 38E6                                     u11220 47A0  
                                   u11230 47A2                                     u12007 38AE  
                                   u11160 46FE                                     u12040 5A64  
                                   u12017 38DC                                     u11170 4700  
                                   u12050 5A96                                     u11180 4730  
                         ___awdiv@divisor 0062                                     u12047 5A5A  
                                   u14000 3DB4                                     u13040 26AA  
                         __end_of___llmod 58F2                                     u12057 5A8C  
                  __end_of_USBDeviceTasks 3690                                     u14010 3DB6  
                                   u12180 514E                                     u14020 3DF4  
                                   u11198 4734                                     u13310 2E58  
                                   u14030 3DF6                                     u11550 0184  
                                   u14040 3E34                                     u12600 5FEE  
                                   u11480 6202                                     u12185 5140  
                                   u14050 3E36                                     u11490 6232  
                                   u13058 26AE                                     u14060 3E74  
                                   u12620 5FFC                                     u11900 5F7C  
                                   u11557 017A                                     u13318 2E5C  
                                   u14070 3E76                                     u11590 0210  
                                   _LATB2 007C52                                     u11487 61F8  
                                   _LATA5 007C4D                                     u12640 600A  
                                   u11920 5F8A                                     _LATC2 007C5A  
                                   _LATA6 007C4E                                     u11497 6228  
                                   _LATA7 007C4F                                     u13450 452C  
                                   _LATB6 007C56                                     _LATB7 007C57  
                                   u11860 6418                                     u13620 62D6  
                                   u11940 5F98                                     u14165 6B8E  
                                   u11597 0206                                     u14166 6B90  
                                   u11790 6902                                     u13535 3940  
                                   u13560 3A04                                     u12920 28F8  
                                   u13458 4530                 ?_USBCtrlEPServiceComplete 002D  
                                   u12595 5FDE                                     u11867 640E  
                                   u12596 5FE2                                     u13820 05FE  
                                   u11980 3876                                     u13830 0666  
                                   u13590 3EB8                                     u13831 0662  
                                   u11895 5F6C                                     u13840 0668  
                                   u11896 5F70                                     u12938 28FC  
                                   u11987 386C                                     u13828 0602  
                                   u14907 50EA                                     u14847 5A70  
                                   u14857 5C62                                     u14867 5CAE  
                                   u14877 6C3C                                     u14887 6834  
                                   u14897 50E0                           __end_of___lwdiv 5ECC  
                         __end_of___lwmod 6362                                     i2l411 10A4  
                           __CFG_WDTEN$ON 000000                                     i2l292 6264  
                                   i2l294 6270                                     i2l295 627C  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                         ??_hardware_init 0091                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                  __size_of_ctmu_sampling 0102                    __size_of_LED_indicator 0126  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 5858  
                                   _sd000 FBE2                                     _sd001 FB3C  
                                   _sd002 FB70                           __end_of_display 3908  
                    caltime_to_epoch@year 007F                                i2memset@p1 002D  
                         __end_of_dpowers FA79                           ??_settings_task 0099  
                         __end_of_isdigit 6A96                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003A  
                        ringbuf_delete@rb 0060                                     atoi@a 0081  
                                   atoi@s 007C                         __end_of_I2C_Start 6906  
               RTCC_adjust_time_cursor@tm 0060                              display_dec@s 00AF  
             settings_task@settings_state 012B                                     tablat 000FF5  
                       __end_of_ANALOG_IN 69E8                            ?_software_init 002D  
                                   plusw2 000FDB                         __end_of_CDCInitEP 6096  
                        __end_of_USB_init 6BF8                          __end_of_USB_task 5B30  
              __size_of_ringbuf_backspace 008E                                     status 000FD8  
                         __end_of_sprintf 051C                          __end_ofi2_memset 6A6C  
                      __size_ofi2___awdiv 0084                         month_length@month 0066  
                             CTMU_read@ch 0070                   __end_of_ringbuf_put_num 5DDC  
                 __end_of_ringbuf_put_str 623A                        __size_ofi2___lwdiv 0052  
                     terminal_task@i_3549 0466                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                            ?_I2C_LCD_Clear 002D  
                         __initialization 5DDC                           terminal_task@rx 0193  
                         terminal_task@tx 0191                           terminal_time@tx 00D2  
                            __end_of_atoi 4162                              __end_of_main 6102  
                   _control_signal_bitmap 0125                          __end_of_Auto_cut 3A3C  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 47A8                RTCC_adjust_time_inc@i_2910 0097  
                     __size_of_LED_output 0072                  ctmu_set_ratio@percentage 0083  
               __size_of_USBCtrlEPService 00CE                             print_time@str 00AD  
               RTCC_adjust_time_toggle@tm 0060                                    ??_atoi 007E  
                                  ??_main 00E6                           LED_output@value 0060  
         settings_led_indicator@strp_1328 0091                             __activetblptr 000003  
                         ?_USBDeviceTasks 002D                 ??_RTCC_adjust_time_cursor 0062  
                             ?_USBSuspend 002D                 ??_RTCC_adjust_time_toggle 0062  
                                  ISR@cnt 000D                         __end_of_CTMU_init 6AE6  
                       __end_of_CTMU_read 515C                              _cdc_mem_type 0124  
                                  _BCL1IF 007D0B                             _I2C_IdleCheck 6BBE  
                 __end_of_USBDeviceAttach 6802                          _CDCDataOutHandle 0007  
                       _getsUSBUSART$5985 006B                          ___llmod@dividend 006D  
                                  STR_100 FD98                                    STR_101 FF82  
                                  STR_110 FDFF                                    STR_102 FF3D  
                                  STR_103 FFEC                                    STR_111 FFE7  
                       _I2C_LCD_SetCursor 6990                                    STR_112 FE4B  
                                  STR_104 FFEB                                    STR_113 FFD4  
                                  STR_105 FF19                                    STR_106 FFE9  
                                  STR_114 FFF3                                    STR_107 FFCF  
                                  STR_115 FF98                                    STR_116 FFC1  
                                  STR_108 FFF1                                    STR_109 FF9F  
                                  STR_117 FF91                                    STR_118 FF8A  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                       display_time_1602@tm 00B3  
                        ___awdiv@dividend 0060                                 ??_USB_ISR 004B  
                      I2C_LCD_Command@ans 0065                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 018C                                    i2l2305 6576  
                                  i2l1601 6660                                    i2l1451 357C  
                                  i2l1525 3FF6                                    i2l1461 3616  
                                  i2l1462 368C                                    i2l1439 36F6  
                                  i2l1463 3628                                    i2l1652 4172  
                                  i2l1661 41D6                                    i2l1638 508A  
                                  i2l1743 4A8E                                    i2l1591 54EC  
                                  i2l1592 546E                                    i2l1745 4AD8  
                                  i2l1593 5474                                    i2l1667 1E6E  
                                  i2l1588 545E                                    i2l1686 2032  
                                  i2l7111 3410                                    i2l7103 44E8  
                                  i2l7027 4F5A                                    i2l7203 1F46  
                                  i2l7131 3524                                    i2l7123 34C2  
                                  i2l7115 3428                                    i2l6405 554A  
                                  i2l6501 4AE2                                    i2l7213 1F98  
                                  i2l7133 352C                                    i2l7125 34CA  
                                  i2l7061 5824                                    i2l7231 201E  
                                  i2l7215 1FB2                                    i2l6353 6700  
                                  i2l6417 55A6                                    i2l7137 3534  
                                  i2l7081 4472                                    i2l7057 5808  
                                  i2l6339 5954                                    i2l7219 1FCC  
                                  i2l7315 401C                                    i2l6349 66F2  
                                  i2l7245 2092                                    i2l7229 2012  
                                  i2l7149 5494                                    i2l7077 446A  
                                  i2l7413 4210                                    i2l7343 3B92  
                                  i2l7247 209E                                    i2l7239 204E  
                                  i2l7191 1EE4                                    i2l7159 54D4  
                                  i2l7087 449E                                    i2l7361 3C14  
                                  i2l7177 1E6A                                    i2l7409 41F2  
                                  i2l6643 6964                                    i2l7365 3C2E  
                                  i2l7349 3BB6                                    i2l6397 5520  
                                  i2l6493 4ABA                                    i2l6485 4A7C  
                                  i2l6477 4A5C                                    i2l6645 696A  
                                  i2l7197 1F28                                    i2l9221 35A2  
                                  i2l9213 3592                                    i2l7199 1F2A  
                                  i2l6735 6A4A                                    i2l7383 417C  
                                  i2l7295 3FA0                                    i2l6665 460C  
                                  i2l6649 6970                                    i2l7385 4182  
                                  i2l9403 3B18                                    i2l9411 3B5E  
                                  i2l6739 6A5A                                    i2l7395 41A4  
                                  i2l7387 4188                                    i2l9251 360C  
                                  i2l9243 35E4                                    i2l9227 35C8  
                                  i2l9317 6288                                    i2l9341 5D18  
                                  i2l9333 5CFA                                    i2l6669 4616  
                                  i2l7821 5050                                    i2l7397 41AA  
                                  i2l9237 35D8                                    i2l9351 5D38  
                                  i2l9343 5D1C                                    i2l9327 5CEA  
                                  i2l6679 4646                                    i2l6687 4680  
                                  i2l7807 500A                                    i2l7399 41B0  
                                  i2l8535 68CE                                    i2l8631 36DA  
                                  i2l9271 364E                                    i2l9191 3564  
                                  i2l6689 4688                                    i2l6697 46C2  
                                  i2l7833 5094                                    i2l7809 500E  
                                  i2l8537 68D0                                    i2l9257 3620  
                                  i2l9339 5D10                                    i2l9355 5D42  
                                  i2l9371 654C                                    i2l7827 5070  
                                  i2l8643 3704                                    i2l8651 371C  
                                  i2l8627 36D2                                    i2l9381 656C  
                                  i2l9373 6550                                    i2l9277 366C  
                                  i2l9359 5D50                                    i2l9391 3A48  
                                  i2l8575 4CFE                                    i2l8591 4D66  
                                  i2l8559 665C                                    i2l8655 373A  
                                  i2l9279 3688                                    i2l9199 3574  
                                  i2l9369 6544                                    i2l7793 64D4  
                                  i2l7785 648C                                    i2l8593 4D6C  
                                  i2l8665 379E                                    i2l9387 3A40  
                                  i2l8587 4D4C                                    i2l8579 4D06  
                                  i2l8659 3742                                    i2l9397 3A9A  
                                  i2l9685 1086                                    i2l9669 1052  
                                  i2l9695 109C                                    i2l9679 106E  
                      ?_I2C_LCD_SetCursor 0066                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000        settings_integrating_reset@str_1344 007E  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0031  
                       ??i2_USBDeviceInit 0035           __size_ofi2_USBTransferOnePacket 00BA  
                        __end_of_data_out 3138                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 6C14                             _ctmu_sampling 3D7E  
                           _LED_indicator 3A3C                        epoch_to_caltime@tm 0081  
                      _terminal_task$6795 0464                      get_string_usb@rx_len 0072  
                             LED_output@b 0061                         _shortPacketStatus 0022  
                     ??_I2C_LCD_SetCursor 0067                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                   __size_of_ctmu_set_ratio 00E6  
                        ringbuf_put_num@i 0088                           USBDeviceTasks@i 004A  
                   caltime_to_epoch@epoch 0081                          ??_integrate_time 0060  
             USBStdFeatureReqHandler@pUEP 0042                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                        _terminal_time$6796 00DA  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0085                          __end_of_bootload 66A6  
                                  ___lmul 5ECC                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 495A                                    ___wmul 683A  
                      ??_epoch_to_caltime 0083                                 ??___awdiv 0064  
                               ??___awmod 0064              __end_of_RTCC_adjust_time_dec 1BB6  
                   ?_settings_adjust_time 002D              __end_of_RTCC_adjust_time_inc 1912  
                                  _d_to_x 6A96                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 45EA                      ringbuf_put_num@value 0085  
                            ?_timer0_init 002D                                 ??___llmod 0075  
                       __end_of_RTCC_init 61D6                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_task 6792  
                               ??___lwmod 0064                              ?_timer3_init 002D  
                            ?_normal_task 002D                         _USBEnableEndpoint 66E2  
         __size_of_USBStdGetStatusHandler 00BA                                    _ctmu_m 0027  
                                  _memset 6870                                    clear_0 5DE4  
                                  clear_1 5DF6                                    clear_2 5E02  
                         put_string_usb@s 006C                                    clear_3 5E0E  
                                  clear_4 5E1A                                    clear_5 5E26  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                      __size_of_display_LCD 04C4  
                         ___awmod@counter 0064                        _ctmu_sampling_flag 001A  
                                  _x_to_d 6B9E                        ?_USBEnableEndpoint 0035  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 02B2  
                                  _usb_tx 02BA                      __size_of_display_dec 006A  
                                  _strcat 63C2                                    _strcmp 6422  
                                  _strcpy 6792                                 ??_display 0064  
                          i2___awdiv@sign 0032             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 028E                        _terminal_operation 20C4  
             settings_auto_stop@strp_1311 0091                                 ??_isdigit 0060  
                       __end_ofi2___awdiv 5D5A                                 ?_I2C_Send 002D  
                            _CDCTxService 2E34                                 ?_I2C_Stop 002D  
                       __end_ofi2___lwdiv 6580                              __mediumconst FA50  
                           _cut_time_flag 001B                                 ?_I2C_init 002D  
               __end_of_I2C_LCD_SetCursor 69BC                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_sprintf 0097  
                     ?_terminal_operation 00DB                             ?i2_LED_output 002D  
                             _CtrlTrfData 000D38                           ??_software_init 0084  
                    _controlTransferState 0018                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 5E4A  
                            __pbssBIGRAMl 0469                              CTMU_read@sum 0071  
                           ?_millis_timer 002D                      __end_of_get_quot_rem 4BDA  
                          ?_ctmu_sampling 002D                            ?_LED_indicator 002D  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 6C14                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 0083                          ?_ringbuf_put_str 006F  
                 ?_settings_led_indicator 002D                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          LED_indicator@cnt 010A  
                        terminal_task@op0 0236                          terminal_task@op1 024F  
                        terminal_task@op2 0268                          terminal_task@op3 0281  
                        terminal_task@buf 0400                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 671E                             __end_of_sd000 FBE6  
                           __end_of_sd001 FB70                             __end_of_sd002 FBA4  
                        terminal_time@op0 00D4                          terminal_time@op1 00D6  
                        terminal_time@op2 00D8                              __pidataBANK1 6CAC  
          settings_led_indicator@str_1327 007B                      ??_terminal_operation 00E5  
                __end_of_terminal_at_hand 63C2          __size_of_USBCtrlEPAllowDataStage 009E  
           __size_of_USBConfigureEndpoint 0094                         ?_port_button_task 002D  
             __end_of_USBCtrlTrfInHandler 509A                           __CFG_DSWDTPS$G2 000000  
                         _I2C_LCD_Command 6802                            _put_string_usb 6934  
                  i2_USBTransferOnePacket 550A                        ??_port_button_task 0066  
                    terminal_task@command 0180                                 ?_USB_init 002D  
                               ?_USB_task 002D                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$6033 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00FB                                ??_I2C_init 0060  
                              _cdc_tx_len 00FD                                ??_ADC_init 0060  
              caltime_to_epoch@month_2730 0080                  ??_USBCtrlTrfSetupHandler 0047  
                          ??i2_LED_output 002E                              ??_LED_output 0061  
                  RTCC_adjust_time_dec@tm 0091                          ?_USBDeviceAttach 002D  
                  _USBStdGetStatusHandler 5450                              sprintf@width 00A9  
                  RTCC_adjust_time_inc@tm 0091                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                 ?_Auto_cut 002D  
                          LED_indicator@i 0038                            ??_millis_timer 002D  
                      __size_of_ctmu_task 0010                                 ISR@cnt_t1 000E  
                 __end_of_caltime_to_RTCC 4A30            __end_of_settings_led_indicator 27D8  
                         _RTCC_to_caltime 5394                        _settings_auto_stop 27D8  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00F5  
        __end_of_USBCtrlEPServiceComplete 4070               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FBC0                    ??_settings_adjust_time 0099  
                   RTCC_task@prev_halfsec 0122                      USBCtrlTrfRxService@i 002D  
                                 ?___lmul 006D                     settings_auto_stop@str 0067  
                                 ?___wmul 0076                       ?_settings_auto_stop 002D  
                                 ?_d_to_x 002D                    __end_of_put_string_usb 6962  
                                 ?_memset 0060                      I2C_LCD_SetCursor@col 0069  
                          ___lmul@product 0075                                _device_dsc FBC0  
                    I2C_LCD_SetCursor@row 0066                        __end_of_LED_output 5FB4  
                        _USBCtrlEPService 4CAE                                   ?_x_to_d 002D  
                            I2C_Send@data 0062                                _ep_data_in 0001  
                                 ?_strcat 0060                                   ?_strcmp 0060  
                                 ?_strcpy 0060                   settings_auto_stop@state 0128  
             __end_of_USBCtrlTrfRxService 3C7A                        _USBCheckStdRequest 4162  
                              ??_USB_init 0069                         _configDescriptor1 FAF9  
                              ??_USB_task 0074                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                           ??_I2C_IdleCheck 0060  
                              ANALOG_IN@b 0060                                ??i2_memset 0033  
                               ?_data_out 00AB               __end_of_USBCtrlTrfTxService 46CA  
                     _USBStdSetCfgHandler 4428                __size_of_I2C_LCD_SetCursor 002C  
                  I2C_LCD_SetCursor@F8620 01E1                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                    terminal_operation@tx 00DB                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                      ??_settings_auto_stop 0066  
                     ?_USBCheckStdRequest 002D              __size_of_USBStdGetDscHandler 014E  
                                 _UIEbits 000F36                           integrate_time@i 0062  
                                 _USB_ISR 6CA6                   __end_of_RTCC_from_epoch 6C2E  
                               ?_bootload 002D                      timer1_init@prescaler 0062  
                    _RTCC_adjust_time_dec 1912                                   _UIRbits 000F62  
                    _RTCC_adjust_time_inc 166E                                ??_Auto_cut 007C  
                        __CFG_CFGPLLEN$ON 000000                  ??_button_timer_interrupt 0086  
                           _cdc_trf_state 00FC                           ??_ctmu_sampling 0088  
                         ??_LED_indicator 0035                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                       RTCC_from_epoch@tm 008F                                 _I2C_Start 68D6  
                                 _pCDCDst 0110                                   _pCDCSrc 0113  
                   __size_of_getsUSBUSART 00E0                    display_time_1602@line0 00B5  
                  display_time_1602@line1 00B7                                 _ANALOG_IN 69BC  
     settings_integrating_reset@strp_1345 0094                                   __Hparam 0000  
                          _ctmu_set_ratio 4342                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 6026                                   __Lparam 0000  
                              _ctmu_ratio 0019                   __end_of_I2C_LCD_Command 683A  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0191  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                            USB_task@data 0076                      ??_USBCheckStdRequest 0047  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 521A                           __size_of___lmul 0076  
                                 ___awmod 5718                                   ___lldiv 52D8  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0036  
                                 ___llmod 5858                     ringbuf_put_num@digits 0087  
                                 ___lwdiv 5E54                           ?_put_string_usb 006C  
                       ??_USBStallHandler 002D                                   ___lwmod 6300  
                         __size_of_d_to_x 0028                     __end_of_terminal_task 10F6  
                   __end_of_terminal_time 0D8C               settings_integrating_reset@i 0096  
             settings_integrating_reset@j 0098                      __size_of_ringbuf_pop 00CC  
                    __size_of_ringbuf_num 00EE                      __size_of_ringbuf_put 00D4  
                         __CFG_STVREN$OFF 000000                        display_LCD@str_575 01B9  
                    __size_of_putUSBUSART 0026               epoch_to_caltime@month_cache 01E3  
                                 __pcinit 5DDC                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FB3C  
                                 __ramtop 0F00                      __size_of_timer0_init 003A  
                    __size_of_timer1_init 0050                                   __ptext0 6096  
                                 __ptext1 0D8C                                   __ptext2 20C4  
                                 __ptext3 09E0                                   __ptext4 6362  
                                 __ptext5 5BBE                                   __ptext6 6AE6  
                                 __ptext7 6422                                   __ptext8 4070  
                                 __ptext9 6664                                   _inPipes 00EF  
                    __size_of_timer3_init 002C                      __size_of_normal_task 00AE  
           settings_integrating_reset@str 006A                         __end_of_ctmu_task 6C9C  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 0012                         port_button_task@i 0066  
                                 _display 37D4                                 _T0CONbits 000FD5  
                            __size_of_ADC 002E                           __size_of_strcat 0060  
                        _time_change_flag 0025                          _caltime_to_epoch 1BB6  
                         __size_of_strcmp 005C                           __size_of_strcpy 0038  
                            __size_of_ISR 00D8                                 _T1CONbits 000FCD  
                            __size_of_OUT 0072                                   _dpowers FA51  
                            ??_USBSuspend 0041                   __size_of_RTCC_from_RTCC 001A  
                              data_out@tx 00AB                                   _isdigit 6A6C  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                      hardware_init@usbrx 0300                        hardware_init@usbtx 0469  
                              ??_data_out 00AD                             I2C_LCD_init@i 0068  
          settings_integrating_reset@strp 0092                                 _T5CONbits 000F22  
                   __end_of_hardware_init 5718                           i2_USBDeviceInit 3690  
                        i2USBDeviceInit@i 0035                         __end_ofdata_out@p FBE2  
                                 _uart_rx 02A2                                   _uart_tx 02AA  
                      __end_of_USB_CD_Ptr FA81                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 5450  
                   ?_RTCC_adjust_time_dec 0091                     ?_RTCC_adjust_time_inc 0091  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 5E4A  
                            _getsUSBUSART 450A                                ??_bootload 006A  
                               _CTMU_init 6ABE                                 _CTMU_read 509A  
                   __end_of_settings_task 2C42                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FA7F                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 000B           settings_integrating_reset@state 0129  
                          ??_month_length 0067                            display_dec@dec 00AD  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 00AB  
         _dummy_encapsulated_cmd_response 029A                    _terminal_data_out_flag 0024  
            terminal_operation@percentage 00E5                                 i2u1010_45 625E  
                               i2u1010_46 6262                                 i2u1011_40 626C  
                               i2u1013_40 6278                    __end_of_ctmu_set_ratio 4428  
                               i2u1015_40 6284                               sleep_task@i 006A  
                ?_USBStdFeatureReqHandler 002D                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                     ??_USBStdSetCfgHandler 0041  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002D  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                      __end_of_USBSuspend 6A40                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 57BA                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_task 4E48                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                    __end_ofi2_LED_output 629E                  _USBCtrlEPServiceComplete 3F7C  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0015  
              _USBStatusStageEnabledFlag2 0016                        USBEnableEndpoint@p 0036  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 616C  
                    __end_of_millis_timer 6B7E                                 _RTCC_task 6758  
                            _display_char 020E                              _display_flag 001D  
               epoch_to_caltime@day_cache 011E                                _print_item 0020  
                            _get_quot_rem 4B06                                _print_time 5BBE  
                              _print_port 00FE                            _ringbuf_delete 6B0C  
            __end_ofdisplay_LCD@port_char FAF9                 __size_of_epoch_to_caltime 01F2  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 000F  
                     RTCC_from_caltime@tm 008F                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                 i2___awdiv 5CD6  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0032  
                       i2___lwdiv@divisor 002F                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002D                settings_led_indicator@strp 008F  
                               i2___lwdiv 652E                         i2___lwdiv@counter 0033  
                        ?_RTCC_from_epoch 008F                                ?_CTMU_init 002D  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                                 Auto_cut@i 007E  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 495A                           ?_ctmu_set_ratio 002D  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 010D                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 5B30  
                           ??_display_LCD 00BA                            ringbuf_pop@ret 006E  
                           ??_display_dec 00AF                   ?i2_USBTransferOnePacket 002D  
            ??_settings_integrating_reset 0066                     __end_of_USBDeviceInit 33FE  
                       ?_terminal_at_hand 00CB                            __end_of___lmul 5F42  
                ?_RTCC_adjust_time_cursor 0060                            __end_of___wmul 6870  
                          __end_of_d_to_x 6ABE                  ?_RTCC_adjust_time_toggle 0060  
                 __end_ofi2_USBDeviceInit 37D4                    __end_of_ringbuf_delete 6B32  
                      ??_terminal_at_hand 00D2                                 i2memset@c 002F  
                               i2memset@n 0031                                 i2memset@p 0033  
                          __end_of_memset 68A4                                ?_RTCC_init 002D  
                              ?_RTCC_task 002D                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0123                            __end_of_x_to_d 6BBE  
                          __end_of_strcat 6422                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 647E                            __end_of_strcpy 67CA  
                     start_initialization 5DDC                                CTMU_read@i 0075  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002D  
                             __end_of_ADC 6934                        i2___awdiv@quotient 0033  
                             __end_of_ISR 10E0             USBCtrlTrfRxService@byteToRead 002E  
                             __end_of_OUT 6026                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0093                    ??_RTCC_adjust_time_inc 0093  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0364  
                             _cdc_data_tx 03A4                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 5986  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_task 0164  
                              ?i2___lwdiv 002D           __end_of_USBStdFeatureReqHandler 20C4  
       __end_of_USBCtrlEPAllowStatusStage 4FD6                     __end_of_software_init 521A  
                __end_of_USBCtrlEPService 4D7C                       settings_auto_stop@i 0093  
                     settings_auto_stop@j 0095                         _integrate_current 3E80  
                         ___llmod@divisor 0071       __size_of_settings_integrating_reset 0258  
                       __size_of_Auto_cut 0134                               ??_I2C_Start 0063  
                         ___llmod@counter 0075                   settings_led_indicator@i 0093  
                 settings_led_indicator@j 0095                        ?_integrate_current 002D  
               ??_USBCtrlEPAllowDataStage 002E                               ??_ANALOG_IN 0060  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 0068  
                   __end_of_I2C_LCD_Clear 6C48                    _pBDTEntryEP0OutCurrent 0009  
                            _ctmu_value_m 011A                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 55C4  
                        display_LCD@onoff FBD2                settings_auto_stop@str_1310 007B  
            settings_led_indicator@i_1329 0094                       ringbuf_put_num@temp 0089  
                                ??___lmul 0075                               ?_sleep_task 002D  
                                ??___wmul 007A                       _USBStdGetDscHandler 33FE  
                                ??_d_to_x 0068                       ??_integrate_current 006D  
             __size_of_terminal_operation 026E                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01E1                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 10F6                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcat 0064  
                                ??_strcmp 0064                                  ??_strcpy 0064  
                    __end_of_month_length 47A8                            _RTCC_from_RTCC 6C48  
                     __end_of_display_LCD 09E0                    _USBActiveConfiguration 002B  
          __end_of_USBStdGetStatusHandler 550A                               ?_print_time 00AB  
                 __size_of_integrate_time 0062                       __end_of_display_dec 616C  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0074  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0191              __size_of_USBCtrlTrfInHandler 00C4  
                           __pcstackBANK4 0400                            ??_I2C_LCD_Puts 0066  
                          ??_I2C_LCD_init 0067                      __end_of_ringbuf_init 652E  
                    ?_USBStdGetDscHandler 002D                              _isdigit$6286 0061  
                       __size_of_data_out 0178                                  ?_USB_ISR 002D  
               __end_of_integrate_current 3F7C                      sleep_task@sleep_flag 0026  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
              __end_of_USBWakeFromSuspend 68D6                               sprintf@flag 00A7  
                   RTCC_adjust_time_dec@i 0098                         __size_of_bootload 0042  
                             sprintf@prec 009B                           _USBStallHandler 661E  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 0098  
              __end_of_USBCheckCDCRequest 4B06                  __end_of_caltime_to_epoch 1E44  
                         millis_timer@cnt 0120                                 _data_item 001C  
                __size_of_USBDeviceAttach 0038                     __size_ofi2_LED_output 0064  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 3D7E                      display_LCD@port_char FA81  
                               __pintcode 1008           __end_of_RTCC_adjust_time_toggle 66E2  
                           __pmediumconst FA50                                  ?___awdiv 0060  
                               __ptext101 6B58                                 __ptext110 3F7C  
                               __ptext102 6CA6                                 __ptext111 57BA  
                               __ptext103 354C                                 __ptext120 6026  
                               __ptext112 4162                                 __ptext104 3690  
                               __ptext121 550A                                 __ptext113 4428  
                               __ptext105 68A4                                 __ptext130 652E  
                               __ptext122 66E2                                 __ptext114 6A40  
                               __ptext106 6A14                                 __ptext131 5CD6  
                               __ptext123 58F2                                 __ptext115 5450  
                               __ptext107 661E                                 __ptext132 623A  
                               __ptext124 647E                                 __ptext116 33FE  
                               __ptext108 4CAE                                 __ptext125 3B62  
                               __ptext117 1E44                                 __ptext109 5B30  
                               __ptext126 4F12                                 __ptext118 6962  
                               __ptext127 4FD6                                 __ptext119 4A30  
                               __ptext128 45EA                                 __ptext129 3A3C  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                                  ?___llmod 006D  
                                ?___lwdiv 007C             __size_of_settings_adjust_time 00DA  
                                ?___lwmod 0060                     _is_usb_available$4168 0060  
                  settings_auto_stop@strp 008F                    __end_of_RTCC_from_RTCC 6C62  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 0116                  settings_auto_stop@i_1312 0094  
                             ??_RTCC_init 0091                                  ?_display 0060  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 4882  
                             I2C_Start@rw 0062                                  ?_isdigit 002D  
                        _epoch_to_caltime 2C42                                  _I2C_Send 6C62  
                                OUT@value 0060                                  _I2C_Stop 6C9C  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_init 6C7A  
                               _ctmu_task 6C8C                          _display_LCD$6790 01CD  
                        _display_LCD$6791 01D1                          _display_LCD$6792 01D5  
                        _display_LCD$6793 01D9                          _display_LCD$6794 01DD  
                                _ADC_init 6B7E                     __end_of_I2C_IdleCheck 6BDC  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 64DA  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002D  
                             _ep_data_out 0004                          ___lwdiv@quotient 0081  
                   terminal_at_hand@value 00D1                               ??i2___awdiv 0031  
                                ?_sprintf 0083              __size_of_USBCtrlTrfRxService 0118  
             __size_of_settings_auto_stop 023C             USBConfigureEndpoint@direction 002D  
                             ??i2___lwdiv 0031                              i2_LED_output 623A  
                     __size_of_sleep_task 00CA                                 data_out@i 00CB  
                               data_out@p FBDC                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 3E80  
                   __end_of_LED_indicator 3B62                              _millis_timer 6B58  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u606_40 4670  
                                i2u606_47 4666                                  i2u608_40 46B2  
                                i2u608_47 46A8                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 0126                                  i2u664_40 3486  
               USBCtrlEPService@setup_cnt 0049                                  i2u664_47 347C  
                                i2u665_40 34BC                                  i2u665_47 34B2  
                                i2u667_40 3518                                  i2u667_47 350E  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                       _display_time_1602 13BE                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26        __end_of_settings_integrating_reset 258A  
              _settings_integrating_reset 2332                _USBDeferINDataStagePackets 0011  
                   terminal_operation@op0 00DD                     terminal_operation@op1 00DF  
                   terminal_operation@op2 00E1                     terminal_operation@op3 00E3  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 051C  
                           ??_timer3_init 0060                             ??_normal_task 00CC  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00B3                               _display_dec 6102  
                    _USBConfigureEndpoint 58F2                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0280                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                          software_init@i 0084            button_timer_interrupt@sw_value 0085  
                                _USB_init 6BDC                                  _USB_task 5AA2  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002D  
                     ??_display_time_1602 00B9                              _RemoteWakeup 0010  
                      I2C_LCD_init@i_3479 0069                         i2___awdiv@divisor 002F  
                                i2_memset 6A40                         i2___awdiv@counter 0031  
                       ??_ringbuf_put_num 0088                                ?_ctmu_task 002D  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 6664  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0068  
                ??_settings_led_indicator 0066                         ___lmul@multiplier 006D  
                        ??_ctmu_set_ratio 0083                               _INTCON2bits 000FF1  
                        _port_button_task 3138                __size_of_integrate_current 00FC  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 450A  
                        __size_of_USB_ISR 0006                                  _Auto_cut 3908  
                    epoch_to_caltime@year 0089             settings_task@item_change_flag 0099  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004E                        __end_of_device_dsc FBD2  
                 ?_USBCtrlTrfSetupHandler 002D                 __end_of_display_time_1602 166E  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                           i2LED_output@b 002E                      __end_of_I2C_LCD_Puts 5AA2  
                                _SetupPkt 000D30                             _weekday_3char FBA4  
                  __size_of_hardware_init 00A6                      __end_of_I2C_LCD_init 5CD6  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                  __size_of_settings_task 022E                       __end_of_ringbuf_pop 4E48  
                     __end_of_ringbuf_num 4342                       __end_of_ringbuf_put 4CAE  
                     __end_of_putUSBUSART 6B58                               _line_coding 0188  
                          _integrate_flag 001F                            ??_CDCTxService 0067  
                          _integrate_time 629E                       __end_of_timer0_init 6758  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 65D0  
                        __size_of_display 0134                                sprintf@len 00A1  
                     __end_of_timer3_init 6A14                                sprintf@val 00A3  
                     __end_of_normal_task 5672                         i2LED_output@value 002D  
                              strcat@from 0062                                  _data_out 2FC0  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                    timer0_init@prescaler 0061                                  __ptext10 5D5A  
                                __ptext11 6B0C                                  __ptext20 27D8  
                                __ptext12 5986                                  __ptext21 47A8  
                                __ptext13 515C                  __end_ofdisplay_LCD@onoff FBDC  
                                __ptext30 3E80                                  __ptext22 66A6  
                                __ptext14 4342                                  __ptext31 051C  
                                __ptext23 166E                                  __ptext15 4E48  
                                __ptext40 6A6C                                  __ptext32 13BE  
                                __ptext24 1912                                  __ptext16 55C4  
                                __ptext41 5858                                  __ptext33 6792  
                                __ptext25 3C7A                                  __ptext17 2A14  
                                __ptext50 69E8                                  __ptext42 61D6  
                                __ptext34 6102                                  __ptext26 3138  
                                __ptext18 258A                                  __ptext51 6580  
                                __ptext43 6300                                  __ptext35 63C2  
                                __ptext27 37D4                                  __ptext19 2332  
                                __ptext60 2C42                                  __ptext52 671E  
                                __ptext44 3908                                  __ptext36 6990  
                                __ptext28 5F42                                  __ptext61 4B06  
                                __ptext53 64DA                                  __ptext45 683A  
                                __ptext37 5A14                                  __ptext29 629E  
                                __ptext70 68D6                                  __ptext62 495A  
                                __ptext54 6BDC                                  __ptext46 5FB4  
                                __ptext38 2FC0                                  __ptext71 6C62  
                                __ptext63 6A96                                  __ptext55 329C  
                                __ptext47 69BC                                  __ptext39 0000  
                                __ptext80 52D8                                  __ptext72 6BBE  
                                __ptext64 521A                                  __ptext56 6870  
                                __ptext48 6906                                  __ptext81 5AA2  
                                __ptext73 6ABE                                  __ptext65 6C7A  
                                __ptext57 67CA                                  __ptext49 5672  
                                __ptext90 2E34                                  __ptext82 4BDA  
                                __ptext74 6B7E                                  __ptext66 5C4A  
                                __ptext58 616C                                  __ptext91 4882  
                                __ptext83 4D7C                                  __ptext75 6C8C  
                                __ptext67 6C2E                                  __ptext59 6C14  
                                __ptext92 6758                                  __ptext84 4254  
                                __ptext76 3D7E                                  __ptext68 6802  
                                __ptext93 6C48                                  __ptext85 6934  
                                __ptext77 10F6                                  __ptext69 6C9C  
                                __ptext94 1BB6                                  __ptext86 6B32  
                                __ptext78 5E54                                  __ptext95 46CA  
                                __ptext87 65D0                                  __ptext79 509A  
                                __ptext96 5718                                  __ptext88 6BF8  
                                __ptext97 5ECC                                  __ptext89 450A  
                                __ptext98 5394                                  __ptext99 6B9E  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 0104                 __size_of_terminal_at_hand 0060  
        __size_of_RTCC_adjust_time_toggle 003C                                  _bootload 6664  
                        __size_of_sprintf 051C                                strcpy@from 0062  
                    terminal_at_hand@hand 00CD                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 5BBE                             __size_of_main 006C  
                       ?_USBCtrlEPService 002D                               data_out@str 00AD  
                            _month_length 46CA                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0047                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 4FD6                              ??_sleep_task 006A  
                                _outPipes 00E6                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 0083                      _USBCtrlTrfOutHandler 647E  
                                int$flags 0059                              _ringbuf_init 64DA  
                                atoi@sign 0080                 _USBCtrlEPAllowStatusStage 4F12  
        settings_integrating_reset@i_1346 0097                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                                  display@i 0065  
                  ??_USBTransferOnePacket 0064                             _terminal_task 0D8C  
                           _terminal_time 09E0                    __end_of_integrate_time 6300  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0013  
                            ??_print_time 00AD                  CDCTxService@byte_to_send 006B  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002D  
                             ??_ctmu_task 0088             USBCtrlTrfTxService@byteToSend 002D  
            I2C_LCD_SetCursor@row_offsets 0067                           display_dec@edit 00AE  
                           _hardware_init 5672                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002D  
                USBStdFeatureReqHandler@p 0045                          get_quot_rem@quot 0079  
               terminal_task@command_init 012C                                _LED_output 5F42  
                       RTCC_to_caltime@tm 0062           __size_of_settings_led_indicator 024E  
           __size_of_RTCC_adjust_time_dec 02A4             __size_of_RTCC_adjust_time_inc 02A4  
                                intlevel2 0000                                 sprintf@ap 009F  
                               sprintf@cp 009D                                 sprintf@sp 0083  
                      __end_of_sleep_task 4F12                    __size_of_USBDeviceInit 0162  
                           _settings_flag 0021                             _settings_item 00FF  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6990  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         _USER_USB_CALLBACK_EVENT_HANDLER 6962                             _settings_task 2A14  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00D0                       terminal_at_hand@min 00CF  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 5986  
              __size_of_display_time_1602 02B0                  __end_of_epoch_to_caltime 2E34  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 13BE                __end_of_terminal_operation 2332  
                      __end_of_print_time 5C4A                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002E                     ?_USBCtrlTrfOutHandler 002D  
                             _ringbuf_pop 4D7C                               _ringbuf_num 4254  
                             _ringbuf_put 4BDA                               _putUSBUSART 6B32  
                     _USBCtrlTrfRxService 3B62                               _timer0_init 671E  
                      _USBWakeFromSuspend 68A4                               _timer1_init 6580  
                             _timer3_init 69E8                               _normal_task 55C4  
                          ?_terminal_task 0191                            ?_terminal_time 00D2  
                 _USBStdFeatureReqHandler 1E44                        _USBCheckCDCRequest 4A30  
                     _USBCtrlTrfTxService 45EA                           ?_integrate_time 002D  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                  __size_of_software_init 00BE                                  sprintf@c 00A8  
                                sprintf@f 0085                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002D  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 6BF8                 settings_led_indicator@str 0067  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0062  
                       caltime_to_RTCC@tm 0069                         ??_caltime_to_RTCC 006B  
                   ??_USBCtrlTrfInHandler 002E                                  strcpy@cp 0064  
                                strcpy@to 0060                     _USBAlternateInterface 018F  
                         ___lwmod@counter 0064                        terminal_at_hand@tx 00CB  
                     ?_USBCheckCDCRequest 002D                            ?_hardware_init 002D  
               i2USBTransferOnePacket@dir 002D                 i2USBTransferOnePacket@len 0030  
                     USBEnableEndpoint@ep 0038                           _endpoint_number 001E  
                  __size_of_I2C_LCD_Clear 001A              __end_of_settings_adjust_time 4882  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                ?_USBCtrlEPAllowDataStage 002D                            ?_settings_task 002D  
                          _get_string_usb 65D0                      ?_USBCtrlTrfTxService 002D  
               __end_of_ringbuf_backspace 5A14              _USBStatusStageTimeoutCounter 0017  
                   __size_of_I2C_LCD_Puts 008E                     __size_of_I2C_LCD_init 008C  
                    ??_USBWakeFromSuspend 0041                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 2FC0                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr FA7F                          ??_RTCC_from_RTCC 0088  
