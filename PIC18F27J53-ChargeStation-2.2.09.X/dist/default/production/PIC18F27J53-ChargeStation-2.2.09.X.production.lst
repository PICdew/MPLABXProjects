

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 12 20:28:31 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   156                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   157                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   158                           	dabs	1,0xD00,48,_BDT
   159                           	dabs	1,0xD38,8,_CtrlTrfData
   160                           	dabs	1,0xD30,8,_SetupPkt
   161  0000                     
   162                           	psect	idataBANK1
   163  016D40                     __pidataBANK1:
   164                           	opt stack 0
   165                           
   166                           ;initializer for I2C_LCD_SetCursor@F8685
   167  016D40  00                 	db	0
   168  016D41  40                 	db	64
   169                           
   170                           ;initializer for ST7032_cursor@F8640
   171  016D42  00                 	db	0
   172  016D43  40                 	db	64
   173                           
   174                           ;initializer for epoch_to_caltime@month_cache
   175  016D44  01                 	db	1
   176                           
   177                           	psect	mediumconst
   178  00FA50                     __pmediumconst:
   179                           	opt stack 0
   180  00FA50  00                 	db	0
   181  00FA51                     _dpowers:
   182                           	opt stack 0
   183  00FA51  0001               	dw	1
   184  00FA53  0000               	dw	0
   185  00FA55  000A               	dw	10
   186  00FA57  0000               	dw	0
   187  00FA59  0064               	dw	100
   188  00FA5B  0000               	dw	0
   189  00FA5D  03E8               	dw	1000
   190  00FA5F  0000               	dw	0
   191  00FA61  2710               	dw	10000
   192  00FA63  0000               	dw	0
   193  00FA65  86A0               	dw	34464
   194  00FA67  0001               	dw	1
   195  00FA69  4240               	dw	16960
   196  00FA6B  000F               	dw	15
   197  00FA6D  9680               	dw	38528
   198  00FA6F  0098               	dw	152
   199  00FA71  E100               	dw	57600
   200  00FA73  05F5               	dw	1525
   201  00FA75  CA00               	dw	51712
   202  00FA77  3B9A               	dw	15258
   203  00FA79                     __end_of_dpowers:
   204                           	opt stack 0
   205  00FA79                     _USB_SD_Ptr:
   206                           	opt stack 0
   207  00FA79  E2                 	db	low _sd000
   208  00FA7A  FB                 	db	high _sd000
   209  00FA7B  3C                 	db	low _sd001
   210  00FA7C  FB                 	db	high _sd001
   211  00FA7D  70                 	db	low _sd002
   212  00FA7E  FB                 	db	high _sd002
   213  00FA7F                     __end_of_USB_SD_Ptr:
   214                           	opt stack 0
   215  00FA7F                     _USB_CD_Ptr:
   216                           	opt stack 0
   217  00FA7F  F9                 	db	low _configDescriptor1
   218  00FA80  FA                 	db	high _configDescriptor1
   219  00FA81                     __end_of_USB_CD_Ptr:
   220                           	opt stack 0
   221  00FA81                     display_LCD@port_char:
   222                           	opt stack 0
   223  00FA81  4C                 	db	76
   224  00FA82  45                 	db	69
   225  00FA83  46                 	db	70
   226  00FA84  54                 	db	84
   227  00FA85  20                 	db	32
   228  00FA86  20                 	db	32
   229  00FA87  20                 	db	32
   230  00FA88  50                 	db	80
   231  00FA89  4F                 	db	79
   232  00FA8A  52                 	db	82
   233  00FA8B  54                 	db	84
   234  00FA8C  00                 	db	0
   235  00FA8D  00                 	db	0
   236  00FA8E  00                 	db	0
   237  00FA8F  00                 	db	0
   238  00FA90  00                 	db	0
   239  00FA91  00                 	db	0
   240  00FA92  00                 	db	0
   241  00FA93  00                 	db	0
   242  00FA94  00                 	db	0
   243  00FA95  43                 	db	67
   244  00FA96  45                 	db	69
   245  00FA97  4E                 	db	78
   246  00FA98  54                 	db	84
   247  00FA99  45                 	db	69
   248  00FA9A  52                 	db	82
   249  00FA9B  20                 	db	32
   250  00FA9C  50                 	db	80
   251  00FA9D  4F                 	db	79
   252  00FA9E  52                 	db	82
   253  00FA9F  54                 	db	84
   254  00FAA0  00                 	db	0
   255  00FAA1  00                 	db	0
   256  00FAA2  00                 	db	0
   257  00FAA3  00                 	db	0
   258  00FAA4  00                 	db	0
   259  00FAA5  00                 	db	0
   260  00FAA6  00                 	db	0
   261  00FAA7  00                 	db	0
   262  00FAA8  00                 	db	0
   263  00FAA9  52                 	db	82
   264  00FAAA  49                 	db	73
   265  00FAAB  47                 	db	71
   266  00FAAC  48                 	db	72
   267  00FAAD  54                 	db	84
   268  00FAAE  20                 	db	32
   269  00FAAF  20                 	db	32
   270  00FAB0  50                 	db	80
   271  00FAB1  4F                 	db	79
   272  00FAB2  52                 	db	82
   273  00FAB3  54                 	db	84
   274  00FAB4  00                 	db	0
   275  00FAB5  00                 	db	0
   276  00FAB6  00                 	db	0
   277  00FAB7  00                 	db	0
   278  00FAB8  00                 	db	0
   279  00FAB9  00                 	db	0
   280  00FABA  00                 	db	0
   281  00FABB  00                 	db	0
   282  00FABC  00                 	db	0
   283  00FABD  4C                 	db	76
   284  00FABE  65                 	db	101
   285  00FABF  66                 	db	102
   286  00FAC0  74                 	db	116
   287  00FAC1  20                 	db	32
   288  00FAC2  20                 	db	32
   289  00FAC3  20                 	db	32
   290  00FAC4  50                 	db	80
   291  00FAC5  6F                 	db	111
   292  00FAC6  72                 	db	114
   293  00FAC7  74                 	db	116
   294  00FAC8  00                 	db	0
   295  00FAC9  00                 	db	0
   296  00FACA  00                 	db	0
   297  00FACB  00                 	db	0
   298  00FACC  00                 	db	0
   299  00FACD  00                 	db	0
   300  00FACE  00                 	db	0
   301  00FACF  00                 	db	0
   302  00FAD0  00                 	db	0
   303  00FAD1  43                 	db	67
   304  00FAD2  65                 	db	101
   305  00FAD3  6E                 	db	110
   306  00FAD4  74                 	db	116
   307  00FAD5  65                 	db	101
   308  00FAD6  72                 	db	114
   309  00FAD7  20                 	db	32
   310  00FAD8  50                 	db	80
   311  00FAD9  6F                 	db	111
   312  00FADA  72                 	db	114
   313  00FADB  74                 	db	116
   314  00FADC  00                 	db	0
   315  00FADD  00                 	db	0
   316  00FADE  00                 	db	0
   317  00FADF  00                 	db	0
   318  00FAE0  00                 	db	0
   319  00FAE1  00                 	db	0
   320  00FAE2  00                 	db	0
   321  00FAE3  00                 	db	0
   322  00FAE4  00                 	db	0
   323  00FAE5  52                 	db	82
   324  00FAE6  69                 	db	105
   325  00FAE7  67                 	db	103
   326  00FAE8  68                 	db	104
   327  00FAE9  74                 	db	116
   328  00FAEA  20                 	db	32
   329  00FAEB  20                 	db	32
   330  00FAEC  50                 	db	80
   331  00FAED  6F                 	db	111
   332  00FAEE  72                 	db	114
   333  00FAEF  74                 	db	116
   334  00FAF0  00                 	db	0
   335  00FAF1  00                 	db	0
   336  00FAF2  00                 	db	0
   337  00FAF3  00                 	db	0
   338  00FAF4  00                 	db	0
   339  00FAF5  00                 	db	0
   340  00FAF6  00                 	db	0
   341  00FAF7  00                 	db	0
   342  00FAF8  00                 	db	0
   343  00FAF9                     __end_ofdisplay_LCD@port_char:
   344                           	opt stack 0
   345  00FAF9                     _configDescriptor1:
   346                           	opt stack 0
   347  00FAF9  09                 	db	9
   348  00FAFA  02                 	db	2
   349  00FAFB  43                 	db	67
   350  00FAFC  00                 	db	0
   351  00FAFD  02                 	db	2
   352  00FAFE  01                 	db	1
   353  00FAFF  00                 	db	0
   354  00FB00  C0                 	db	192
   355  00FB01  32                 	db	50
   356  00FB02  09                 	db	9
   357  00FB03  04                 	db	4
   358  00FB04  00                 	db	0
   359  00FB05  00                 	db	0
   360  00FB06  01                 	db	1
   361  00FB07  02                 	db	2
   362  00FB08  02                 	db	2
   363  00FB09  01                 	db	1
   364  00FB0A  00                 	db	0
   365  00FB0B  05                 	db	5
   366  00FB0C  24                 	db	36
   367  00FB0D  00                 	db	0
   368  00FB0E  10                 	db	16
   369  00FB0F  01                 	db	1
   370  00FB10  04                 	db	4
   371  00FB11  24                 	db	36
   372  00FB12  02                 	db	2
   373  00FB13  02                 	db	2
   374  00FB14  05                 	db	5
   375  00FB15  24                 	db	36
   376  00FB16  06                 	db	6
   377  00FB17  00                 	db	0
   378  00FB18  01                 	db	1
   379  00FB19  05                 	db	5
   380  00FB1A  24                 	db	36
   381  00FB1B  01                 	db	1
   382  00FB1C  00                 	db	0
   383  00FB1D  01                 	db	1
   384  00FB1E  07                 	db	7
   385  00FB1F  05                 	db	5
   386  00FB20  81                 	db	129
   387  00FB21  03                 	db	3
   388  00FB22  08                 	db	8
   389  00FB23  00                 	db	0
   390  00FB24  02                 	db	2
   391  00FB25  09                 	db	9
   392  00FB26  04                 	db	4
   393  00FB27  01                 	db	1
   394  00FB28  00                 	db	0
   395  00FB29  02                 	db	2
   396  00FB2A  0A                 	db	10
   397  00FB2B  00                 	db	0
   398  00FB2C  00                 	db	0
   399  00FB2D  00                 	db	0
   400  00FB2E  07                 	db	7
   401  00FB2F  05                 	db	5
   402  00FB30  02                 	db	2
   403  00FB31  02                 	db	2
   404  00FB32  40                 	db	64
   405  00FB33  00                 	db	0
   406  00FB34  00                 	db	0
   407  00FB35  07                 	db	7
   408  00FB36  05                 	db	5
   409  00FB37  82                 	db	130
   410  00FB38  02                 	db	2
   411  00FB39  40                 	db	64
   412  00FB3A  00                 	db	0
   413  00FB3B  00                 	db	0
   414  00FB3C                     __end_of_configDescriptor1:
   415                           	opt stack 0
   416  00FB3C                     _sd001:
   417                           	opt stack 0
   418  00FB3C  34                 	db	52
   419  00FB3D  03                 	db	3
   420  00FB3E  004D               	dw	77
   421  00FB40  0069               	dw	105
   422  00FB42  0063               	dw	99
   423  00FB44  0072               	dw	114
   424  00FB46  006F               	dw	111
   425  00FB48  0063               	dw	99
   426  00FB4A  0068               	dw	104
   427  00FB4C  0069               	dw	105
   428  00FB4E  0070               	dw	112
   429  00FB50  0020               	dw	32
   430  00FB52  0054               	dw	84
   431  00FB54  0065               	dw	101
   432  00FB56  0063               	dw	99
   433  00FB58  0068               	dw	104
   434  00FB5A  006E               	dw	110
   435  00FB5C  006F               	dw	111
   436  00FB5E  006C               	dw	108
   437  00FB60  006F               	dw	111
   438  00FB62  0067               	dw	103
   439  00FB64  0079               	dw	121
   440  00FB66  0020               	dw	32
   441  00FB68  0049               	dw	73
   442  00FB6A  006E               	dw	110
   443  00FB6C  0063               	dw	99
   444  00FB6E  002E               	dw	46
   445  00FB70                     __end_of_sd001:
   446                           	opt stack 0
   447  00FB70                     _sd002:
   448                           	opt stack 0
   449  00FB70  34                 	db	52
   450  00FB71  03                 	db	3
   451  00FB72  0043               	dw	67
   452  00FB74  0044               	dw	68
   453  00FB76  0043               	dw	67
   454  00FB78  0020               	dw	32
   455  00FB7A  0052               	dw	82
   456  00FB7C  0053               	dw	83
   457  00FB7E  002D               	dw	45
   458  00FB80  0032               	dw	50
   459  00FB82  0033               	dw	51
   460  00FB84  0032               	dw	50
   461  00FB86  0020               	dw	32
   462  00FB88  0045               	dw	69
   463  00FB8A  006D               	dw	109
   464  00FB8C  0075               	dw	117
   465  00FB8E  006C               	dw	108
   466  00FB90  0061               	dw	97
   467  00FB92  0074               	dw	116
   468  00FB94  0069               	dw	105
   469  00FB96  006F               	dw	111
   470  00FB98  006E               	dw	110
   471  00FB9A  0020               	dw	32
   472  00FB9C  0044               	dw	68
   473  00FB9E  0065               	dw	101
   474  00FBA0  006D               	dw	109
   475  00FBA2  006F               	dw	111
   476  00FBA4                     __end_of_sd002:
   477                           	opt stack 0
   478  00FBA4                     _weekday_3char:
   479                           	opt stack 0
   480  00FBA4  53                 	db	83
   481  00FBA5  55                 	db	85
   482  00FBA6  4E                 	db	78
   483  00FBA7  00                 	db	0
   484  00FBA8  4D                 	db	77
   485  00FBA9  4F                 	db	79
   486  00FBAA  4E                 	db	78
   487  00FBAB  00                 	db	0
   488  00FBAC  54                 	db	84
   489  00FBAD  55                 	db	85
   490  00FBAE  45                 	db	69
   491  00FBAF  00                 	db	0
   492  00FBB0  57                 	db	87
   493  00FBB1  45                 	db	69
   494  00FBB2  44                 	db	68
   495  00FBB3  00                 	db	0
   496  00FBB4  54                 	db	84
   497  00FBB5  48                 	db	72
   498  00FBB6  55                 	db	85
   499  00FBB7  00                 	db	0
   500  00FBB8  46                 	db	70
   501  00FBB9  52                 	db	82
   502  00FBBA  49                 	db	73
   503  00FBBB  00                 	db	0
   504  00FBBC  53                 	db	83
   505  00FBBD  41                 	db	65
   506  00FBBE  54                 	db	84
   507  00FBBF  00                 	db	0
   508  00FBC0                     __end_of_weekday_3char:
   509                           	opt stack 0
   510  00FBC0                     _device_dsc:
   511                           	opt stack 0
   512  00FBC0  12                 	db	18
   513  00FBC1  01                 	db	1
   514  00FBC2  0200               	dw	512
   515  00FBC4  02                 	db	2
   516  00FBC5  00                 	db	0
   517  00FBC6  00                 	db	0
   518  00FBC7  08                 	db	8
   519  00FBC8  04D8               	dw	1240
   520  00FBCA  000A               	dw	10
   521  00FBCC  0100               	dw	256
   522  00FBCE  01                 	db	1
   523  00FBCF  02                 	db	2
   524  00FBD0  00                 	db	0
   525  00FBD1  01                 	db	1
   526  00FBD2                     __end_of_device_dsc:
   527                           	opt stack 0
   528  00FBD2                     display_LCD@onoff:
   529                           	opt stack 0
   530  00FBD2  20                 	db	32
   531  00FBD3  4F                 	db	79
   532  00FBD4  46                 	db	70
   533  00FBD5  46                 	db	70
   534  00FBD6  00                 	db	0
   535  00FBD7  20                 	db	32
   536  00FBD8  4F                 	db	79
   537  00FBD9  4E                 	db	78
   538  00FBDA  20                 	db	32
   539  00FBDB  00                 	db	0
   540  00FBDC                     __end_ofdisplay_LCD@onoff:
   541                           	opt stack 0
   542  00FBDC                     data_out@p:
   543                           	opt stack 0
   544  00FBDC  4C                 	db	76
   545  00FBDD  00                 	db	0
   546  00FBDE  43                 	db	67
   547  00FBDF  00                 	db	0
   548  00FBE0  52                 	db	82
   549  00FBE1  00                 	db	0
   550  00FBE2                     __end_ofdata_out@p:
   551                           	opt stack 0
   552  00FBE2                     _sd000:
   553                           	opt stack 0
   554  00FBE2  04                 	db	4
   555  00FBE3  03                 	db	3
   556  00FBE4  0409               	dw	1033
   557  00FBE6                     __end_of_sd000:
   558                           	opt stack 0
   559  0000                     _ANCON0	set	3912
   560  0000                     _ANCON1	set	3913
   561  0000                     _PADCFG1bits	set	3900
   562  0000                     _RTCCAL	set	3902
   563  0000                     _RTCCFGbits	set	3903
   564  0000                     _RTCVALH	set	3899
   565  0000                     _RTCVALL	set	3898
   566  0000                     _T5CONbits	set	3874
   567  0000                     _UADDR	set	3896
   568  0000                     _UCFG	set	3897
   569  0000                     _UEIE	set	3895
   570  0000                     _UEP0bits	set	3878
   571  0000                     _UIE	set	3894
   572  0000                     _UIEbits	set	3894
   573  0000                     _UEP0	set	3878
   574  0000                     _UEP1	set	3879
   575  0000                     _ADRES	set	4035
   576  0000                     _ADCON0bits	set	4034
   577  0000                     _ADCON1bits	set	4033
   578  0000                     _BAUDCON1bits	set	3966
   579  0000                     _CTMUCONH	set	4019
   580  0000                     _CTMUCONHbits	set	4019
   581  0000                     _CTMUCONL	set	4018
   582  0000                     _CTMUCONLbits	set	4018
   583  0000                     _CTMUICON	set	4017
   584  0000                     _EECON2	set	4007
   585  0000                     _INTCON2bits	set	4081
   586  0000                     _INTCONbits	set	4082
   587  0000                     _IPR1bits	set	3999
   588  0000                     _IPR2bits	set	4002
   589  0000                     _IPR5bits	set	3993
   590  0000                     _OSCCONbits	set	4051
   591  0000                     _OSCTUNEbits	set	3995
   592  0000                     _PIE1bits	set	3997
   593  0000                     _PIE2bits	set	4000
   594  0000                     _PIE5bits	set	3985
   595  0000                     _PIR1bits	set	3998
   596  0000                     _PIR2bits	set	4001
   597  0000                     _PIR5bits	set	3992
   598  0000                     _RCONbits	set	4048
   599  0000                     _RCREG1	set	4015
   600  0000                     _RCSTA1bits	set	4012
   601  0000                     _SPBRG1	set	4016
   602  0000                     _SPBRGH1	set	3967
   603  0000                     _SSP1ADD	set	4040
   604  0000                     _SSP1BUF	set	4041
   605  0000                     _SSP1CON1	set	4038
   606  0000                     _SSP1CON1bits	set	4038
   607  0000                     _SSP1CON2	set	4037
   608  0000                     _SSP1CON2bits	set	4037
   609  0000                     _SSP1STAT	set	4039
   610  0000                     _SSP1STATbits	set	4039
   611  0000                     _SSPBUF	set	4041
   612  0000                     _T0CONbits	set	4053
   613  0000                     _T1CONbits	set	4045
   614  0000                     _T3CONbits	set	3961
   615  0000                     _TMR1H	set	4047
   616  0000                     _TRISA	set	3986
   617  0000                     _TRISB	set	3987
   618  0000                     _TRISC	set	3988
   619  0000                     _TXREG1	set	4014
   620  0000                     _TXSTA1bits	set	4013
   621  0000                     _UCON	set	3941
   622  0000                     _UCONbits	set	3941
   623  0000                     _UEIR	set	3939
   624  0000                     _UIR	set	3938
   625  0000                     _UIRbits	set	3938
   626  0000                     _USTAT	set	3940
   627  0000                     _BCL1IF	set	32011
   628  0000                     _LATA5	set	31821
   629  0000                     _LATA6	set	31822
   630  0000                     _LATA7	set	31823
   631  0000                     _LATB2	set	31826
   632  0000                     _LATB6	set	31830
   633  0000                     _LATB7	set	31831
   634  0000                     _LATC2	set	31834
   635  0000                     _SSP1IF	set	31987
   636  00FBE6                     STR_53:
   637  00FBE6  09                 	db	9
   638  00FBE7  2A                 	db	42
   639  00FBE8  2A                 	db	42
   640  00FBE9  2A                 	db	42
   641  00FBEA  2A                 	db	42
   642  00FBEB  2A                 	db	42
   643  00FBEC  2A                 	db	42
   644  00FBED  2A                 	db	42
   645  00FBEE  2A                 	db	42
   646  00FBEF  2A                 	db	42
   647  00FBF0  2A                 	db	42
   648  00FBF1  2A                 	db	42
   649  00FBF2  2A                 	db	42
   650  00FBF3  2A                 	db	42
   651  00FBF4  2A                 	db	42
   652  00FBF5  2A                 	db	42
   653  00FBF6  2A                 	db	42
   654  00FBF7  2A                 	db	42
   655  00FBF8  2A                 	db	42
   656  00FBF9  2A                 	db	42
   657  00FBFA  2A                 	db	42
   658  00FBFB  2A                 	db	42
   659  00FBFC  2A                 	db	42
   660  00FBFD  2A                 	db	42
   661  00FBFE  2A                 	db	42
   662  00FBFF  2A                 	db	42
   663  00FC00  2A                 	db	42
   664  00FC01  2A                 	db	42
   665  00FC02  2A                 	db	42
   666  00FC03  2A                 	db	42
   667  00FC04  0A                 	db	10
   668  00FC05  09                 	db	9
   669  00FC06  2A                 	db	42
   670  00FC07  2A                 	db	42
   671  00FC08  2A                 	db	42
   672  00FC09  2A                 	db	42
   673  00FC0A  20                 	db	32
   674  00FC0B  43                 	db	67	;'C'
   675  00FC0C  68                 	db	104	;'h'
   676  00FC0D  61                 	db	97	;'a'
   677  00FC0E  72                 	db	114	;'r'
   678  00FC0F  67                 	db	103	;'g'
   679  00FC10  65                 	db	101	;'e'
   680  00FC11  20                 	db	32
   681  00FC12  53                 	db	83	;'S'
   682  00FC13  74                 	db	116	;'t'
   683  00FC14  61                 	db	97	;'a'
   684  00FC15  74                 	db	116	;'t'
   685  00FC16  69                 	db	105	;'i'
   686  00FC17  6F                 	db	111	;'o'
   687  00FC18  6E                 	db	110	;'n'
   688  00FC19  20                 	db	32
   689  00FC1A  36                 	db	54	;'6'
   690  00FC1B  2E                 	db	46
   691  00FC1C  31                 	db	49	;'1'
   692  00FC1D  32                 	db	50	;'2'
   693  00FC1E  20                 	db	32
   694  00FC1F  2A                 	db	42
   695  00FC20  2A                 	db	42
   696  00FC21  2A                 	db	42
   697  00FC22  2A                 	db	42
   698  00FC23  0A                 	db	10
   699  00FC24  09                 	db	9
   700  00FC25  2A                 	db	42
   701  00FC26  2A                 	db	42
   702  00FC27  2A                 	db	42
   703  00FC28  2A                 	db	42
   704  00FC29  20                 	db	32
   705  00FC2A  4D                 	db	77	;'M'
   706  00FC2B  61                 	db	97	;'a'
   707  00FC2C  64                 	db	100	;'d'
   708  00FC2D  65                 	db	101	;'e'
   709  00FC2E  20                 	db	32
   710  00FC2F  62                 	db	98	;'b'
   711  00FC30  79                 	db	121	;'y'
   712  00FC31  20                 	db	32
   713  00FC32  40                 	db	64	;'@'
   714  00FC33  52                 	db	82	;'R'
   715  00FC34  79                 	db	121	;'y'
   716  00FC35  6F                 	db	111	;'o'
   717  00FC36  6B                 	db	107	;'k'
   718  00FC37  65                 	db	101	;'e'
   719  00FC38  72                 	db	114	;'r'
   720  00FC39  69                 	db	105	;'i'
   721  00FC3A  31                 	db	49	;'1'
   722  00FC3B  34                 	db	52	;'4'
   723  00FC3C  20                 	db	32
   724  00FC3D  20                 	db	32
   725  00FC3E  2A                 	db	42
   726  00FC3F  2A                 	db	42
   727  00FC40  2A                 	db	42
   728  00FC41  2A                 	db	42
   729  00FC42  0A                 	db	10
   730  00FC43  09                 	db	9
   731  00FC44  2A                 	db	42
   732  00FC45  2A                 	db	42
   733  00FC46  2A                 	db	42
   734  00FC47  2A                 	db	42
   735  00FC48  2A                 	db	42
   736  00FC49  2A                 	db	42
   737  00FC4A  2A                 	db	42
   738  00FC4B  2A                 	db	42
   739  00FC4C  2A                 	db	42
   740  00FC4D  2A                 	db	42
   741  00FC4E  2A                 	db	42
   742  00FC4F  2A                 	db	42
   743  00FC50  2A                 	db	42
   744  00FC51  2A                 	db	42
   745  00FC52  2A                 	db	42
   746  00FC53  2A                 	db	42
   747  00FC54  2A                 	db	42
   748  00FC55  2A                 	db	42
   749  00FC56  2A                 	db	42
   750  00FC57  2A                 	db	42
   751  00FC58  2A                 	db	42
   752  00FC59  2A                 	db	42
   753  00FC5A  2A                 	db	42
   754  00FC5B  2A                 	db	42
   755  00FC5C  2A                 	db	42
   756  00FC5D  2A                 	db	42
   757  00FC5E  2A                 	db	42
   758  00FC5F  2A                 	db	42
   759  00FC60  2A                 	db	42
   760  00FC61  0A                 	db	10
   761  00FC62  0A                 	db	10
   762  00FC63  09                 	db	9
   763  00FC64  70                 	db	112	;'p'
   764  00FC65  72                 	db	114	;'r'
   765  00FC66  69                 	db	105	;'i'
   766  00FC67  6E                 	db	110	;'n'
   767  00FC68  74                 	db	116	;'t'
   768  00FC69  5F                 	db	95	;'_'
   769  00FC6A  74                 	db	116	;'t'
   770  00FC6B  69                 	db	105	;'i'
   771  00FC6C  6D                 	db	109	;'m'
   772  00FC6D  65                 	db	101	;'e'
   773  00FC6E  28                 	db	40
   774  00FC6F  74                 	db	116	;'t'
   775  00FC70  29                 	db	41
   776  00FC71  0A                 	db	10
   777  00FC72  09                 	db	9
   778  00FC73  61                 	db	97	;'a'
   779  00FC74  64                 	db	100	;'d'
   780  00FC75  6A                 	db	106	;'j'
   781  00FC76  75                 	db	117	;'u'
   782  00FC77  73                 	db	115	;'s'
   783  00FC78  74                 	db	116	;'t'
   784  00FC79  5F                 	db	95	;'_'
   785  00FC7A  74                 	db	116	;'t'
   786  00FC7B  69                 	db	105	;'i'
   787  00FC7C  6D                 	db	109	;'m'
   788  00FC7D  65                 	db	101	;'e'
   789  00FC7E  28                 	db	40
   790  00FC7F  61                 	db	97	;'a'
   791  00FC80  74                 	db	116	;'t'
   792  00FC81  29                 	db	41
   793  00FC82  20                 	db	32
   794  00FC83  5B                 	db	91	;'['
   795  00FC84  68                 	db	104	;'h'
   796  00FC85  61                 	db	97	;'a'
   797  00FC86  6E                 	db	110	;'n'
   798  00FC87  64                 	db	100	;'d'
   799  00FC88  3A                 	db	58	;':'
   800  00FC89  79                 	db	121	;'y'
   801  00FC8A  2C                 	db	44
   802  00FC8B  4D                 	db	77	;'M'
   803  00FC8C  2C                 	db	44
   804  00FC8D  64                 	db	100	;'d'
   805  00FC8E  2C                 	db	44
   806  00FC8F  68                 	db	104	;'h'
   807  00FC90  2C                 	db	44
   808  00FC91  6D                 	db	109	;'m'
   809  00FC92  2C                 	db	44
   810  00FC93  73                 	db	115	;'s'
   811  00FC94  5D                 	db	93	;']'
   812  00FC95  20                 	db	32
   813  00FC96  5B                 	db	91	;'['
   814  00FC97  76                 	db	118	;'v'
   815  00FC98  61                 	db	97	;'a'
   816  00FC99  6C                 	db	108	;'l'
   817  00FC9A  75                 	db	117	;'u'
   818  00FC9B  65                 	db	101	;'e'
   819  00FC9C  28                 	db	40
   820  00FC9D  64                 	db	100	;'d'
   821  00FC9E  65                 	db	101	;'e'
   822  00FC9F  63                 	db	99	;'c'
   823  00FCA0  69                 	db	105	;'i'
   824  00FCA1  6D                 	db	109	;'m'
   825  00FCA2  61                 	db	97	;'a'
   826  00FCA3  6C                 	db	108	;'l'
   827  00FCA4  29                 	db	41
   828  00FCA5  5D                 	db	93	;']'
   829  00FCA6  0A                 	db	10
   830  00FCA7  09                 	db	9
   831  00FCA8  73                 	db	115	;'s'
   832  00FCA9  65                 	db	101	;'e'
   833  00FCAA  74                 	db	116	;'t'
   834  00FCAB  74                 	db	116	;'t'
   835  00FCAC  69                 	db	105	;'i'
   836  00FCAD  6E                 	db	110	;'n'
   837  00FCAE  67                 	db	103	;'g'
   838  00FCAF  73                 	db	115	;'s'
   839  00FCB0  28                 	db	40
   840  00FCB1  73                 	db	115	;'s'
   841  00FCB2  65                 	db	101	;'e'
   842  00FCB3  74                 	db	116	;'t'
   843  00FCB4  29                 	db	41
   844  00FCB5  20                 	db	32
   845  00FCB6  5B                 	db	91	;'['
   846  00FCB7  70                 	db	112	;'p'
   847  00FCB8  6F                 	db	111	;'o'
   848  00FCB9  72                 	db	114	;'r'
   849  00FCBA  74                 	db	116	;'t'
   850  00FCBB  3A                 	db	58	;':'
   851  00FCBC  6C                 	db	108	;'l'
   852  00FCBD  65                 	db	101	;'e'
   853  00FCBE  66                 	db	102	;'f'
   854  00FCBF  74                 	db	116	;'t'
   855  00FCC0  28                 	db	40
   856  00FCC1  6C                 	db	108	;'l'
   857  00FCC2  29                 	db	41
   858  00FCC3  2C                 	db	44
   859  00FCC4  63                 	db	99	;'c'
   860  00FCC5  65                 	db	101	;'e'
   861  00FCC6  6E                 	db	110	;'n'
   862  00FCC7  74                 	db	116	;'t'
   863  00FCC8  65                 	db	101	;'e'
   864  00FCC9  72                 	db	114	;'r'
   865  00FCCA  28                 	db	40
   866  00FCCB  63                 	db	99	;'c'
   867  00FCCC  29                 	db	41
   868  00FCCD  2C                 	db	44
   869  00FCCE  72                 	db	114	;'r'
   870  00FCCF  69                 	db	105	;'i'
   871  00FCD0  67                 	db	103	;'g'
   872  00FCD1  68                 	db	104	;'h'
   873  00FCD2  74                 	db	116	;'t'
   874  00FCD3  28                 	db	40
   875  00FCD4  72                 	db	114	;'r'
   876  00FCD5  29                 	db	41
   877  00FCD6  5D                 	db	93	;']'
   878  00FCD7  0A                 	db	10
   879  00FCD8  09                 	db	9
   880  00FCD9  09                 	db	9
   881  00FCDA  5B                 	db	91	;'['
   882  00FCDB  61                 	db	97	;'a'
   883  00FCDC  75                 	db	117	;'u'
   884  00FCDD  74                 	db	116	;'t'
   885  00FCDE  6F                 	db	111	;'o'
   886  00FCDF  5F                 	db	95	;'_'
   887  00FCE0  73                 	db	115	;'s'
   888  00FCE1  74                 	db	116	;'t'
   889  00FCE2  6F                 	db	111	;'o'
   890  00FCE3  70                 	db	112	;'p'
   891  00FCE4  28                 	db	40
   892  00FCE5  61                 	db	97	;'a'
   893  00FCE6  73                 	db	115	;'s'
   894  00FCE7  29                 	db	41
   895  00FCE8  2C                 	db	44
   896  00FCE9  61                 	db	97	;'a'
   897  00FCEA  6C                 	db	108	;'l'
   898  00FCEB  77                 	db	119	;'w'
   899  00FCEC  61                 	db	97	;'a'
   900  00FCED  79                 	db	121	;'y'
   901  00FCEE  73                 	db	115	;'s'
   902  00FCEF  5F                 	db	95	;'_'
   903  00FCF0  6F                 	db	111	;'o'
   904  00FCF1  6E                 	db	110	;'n'
   905  00FCF2  28                 	db	40
   906  00FCF3  61                 	db	97	;'a'
   907  00FCF4  6F                 	db	111	;'o'
   908  00FCF5  29                 	db	41
   909  00FCF6  2C                 	db	44
   910  00FCF7  69                 	db	105	;'i'
   911  00FCF8  6E                 	db	110	;'n'
   912  00FCF9  74                 	db	116	;'t'
   913  00FCFA  65                 	db	101	;'e'
   914  00FCFB  67                 	db	103	;'g'
   915  00FCFC  72                 	db	114	;'r'
   916  00FCFD  61                 	db	97	;'a'
   917  00FCFE  74                 	db	116	;'t'
   918  00FCFF  69                 	db	105	;'i'
   919  00FD00  6E                 	db	110	;'n'
   920  00FD01  67                 	db	103	;'g'
   921  00FD02  5F                 	db	95	;'_'
   922  00FD03  72                 	db	114	;'r'
   923  00FD04  65                 	db	101	;'e'
   924  00FD05  73                 	db	115	;'s'
   925  00FD06  65                 	db	101	;'e'
   926  00FD07  74                 	db	116	;'t'
   927  00FD08  28                 	db	40
   928  00FD09  69                 	db	105	;'i'
   929  00FD0A  72                 	db	114	;'r'
   930  00FD0B  29                 	db	41
   931  00FD0C  5D                 	db	93	;']'
   932  00FD0D  0A                 	db	10
   933  00FD0E  09                 	db	9
   934  00FD0F  6F                 	db	111	;'o'
   935  00FD10  75                 	db	117	;'u'
   936  00FD11  74                 	db	116	;'t'
   937  00FD12  70                 	db	112	;'p'
   938  00FD13  75                 	db	117	;'u'
   939  00FD14  74                 	db	116	;'t'
   940  00FD15  5F                 	db	95	;'_'
   941  00FD16  64                 	db	100	;'d'
   942  00FD17  61                 	db	97	;'a'
   943  00FD18  74                 	db	116	;'t'
   944  00FD19  61                 	db	97	;'a'
   945  00FD1A  28                 	db	40
   946  00FD1B  6F                 	db	111	;'o'
   947  00FD1C  64                 	db	100	;'d'
   948  00FD1D  29                 	db	41
   949  00FD1E  20                 	db	32
   950  00FD1F  3C                 	db	60	;'<'
   951  00FD20  2D                 	db	45
   952  00FD21  20                 	db	32
   953  00FD22  73                 	db	115	;'s'
   954  00FD23  74                 	db	116	;'t'
   955  00FD24  6F                 	db	111	;'o'
   956  00FD25  70                 	db	112	;'p'
   957  00FD26  70                 	db	112	;'p'
   958  00FD27  65                 	db	101	;'e'
   959  00FD28  64                 	db	100	;'d'
   960  00FD29  20                 	db	32
   961  00FD2A  62                 	db	98	;'b'
   962  00FD2B  79                 	db	121	;'y'
   963  00FD2C  20                 	db	32
   964  00FD2D  70                 	db	112	;'p'
   965  00FD2E  72                 	db	114	;'r'
   966  00FD2F  65                 	db	101	;'e'
   967  00FD30  73                 	db	115	;'s'
   968  00FD31  73                 	db	115	;'s'
   969  00FD32  69                 	db	105	;'i'
   970  00FD33  6E                 	db	110	;'n'
   971  00FD34  67                 	db	103	;'g'
   972  00FD35  20                 	db	32
   973  00FD36  74                 	db	116	;'t'
   974  00FD37  68                 	db	104	;'h'
   975  00FD38  65                 	db	101	;'e'
   976  00FD39  20                 	db	32
   977  00FD3A  45                 	db	69	;'E'
   978  00FD3B  6E                 	db	110	;'n'
   979  00FD3C  74                 	db	116	;'t'
   980  00FD3D  65                 	db	101	;'e'
   981  00FD3E  72                 	db	114	;'r'
   982  00FD3F  20                 	db	32
   983  00FD40  6B                 	db	107	;'k'
   984  00FD41  65                 	db	101	;'e'
   985  00FD42  79                 	db	121	;'y'
   986  00FD43  0A                 	db	10
   987  00FD44  09                 	db	9
   988  00FD45  74                 	db	116	;'t'
   989  00FD46  6F                 	db	111	;'o'
   990  00FD47  75                 	db	117	;'u'
   991  00FD48  63                 	db	99	;'c'
   992  00FD49  68                 	db	104	;'h'
   993  00FD4A  20                 	db	32
   994  00FD4B  5B                 	db	91	;'['
   995  00FD4C  72                 	db	114	;'r'
   996  00FD4D  65                 	db	101	;'e'
   997  00FD4E  73                 	db	115	;'s'
   998  00FD4F  65                 	db	101	;'e'
   999  00FD50  74                 	db	116	;'t'
  1000  00FD51  28                 	db	40
  1001  00FD52  72                 	db	114	;'r'
  1002  00FD53  29                 	db	41
  1003  00FD54  2C                 	db	44
  1004  00FD55  69                 	db	105	;'i'
  1005  00FD56  6E                 	db	110	;'n'
  1006  00FD57  69                 	db	105	;'i'
  1007  00FD58  74                 	db	116	;'t'
  1008  00FD59  69                 	db	105	;'i'
  1009  00FD5A  61                 	db	97	;'a'
  1010  00FD5B  6C                 	db	108	;'l'
  1011  00FD5C  69                 	db	105	;'i'
  1012  00FD5D  7A                 	db	122	;'z'
  1013  00FD5E  65                 	db	101	;'e'
  1014  00FD5F  28                 	db	40
  1015  00FD60  69                 	db	105	;'i'
  1016  00FD61  6E                 	db	110	;'n'
  1017  00FD62  69                 	db	105	;'i'
  1018  00FD63  74                 	db	116	;'t'
  1019  00FD64  29                 	db	41
  1020  00FD65  5D                 	db	93	;']'
  1021  00FD66  20                 	db	32
  1022  00FD67  5B                 	db	91	;'['
  1023  00FD68  76                 	db	118	;'v'
  1024  00FD69  61                 	db	97	;'a'
  1025  00FD6A  6C                 	db	108	;'l'
  1026  00FD6B  75                 	db	117	;'u'
  1027  00FD6C  65                 	db	101	;'e'
  1028  00FD6D  28                 	db	40
  1029  00FD6E  25                 	db	37
  1030  00FD6F  29                 	db	41
  1031  00FD70  5D                 	db	93	;']'
  1032  00FD71  0A                 	db	10
  1033  00FD72  0A                 	db	10
  1034  00FD73  09                 	db	9
  1035  00FD74  66                 	db	102	;'f'
  1036  00FD75  6F                 	db	111	;'o'
  1037  00FD76  72                 	db	114	;'r'
  1038  00FD77  20                 	db	32
  1039  00FD78  44                 	db	68	;'D'
  1040  00FD79  65                 	db	101	;'e'
  1041  00FD7A  76                 	db	118	;'v'
  1042  00FD7B  65                 	db	101	;'e'
  1043  00FD7C  6C                 	db	108	;'l'
  1044  00FD7D  6F                 	db	111	;'o'
  1045  00FD7E  70                 	db	112	;'p'
  1046  00FD7F  70                 	db	112	;'p'
  1047  00FD80  65                 	db	101	;'e'
  1048  00FD81  72                 	db	114	;'r'
  1049  00FD82  0A                 	db	10
  1050  00FD83  09                 	db	9
  1051  00FD84  52                 	db	82	;'R'
  1052  00FD85  45                 	db	69	;'E'
  1053  00FD86  53                 	db	83	;'S'
  1054  00FD87  45                 	db	69	;'E'
  1055  00FD88  54                 	db	84	;'T'
  1056  00FD89  28                 	db	40
  1057  00FD8A  29                 	db	41
  1058  00FD8B  3B                 	db	59	;';'
  1059  00FD8C  0A                 	db	10
  1060  00FD8D  09                 	db	9
  1061  00FD8E  62                 	db	98	;'b'
  1062  00FD8F  6F                 	db	111	;'o'
  1063  00FD90  6F                 	db	111	;'o'
  1064  00FD91  74                 	db	116	;'t'
  1065  00FD92  6C                 	db	108	;'l'
  1066  00FD93  6F                 	db	111	;'o'
  1067  00FD94  61                 	db	97	;'a'
  1068  00FD95  64                 	db	100	;'d'
  1069  00FD96  0A                 	db	10
  1070  00FD97  00                 	db	0
  1071  00FD98                     STR_23:
  1072  00FD98  09                 	db	9
  1073  00FD99  32                 	db	50	;'2'
  1074  00FD9A  30                 	db	48	;'0'
  1075  00FD9B  25                 	db	37
  1076  00FD9C  30                 	db	48	;'0'
  1077  00FD9D  32                 	db	50	;'2'
  1078  00FD9E  64                 	db	100	;'d'
  1079  00FD9F  2F                 	db	47
  1080  00FDA0  25                 	db	37
  1081  00FDA1  30                 	db	48	;'0'
  1082  00FDA2  32                 	db	50	;'2'
  1083  00FDA3  64                 	db	100	;'d'
  1084  00FDA4  2F                 	db	47
  1085  00FDA5  25                 	db	37
  1086  00FDA6  30                 	db	48	;'0'
  1087  00FDA7  32                 	db	50	;'2'
  1088  00FDA8  64                 	db	100	;'d'
  1089  00FDA9  28                 	db	40
  1090  00FDAA  25                 	db	37
  1091  00FDAB  73                 	db	115	;'s'
  1092  00FDAC  29                 	db	41
  1093  00FDAD  25                 	db	37
  1094  00FDAE  30                 	db	48	;'0'
  1095  00FDAF  32                 	db	50	;'2'
  1096  00FDB0  64                 	db	100	;'d'
  1097  00FDB1  3A                 	db	58	;':'
  1098  00FDB2  25                 	db	37
  1099  00FDB3  30                 	db	48	;'0'
  1100  00FDB4  32                 	db	50	;'2'
  1101  00FDB5  64                 	db	100	;'d'
  1102  00FDB6  2D                 	db	45
  1103  00FDB7  25                 	db	37
  1104  00FDB8  30                 	db	48	;'0'
  1105  00FDB9  32                 	db	50	;'2'
  1106  00FDBA  64                 	db	100	;'d'
  1107  00FDBB  0A                 	db	10
  1108  00FDBC  00                 	db	0
  1109  00FDBD                     STR_63:
  1110  00FDBD  09                 	db	9
  1111  00FDBE  69                 	db	105	;'i'
  1112  00FDBF  6E                 	db	110	;'n'
  1113  00FDC0  76                 	db	118	;'v'
  1114  00FDC1  61                 	db	97	;'a'
  1115  00FDC2  6C                 	db	108	;'l'
  1116  00FDC3  69                 	db	105	;'i'
  1117  00FDC4  64                 	db	100	;'d'
  1118  00FDC5  20                 	db	32
  1119  00FDC6  64                 	db	100	;'d'
  1120  00FDC7  61                 	db	97	;'a'
  1121  00FDC8  74                 	db	116	;'t'
  1122  00FDC9  61                 	db	97	;'a'
  1123  00FDCA  0A                 	db	10
  1124  00FDCB  09                 	db	9
  1125  00FDCC  69                 	db	105	;'i'
  1126  00FDCD  6E                 	db	110	;'n'
  1127  00FDCE  69                 	db	105	;'i'
  1128  00FDCF  74                 	db	116	;'t'
  1129  00FDD0  69                 	db	105	;'i'
  1130  00FDD1  61                 	db	97	;'a'
  1131  00FDD2  6C                 	db	108	;'l'
  1132  00FDD3  69                 	db	105	;'i'
  1133  00FDD4  7A                 	db	122	;'z'
  1134  00FDD5  69                 	db	105	;'i'
  1135  00FDD6  6E                 	db	110	;'n'
  1136  00FDD7  67                 	db	103	;'g'
  1137  00FDD8  20                 	db	32
  1138  00FDD9  66                 	db	102	;'f'
  1139  00FDDA  61                 	db	97	;'a'
  1140  00FDDB  69                 	db	105	;'i'
  1141  00FDDC  6C                 	db	108	;'l'
  1142  00FDDD  65                 	db	101	;'e'
  1143  00FDDE  64                 	db	100	;'d'
  1144  00FDDF  0A                 	db	10
  1145  00FDE0  00                 	db	0
  1146  00FDE1                     STR_67:
  1147  00FDE1  32                 	db	50	;'2'
  1148  00FDE2  30                 	db	48	;'0'
  1149  00FDE3  25                 	db	37
  1150  00FDE4  30                 	db	48	;'0'
  1151  00FDE5  32                 	db	50	;'2'
  1152  00FDE6  64                 	db	100	;'d'
  1153  00FDE7  2F                 	db	47
  1154  00FDE8  25                 	db	37
  1155  00FDE9  30                 	db	48	;'0'
  1156  00FDEA  32                 	db	50	;'2'
  1157  00FDEB  64                 	db	100	;'d'
  1158  00FDEC  2F                 	db	47
  1159  00FDED  25                 	db	37
  1160  00FDEE  30                 	db	48	;'0'
  1161  00FDEF  32                 	db	50	;'2'
  1162  00FDF0  64                 	db	100	;'d'
  1163  00FDF1  2D                 	db	45
  1164  00FDF2  25                 	db	37
  1165  00FDF3  30                 	db	48	;'0'
  1166  00FDF4  32                 	db	50	;'2'
  1167  00FDF5  64                 	db	100	;'d'
  1168  00FDF6  3A                 	db	58	;':'
  1169  00FDF7  25                 	db	37
  1170  00FDF8  30                 	db	48	;'0'
  1171  00FDF9  32                 	db	50	;'2'
  1172  00FDFA  64                 	db	100	;'d'
  1173  00FDFB  2D                 	db	45
  1174  00FDFC  25                 	db	37
  1175  00FDFD  30                 	db	48	;'0'
  1176  00FDFE  32                 	db	50	;'2'
  1177  00FDFF  64                 	db	100	;'d'
  1178  00FE00  00                 	db	0
  1179  00FE01                     STR_73:
  1180  00FE01  25                 	db	37
  1181  00FE02  30                 	db	48	;'0'
  1182  00FE03  32                 	db	50	;'2'
  1183  00FE04  6C                 	db	108	;'l'
  1184  00FE05  64                 	db	100	;'d'
  1185  00FE06  64                 	db	100	;'d'
  1186  00FE07  20                 	db	32
  1187  00FE08  25                 	db	37
  1188  00FE09  30                 	db	48	;'0'
  1189  00FE0A  32                 	db	50	;'2'
  1190  00FE0B  6C                 	db	108	;'l'
  1191  00FE0C  64                 	db	100	;'d'
  1192  00FE0D  68                 	db	104	;'h'
  1193  00FE0E  20                 	db	32
  1194  00FE0F  25                 	db	37
  1195  00FE10  30                 	db	48	;'0'
  1196  00FE11  32                 	db	50	;'2'
  1197  00FE12  6C                 	db	108	;'l'
  1198  00FE13  64                 	db	100	;'d'
  1199  00FE14  6D                 	db	109	;'m'
  1200  00FE15  20                 	db	32
  1201  00FE16  25                 	db	37
  1202  00FE17  30                 	db	48	;'0'
  1203  00FE18  32                 	db	50	;'2'
  1204  00FE19  6C                 	db	108	;'l'
  1205  00FE1A  64                 	db	100	;'d'
  1206  00FE1B  73                 	db	115	;'s'
  1207  00FE1C  00                 	db	0
  1208  00FE1D                     STR_62:
  1209  00FE1D  09                 	db	9
  1210  00FE1E  69                 	db	105	;'i'
  1211  00FE1F  6E                 	db	110	;'n'
  1212  00FE20  69                 	db	105	;'i'
  1213  00FE21  74                 	db	116	;'t'
  1214  00FE22  69                 	db	105	;'i'
  1215  00FE23  61                 	db	97	;'a'
  1216  00FE24  6C                 	db	108	;'l'
  1217  00FE25  69                 	db	105	;'i'
  1218  00FE26  7A                 	db	122	;'z'
  1219  00FE27  69                 	db	105	;'i'
  1220  00FE28  6E                 	db	110	;'n'
  1221  00FE29  67                 	db	103	;'g'
  1222  00FE2A  20                 	db	32
  1223  00FE2B  63                 	db	99	;'c'
  1224  00FE2C  6F                 	db	111	;'o'
  1225  00FE2D  6D                 	db	109	;'m'
  1226  00FE2E  70                 	db	112	;'p'
  1227  00FE2F  6C                 	db	108	;'l'
  1228  00FE30  65                 	db	101	;'e'
  1229  00FE31  74                 	db	116	;'t'
  1230  00FE32  65                 	db	101	;'e'
  1231  00FE33  0A                 	db	10
  1232  00FE34  00                 	db	0
  1233  00FE35                     STR_68:
  1234  00FE35  20                 	db	32
  1235  00FE36  25                 	db	37
  1236  00FE37  73                 	db	115	;'s'
  1237  00FE38  3A                 	db	58	;':'
  1238  00FE39  25                 	db	37
  1239  00FE3A  30                 	db	48	;'0'
  1240  00FE3B  31                 	db	49	;'1'
  1241  00FE3C  64                 	db	100	;'d'
  1242  00FE3D  2E                 	db	46
  1243  00FE3E  25                 	db	37
  1244  00FE3F  30                 	db	48	;'0'
  1245  00FE40  33                 	db	51	;'3'
  1246  00FE41  64                 	db	100	;'d'
  1247  00FE42  41                 	db	65	;'A'
  1248  00FE43  2C                 	db	44
  1249  00FE44  25                 	db	37
  1250  00FE45  30                 	db	48	;'0'
  1251  00FE46  36                 	db	54	;'6'
  1252  00FE47  6C                 	db	108	;'l'
  1253  00FE48  64                 	db	100	;'d'
  1254  00FE49  6D                 	db	109	;'m'
  1255  00FE4A  41                 	db	65	;'A'
  1256  00FE4B  68                 	db	104	;'h'
  1257  00FE4C  00                 	db	0
  1258  00FE4D                     STR_66:
  1259  00FE4D  09                 	db	9
  1260  00FE4E  73                 	db	115	;'s'
  1261  00FE4F  65                 	db	101	;'e'
  1262  00FE50  74                 	db	116	;'t'
  1263  00FE51  69                 	db	105	;'i'
  1264  00FE52  6E                 	db	110	;'n'
  1265  00FE53  67                 	db	103	;'g'
  1266  00FE54  20                 	db	32
  1267  00FE55  63                 	db	99	;'c'
  1268  00FE56  6F                 	db	111	;'o'
  1269  00FE57  6D                 	db	109	;'m'
  1270  00FE58  70                 	db	112	;'p'
  1271  00FE59  6C                 	db	108	;'l'
  1272  00FE5A  65                 	db	101	;'e'
  1273  00FE5B  74                 	db	116	;'t'
  1274  00FE5C  65                 	db	101	;'e'
  1275  00FE5D  0A                 	db	10
  1276  00FE5E  00                 	db	0
  1277  00FE5F                     STR_105:
  1278  00FE5F  3C                 	db	60	;'<'
  1279  00FE60  2D                 	db	45
  1280  00FE61  20                 	db	32
  1281  00FE62  20                 	db	32
  1282  00FE63  20                 	db	32
  1283  00FE64  53                 	db	83	;'S'
  1284  00FE65  65                 	db	101	;'e'
  1285  00FE66  6C                 	db	108	;'l'
  1286  00FE67  65                 	db	101	;'e'
  1287  00FE68  63                 	db	99	;'c'
  1288  00FE69  74                 	db	116	;'t'
  1289  00FE6A  20                 	db	32
  1290  00FE6B  20                 	db	32
  1291  00FE6C  20                 	db	32
  1292  00FE6D  2D                 	db	45
  1293  00FE6E  3E                 	db	62	;'>'
  1294  00FE6F  00                 	db	0
  1295  00FE70                     STR_111:
  1296  00FE70  54                 	db	84	;'T'
  1297  00FE71  6F                 	db	111	;'o'
  1298  00FE72  67                 	db	103	;'g'
  1299  00FE73  67                 	db	103	;'g'
  1300  00FE74  6C                 	db	108	;'l'
  1301  00FE75  65                 	db	101	;'e'
  1302  00FE76  20                 	db	32
  1303  00FE77  41                 	db	65	;'A'
  1304  00FE78  75                 	db	117	;'u'
  1305  00FE79  74                 	db	116	;'t'
  1306  00FE7A  6F                 	db	111	;'o'
  1307  00FE7B  20                 	db	32
  1308  00FE7C  53                 	db	83	;'S'
  1309  00FE7D  74                 	db	116	;'t'
  1310  00FE7E  6F                 	db	111	;'o'
  1311  00FE7F  70                 	db	112	;'p'
  1312  00FE80  00                 	db	0
  1313  00FE81                     STR_82:
  1314  00FE81  4C                 	db	76	;'L'
  1315  00FE82  65                 	db	101	;'e'
  1316  00FE83  66                 	db	102	;'f'
  1317  00FE84  74                 	db	116	;'t'
  1318  00FE85  20                 	db	32
  1319  00FE86  43                 	db	67	;'C'
  1320  00FE87  65                 	db	101	;'e'
  1321  00FE88  6E                 	db	110	;'n'
  1322  00FE89  74                 	db	116	;'t'
  1323  00FE8A  72                 	db	114	;'r'
  1324  00FE8B  20                 	db	32
  1325  00FE8C  52                 	db	82	;'R'
  1326  00FE8D  69                 	db	105	;'i'
  1327  00FE8E  67                 	db	103	;'g'
  1328  00FE8F  68                 	db	104	;'h'
  1329  00FE90  74                 	db	116	;'t'
  1330  00FE91  00                 	db	0
  1331  00FE92                     STR_45:
  1332  00FE92  43                 	db	67	;'C'
  1333  00FE93  68                 	db	104	;'h'
  1334  00FE94  61                 	db	97	;'a'
  1335  00FE95  72                 	db	114	;'r'
  1336  00FE96  67                 	db	103	;'g'
  1337  00FE97  65                 	db	101	;'e'
  1338  00FE98  20                 	db	32
  1339  00FE99  53                 	db	83	;'S'
  1340  00FE9A  74                 	db	116	;'t'
  1341  00FE9B  61                 	db	97	;'a'
  1342  00FE9C  74                 	db	116	;'t'
  1343  00FE9D  69                 	db	105	;'i'
  1344  00FE9E  6F                 	db	111	;'o'
  1345  00FE9F  6E                 	db	110	;'n'
  1346  00FEA0  20                 	db	32
  1347  00FEA1  36                 	db	54	;'6'
  1348  00FEA2  00                 	db	0
  1349  00FEA3                     STR_109:
  1350  00FEA3  41                 	db	65	;'A'
  1351  00FEA4  64                 	db	100	;'d'
  1352  00FEA5  6A                 	db	106	;'j'
  1353  00FEA6  75                 	db	117	;'u'
  1354  00FEA7  73                 	db	115	;'s'
  1355  00FEA8  74                 	db	116	;'t'
  1356  00FEA9  20                 	db	32
  1357  00FEAA  74                 	db	116	;'t'
  1358  00FEAB  68                 	db	104	;'h'
  1359  00FEAC  65                 	db	101	;'e'
  1360  00FEAD  20                 	db	32
  1361  00FEAE  54                 	db	84	;'T'
  1362  00FEAF  69                 	db	105	;'i'
  1363  00FEB0  6D                 	db	109	;'m'
  1364  00FEB1  65                 	db	101	;'e'
  1365  00FEB2  00                 	db	0
  1366  00FEB3                     STR_113:
  1367  00FEB3  54                 	db	84	;'T'
  1368  00FEB4  6F                 	db	111	;'o'
  1369  00FEB5  67                 	db	103	;'g'
  1370  00FEB6  67                 	db	103	;'g'
  1371  00FEB7  6C                 	db	108	;'l'
  1372  00FEB8  65                 	db	101	;'e'
  1373  00FEB9  20                 	db	32
  1374  00FEBA  4C                 	db	76	;'L'
  1375  00FEBB  45                 	db	69	;'E'
  1376  00FEBC  44                 	db	68	;'D'
  1377  00FEBD  20                 	db	32
  1378  00FEBE  4C                 	db	76	;'L'
  1379  00FEBF  61                 	db	97	;'a'
  1380  00FEC0  6D                 	db	109	;'m'
  1381  00FEC1  70                 	db	112	;'p'
  1382  00FEC2  00                 	db	0
  1383  00FEC3                     STR_50:
  1384  00FEC3  42                 	db	66	;'B'
  1385  00FEC4  6F                 	db	111	;'o'
  1386  00FEC5  6F                 	db	111	;'o'
  1387  00FEC6  74                 	db	116	;'t'
  1388  00FEC7  6C                 	db	108	;'l'
  1389  00FEC8  6F                 	db	111	;'o'
  1390  00FEC9  61                 	db	97	;'a'
  1391  00FECA  64                 	db	100	;'d'
  1392  00FECB  65                 	db	101	;'e'
  1393  00FECC  72                 	db	114	;'r'
  1394  00FECD  20                 	db	32
  1395  00FECE  6D                 	db	109	;'m'
  1396  00FECF  6F                 	db	111	;'o'
  1397  00FED0  64                 	db	100	;'d'
  1398  00FED1  65                 	db	101	;'e'
  1399  00FED2  00                 	db	0
  1400  00FED3                     STR_115:
  1401  00FED3  49                 	db	73	;'I'
  1402  00FED4  6E                 	db	110	;'n'
  1403  00FED5  74                 	db	116	;'t'
  1404  00FED6  65                 	db	101	;'e'
  1405  00FED7  67                 	db	103	;'g'
  1406  00FED8  72                 	db	114	;'r'
  1407  00FED9  61                 	db	97	;'a'
  1408  00FEDA  74                 	db	116	;'t'
  1409  00FEDB  20                 	db	32
  1410  00FEDC  52                 	db	82	;'R'
  1411  00FEDD  65                 	db	101	;'e'
  1412  00FEDE  73                 	db	115	;'s'
  1413  00FEDF  65                 	db	101	;'e'
  1414  00FEE0  74                 	db	116	;'t'
  1415  00FEE1  00                 	db	0
  1416  00FEE2                     STR_47:
  1417  00FEE2  43                 	db	67	;'C'
  1418  00FEE3  68                 	db	104	;'h'
  1419  00FEE4  61                 	db	97	;'a'
  1420  00FEE5  72                 	db	114	;'r'
  1421  00FEE6  67                 	db	103	;'g'
  1422  00FEE7  65                 	db	101	;'e'
  1423  00FEE8  20                 	db	32
  1424  00FEE9  53                 	db	83	;'S'
  1425  00FEEA  74                 	db	116	;'t'
  1426  00FEEB  61                 	db	97	;'a'
  1427  00FEEC  74                 	db	116	;'t'
  1428  00FEED  69                 	db	105	;'i'
  1429  00FEEE  6F                 	db	111	;'o'
  1430  00FEEF  6E                 	db	110	;'n'
  1431  00FEF0  00                 	db	0
  1432  00FEF1                     STR_48:
  1433  00FEF1  57                 	db	87	;'W'
  1434  00FEF2  65                 	db	101	;'e'
  1435  00FEF3  6C                 	db	108	;'l'
  1436  00FEF4  63                 	db	99	;'c'
  1437  00FEF5  6F                 	db	111	;'o'
  1438  00FEF6  6D                 	db	109	;'m'
  1439  00FEF7  65                 	db	101	;'e'
  1440  00FEF8  20                 	db	32
  1441  00FEF9  62                 	db	98	;'b'
  1442  00FEFA  61                 	db	97	;'a'
  1443  00FEFB  63                 	db	99	;'c'
  1444  00FEFC  6B                 	db	107	;'k'
  1445  00FEFD  21                 	db	33
  1446  00FEFE  00                 	db	0
  1447  00FEFF                     STR_75:
  1448  00FEFF  4D                 	db	77	;'M'
  1449  00FF00  61                 	db	97	;'a'
  1450  00FF01  64                 	db	100	;'d'
  1451  00FF02  65                 	db	101	;'e'
  1452  00FF03  20                 	db	32
  1453  00FF04  62                 	db	98	;'b'
  1454  00FF05  79                 	db	121	;'y'
  1455  00FF06  20                 	db	32
  1456  00FF07  4B                 	db	75	;'K'
  1457  00FF08  45                 	db	69	;'E'
  1458  00FF09  52                 	db	82	;'R'
  1459  00FF0A  49                 	db	73	;'I'
  1460  00FF0B  00                 	db	0
  1461  00FF0C                     STR_46:
  1462  00FF0C  53                 	db	83	;'S'
  1463  00FF0D  4C                 	db	76	;'L'
  1464  00FF0E  45                 	db	69	;'E'
  1465  00FF0F  45                 	db	69	;'E'
  1466  00FF10  50                 	db	80	;'P'
  1467  00FF11  49                 	db	73	;'I'
  1468  00FF12  4E                 	db	78	;'N'
  1469  00FF13  47                 	db	71	;'G'
  1470  00FF14  20                 	db	32
  1471  00FF15  4E                 	db	78	;'N'
  1472  00FF16  4F                 	db	79	;'O'
  1473  00FF17  57                 	db	87	;'W'
  1474  00FF18  00                 	db	0
  1475  00FF19                     STR_49:
  1476  00FF19  50                 	db	80	;'P'
  1477  00FF1A  49                 	db	73	;'I'
  1478  00FF1B  43                 	db	67	;'C'
  1479  00FF1C  31                 	db	49	;'1'
  1480  00FF1D  38                 	db	56	;'8'
  1481  00FF1E  46                 	db	70	;'F'
  1482  00FF1F  32                 	db	50	;'2'
  1483  00FF20  37                 	db	55	;'7'
  1484  00FF21  4A                 	db	74	;'J'
  1485  00FF22  35                 	db	53	;'5'
  1486  00FF23  33                 	db	51	;'3'
  1487  00FF24  00                 	db	0
  1488  00FF25                     STR_57:
  1489  00FF25  6F                 	db	111	;'o'
  1490  00FF26  75                 	db	117	;'u'
  1491  00FF27  74                 	db	116	;'t'
  1492  00FF28  70                 	db	112	;'p'
  1493  00FF29  75                 	db	117	;'u'
  1494  00FF2A  74                 	db	116	;'t'
  1495  00FF2B  5F                 	db	95	;'_'
  1496  00FF2C  64                 	db	100	;'d'
  1497  00FF2D  61                 	db	97	;'a'
  1498  00FF2E  74                 	db	116	;'t'
  1499  00FF2F  61                 	db	97	;'a'
  1500  00FF30  00                 	db	0
  1501  00FF31                     STR_28:
  1502  00FF31  61                 	db	97	;'a'
  1503  00FF32  64                 	db	100	;'d'
  1504  00FF33  6A                 	db	106	;'j'
  1505  00FF34  75                 	db	117	;'u'
  1506  00FF35  73                 	db	115	;'s'
  1507  00FF36  74                 	db	116	;'t'
  1508  00FF37  5F                 	db	95	;'_'
  1509  00FF38  74                 	db	116	;'t'
  1510  00FF39  69                 	db	105	;'i'
  1511  00FF3A  6D                 	db	109	;'m'
  1512  00FF3B  65                 	db	101	;'e'
  1513  00FF3C  00                 	db	0
  1514  00FF3D                     STR_71:
  1515  00FF3D  25                 	db	37
  1516  00FF3E  30                 	db	48	;'0'
  1517  00FF3F  31                 	db	49	;'1'
  1518  00FF40  64                 	db	100	;'d'
  1519  00FF41  2E                 	db	46
  1520  00FF42  25                 	db	37
  1521  00FF43  30                 	db	48	;'0'
  1522  00FF44  33                 	db	51	;'3'
  1523  00FF45  64                 	db	100	;'d'
  1524  00FF46  41                 	db	65	;'A'
  1525  00FF47  00                 	db	0
  1526  00FF48                     STR_60:
  1527  00FF48  69                 	db	105	;'i'
  1528  00FF49  6E                 	db	110	;'n'
  1529  00FF4A  69                 	db	105	;'i'
  1530  00FF4B  74                 	db	116	;'t'
  1531  00FF4C  69                 	db	105	;'i'
  1532  00FF4D  61                 	db	97	;'a'
  1533  00FF4E  6C                 	db	108	;'l'
  1534  00FF4F  69                 	db	105	;'i'
  1535  00FF50  7A                 	db	122	;'z'
  1536  00FF51  65                 	db	101	;'e'
  1537  00FF52  00                 	db	0
  1538  00FF53                     STR_25:
  1539  00FF53  70                 	db	112	;'p'
  1540  00FF54  72                 	db	114	;'r'
  1541  00FF55  69                 	db	105	;'i'
  1542  00FF56  6E                 	db	110	;'n'
  1543  00FF57  74                 	db	116	;'t'
  1544  00FF58  5F                 	db	95	;'_'
  1545  00FF59  74                 	db	116	;'t'
  1546  00FF5A  69                 	db	105	;'i'
  1547  00FF5B  6D                 	db	109	;'m'
  1548  00FF5C  65                 	db	101	;'e'
  1549  00FF5D  00                 	db	0
  1550  00FF5E                     STR_104:
  1551  00FF5E  53                 	db	83	;'S'
  1552  00FF5F  65                 	db	101	;'e'
  1553  00FF60  74                 	db	116	;'t'
  1554  00FF61  74                 	db	116	;'t'
  1555  00FF62  69                 	db	105	;'i'
  1556  00FF63  6E                 	db	110	;'n'
  1557  00FF64  67                 	db	103	;'g'
  1558  00FF65  73                 	db	115	;'s'
  1559  00FF66  00                 	db	0
  1560  00FF67                     STR_54:
  1561  00FF67  52                 	db	82	;'R'
  1562  00FF68  45                 	db	69	;'E'
  1563  00FF69  53                 	db	83	;'S'
  1564  00FF6A  45                 	db	69	;'E'
  1565  00FF6B  54                 	db	84	;'T'
  1566  00FF6C  28                 	db	40
  1567  00FF6D  29                 	db	41
  1568  00FF6E  3B                 	db	59	;';'
  1569  00FF6F  00                 	db	0
  1570  00FF70                     STR_55:
  1571  00FF70  62                 	db	98	;'b'
  1572  00FF71  6F                 	db	111	;'o'
  1573  00FF72  6F                 	db	111	;'o'
  1574  00FF73  74                 	db	116	;'t'
  1575  00FF74  6C                 	db	108	;'l'
  1576  00FF75  6F                 	db	111	;'o'
  1577  00FF76  61                 	db	97	;'a'
  1578  00FF77  64                 	db	100	;'d'
  1579  00FF78  00                 	db	0
  1580  00FF79                     STR_15:
  1581  00FF79  20                 	db	32
  1582  00FF7A  20                 	db	32
  1583  00FF7B  20                 	db	32
  1584  00FF7C  20                 	db	32
  1585  00FF7D  20                 	db	32
  1586  00FF7E  20                 	db	32
  1587  00FF7F  20                 	db	32
  1588  00FF80  20                 	db	32
  1589  00FF81  00                 	db	0
  1590  00FF82                     STR_24:
  1591  00FF82  09                 	db	9
  1592  00FF83  65                 	db	101	;'e'
  1593  00FF84  72                 	db	114	;'r'
  1594  00FF85  72                 	db	114	;'r'
  1595  00FF86  6F                 	db	111	;'o'
  1596  00FF87  72                 	db	114	;'r'
  1597  00FF88  0A                 	db	10
  1598  00FF89  00                 	db	0
  1599  00FF8A                     STR_118:
  1600  00FF8A  28                 	db	40
  1601  00FF8B  6E                 	db	110	;'n'
  1602  00FF8C  75                 	db	117	;'u'
  1603  00FF8D  6C                 	db	108	;'l'
  1604  00FF8E  6C                 	db	108	;'l'
  1605  00FF8F  29                 	db	41
  1606  00FF90  00                 	db	0
  1607  00FF91                     STR_40:
  1608  00FF91  73                 	db	115	;'s'
  1609  00FF92  65                 	db	101	;'e'
  1610  00FF93  63                 	db	99	;'c'
  1611  00FF94  6F                 	db	111	;'o'
  1612  00FF95  6E                 	db	110	;'n'
  1613  00FF96  64                 	db	100	;'d'
  1614  00FF97  00                 	db	0
  1615  00FF98                     STR_38:
  1616  00FF98  6D                 	db	109	;'m'
  1617  00FF99  69                 	db	105	;'i'
  1618  00FF9A  6E                 	db	110	;'n'
  1619  00FF9B  75                 	db	117	;'u'
  1620  00FF9C  74                 	db	116	;'t'
  1621  00FF9D  65                 	db	101	;'e'
  1622  00FF9E  00                 	db	0
  1623  00FF9F                     STR_97:
  1624  00FF9F  20                 	db	32
  1625  00FFA0  20                 	db	32
  1626  00FFA1  30                 	db	48	;'0'
  1627  00FFA2  20                 	db	32
  1628  00FFA3  20                 	db	32
  1629  00FFA4  00                 	db	0
  1630  00FFA5                     STR_80:
  1631  00FFA5  20                 	db	32
  1632  00FFA6  4F                 	db	79	;'O'
  1633  00FFA7  4E                 	db	78	;'N'
  1634  00FFA8  20                 	db	32
  1635  00FFA9  20                 	db	32
  1636  00FFAA  00                 	db	0
  1637  00FFAB                     STR_81:
  1638  00FFAB  20                 	db	32
  1639  00FFAC  4F                 	db	79	;'O'
  1640  00FFAD  46                 	db	70	;'F'
  1641  00FFAE  46                 	db	70	;'F'
  1642  00FFAF  20                 	db	32
  1643  00FFB0  00                 	db	0
  1644  00FFB1                     STR_96:
  1645  00FFB1  20                 	db	32
  1646  00FFB2  79                 	db	121	;'y'
  1647  00FFB3  65                 	db	101	;'e'
  1648  00FFB4  74                 	db	116	;'t'
  1649  00FFB5  20                 	db	32
  1650  00FFB6  00                 	db	0
  1651  00FFB7                     STR_70:
  1652  00FFB7  25                 	db	37
  1653  00FFB8  73                 	db	115	;'s'
  1654  00FFB9  20                 	db	32
  1655  00FFBA  25                 	db	37
  1656  00FFBB  73                 	db	115	;'s'
  1657  00FFBC  00                 	db	0
  1658  00FFBD                     STR_59:
  1659  00FFBD  74                 	db	116	;'t'
  1660  00FFBE  6F                 	db	111	;'o'
  1661  00FFBF  75                 	db	117	;'u'
  1662  00FFC0  63                 	db	99	;'c'
  1663  00FFC1  68                 	db	104	;'h'
  1664  00FFC2  00                 	db	0
  1665  00FFC3                     STR_64:
  1666  00FFC3  72                 	db	114	;'r'
  1667  00FFC4  65                 	db	101	;'e'
  1668  00FFC5  73                 	db	115	;'s'
  1669  00FFC6  65                 	db	101	;'e'
  1670  00FFC7  74                 	db	116	;'t'
  1671  00FFC8  00                 	db	0
  1672  00FFC9                     STR_32:
  1673  00FFC9  6D                 	db	109	;'m'
  1674  00FFCA  6F                 	db	111	;'o'
  1675  00FFCB  6E                 	db	110	;'n'
  1676  00FFCC  74                 	db	116	;'t'
  1677  00FFCD  68                 	db	104	;'h'
  1678  00FFCE  00                 	db	0
  1679  00FFCF                     STR_51:
  1680  00FFCF  68                 	db	104	;'h'
  1681  00FFD0  65                 	db	101	;'e'
  1682  00FFD1  6C                 	db	108	;'l'
  1683  00FFD2  70                 	db	112	;'p'
  1684  00FFD3  00                 	db	0
  1685  00FFD4                     STR_61:
  1686  00FFD4  69                 	db	105	;'i'
  1687  00FFD5  6E                 	db	110	;'n'
  1688  00FFD6  69                 	db	105	;'i'
  1689  00FFD7  74                 	db	116	;'t'
  1690  00FFD8  00                 	db	0
  1691  00FFD9                     STR_30:
  1692  00FFD9  79                 	db	121	;'y'
  1693  00FFDA  65                 	db	101	;'e'
  1694  00FFDB  61                 	db	97	;'a'
  1695  00FFDC  72                 	db	114	;'r'
  1696  00FFDD  00                 	db	0
  1697  00FFDE                     STR_36:
  1698  00FFDE  68                 	db	104	;'h'
  1699  00FFDF  6F                 	db	111	;'o'
  1700  00FFE0  75                 	db	117	;'u'
  1701  00FFE1  72                 	db	114	;'r'
  1702  00FFE2  00                 	db	0
  1703  00FFE3                     STR_19:
  1704  00FFE3  08                 	db	8
  1705  00FFE4  20                 	db	32
  1706  00FFE5  08                 	db	8
  1707  00FFE6  00                 	db	0
  1708  00FFE7                     STR_34:
  1709  00FFE7  64                 	db	100	;'d'
  1710  00FFE8  61                 	db	97	;'a'
  1711  00FFE9  79                 	db	121	;'y'
  1712  00FFEA  00                 	db	0
  1713  00FFEB                     STR_56:
  1714  00FFEB  6F                 	db	111	;'o'
  1715  00FFEC  64                 	db	100	;'d'
  1716  00FFED  00                 	db	0
  1717  00FFEE                     STR_27:
  1718  00FFEE  61                 	db	97	;'a'
  1719  00FFEF  74                 	db	116	;'t'
  1720  00FFF0  00                 	db	0
  1721  00FFF1                     STR_52:
  1722  00FFF1  3F                 	db	63	;'?'
  1723  00FFF2  00                 	db	0
  1724  00FFF3                     STR_31:
  1725  00FFF3  4D                 	db	77	;'M'
  1726  00FFF4  00                 	db	0
  1727  00FFF5                     STR_37:
  1728  00FFF5  6D                 	db	109	;'m'
  1729  00FFF6  00                 	db	0
  1730  00FFF7                     STR_13:
  1731  00FFF7  28                 	db	40
  1732  00FFF8  00                 	db	0
  1733  00FFF9                     STR_9:
  1734  00FFF9  2D                 	db	45
  1735  00FFFA  00                 	db	0
  1736  00FFFB                     STR_4:
  1737  00FFFB  2F                 	db	47
  1738  00FFFC  00                 	db	0
  1739  00FFFD                     STR_7:
  1740  00FFFD  3A                 	db	58	;':'
  1741  00FFFE  00                 	db	0
  1742  0000                     
  1743                           ; #config settings
  1744  00FFFF  00                 	db	0	; dummy byte at the end
  1745  0000                     
  1746                           	psect	cinit
  1747  0158B8                     __pcinit:
  1748                           	opt stack 0
  1749  0158B8                     start_initialization:
  1750                           	opt stack 0
  1751  0158B8                     __initialization:
  1752                           	opt stack 0
  1753                           
  1754                           ; Clear objects allocated to BIGRAMl (1500 bytes)
  1755  0158B8  EE06  F069         	lfsr	0,__pbssBIGRAMl
  1756  0158BC  EE15 F0DC          	lfsr	1,1500
  1757  0158C0                     clear_0:
  1758  0158C0  6AEE               	clrf	postinc0,c
  1759  0158C2  50E5               	movf	postdec1,w,c
  1760  0158C4  50E1               	movf	fsr1l,w,c
  1761  0158C6  E1FC               	bnz	clear_0
  1762  0158C8  50E2               	movf	fsr1h,w,c
  1763  0158CA  E1FA               	bnz	clear_0
  1764                           
  1765                           ; Clear objects allocated to BANK5 (250 bytes)
  1766  0158CC  EE05  F000         	lfsr	0,__pbssBANK5
  1767  0158D0  0EFA               	movlw	250
  1768  0158D2                     clear_1:
  1769  0158D2  6AEE               	clrf	postinc0,c
  1770  0158D4  06E8               	decf	wreg,f,c
  1771  0158D6  E1FD               	bnz	clear_1
  1772                           
  1773                           ; Clear objects allocated to BANK4 (200 bytes)
  1774  0158D8  EE04  F000         	lfsr	0,__pbssBANK4
  1775  0158DC  0EC8               	movlw	200
  1776  0158DE                     clear_2:
  1777  0158DE  6AEE               	clrf	postinc0,c
  1778  0158E0  06E8               	decf	wreg,f,c
  1779  0158E2  E1FD               	bnz	clear_2
  1780                           
  1781                           ; Clear objects allocated to BANK3 (256 bytes)
  1782  0158E4  EE03  F000         	lfsr	0,__pbssBANK3
  1783  0158E8  EE11 F000          	lfsr	1,256
  1784  0158EC                     clear_3:
  1785  0158EC  6AEE               	clrf	postinc0,c
  1786  0158EE  50E5               	movf	postdec1,w,c
  1787  0158F0  50E1               	movf	fsr1l,w,c
  1788  0158F2  E1FC               	bnz	clear_3
  1789  0158F4  50E2               	movf	fsr1h,w,c
  1790  0158F6  E1FA               	bnz	clear_3
  1791                           
  1792                           ; Clear objects allocated to BANK2 (206 bytes)
  1793  0158F8  EE02  F000         	lfsr	0,__pbssBANK2
  1794  0158FC  0ECE               	movlw	206
  1795  0158FE                     clear_4:
  1796  0158FE  6AEE               	clrf	postinc0,c
  1797  015900  06E8               	decf	wreg,f,c
  1798  015902  E1FD               	bnz	clear_4
  1799                           
  1800                           ; Clear objects allocated to BANK1 (146 bytes)
  1801  015904  EE01  F000         	lfsr	0,__pbssBANK1
  1802  015908  0E92               	movlw	146
  1803  01590A                     clear_5:
  1804  01590A  6AEE               	clrf	postinc0,c
  1805  01590C  06E8               	decf	wreg,f,c
  1806  01590E  E1FD               	bnz	clear_5
  1807                           
  1808                           ; Clear objects allocated to BANK0 (26 bytes)
  1809  015910  EE00  F0E6         	lfsr	0,__pbssBANK0
  1810  015914  0E1A               	movlw	26
  1811  015916                     clear_6:
  1812  015916  6AEE               	clrf	postinc0,c
  1813  015918  06E8               	decf	wreg,f,c
  1814  01591A  E1FD               	bnz	clear_6
  1815                           
  1816                           ; Clear objects allocated to COMRAM (44 bytes)
  1817  01591C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1818  015920  0E2C               	movlw	44
  1819  015922                     clear_7:
  1820  015922  6AEE               	clrf	postinc0,c
  1821  015924  06E8               	decf	wreg,f,c
  1822  015926  E1FD               	bnz	clear_7
  1823                           
  1824                           ; Initialize objects allocated to BANK1 (5 bytes)
  1825                           ; load TBLPTR registers with __pidataBANK1
  1826  015928  0E40               	movlw	low __pidataBANK1
  1827  01592A  6EF6               	movwf	tblptrl,c
  1828  01592C  0E6D               	movlw	high __pidataBANK1
  1829  01592E  6EF7               	movwf	tblptrh,c
  1830  015930  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1831  015932  6EF8               	movwf	tblptru,c
  1832  015934  EE01  F0E2         	lfsr	0,__pdataBANK1
  1833  015938  EE10 F005          	lfsr	1,5
  1834  01593C                     copy_data0:
  1835  01593C  0009               	tblrd		*+
  1836  01593E  CFF5 FFEE          	movff	tablat,postinc0
  1837  015942  50E5               	movf	postdec1,w,c
  1838  015944  50E1               	movf	fsr1l,w,c
  1839  015946  E1FA               	bnz	copy_data0
  1840  015948                     end_of_initialization:
  1841                           	opt stack 0
  1842  015948                     __end_of__initialization:
  1843                           	opt stack 0
  1844  015948  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1845  01594A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1846  01594C  0100               	movlb	0
  1847  01594E  EF0F  F0B0         	goto	_main	;jump to C main() function
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           
  1858                           	psect	bssCOMRAM
  1859  000001                     __pbssCOMRAM:
  1860                           	opt stack 0
  1861  000001                     _ep_data_in:
  1862                           	opt stack 0
  1863  000001                     	ds	3
  1864  000004                     _ep_data_out:
  1865                           	opt stack 0
  1866  000004                     	ds	3
  1867  000007                     _CDCDataOutHandle:
  1868                           	opt stack 0
  1869  000007                     	ds	2
  1870  000009                     _pBDTEntryEP0OutCurrent:
  1871                           	opt stack 0
  1872  000009                     	ds	2
  1873  00000B                     _pBDTEntryEP0OutNext:
  1874                           	opt stack 0
  1875  00000B                     	ds	2
  1876  00000D                     _BothEP0OutUOWNsSet:
  1877                           	opt stack 0
  1878  00000D                     	ds	1
  1879  00000E                     _I2C_sent_flag:
  1880                           	opt stack 0
  1881  00000E                     	ds	1
  1882  00000F                     _RemoteWakeup:
  1883                           	opt stack 0
  1884  00000F                     	ds	1
  1885  000010                     _USBDeferINDataStagePackets:
  1886                           	opt stack 0
  1887  000010                     	ds	1
  1888  000011                     _USBDeferOUTDataStagePackets:
  1889                           	opt stack 0
  1890  000011                     	ds	1
  1891  000012                     _USBDeferStatusStagePacket:
  1892                           	opt stack 0
  1893  000012                     	ds	1
  1894  000013                     _USBDeviceState:
  1895                           	opt stack 0
  1896  000013                     	ds	1
  1897  000014                     _USBStatusStageEnabledFlag1:
  1898                           	opt stack 0
  1899  000014                     	ds	1
  1900  000015                     _USBStatusStageEnabledFlag2:
  1901                           	opt stack 0
  1902  000015                     	ds	1
  1903  000016                     _USBStatusStageTimeoutCounter:
  1904                           	opt stack 0
  1905  000016                     	ds	1
  1906  000017                     _cdc_mem_type:
  1907                           	opt stack 0
  1908  000017                     	ds	1
  1909  000018                     _cdc_rx_len:
  1910                           	opt stack 0
  1911  000018                     	ds	1
  1912  000019                     _cdc_trf_state:
  1913                           	opt stack 0
  1914  000019                     	ds	1
  1915  00001A                     _cdc_tx_len:
  1916                           	opt stack 0
  1917  00001A                     	ds	1
  1918  00001B                     _controlTransferState:
  1919                           	opt stack 0
  1920  00001B                     	ds	1
  1921  00001C                     _ctmu_ratio:
  1922                           	opt stack 0
  1923  00001C                     	ds	1
  1924  00001D                     _data_item:
  1925                           	opt stack 0
  1926  00001D                     	ds	1
  1927  00001E                     _endpoint_number:
  1928                           	opt stack 0
  1929  00001E                     	ds	1
  1930  00001F                     _print_item:
  1931                           	opt stack 0
  1932  00001F                     	ds	1
  1933  000020                     _settings_item:
  1934                           	opt stack 0
  1935  000020                     	ds	1
  1936  000021                     _shortPacketStatus:
  1937                           	opt stack 0
  1938  000021                     	ds	1
  1939  000022                     _time_change_flag:
  1940                           	opt stack 0
  1941  000022                     	ds	1
  1942  000023                     _lcd_tx:
  1943                           	opt stack 0
  1944  000023                     	ds	8
  1945  00002B                     _USBActiveConfiguration:
  1946                           	opt stack 0
  1947  00002B                     	ds	1
  1948  00002C                     _USTATcopy:
  1949                           	opt stack 0
  1950  00002C                     	ds	1
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           postdec1	equ	0xFE5
  1958                           fsr1h	equ	0xFE2
  1959                           fsr1l	equ	0xFE1
  1960                           
  1961                           	psect	bssBANK0
  1962  0000E6                     __pbssBANK0:
  1963                           	opt stack 0
  1964  0000E6                     _outPipes:
  1965                           	opt stack 0
  1966  0000E6                     	ds	9
  1967  0000EF                     _inPipes:
  1968                           	opt stack 0
  1969  0000EF                     	ds	6
  1970  0000F5                     _pBDTEntryIn:
  1971                           	opt stack 0
  1972  0000F5                     	ds	6
  1973  0000FB                     _print_port:
  1974                           	opt stack 0
  1975  0000FB                     	ds	1
  1976  0000FC                     _ctmu_m:
  1977                           	opt stack 0
  1978  0000FC                     	ds	4
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           postinc0	equ	0xFEE
  1984                           wreg	equ	0xFE8
  1985                           postdec1	equ	0xFE5
  1986                           fsr1h	equ	0xFE2
  1987                           fsr1l	equ	0xFE1
  1988                           
  1989                           	psect	bssBANK1
  1990  000100                     __pbssBANK1:
  1991                           	opt stack 0
  1992  000100                     _pBDTEntryOut:
  1993                           	opt stack 0
  1994  000100                     	ds	6
  1995  000106                     _pCDCDst:
  1996                           	opt stack 0
  1997  000106                     	ds	3
  1998  000109                     _pCDCSrc:
  1999                           	opt stack 0
  2000  000109                     	ds	3
  2001  00010C                     ST7032_task@wait:
  2002                           	opt stack 0
  2003  00010C                     	ds	2
  2004  00010E                     _CDCDataInHandle:
  2005                           	opt stack 0
  2006  00010E                     	ds	2
  2007  000110                     _ctmu_value_m:
  2008                           	opt stack 0
  2009  000110                     	ds	2
  2010  000112                     _pDst:
  2011                           	opt stack 0
  2012  000112                     	ds	2
  2013  000114                     millis_timer@cnt:
  2014                           	opt stack 0
  2015  000114                     	ds	2
  2016  000116                     ISR@cnt:
  2017                           	opt stack 0
  2018  000116                     	ds	1
  2019  000117                     ISR@cnt_t1:
  2020                           	opt stack 0
  2021  000117                     	ds	1
  2022  000118                     RTCC_task@prev_halfsec:
  2023                           	opt stack 0
  2024  000118                     	ds	1
  2025  000119                     ST7032_task@st7032_state:
  2026                           	opt stack 0
  2027  000119                     	ds	1
  2028  00011A                     _I2C_busy:
  2029                           	opt stack 0
  2030  00011A                     	ds	1
  2031  00011B                     _I2C_cfct_flag:
  2032                           	opt stack 0
  2033  00011B                     	ds	1
  2034  00011C                     _USBBusIsSuspended:
  2035                           	opt stack 0
  2036  00011C                     	ds	1
  2037  00011D                     _control_signal_bitmap:
  2038                           	opt stack 0
  2039  00011D                     	ds	1
  2040  00011E                     _ctmu_sampling_flag:
  2041                           	opt stack 0
  2042  00011E                     	ds	1
  2043  00011F                     _cut_time_flag:
  2044                           	opt stack 0
  2045  00011F                     	ds	1
  2046  000120                     _display_flag:
  2047                           	opt stack 0
  2048  000120                     	ds	1
  2049  000121                     _integrate_flag:
  2050                           	opt stack 0
  2051  000121                     	ds	1
  2052  000122                     _settings_flag:
  2053                           	opt stack 0
  2054  000122                     	ds	1
  2055  000123                     _st7032_state:
  2056                           	opt stack 0
  2057  000123                     	ds	1
  2058  000124                     _terminal_data_out:
  2059                           	opt stack 0
  2060  000124                     	ds	1
  2061  000125                     _terminal_data_out_flag:
  2062                           	opt stack 0
  2063  000125                     	ds	1
  2064  000126                     epoch_to_caltime@year_cache:
  2065                           	opt stack 0
  2066  000126                     	ds	1
  2067  000127                     settings_adjust_time@state:
  2068                           	opt stack 0
  2069  000127                     	ds	1
  2070  000128                     settings_auto_stop@state:
  2071                           	opt stack 0
  2072  000128                     	ds	1
  2073  000129                     settings_integrating_reset@state:
  2074                           	opt stack 0
  2075  000129                     	ds	1
  2076  00012A                     settings_led_indicator@state:
  2077                           	opt stack 0
  2078  00012A                     	ds	1
  2079  00012B                     settings_task@settings_state:
  2080                           	opt stack 0
  2081  00012B                     	ds	1
  2082  00012C                     sleep_task@sleep_flag:
  2083                           	opt stack 0
  2084  00012C                     	ds	1
  2085  00012D                     terminal_task@command_init:
  2086                           	opt stack 0
  2087  00012D                     	ds	1
  2088  00012E                     _port:
  2089                           	opt stack 0
  2090  00012E                     	ds	69
  2091  000173                     _now:
  2092                           	opt stack 0
  2093  000173                     	ds	14
  2094  000181                     terminal_task@command:
  2095                           	opt stack 0
  2096  000181                     	ds	8
  2097  000189                     _line_coding:
  2098                           	opt stack 0
  2099  000189                     	ds	7
  2100  000190                     _USBAlternateInterface:
  2101                           	opt stack 0
  2102  000190                     	ds	2
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           postinc0	equ	0xFEE
  2108                           wreg	equ	0xFE8
  2109                           postdec1	equ	0xFE5
  2110                           fsr1h	equ	0xFE2
  2111                           fsr1l	equ	0xFE1
  2112                           
  2113                           	psect	dataBANK1
  2114  0001E2                     __pdataBANK1:
  2115                           	opt stack 0
  2116  0001E2                     I2C_LCD_SetCursor@F8685:
  2117                           	opt stack 0
  2118  0001E2                     	ds	2
  2119  0001E4                     ST7032_cursor@F8640:
  2120                           	opt stack 0
  2121  0001E4                     	ds	2
  2122  0001E6                     epoch_to_caltime@month_cache:
  2123                           	opt stack 0
  2124  0001E6                     	ds	1
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1h	equ	0xFE2
  2133                           fsr1l	equ	0xFE1
  2134                           
  2135                           	psect	bssBANK2
  2136  000200                     __pbssBANK2:
  2137                           	opt stack 0
  2138  000200                     _cdc_notice:
  2139                           	opt stack 0
  2140  000200                     	ds	10
  2141  00020A                     _BaudRateGen:
  2142                           	opt stack 0
  2143  00020A                     	ds	4
  2144  00020E                     _ms:
  2145                           	opt stack 0
  2146  00020E                     	ds	4
  2147  000212                     LED_indicator@cnt:
  2148                           	opt stack 0
  2149  000212                     	ds	3
  2150  000215                     LED_indicator@cntf:
  2151                           	opt stack 0
  2152  000215                     	ds	3
  2153  000218                     epoch_to_caltime@day_cache:
  2154                           	opt stack 0
  2155  000218                     	ds	2
  2156  00021A                     _display_char:
  2157                           	opt stack 0
  2158  00021A                     	ds	40
  2159  000242                     terminal_task@op0:
  2160                           	opt stack 0
  2161  000242                     	ds	25
  2162  00025B                     terminal_task@op1:
  2163                           	opt stack 0
  2164  00025B                     	ds	25
  2165  000274                     terminal_task@op2:
  2166                           	opt stack 0
  2167  000274                     	ds	25
  2168  00028D                     terminal_task@op3:
  2169                           	opt stack 0
  2170  00028D                     	ds	25
  2171  0002A6                     _dummy_encapsulated_cmd_response:
  2172                           	opt stack 0
  2173  0002A6                     	ds	8
  2174  0002AE                     _uart_rx:
  2175                           	opt stack 0
  2176  0002AE                     	ds	8
  2177  0002B6                     _uart_tx:
  2178                           	opt stack 0
  2179  0002B6                     	ds	8
  2180  0002BE                     _usb_rx:
  2181                           	opt stack 0
  2182  0002BE                     	ds	8
  2183  0002C6                     _usb_tx:
  2184                           	opt stack 0
  2185  0002C6                     	ds	8
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           
  2196                           	psect	bssBANK3
  2197  000300                     __pbssBANK3:
  2198                           	opt stack 0
  2199  000300                     _cdc_data_rx:
  2200                           	opt stack 0
  2201  000300                     	ds	64
  2202  000340                     _cdc_data_tx:
  2203                           	opt stack 0
  2204  000340                     	ds	64
  2205  000380                     _readBuffer:
  2206                           	opt stack 0
  2207  000380                     	ds	64
  2208  0003C0                     _writeBuffer:
  2209                           	opt stack 0
  2210  0003C0                     	ds	64
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           postdec1	equ	0xFE5
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           
  2221                           	psect	bssBANK4
  2222  000400                     __pbssBANK4:
  2223                           	opt stack 0
  2224  000400                     ST7032_init@buf:
  2225                           	opt stack 0
  2226  000400                     	ds	200
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           
  2237                           	psect	bssBANK5
  2238  000500                     __pbssBANK5:
  2239                           	opt stack 0
  2240  000500                     USB_CDC_buffer_init@rxbuf:
  2241                           	opt stack 0
  2242  000500                     	ds	250
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           postdec1	equ	0xFE5
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           
  2253                           	psect	bssBIGRAMl
  2254  000669                     __pbssBIGRAMl:
  2255                           	opt stack 0
  2256  000669                     USB_CDC_buffer_init@txbuf:
  2257                           	opt stack 0
  2258  000669                     	ds	1500
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1h	equ	0xFE2
  2267                           fsr1l	equ	0xFE1
  2268                           
  2269                           	psect	cstackBANK6
  2270  000600                     __pcstackBANK6:
  2271                           	opt stack 0
  2272  000600                     terminal_task@buf:
  2273                           	opt stack 0
  2274                           
  2275                           ; 100 bytes @ 0x0
  2276  000600                     	ds	100
  2277  000664                     _terminal_task$7033:
  2278                           	opt stack 0
  2279                           
  2280                           ; 2 bytes @ 0x64
  2281  000664                     	ds	2
  2282  000666                     terminal_task@i_4539:
  2283                           	opt stack 0
  2284                           
  2285                           ; 1 bytes @ 0x66
  2286  000666                     	ds	1
  2287  000667                     terminal_task@ascii:
  2288                           	opt stack 0
  2289                           
  2290                           ; 1 bytes @ 0x67
  2291  000667                     	ds	1
  2292  000668                     terminal_task@i:
  2293                           	opt stack 0
  2294                           
  2295                           ; 1 bytes @ 0x68
  2296  000668                     	ds	1
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           postdec1	equ	0xFE5
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           
  2307                           	psect	cstackBANK1
  2308  000192                     __pcstackBANK1:
  2309                           	opt stack 0
  2310  000192                     terminal_task@tx:
  2311                           	opt stack 0
  2312  000192                     display_LCD@str:
  2313                           	opt stack 0
  2314                           
  2315                           ; 40 bytes @ 0x0
  2316  000192                     	ds	2
  2317  000194                     terminal_task@rx:
  2318                           	opt stack 0
  2319                           
  2320                           ; 2 bytes @ 0x2
  2321  000194                     	ds	2
  2322  000196                     ??_terminal_task:
  2323                           
  2324                           ; 0 bytes @ 0x4
  2325  000196                     	ds	36
  2326  0001BA                     display_LCD@str_5594:
  2327                           	opt stack 0
  2328                           
  2329                           ; 20 bytes @ 0x28
  2330  0001BA                     	ds	20
  2331  0001CE                     _display_LCD$7035:
  2332                           	opt stack 0
  2333                           
  2334                           ; 4 bytes @ 0x3C
  2335  0001CE                     	ds	4
  2336  0001D2                     _display_LCD$7036:
  2337                           	opt stack 0
  2338                           
  2339                           ; 4 bytes @ 0x40
  2340  0001D2                     	ds	4
  2341  0001D6                     _display_LCD$7037:
  2342                           	opt stack 0
  2343                           
  2344                           ; 4 bytes @ 0x44
  2345  0001D6                     	ds	4
  2346  0001DA                     _display_LCD$7038:
  2347                           	opt stack 0
  2348                           
  2349                           ; 4 bytes @ 0x48
  2350  0001DA                     	ds	4
  2351  0001DE                     _display_LCD$7039:
  2352                           	opt stack 0
  2353                           
  2354                           ; 4 bytes @ 0x4C
  2355  0001DE                     	ds	4
  2356                           tblptru	equ	0xFF8
  2357                           tblptrh	equ	0xFF7
  2358                           tblptrl	equ	0xFF6
  2359                           tablat	equ	0xFF5
  2360                           postinc0	equ	0xFEE
  2361                           wreg	equ	0xFE8
  2362                           postdec1	equ	0xFE5
  2363                           fsr1h	equ	0xFE2
  2364                           fsr1l	equ	0xFE1
  2365                           
  2366                           	psect	cstackBANK0
  2367  000060                     __pcstackBANK0:
  2368                           	opt stack 0
  2369  000060                     ??_isdigit:
  2370  000060                     ??_I2C_IdleCheck:
  2371  000060                     ??_timer0_init:
  2372  000060                     ??_timer3_init:
  2373  000060                     ??_x_to_d:
  2374  000060                     ?_strcmp:
  2375                           	opt stack 0
  2376  000060                     ?_USBTransferOnePacket:
  2377                           	opt stack 0
  2378  000060                     ?_ADC:
  2379                           	opt stack 0
  2380  000060                     ?_ringbuf_num:
  2381                           	opt stack 0
  2382  000060                     ?___awdiv:
  2383                           	opt stack 0
  2384  000060                     ?___awmod:
  2385                           	opt stack 0
  2386  000060                     ?___lwmod:
  2387                           	opt stack 0
  2388  000060                     ?___lldiv:
  2389                           	opt stack 0
  2390  000060                     USBTransferOnePacket@dir:
  2391                           	opt stack 0
  2392  000060                     timer1_init@clock_select:
  2393                           	opt stack 0
  2394  000060                     ADC_init@p_ref:
  2395                           	opt stack 0
  2396  000060                     OUT@value:
  2397                           	opt stack 0
  2398  000060                     ANALOG_IN@b:
  2399                           	opt stack 0
  2400  000060                     LED_output@value:
  2401                           	opt stack 0
  2402  000060                     putUSBUSART@data:
  2403                           	opt stack 0
  2404  000060                     ringbuf_init@rb:
  2405                           	opt stack 0
  2406  000060                     ringbuf_num@rb:
  2407                           	opt stack 0
  2408  000060                     ringbuf_delete@rb:
  2409                           	opt stack 0
  2410  000060                     RTCC_adjust_time_toggle@tm:
  2411                           	opt stack 0
  2412  000060                     RTCC_adjust_time_cursor@tm:
  2413                           	opt stack 0
  2414  000060                     display@str0:
  2415                           	opt stack 0
  2416  000060                     ___awdiv@dividend:
  2417                           	opt stack 0
  2418  000060                     ___awmod@dividend:
  2419                           	opt stack 0
  2420  000060                     ___lwmod@dividend:
  2421                           	opt stack 0
  2422  000060                     memset@p1:
  2423                           	opt stack 0
  2424  000060                     strcat@to:
  2425                           	opt stack 0
  2426  000060                     strcmp@s1:
  2427                           	opt stack 0
  2428  000060                     strcpy@to:
  2429                           	opt stack 0
  2430  000060                     ___lldiv@dividend:
  2431                           	opt stack 0
  2432                           
  2433                           ; 4 bytes @ 0x0
  2434  000060                     	ds	1
  2435  000061                     ??_timer1_init:
  2436  000061                     I2C_IdleCheck@mask:
  2437                           	opt stack 0
  2438  000061                     timer0_init@prescaler:
  2439                           	opt stack 0
  2440  000061                     timer3_init@prescaler:
  2441                           	opt stack 0
  2442  000061                     x_to_d@hex:
  2443                           	opt stack 0
  2444  000061                     OUT@b:
  2445                           	opt stack 0
  2446  000061                     LED_output@b:
  2447                           	opt stack 0
  2448  000061                     _isdigit$6428:
  2449                           	opt stack 0
  2450  000061                     USBTransferOnePacket@data:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x1
  2454  000061                     	ds	1
  2455  000062                     ??_ADC:
  2456  000062                     ??_ringbuf_num:
  2457  000062                     putUSBUSART@length:
  2458                           	opt stack 0
  2459  000062                     I2C_Start@rw:
  2460                           	opt stack 0
  2461  000062                     I2C_Send@data:
  2462                           	opt stack 0
  2463  000062                     timer1_init@prescaler:
  2464                           	opt stack 0
  2465  000062                     integrate_time@i:
  2466                           	opt stack 0
  2467  000062                     isdigit@c:
  2468                           	opt stack 0
  2469  000062                     ringbuf_init@internal_buf:
  2470                           	opt stack 0
  2471  000062                     RTCC_to_caltime@tm:
  2472                           	opt stack 0
  2473  000062                     display@str1:
  2474                           	opt stack 0
  2475  000062                     ___awdiv@divisor:
  2476                           	opt stack 0
  2477  000062                     ___awmod@divisor:
  2478                           	opt stack 0
  2479  000062                     ___lwmod@divisor:
  2480                           	opt stack 0
  2481  000062                     memset@c:
  2482                           	opt stack 0
  2483  000062                     strcat@from:
  2484                           	opt stack 0
  2485  000062                     strcmp@s2:
  2486                           	opt stack 0
  2487  000062                     strcpy@from:
  2488                           	opt stack 0
  2489                           
  2490                           ; 2 bytes @ 0x2
  2491  000062                     	ds	1
  2492  000063                     USBTransferOnePacket@len:
  2493                           	opt stack 0
  2494  000063                     I2C_Start@adrs:
  2495                           	opt stack 0
  2496  000063                     ADC@ch:
  2497                           	opt stack 0
  2498                           
  2499                           ; 1 bytes @ 0x3
  2500  000063                     	ds	1
  2501  000064                     ??_strcmp:
  2502  000064                     USBTransferOnePacket@ep:
  2503                           	opt stack 0
  2504  000064                     RTCC_to_caltime@dumy:
  2505                           	opt stack 0
  2506  000064                     I2C_LCD_Command@c:
  2507                           	opt stack 0
  2508  000064                     display@item:
  2509                           	opt stack 0
  2510  000064                     ___awdiv@counter:
  2511                           	opt stack 0
  2512  000064                     ___awmod@counter:
  2513                           	opt stack 0
  2514  000064                     ___lwmod@counter:
  2515                           	opt stack 0
  2516  000064                     ringbuf_init@bufsize:
  2517                           	opt stack 0
  2518  000064                     I2C_LCD_Puts@s:
  2519                           	opt stack 0
  2520  000064                     memset@n:
  2521                           	opt stack 0
  2522  000064                     strcat@cp:
  2523                           	opt stack 0
  2524  000064                     strcpy@cp:
  2525                           	opt stack 0
  2526  000064                     ___lldiv@divisor:
  2527                           	opt stack 0
  2528                           
  2529                           ; 4 bytes @ 0x4
  2530  000064                     	ds	1
  2531  000065                     I2C_LCD_Command@ans:
  2532                           	opt stack 0
  2533  000065                     display@i:
  2534                           	opt stack 0
  2535  000065                     ___awdiv@sign:
  2536                           	opt stack 0
  2537  000065                     ___awmod@sign:
  2538                           	opt stack 0
  2539  000065                     strcmp@r:
  2540                           	opt stack 0
  2541  000065                     USBTransferOnePacket@handle:
  2542                           	opt stack 0
  2543                           
  2544                           ; 2 bytes @ 0x5
  2545  000065                     	ds	1
  2546  000066                     ??_I2C_LCD_Clear:
  2547  000066                     ??_I2C_LCD_Puts:
  2548  000066                     ??_settings_auto_stop:
  2549  000066                     ??_settings_led_indicator:
  2550  000066                     month_length@month:
  2551                           	opt stack 0
  2552  000066                     I2C_LCD_SetCursor@row:
  2553                           	opt stack 0
  2554  000066                     port_button_task@i:
  2555                           	opt stack 0
  2556  000066                     ___awdiv@quotient:
  2557                           	opt stack 0
  2558  000066                     memset@p:
  2559                           	opt stack 0
  2560                           
  2561                           ; 2 bytes @ 0x6
  2562  000066                     	ds	1
  2563  000067                     ??_CDCTxService:
  2564  000067                     ??_month_length:
  2565  000067                     ??_I2C_LCD_init:
  2566  000067                     getsUSBUSART@buffer:
  2567                           	opt stack 0
  2568  000067                     I2C_LCD_SetCursor@row_offsets:
  2569                           	opt stack 0
  2570  000067                     I2C_LCD_Puts@ans:
  2571                           	opt stack 0
  2572  000067                     settings_auto_stop@str:
  2573                           	opt stack 0
  2574  000067                     settings_led_indicator@str:
  2575                           	opt stack 0
  2576                           
  2577                           ; 20 bytes @ 0x7
  2578  000067                     	ds	1
  2579  000068                     USBDeviceInit@i:
  2580                           	opt stack 0
  2581  000068                     d_to_x@dec:
  2582                           	opt stack 0
  2583  000068                     I2C_LCD_init@i:
  2584                           	opt stack 0
  2585  000068                     _CDCTxService$2005:
  2586                           	opt stack 0
  2587  000068                     ringbuf_put@rb:
  2588                           	opt stack 0
  2589  000068                     ringbuf_pop@rb:
  2590                           	opt stack 0
  2591  000068                     ringbuf_backspace@rb:
  2592                           	opt stack 0
  2593  000068                     ___lldiv@quotient:
  2594                           	opt stack 0
  2595                           
  2596                           ; 4 bytes @ 0x8
  2597  000068                     	ds	1
  2598  000069                     getsUSBUSART@len:
  2599                           	opt stack 0
  2600  000069                     I2C_LCD_SetCursor@col:
  2601                           	opt stack 0
  2602  000069                     I2C_LCD_init@i_4452:
  2603                           	opt stack 0
  2604  000069                     caltime_to_RTCC@tm:
  2605                           	opt stack 0
  2606                           
  2607                           ; 2 bytes @ 0x9
  2608  000069                     	ds	1
  2609  00006A                     ??_getsUSBUSART:
  2610  00006A                     ??_ringbuf_pop:
  2611  00006A                     ??_ringbuf_backspace:
  2612  00006A                     CDCTxService@i:
  2613                           	opt stack 0
  2614  00006A                     ringbuf_put@data:
  2615                           	opt stack 0
  2616  00006A                     sleep_task@i:
  2617                           	opt stack 0
  2618  00006A                     settings_integrating_reset@str:
  2619                           	opt stack 0
  2620                           
  2621                           ; 20 bytes @ 0xA
  2622  00006A                     	ds	1
  2623  00006B                     ??_ringbuf_put:
  2624  00006B                     CDCTxService@byte_to_send:
  2625                           	opt stack 0
  2626  00006B                     month_length@year:
  2627                           	opt stack 0
  2628  00006B                     _getsUSBUSART$1957:
  2629                           	opt stack 0
  2630                           
  2631                           ; 2 bytes @ 0xB
  2632  00006B                     	ds	1
  2633  00006C                     ___lldiv@counter:
  2634                           	opt stack 0
  2635  00006C                     USB_CDC_send@length:
  2636                           	opt stack 0
  2637                           
  2638                           ; 2 bytes @ 0xC
  2639  00006C                     	ds	1
  2640  00006D                     ??_integrate_current:
  2641  00006D                     ?_CTMU_read:
  2642                           	opt stack 0
  2643  00006D                     ?___lmul:
  2644                           	opt stack 0
  2645  00006D                     ?___llmod:
  2646                           	opt stack 0
  2647  00006D                     USB_CDC_get@numBytesRead:
  2648                           	opt stack 0
  2649  00006D                     ___lmul@multiplier:
  2650                           	opt stack 0
  2651  00006D                     ___llmod@dividend:
  2652                           	opt stack 0
  2653                           
  2654                           ; 4 bytes @ 0xD
  2655  00006D                     	ds	1
  2656  00006E                     ringbuf_pop@ret:
  2657                           	opt stack 0
  2658                           
  2659                           ; 1 bytes @ 0xE
  2660  00006E                     	ds	1
  2661  00006F                     ??_CTMU_read:
  2662  00006F                     ??_USB_CDC_task:
  2663  00006F                     integrate_current@i:
  2664                           	opt stack 0
  2665  00006F                     ringbuf_put_str@rb:
  2666                           	opt stack 0
  2667                           
  2668                           ; 2 bytes @ 0xF
  2669  00006F                     	ds	1
  2670  000070                     CTMU_read@ch:
  2671                           	opt stack 0
  2672  000070                     USB_CDC_task@i:
  2673                           	opt stack 0
  2674                           
  2675                           ; 2 bytes @ 0x10
  2676  000070                     	ds	1
  2677  000071                     ringbuf_put_str@str:
  2678                           	opt stack 0
  2679  000071                     CTMU_read@sum:
  2680                           	opt stack 0
  2681  000071                     ___lmul@multiplicand:
  2682                           	opt stack 0
  2683  000071                     ___llmod@divisor:
  2684                           	opt stack 0
  2685                           
  2686                           ; 4 bytes @ 0x11
  2687  000071                     	ds	1
  2688  000072                     USB_CDC_task@length:
  2689                           	opt stack 0
  2690                           
  2691                           ; 2 bytes @ 0x12
  2692  000072                     	ds	1
  2693  000073                     
  2694                           ; 0 bytes @ 0x13
  2695  000073                     	ds	2
  2696  000075                     CTMU_read@i:
  2697                           	opt stack 0
  2698  000075                     ___llmod@counter:
  2699                           	opt stack 0
  2700  000075                     ___lmul@product:
  2701                           	opt stack 0
  2702                           
  2703                           ; 4 bytes @ 0x15
  2704  000075                     	ds	1
  2705  000076                     ?___wmul:
  2706                           	opt stack 0
  2707  000076                     ___wmul@multiplier:
  2708                           	opt stack 0
  2709                           
  2710                           ; 2 bytes @ 0x16
  2711  000076                     	ds	2
  2712  000078                     ___wmul@multiplicand:
  2713                           	opt stack 0
  2714                           
  2715                           ; 2 bytes @ 0x18
  2716  000078                     	ds	1
  2717  000079                     ?_get_quot_rem:
  2718                           	opt stack 0
  2719  000079                     get_quot_rem@quot:
  2720                           	opt stack 0
  2721  000079                     caltime_to_epoch@tm:
  2722                           	opt stack 0
  2723                           
  2724                           ; 2 bytes @ 0x19
  2725  000079                     	ds	1
  2726  00007A                     ___wmul@product:
  2727                           	opt stack 0
  2728                           
  2729                           ; 2 bytes @ 0x1A
  2730  00007A                     	ds	1
  2731  00007B                     ??_caltime_to_epoch:
  2732  00007B                     get_quot_rem@div:
  2733                           	opt stack 0
  2734  00007B                     settings_auto_stop@str_6113:
  2735                           	opt stack 0
  2736  00007B                     settings_led_indicator@str_6130:
  2737                           	opt stack 0
  2738                           
  2739                           ; 20 bytes @ 0x1B
  2740  00007B                     	ds	1
  2741  00007C                     ??_Auto_cut:
  2742  00007C                     ?_atoi:
  2743                           	opt stack 0
  2744  00007C                     ?___lwdiv:
  2745                           	opt stack 0
  2746  00007C                     atoi@s:
  2747                           	opt stack 0
  2748  00007C                     ___lwdiv@dividend:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x1C
  2752  00007C                     	ds	1
  2753  00007D                     get_quot_rem@num:
  2754                           	opt stack 0
  2755                           
  2756                           ; 4 bytes @ 0x1D
  2757  00007D                     	ds	1
  2758  00007E                     ??_atoi:
  2759  00007E                     Auto_cut@i:
  2760                           	opt stack 0
  2761  00007E                     ___lwdiv@divisor:
  2762                           	opt stack 0
  2763  00007E                     settings_integrating_reset@str_6147:
  2764                           	opt stack 0
  2765                           
  2766                           ; 20 bytes @ 0x1E
  2767  00007E                     	ds	1
  2768  00007F                     caltime_to_epoch@year:
  2769                           	opt stack 0
  2770                           
  2771                           ; 1 bytes @ 0x1F
  2772  00007F                     	ds	1
  2773  000080                     caltime_to_epoch@month_3637:
  2774                           	opt stack 0
  2775  000080                     atoi@sign:
  2776                           	opt stack 0
  2777  000080                     ___lwdiv@counter:
  2778                           	opt stack 0
  2779                           
  2780                           ; 1 bytes @ 0x20
  2781  000080                     	ds	1
  2782  000081                     epoch_to_caltime@tm:
  2783                           	opt stack 0
  2784  000081                     atoi@a:
  2785                           	opt stack 0
  2786  000081                     ___lwdiv@quotient:
  2787                           	opt stack 0
  2788  000081                     caltime_to_epoch@epoch:
  2789                           	opt stack 0
  2790                           
  2791                           ; 4 bytes @ 0x21
  2792  000081                     	ds	2
  2793  000083                     ??_epoch_to_caltime:
  2794  000083                     ?_sprintf:
  2795                           	opt stack 0
  2796  000083                     ctmu_set_ratio@percentage:
  2797                           	opt stack 0
  2798  000083                     button_timer_interrupt@bt:
  2799                           	opt stack 0
  2800  000083                     ringbuf_put_num@rb:
  2801                           	opt stack 0
  2802  000083                     sprintf@sp:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x23
  2806  000083                     	ds	1
  2807  000084                     software_init@i:
  2808                           	opt stack 0
  2809                           
  2810                           ; 1 bytes @ 0x24
  2811  000084                     	ds	1
  2812  000085                     button_timer_interrupt@sw_value:
  2813                           	opt stack 0
  2814  000085                     caltime_to_epoch@month:
  2815                           	opt stack 0
  2816  000085                     ringbuf_put_num@value:
  2817                           	opt stack 0
  2818  000085                     epoch_to_caltime@day_since_epoch:
  2819                           	opt stack 0
  2820  000085                     sprintf@f:
  2821                           	opt stack 0
  2822                           
  2823                           ; 2 bytes @ 0x25
  2824  000085                     	ds	1
  2825  000086                     RTCC_from_RTCC@tm:
  2826                           	opt stack 0
  2827                           
  2828                           ; 2 bytes @ 0x26
  2829  000086                     	ds	1
  2830  000087                     ringbuf_put_num@digits:
  2831                           	opt stack 0
  2832  000087                     epoch_to_caltime@day:
  2833                           	opt stack 0
  2834                           
  2835                           ; 2 bytes @ 0x27
  2836  000087                     	ds	1
  2837  000088                     ringbuf_put_num@i:
  2838                           	opt stack 0
  2839                           
  2840                           ; 1 bytes @ 0x28
  2841  000088                     	ds	1
  2842  000089                     epoch_to_caltime@year:
  2843                           	opt stack 0
  2844  000089                     ringbuf_put_num@temp:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x29
  2848  000089                     	ds	1
  2849  00008A                     epoch_to_caltime@month:
  2850                           	opt stack 0
  2851                           
  2852                           ; 1 bytes @ 0x2A
  2853  00008A                     	ds	1
  2854  00008B                     epoch_to_caltime@num:
  2855                           	opt stack 0
  2856                           
  2857                           ; 4 bytes @ 0x2B
  2858  00008B                     	ds	4
  2859  00008F                     RTCC_from_caltime@tm:
  2860                           	opt stack 0
  2861  00008F                     RTCC_from_epoch@tm:
  2862                           	opt stack 0
  2863  00008F                     settings_auto_stop@strp:
  2864                           	opt stack 0
  2865  00008F                     settings_led_indicator@strp:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x2F
  2869  00008F                     	ds	2
  2870  000091                     RTCC_adjust_time_inc@tm:
  2871                           	opt stack 0
  2872  000091                     RTCC_adjust_time_dec@tm:
  2873                           	opt stack 0
  2874  000091                     settings_auto_stop@strp_6114:
  2875                           	opt stack 0
  2876  000091                     settings_led_indicator@strp_6131:
  2877                           	opt stack 0
  2878                           
  2879                           ; 2 bytes @ 0x31
  2880  000091                     	ds	1
  2881  000092                     settings_integrating_reset@strp:
  2882                           	opt stack 0
  2883                           
  2884                           ; 2 bytes @ 0x32
  2885  000092                     	ds	1
  2886  000093                     ??_RTCC_adjust_time_inc:
  2887  000093                     ??_RTCC_adjust_time_dec:
  2888  000093                     settings_auto_stop@i:
  2889                           	opt stack 0
  2890  000093                     settings_led_indicator@i:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x33
  2894  000093                     	ds	1
  2895  000094                     settings_auto_stop@i_6115:
  2896                           	opt stack 0
  2897  000094                     settings_led_indicator@i_6132:
  2898                           	opt stack 0
  2899  000094                     settings_integrating_reset@strp_6148:
  2900                           	opt stack 0
  2901                           
  2902                           ; 2 bytes @ 0x34
  2903  000094                     	ds	1
  2904  000095                     settings_auto_stop@j:
  2905                           	opt stack 0
  2906  000095                     settings_led_indicator@j:
  2907                           	opt stack 0
  2908                           
  2909                           ; 1 bytes @ 0x35
  2910  000095                     	ds	1
  2911  000096                     settings_integrating_reset@i:
  2912                           	opt stack 0
  2913                           
  2914                           ; 1 bytes @ 0x36
  2915  000096                     	ds	1
  2916  000097                     ??_sprintf:
  2917  000097                     RTCC_adjust_time_inc@i_3817:
  2918                           	opt stack 0
  2919  000097                     RTCC_adjust_time_dec@i_3847:
  2920                           	opt stack 0
  2921  000097                     settings_integrating_reset@i_6149:
  2922                           	opt stack 0
  2923                           
  2924                           ; 1 bytes @ 0x37
  2925  000097                     	ds	1
  2926  000098                     RTCC_adjust_time_inc@i:
  2927                           	opt stack 0
  2928  000098                     RTCC_adjust_time_dec@i:
  2929                           	opt stack 0
  2930  000098                     settings_integrating_reset@j:
  2931                           	opt stack 0
  2932                           
  2933                           ; 1 bytes @ 0x38
  2934  000098                     	ds	1
  2935  000099                     settings_task@item_change_flag:
  2936                           	opt stack 0
  2937                           
  2938                           ; 1 bytes @ 0x39
  2939  000099                     	ds	2
  2940  00009B                     sprintf@prec:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x3B
  2944  00009B                     	ds	2
  2945  00009D                     sprintf@cp:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x3D
  2949  00009D                     	ds	2
  2950  00009F                     sprintf@ap:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x3F
  2954  00009F                     	ds	2
  2955  0000A1                     sprintf@len:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x41
  2959  0000A1                     	ds	2
  2960  0000A3                     sprintf@val:
  2961                           	opt stack 0
  2962                           
  2963                           ; 4 bytes @ 0x43
  2964  0000A3                     	ds	4
  2965  0000A7                     sprintf@flag:
  2966                           	opt stack 0
  2967                           
  2968                           ; 1 bytes @ 0x47
  2969  0000A7                     	ds	1
  2970  0000A8                     sprintf@c:
  2971                           	opt stack 0
  2972                           
  2973                           ; 1 bytes @ 0x48
  2974  0000A8                     	ds	1
  2975  0000A9                     sprintf@width:
  2976                           	opt stack 0
  2977                           
  2978                           ; 2 bytes @ 0x49
  2979  0000A9                     	ds	2
  2980  0000AB                     display_dec@str:
  2981                           	opt stack 0
  2982  0000AB                     print_time@tx:
  2983                           	opt stack 0
  2984  0000AB                     data_out@tx:
  2985                           	opt stack 0
  2986                           
  2987                           ; 2 bytes @ 0x4B
  2988  0000AB                     	ds	2
  2989  0000AD                     display_dec@dec:
  2990                           	opt stack 0
  2991  0000AD                     print_time@str:
  2992                           	opt stack 0
  2993  0000AD                     data_out@str:
  2994                           	opt stack 0
  2995                           
  2996                           ; 30 bytes @ 0x4D
  2997  0000AD                     	ds	1
  2998  0000AE                     display_dec@edit:
  2999                           	opt stack 0
  3000                           
  3001                           ; 1 bytes @ 0x4E
  3002  0000AE                     	ds	1
  3003  0000AF                     display_dec@s:
  3004                           	opt stack 0
  3005                           
  3006                           ; 4 bytes @ 0x4F
  3007  0000AF                     	ds	4
  3008  0000B3                     display_time_1602@tm:
  3009                           	opt stack 0
  3010                           
  3011                           ; 2 bytes @ 0x53
  3012  0000B3                     	ds	2
  3013  0000B5                     display_time_1602@line0:
  3014                           	opt stack 0
  3015                           
  3016                           ; 2 bytes @ 0x55
  3017  0000B5                     	ds	2
  3018  0000B7                     display_time_1602@line1:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x57
  3022  0000B7                     	ds	2
  3023  0000B9                     ??_display_time_1602:
  3024                           
  3025                           ; 0 bytes @ 0x59
  3026  0000B9                     	ds	1
  3027  0000BA                     ??_display_LCD:
  3028                           
  3029                           ; 0 bytes @ 0x5A
  3030  0000BA                     	ds	17
  3031  0000CB                     data_out@i:
  3032                           	opt stack 0
  3033  0000CB                     terminal_at_hand@tx:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x6B
  3037  0000CB                     	ds	1
  3038  0000CC                     
  3039                           ; 0 bytes @ 0x6C
  3040  0000CC                     	ds	1
  3041  0000CD                     terminal_at_hand@hand:
  3042                           	opt stack 0
  3043                           
  3044                           ; 2 bytes @ 0x6D
  3045  0000CD                     	ds	2
  3046  0000CF                     terminal_at_hand@min:
  3047                           	opt stack 0
  3048                           
  3049                           ; 1 bytes @ 0x6F
  3050  0000CF                     	ds	1
  3051  0000D0                     terminal_at_hand@max:
  3052                           	opt stack 0
  3053                           
  3054                           ; 1 bytes @ 0x70
  3055  0000D0                     	ds	1
  3056  0000D1                     terminal_at_hand@value:
  3057                           	opt stack 0
  3058                           
  3059                           ; 1 bytes @ 0x71
  3060  0000D1                     	ds	1
  3061  0000D2                     terminal_time@tx:
  3062                           	opt stack 0
  3063                           
  3064                           ; 2 bytes @ 0x72
  3065  0000D2                     	ds	2
  3066  0000D4                     terminal_time@op0:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x74
  3070  0000D4                     	ds	2
  3071  0000D6                     terminal_time@op1:
  3072                           	opt stack 0
  3073                           
  3074                           ; 2 bytes @ 0x76
  3075  0000D6                     	ds	2
  3076  0000D8                     terminal_time@op2:
  3077                           	opt stack 0
  3078                           
  3079                           ; 2 bytes @ 0x78
  3080  0000D8                     	ds	2
  3081  0000DA                     _terminal_time$7034:
  3082                           	opt stack 0
  3083                           
  3084                           ; 1 bytes @ 0x7A
  3085  0000DA                     	ds	1
  3086  0000DB                     terminal_operation@tx:
  3087                           	opt stack 0
  3088                           
  3089                           ; 2 bytes @ 0x7B
  3090  0000DB                     	ds	2
  3091  0000DD                     terminal_operation@op0:
  3092                           	opt stack 0
  3093                           
  3094                           ; 2 bytes @ 0x7D
  3095  0000DD                     	ds	2
  3096  0000DF                     terminal_operation@op1:
  3097                           	opt stack 0
  3098                           
  3099                           ; 2 bytes @ 0x7F
  3100  0000DF                     	ds	2
  3101  0000E1                     terminal_operation@op2:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x81
  3105  0000E1                     	ds	2
  3106  0000E3                     terminal_operation@op3:
  3107                           	opt stack 0
  3108                           
  3109                           ; 2 bytes @ 0x83
  3110  0000E3                     	ds	2
  3111  0000E5                     terminal_operation@percentage:
  3112                           	opt stack 0
  3113                           
  3114                           ; 1 bytes @ 0x85
  3115  0000E5                     	ds	1
  3116  0000E6                     tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           postinc0	equ	0xFEE
  3121                           wreg	equ	0xFE8
  3122                           postdec1	equ	0xFE5
  3123                           fsr1h	equ	0xFE2
  3124                           fsr1l	equ	0xFE1
  3125                           
  3126                           ; 0 bytes @ 0x86
  3127                           
  3128                           	psect	cstackCOMRAM
  3129  00002D                     __pcstackCOMRAM:
  3130                           	opt stack 0
  3131  00002D                     ??_USBStdGetDscHandler:
  3132  00002D                     ??_USBStdGetStatusHandler:
  3133  00002D                     ?i2_USBTransferOnePacket:
  3134                           	opt stack 0
  3135  00002D                     ?i2___awdiv:
  3136                           	opt stack 0
  3137  00002D                     ?i2___lwdiv:
  3138                           	opt stack 0
  3139  00002D                     USBConfigureEndpoint@direction:
  3140                           	opt stack 0
  3141  00002D                     USBCtrlTrfTxService@byteToSend:
  3142                           	opt stack 0
  3143  00002D                     USBCtrlTrfRxService@i:
  3144                           	opt stack 0
  3145  00002D                     i2USBTransferOnePacket@dir:
  3146                           	opt stack 0
  3147  00002D                     i2LED_output@value:
  3148                           	opt stack 0
  3149  00002D                     i2___awdiv@dividend:
  3150                           	opt stack 0
  3151  00002D                     i2___lwdiv@dividend:
  3152                           	opt stack 0
  3153  00002D                     i2memset@p1:
  3154                           	opt stack 0
  3155                           
  3156                           ; 2 bytes @ 0x0
  3157  00002D                     	ds	1
  3158  00002E                     ??_USBConfigureEndpoint:
  3159  00002E                     USBCtrlTrfRxService@byteToRead:
  3160                           	opt stack 0
  3161  00002E                     USBCtrlTrfInHandler@lastDTS:
  3162                           	opt stack 0
  3163  00002E                     i2LED_output@b:
  3164                           	opt stack 0
  3165  00002E                     USBStdGetStatusHandler@p:
  3166                           	opt stack 0
  3167  00002E                     i2USBTransferOnePacket@data:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0x1
  3171  00002E                     	ds	1
  3172  00002F                     i2___awdiv@divisor:
  3173                           	opt stack 0
  3174  00002F                     i2___lwdiv@divisor:
  3175                           	opt stack 0
  3176  00002F                     i2memset@c:
  3177                           	opt stack 0
  3178                           
  3179                           ; 2 bytes @ 0x2
  3180  00002F                     	ds	1
  3181  000030                     i2USBTransferOnePacket@len:
  3182                           	opt stack 0
  3183                           
  3184                           ; 1 bytes @ 0x3
  3185  000030                     	ds	1
  3186  000031                     i2USBTransferOnePacket@ep:
  3187                           	opt stack 0
  3188  000031                     i2___awdiv@counter:
  3189                           	opt stack 0
  3190  000031                     i2___lwdiv@quotient:
  3191                           	opt stack 0
  3192  000031                     i2memset@n:
  3193                           	opt stack 0
  3194                           
  3195                           ; 2 bytes @ 0x4
  3196  000031                     	ds	1
  3197  000032                     USBConfigureEndpoint@EPNum:
  3198                           	opt stack 0
  3199  000032                     i2___awdiv@sign:
  3200                           	opt stack 0
  3201  000032                     i2USBTransferOnePacket@handle:
  3202                           	opt stack 0
  3203                           
  3204                           ; 2 bytes @ 0x5
  3205  000032                     	ds	1
  3206  000033                     i2___lwdiv@counter:
  3207                           	opt stack 0
  3208  000033                     USBConfigureEndpoint@handle:
  3209                           	opt stack 0
  3210  000033                     i2___awdiv@quotient:
  3211                           	opt stack 0
  3212  000033                     i2memset@p:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x6
  3216  000033                     	ds	2
  3217  000035                     ??_LED_indicator:
  3218  000035                     USBEnableEndpoint@options:
  3219                           	opt stack 0
  3220  000035                     i2USBDeviceInit@i:
  3221                           	opt stack 0
  3222                           
  3223                           ; 1 bytes @ 0x8
  3224  000035                     	ds	1
  3225  000036                     USBEnableEndpoint@p:
  3226                           	opt stack 0
  3227                           
  3228                           ; 2 bytes @ 0x9
  3229  000036                     	ds	2
  3230  000038                     USBEnableEndpoint@ep:
  3231                           	opt stack 0
  3232  000038                     LED_indicator@i:
  3233                           	opt stack 0
  3234                           
  3235                           ; 1 bytes @ 0xB
  3236  000038                     	ds	1
  3237  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0xC
  3241  000039                     	ds	2
  3242  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3243                           	opt stack 0
  3244                           
  3245                           ; 2 bytes @ 0xE
  3246  00003B                     	ds	2
  3247  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3248                           	opt stack 0
  3249                           
  3250                           ; 2 bytes @ 0x10
  3251  00003D                     	ds	2
  3252  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3253                           
  3254                           ; 0 bytes @ 0x12
  3255  00003F                     	ds	2
  3256  000041                     ??_USBStdFeatureReqHandler:
  3257  000041                     USBStdSetCfgHandler@i:
  3258                           	opt stack 0
  3259                           
  3260                           ; 1 bytes @ 0x14
  3261  000041                     	ds	1
  3262  000042                     USBStdFeatureReqHandler@pUEP:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x15
  3266  000042                     	ds	2
  3267  000044                     USBStdFeatureReqHandler@current_ep_data:
  3268                           	opt stack 0
  3269                           
  3270                           ; 1 bytes @ 0x17
  3271  000044                     	ds	1
  3272  000045                     USBStdFeatureReqHandler@p:
  3273                           	opt stack 0
  3274                           
  3275                           ; 2 bytes @ 0x18
  3276  000045                     	ds	2
  3277  000047                     ??_USBCtrlEPService:
  3278  000047                     
  3279                           ; 0 bytes @ 0x1A
  3280  000047                     	ds	2
  3281  000049                     USBCtrlEPService@setup_cnt:
  3282                           	opt stack 0
  3283                           
  3284                           ; 1 bytes @ 0x1C
  3285  000049                     	ds	1
  3286  00004A                     USBDeviceTasks@i:
  3287                           	opt stack 0
  3288                           
  3289                           ; 1 bytes @ 0x1D
  3290  00004A                     	ds	1
  3291  00004B                     ??_ISR:
  3292                           
  3293                           ; 0 bytes @ 0x1E
  3294  00004B                     	ds	14
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           
  3305 ;;
  3306 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3307 ;;
  3308 ;; *************** function _main *****************
  3309 ;; Defined at:
  3310 ;;		line 124 in file "main.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2  1810[None  ] int 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels required when called:   21
  3330 ;; This function calls:
  3331 ;;		_RTCC_task
  3332 ;;		_USB_CDC_task
  3333 ;;		_bootload
  3334 ;;		_ctmu_task
  3335 ;;		_hardware_init
  3336 ;;		_normal_task
  3337 ;;		_sleep_task
  3338 ;;		_software_init
  3339 ;;		_terminal_task
  3340 ;; This function is called by:
  3341 ;;		Startup code after reset
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text0
  3346  01601E                     __ptext0:
  3347                           	opt stack 0
  3348  01601E                     _main:
  3349                           	opt stack 10
  3350                           
  3351                           ;main.c: 126: hardware_init();
  3352                           
  3353                           ;incstack = 0
  3354  01601E  EC96  F0B2         	call	_hardware_init	;wreg free
  3355                           
  3356                           ;main.c: 128: software_init();
  3357  016022  EC87  F0A9         	call	_software_init	;wreg free
  3358  016026  D030               	goto	l13178
  3359  016028                     l13136:
  3360                           
  3361                           ;main.c: 134: INTCONbits.GIE = 0;
  3362  016028  9EF2               	bcf	intcon,7,c	;volatile
  3363                           
  3364                           ;main.c: 135: RTCC_task();
  3365  01602A  EC00  F0B4         	call	_RTCC_task	;wreg free
  3366                           
  3367                           ;main.c: 136: INTCONbits.GIE = 1;
  3368  01602E  8EF2               	bsf	intcon,7,c	;volatile
  3369                           
  3370                           ;main.c: 137: INTCONbits.GIE = 0;
  3371  016030  9EF2               	bcf	intcon,7,c	;volatile
  3372                           
  3373                           ;main.c: 138: USB_CDC_task();
  3374  016032  ECB5  F09F         	call	_USB_CDC_task	;wreg free
  3375                           
  3376                           ;main.c: 139: INTCONbits.GIE = 1;
  3377  016036  8EF2               	bsf	intcon,7,c	;volatile
  3378                           
  3379                           ;main.c: 140: INTCONbits.GIE = 0;
  3380  016038  9EF2               	bcf	intcon,7,c	;volatile
  3381                           
  3382                           ;main.c: 141: terminal_task(&usb_tx, &usb_rx);
  3383  01603A  0EC6               	movlw	low _usb_tx
  3384  01603C  0101               	movlb	1	; () banked
  3385  01603E  6F92               	movwf	terminal_task@tx& (0+255),b
  3386  016040  0E02               	movlw	high _usb_tx
  3387  016042  0101               	movlb	1	; () banked
  3388  016044  6F93               	movwf	(terminal_task@tx+1)& (0+255),b
  3389  016046  0EBE               	movlw	low _usb_rx
  3390  016048  0101               	movlb	1	; () banked
  3391  01604A  6F94               	movwf	terminal_task@rx& (0+255),b
  3392  01604C  0E02               	movlw	high _usb_rx
  3393  01604E  0101               	movlb	1	; () banked
  3394  016050  6F95               	movwf	(terminal_task@rx+1)& (0+255),b
  3395  016052  ECC6  F086         	call	_terminal_task	;wreg free
  3396                           
  3397                           ;main.c: 142: INTCONbits.GIE = 1;
  3398  016056  8EF2               	bsf	intcon,7,c	;volatile
  3399                           
  3400                           ;main.c: 143: INTCONbits.GIE = 0;
  3401  016058  9EF2               	bcf	intcon,7,c	;volatile
  3402                           
  3403                           ;main.c: 144: normal_task();
  3404  01605A  EC2E  F0A7         	call	_normal_task	;wreg free
  3405                           
  3406                           ;main.c: 145: INTCONbits.GIE = 1;
  3407  01605E  8EF2               	bsf	intcon,7,c	;volatile
  3408                           
  3409                           ;main.c: 147: INTCONbits.GIE = 0;
  3410  016060  9EF2               	bcf	intcon,7,c	;volatile
  3411                           
  3412                           ;main.c: 148: ctmu_task();
  3413  016062  EC7E  F0B6         	call	_ctmu_task	;wreg free
  3414                           
  3415                           ;main.c: 149: if (ctmu_m.flag.pressing &&
  3416                           ;main.c: 150: port[0].ctmu.flag.pressing &&
  3417                           ;main.c: 151: port[1].ctmu.flag.pressing &&
  3418                           ;main.c: 152: port[2].ctmu.flag.pressing) {
  3419  016066  0100               	movlb	0	; () banked
  3420  016068  A1FF               	btfss	(_ctmu_m+3)& (0+255),0,b
  3421  01606A  D00A               	goto	l13174
  3422                           
  3423                           ; BSR set to: 0
  3424  01606C  0101               	movlb	1	; () banked
  3425  01606E  A131               	btfss	(_port+3)& (0+255),0,b
  3426  016070  D007               	goto	l13174
  3427                           
  3428                           ; BSR set to: 1
  3429  016072  0101               	movlb	1	; () banked
  3430  016074  A148               	btfss	(_port+26)& (0+255),0,b
  3431  016076  D004               	goto	l13174
  3432                           
  3433                           ; BSR set to: 1
  3434  016078  0101               	movlb	1	; () banked
  3435  01607A  B15F               	btfsc	(_port+49)& (0+255),0,b
  3436                           
  3437                           ; BSR set to: 1
  3438                           ;main.c: 153: bootload();
  3439  01607C  EC86  F0B3         	call	_bootload	;wreg free
  3440  016080                     l13174:
  3441                           
  3442                           ;main.c: 154: }
  3443                           ;main.c: 155: INTCONbits.GIE = 1;
  3444  016080  8EF2               	bsf	intcon,7,c	;volatile
  3445                           
  3446                           ;main.c: 157: INTCONbits.GIE = 0;
  3447  016082  9EF2               	bcf	intcon,7,c	;volatile
  3448                           
  3449                           ;main.c: 158: sleep_task();
  3450  016084  EC5C  F0A6         	call	_sleep_task	;wreg free
  3451  016088                     l13178:
  3452                           
  3453                           ;main.c: 159: INTCONbits.GIE = 1;
  3454  016088  8EF2               	bsf	intcon,7,c	;volatile
  3455  01608A  D7CE               	goto	l13136
  3456  01608C                     __end_of_main:
  3457                           	opt stack 0
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           intcon	equ	0xFF2
  3463                           postinc0	equ	0xFEE
  3464                           wreg	equ	0xFE8
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           
  3469 ;; *************** function _terminal_task *****************
  3470 ;; Defined at:
  3471 ;;		line 8 in file "../My_library/My_terminal.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3474 ;;		 -> usb_tx(8), 
  3475 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3476 ;;		 -> usb_rx(8), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  i               1  102[BANK6 ] unsigned char 
  3479 ;;  i               1  104[BANK6 ] unsigned char 
  3480 ;;  ascii           1  103[BANK6 ] unsigned char 
  3481 ;;  buf           100    0[BANK6 ] unsigned char [100]
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3491 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0     105       0       0       0       0       
      +0       0       0       0
  3493 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Totals:         0       0       6       0       0       0       0     105       0       0       0       0       
      +0       0       0       0
  3495 ;;Total ram usage:      111 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:   20
  3498 ;; This function calls:
  3499 ;;		_ringbuf_backspace
  3500 ;;		_ringbuf_delete
  3501 ;;		_ringbuf_init
  3502 ;;		_ringbuf_num
  3503 ;;		_ringbuf_pop
  3504 ;;		_ringbuf_put
  3505 ;;		_ringbuf_put_num
  3506 ;;		_ringbuf_put_str
  3507 ;;		_terminal_operation
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text1
  3514  010D8C                     __ptext1:
  3515                           	opt stack 0
  3516  010D8C                     _terminal_task:
  3517                           	opt stack 10
  3518                           
  3519                           ;My_terminal.c: 9: static ringbuf_t command;
  3520                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3521                           ;My_terminal.c: 11: if (command_init == 0) {
  3522                           
  3523                           ;incstack = 0
  3524  010D8C  0101               	movlb	1	; () banked
  3525  010D8E  512D               	movf	terminal_task@command_init& (0+255),w,b
  3526  010D90  0101               	movlb	1	; () banked
  3527  010D92  A4D8               	btfss	status,2,c
  3528  010D94  D016               	goto	l12616
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;My_terminal.c: 12: command_init = 1;
  3532  010D96  0E01               	movlw	1
  3533  010D98  0101               	movlb	1	; () banked
  3534  010D9A  6F2D               	movwf	terminal_task@command_init& (0+255),b
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;My_terminal.c: 13: char buf[100];
  3538                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3539  010D9C  0E81               	movlw	low terminal_task@command
  3540  010D9E  0100               	movlb	0	; () banked
  3541  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3542  010DA2  0E01               	movlw	high terminal_task@command
  3543  010DA4  0100               	movlb	0	; () banked
  3544  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3545  010DA8  0E00               	movlw	low terminal_task@buf
  3546  010DAA  0100               	movlb	0	; () banked
  3547  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3548  010DAE  0E06               	movlw	high terminal_task@buf
  3549  010DB0  0100               	movlb	0	; () banked
  3550  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3551  010DB4  0E00               	movlw	0
  3552  010DB6  0100               	movlb	0	; () banked
  3553  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3554  010DBA  0E64               	movlw	100
  3555  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3556  010DBE  ECC1  F0B2         	call	_ringbuf_init	;wreg free
  3557  010DC2                     l12616:
  3558                           
  3559                           ;My_terminal.c: 15: }
  3560                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3561  010DC2  C194  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3562  010DC6  C195  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3563  010DCA  EC9C  F0A1         	call	_ringbuf_num	;wreg free
  3564  010DCE  0100               	movlb	0	; () banked
  3565  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3566  010DD2  0100               	movlb	0	; () banked
  3567  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3568  010DD6  B4D8               	btfsc	status,2,c
  3569  010DD8  0012               	return	
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3573  010DDA  C194  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3574  010DDE  C195  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3575  010DE2  ECFC  F0A7         	call	_ringbuf_pop	;wreg free
  3576  010DE6  0106               	movlb	6	; () banked
  3577  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3578                           
  3579                           ;My_terminal.c: 18: switch (ascii) {
  3580  010DEA  D176               	goto	l12680
  3581  010DEC                     l12620:
  3582                           
  3583                           ; BSR set to: 6
  3584                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3585  010DEC  0E81               	movlw	low terminal_task@command
  3586  010DEE  0100               	movlb	0	; () banked
  3587  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3588  010DF2  0E01               	movlw	high terminal_task@command
  3589  010DF4  0100               	movlb	0	; () banked
  3590  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3591  010DF8  0E00               	movlw	0
  3592  010DFA  0100               	movlb	0	; () banked
  3593  010DFC  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3594  010DFE  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  3595                           
  3596                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3597  010E02  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3598  010E06  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3599  010E0A  0E09               	movlw	9
  3600  010E0C  0100               	movlb	0	; () banked
  3601  010E0E  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3602  010E10  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  3603                           
  3604                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3605  010E14  0E81               	movlw	low terminal_task@command
  3606  010E16  0100               	movlb	0	; () banked
  3607  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3608  010E1A  0E01               	movlw	high terminal_task@command
  3609  010E1C  0100               	movlb	0	; () banked
  3610  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3611  010E20  EC9C  F0A1         	call	_ringbuf_num	;wreg free
  3612  010E24  0EFF               	movlw	255
  3613  010E26  0100               	movlb	0	; () banked
  3614  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3615  010E2A  0106               	movlb	6	; () banked
  3616  010E2C  6F64               	movwf	_terminal_task$7033& (0+255),b
  3617  010E2E  0EFF               	movlw	255
  3618  010E30  0100               	movlb	0	; () banked
  3619  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3620  010E34  0106               	movlb	6	; () banked
  3621  010E36  6F65               	movwf	(_terminal_task$7033+1)& (0+255),b
  3622                           
  3623                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3624  010E38  C192  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3625  010E3C  C193  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3626  010E40  C664  F085         	movff	_terminal_task$7033,ringbuf_put_num@value
  3627  010E44  C665  F086         	movff	_terminal_task$7033+1,ringbuf_put_num@value+1
  3628  010E48  0E02               	movlw	2
  3629  010E4A  0100               	movlb	0	; () banked
  3630  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3631  010E4E  ECE5  F0AE         	call	_ringbuf_put_num	;wreg free
  3632                           
  3633                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3634  010E52  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3635  010E56  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3636  010E5A  0E0A               	movlw	10
  3637  010E5C  0100               	movlb	0	; () banked
  3638  010E5E  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3639  010E60  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  3640                           
  3641                           ;My_terminal.c: 24: static char op0[25];
  3642                           ;My_terminal.c: 25: static char op1[25];
  3643                           ;My_terminal.c: 26: static char op2[25];
  3644                           ;My_terminal.c: 27: static char op3[25];
  3645                           ;My_terminal.c: 28: uint8_t i;
  3646                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3647  010E64  0E00               	movlw	0
  3648  010E66  0106               	movlb	6	; () banked
  3649  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3650  010E6A  D002               	goto	l12626
  3651  010E6C                     l12624:
  3652                           
  3653                           ; BSR set to: 6
  3654  010E6C  0106               	movlb	6	; () banked
  3655  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3656  010E70                     l12626:
  3657                           
  3658                           ; BSR set to: 6
  3659  010E70  0E81               	movlw	low terminal_task@command
  3660  010E72  0100               	movlb	0	; () banked
  3661  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3662  010E76  0E01               	movlw	high terminal_task@command
  3663  010E78  0100               	movlb	0	; () banked
  3664  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3665  010E7C  ECFC  F0A7         	call	_ringbuf_pop	;wreg free
  3666  010E80  0101               	movlb	1	; () banked
  3667  010E82  6F96               	movwf	??_terminal_task& (0+255),b
  3668  010E84  0106               	movlb	6	; () banked
  3669  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3670  010E88  0D01               	mullw	1
  3671  010E8A  0E42               	movlw	low terminal_task@op0
  3672  010E8C  24F3               	addwf	prodl,w,c
  3673  010E8E  6ED9               	movwf	fsr2l,c
  3674  010E90  0E02               	movlw	high terminal_task@op0
  3675  010E92  20F4               	addwfc	prodh,w,c
  3676  010E94  6EDA               	movwf	fsr2h,c
  3677  010E96  C196  FFDF         	movff	??_terminal_task,indf2
  3678  010E9A  50DF               	movf	indf2,w,c
  3679  010E9C  A4D8               	btfss	status,2,c
  3680  010E9E  D7E6               	goto	l12624
  3681                           
  3682                           ; BSR set to: 6
  3683                           ;My_terminal.c: 30: op0[i] = '\0';
  3684                           
  3685                           ; BSR set to: 6
  3686  010EA0  0106               	movlb	6	; () banked
  3687  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3688  010EA4  0D01               	mullw	1
  3689  010EA6  0E42               	movlw	low terminal_task@op0
  3690  010EA8  24F3               	addwf	prodl,w,c
  3691  010EAA  6ED9               	movwf	fsr2l,c
  3692  010EAC  0E02               	movlw	high terminal_task@op0
  3693  010EAE  20F4               	addwfc	prodh,w,c
  3694  010EB0  6EDA               	movwf	fsr2h,c
  3695  010EB2  0E00               	movlw	0
  3696  010EB4  6EDF               	movwf	indf2,c
  3697                           
  3698                           ; BSR set to: 6
  3699                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3700  010EB6  0E00               	movlw	0
  3701  010EB8  0106               	movlb	6	; () banked
  3702  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3703  010EBC  D002               	goto	l12634
  3704  010EBE                     l12632:
  3705                           
  3706                           ; BSR set to: 6
  3707  010EBE  0106               	movlb	6	; () banked
  3708  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3709  010EC2                     l12634:
  3710                           
  3711                           ; BSR set to: 6
  3712  010EC2  0E81               	movlw	low terminal_task@command
  3713  010EC4  0100               	movlb	0	; () banked
  3714  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3715  010EC8  0E01               	movlw	high terminal_task@command
  3716  010ECA  0100               	movlb	0	; () banked
  3717  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3718  010ECE  ECFC  F0A7         	call	_ringbuf_pop	;wreg free
  3719  010ED2  0101               	movlb	1	; () banked
  3720  010ED4  6F96               	movwf	??_terminal_task& (0+255),b
  3721  010ED6  0106               	movlb	6	; () banked
  3722  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3723  010EDA  0D01               	mullw	1
  3724  010EDC  0E5B               	movlw	low terminal_task@op1
  3725  010EDE  24F3               	addwf	prodl,w,c
  3726  010EE0  6ED9               	movwf	fsr2l,c
  3727  010EE2  0E02               	movlw	high terminal_task@op1
  3728  010EE4  20F4               	addwfc	prodh,w,c
  3729  010EE6  6EDA               	movwf	fsr2h,c
  3730  010EE8  C196  FFDF         	movff	??_terminal_task,indf2
  3731  010EEC  50DF               	movf	indf2,w,c
  3732  010EEE  A4D8               	btfss	status,2,c
  3733  010EF0  D7E6               	goto	l12632
  3734                           
  3735                           ; BSR set to: 6
  3736                           ;My_terminal.c: 32: op1[i] = '\0';
  3737                           
  3738                           ; BSR set to: 6
  3739  010EF2  0106               	movlb	6	; () banked
  3740  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3741  010EF6  0D01               	mullw	1
  3742  010EF8  0E5B               	movlw	low terminal_task@op1
  3743  010EFA  24F3               	addwf	prodl,w,c
  3744  010EFC  6ED9               	movwf	fsr2l,c
  3745  010EFE  0E02               	movlw	high terminal_task@op1
  3746  010F00  20F4               	addwfc	prodh,w,c
  3747  010F02  6EDA               	movwf	fsr2h,c
  3748  010F04  0E00               	movlw	0
  3749  010F06  6EDF               	movwf	indf2,c
  3750                           
  3751                           ; BSR set to: 6
  3752                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3753  010F08  0E00               	movlw	0
  3754  010F0A  0106               	movlb	6	; () banked
  3755  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3756  010F0E  D002               	goto	l12642
  3757  010F10                     l12640:
  3758                           
  3759                           ; BSR set to: 6
  3760  010F10  0106               	movlb	6	; () banked
  3761  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3762  010F14                     l12642:
  3763                           
  3764                           ; BSR set to: 6
  3765  010F14  0E81               	movlw	low terminal_task@command
  3766  010F16  0100               	movlb	0	; () banked
  3767  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3768  010F1A  0E01               	movlw	high terminal_task@command
  3769  010F1C  0100               	movlb	0	; () banked
  3770  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3771  010F20  ECFC  F0A7         	call	_ringbuf_pop	;wreg free
  3772  010F24  0101               	movlb	1	; () banked
  3773  010F26  6F96               	movwf	??_terminal_task& (0+255),b
  3774  010F28  0106               	movlb	6	; () banked
  3775  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3776  010F2C  0D01               	mullw	1
  3777  010F2E  0E74               	movlw	low terminal_task@op2
  3778  010F30  24F3               	addwf	prodl,w,c
  3779  010F32  6ED9               	movwf	fsr2l,c
  3780  010F34  0E02               	movlw	high terminal_task@op2
  3781  010F36  20F4               	addwfc	prodh,w,c
  3782  010F38  6EDA               	movwf	fsr2h,c
  3783  010F3A  C196  FFDF         	movff	??_terminal_task,indf2
  3784  010F3E  50DF               	movf	indf2,w,c
  3785  010F40  A4D8               	btfss	status,2,c
  3786  010F42  D7E6               	goto	l12640
  3787                           
  3788                           ; BSR set to: 6
  3789                           ;My_terminal.c: 34: op2[i] = '\0';
  3790                           
  3791                           ; BSR set to: 6
  3792  010F44  0106               	movlb	6	; () banked
  3793  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3794  010F48  0D01               	mullw	1
  3795  010F4A  0E74               	movlw	low terminal_task@op2
  3796  010F4C  24F3               	addwf	prodl,w,c
  3797  010F4E  6ED9               	movwf	fsr2l,c
  3798  010F50  0E02               	movlw	high terminal_task@op2
  3799  010F52  20F4               	addwfc	prodh,w,c
  3800  010F54  6EDA               	movwf	fsr2h,c
  3801  010F56  0E00               	movlw	0
  3802  010F58  6EDF               	movwf	indf2,c
  3803                           
  3804                           ; BSR set to: 6
  3805                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3806  010F5A  0E00               	movlw	0
  3807  010F5C  0106               	movlb	6	; () banked
  3808  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3809  010F60  D002               	goto	l12650
  3810  010F62                     l12648:
  3811                           
  3812                           ; BSR set to: 6
  3813  010F62  0106               	movlb	6	; () banked
  3814  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3815  010F66                     l12650:
  3816                           
  3817                           ; BSR set to: 6
  3818  010F66  0E81               	movlw	low terminal_task@command
  3819  010F68  0100               	movlb	0	; () banked
  3820  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3821  010F6C  0E01               	movlw	high terminal_task@command
  3822  010F6E  0100               	movlb	0	; () banked
  3823  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3824  010F72  ECFC  F0A7         	call	_ringbuf_pop	;wreg free
  3825  010F76  0101               	movlb	1	; () banked
  3826  010F78  6F96               	movwf	??_terminal_task& (0+255),b
  3827  010F7A  0106               	movlb	6	; () banked
  3828  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3829  010F7E  0D01               	mullw	1
  3830  010F80  0E8D               	movlw	low terminal_task@op3
  3831  010F82  24F3               	addwf	prodl,w,c
  3832  010F84  6ED9               	movwf	fsr2l,c
  3833  010F86  0E02               	movlw	high terminal_task@op3
  3834  010F88  20F4               	addwfc	prodh,w,c
  3835  010F8A  6EDA               	movwf	fsr2h,c
  3836  010F8C  C196  FFDF         	movff	??_terminal_task,indf2
  3837  010F90  50DF               	movf	indf2,w,c
  3838  010F92  A4D8               	btfss	status,2,c
  3839  010F94  D7E6               	goto	l12648
  3840                           
  3841                           ; BSR set to: 6
  3842                           ;My_terminal.c: 36: op3[i] = '\0';
  3843                           
  3844                           ; BSR set to: 6
  3845  010F96  0106               	movlb	6	; () banked
  3846  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3847  010F9A  0D01               	mullw	1
  3848  010F9C  0E8D               	movlw	low terminal_task@op3
  3849  010F9E  24F3               	addwf	prodl,w,c
  3850  010FA0  6ED9               	movwf	fsr2l,c
  3851  010FA2  0E02               	movlw	high terminal_task@op3
  3852  010FA4  20F4               	addwfc	prodh,w,c
  3853  010FA6  6EDA               	movwf	fsr2h,c
  3854  010FA8  0E00               	movlw	0
  3855  010FAA  6EDF               	movwf	indf2,c
  3856                           
  3857                           ; BSR set to: 6
  3858                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3859  010FAC  C192  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3860  010FB0  C193  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3861  010FB4  0E42               	movlw	low terminal_task@op0
  3862  010FB6  0100               	movlb	0	; () banked
  3863  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3864  010FBA  0E02               	movlw	high terminal_task@op0
  3865  010FBC  0100               	movlb	0	; () banked
  3866  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3867  010FC0  0E5B               	movlw	low terminal_task@op1
  3868  010FC2  0100               	movlb	0	; () banked
  3869  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3870  010FC6  0E02               	movlw	high terminal_task@op1
  3871  010FC8  0100               	movlb	0	; () banked
  3872  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3873  010FCC  0E74               	movlw	low terminal_task@op2
  3874  010FCE  0100               	movlb	0	; () banked
  3875  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3876  010FD2  0E02               	movlw	high terminal_task@op2
  3877  010FD4  0100               	movlb	0	; () banked
  3878  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3879  010FD8  0E8D               	movlw	low terminal_task@op3
  3880  010FDA  0100               	movlb	0	; () banked
  3881  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3882  010FDE  0E02               	movlw	high terminal_task@op3
  3883  010FE0  0100               	movlb	0	; () banked
  3884  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3885  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3886                           
  3887                           ;My_terminal.c: 38: break;
  3888  010FE8  0012               	return	
  3889  010FEA                     l12656:
  3890                           
  3891                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3892  010FEA  0E81               	movlw	low terminal_task@command
  3893  010FEC  0100               	movlb	0	; () banked
  3894  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3895  010FF0  0E01               	movlw	high terminal_task@command
  3896  010FF2  0100               	movlb	0	; () banked
  3897  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3898  010FF6  0E00               	movlw	0
  3899  010FF8  0100               	movlb	0	; () banked
  3900  010FFA  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3901  010FFC  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  3902                           
  3903                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3904  011000  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3905  011004  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3906  011008  0E20               	movlw	32
  3907  01100A  0100               	movlb	0	; () banked
  3908  01100C  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3909  01100E  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  3910                           
  3911                           ;My_terminal.c: 42: break;
  3912  011012  0012               	return	
  3913  011014                     l12658:
  3914                           
  3915                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3916  011014  0E81               	movlw	low terminal_task@command
  3917  011016  0100               	movlb	0	; () banked
  3918  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3919  01101A  0E01               	movlw	high terminal_task@command
  3920  01101C  0100               	movlb	0	; () banked
  3921  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3922  011020  EC88  F0AD         	call	_ringbuf_backspace	;wreg free
  3923                           
  3924                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3925  011024  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3926  011028  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3927  01102C  0EE3               	movlw	low STR_19
  3928  01102E  0100               	movlb	0	; () banked
  3929  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3930  011032  0EFF               	movlw	high STR_19
  3931  011034  0100               	movlb	0	; () banked
  3932  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3933  011038  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  3934                           
  3935                           ;My_terminal.c: 46: break;
  3936  01103C  0012               	return	
  3937  01103E                     l12662:
  3938                           
  3939                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3940  01103E  0E00               	movlw	0
  3941  011040  0106               	movlb	6	; () banked
  3942  011042  6F66               	movwf	terminal_task@i_4539& (0+255),b
  3943  011044  D00E               	goto	l12668
  3944  011046                     l12664:
  3945  011046  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3946  01104A  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3947  01104E  0EE3               	movlw	low STR_19
  3948  011050  0100               	movlb	0	; () banked
  3949  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3950  011054  0EFF               	movlw	high STR_19
  3951  011056  0100               	movlb	0	; () banked
  3952  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3953  01105A  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  3954  01105E  0106               	movlb	6	; () banked
  3955  011060  2B66               	incf	terminal_task@i_4539& (0+255),f,b
  3956  011062                     l12668:
  3957                           
  3958                           ; BSR set to: 6
  3959  011062  0E81               	movlw	low terminal_task@command
  3960  011064  0100               	movlb	0	; () banked
  3961  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3962  011068  0E01               	movlw	high terminal_task@command
  3963  01106A  0100               	movlb	0	; () banked
  3964  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3965  01106E  EC9C  F0A1         	call	_ringbuf_num	;wreg free
  3966  011072  0106               	movlb	6	; () banked
  3967  011074  5166               	movf	terminal_task@i_4539& (0+255),w,b
  3968  011076  0101               	movlb	1	; () banked
  3969  011078  6F96               	movwf	??_terminal_task& (0+255),b
  3970  01107A  6B97               	clrf	(??_terminal_task+1)& (0+255),b
  3971  01107C  0100               	movlb	0	; () banked
  3972  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3973  011080  0101               	movlb	1	; () banked
  3974  011082  5D96               	subwf	??_terminal_task& (0+255),w,b
  3975  011084  0100               	movlb	0	; () banked
  3976  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3977  011088  0101               	movlb	1	; () banked
  3978  01108A  5997               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3979  01108C  A0D8               	btfss	status,0,c
  3980  01108E  D7DB               	goto	l12664
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3984                           
  3985                           ; BSR set to: 1
  3986  011090  0E81               	movlw	low terminal_task@command
  3987  011092  0100               	movlb	0	; () banked
  3988  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3989  011096  0E01               	movlw	high terminal_task@command
  3990  011098  0100               	movlb	0	; () banked
  3991  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3992  01109C  ECD6  F0B5         	call	_ringbuf_delete	;wreg free
  3993                           
  3994                           ;My_terminal.c: 50: break;
  3995  0110A0  0012               	return	
  3996  0110A2                     l12672:
  3997                           
  3998                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3999  0110A2  0E1F               	movlw	31
  4000  0110A4  0106               	movlb	6	; () banked
  4001  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  4002  0110A8  0012               	return	
  4003                           
  4004                           ; BSR set to: 6
  4005  0110AA  0E7F               	movlw	127
  4006  0110AC  0106               	movlb	6	; () banked
  4007  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  4008  0110B0  0012               	return	
  4009                           
  4010                           ; BSR set to: 6
  4011                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  4012  0110B2  0E81               	movlw	low terminal_task@command
  4013  0110B4  0100               	movlb	0	; () banked
  4014  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4015  0110B8  0E01               	movlw	high terminal_task@command
  4016  0110BA  0100               	movlb	0	; () banked
  4017  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4018  0110BE  C667  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  4019  0110C2  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  4020                           
  4021                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  4022  0110C6  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4023  0110CA  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4024  0110CE  C667  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  4025  0110D2  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  4026                           
  4027                           ;My_terminal.c: 57: }
  4028                           
  4029                           ;My_terminal.c: 55: }
  4030                           ;My_terminal.c: 56: break;
  4031  0110D6  0012               	return	
  4032  0110D8                     l12680:
  4033  0110D8  0106               	movlb	6	; () banked
  4034  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  4035                           
  4036                           ; Switch size 1, requested type "space"
  4037                           ; Number of cases is 4, Range of values is 8 to 127
  4038                           ; switch strategies available:
  4039                           ; Name         Instructions Cycles
  4040                           ; simple_byte           13     7 (average)
  4041                           ;	Chosen strategy is simple_byte
  4042  0110DC  0A08               	xorlw	8	; case 8
  4043  0110DE  B4D8               	btfsc	status,2,c
  4044  0110E0  D799               	goto	l12658
  4045  0110E2  0A05               	xorlw	5	; case 13
  4046  0110E4  B4D8               	btfsc	status,2,c
  4047  0110E6  D682               	goto	l12620
  4048  0110E8  0A2D               	xorlw	45	; case 32
  4049  0110EA  B4D8               	btfsc	status,2,c
  4050  0110EC  D77E               	goto	l12656
  4051  0110EE  0A5F               	xorlw	95	; case 127
  4052  0110F0  B4D8               	btfsc	status,2,c
  4053  0110F2  D7A5               	goto	l12662
  4054  0110F4  D7D6               	goto	l12672
  4055  0110F6                     __end_of_terminal_task:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           tblptrh	equ	0xFF7
  4059                           tblptrl	equ	0xFF6
  4060                           tablat	equ	0xFF5
  4061                           prodh	equ	0xFF4
  4062                           prodl	equ	0xFF3
  4063                           intcon	equ	0xFF2
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           postdec1	equ	0xFE5
  4067                           fsr1h	equ	0xFE2
  4068                           fsr1l	equ	0xFE1
  4069                           indf2	equ	0xFDF
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function _terminal_operation *****************
  4075 ;; Defined at:
  4076 ;;		line 200 in file "ChargeStation_task.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4079 ;;		 -> usb_tx(8), 
  4080 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4081 ;;		 -> terminal_task@op0(25), 
  4082 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4083 ;;		 -> terminal_task@op1(25), 
  4084 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4085 ;;		 -> terminal_task@op2(25), 
  4086 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4087 ;;		 -> terminal_task@op3(25), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  percentage      1  133[BANK0 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;		None               void
  4092 ;; Registers used:
  4093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4099 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4102 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4103 ;;Total ram usage:       11 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   19
  4106 ;; This function calls:
  4107 ;;		_atoi
  4108 ;;		_bootload
  4109 ;;		_ctmu_set_ratio
  4110 ;;		_ringbuf_put_str
  4111 ;;		_strcmp
  4112 ;;		_terminal_time
  4113 ;; This function is called by:
  4114 ;;		_terminal_task
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text2
  4119  0120C4                     __ptext2:
  4120                           	opt stack 0
  4121  0120C4                     _terminal_operation:
  4122                           	opt stack 10
  4123                           
  4124                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4125                           
  4126                           ;incstack = 0
  4127  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4128  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4129  0120CC  0ECF               	movlw	low STR_51
  4130  0120CE  0100               	movlb	0	; () banked
  4131  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4132  0120D2  0EFF               	movlw	high STR_51
  4133  0120D4  0100               	movlb	0	; () banked
  4134  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4135  0120D8  EC0C  F0B2         	call	_strcmp	;wreg free
  4136  0120DC  0100               	movlb	0	; () banked
  4137  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4138  0120E0  0100               	movlb	0	; () banked
  4139  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4140  0120E4  B4D8               	btfsc	status,2,c
  4141  0120E6  D012               	goto	l12266
  4142                           
  4143                           ; BSR set to: 0
  4144  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4145  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4146  0120F0  0EF1               	movlw	low STR_52
  4147  0120F2  0100               	movlb	0	; () banked
  4148  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4149  0120F6  0EFF               	movlw	high STR_52
  4150  0120F8  0100               	movlb	0	; () banked
  4151  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4152  0120FC  EC0C  F0B2         	call	_strcmp	;wreg free
  4153  012100  0100               	movlb	0	; () banked
  4154  012102  5160               	movf	?_strcmp& (0+255),w,b
  4155  012104  0100               	movlb	0	; () banked
  4156  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4157  012108  A4D8               	btfss	status,2,c
  4158  01210A  D00C               	goto	l12268
  4159  01210C                     l12266:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4163                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4164                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4165                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4166                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4167                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4168                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4169                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4170  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4171  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4172  012114  0EE6               	movlw	low STR_53
  4173  012116  0100               	movlb	0	; () banked
  4174  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4175  01211A  0EFB               	movlw	high STR_53
  4176  01211C  0100               	movlb	0	; () banked
  4177  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4178  012120  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  4179  012124                     l12268:
  4180                           
  4181                           ;ChargeStation_task.c: 216: }
  4182                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4183  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4184  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4185  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4186  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4187  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4188  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4189  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4190  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4191  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4192                           
  4193                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4194  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4195  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4196  012150  0E67               	movlw	low STR_54
  4197  012152  0100               	movlb	0	; () banked
  4198  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4199  012156  0EFF               	movlw	high STR_54
  4200  012158  0100               	movlb	0	; () banked
  4201  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4202  01215C  EC0C  F0B2         	call	_strcmp	;wreg free
  4203  012160  0100               	movlb	0	; () banked
  4204  012162  5160               	movf	?_strcmp& (0+255),w,b
  4205  012164  0100               	movlb	0	; () banked
  4206  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4207  012168  B4D8               	btfsc	status,2,c
  4208                           
  4209                           ; BSR set to: 0
  4210  01216A  00FF               	reset		;# 
  4211                           
  4212                           ;ChargeStation_task.c: 220: }
  4213                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4214  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4215  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4216  012174  0E70               	movlw	low STR_55
  4217  012176  0100               	movlb	0	; () banked
  4218  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4219  01217A  0EFF               	movlw	high STR_55
  4220  01217C  0100               	movlb	0	; () banked
  4221  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4222  012180  EC0C  F0B2         	call	_strcmp	;wreg free
  4223  012184  0100               	movlb	0	; () banked
  4224  012186  5160               	movf	?_strcmp& (0+255),w,b
  4225  012188  0100               	movlb	0	; () banked
  4226  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4227  01218C  B4D8               	btfsc	status,2,c
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;ChargeStation_task.c: 222: bootload();
  4231  01218E  EC86  F0B3         	call	_bootload	;wreg free
  4232                           
  4233                           ;ChargeStation_task.c: 223: }
  4234                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4235  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4236  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4237  01219A  0EEB               	movlw	low STR_56
  4238  01219C  0100               	movlb	0	; () banked
  4239  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4240  0121A0  0EFF               	movlw	high STR_56
  4241  0121A2  0100               	movlb	0	; () banked
  4242  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4243  0121A6  EC0C  F0B2         	call	_strcmp	;wreg free
  4244  0121AA  0100               	movlb	0	; () banked
  4245  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4246  0121AE  0100               	movlb	0	; () banked
  4247  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4248  0121B2  B4D8               	btfsc	status,2,c
  4249  0121B4  D012               	goto	l12282
  4250                           
  4251                           ; BSR set to: 0
  4252  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4253  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4254  0121BE  0E25               	movlw	low STR_57
  4255  0121C0  0100               	movlb	0	; () banked
  4256  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4257  0121C4  0EFF               	movlw	high STR_57
  4258  0121C6  0100               	movlb	0	; () banked
  4259  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4260  0121CA  EC0C  F0B2         	call	_strcmp	;wreg free
  4261  0121CE  0100               	movlb	0	; () banked
  4262  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4263  0121D2  0100               	movlb	0	; () banked
  4264  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4265  0121D6  A4D8               	btfss	status,2,c
  4266  0121D8  D003               	goto	l12284
  4267  0121DA                     l12282:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4271  0121DA  0E01               	movlw	1
  4272  0121DC  0101               	movlb	1	; () banked
  4273  0121DE  6F24               	movwf	_terminal_data_out& (0+255),b
  4274  0121E0                     l12284:
  4275                           
  4276                           ;ChargeStation_task.c: 226: }
  4277                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4278  0121E0  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4279  0121E4  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4280  0121E8  0EE6               	movlw	low (STR_19+3)
  4281  0121EA  0100               	movlb	0	; () banked
  4282  0121EC  6F62               	movwf	strcmp@s2& (0+255),b
  4283  0121EE  0EFF               	movlw	high (STR_19+3)
  4284  0121F0  0100               	movlb	0	; () banked
  4285  0121F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4286  0121F4  EC0C  F0B2         	call	_strcmp	;wreg free
  4287  0121F8  0100               	movlb	0	; () banked
  4288  0121FA  5160               	movf	?_strcmp& (0+255),w,b
  4289  0121FC  0100               	movlb	0	; () banked
  4290  0121FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4291  012200  A4D8               	btfss	status,2,c
  4292  012202  D003               	goto	l12288
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4296  012204  0E00               	movlw	0
  4297  012206  0101               	movlb	1	; () banked
  4298  012208  6F24               	movwf	_terminal_data_out& (0+255),b
  4299  01220A                     l12288:
  4300                           
  4301                           ;ChargeStation_task.c: 229: }
  4302                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4303  01220A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4304  01220E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4305  012212  0EBD               	movlw	low STR_59
  4306  012214  0100               	movlb	0	; () banked
  4307  012216  6F62               	movwf	strcmp@s2& (0+255),b
  4308  012218  0EFF               	movlw	high STR_59
  4309  01221A  0100               	movlb	0	; () banked
  4310  01221C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4311  01221E  EC0C  F0B2         	call	_strcmp	;wreg free
  4312  012222  0100               	movlb	0	; () banked
  4313  012224  5160               	movf	?_strcmp& (0+255),w,b
  4314  012226  0100               	movlb	0	; () banked
  4315  012228  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4316  01222A  A4D8               	btfss	status,2,c
  4317  01222C  0012               	return	
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4321  01222E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4322  012232  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4323  012236  0E48               	movlw	low STR_60
  4324  012238  0100               	movlb	0	; () banked
  4325  01223A  6F62               	movwf	strcmp@s2& (0+255),b
  4326  01223C  0EFF               	movlw	high STR_60
  4327  01223E  0100               	movlb	0	; () banked
  4328  012240  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4329  012242  EC0C  F0B2         	call	_strcmp	;wreg free
  4330  012246  0100               	movlb	0	; () banked
  4331  012248  5160               	movf	?_strcmp& (0+255),w,b
  4332  01224A  0100               	movlb	0	; () banked
  4333  01224C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4334  01224E  B4D8               	btfsc	status,2,c
  4335  012250  D012               	goto	l12294
  4336                           
  4337                           ; BSR set to: 0
  4338  012252  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4339  012256  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4340  01225A  0ED4               	movlw	low STR_61
  4341  01225C  0100               	movlb	0	; () banked
  4342  01225E  6F62               	movwf	strcmp@s2& (0+255),b
  4343  012260  0EFF               	movlw	high STR_61
  4344  012262  0100               	movlb	0	; () banked
  4345  012264  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4346  012266  EC0C  F0B2         	call	_strcmp	;wreg free
  4347  01226A  0100               	movlb	0	; () banked
  4348  01226C  5160               	movf	?_strcmp& (0+255),w,b
  4349  01226E  0100               	movlb	0	; () banked
  4350  012270  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4351  012272  A4D8               	btfss	status,2,c
  4352  012274  D02C               	goto	l12306
  4353  012276                     l12294:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4357  012276  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4358  01227A  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4359  01227E  ECAA  F0A0         	call	_atoi	;wreg free
  4360  012282  0100               	movlb	0	; () banked
  4361  012284  517C               	movf	?_atoi& (0+255),w,b
  4362  012286  0100               	movlb	0	; () banked
  4363  012288  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4367  01228A  0E65               	movlw	101
  4368  01228C  0100               	movlb	0	; () banked
  4369  01228E  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4370  012290  D012               	goto	l12304
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4374  012292  C0E5  F01C         	movff	terminal_operation@percentage,_ctmu_ratio
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4378  012296  501C               	movf	_ctmu_ratio,w,c
  4379  012298  EC13  F0A2         	call	_ctmu_set_ratio
  4380                           
  4381                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4382  01229C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4383  0122A0  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4384  0122A4  0E1D               	movlw	low STR_62
  4385  0122A6  0100               	movlb	0	; () banked
  4386  0122A8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4387  0122AA  0EFE               	movlw	high STR_62
  4388  0122AC  0100               	movlb	0	; () banked
  4389  0122AE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4390  0122B0  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  4391                           
  4392                           ;ChargeStation_task.c: 237: } else {
  4393  0122B4  D00C               	goto	l12306
  4394  0122B6                     l12304:
  4395                           
  4396                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4397  0122B6  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4398  0122BA  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4399  0122BE  0EBD               	movlw	low STR_63
  4400  0122C0  0100               	movlb	0	; () banked
  4401  0122C2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4402  0122C4  0EFD               	movlw	high STR_63
  4403  0122C6  0100               	movlb	0	; () banked
  4404  0122C8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4405  0122CA  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  4406  0122CE                     l12306:
  4407                           
  4408                           ;ChargeStation_task.c: 239: }
  4409                           ;ChargeStation_task.c: 240: }
  4410                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4411  0122CE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4412  0122D2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4413  0122D6  0EC3               	movlw	low STR_64
  4414  0122D8  0100               	movlb	0	; () banked
  4415  0122DA  6F62               	movwf	strcmp@s2& (0+255),b
  4416  0122DC  0EFF               	movlw	high STR_64
  4417  0122DE  0100               	movlb	0	; () banked
  4418  0122E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4419  0122E2  EC0C  F0B2         	call	_strcmp	;wreg free
  4420  0122E6  0100               	movlb	0	; () banked
  4421  0122E8  5160               	movf	?_strcmp& (0+255),w,b
  4422  0122EA  0100               	movlb	0	; () banked
  4423  0122EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4424  0122EE  B4D8               	btfsc	status,2,c
  4425  0122F0  D012               	goto	l12310
  4426                           
  4427                           ; BSR set to: 0
  4428  0122F2  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4429  0122F6  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4430  0122FA  0EDC               	movlw	low (STR_30+3)
  4431  0122FC  0100               	movlb	0	; () banked
  4432  0122FE  6F62               	movwf	strcmp@s2& (0+255),b
  4433  012300  0EFF               	movlw	high (STR_30+3)
  4434  012302  0100               	movlb	0	; () banked
  4435  012304  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4436  012306  EC0C  F0B2         	call	_strcmp	;wreg free
  4437  01230A  0100               	movlb	0	; () banked
  4438  01230C  5160               	movf	?_strcmp& (0+255),w,b
  4439  01230E  0100               	movlb	0	; () banked
  4440  012310  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4441  012312  A4D8               	btfss	status,2,c
  4442  012314  0012               	return	
  4443  012316                     l12310:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4447  012316  501C               	movf	_ctmu_ratio,w,c
  4448  012318  EC13  F0A2         	call	_ctmu_set_ratio
  4449                           
  4450                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4451  01231C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4452  012320  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4453  012324  0E4D               	movlw	low STR_66
  4454  012326  0100               	movlb	0	; () banked
  4455  012328  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4456  01232A  0EFE               	movlw	high STR_66
  4457  01232C  0100               	movlb	0	; () banked
  4458  01232E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4459  012330  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  4460  012334  0012               	return	
  4461  012336                     __end_of_terminal_operation:
  4462                           	opt stack 0
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           postinc0	equ	0xFEE
  4471                           wreg	equ	0xFE8
  4472                           postdec1	equ	0xFE5
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           indf2	equ	0xFDF
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _terminal_time *****************
  4481 ;; Defined at:
  4482 ;;		line 93 in file "../My_library/My_terminal.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4485 ;;		 -> usb_tx(8), 
  4486 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4487 ;;		 -> terminal_task@op0(25), 
  4488 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4489 ;;		 -> terminal_task@op1(25), 
  4490 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4491 ;;		 -> terminal_task@op2(25), 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;		None               void
  4496 ;; Registers used:
  4497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4503 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;Total ram usage:        9 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:   18
  4510 ;; This function calls:
  4511 ;;		_atoi
  4512 ;;		_month_length
  4513 ;;		_print_time
  4514 ;;		_strcmp
  4515 ;;		_terminal_at_hand
  4516 ;; This function is called by:
  4517 ;;		_terminal_operation
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text3
  4522  0109E0                     __ptext3:
  4523                           	opt stack 0
  4524  0109E0                     _terminal_time:
  4525                           	opt stack 10
  4526                           
  4527                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4528                           
  4529                           ;incstack = 0
  4530  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4531  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4532  0109E8  0E53               	movlw	low STR_25
  4533  0109EA  0100               	movlb	0	; () banked
  4534  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4535  0109EE  0EFF               	movlw	high STR_25
  4536  0109F0  0100               	movlb	0	; () banked
  4537  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4538  0109F4  EC0C  F0B2         	call	_strcmp	;wreg free
  4539  0109F8  0100               	movlb	0	; () banked
  4540  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4541  0109FC  0100               	movlb	0	; () banked
  4542  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4543  010A00  B4D8               	btfsc	status,2,c
  4544  010A02  D012               	goto	l11710
  4545                           
  4546                           ; BSR set to: 0
  4547  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4548  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4549  010A0C  0EEF               	movlw	low (STR_27+1)
  4550  010A0E  0100               	movlb	0	; () banked
  4551  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4552  010A12  0EFF               	movlw	high (STR_27+1)
  4553  010A14  0100               	movlb	0	; () banked
  4554  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4555  010A18  EC0C  F0B2         	call	_strcmp	;wreg free
  4556  010A1C  0100               	movlb	0	; () banked
  4557  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4558  010A20  0100               	movlb	0	; () banked
  4559  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4560  010A24  A4D8               	btfss	status,2,c
  4561  010A26  D006               	goto	l11712
  4562  010A28                     l11710:
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;My_terminal.c: 95: print_time(tx);
  4566  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4567  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4568  010A30  EC5D  F0AE         	call	_print_time	;wreg free
  4569  010A34                     l11712:
  4570                           
  4571                           ;My_terminal.c: 96: }
  4572                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4573  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4574  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4575  010A3C  0EEE               	movlw	low STR_27
  4576  010A3E  0100               	movlb	0	; () banked
  4577  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4578  010A42  0EFF               	movlw	high STR_27
  4579  010A44  0100               	movlb	0	; () banked
  4580  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4581  010A48  EC0C  F0B2         	call	_strcmp	;wreg free
  4582  010A4C  0100               	movlb	0	; () banked
  4583  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4584  010A50  0100               	movlb	0	; () banked
  4585  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4586  010A54  B4D8               	btfsc	status,2,c
  4587  010A56  D012               	goto	l11716
  4588                           
  4589                           ; BSR set to: 0
  4590  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4591  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4592  010A60  0E31               	movlw	low STR_28
  4593  010A62  0100               	movlb	0	; () banked
  4594  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4595  010A66  0EFF               	movlw	high STR_28
  4596  010A68  0100               	movlb	0	; () banked
  4597  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4598  010A6C  EC0C  F0B2         	call	_strcmp	;wreg free
  4599  010A70  0100               	movlb	0	; () banked
  4600  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4601  010A74  0100               	movlb	0	; () banked
  4602  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4603  010A78  A4D8               	btfss	status,2,c
  4604  010A7A  0012               	return	
  4605  010A7C                     l11716:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4609  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4610  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4611  010A84  0EE9               	movlw	low (STR_34+2)
  4612  010A86  0100               	movlb	0	; () banked
  4613  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4614  010A8A  0EFF               	movlw	high (STR_34+2)
  4615  010A8C  0100               	movlb	0	; () banked
  4616  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4617  010A90  EC0C  F0B2         	call	_strcmp	;wreg free
  4618  010A94  0100               	movlb	0	; () banked
  4619  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4620  010A98  0100               	movlb	0	; () banked
  4621  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4622  010A9C  B4D8               	btfsc	status,2,c
  4623  010A9E  D012               	goto	l11720
  4624                           
  4625                           ; BSR set to: 0
  4626  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4627  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4628  010AA8  0ED9               	movlw	low STR_30
  4629  010AAA  0100               	movlb	0	; () banked
  4630  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4631  010AAE  0EFF               	movlw	high STR_30
  4632  010AB0  0100               	movlb	0	; () banked
  4633  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4634  010AB4  EC0C  F0B2         	call	_strcmp	;wreg free
  4635  010AB8  0100               	movlb	0	; () banked
  4636  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4637  010ABC  0100               	movlb	0	; () banked
  4638  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4639  010AC0  A4D8               	btfss	status,2,c
  4640  010AC2  D01C               	goto	l11722
  4641  010AC4                     l11720:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4645  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4646  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4647  010ACC  0E7D               	movlw	low (_now+10)
  4648  010ACE  0100               	movlb	0	; () banked
  4649  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4650  010AD2  0E01               	movlw	high (_now+10)
  4651  010AD4  0100               	movlb	0	; () banked
  4652  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4653  010AD8  0E00               	movlw	0
  4654  010ADA  0100               	movlb	0	; () banked
  4655  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4656  010ADE  0E63               	movlw	99
  4657  010AE0  0100               	movlb	0	; () banked
  4658  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4659  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4660  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4661  010AEC  ECAA  F0A0         	call	_atoi	;wreg free
  4662  010AF0  0100               	movlb	0	; () banked
  4663  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4664  010AF4  0100               	movlb	0	; () banked
  4665  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4666  010AF8  ECAC  F0B1         	call	_terminal_at_hand	;wreg free
  4667  010AFC                     l11722:
  4668                           
  4669                           ;My_terminal.c: 100: }
  4670                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4671  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4672  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4673  010B04  0EF3               	movlw	low STR_31
  4674  010B06  0100               	movlb	0	; () banked
  4675  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4676  010B0A  0EFF               	movlw	high STR_31
  4677  010B0C  0100               	movlb	0	; () banked
  4678  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4679  010B10  EC0C  F0B2         	call	_strcmp	;wreg free
  4680  010B14  0100               	movlb	0	; () banked
  4681  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4682  010B18  0100               	movlb	0	; () banked
  4683  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4684  010B1C  B4D8               	btfsc	status,2,c
  4685  010B1E  D012               	goto	l11726
  4686                           
  4687                           ; BSR set to: 0
  4688  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4689  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4690  010B28  0EC9               	movlw	low STR_32
  4691  010B2A  0100               	movlb	0	; () banked
  4692  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4693  010B2E  0EFF               	movlw	high STR_32
  4694  010B30  0100               	movlb	0	; () banked
  4695  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4696  010B34  EC0C  F0B2         	call	_strcmp	;wreg free
  4697  010B38  0100               	movlb	0	; () banked
  4698  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4699  010B3C  0100               	movlb	0	; () banked
  4700  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4701  010B40  A4D8               	btfss	status,2,c
  4702  010B42  D01C               	goto	l11728
  4703  010B44                     l11726:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4707  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4708  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4709  010B4C  0E7C               	movlw	low (_now+9)
  4710  010B4E  0100               	movlb	0	; () banked
  4711  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4712  010B52  0E01               	movlw	high (_now+9)
  4713  010B54  0100               	movlb	0	; () banked
  4714  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4715  010B58  0E01               	movlw	1
  4716  010B5A  0100               	movlb	0	; () banked
  4717  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4718  010B5E  0E0C               	movlw	12
  4719  010B60  0100               	movlb	0	; () banked
  4720  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4721  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4722  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4723  010B6C  ECAA  F0A0         	call	_atoi	;wreg free
  4724  010B70  0100               	movlb	0	; () banked
  4725  010B72  517C               	movf	?_atoi& (0+255),w,b
  4726  010B74  0100               	movlb	0	; () banked
  4727  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4728  010B78  ECAC  F0B1         	call	_terminal_at_hand	;wreg free
  4729  010B7C                     l11728:
  4730                           
  4731                           ;My_terminal.c: 103: }
  4732                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4733  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4734  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4735  010B84  0EFF               	movlw	low (STR_67+30)
  4736  010B86  0100               	movlb	0	; () banked
  4737  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4738  010B8A  0EFD               	movlw	high (STR_67+30)
  4739  010B8C  0100               	movlb	0	; () banked
  4740  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4741  010B90  EC0C  F0B2         	call	_strcmp	;wreg free
  4742  010B94  0100               	movlb	0	; () banked
  4743  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4744  010B98  0100               	movlb	0	; () banked
  4745  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4746  010B9C  B4D8               	btfsc	status,2,c
  4747  010B9E  D012               	goto	l11732
  4748                           
  4749                           ; BSR set to: 0
  4750  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4751  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4752  010BA8  0EE7               	movlw	low STR_34
  4753  010BAA  0100               	movlb	0	; () banked
  4754  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4755  010BAE  0EFF               	movlw	high STR_34
  4756  010BB0  0100               	movlb	0	; () banked
  4757  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4758  010BB4  EC0C  F0B2         	call	_strcmp	;wreg free
  4759  010BB8  0100               	movlb	0	; () banked
  4760  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4761  010BBC  0100               	movlb	0	; () banked
  4762  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4763  010BC0  A4D8               	btfss	status,2,c
  4764  010BC2  D023               	goto	l11736
  4765  010BC4                     l11732:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4769  010BC4  C17C  F066         	movff	_now+9,month_length@month
  4770  010BC8  0101               	movlb	1	; () banked
  4771  010BCA  517D               	movf	(_now+10)& (0+255),w,b
  4772  010BCC  ECD7  F0A3         	call	_month_length
  4773  010BD0  0100               	movlb	0	; () banked
  4774  010BD2  6FDA               	movwf	_terminal_time$7034& (0+255),b
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4778  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4779  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4780  010BDC  0E7B               	movlw	low (_now+8)
  4781  010BDE  0100               	movlb	0	; () banked
  4782  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4783  010BE2  0E01               	movlw	high (_now+8)
  4784  010BE4  0100               	movlb	0	; () banked
  4785  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4786  010BE8  0E01               	movlw	1
  4787  010BEA  0100               	movlb	0	; () banked
  4788  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4789  010BEE  C0DA  F0D0         	movff	_terminal_time$7034,terminal_at_hand@max
  4790  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4791  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4792  010BFA  ECAA  F0A0         	call	_atoi	;wreg free
  4793  010BFE  0100               	movlb	0	; () banked
  4794  010C00  517C               	movf	?_atoi& (0+255),w,b
  4795  010C02  0100               	movlb	0	; () banked
  4796  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4797  010C06  ECAC  F0B1         	call	_terminal_at_hand	;wreg free
  4798  010C0A                     l11736:
  4799                           
  4800                           ;My_terminal.c: 106: }
  4801                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4802  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4803  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4804  010C12  0E4B               	movlw	low (STR_68+22)
  4805  010C14  0100               	movlb	0	; () banked
  4806  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4807  010C18  0EFE               	movlw	high (STR_68+22)
  4808  010C1A  0100               	movlb	0	; () banked
  4809  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4810  010C1E  EC0C  F0B2         	call	_strcmp	;wreg free
  4811  010C22  0100               	movlb	0	; () banked
  4812  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4813  010C26  0100               	movlb	0	; () banked
  4814  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4815  010C2A  B4D8               	btfsc	status,2,c
  4816  010C2C  D012               	goto	l11740
  4817                           
  4818                           ; BSR set to: 0
  4819  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4820  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4821  010C36  0EDE               	movlw	low STR_36
  4822  010C38  0100               	movlb	0	; () banked
  4823  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4824  010C3C  0EFF               	movlw	high STR_36
  4825  010C3E  0100               	movlb	0	; () banked
  4826  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4827  010C42  EC0C  F0B2         	call	_strcmp	;wreg free
  4828  010C46  0100               	movlb	0	; () banked
  4829  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4830  010C4A  0100               	movlb	0	; () banked
  4831  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4832  010C4E  A4D8               	btfss	status,2,c
  4833  010C50  D01C               	goto	l11742
  4834  010C52                     l11740:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4838  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4839  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4840  010C5A  0E79               	movlw	low (_now+6)
  4841  010C5C  0100               	movlb	0	; () banked
  4842  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4843  010C60  0E01               	movlw	high (_now+6)
  4844  010C62  0100               	movlb	0	; () banked
  4845  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4846  010C66  0E00               	movlw	0
  4847  010C68  0100               	movlb	0	; () banked
  4848  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4849  010C6C  0E17               	movlw	23
  4850  010C6E  0100               	movlb	0	; () banked
  4851  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4852  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4853  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4854  010C7A  ECAA  F0A0         	call	_atoi	;wreg free
  4855  010C7E  0100               	movlb	0	; () banked
  4856  010C80  517C               	movf	?_atoi& (0+255),w,b
  4857  010C82  0100               	movlb	0	; () banked
  4858  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4859  010C86  ECAC  F0B1         	call	_terminal_at_hand	;wreg free
  4860  010C8A                     l11742:
  4861                           
  4862                           ;My_terminal.c: 109: }
  4863                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4864  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4865  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4866  010C92  0EF5               	movlw	low STR_37
  4867  010C94  0100               	movlb	0	; () banked
  4868  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4869  010C98  0EFF               	movlw	high STR_37
  4870  010C9A  0100               	movlb	0	; () banked
  4871  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4872  010C9E  EC0C  F0B2         	call	_strcmp	;wreg free
  4873  010CA2  0100               	movlb	0	; () banked
  4874  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4875  010CA6  0100               	movlb	0	; () banked
  4876  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4877  010CAA  B4D8               	btfsc	status,2,c
  4878  010CAC  D012               	goto	l11746
  4879                           
  4880                           ; BSR set to: 0
  4881  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4882  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4883  010CB6  0E98               	movlw	low STR_38
  4884  010CB8  0100               	movlb	0	; () banked
  4885  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4886  010CBC  0EFF               	movlw	high STR_38
  4887  010CBE  0100               	movlb	0	; () banked
  4888  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4889  010CC2  EC0C  F0B2         	call	_strcmp	;wreg free
  4890  010CC6  0100               	movlb	0	; () banked
  4891  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4892  010CCA  0100               	movlb	0	; () banked
  4893  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4894  010CCE  A4D8               	btfss	status,2,c
  4895  010CD0  D01C               	goto	l11748
  4896  010CD2                     l11746:
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4900  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4901  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4902  010CDA  0E78               	movlw	low (_now+5)
  4903  010CDC  0100               	movlb	0	; () banked
  4904  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4905  010CE0  0E01               	movlw	high (_now+5)
  4906  010CE2  0100               	movlb	0	; () banked
  4907  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4908  010CE6  0E00               	movlw	0
  4909  010CE8  0100               	movlb	0	; () banked
  4910  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4911  010CEC  0E3B               	movlw	59
  4912  010CEE  0100               	movlb	0	; () banked
  4913  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4914  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4915  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4916  010CFA  ECAA  F0A0         	call	_atoi	;wreg free
  4917  010CFE  0100               	movlb	0	; () banked
  4918  010D00  517C               	movf	?_atoi& (0+255),w,b
  4919  010D02  0100               	movlb	0	; () banked
  4920  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4921  010D06  ECAC  F0B1         	call	_terminal_at_hand	;wreg free
  4922  010D0A                     l11748:
  4923                           
  4924                           ;My_terminal.c: 112: }
  4925                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4926  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4927  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4928  010D12  0EBB               	movlw	low (STR_70+4)
  4929  010D14  0100               	movlb	0	; () banked
  4930  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4931  010D18  0EFF               	movlw	high (STR_70+4)
  4932  010D1A  0100               	movlb	0	; () banked
  4933  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4934  010D1E  EC0C  F0B2         	call	_strcmp	;wreg free
  4935  010D22  0100               	movlb	0	; () banked
  4936  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4937  010D26  0100               	movlb	0	; () banked
  4938  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4939  010D2A  B4D8               	btfsc	status,2,c
  4940  010D2C  D012               	goto	l11752
  4941                           
  4942                           ; BSR set to: 0
  4943  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4944  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4945  010D36  0E91               	movlw	low STR_40
  4946  010D38  0100               	movlb	0	; () banked
  4947  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4948  010D3C  0EFF               	movlw	high STR_40
  4949  010D3E  0100               	movlb	0	; () banked
  4950  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4951  010D42  EC0C  F0B2         	call	_strcmp	;wreg free
  4952  010D46  0100               	movlb	0	; () banked
  4953  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4954  010D4A  0100               	movlb	0	; () banked
  4955  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4956  010D4E  A4D8               	btfss	status,2,c
  4957  010D50  0012               	return	
  4958  010D52                     l11752:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4962  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4963  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4964  010D5A  0E77               	movlw	low (_now+4)
  4965  010D5C  0100               	movlb	0	; () banked
  4966  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4967  010D60  0E01               	movlw	high (_now+4)
  4968  010D62  0100               	movlb	0	; () banked
  4969  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4970  010D66  0E00               	movlw	0
  4971  010D68  0100               	movlb	0	; () banked
  4972  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4973  010D6C  0E3B               	movlw	59
  4974  010D6E  0100               	movlb	0	; () banked
  4975  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4976  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4977  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4978  010D7A  ECAA  F0A0         	call	_atoi	;wreg free
  4979  010D7E  0100               	movlb	0	; () banked
  4980  010D80  517C               	movf	?_atoi& (0+255),w,b
  4981  010D82  0100               	movlb	0	; () banked
  4982  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4983  010D86  ECAC  F0B1         	call	_terminal_at_hand	;wreg free
  4984  010D8A  0012               	return	
  4985  010D8C                     __end_of_terminal_time:
  4986                           	opt stack 0
  4987                           tblptru	equ	0xFF8
  4988                           tblptrh	equ	0xFF7
  4989                           tblptrl	equ	0xFF6
  4990                           tablat	equ	0xFF5
  4991                           prodh	equ	0xFF4
  4992                           prodl	equ	0xFF3
  4993                           intcon	equ	0xFF2
  4994                           postinc0	equ	0xFEE
  4995                           wreg	equ	0xFE8
  4996                           postdec1	equ	0xFE5
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           indf2	equ	0xFDF
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _terminal_at_hand *****************
  5005 ;; Defined at:
  5006 ;;		line 82 in file "../My_library/My_terminal.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  5009 ;;		 -> usb_tx(8), 
  5010 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  5011 ;;		 -> now(14), 
  5012 ;;  min             1  111[BANK0 ] unsigned char 
  5013 ;;  max             1  112[BANK0 ] unsigned char 
  5014 ;;  value           1  113[BANK0 ] unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5026 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;Total ram usage:        7 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:   17
  5033 ;; This function calls:
  5034 ;;		_RTCC_from_caltime
  5035 ;;		_print_time
  5036 ;;		_ringbuf_put_str
  5037 ;; This function is called by:
  5038 ;;		_terminal_time
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text4
  5043  016358                     __ptext4:
  5044                           	opt stack 0
  5045  016358                     _terminal_at_hand:
  5046                           	opt stack 10
  5047                           
  5048                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  5049                           
  5050                           ;incstack = 0
  5051  016358  0100               	movlb	0	; () banked
  5052  01635A  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  5053  01635C  0100               	movlb	0	; () banked
  5054  01635E  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  5055  016360  A0D8               	btfss	status,0,c
  5056  016362  D01D               	goto	l11360
  5057                           
  5058                           ; BSR set to: 0
  5059  016364  0100               	movlb	0	; () banked
  5060  016366  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  5061  016368  0100               	movlb	0	; () banked
  5062  01636A  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  5063  01636C  A0D8               	btfss	status,0,c
  5064  01636E  D017               	goto	l11360
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;My_terminal.c: 84: *hand = value;
  5068  016370  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  5069  016374  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  5070  016378  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  5074  01637C  0E73               	movlw	low _now
  5075  01637E  0100               	movlb	0	; () banked
  5076  016380  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5077  016382  0E01               	movlw	high _now
  5078  016384  0100               	movlb	0	; () banked
  5079  016386  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5080  016388  ECC3  F0B5         	call	_RTCC_from_caltime	;wreg free
  5081                           
  5082                           ;My_terminal.c: 86: time_change_flag = 1;
  5083  01638C  0E01               	movlw	1
  5084  01638E  6E22               	movwf	_time_change_flag,c
  5085                           
  5086                           ;My_terminal.c: 87: print_time(tx);
  5087  016390  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5088  016394  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5089  016398  EC5D  F0AE         	call	_print_time	;wreg free
  5090                           
  5091                           ;My_terminal.c: 88: } else {
  5092  01639C  0012               	return	
  5093  01639E                     l11360:
  5094                           
  5095                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5096  01639E  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5097  0163A2  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5098  0163A6  0E82               	movlw	low STR_24
  5099  0163A8  0100               	movlb	0	; () banked
  5100  0163AA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5101  0163AC  0EFF               	movlw	high STR_24
  5102  0163AE  0100               	movlb	0	; () banked
  5103  0163B0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5104  0163B2  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  5105  0163B6  0012               	return	
  5106  0163B8                     __end_of_terminal_at_hand:
  5107                           	opt stack 0
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           prodh	equ	0xFF4
  5113                           prodl	equ	0xFF3
  5114                           intcon	equ	0xFF2
  5115                           postinc0	equ	0xFEE
  5116                           wreg	equ	0xFE8
  5117                           postdec1	equ	0xFE5
  5118                           fsr1h	equ	0xFE2
  5119                           fsr1l	equ	0xFE1
  5120                           indf2	equ	0xFDF
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _print_time *****************
  5126 ;; Defined at:
  5127 ;;		line 68 in file "../My_library/My_terminal.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5130 ;;		 -> usb_tx(8), 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  str            30   77[BANK0 ] unsigned char [30]
  5133 ;; Return value:  Size  Location     Type
  5134 ;;		None               void
  5135 ;; Registers used:
  5136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5145 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5146 ;;Total ram usage:       32 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:   16
  5149 ;; This function calls:
  5150 ;;		_RTCC_from_RTCC
  5151 ;;		_ringbuf_put_str
  5152 ;;		_sprintf
  5153 ;; This function is called by:
  5154 ;;		_terminal_at_hand
  5155 ;;		_terminal_time
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text5
  5160  015CBA                     __ptext5:
  5161                           	opt stack 0
  5162  015CBA                     _print_time:
  5163                           	opt stack 10
  5164                           
  5165                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5166                           
  5167                           ;incstack = 0
  5168  015CBA  0E73               	movlw	low _now
  5169  015CBC  0100               	movlb	0	; () banked
  5170  015CBE  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5171  015CC0  0E01               	movlw	high _now
  5172  015CC2  0100               	movlb	0	; () banked
  5173  015CC4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5174  015CC6  EC65  F0B6         	call	_RTCC_from_RTCC	;wreg free
  5175                           
  5176                           ;My_terminal.c: 70: char str[30];
  5177                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5178                           ;My_terminal.c: 72: now.YY,
  5179                           ;My_terminal.c: 73: now.MM,
  5180                           ;My_terminal.c: 74: now.DD,
  5181                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5182                           ;My_terminal.c: 76: now.hh,
  5183                           ;My_terminal.c: 77: now.mm,
  5184                           ;My_terminal.c: 78: now.ss);
  5185  015CCA  0EAD               	movlw	low print_time@str
  5186  015CCC  0100               	movlb	0	; () banked
  5187  015CCE  6F83               	movwf	sprintf@sp& (0+255),b
  5188  015CD0  0E00               	movlw	high print_time@str
  5189  015CD2  0100               	movlb	0	; () banked
  5190  015CD4  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5191  015CD6  0E98               	movlw	low STR_23
  5192  015CD8  0100               	movlb	0	; () banked
  5193  015CDA  6F85               	movwf	sprintf@f& (0+255),b
  5194  015CDC  0EFD               	movlw	high STR_23
  5195  015CDE  0100               	movlb	0	; () banked
  5196  015CE0  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5197  015CE2  C17D  F087         	movff	_now+10,?_sprintf+4
  5198  015CE6  0100               	movlb	0	; () banked
  5199  015CE8  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5200  015CEA  C17C  F089         	movff	_now+9,?_sprintf+6
  5201  015CEE  0100               	movlb	0	; () banked
  5202  015CF0  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5203  015CF2  C17B  F08B         	movff	_now+8,?_sprintf+8
  5204  015CF6  0100               	movlb	0	; () banked
  5205  015CF8  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5206  015CFA  0101               	movlb	1	; () banked
  5207  015CFC  517A               	movf	(_now+7)& (0+255),w,b
  5208  015CFE  0D04               	mullw	4
  5209  015D00  0EA4               	movlw	low _weekday_3char
  5210  015D02  24F3               	addwf	prodl,w,c
  5211  015D04  0100               	movlb	0	; () banked
  5212  015D06  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5213  015D08  0EFB               	movlw	high _weekday_3char
  5214  015D0A  20F4               	addwfc	prodh,w,c
  5215  015D0C  0100               	movlb	0	; () banked
  5216  015D0E  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5217  015D10  C179  F08F         	movff	_now+6,?_sprintf+12
  5218  015D14  0100               	movlb	0	; () banked
  5219  015D16  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5220  015D18  C178  F091         	movff	_now+5,?_sprintf+14
  5221  015D1C  0100               	movlb	0	; () banked
  5222  015D1E  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5223  015D20  C177  F093         	movff	_now+4,?_sprintf+16
  5224  015D24  0100               	movlb	0	; () banked
  5225  015D26  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5226  015D28  EC00  F080         	call	_sprintf	;wreg free
  5227                           
  5228                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5229  015D2C  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5230  015D30  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5231  015D34  0EAD               	movlw	low print_time@str
  5232  015D36  0100               	movlb	0	; () banked
  5233  015D38  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5234  015D3A  0E00               	movlw	high print_time@str
  5235  015D3C  0100               	movlb	0	; () banked
  5236  015D3E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5237  015D40  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
  5238  015D44  0012               	return		;funcret
  5239  015D46                     __end_of_print_time:
  5240                           	opt stack 0
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           prodh	equ	0xFF4
  5246                           prodl	equ	0xFF3
  5247                           intcon	equ	0xFF2
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _RTCC_from_caltime *****************
  5259 ;; Defined at:
  5260 ;;		line 204 in file "../My_library/My_RTCC.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  tm              2   47[BANK0 ] PTR struct .
  5263 ;;		 -> now(14), 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;		None               void
  5268 ;; Registers used:
  5269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;Total ram usage:        2 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:   15
  5282 ;; This function calls:
  5283 ;;		_caltime_to_RTCC
  5284 ;;		_caltime_to_epoch
  5285 ;;		_epoch_to_caltime
  5286 ;; This function is called by:
  5287 ;;		_terminal_at_hand
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text6
  5292  016B86                     __ptext6:
  5293                           	opt stack 0
  5294  016B86                     _RTCC_from_caltime:
  5295                           	opt stack 11
  5296                           
  5297                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5298                           
  5299                           ;incstack = 0
  5300  016B86  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5301  016B8A  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5302  016B8E  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5303                           
  5304                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5305  016B92  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5306  016B96  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5307  016B9A  EC25  F096         	call	_epoch_to_caltime	;wreg free
  5308                           
  5309                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5310  016B9E  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5311  016BA2  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5312  016BA6  ECB2  F0A4         	call	_caltime_to_RTCC	;wreg free
  5313  016BAA  0012               	return		;funcret
  5314  016BAC                     __end_of_RTCC_from_caltime:
  5315                           	opt stack 0
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           intcon	equ	0xFF2
  5323                           postinc0	equ	0xFEE
  5324                           wreg	equ	0xFE8
  5325                           postdec1	equ	0xFE5
  5326                           fsr1h	equ	0xFE2
  5327                           fsr1l	equ	0xFE1
  5328                           indf2	equ	0xFDF
  5329                           fsr2h	equ	0xFDA
  5330                           fsr2l	equ	0xFD9
  5331                           status	equ	0xFD8
  5332                           
  5333 ;; *************** function _strcmp *****************
  5334 ;; Defined at:
  5335 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5338 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5339 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5340 ;;		 -> STR_65(2), STR_64(6), STR_61(5), STR_60(11), 
  5341 ;;		 -> STR_59(6), STR_58(1), STR_57(12), STR_56(3), 
  5342 ;;		 -> STR_55(9), STR_54(9), STR_52(2), STR_51(5), 
  5343 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5344 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5345 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5346 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  r               1    5[BANK0 ] char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  2    0[BANK0 ] int 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;Total ram usage:        6 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:   12
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_terminal_time
  5369 ;;		_terminal_operation
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text7
  5374  016418                     __ptext7:
  5375                           	opt stack 0
  5376  016418                     _strcmp:
  5377                           	opt stack 15
  5378                           
  5379                           ;incstack = 0
  5380  016418  D006               	goto	l11366
  5381  01641A                     l11364:
  5382  01641A  0100               	movlb	0	; () banked
  5383  01641C  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5384  01641E  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5385  016420  0100               	movlb	0	; () banked
  5386  016422  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5387  016424  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5388  016426                     l11366:
  5389  016426  C060  FFD9         	movff	strcmp@s1,fsr2l
  5390  01642A  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5391  01642E  50DF               	movf	indf2,w,c
  5392  016430  0100               	movlb	0	; () banked
  5393  016432  6F64               	movwf	??_strcmp& (0+255),b
  5394  016434  C062  FFF6         	movff	strcmp@s2,tblptrl
  5395  016438  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5396  01643C                     	if	0	;tblptru may be non-zero
  5397  01643C                     	endif
  5398  01643C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5399  01643C  0E00               	movlw	low (__mediumconst shr (0+16))
  5400  01643E  6EF8               	movwf	tblptru,c
  5401  016440                     	endif
  5402  016440  0008               	tblrd		*
  5403  016442  50F5               	movf	tablat,w,c
  5404  016444  0800               	sublw	0
  5405  016446  0100               	movlb	0	; () banked
  5406  016448  2564               	addwf	??_strcmp& (0+255),w,b
  5407  01644A  0100               	movlb	0	; () banked
  5408  01644C  6F65               	movwf	strcmp@r& (0+255),b
  5409  01644E  0100               	movlb	0	; () banked
  5410  016450  5165               	movf	strcmp@r& (0+255),w,b
  5411  016452  A4D8               	btfss	status,2,c
  5412  016454  D007               	goto	l11370
  5413                           
  5414                           ; BSR set to: 0
  5415  016456  C060  FFD9         	movff	strcmp@s1,fsr2l
  5416  01645A  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5417  01645E  50DF               	movf	indf2,w,c
  5418  016460  A4D8               	btfss	status,2,c
  5419  016462  D7DB               	goto	l11364
  5420  016464                     l11370:
  5421                           
  5422                           ; BSR set to: 0
  5423  016464  0100               	movlb	0	; () banked
  5424  016466  5165               	movf	strcmp@r& (0+255),w,b
  5425  016468  0100               	movlb	0	; () banked
  5426  01646A  6F60               	movwf	?_strcmp& (0+255),b
  5427  01646C  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5428  01646E  BF60               	btfsc	?_strcmp& (0+255),7,b
  5429  016470  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5430  016472  0012               	return	
  5431  016474                     __end_of_strcmp:
  5432                           	opt stack 0
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           intcon	equ	0xFF2
  5440                           postinc0	equ	0xFEE
  5441                           wreg	equ	0xFE8
  5442                           postdec1	equ	0xFE5
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450 ;; *************** function _atoi *****************
  5451 ;; Defined at:
  5452 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5455 ;;		 -> terminal_task@op2(25), 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  a               2   33[BANK0 ] int 
  5458 ;;  sign            1   32[BANK0 ] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2   28[BANK0 ] int 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;Total ram usage:        7 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:   13
  5475 ;; This function calls:
  5476 ;;		___wmul
  5477 ;;		_isdigit
  5478 ;; This function is called by:
  5479 ;;		_terminal_time
  5480 ;;		_terminal_operation
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text8
  5485  014154                     __ptext8:
  5486                           	opt stack 0
  5487  014154                     _atoi:
  5488                           	opt stack 14
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;incstack = 0
  5492  014154  D003               	goto	l11378
  5493  014156                     l11376:
  5494  014156  0100               	movlb	0	; () banked
  5495  014158  4B7C               	infsnz	atoi@s& (0+255),f,b
  5496  01415A  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5497  01415C                     l11378:
  5498  01415C  C07C  FFD9         	movff	atoi@s,fsr2l
  5499  014160  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5500  014164  0E20               	movlw	32
  5501  014166  18DE               	xorwf	postinc2,w,c
  5502  014168  B4D8               	btfsc	status,2,c
  5503  01416A  D7F5               	goto	l11376
  5504  01416C  C07C  FFD9         	movff	atoi@s,fsr2l
  5505  014170  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5506  014174  0E09               	movlw	9
  5507  014176  18DE               	xorwf	postinc2,w,c
  5508  014178  B4D8               	btfsc	status,2,c
  5509  01417A  D7ED               	goto	l11376
  5510  01417C  0E00               	movlw	0
  5511  01417E  0100               	movlb	0	; () banked
  5512  014180  6F82               	movwf	(atoi@a+1)& (0+255),b
  5513  014182  0E00               	movlw	0
  5514  014184  6F81               	movwf	atoi@a& (0+255),b
  5515  014186  0E00               	movlw	0
  5516  014188  0100               	movlb	0	; () banked
  5517  01418A  6F80               	movwf	atoi@sign& (0+255),b
  5518                           
  5519                           ; BSR set to: 0
  5520  01418C  C07C  FFD9         	movff	atoi@s,fsr2l
  5521  014190  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5522  014194  0E2D               	movlw	45
  5523  014196  18DE               	xorwf	postinc2,w,c
  5524  014198  A4D8               	btfss	status,2,c
  5525  01419A  D003               	goto	l11388
  5526                           
  5527                           ; BSR set to: 0
  5528  01419C  0100               	movlb	0	; () banked
  5529  01419E  2B80               	incf	atoi@sign& (0+255),f,b
  5530  0141A0  D02E               	goto	l11394
  5531  0141A2                     l11388:
  5532                           
  5533                           ; BSR set to: 0
  5534  0141A2  C07C  FFD9         	movff	atoi@s,fsr2l
  5535  0141A6  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5536  0141AA  0E2B               	movlw	43
  5537  0141AC  18DE               	xorwf	postinc2,w,c
  5538  0141AE  A4D8               	btfss	status,2,c
  5539  0141B0  D029               	goto	l11396
  5540  0141B2  D025               	goto	l11394
  5541  0141B4                     l11392:
  5542  0141B4  C081  F076         	movff	atoi@a,___wmul@multiplier
  5543  0141B8  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5544  0141BC  0E00               	movlw	0
  5545  0141BE  0100               	movlb	0	; () banked
  5546  0141C0  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5547  0141C2  0E0A               	movlw	10
  5548  0141C4  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5549  0141C6  EC71  F0B4         	call	___wmul	;wreg free
  5550  0141CA  C07C  FFD9         	movff	atoi@s,fsr2l
  5551  0141CE  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5552  0141D2  50DF               	movf	indf2,w,c
  5553  0141D4  0100               	movlb	0	; () banked
  5554  0141D6  6F7E               	movwf	??_atoi& (0+255),b
  5555  0141D8  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5556  0141DA  0100               	movlb	0	; () banked
  5557  0141DC  5176               	movf	?___wmul& (0+255),w,b
  5558  0141DE  0100               	movlb	0	; () banked
  5559  0141E0  277E               	addwf	??_atoi& (0+255),f,b
  5560  0141E2  0100               	movlb	0	; () banked
  5561  0141E4  5177               	movf	(?___wmul+1)& (0+255),w,b
  5562  0141E6  0100               	movlb	0	; () banked
  5563  0141E8  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5564  0141EA  0ED0               	movlw	208
  5565  0141EC  0100               	movlb	0	; () banked
  5566  0141EE  257E               	addwf	??_atoi& (0+255),w,b
  5567  0141F0  0100               	movlb	0	; () banked
  5568  0141F2  6F81               	movwf	atoi@a& (0+255),b
  5569  0141F4  0EFF               	movlw	255
  5570  0141F6  0100               	movlb	0	; () banked
  5571  0141F8  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5572  0141FA  0100               	movlb	0	; () banked
  5573  0141FC  6F82               	movwf	(atoi@a+1)& (0+255),b
  5574  0141FE                     l11394:
  5575                           
  5576                           ; BSR set to: 0
  5577  0141FE  0100               	movlb	0	; () banked
  5578  014200  4B7C               	infsnz	atoi@s& (0+255),f,b
  5579  014202  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5580  014204                     l11396:
  5581                           
  5582                           ; BSR set to: 0
  5583  014204  C07C  FFD9         	movff	atoi@s,fsr2l
  5584  014208  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5585  01420C  50DF               	movf	indf2,w,c
  5586  01420E  EC5C  F0B5         	call	_isdigit
  5587  014212  B0D8               	btfsc	status,0,c
  5588  014214  D7CF               	goto	l11392
  5589  014216  0100               	movlb	0	; () banked
  5590  014218  5180               	movf	atoi@sign& (0+255),w,b
  5591  01421A  0100               	movlb	0	; () banked
  5592  01421C  B4D8               	btfsc	status,2,c
  5593  01421E  D00E               	goto	l2198
  5594                           
  5595                           ; BSR set to: 0
  5596  014220  C081  F07E         	movff	atoi@a,??_atoi
  5597  014224  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5598  014228  0100               	movlb	0	; () banked
  5599  01422A  1F7E               	comf	??_atoi& (0+255),f,b
  5600  01422C  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5601  01422E  4B7E               	infsnz	??_atoi& (0+255),f,b
  5602  014230  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5603  014232  C07E  F07C         	movff	??_atoi,?_atoi
  5604  014236  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5605  01423A  0012               	return	
  5606  01423C                     l2198:
  5607                           
  5608                           ; BSR set to: 0
  5609  01423C  C081  F07C         	movff	atoi@a,?_atoi
  5610  014240  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5611                           
  5612                           ; BSR set to: 0
  5613  014244  0012               	return		;funcret
  5614  014246                     __end_of_atoi:
  5615                           	opt stack 0
  5616                           tblptru	equ	0xFF8
  5617                           tblptrh	equ	0xFF7
  5618                           tblptrl	equ	0xFF6
  5619                           tablat	equ	0xFF5
  5620                           prodh	equ	0xFF4
  5621                           prodl	equ	0xFF3
  5622                           intcon	equ	0xFF2
  5623                           postinc0	equ	0xFEE
  5624                           wreg	equ	0xFE8
  5625                           postdec1	equ	0xFE5
  5626                           fsr1h	equ	0xFE2
  5627                           fsr1l	equ	0xFE1
  5628                           indf2	equ	0xFDF
  5629                           postinc2	equ	0xFDE
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634 ;; *************** function _bootload *****************
  5635 ;; Defined at:
  5636 ;;		line 191 in file "ChargeStation_task.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;		None
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;		None               void
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;Total ram usage:        0 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:   16
  5657 ;; This function calls:
  5658 ;;		_I2C_LCD_Clear
  5659 ;;		_I2C_LCD_Puts
  5660 ;;		_I2C_LCD_SetCursor
  5661 ;; This function is called by:
  5662 ;;		_terminal_operation
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text9
  5668  01670C                     __ptext9:
  5669                           	opt stack 0
  5670  01670C                     _bootload:
  5671                           	opt stack 12
  5672                           
  5673                           ;ChargeStation_task.c: 192: I2C_LCD_Clear();
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;incstack = 0
  5677  01670C  EC58  F0B6         	call	_I2C_LCD_Clear	;wreg free
  5678                           
  5679                           ;ChargeStation_task.c: 193: I2C_LCD_SetCursor(0, 0);
  5680  016710  0E00               	movlw	0
  5681  016712  0100               	movlb	0	; () banked
  5682  016714  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5683  016716  0E00               	movlw	0
  5684  016718  ECEE  F0B4         	call	_I2C_LCD_SetCursor
  5685                           
  5686                           ;ChargeStation_task.c: 194: I2C_LCD_Puts("PIC18F27J53");
  5687  01671C  0E19               	movlw	low STR_49
  5688  01671E  0100               	movlb	0	; () banked
  5689  016720  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5690  016722  0EFF               	movlw	high STR_49
  5691  016724  0100               	movlb	0	; () banked
  5692  016726  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5693  016728  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5694                           
  5695                           ;ChargeStation_task.c: 195: I2C_LCD_SetCursor(0, 1);
  5696  01672C  0E01               	movlw	1
  5697  01672E  0100               	movlb	0	; () banked
  5698  016730  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5699  016732  0E00               	movlw	0
  5700  016734  ECEE  F0B4         	call	_I2C_LCD_SetCursor
  5701                           
  5702                           ;ChargeStation_task.c: 196: I2C_LCD_Puts("Bootloader mode");
  5703  016738  0EC3               	movlw	low STR_50
  5704  01673A  0100               	movlb	0	; () banked
  5705  01673C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5706  01673E  0EFE               	movlw	high STR_50
  5707  016740  0100               	movlb	0	; () banked
  5708  016742  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5709  016744  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5710  016748  EF0E F000          	goto	28	;# 
  5711  01674C  0012               	return		;funcret
  5712  01674E                     __end_of_bootload:
  5713                           	opt stack 0
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           prodh	equ	0xFF4
  5719                           prodl	equ	0xFF3
  5720                           intcon	equ	0xFF2
  5721                           postinc0	equ	0xFEE
  5722                           wreg	equ	0xFE8
  5723                           postdec1	equ	0xFE5
  5724                           fsr1h	equ	0xFE2
  5725                           fsr1l	equ	0xFE1
  5726                           indf2	equ	0xFDF
  5727                           postinc2	equ	0xFDE
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8
  5731                           
  5732 ;; *************** function _ringbuf_put_num *****************
  5733 ;; Defined at:
  5734 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5737 ;;		 -> usb_tx(8), 
  5738 ;;  value           2   37[BANK0 ] const unsigned int 
  5739 ;;  digits          1   39[BANK0 ] unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  i               1   40[BANK0 ] unsigned char 
  5742 ;;  temp            2   41[BANK0 ] unsigned int 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5752 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;Total ram usage:        8 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:   14
  5759 ;; This function calls:
  5760 ;;		___lwdiv
  5761 ;;		___lwmod
  5762 ;;		_ringbuf_put
  5763 ;; This function is called by:
  5764 ;;		_terminal_task
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text10
  5769  015DCA                     __ptext10:
  5770                           	opt stack 0
  5771  015DCA                     _ringbuf_put_num:
  5772                           	opt stack 15
  5773                           
  5774                           ;My_ringbuf.c: 29: while (digits--) {
  5775                           
  5776                           ;incstack = 0
  5777  015DCA  D039               	goto	l12178
  5778  015DCC                     l774:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5782  015DCC  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5783  015DD0  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5787  015DD4  0E00               	movlw	0
  5788  015DD6  0100               	movlb	0	; () banked
  5789  015DD8  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5790  015DDA  D011               	goto	l12172
  5791  015DDC                     l12168:
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;My_ringbuf.c: 32: temp /= 10;
  5795  015DDC  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5796  015DE0  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5797  015DE4  0E00               	movlw	0
  5798  015DE6  0100               	movlb	0	; () banked
  5799  015DE8  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5800  015DEA  0E0A               	movlw	10
  5801  015DEC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5802  015DEE  EC26  F0AF         	call	___lwdiv	;wreg free
  5803  015DF2  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5804  015DF6  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5805  015DFA  0100               	movlb	0	; () banked
  5806  015DFC  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5807  015DFE                     l12172:
  5808                           
  5809                           ; BSR set to: 0
  5810  015DFE  0100               	movlb	0	; () banked
  5811  015E00  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5812  015E02  0100               	movlb	0	; () banked
  5813  015E04  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5814  015E06  A0D8               	btfss	status,0,c
  5815  015E08  D7E9               	goto	l12168
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;My_ringbuf.c: 33: }
  5819                           ;My_ringbuf.c: 34: temp %= 10;
  5820                           
  5821                           ; BSR set to: 0
  5822  015E0A  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5823  015E0E  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5824  015E12  0E00               	movlw	0
  5825  015E14  0100               	movlb	0	; () banked
  5826  015E16  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5827  015E18  0E0A               	movlw	10
  5828  015E1A  6F62               	movwf	___lwmod@divisor& (0+255),b
  5829  015E1C  EC7B  F0B1         	call	___lwmod	;wreg free
  5830  015E20  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5831  015E24  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5832                           
  5833                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5834  015E28  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5835  015E2C  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5836  015E30  0100               	movlb	0	; () banked
  5837  015E32  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5838  015E34  0F30               	addlw	48
  5839  015E36  0100               	movlb	0	; () banked
  5840  015E38  6F6A               	movwf	ringbuf_put@data& (0+255),b
  5841  015E3A  ECF2  F0A5         	call	_ringbuf_put	;wreg free
  5842  015E3E                     l12178:
  5843  015E3E  0100               	movlb	0	; () banked
  5844  015E40  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5845  015E42  0100               	movlb	0	; () banked
  5846  015E44  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5847  015E46  B4D8               	btfsc	status,2,c
  5848  015E48  0012               	return	
  5849  015E4A  D7C0               	goto	l774
  5850  015E4C                     __end_of_ringbuf_put_num:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postdec1	equ	0xFE5
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           indf2	equ	0xFDF
  5865                           postinc2	equ	0xFDE
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function _ringbuf_delete *****************
  5871 ;; Defined at:
  5872 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5875 ;;		 -> terminal_task@command(8), 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;		None               void
  5880 ;; Registers used:
  5881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;Total ram usage:        2 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:   12
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_terminal_task
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text11
  5902  016BAC                     __ptext11:
  5903                           	opt stack 0
  5904  016BAC                     _ringbuf_delete:
  5905                           	opt stack 17
  5906                           
  5907                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;incstack = 0
  5911  016BAC  0100               	movlb	0	; () banked
  5912  016BAE  EE20 F006          	lfsr	2,6
  5913  016BB2  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5914  016BB4  26D9               	addwf	fsr2l,f,c
  5915  016BB6  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5916  016BB8  22DA               	addwfc	fsr2h,f,c
  5917  016BBA  0100               	movlb	0	; () banked
  5918  016BBC  EE10 F004          	lfsr	1,4
  5919  016BC0  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5920  016BC2  26E1               	addwf	fsr1l,f,c
  5921  016BC4  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5922  016BC6  22E2               	addwfc	fsr1h,f,c
  5923  016BC8  CFDE FFE6          	movff	postinc2,postinc1
  5924  016BCC  CFDD FFE5          	movff	postdec2,postdec1
  5925                           
  5926                           ; BSR set to: 0
  5927  016BD0  0012               	return		;funcret
  5928  016BD2                     __end_of_ringbuf_delete:
  5929                           	opt stack 0
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           prodh	equ	0xFF4
  5935                           prodl	equ	0xFF3
  5936                           intcon	equ	0xFF2
  5937                           postinc0	equ	0xFEE
  5938                           wreg	equ	0xFE8
  5939                           postinc1	equ	0xFE6
  5940                           postdec1	equ	0xFE5
  5941                           fsr1h	equ	0xFE2
  5942                           fsr1l	equ	0xFE1
  5943                           indf2	equ	0xFDF
  5944                           postinc2	equ	0xFDE
  5945                           postdec2	equ	0xFDD
  5946                           fsr2h	equ	0xFDA
  5947                           fsr2l	equ	0xFD9
  5948                           status	equ	0xFD8
  5949                           
  5950 ;; *************** function _ringbuf_backspace *****************
  5951 ;; Defined at:
  5952 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5955 ;;		 -> terminal_task@command(8), 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;		None               void
  5960 ;; Registers used:
  5961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;Total ram usage:        6 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:   13
  5974 ;; This function calls:
  5975 ;;		_ringbuf_num
  5976 ;; This function is called by:
  5977 ;;		_terminal_task
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text12
  5982  015B10                     __ptext12:
  5983                           	opt stack 0
  5984  015B10                     _ringbuf_backspace:
  5985                           	opt stack 16
  5986                           
  5987                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;incstack = 0
  5991  015B10  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5992  015B14  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5993  015B18  EC9C  F0A1         	call	_ringbuf_num	;wreg free
  5994  015B1C  0100               	movlb	0	; () banked
  5995  015B1E  5160               	movf	?_ringbuf_num& (0+255),w,b
  5996  015B20  0100               	movlb	0	; () banked
  5997  015B22  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5998  015B24  B4D8               	btfsc	status,2,c
  5999  015B26  0012               	return	
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6003  015B28  0100               	movlb	0	; () banked
  6004  015B2A  EE20 F004          	lfsr	2,4
  6005  015B2E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6006  015B30  26D9               	addwf	fsr2l,f,c
  6007  015B32  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6008  015B34  22DA               	addwfc	fsr2h,f,c
  6009  015B36  50DE               	movf	postinc2,w,c
  6010  015B38  10DE               	iorwf	postinc2,w,c
  6011  015B3A  B4D8               	btfsc	status,2,c
  6012  015B3C  D00B               	goto	l12206
  6013                           
  6014                           ; BSR set to: 0
  6015  015B3E  0100               	movlb	0	; () banked
  6016  015B40  EE20 F004          	lfsr	2,4
  6017  015B44  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6018  015B46  26D9               	addwf	fsr2l,f,c
  6019  015B48  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6020  015B4A  22DA               	addwfc	fsr2h,f,c
  6021  015B4C  06DE               	decf	postinc2,f,c
  6022  015B4E  0E00               	movlw	0
  6023  015B50  5ADD               	subwfb	postdec2,f,c
  6024  015B52  0012               	return	
  6025  015B54                     l12206:
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6029  015B54  0EFF               	movlw	255
  6030  015B56  0100               	movlb	0	; () banked
  6031  015B58  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6032  015B5A  0EFF               	movlw	255
  6033  015B5C  0100               	movlb	0	; () banked
  6034  015B5E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6035  015B60  0100               	movlb	0	; () banked
  6036  015B62  EE20 F002          	lfsr	2,2
  6037  015B66  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6038  015B68  26D9               	addwf	fsr2l,f,c
  6039  015B6A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6040  015B6C  22DA               	addwfc	fsr2h,f,c
  6041  015B6E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6042  015B72  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6043  015B76  0100               	movlb	0	; () banked
  6044  015B78  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6045  015B7A  0100               	movlb	0	; () banked
  6046  015B7C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6047  015B7E  0100               	movlb	0	; () banked
  6048  015B80  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6049  015B82  0100               	movlb	0	; () banked
  6050  015B84  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6051  015B86  0100               	movlb	0	; () banked
  6052  015B88  EE20 F004          	lfsr	2,4
  6053  015B8C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6054  015B8E  26D9               	addwf	fsr2l,f,c
  6055  015B90  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6056  015B92  22DA               	addwfc	fsr2h,f,c
  6057  015B94  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6058  015B98  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6059                           
  6060                           ; BSR set to: 0
  6061  015B9C  0012               	return	
  6062  015B9E                     __end_of_ringbuf_backspace:
  6063                           	opt stack 0
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           prodh	equ	0xFF4
  6069                           prodl	equ	0xFF3
  6070                           intcon	equ	0xFF2
  6071                           postinc0	equ	0xFEE
  6072                           wreg	equ	0xFE8
  6073                           postinc1	equ	0xFE6
  6074                           postdec1	equ	0xFE5
  6075                           fsr1h	equ	0xFE2
  6076                           fsr1l	equ	0xFE1
  6077                           indf2	equ	0xFDF
  6078                           postinc2	equ	0xFDE
  6079                           postdec2	equ	0xFDD
  6080                           fsr2h	equ	0xFDA
  6081                           fsr2l	equ	0xFD9
  6082                           status	equ	0xFD8
  6083                           
  6084 ;; *************** function _software_init *****************
  6085 ;; Defined at:
  6086 ;;		line 103 in file "main.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  i               1   36[BANK0 ] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;		None               void
  6093 ;; Registers used:
  6094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;Total ram usage:        1 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:   15
  6107 ;; This function calls:
  6108 ;;		_LED_output
  6109 ;;		_OUT
  6110 ;;		_ctmu_set_ratio
  6111 ;;		_display
  6112 ;; This function is called by:
  6113 ;;		_main
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text13
  6118  01530E                     __ptext13:
  6119                           	opt stack 0
  6120  01530E                     _software_init:
  6121                           	opt stack 15
  6122                           
  6123                           ;main.c: 105: ctmu_ratio = 90;
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;incstack = 0
  6127  01530E  0E5A               	movlw	90
  6128  015310  6E1C               	movwf	_ctmu_ratio,c
  6129                           
  6130                           ;main.c: 106: ctmu_set_ratio(ctmu_ratio);
  6131  015312  501C               	movf	_ctmu_ratio,w,c
  6132  015314  EC13  F0A2         	call	_ctmu_set_ratio
  6133                           
  6134                           ;main.c: 109: display(LOGO, "Charge Station", "Made by KERI");
  6135  015318  0EE2               	movlw	low STR_47
  6136  01531A  0100               	movlb	0	; () banked
  6137  01531C  6F60               	movwf	display@str0& (0+255),b
  6138  01531E  0EFE               	movlw	high STR_47
  6139  015320  0100               	movlb	0	; () banked
  6140  015322  6F61               	movwf	(display@str0+1)& (0+255),b
  6141  015324  0EFF               	movlw	low STR_75
  6142  015326  0100               	movlb	0	; () banked
  6143  015328  6F62               	movwf	display@str1& (0+255),b
  6144  01532A  0EFE               	movlw	high STR_75
  6145  01532C  0100               	movlb	0	; () banked
  6146  01532E  6F63               	movwf	(display@str1+1)& (0+255),b
  6147  015330  0E00               	movlw	0
  6148  015332  ECE0  F09B         	call	_display
  6149                           
  6150                           ;main.c: 112: for (uint8_t i = 0; i < 3; i++) {
  6151  015336  0E00               	movlw	0
  6152  015338  0100               	movlb	0	; () banked
  6153  01533A  6F84               	movwf	software_init@i& (0+255),b
  6154  01533C                     l12830:
  6155                           
  6156                           ; BSR set to: 0
  6157  01533C  0E02               	movlw	2
  6158  01533E  0100               	movlb	0	; () banked
  6159  015340  6584               	cpfsgt	software_init@i& (0+255),b
  6160  015342  D001               	goto	l12834
  6161  015344  D040               	goto	l12846
  6162  015346                     l12834:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;main.c: 113: OUT(i, 0);
  6166  015346  0E00               	movlw	0
  6167  015348  0100               	movlb	0	; () banked
  6168  01534A  6F60               	movwf	OUT@value& (0+255),b
  6169  01534C  0100               	movlb	0	; () banked
  6170  01534E  5184               	movf	software_init@i& (0+255),w,b
  6171  015350  ECD6  F0AF         	call	_OUT
  6172                           
  6173                           ;main.c: 114: LED_output(i, 0);
  6174  015354  0E00               	movlw	0
  6175  015356  0100               	movlb	0	; () banked
  6176  015358  6F60               	movwf	LED_output@value& (0+255),b
  6177  01535A  0100               	movlb	0	; () banked
  6178  01535C  5184               	movf	software_init@i& (0+255),w,b
  6179  01535E  EC9D  F0AF         	call	_LED_output
  6180                           
  6181                           ;main.c: 115: port[i].cut_cnt = 0;
  6182  015362  0100               	movlb	0	; () banked
  6183  015364  5184               	movf	software_init@i& (0+255),w,b
  6184  015366  0D17               	mullw	23
  6185  015368  0E14               	movlw	20
  6186  01536A  26F3               	addwf	prodl,f,c
  6187  01536C  0E00               	movlw	0
  6188  01536E  22F4               	addwfc	prodh,f,c
  6189  015370  0E2E               	movlw	low _port
  6190  015372  24F3               	addwf	prodl,w,c
  6191  015374  6ED9               	movwf	fsr2l,c
  6192  015376  0E01               	movlw	high _port
  6193  015378  20F4               	addwfc	prodh,w,c
  6194  01537A  6EDA               	movwf	fsr2h,c
  6195  01537C  0E00               	movlw	0
  6196  01537E  6EDE               	movwf	postinc2,c
  6197  015380  0E00               	movlw	0
  6198  015382  6EDD               	movwf	postdec2,c
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;main.c: 116: port[i].flag.auto_cut_ON = 1;
  6202  015384  0100               	movlb	0	; () banked
  6203  015386  5184               	movf	software_init@i& (0+255),w,b
  6204  015388  0D17               	mullw	23
  6205  01538A  0E16               	movlw	22
  6206  01538C  26F3               	addwf	prodl,f,c
  6207  01538E  0E00               	movlw	0
  6208  015390  22F4               	addwfc	prodh,f,c
  6209  015392  0E2E               	movlw	low _port
  6210  015394  24F3               	addwf	prodl,w,c
  6211  015396  6ED9               	movwf	fsr2l,c
  6212  015398  0E01               	movlw	high _port
  6213  01539A  20F4               	addwfc	prodh,w,c
  6214  01539C  6EDA               	movwf	fsr2h,c
  6215  01539E  0101               	movlb	1	; () banked
  6216  0153A0  80DF               	bsf	indf2,0,c
  6217                           
  6218                           ; BSR set to: 1
  6219                           ;main.c: 117: port[i].flag.led_indicator_ON = 1;
  6220  0153A2  0100               	movlb	0	; () banked
  6221  0153A4  5184               	movf	software_init@i& (0+255),w,b
  6222  0153A6  0D17               	mullw	23
  6223  0153A8  0E16               	movlw	22
  6224  0153AA  26F3               	addwf	prodl,f,c
  6225  0153AC  0E00               	movlw	0
  6226  0153AE  22F4               	addwfc	prodh,f,c
  6227  0153B0  0E2E               	movlw	low _port
  6228  0153B2  24F3               	addwf	prodl,w,c
  6229  0153B4  6ED9               	movwf	fsr2l,c
  6230  0153B6  0E01               	movlw	high _port
  6231  0153B8  20F4               	addwfc	prodh,w,c
  6232  0153BA  6EDA               	movwf	fsr2h,c
  6233  0153BC  0101               	movlb	1	; () banked
  6234  0153BE  82DF               	bsf	indf2,1,c
  6235                           
  6236                           ; BSR set to: 1
  6237  0153C0  0100               	movlb	0	; () banked
  6238  0153C2  2B84               	incf	software_init@i& (0+255),f,b
  6239  0153C4  D7BB               	goto	l12830
  6240  0153C6                     l12846:
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;main.c: 118: }
  6244                           ;main.c: 121: settings_flag = 0;
  6245  0153C6  0E00               	movlw	0
  6246  0153C8  0101               	movlb	1	; () banked
  6247  0153CA  6F22               	movwf	_settings_flag& (0+255),b
  6248                           
  6249                           ; BSR set to: 1
  6250  0153CC  0012               	return		;funcret
  6251  0153CE                     __end_of_software_init:
  6252                           	opt stack 0
  6253                           tblptru	equ	0xFF8
  6254                           tblptrh	equ	0xFF7
  6255                           tblptrl	equ	0xFF6
  6256                           tablat	equ	0xFF5
  6257                           prodh	equ	0xFF4
  6258                           prodl	equ	0xFF3
  6259                           intcon	equ	0xFF2
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           postinc1	equ	0xFE6
  6263                           postdec1	equ	0xFE5
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function _ctmu_set_ratio *****************
  6274 ;; Defined at:
  6275 ;;		line 14 in file "ctmu.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  percentage      1    wreg     unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  percentage      1   35[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;		None               void
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;Total ram usage:        1 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:   14
  6296 ;; This function calls:
  6297 ;;		_CTMU_read
  6298 ;;		___lwdiv
  6299 ;;		___wmul
  6300 ;; This function is called by:
  6301 ;;		_terminal_operation
  6302 ;;		_software_init
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text14
  6307  014426                     __ptext14:
  6308                           	opt stack 0
  6309  014426                     _ctmu_set_ratio:
  6310                           	opt stack 14
  6311                           
  6312                           ; BSR set to: 1
  6313                           ;incstack = 0
  6314                           ;ctmu_set_ratio@percentage stored from wreg
  6315  014426  0100               	movlb	0	; () banked
  6316  014428  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6317                           
  6318                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6319  01442A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6320  01442E  0100               	movlb	0	; () banked
  6321  014430  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6322  014432  0E00               	movlw	0
  6323  014434  EC26  F0A9         	call	_CTMU_read
  6324  014438  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6325  01443C  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6326  014440  EC71  F0B4         	call	___wmul	;wreg free
  6327  014444  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6328  014448  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6329  01444C  0E00               	movlw	0
  6330  01444E  0100               	movlb	0	; () banked
  6331  014450  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6332  014452  0E64               	movlw	100
  6333  014454  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6334  014456  EC26  F0AF         	call	___lwdiv	;wreg free
  6335  01445A  C07C  F132         	movff	?___lwdiv,_port+4
  6336  01445E  C07D  F133         	movff	?___lwdiv+1,_port+5
  6337                           
  6338                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6339  014462  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6340  014466  0100               	movlb	0	; () banked
  6341  014468  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6342  01446A  0E01               	movlw	1
  6343  01446C  EC26  F0A9         	call	_CTMU_read
  6344  014470  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6345  014474  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6346  014478  EC71  F0B4         	call	___wmul	;wreg free
  6347  01447C  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6348  014480  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6349  014484  0E00               	movlw	0
  6350  014486  0100               	movlb	0	; () banked
  6351  014488  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6352  01448A  0E64               	movlw	100
  6353  01448C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6354  01448E  EC26  F0AF         	call	___lwdiv	;wreg free
  6355  014492  C07C  F149         	movff	?___lwdiv,_port+27
  6356  014496  C07D  F14A         	movff	?___lwdiv+1,_port+28
  6357                           
  6358                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6359  01449A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6360  01449E  0100               	movlb	0	; () banked
  6361  0144A0  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6362  0144A2  0E02               	movlw	2
  6363  0144A4  EC26  F0A9         	call	_CTMU_read
  6364  0144A8  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6365  0144AC  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6366  0144B0  EC71  F0B4         	call	___wmul	;wreg free
  6367  0144B4  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6368  0144B8  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6369  0144BC  0E00               	movlw	0
  6370  0144BE  0100               	movlb	0	; () banked
  6371  0144C0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6372  0144C2  0E64               	movlw	100
  6373  0144C4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6374  0144C6  EC26  F0AF         	call	___lwdiv	;wreg free
  6375  0144CA  C07C  F160         	movff	?___lwdiv,_port+50
  6376  0144CE  C07D  F161         	movff	?___lwdiv+1,_port+51
  6377                           
  6378                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6379  0144D2  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6380  0144D6  0100               	movlb	0	; () banked
  6381  0144D8  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6382  0144DA  0E03               	movlw	3
  6383  0144DC  EC26  F0A9         	call	_CTMU_read
  6384  0144E0  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6385  0144E4  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6386  0144E8  EC71  F0B4         	call	___wmul	;wreg free
  6387  0144EC  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6388  0144F0  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6389  0144F4  0E00               	movlw	0
  6390  0144F6  0100               	movlb	0	; () banked
  6391  0144F8  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6392  0144FA  0E64               	movlw	100
  6393  0144FC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6394  0144FE  EC26  F0AF         	call	___lwdiv	;wreg free
  6395  014502  C07C  F110         	movff	?___lwdiv,_ctmu_value_m
  6396  014506  C07D  F111         	movff	?___lwdiv+1,_ctmu_value_m+1
  6397  01450A  0012               	return		;funcret
  6398  01450C                     __end_of_ctmu_set_ratio:
  6399                           	opt stack 0
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           intcon	equ	0xFF2
  6407                           postinc0	equ	0xFEE
  6408                           wreg	equ	0xFE8
  6409                           postinc1	equ	0xFE6
  6410                           postdec1	equ	0xFE5
  6411                           fsr1h	equ	0xFE2
  6412                           fsr1l	equ	0xFE1
  6413                           indf2	equ	0xFDF
  6414                           postinc2	equ	0xFDE
  6415                           postdec2	equ	0xFDD
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function _sleep_task *****************
  6421 ;; Defined at:
  6422 ;;		line 164 in file "ChargeStation_task.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  i               1   10[BANK0 ] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;		None               void
  6429 ;; Registers used:
  6430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6439 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6440 ;;Total ram usage:        1 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:   16
  6443 ;; This function calls:
  6444 ;;		_ADC
  6445 ;;		_I2C_LCD_Clear
  6446 ;;		_I2C_LCD_Puts
  6447 ;;		_I2C_LCD_SetCursor
  6448 ;;		_LED_output
  6449 ;;		_OUT
  6450 ;;		_display
  6451 ;; This function is called by:
  6452 ;;		_main
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text15
  6457  014CB8                     __ptext15:
  6458                           	opt stack 0
  6459  014CB8                     _sleep_task:
  6460                           	opt stack 14
  6461                           
  6462                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6463                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6464                           
  6465                           ;incstack = 0
  6466  014CB8  0E0C               	movlw	12
  6467  014CBA  ECD7  F0B4         	call	_ADC
  6468  014CBE  0E08               	movlw	8
  6469  014CC0  0100               	movlb	0	; () banked
  6470  014CC2  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6471  014CC4  B0D8               	btfsc	status,0,c
  6472  014CC6  D05B               	goto	l12792
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6476  014CC8  0E01               	movlw	1
  6477  014CCA  0101               	movlb	1	; () banked
  6478  014CCC  6F2C               	movwf	sleep_task@sleep_flag& (0+255),b
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6482  014CCE  9EF2               	bcf	intcon,7,c	;volatile
  6483                           
  6484                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6485  014CD0  0E00               	movlw	0
  6486  014CD2  0100               	movlb	0	; () banked
  6487  014CD4  6F6A               	movwf	sleep_task@i& (0+255),b
  6488  014CD6                     l12766:
  6489                           
  6490                           ; BSR set to: 0
  6491  014CD6  0E02               	movlw	2
  6492  014CD8  0100               	movlb	0	; () banked
  6493  014CDA  656A               	cpfsgt	sleep_task@i& (0+255),b
  6494  014CDC  D001               	goto	l12770
  6495  014CDE  D011               	goto	l12776
  6496  014CE0                     l12770:
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6500  014CE0  0E00               	movlw	0
  6501  014CE2  0100               	movlb	0	; () banked
  6502  014CE4  6F60               	movwf	OUT@value& (0+255),b
  6503  014CE6  0100               	movlb	0	; () banked
  6504  014CE8  516A               	movf	sleep_task@i& (0+255),w,b
  6505  014CEA  ECD6  F0AF         	call	_OUT
  6506                           
  6507                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6508  014CEE  0E00               	movlw	0
  6509  014CF0  0100               	movlb	0	; () banked
  6510  014CF2  6F60               	movwf	LED_output@value& (0+255),b
  6511  014CF4  0100               	movlb	0	; () banked
  6512  014CF6  516A               	movf	sleep_task@i& (0+255),w,b
  6513  014CF8  EC9D  F0AF         	call	_LED_output
  6514  014CFC  0100               	movlb	0	; () banked
  6515  014CFE  2B6A               	incf	sleep_task@i& (0+255),f,b
  6516  014D00  D7EA               	goto	l12766
  6517  014D02                     l12776:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;ChargeStation_task.c: 172: }
  6521                           ;ChargeStation_task.c: 173: I2C_LCD_Clear();
  6522  014D02  EC58  F0B6         	call	_I2C_LCD_Clear	;wreg free
  6523                           
  6524                           ;ChargeStation_task.c: 174: I2C_LCD_SetCursor(0, 0);
  6525  014D06  0E00               	movlw	0
  6526  014D08  0100               	movlb	0	; () banked
  6527  014D0A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6528  014D0C  0E00               	movlw	0
  6529  014D0E  ECEE  F0B4         	call	_I2C_LCD_SetCursor
  6530                           
  6531                           ;ChargeStation_task.c: 175: I2C_LCD_Puts("Charge Station 6");
  6532  014D12  0E92               	movlw	low STR_45
  6533  014D14  0100               	movlb	0	; () banked
  6534  014D16  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6535  014D18  0EFE               	movlw	high STR_45
  6536  014D1A  0100               	movlb	0	; () banked
  6537  014D1C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6538  014D1E  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6539                           
  6540                           ;ChargeStation_task.c: 176: I2C_LCD_SetCursor(0, 1);
  6541  014D22  0E01               	movlw	1
  6542  014D24  0100               	movlb	0	; () banked
  6543  014D26  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6544  014D28  0E00               	movlw	0
  6545  014D2A  ECEE  F0B4         	call	_I2C_LCD_SetCursor
  6546                           
  6547                           ;ChargeStation_task.c: 177: I2C_LCD_Puts("SLEEPING NOW");
  6548  014D2E  0E0C               	movlw	low STR_46
  6549  014D30  0100               	movlb	0	; () banked
  6550  014D32  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6551  014D34  0EFF               	movlw	high STR_46
  6552  014D36  0100               	movlb	0	; () banked
  6553  014D38  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6554  014D3A  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6555                           
  6556                           ;ChargeStation_task.c: 178: }
  6557                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6558  014D3E  D01F               	goto	l12792
  6559  014D40                     l12786:
  6560                           
  6561                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6562  014D40  0E0C               	movlw	12
  6563  014D42  ECD7  F0B4         	call	_ADC
  6564  014D46  0100               	movlb	0	; () banked
  6565  014D48  0560               	decf	?_ADC& (0+255),w,b
  6566  014D4A  0E08               	movlw	8
  6567  014D4C  0100               	movlb	0	; () banked
  6568  014D4E  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6569  014D50  A0D8               	btfss	status,0,c
  6570  014D52  D013               	goto	l1537
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6574  014D54  0E00               	movlw	0
  6575  014D56  0101               	movlb	1	; () banked
  6576  014D58  6F2C               	movwf	sleep_task@sleep_flag& (0+255),b
  6577                           
  6578                           ; BSR set to: 1
  6579                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6580  014D5A  0EE2               	movlw	low STR_47
  6581  014D5C  0100               	movlb	0	; () banked
  6582  014D5E  6F60               	movwf	display@str0& (0+255),b
  6583  014D60  0EFE               	movlw	high STR_47
  6584  014D62  0100               	movlb	0	; () banked
  6585  014D64  6F61               	movwf	(display@str0+1)& (0+255),b
  6586  014D66  0EF1               	movlw	low STR_48
  6587  014D68  0100               	movlb	0	; () banked
  6588  014D6A  6F62               	movwf	display@str1& (0+255),b
  6589  014D6C  0EFE               	movlw	high STR_48
  6590  014D6E  0100               	movlb	0	; () banked
  6591  014D70  6F63               	movwf	(display@str1+1)& (0+255),b
  6592  014D72  0E00               	movlw	0
  6593  014D74  ECE0  F09B         	call	_display
  6594                           
  6595                           ;ChargeStation_task.c: 183: break;
  6596  014D78  0012               	return	
  6597  014D7A                     l1537:
  6598                           
  6599                           ; BSR set to: 0
  6600  014D7A  0003               	sleep		;# 
  6601                           
  6602                           ;ChargeStation_task.c: 186: __nop();
  6603  014D7C  F000               	nop	
  6604  014D7E                     l12792:
  6605  014D7E  0101               	movlb	1	; () banked
  6606  014D80  512C               	movf	sleep_task@sleep_flag& (0+255),w,b
  6607  014D82  0101               	movlb	1	; () banked
  6608  014D84  B4D8               	btfsc	status,2,c
  6609  014D86  0012               	return	
  6610  014D88  D7DB               	goto	l12786
  6611  014D8A                     __end_of_sleep_task:
  6612                           	opt stack 0
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           postinc0	equ	0xFEE
  6621                           wreg	equ	0xFE8
  6622                           postinc1	equ	0xFE6
  6623                           postdec1	equ	0xFE5
  6624                           fsr1h	equ	0xFE2
  6625                           fsr1l	equ	0xFE1
  6626                           indf2	equ	0xFDF
  6627                           postinc2	equ	0xFDE
  6628                           postdec2	equ	0xFDD
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function _normal_task *****************
  6634 ;; Defined at:
  6635 ;;		line 121 in file "ChargeStation_task.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:   19
  6656 ;; This function calls:
  6657 ;;		_Auto_cut
  6658 ;;		_data_out
  6659 ;;		_display
  6660 ;;		_display_LCD
  6661 ;;		_integrate_current
  6662 ;;		_integrate_time
  6663 ;;		_port_button_task
  6664 ;;		_settings_task
  6665 ;; This function is called by:
  6666 ;;		_main
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text16
  6671  014E5C                     __ptext16:
  6672                           	opt stack 0
  6673  014E5C                     _normal_task:
  6674                           	opt stack 11
  6675                           
  6676                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6677                           
  6678                           ;incstack = 0
  6679  014E5C  0101               	movlb	1	; () banked
  6680  014E5E  5122               	movf	_settings_flag& (0+255),w,b
  6681  014E60  B4D8               	btfsc	status,2,c
  6682  014E62  D003               	goto	l1517
  6683                           
  6684                           ; BSR set to: 1
  6685                           ;ChargeStation_task.c: 124: settings_task();
  6686  014E64  EC15  F095         	call	_settings_task	;wreg free
  6687                           
  6688                           ;ChargeStation_task.c: 125: } else {
  6689  014E68  D024               	goto	l12728
  6690  014E6A                     l1517:
  6691                           
  6692                           ; BSR set to: 1
  6693                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6694  014E6A  0100               	movlb	0	; () banked
  6695  014E6C  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  6696  014E6E  D014               	goto	l12722
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6700  014E70  0E00               	movlw	0
  6701  014E72  0100               	movlb	0	; () banked
  6702  014E74  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6703  014E76  0E00               	movlw	0
  6704  014E78  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6708  014E7A  0EE6               	movlw	low (STR_19+3)
  6709  014E7C  0100               	movlb	0	; () banked
  6710  014E7E  6F60               	movwf	display@str0& (0+255),b
  6711  014E80  0EFF               	movlw	high (STR_19+3)
  6712  014E82  0100               	movlb	0	; () banked
  6713  014E84  6F61               	movwf	(display@str0+1)& (0+255),b
  6714  014E86  0EE6               	movlw	low (STR_19+3)
  6715  014E88  0100               	movlb	0	; () banked
  6716  014E8A  6F62               	movwf	display@str1& (0+255),b
  6717  014E8C  0EFF               	movlw	high (STR_19+3)
  6718  014E8E  0100               	movlb	0	; () banked
  6719  014E90  6F63               	movwf	(display@str1+1)& (0+255),b
  6720  014E92  0E01               	movlw	1
  6721  014E94  ECE0  F09B         	call	_display
  6722  014E98                     l12722:
  6723                           
  6724                           ;ChargeStation_task.c: 129: }
  6725                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6726  014E98  0100               	movlb	0	; () banked
  6727  014E9A  A5FF               	btfss	(_ctmu_m+3)& (0+255),2,b
  6728  014E9C  D008               	goto	l12726
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6732  014E9E  0E00               	movlw	0
  6733  014EA0  0100               	movlb	0	; () banked
  6734  014EA2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6735  014EA4  0E00               	movlw	0
  6736  014EA6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6737                           
  6738                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6739  014EA8  0E01               	movlw	1
  6740  014EAA  0101               	movlb	1	; () banked
  6741  014EAC  6F22               	movwf	_settings_flag& (0+255),b
  6742  014EAE                     l12726:
  6743                           
  6744                           ;ChargeStation_task.c: 133: }
  6745                           ;ChargeStation_task.c: 134: port_button_task();
  6746  014EAE  EC92  F098         	call	_port_button_task	;wreg free
  6747  014EB2                     l12728:
  6748                           
  6749                           ;ChargeStation_task.c: 135: }
  6750                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6751  014EB2  0101               	movlb	1	; () banked
  6752  014EB4  511F               	movf	_cut_time_flag& (0+255),w,b
  6753  014EB6  B4D8               	btfsc	status,2,c
  6754  014EB8  D005               	goto	l12734
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6758  014EBA  0E00               	movlw	0
  6759  014EBC  0101               	movlb	1	; () banked
  6760  014EBE  6F1F               	movwf	_cut_time_flag& (0+255),b
  6761                           
  6762                           ; BSR set to: 1
  6763                           ;ChargeStation_task.c: 139: Auto_cut();
  6764  014EC0  EC7B  F09C         	call	_Auto_cut	;wreg free
  6765  014EC4                     l12734:
  6766                           
  6767                           ;ChargeStation_task.c: 140: }
  6768                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6769  014EC4  0101               	movlb	1	; () banked
  6770  014EC6  5121               	movf	_integrate_flag& (0+255),w,b
  6771  014EC8  B4D8               	btfsc	status,2,c
  6772  014ECA  D007               	goto	l1522
  6773                           
  6774                           ; BSR set to: 1
  6775                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6776  014ECC  0E00               	movlw	0
  6777  014ECE  0101               	movlb	1	; () banked
  6778  014ED0  6F21               	movwf	_integrate_flag& (0+255),b
  6779                           
  6780                           ; BSR set to: 1
  6781                           ;ChargeStation_task.c: 144: integrate_current();
  6782  014ED2  EC37  F09F         	call	_integrate_current	;wreg free
  6783                           
  6784                           ;ChargeStation_task.c: 145: integrate_time();
  6785  014ED6  EC4A  F0B1         	call	_integrate_time	;wreg free
  6786  014EDA                     l1522:
  6787                           
  6788                           ;ChargeStation_task.c: 146: }
  6789                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6790  014EDA  5022               	movf	_time_change_flag,w,c
  6791  014EDC  B4D8               	btfsc	status,2,c
  6792  014EDE  D008               	goto	l1523
  6793                           
  6794                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6795  014EE0  0E00               	movlw	0
  6796  014EE2  6E22               	movwf	_time_change_flag,c
  6797                           
  6798                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6799  014EE4  041F               	decf	_print_item,w,c
  6800  014EE6  A4D8               	btfss	status,2,c
  6801  014EE8  D003               	goto	l1523
  6802  014EEA  0E01               	movlw	1
  6803  014EEC  0101               	movlb	1	; () banked
  6804  014EEE  6F20               	movwf	_display_flag& (0+255),b
  6805  014EF0                     l1523:
  6806                           
  6807                           ;ChargeStation_task.c: 151: }
  6808                           ;ChargeStation_task.c: 153: if (display_flag) {
  6809  014EF0  0101               	movlb	1	; () banked
  6810  014EF2  5120               	movf	_display_flag& (0+255),w,b
  6811  014EF4  B4D8               	btfsc	status,2,c
  6812  014EF6  D005               	goto	l12752
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;ChargeStation_task.c: 154: display_flag = 0;
  6816  014EF8  0E00               	movlw	0
  6817  014EFA  0101               	movlb	1	; () banked
  6818  014EFC  6F20               	movwf	_display_flag& (0+255),b
  6819                           
  6820                           ; BSR set to: 1
  6821                           ;ChargeStation_task.c: 155: display_LCD();
  6822  014EFE  EC8E  F082         	call	_display_LCD	;wreg free
  6823  014F02                     l12752:
  6824                           
  6825                           ;ChargeStation_task.c: 156: }
  6826                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6827  014F02  0101               	movlb	1	; () banked
  6828  014F04  5124               	movf	_terminal_data_out& (0+255),w,b
  6829  014F06  B4D8               	btfsc	status,2,c
  6830  014F08  0012               	return	
  6831                           
  6832                           ; BSR set to: 1
  6833  014F0A  0101               	movlb	1	; () banked
  6834  014F0C  5125               	movf	_terminal_data_out_flag& (0+255),w,b
  6835  014F0E  B4D8               	btfsc	status,2,c
  6836  014F10  0012               	return	
  6837                           
  6838                           ; BSR set to: 1
  6839                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6840  014F12  0E00               	movlw	0
  6841  014F14  0101               	movlb	1	; () banked
  6842  014F16  6F25               	movwf	_terminal_data_out_flag& (0+255),b
  6843                           
  6844                           ; BSR set to: 1
  6845                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6846  014F18  0EC6               	movlw	low _usb_tx
  6847  014F1A  0100               	movlb	0	; () banked
  6848  014F1C  6FAB               	movwf	data_out@tx& (0+255),b
  6849  014F1E  0E02               	movlw	high _usb_tx
  6850  014F20  0100               	movlb	0	; () banked
  6851  014F22  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6852  014F24  EC1E  F097         	call	_data_out	;wreg free
  6853  014F28  0012               	return	
  6854  014F2A                     __end_of_normal_task:
  6855                           	opt stack 0
  6856                           tblptru	equ	0xFF8
  6857                           tblptrh	equ	0xFF7
  6858                           tblptrl	equ	0xFF6
  6859                           tablat	equ	0xFF5
  6860                           prodh	equ	0xFF4
  6861                           prodl	equ	0xFF3
  6862                           intcon	equ	0xFF2
  6863                           postinc0	equ	0xFEE
  6864                           wreg	equ	0xFE8
  6865                           postinc1	equ	0xFE6
  6866                           postdec1	equ	0xFE5
  6867                           fsr1h	equ	0xFE2
  6868                           fsr1l	equ	0xFE1
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _settings_task *****************
  6877 ;; Defined at:
  6878 ;;		line 193 in file "settings.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;		None               void
  6885 ;; Registers used:
  6886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;Total ram usage:        1 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:   18
  6899 ;; This function calls:
  6900 ;;		_display
  6901 ;;		_settings_adjust_time
  6902 ;;		_settings_auto_stop
  6903 ;;		_settings_integrating_reset
  6904 ;;		_settings_led_indicator
  6905 ;; This function is called by:
  6906 ;;		_normal_task
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text17
  6911  012A2A                     __ptext17:
  6912                           	opt stack 0
  6913  012A2A                     _settings_task:
  6914                           	opt stack 11
  6915                           
  6916                           ;settings.c: 194: static uint8_t settings_state = 0;
  6917                           ;settings.c: 195: switch (settings_state) {
  6918                           
  6919                           ;incstack = 0
  6920  012A2A  D103               	goto	l12516
  6921  012A2C                     l12434:
  6922                           
  6923                           ;settings.c: 197: settings_item = SELECT;
  6924  012A2C  0E00               	movlw	0
  6925  012A2E  6E20               	movwf	_settings_item,c
  6926                           
  6927                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6928  012A30  0E5E               	movlw	low STR_104
  6929  012A32  0100               	movlb	0	; () banked
  6930  012A34  6F60               	movwf	display@str0& (0+255),b
  6931  012A36  0EFF               	movlw	high STR_104
  6932  012A38  0100               	movlb	0	; () banked
  6933  012A3A  6F61               	movwf	(display@str0+1)& (0+255),b
  6934  012A3C  0E5F               	movlw	low STR_105
  6935  012A3E  0100               	movlb	0	; () banked
  6936  012A40  6F62               	movwf	display@str1& (0+255),b
  6937  012A42  0EFE               	movlw	high STR_105
  6938  012A44  0100               	movlb	0	; () banked
  6939  012A46  6F63               	movwf	(display@str1+1)& (0+255),b
  6940  012A48  0E03               	movlw	3
  6941  012A4A  ECE0  F09B         	call	_display
  6942                           
  6943                           ;settings.c: 199: settings_state += 1;
  6944  012A4E  0101               	movlb	1	; () banked
  6945  012A50  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  6946                           
  6947                           ;settings.c: 200: break;
  6948  012A52  0012               	return	
  6949  012A54                     l12440:
  6950                           
  6951                           ; BSR set to: 1
  6952                           ;settings.c: 202: {
  6953                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6954  012A54  0E00               	movlw	0
  6955  012A56  0100               	movlb	0	; () banked
  6956  012A58  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6960  012A5A  0101               	movlb	1	; () banked
  6961  012A5C  A15E               	btfss	(_port+48)& (0+255),0,b
  6962  012A5E  D010               	goto	l12454
  6963                           
  6964                           ; BSR set to: 1
  6965                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6966  012A60  0E00               	movlw	0
  6967  012A62  0101               	movlb	1	; () banked
  6968  012A64  6F5F               	movwf	(_port+49)& (0+255),b
  6969  012A66  0E00               	movlw	0
  6970  012A68  6F5E               	movwf	(_port+48)& (0+255),b
  6971                           
  6972                           ; BSR set to: 1
  6973                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6974  012A6A  0E04               	movlw	4
  6975  012A6C  1820               	xorwf	_settings_item,w,c
  6976  012A6E  A4D8               	btfss	status,2,c
  6977  012A70  D003               	goto	l12450
  6978                           
  6979                           ; BSR set to: 1
  6980  012A72  0E00               	movlw	0
  6981  012A74  6E20               	movwf	_settings_item,c
  6982  012A76  D001               	goto	l12452
  6983  012A78                     l12450:
  6984                           
  6985                           ; BSR set to: 1
  6986                           ;settings.c: 207: else settings_item++;
  6987  012A78  2A20               	incf	_settings_item,f,c
  6988  012A7A                     l12452:
  6989                           
  6990                           ; BSR set to: 1
  6991                           ;settings.c: 208: item_change_flag = 1;
  6992  012A7A  0E01               	movlw	1
  6993  012A7C  0100               	movlb	0	; () banked
  6994  012A7E  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6995  012A80                     l12454:
  6996                           
  6997                           ;settings.c: 209: }
  6998                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6999  012A80  0101               	movlb	1	; () banked
  7000  012A82  A130               	btfss	(_port+2)& (0+255),0,b
  7001  012A84  D00F               	goto	l12464
  7002                           
  7003                           ; BSR set to: 1
  7004                           ;settings.c: 211: port[0].ctmu.flags = 0;
  7005  012A86  0E00               	movlw	0
  7006  012A88  0101               	movlb	1	; () banked
  7007  012A8A  6F31               	movwf	(_port+3)& (0+255),b
  7008  012A8C  0E00               	movlw	0
  7009  012A8E  6F30               	movwf	(_port+2)& (0+255),b
  7010                           
  7011                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  7012  012A90  5020               	movf	_settings_item,w,c
  7013  012A92  A4D8               	btfss	status,2,c
  7014  012A94  D003               	goto	l12460
  7015                           
  7016                           ; BSR set to: 1
  7017  012A96  0E04               	movlw	4
  7018  012A98  6E20               	movwf	_settings_item,c
  7019  012A9A  D001               	goto	l12462
  7020  012A9C                     l12460:
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;settings.c: 213: else settings_item--;
  7024  012A9C  0620               	decf	_settings_item,f,c
  7025  012A9E                     l12462:
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;settings.c: 214: item_change_flag = 1;
  7029  012A9E  0E01               	movlw	1
  7030  012AA0  0100               	movlb	0	; () banked
  7031  012AA2  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7032  012AA4                     l12464:
  7033                           
  7034                           ;settings.c: 215: }
  7035                           ;settings.c: 216: if (item_change_flag) {
  7036  012AA4  0100               	movlb	0	; () banked
  7037  012AA6  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  7038  012AA8  0100               	movlb	0	; () banked
  7039  012AAA  A4D8               	btfss	status,2,c
  7040  012AAC  D051               	goto	l12480
  7041  012AAE  D060               	goto	l1934
  7042  012AB0                     l12468:
  7043                           
  7044                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  7045  012AB0  0E5E               	movlw	low STR_104
  7046  012AB2  0100               	movlb	0	; () banked
  7047  012AB4  6F60               	movwf	display@str0& (0+255),b
  7048  012AB6  0EFF               	movlw	high STR_104
  7049  012AB8  0100               	movlb	0	; () banked
  7050  012ABA  6F61               	movwf	(display@str0+1)& (0+255),b
  7051  012ABC  0E5F               	movlw	low STR_105
  7052  012ABE  0100               	movlb	0	; () banked
  7053  012AC0  6F62               	movwf	display@str1& (0+255),b
  7054  012AC2  0EFE               	movlw	high STR_105
  7055  012AC4  0100               	movlb	0	; () banked
  7056  012AC6  6F63               	movwf	(display@str1+1)& (0+255),b
  7057  012AC8  0E03               	movlw	3
  7058  012ACA  ECE0  F09B         	call	_display
  7059                           
  7060                           ;settings.c: 220: break;
  7061  012ACE  D050               	goto	l1934
  7062  012AD0                     l12470:
  7063                           
  7064                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7065  012AD0  0E5E               	movlw	low STR_104
  7066  012AD2  0100               	movlb	0	; () banked
  7067  012AD4  6F60               	movwf	display@str0& (0+255),b
  7068  012AD6  0EFF               	movlw	high STR_104
  7069  012AD8  0100               	movlb	0	; () banked
  7070  012ADA  6F61               	movwf	(display@str0+1)& (0+255),b
  7071  012ADC  0EA3               	movlw	low STR_109
  7072  012ADE  0100               	movlb	0	; () banked
  7073  012AE0  6F62               	movwf	display@str1& (0+255),b
  7074  012AE2  0EFE               	movlw	high STR_109
  7075  012AE4  0100               	movlb	0	; () banked
  7076  012AE6  6F63               	movwf	(display@str1+1)& (0+255),b
  7077  012AE8  0E03               	movlw	3
  7078  012AEA  ECE0  F09B         	call	_display
  7079                           
  7080                           ;settings.c: 223: break;
  7081  012AEE  D040               	goto	l1934
  7082  012AF0                     l12472:
  7083                           
  7084                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7085  012AF0  0E5E               	movlw	low STR_104
  7086  012AF2  0100               	movlb	0	; () banked
  7087  012AF4  6F60               	movwf	display@str0& (0+255),b
  7088  012AF6  0EFF               	movlw	high STR_104
  7089  012AF8  0100               	movlb	0	; () banked
  7090  012AFA  6F61               	movwf	(display@str0+1)& (0+255),b
  7091  012AFC  0E70               	movlw	low STR_111
  7092  012AFE  0100               	movlb	0	; () banked
  7093  012B00  6F62               	movwf	display@str1& (0+255),b
  7094  012B02  0EFE               	movlw	high STR_111
  7095  012B04  0100               	movlb	0	; () banked
  7096  012B06  6F63               	movwf	(display@str1+1)& (0+255),b
  7097  012B08  0E03               	movlw	3
  7098  012B0A  ECE0  F09B         	call	_display
  7099                           
  7100                           ;settings.c: 226: break;
  7101  012B0E  D030               	goto	l1934
  7102  012B10                     l12474:
  7103                           
  7104                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7105  012B10  0E5E               	movlw	low STR_104
  7106  012B12  0100               	movlb	0	; () banked
  7107  012B14  6F60               	movwf	display@str0& (0+255),b
  7108  012B16  0EFF               	movlw	high STR_104
  7109  012B18  0100               	movlb	0	; () banked
  7110  012B1A  6F61               	movwf	(display@str0+1)& (0+255),b
  7111  012B1C  0EB3               	movlw	low STR_113
  7112  012B1E  0100               	movlb	0	; () banked
  7113  012B20  6F62               	movwf	display@str1& (0+255),b
  7114  012B22  0EFE               	movlw	high STR_113
  7115  012B24  0100               	movlb	0	; () banked
  7116  012B26  6F63               	movwf	(display@str1+1)& (0+255),b
  7117  012B28  0E03               	movlw	3
  7118  012B2A  ECE0  F09B         	call	_display
  7119                           
  7120                           ;settings.c: 229: break;
  7121  012B2E  D020               	goto	l1934
  7122  012B30                     l12476:
  7123                           
  7124                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7125  012B30  0E5E               	movlw	low STR_104
  7126  012B32  0100               	movlb	0	; () banked
  7127  012B34  6F60               	movwf	display@str0& (0+255),b
  7128  012B36  0EFF               	movlw	high STR_104
  7129  012B38  0100               	movlb	0	; () banked
  7130  012B3A  6F61               	movwf	(display@str0+1)& (0+255),b
  7131  012B3C  0ED3               	movlw	low STR_115
  7132  012B3E  0100               	movlb	0	; () banked
  7133  012B40  6F62               	movwf	display@str1& (0+255),b
  7134  012B42  0EFE               	movlw	high STR_115
  7135  012B44  0100               	movlb	0	; () banked
  7136  012B46  6F63               	movwf	(display@str1+1)& (0+255),b
  7137  012B48  0E03               	movlw	3
  7138  012B4A  ECE0  F09B         	call	_display
  7139                           
  7140                           ;settings.c: 233: }
  7141                           
  7142                           ;settings.c: 232: break;
  7143  012B4E  D010               	goto	l1934
  7144  012B50                     l12480:
  7145  012B50  5020               	movf	_settings_item,w,c
  7146                           
  7147                           ; Switch size 1, requested type "space"
  7148                           ; Number of cases is 5, Range of values is 0 to 4
  7149                           ; switch strategies available:
  7150                           ; Name         Instructions Cycles
  7151                           ; simple_byte           16     9 (average)
  7152                           ;	Chosen strategy is simple_byte
  7153  012B52  0A00               	xorlw	0	; case 0
  7154  012B54  B4D8               	btfsc	status,2,c
  7155  012B56  D7AC               	goto	l12468
  7156  012B58  0A01               	xorlw	1	; case 1
  7157  012B5A  B4D8               	btfsc	status,2,c
  7158  012B5C  D7B9               	goto	l12470
  7159  012B5E  0A03               	xorlw	3	; case 2
  7160  012B60  B4D8               	btfsc	status,2,c
  7161  012B62  D7C6               	goto	l12472
  7162  012B64  0A01               	xorlw	1	; case 3
  7163  012B66  B4D8               	btfsc	status,2,c
  7164  012B68  D7D3               	goto	l12474
  7165  012B6A  0A07               	xorlw	7	; case 4
  7166  012B6C  B4D8               	btfsc	status,2,c
  7167  012B6E  D7E0               	goto	l12476
  7168  012B70                     l1934:
  7169                           
  7170                           ;settings.c: 234: }
  7171                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7172  012B70  0101               	movlb	1	; () banked
  7173  012B72  A147               	btfss	(_port+25)& (0+255),0,b
  7174  012B74  D007               	goto	l12486
  7175                           
  7176                           ; BSR set to: 1
  7177                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7178  012B76  0E00               	movlw	0
  7179  012B78  0101               	movlb	1	; () banked
  7180  012B7A  6F48               	movwf	(_port+26)& (0+255),b
  7181  012B7C  0E00               	movlw	0
  7182  012B7E  6F47               	movwf	(_port+25)& (0+255),b
  7183                           
  7184                           ; BSR set to: 1
  7185                           ;settings.c: 237: settings_state += 1;
  7186  012B80  0101               	movlb	1	; () banked
  7187  012B82  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  7188  012B84                     l12486:
  7189                           
  7190                           ; BSR set to: 1
  7191                           ;settings.c: 238: }
  7192                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7193  012B84  0100               	movlb	0	; () banked
  7194  012B86  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7195  012B88  0012               	return	
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;settings.c: 240: ctmu_m.flags = 0;
  7199  012B8A  0E00               	movlw	0
  7200  012B8C  0100               	movlb	0	; () banked
  7201  012B8E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7202  012B90  0E00               	movlw	0
  7203  012B92  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7204                           
  7205                           ;settings.c: 241: settings_state = 0;
  7206  012B94  0E00               	movlw	0
  7207  012B96  0101               	movlb	1	; () banked
  7208  012B98  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7209                           
  7210                           ;settings.c: 242: settings_flag = 0;
  7211  012B9A  0E00               	movlw	0
  7212  012B9C  0101               	movlb	1	; () banked
  7213  012B9E  6F22               	movwf	_settings_flag& (0+255),b
  7214                           
  7215                           ; BSR set to: 1
  7216                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7217  012BA0  0EE6               	movlw	low (STR_19+3)
  7218  012BA2  0100               	movlb	0	; () banked
  7219  012BA4  6F60               	movwf	display@str0& (0+255),b
  7220  012BA6  0EFF               	movlw	high (STR_19+3)
  7221  012BA8  0100               	movlb	0	; () banked
  7222  012BAA  6F61               	movwf	(display@str0+1)& (0+255),b
  7223  012BAC  0EE6               	movlw	low (STR_19+3)
  7224  012BAE  0100               	movlb	0	; () banked
  7225  012BB0  6F62               	movwf	display@str1& (0+255),b
  7226  012BB2  0EFF               	movlw	high (STR_19+3)
  7227  012BB4  0100               	movlb	0	; () banked
  7228  012BB6  6F63               	movwf	(display@str1+1)& (0+255),b
  7229  012BB8  0E01               	movlw	1
  7230  012BBA  ECE0  F09B         	call	_display
  7231                           
  7232                           ;settings.c: 244: }
  7233                           ;settings.c: 245: }
  7234                           ;settings.c: 246: break;
  7235  012BBE  0012               	return	
  7236  012BC0                     l12492:
  7237                           
  7238                           ;settings.c: 250: settings_state = 1;
  7239  012BC0  0E01               	movlw	1
  7240  012BC2  0101               	movlb	1	; () banked
  7241  012BC4  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7242                           
  7243                           ;settings.c: 251: break;
  7244  012BC6  0012               	return	
  7245  012BC8                     l12494:
  7246                           
  7247                           ;settings.c: 253: if (settings_adjust_time()) {
  7248  012BC8  ECF7  F0A2         	call	_settings_adjust_time	;wreg free
  7249  012BCC  0900               	iorlw	0
  7250  012BCE  B4D8               	btfsc	status,2,c
  7251  012BD0  0012               	return	
  7252                           
  7253                           ;settings.c: 254: settings_state = 0;
  7254  012BD2  0E00               	movlw	0
  7255  012BD4  0101               	movlb	1	; () banked
  7256  012BD6  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;settings.c: 255: }
  7260                           ;settings.c: 256: break;
  7261  012BD8  0012               	return	
  7262  012BDA                     l12498:
  7263                           
  7264                           ;settings.c: 258: if (settings_auto_stop()) {
  7265  012BDA  ECF4  F093         	call	_settings_auto_stop	;wreg free
  7266  012BDE  0900               	iorlw	0
  7267  012BE0  B4D8               	btfsc	status,2,c
  7268  012BE2  0012               	return	
  7269                           
  7270                           ;settings.c: 259: settings_state = 0;
  7271  012BE4  0E00               	movlw	0
  7272  012BE6  0101               	movlb	1	; () banked
  7273  012BE8  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;settings.c: 260: }
  7277                           ;settings.c: 261: break;
  7278  012BEA  0012               	return	
  7279  012BEC                     l12502:
  7280                           
  7281                           ;settings.c: 263: if (settings_led_indicator()) {
  7282  012BEC  ECCA  F092         	call	_settings_led_indicator	;wreg free
  7283  012BF0  0900               	iorlw	0
  7284  012BF2  B4D8               	btfsc	status,2,c
  7285  012BF4  0012               	return	
  7286                           
  7287                           ;settings.c: 264: settings_state = 0;
  7288  012BF6  0E00               	movlw	0
  7289  012BF8  0101               	movlb	1	; () banked
  7290  012BFA  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;settings.c: 265: }
  7294                           ;settings.c: 266: break;
  7295  012BFC  0012               	return	
  7296  012BFE                     l12506:
  7297                           
  7298                           ;settings.c: 268: if (settings_integrating_reset()) {
  7299  012BFE  EC9B  F091         	call	_settings_integrating_reset	;wreg free
  7300  012C02  0900               	iorlw	0
  7301  012C04  B4D8               	btfsc	status,2,c
  7302  012C06  0012               	return	
  7303                           
  7304                           ;settings.c: 269: settings_state = 0;
  7305  012C08  0E00               	movlw	0
  7306  012C0A  0101               	movlb	1	; () banked
  7307  012C0C  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7308                           
  7309                           ; BSR set to: 1
  7310                           ;settings.c: 274: }
  7311                           
  7312                           ; BSR set to: 1
  7313                           ;settings.c: 273: break;
  7314                           
  7315                           ;settings.c: 272: default:
  7316                           
  7317                           ; BSR set to: 1
  7318                           ;settings.c: 270: }
  7319                           ;settings.c: 271: break;
  7320  012C0E  0012               	return	
  7321  012C10                     l12512:
  7322  012C10  5020               	movf	_settings_item,w,c
  7323                           
  7324                           ; Switch size 1, requested type "space"
  7325                           ; Number of cases is 5, Range of values is 0 to 4
  7326                           ; switch strategies available:
  7327                           ; Name         Instructions Cycles
  7328                           ; simple_byte           16     9 (average)
  7329                           ;	Chosen strategy is simple_byte
  7330  012C12  0A00               	xorlw	0	; case 0
  7331  012C14  B4D8               	btfsc	status,2,c
  7332  012C16  D7D4               	goto	l12492
  7333  012C18  0A01               	xorlw	1	; case 1
  7334  012C1A  B4D8               	btfsc	status,2,c
  7335  012C1C  D7D5               	goto	l12494
  7336  012C1E  0A03               	xorlw	3	; case 2
  7337  012C20  B4D8               	btfsc	status,2,c
  7338  012C22  D7DB               	goto	l12498
  7339  012C24  0A01               	xorlw	1	; case 3
  7340  012C26  B4D8               	btfsc	status,2,c
  7341  012C28  D7E1               	goto	l12502
  7342  012C2A  0A07               	xorlw	7	; case 4
  7343  012C2C  A4D8               	btfss	status,2,c
  7344                           
  7345                           ;settings.c: 276: }
  7346                           
  7347                           ;settings.c: 275: break;
  7348  012C2E  0012               	return	
  7349  012C30  D7E6               	goto	l12506
  7350  012C32                     l12516:
  7351  012C32  0101               	movlb	1	; () banked
  7352  012C34  512B               	movf	settings_task@settings_state& (0+255),w,b
  7353                           
  7354                           ; Switch size 1, requested type "space"
  7355                           ; Number of cases is 3, Range of values is 0 to 2
  7356                           ; switch strategies available:
  7357                           ; Name         Instructions Cycles
  7358                           ; simple_byte           10     6 (average)
  7359                           ;	Chosen strategy is simple_byte
  7360  012C36  0A00               	xorlw	0	; case 0
  7361  012C38  B4D8               	btfsc	status,2,c
  7362  012C3A  D6F8               	goto	l12434
  7363  012C3C  0A01               	xorlw	1	; case 1
  7364  012C3E  B4D8               	btfsc	status,2,c
  7365  012C40  D709               	goto	l12440
  7366  012C42  0A03               	xorlw	3	; case 2
  7367  012C44  A4D8               	btfss	status,2,c
  7368  012C46  0012               	return	
  7369  012C48  D7E3               	goto	l12512
  7370  012C4A                     __end_of_settings_task:
  7371                           	opt stack 0
  7372                           tblptru	equ	0xFF8
  7373                           tblptrh	equ	0xFF7
  7374                           tblptrl	equ	0xFF6
  7375                           tablat	equ	0xFF5
  7376                           prodh	equ	0xFF4
  7377                           prodl	equ	0xFF3
  7378                           intcon	equ	0xFF2
  7379                           postinc0	equ	0xFEE
  7380                           wreg	equ	0xFE8
  7381                           postinc1	equ	0xFE6
  7382                           postdec1	equ	0xFE5
  7383                           fsr1h	equ	0xFE2
  7384                           fsr1l	equ	0xFE1
  7385                           indf2	equ	0xFDF
  7386                           postinc2	equ	0xFDE
  7387                           postdec2	equ	0xFDD
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _settings_led_indicator *****************
  7393 ;; Defined at:
  7394 ;;		line 96 in file "settings.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  i               1   52[BANK0 ] unsigned char 
  7399 ;;  str            20   27[BANK0 ] unsigned char [20]
  7400 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7401 ;;		 -> settings_led_indicator@str_6130(20), 
  7402 ;;  i               1   51[BANK0 ] unsigned char 
  7403 ;;  j               1   53[BANK0 ] unsigned char 
  7404 ;;  str            20    7[BANK0 ] unsigned char [20]
  7405 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7406 ;;		 -> settings_led_indicator@str(20), 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1    wreg      unsigned char 
  7409 ;; Registers used:
  7410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;Total ram usage:       48 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:   13
  7423 ;; This function calls:
  7424 ;;		_LED_output
  7425 ;;		_display
  7426 ;;		_strcpy
  7427 ;; This function is called by:
  7428 ;;		_settings_task
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text18
  7433  012594                     __ptext18:
  7434                           	opt stack 0
  7435  012594                     _settings_led_indicator:
  7436                           	opt stack 15
  7437                           
  7438                           ;settings.c: 97: static uint8_t state = 0;
  7439                           ;settings.c: 98: switch (state) {
  7440                           
  7441                           ;incstack = 0
  7442  012594  D100               	goto	l11980
  7443  012596                     l11916:
  7444                           
  7445                           ;settings.c: 100: {
  7446                           ;settings.c: 101: char str[20];
  7447                           ;settings.c: 102: char *strp;
  7448                           ;settings.c: 103: strp = str;
  7449  012596  0E67               	movlw	low settings_led_indicator@str
  7450  012598  0100               	movlb	0	; () banked
  7451  01259A  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7452  01259C  0E00               	movlw	high settings_led_indicator@str
  7453  01259E  0100               	movlb	0	; () banked
  7454  0125A0  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7458  0125A2  0E00               	movlw	0
  7459  0125A4  0100               	movlb	0	; () banked
  7460  0125A6  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7461  0125A8                     l11920:
  7462                           
  7463                           ; BSR set to: 0
  7464  0125A8  0E02               	movlw	2
  7465  0125AA  0100               	movlb	0	; () banked
  7466  0125AC  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7467  0125AE  D001               	goto	l11924
  7468  0125B0  D031               	goto	l11936
  7469  0125B2                     l11924:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7473  0125B2  0100               	movlb	0	; () banked
  7474  0125B4  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7475  0125B6  0D17               	mullw	23
  7476  0125B8  0E16               	movlw	22
  7477  0125BA  26F3               	addwf	prodl,f,c
  7478  0125BC  0E00               	movlw	0
  7479  0125BE  22F4               	addwfc	prodh,f,c
  7480  0125C0  0E2E               	movlw	low _port
  7481  0125C2  24F3               	addwf	prodl,w,c
  7482  0125C4  6ED9               	movwf	fsr2l,c
  7483  0125C6  0E01               	movlw	high _port
  7484  0125C8  20F4               	addwfc	prodh,w,c
  7485  0125CA  6EDA               	movwf	fsr2h,c
  7486  0125CC  0101               	movlb	1	; () banked
  7487  0125CE  A2DF               	btfss	indf2,1,c
  7488  0125D0  D00D               	goto	l11928
  7489                           
  7490                           ; BSR set to: 1
  7491  0125D2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7492  0125D6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7493  0125DA  0EA5               	movlw	low STR_80
  7494  0125DC  0100               	movlb	0	; () banked
  7495  0125DE  6F62               	movwf	strcpy@from& (0+255),b
  7496  0125E0  0EFF               	movlw	high STR_80
  7497  0125E2  0100               	movlb	0	; () banked
  7498  0125E4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7499  0125E6  EC1D  F0B4         	call	_strcpy	;wreg free
  7500  0125EA  D00C               	goto	l11930
  7501  0125EC                     l11928:
  7502                           
  7503                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7504  0125EC  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7505  0125F0  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7506  0125F4  0EAB               	movlw	low STR_81
  7507  0125F6  0100               	movlb	0	; () banked
  7508  0125F8  6F62               	movwf	strcpy@from& (0+255),b
  7509  0125FA  0EFF               	movlw	high STR_81
  7510  0125FC  0100               	movlb	0	; () banked
  7511  0125FE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7512  012600  EC1D  F0B4         	call	_strcpy	;wreg free
  7513  012604                     l11930:
  7514                           
  7515                           ;settings.c: 107: strp += 5;
  7516  012604  0E05               	movlw	5
  7517  012606  0100               	movlb	0	; () banked
  7518  012608  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7519  01260A  0E00               	movlw	0
  7520  01260C  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7521                           
  7522                           ; BSR set to: 0
  7523  01260E  0100               	movlb	0	; () banked
  7524  012610  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7525  012612  D7CA               	goto	l11920
  7526  012614                     l11936:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;settings.c: 108: }
  7530                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7531  012614  0E81               	movlw	low STR_82
  7532  012616  0100               	movlb	0	; () banked
  7533  012618  6F60               	movwf	display@str0& (0+255),b
  7534  01261A  0EFE               	movlw	high STR_82
  7535  01261C  0100               	movlb	0	; () banked
  7536  01261E  6F61               	movwf	(display@str0+1)& (0+255),b
  7537  012620  0E67               	movlw	low settings_led_indicator@str
  7538  012622  0100               	movlb	0	; () banked
  7539  012624  6F62               	movwf	display@str1& (0+255),b
  7540  012626  0E00               	movlw	high settings_led_indicator@str
  7541  012628  0100               	movlb	0	; () banked
  7542  01262A  6F63               	movwf	(display@str1+1)& (0+255),b
  7543  01262C  0E03               	movlw	3
  7544  01262E  ECE0  F09B         	call	_display
  7545                           
  7546                           ;settings.c: 110: state = 1;
  7547  012632  0E01               	movlw	1
  7548  012634  0101               	movlb	1	; () banked
  7549  012636  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7550                           
  7551                           ;settings.c: 111: }
  7552                           ;settings.c: 112: break;
  7553  012638  D0B6               	goto	l1886
  7554  01263A                     l11940:
  7555                           
  7556                           ; BSR set to: 1
  7557                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7558  01263A  0E00               	movlw	0
  7559  01263C  0100               	movlb	0	; () banked
  7560  01263E  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7561  012640                     l11942:
  7562                           
  7563                           ; BSR set to: 0
  7564  012640  0E02               	movlw	2
  7565  012642  0100               	movlb	0	; () banked
  7566  012644  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7567  012646  D001               	goto	l11946
  7568  012648  D0AE               	goto	l1886
  7569  01264A                     l11946:
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7573  01264A  0100               	movlb	0	; () banked
  7574  01264C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7575  01264E  0D17               	mullw	23
  7576  012650  0E02               	movlw	2
  7577  012652  26F3               	addwf	prodl,f,c
  7578  012654  0E00               	movlw	0
  7579  012656  22F4               	addwfc	prodh,f,c
  7580  012658  0E2E               	movlw	low _port
  7581  01265A  24F3               	addwf	prodl,w,c
  7582  01265C  6ED9               	movwf	fsr2l,c
  7583  01265E  0E01               	movlw	high _port
  7584  012660  20F4               	addwfc	prodh,w,c
  7585  012662  6EDA               	movwf	fsr2h,c
  7586  012664  0101               	movlb	1	; () banked
  7587  012666  A0DF               	btfss	indf2,0,c
  7588  012668  D093               	goto	l11974
  7589                           
  7590                           ; BSR set to: 1
  7591                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7592  01266A  0100               	movlb	0	; () banked
  7593  01266C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7594  01266E  0D17               	mullw	23
  7595  012670  0E02               	movlw	2
  7596  012672  26F3               	addwf	prodl,f,c
  7597  012674  0E00               	movlw	0
  7598  012676  22F4               	addwfc	prodh,f,c
  7599  012678  0E2E               	movlw	low _port
  7600  01267A  24F3               	addwf	prodl,w,c
  7601  01267C  6ED9               	movwf	fsr2l,c
  7602  01267E  0E01               	movlw	high _port
  7603  012680  20F4               	addwfc	prodh,w,c
  7604  012682  6EDA               	movwf	fsr2h,c
  7605  012684  0E00               	movlw	0
  7606  012686  6EDE               	movwf	postinc2,c
  7607  012688  0E00               	movlw	0
  7608  01268A  6EDD               	movwf	postdec2,c
  7609                           
  7610                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7611  01268C  0100               	movlb	0	; () banked
  7612  01268E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7613  012690  0D17               	mullw	23
  7614  012692  0E16               	movlw	22
  7615  012694  26F3               	addwf	prodl,f,c
  7616  012696  0E00               	movlw	0
  7617  012698  22F4               	addwfc	prodh,f,c
  7618  01269A  0E2E               	movlw	low _port
  7619  01269C  24F3               	addwf	prodl,w,c
  7620  01269E  6ED9               	movwf	fsr2l,c
  7621  0126A0  0E01               	movlw	high _port
  7622  0126A2  20F4               	addwfc	prodh,w,c
  7623  0126A4  6EDA               	movwf	fsr2h,c
  7624  0126A6  0101               	movlb	1	; () banked
  7625  0126A8  B2DF               	btfsc	indf2,1,c
  7626  0126AA  D004               	goto	u13540
  7627  0126AC  0100               	movlb	0	; () banked
  7628  0126AE  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7629  0126B0  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7630  0126B2  D002               	goto	u13558
  7631  0126B4                     u13540:
  7632  0126B4  0100               	movlb	0	; () banked
  7633  0126B6  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7634  0126B8                     u13558:
  7635  0126B8  0100               	movlb	0	; () banked
  7636  0126BA  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7637  0126BC  0D17               	mullw	23
  7638  0126BE  0E16               	movlw	22
  7639  0126C0  26F3               	addwf	prodl,f,c
  7640  0126C2  0E00               	movlw	0
  7641  0126C4  22F4               	addwfc	prodh,f,c
  7642  0126C6  0E2E               	movlw	low _port
  7643  0126C8  24F3               	addwf	prodl,w,c
  7644  0126CA  6ED9               	movwf	fsr2l,c
  7645  0126CC  0E01               	movlw	high _port
  7646  0126CE  20F4               	addwfc	prodh,w,c
  7647  0126D0  6EDA               	movwf	fsr2h,c
  7648  0126D2  0100               	movlb	0	; () banked
  7649  0126D4  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7650  0126D6  0101               	movlb	1	; () banked
  7651  0126D8  50DF               	movf	223,w,c
  7652  0126DA  0100               	movlb	0	; () banked
  7653  0126DC  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7654  0126DE  0BFD               	andlw	-3
  7655  0126E0  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7656  0126E2  0101               	movlb	1	; () banked
  7657  0126E4  6EDF               	movwf	223,c
  7658                           
  7659                           ; BSR set to: 1
  7660                           ;settings.c: 118: LED_output(j, 0);
  7661  0126E6  0E00               	movlw	0
  7662  0126E8  0100               	movlb	0	; () banked
  7663  0126EA  6F60               	movwf	LED_output@value& (0+255),b
  7664  0126EC  0100               	movlb	0	; () banked
  7665  0126EE  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7666  0126F0  EC9D  F0AF         	call	_LED_output
  7667                           
  7668                           ;settings.c: 119: char str[20];
  7669                           ;settings.c: 120: char *strp;
  7670                           ;settings.c: 121: strp = str;
  7671  0126F4  0E7B               	movlw	low settings_led_indicator@str_6130
  7672  0126F6  0100               	movlb	0	; () banked
  7673  0126F8  6F91               	movwf	settings_led_indicator@strp_6131& (0+255),b
  7674  0126FA  0E00               	movlw	high settings_led_indicator@str_6130
  7675  0126FC  0100               	movlb	0	; () banked
  7676  0126FE  6F92               	movwf	(settings_led_indicator@strp_6131+1)& (0+255),b
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7680  012700  0E00               	movlw	0
  7681  012702  0100               	movlb	0	; () banked
  7682  012704  6F94               	movwf	settings_led_indicator@i_6132& (0+255),b
  7683  012706                     l11956:
  7684                           
  7685                           ; BSR set to: 0
  7686  012706  0E02               	movlw	2
  7687  012708  0100               	movlb	0	; () banked
  7688  01270A  6594               	cpfsgt	settings_led_indicator@i_6132& (0+255),b
  7689  01270C  D001               	goto	l11960
  7690  01270E  D031               	goto	l11972
  7691  012710                     l11960:
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7695  012710  0100               	movlb	0	; () banked
  7696  012712  5194               	movf	settings_led_indicator@i_6132& (0+255),w,b
  7697  012714  0D17               	mullw	23
  7698  012716  0E16               	movlw	22
  7699  012718  26F3               	addwf	prodl,f,c
  7700  01271A  0E00               	movlw	0
  7701  01271C  22F4               	addwfc	prodh,f,c
  7702  01271E  0E2E               	movlw	low _port
  7703  012720  24F3               	addwf	prodl,w,c
  7704  012722  6ED9               	movwf	fsr2l,c
  7705  012724  0E01               	movlw	high _port
  7706  012726  20F4               	addwfc	prodh,w,c
  7707  012728  6EDA               	movwf	fsr2h,c
  7708  01272A  0101               	movlb	1	; () banked
  7709  01272C  A2DF               	btfss	indf2,1,c
  7710  01272E  D00D               	goto	l11964
  7711                           
  7712                           ; BSR set to: 1
  7713  012730  C091  F060         	movff	settings_led_indicator@strp_6131,strcpy@to
  7714  012734  C092  F061         	movff	settings_led_indicator@strp_6131+1,strcpy@to+1
  7715  012738  0EA5               	movlw	low STR_80
  7716  01273A  0100               	movlb	0	; () banked
  7717  01273C  6F62               	movwf	strcpy@from& (0+255),b
  7718  01273E  0EFF               	movlw	high STR_80
  7719  012740  0100               	movlb	0	; () banked
  7720  012742  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7721  012744  EC1D  F0B4         	call	_strcpy	;wreg free
  7722  012748  D00C               	goto	l11966
  7723  01274A                     l11964:
  7724                           
  7725                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7726  01274A  C091  F060         	movff	settings_led_indicator@strp_6131,strcpy@to
  7727  01274E  C092  F061         	movff	settings_led_indicator@strp_6131+1,strcpy@to+1
  7728  012752  0EAB               	movlw	low STR_81
  7729  012754  0100               	movlb	0	; () banked
  7730  012756  6F62               	movwf	strcpy@from& (0+255),b
  7731  012758  0EFF               	movlw	high STR_81
  7732  01275A  0100               	movlb	0	; () banked
  7733  01275C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7734  01275E  EC1D  F0B4         	call	_strcpy	;wreg free
  7735  012762                     l11966:
  7736                           
  7737                           ;settings.c: 125: strp += 5;
  7738  012762  0E05               	movlw	5
  7739  012764  0100               	movlb	0	; () banked
  7740  012766  2791               	addwf	settings_led_indicator@strp_6131& (0+255),f,b
  7741  012768  0E00               	movlw	0
  7742  01276A  2392               	addwfc	(settings_led_indicator@strp_6131+1)& (0+255),f,b
  7743                           
  7744                           ; BSR set to: 0
  7745  01276C  0100               	movlb	0	; () banked
  7746  01276E  2B94               	incf	settings_led_indicator@i_6132& (0+255),f,b
  7747  012770  D7CA               	goto	l11956
  7748  012772                     l11972:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;settings.c: 126: }
  7752                           ;settings.c: 127: display(SETTINGS, "", str);
  7753  012772  0EE6               	movlw	low (STR_19+3)
  7754  012774  0100               	movlb	0	; () banked
  7755  012776  6F60               	movwf	display@str0& (0+255),b
  7756  012778  0EFF               	movlw	high (STR_19+3)
  7757  01277A  0100               	movlb	0	; () banked
  7758  01277C  6F61               	movwf	(display@str0+1)& (0+255),b
  7759  01277E  0E7B               	movlw	low settings_led_indicator@str_6130
  7760  012780  0100               	movlb	0	; () banked
  7761  012782  6F62               	movwf	display@str1& (0+255),b
  7762  012784  0E00               	movlw	high settings_led_indicator@str_6130
  7763  012786  0100               	movlb	0	; () banked
  7764  012788  6F63               	movwf	(display@str1+1)& (0+255),b
  7765  01278A  0E03               	movlw	3
  7766  01278C  ECE0  F09B         	call	_display
  7767  012790                     l11974:
  7768  012790  0100               	movlb	0	; () banked
  7769  012792  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7770  012794  D755               	goto	l11942
  7771  012796                     l11980:
  7772  012796  0101               	movlb	1	; () banked
  7773  012798  512A               	movf	settings_led_indicator@state& (0+255),w,b
  7774                           
  7775                           ; Switch size 1, requested type "space"
  7776                           ; Number of cases is 2, Range of values is 0 to 1
  7777                           ; switch strategies available:
  7778                           ; Name         Instructions Cycles
  7779                           ; simple_byte            7     4 (average)
  7780                           ;	Chosen strategy is simple_byte
  7781  01279A  0A00               	xorlw	0	; case 0
  7782  01279C  B4D8               	btfsc	status,2,c
  7783  01279E  D6FB               	goto	l11916
  7784  0127A0  0A01               	xorlw	1	; case 1
  7785  0127A2  B4D8               	btfsc	status,2,c
  7786  0127A4  D74A               	goto	l11940
  7787  0127A6                     l1886:
  7788                           
  7789                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7790  0127A6  0100               	movlb	0	; () banked
  7791  0127A8  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7792  0127AA  D01C               	goto	l11990
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;settings.c: 135: ctmu_m.flags = 0;
  7796  0127AC  0E00               	movlw	0
  7797  0127AE  0100               	movlb	0	; () banked
  7798  0127B0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7799  0127B2  0E00               	movlw	0
  7800  0127B4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7801                           
  7802                           ;settings.c: 136: state = 0;
  7803  0127B6  0E00               	movlw	0
  7804  0127B8  0101               	movlb	1	; () banked
  7805  0127BA  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7806                           
  7807                           ;settings.c: 137: settings_flag = 0;
  7808  0127BC  0E00               	movlw	0
  7809  0127BE  0101               	movlb	1	; () banked
  7810  0127C0  6F22               	movwf	_settings_flag& (0+255),b
  7811                           
  7812                           ; BSR set to: 1
  7813                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7814  0127C2  0EE6               	movlw	low (STR_19+3)
  7815  0127C4  0100               	movlb	0	; () banked
  7816  0127C6  6F60               	movwf	display@str0& (0+255),b
  7817  0127C8  0EFF               	movlw	high (STR_19+3)
  7818  0127CA  0100               	movlb	0	; () banked
  7819  0127CC  6F61               	movwf	(display@str0+1)& (0+255),b
  7820  0127CE  0EE6               	movlw	low (STR_19+3)
  7821  0127D0  0100               	movlb	0	; () banked
  7822  0127D2  6F62               	movwf	display@str1& (0+255),b
  7823  0127D4  0EFF               	movlw	high (STR_19+3)
  7824  0127D6  0100               	movlb	0	; () banked
  7825  0127D8  6F63               	movwf	(display@str1+1)& (0+255),b
  7826  0127DA  0E01               	movlw	1
  7827  0127DC  ECE0  F09B         	call	_display
  7828                           
  7829                           ;settings.c: 139: return 1;
  7830  0127E0  0E01               	movlw	1
  7831  0127E2  0012               	return	
  7832  0127E4                     l11990:
  7833                           
  7834                           ;settings.c: 140: }
  7835                           ;settings.c: 141: return 0;
  7836  0127E4  0E00               	movlw	0
  7837  0127E6  0012               	return	
  7838  0127E8                     __end_of_settings_led_indicator:
  7839                           	opt stack 0
  7840                           tblptru	equ	0xFF8
  7841                           tblptrh	equ	0xFF7
  7842                           tblptrl	equ	0xFF6
  7843                           tablat	equ	0xFF5
  7844                           prodh	equ	0xFF4
  7845                           prodl	equ	0xFF3
  7846                           intcon	equ	0xFF2
  7847                           postinc0	equ	0xFEE
  7848                           wreg	equ	0xFE8
  7849                           postinc1	equ	0xFE6
  7850                           postdec1	equ	0xFE5
  7851                           fsr1h	equ	0xFE2
  7852                           fsr1l	equ	0xFE1
  7853                           indf2	equ	0xFDF
  7854                           postinc2	equ	0xFDE
  7855                           postdec2	equ	0xFDD
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function _settings_integrating_reset *****************
  7861 ;; Defined at:
  7862 ;;		line 144 in file "settings.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  i               1   55[BANK0 ] unsigned char 
  7867 ;;  str            20   30[BANK0 ] unsigned char [20]
  7868 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7869 ;;		 -> settings_integrating_reset@str_6147(20), 
  7870 ;;  i               1   54[BANK0 ] unsigned char 
  7871 ;;  j               1   56[BANK0 ] unsigned char 
  7872 ;;  str            20   10[BANK0 ] unsigned char [20]
  7873 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7874 ;;		 -> settings_integrating_reset@str(20), 
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      unsigned char 
  7877 ;; Registers used:
  7878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7887 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7888 ;;Total ram usage:       51 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:   13
  7891 ;; This function calls:
  7892 ;;		_display
  7893 ;;		_strcpy
  7894 ;; This function is called by:
  7895 ;;		_settings_task
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text19
  7900  012336                     __ptext19:
  7901                           	opt stack 0
  7902  012336                     _settings_integrating_reset:
  7903                           	opt stack 15
  7904                           
  7905                           ;settings.c: 145: static uint8_t state = 0;
  7906                           ;settings.c: 146: switch (state) {
  7907                           
  7908                           ;incstack = 0
  7909  012336  D105               	goto	l12058
  7910  012338                     l11996:
  7911                           
  7912                           ;settings.c: 148: {
  7913                           ;settings.c: 149: char str[20];
  7914                           ;settings.c: 150: char *strp;
  7915                           ;settings.c: 151: strp = str;
  7916  012338  0E6A               	movlw	low settings_integrating_reset@str
  7917  01233A  0100               	movlb	0	; () banked
  7918  01233C  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7919  01233E  0E00               	movlw	high settings_integrating_reset@str
  7920  012340  0100               	movlb	0	; () banked
  7921  012342  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7925  012344  0E00               	movlw	0
  7926  012346  0100               	movlb	0	; () banked
  7927  012348  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7928  01234A                     l12000:
  7929                           
  7930                           ; BSR set to: 0
  7931  01234A  0E02               	movlw	2
  7932  01234C  0100               	movlb	0	; () banked
  7933  01234E  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7934  012350  D001               	goto	l12004
  7935  012352  D034               	goto	l12016
  7936  012354                     l12004:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7940  012354  0100               	movlb	0	; () banked
  7941  012356  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7942  012358  0D17               	mullw	23
  7943  01235A  0E0C               	movlw	12
  7944  01235C  26F3               	addwf	prodl,f,c
  7945  01235E  0E00               	movlw	0
  7946  012360  22F4               	addwfc	prodh,f,c
  7947  012362  0E2E               	movlw	low _port
  7948  012364  24F3               	addwf	prodl,w,c
  7949  012366  6ED9               	movwf	fsr2l,c
  7950  012368  0E01               	movlw	high _port
  7951  01236A  20F4               	addwfc	prodh,w,c
  7952  01236C  6EDA               	movwf	fsr2h,c
  7953  01236E  50DE               	movf	postinc2,w,c
  7954  012370  10DE               	iorwf	postinc2,w,c
  7955  012372  10DE               	iorwf	postinc2,w,c
  7956  012374  10DE               	iorwf	postinc2,w,c
  7957  012376  B4D8               	btfsc	status,2,c
  7958  012378  D00D               	goto	l12008
  7959                           
  7960                           ; BSR set to: 0
  7961  01237A  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7962  01237E  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7963  012382  0EB1               	movlw	low STR_96
  7964  012384  0100               	movlb	0	; () banked
  7965  012386  6F62               	movwf	strcpy@from& (0+255),b
  7966  012388  0EFF               	movlw	high STR_96
  7967  01238A  0100               	movlb	0	; () banked
  7968  01238C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7969  01238E  EC1D  F0B4         	call	_strcpy	;wreg free
  7970  012392  D00C               	goto	l12010
  7971  012394                     l12008:
  7972                           
  7973                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7974  012394  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7975  012398  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7976  01239C  0E9F               	movlw	low STR_97
  7977  01239E  0100               	movlb	0	; () banked
  7978  0123A0  6F62               	movwf	strcpy@from& (0+255),b
  7979  0123A2  0EFF               	movlw	high STR_97
  7980  0123A4  0100               	movlb	0	; () banked
  7981  0123A6  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7982  0123A8  EC1D  F0B4         	call	_strcpy	;wreg free
  7983  0123AC                     l12010:
  7984                           
  7985                           ;settings.c: 155: strp += 5;
  7986  0123AC  0E05               	movlw	5
  7987  0123AE  0100               	movlb	0	; () banked
  7988  0123B0  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7989  0123B2  0E00               	movlw	0
  7990  0123B4  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7991                           
  7992                           ; BSR set to: 0
  7993  0123B6  0100               	movlb	0	; () banked
  7994  0123B8  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7995  0123BA  D7C7               	goto	l12000
  7996  0123BC                     l12016:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;settings.c: 156: }
  8000                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  8001  0123BC  0E81               	movlw	low STR_82
  8002  0123BE  0100               	movlb	0	; () banked
  8003  0123C0  6F60               	movwf	display@str0& (0+255),b
  8004  0123C2  0EFE               	movlw	high STR_82
  8005  0123C4  0100               	movlb	0	; () banked
  8006  0123C6  6F61               	movwf	(display@str0+1)& (0+255),b
  8007  0123C8  0E6A               	movlw	low settings_integrating_reset@str
  8008  0123CA  0100               	movlb	0	; () banked
  8009  0123CC  6F62               	movwf	display@str1& (0+255),b
  8010  0123CE  0E00               	movlw	high settings_integrating_reset@str
  8011  0123D0  0100               	movlb	0	; () banked
  8012  0123D2  6F63               	movwf	(display@str1+1)& (0+255),b
  8013  0123D4  0E03               	movlw	3
  8014  0123D6  ECE0  F09B         	call	_display
  8015                           
  8016                           ;settings.c: 158: state = 1;
  8017  0123DA  0E01               	movlw	1
  8018  0123DC  0101               	movlb	1	; () banked
  8019  0123DE  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8020                           
  8021                           ;settings.c: 159: }
  8022                           ;settings.c: 160: break;
  8023  0123E0  D0B8               	goto	l1908
  8024  0123E2                     l12020:
  8025                           
  8026                           ; BSR set to: 1
  8027                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  8028  0123E2  0E00               	movlw	0
  8029  0123E4  0100               	movlb	0	; () banked
  8030  0123E6  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  8031  0123E8                     l12022:
  8032                           
  8033                           ; BSR set to: 0
  8034  0123E8  0E02               	movlw	2
  8035  0123EA  0100               	movlb	0	; () banked
  8036  0123EC  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  8037  0123EE  D001               	goto	l12026
  8038  0123F0  D0B0               	goto	l1908
  8039  0123F2                     l12026:
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  8043  0123F2  0100               	movlb	0	; () banked
  8044  0123F4  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8045  0123F6  0D17               	mullw	23
  8046  0123F8  0E02               	movlw	2
  8047  0123FA  26F3               	addwf	prodl,f,c
  8048  0123FC  0E00               	movlw	0
  8049  0123FE  22F4               	addwfc	prodh,f,c
  8050  012400  0E2E               	movlw	low _port
  8051  012402  24F3               	addwf	prodl,w,c
  8052  012404  6ED9               	movwf	fsr2l,c
  8053  012406  0E01               	movlw	high _port
  8054  012408  20F4               	addwfc	prodh,w,c
  8055  01240A  6EDA               	movwf	fsr2h,c
  8056  01240C  0101               	movlb	1	; () banked
  8057  01240E  A0DF               	btfss	indf2,0,c
  8058  012410  D095               	goto	l12052
  8059                           
  8060                           ; BSR set to: 1
  8061                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8062  012412  0100               	movlb	0	; () banked
  8063  012414  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8064  012416  0D17               	mullw	23
  8065  012418  0E02               	movlw	2
  8066  01241A  26F3               	addwf	prodl,f,c
  8067  01241C  0E00               	movlw	0
  8068  01241E  22F4               	addwfc	prodh,f,c
  8069  012420  0E2E               	movlw	low _port
  8070  012422  24F3               	addwf	prodl,w,c
  8071  012424  6ED9               	movwf	fsr2l,c
  8072  012426  0E01               	movlw	high _port
  8073  012428  20F4               	addwfc	prodh,w,c
  8074  01242A  6EDA               	movwf	fsr2h,c
  8075  01242C  0E00               	movlw	0
  8076  01242E  6EDE               	movwf	postinc2,c
  8077  012430  0E00               	movlw	0
  8078  012432  6EDD               	movwf	postdec2,c
  8079                           
  8080                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8081  012434  0100               	movlb	0	; () banked
  8082  012436  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8083  012438  0D17               	mullw	23
  8084  01243A  0E08               	movlw	8
  8085  01243C  26F3               	addwf	prodl,f,c
  8086  01243E  0E00               	movlw	0
  8087  012440  22F4               	addwfc	prodh,f,c
  8088  012442  0E2E               	movlw	low _port
  8089  012444  24F3               	addwf	prodl,w,c
  8090  012446  6ED9               	movwf	fsr2l,c
  8091  012448  0E01               	movlw	high _port
  8092  01244A  20F4               	addwfc	prodh,w,c
  8093  01244C  6EDA               	movwf	fsr2h,c
  8094  01244E  6ADE               	clrf	postinc2,c
  8095  012450  6ADE               	clrf	postinc2,c
  8096  012452  6ADE               	clrf	postinc2,c
  8097  012454  6ADD               	clrf	postdec2,c
  8098                           
  8099                           ;settings.c: 166: port[j].integrated_current = 0;
  8100  012456  0100               	movlb	0	; () banked
  8101  012458  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8102  01245A  0D17               	mullw	23
  8103  01245C  0E0C               	movlw	12
  8104  01245E  26F3               	addwf	prodl,f,c
  8105  012460  0E00               	movlw	0
  8106  012462  22F4               	addwfc	prodh,f,c
  8107  012464  0E2E               	movlw	low _port
  8108  012466  24F3               	addwf	prodl,w,c
  8109  012468  6ED9               	movwf	fsr2l,c
  8110  01246A  0E01               	movlw	high _port
  8111  01246C  20F4               	addwfc	prodh,w,c
  8112  01246E  6EDA               	movwf	fsr2h,c
  8113  012470  6ADE               	clrf	postinc2,c
  8114  012472  6ADE               	clrf	postinc2,c
  8115  012474  6ADE               	clrf	postinc2,c
  8116  012476  6ADD               	clrf	postdec2,c
  8117                           
  8118                           ;settings.c: 167: port[j].integrated_time = 0;
  8119  012478  0100               	movlb	0	; () banked
  8120  01247A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8121  01247C  0D17               	mullw	23
  8122  01247E  0E10               	movlw	16
  8123  012480  26F3               	addwf	prodl,f,c
  8124  012482  0E00               	movlw	0
  8125  012484  22F4               	addwfc	prodh,f,c
  8126  012486  0E2E               	movlw	low _port
  8127  012488  24F3               	addwf	prodl,w,c
  8128  01248A  6ED9               	movwf	fsr2l,c
  8129  01248C  0E01               	movlw	high _port
  8130  01248E  20F4               	addwfc	prodh,w,c
  8131  012490  6EDA               	movwf	fsr2h,c
  8132  012492  6ADE               	clrf	postinc2,c
  8133  012494  6ADE               	clrf	postinc2,c
  8134  012496  6ADE               	clrf	postinc2,c
  8135  012498  6ADD               	clrf	postdec2,c
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;settings.c: 168: char str[20];
  8139                           ;settings.c: 169: char *strp;
  8140                           ;settings.c: 170: strp = str;
  8141  01249A  0E7E               	movlw	low settings_integrating_reset@str_6147
  8142  01249C  0100               	movlb	0	; () banked
  8143  01249E  6F94               	movwf	settings_integrating_reset@strp_6148& (0+255),b
  8144  0124A0  0E00               	movlw	high settings_integrating_reset@str_6147
  8145  0124A2  0100               	movlb	0	; () banked
  8146  0124A4  6F95               	movwf	(settings_integrating_reset@strp_6148+1)& (0+255),b
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8150  0124A6  0E00               	movlw	0
  8151  0124A8  0100               	movlb	0	; () banked
  8152  0124AA  6F97               	movwf	settings_integrating_reset@i_6149& (0+255),b
  8153  0124AC                     l12034:
  8154                           
  8155                           ; BSR set to: 0
  8156  0124AC  0E02               	movlw	2
  8157  0124AE  0100               	movlb	0	; () banked
  8158  0124B0  6597               	cpfsgt	settings_integrating_reset@i_6149& (0+255),b
  8159  0124B2  D001               	goto	l12038
  8160  0124B4  D034               	goto	l12050
  8161  0124B6                     l12038:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8165  0124B6  0100               	movlb	0	; () banked
  8166  0124B8  5197               	movf	settings_integrating_reset@i_6149& (0+255),w,b
  8167  0124BA  0D17               	mullw	23
  8168  0124BC  0E0C               	movlw	12
  8169  0124BE  26F3               	addwf	prodl,f,c
  8170  0124C0  0E00               	movlw	0
  8171  0124C2  22F4               	addwfc	prodh,f,c
  8172  0124C4  0E2E               	movlw	low _port
  8173  0124C6  24F3               	addwf	prodl,w,c
  8174  0124C8  6ED9               	movwf	fsr2l,c
  8175  0124CA  0E01               	movlw	high _port
  8176  0124CC  20F4               	addwfc	prodh,w,c
  8177  0124CE  6EDA               	movwf	fsr2h,c
  8178  0124D0  50DE               	movf	postinc2,w,c
  8179  0124D2  10DE               	iorwf	postinc2,w,c
  8180  0124D4  10DE               	iorwf	postinc2,w,c
  8181  0124D6  10DE               	iorwf	postinc2,w,c
  8182  0124D8  B4D8               	btfsc	status,2,c
  8183  0124DA  D00D               	goto	l12042
  8184                           
  8185                           ; BSR set to: 0
  8186  0124DC  C094  F060         	movff	settings_integrating_reset@strp_6148,strcpy@to
  8187  0124E0  C095  F061         	movff	settings_integrating_reset@strp_6148+1,strcpy@to+1
  8188  0124E4  0EB1               	movlw	low STR_96
  8189  0124E6  0100               	movlb	0	; () banked
  8190  0124E8  6F62               	movwf	strcpy@from& (0+255),b
  8191  0124EA  0EFF               	movlw	high STR_96
  8192  0124EC  0100               	movlb	0	; () banked
  8193  0124EE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8194  0124F0  EC1D  F0B4         	call	_strcpy	;wreg free
  8195  0124F4  D00C               	goto	l12044
  8196  0124F6                     l12042:
  8197                           
  8198                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8199  0124F6  C094  F060         	movff	settings_integrating_reset@strp_6148,strcpy@to
  8200  0124FA  C095  F061         	movff	settings_integrating_reset@strp_6148+1,strcpy@to+1
  8201  0124FE  0E9F               	movlw	low STR_97
  8202  012500  0100               	movlb	0	; () banked
  8203  012502  6F62               	movwf	strcpy@from& (0+255),b
  8204  012504  0EFF               	movlw	high STR_97
  8205  012506  0100               	movlb	0	; () banked
  8206  012508  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8207  01250A  EC1D  F0B4         	call	_strcpy	;wreg free
  8208  01250E                     l12044:
  8209                           
  8210                           ;settings.c: 174: strp += 5;
  8211  01250E  0E05               	movlw	5
  8212  012510  0100               	movlb	0	; () banked
  8213  012512  2794               	addwf	settings_integrating_reset@strp_6148& (0+255),f,b
  8214  012514  0E00               	movlw	0
  8215  012516  2395               	addwfc	(settings_integrating_reset@strp_6148+1)& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 0
  8218  012518  0100               	movlb	0	; () banked
  8219  01251A  2B97               	incf	settings_integrating_reset@i_6149& (0+255),f,b
  8220  01251C  D7C7               	goto	l12034
  8221  01251E                     l12050:
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;settings.c: 175: }
  8225                           ;settings.c: 176: display(SETTINGS, "", str);
  8226  01251E  0EE6               	movlw	low (STR_19+3)
  8227  012520  0100               	movlb	0	; () banked
  8228  012522  6F60               	movwf	display@str0& (0+255),b
  8229  012524  0EFF               	movlw	high (STR_19+3)
  8230  012526  0100               	movlb	0	; () banked
  8231  012528  6F61               	movwf	(display@str0+1)& (0+255),b
  8232  01252A  0E7E               	movlw	low settings_integrating_reset@str_6147
  8233  01252C  0100               	movlb	0	; () banked
  8234  01252E  6F62               	movwf	display@str1& (0+255),b
  8235  012530  0E00               	movlw	high settings_integrating_reset@str_6147
  8236  012532  0100               	movlb	0	; () banked
  8237  012534  6F63               	movwf	(display@str1+1)& (0+255),b
  8238  012536  0E03               	movlw	3
  8239  012538  ECE0  F09B         	call	_display
  8240  01253C                     l12052:
  8241  01253C  0100               	movlb	0	; () banked
  8242  01253E  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8243  012540  D753               	goto	l12022
  8244  012542                     l12058:
  8245  012542  0101               	movlb	1	; () banked
  8246  012544  5129               	movf	settings_integrating_reset@state& (0+255),w,b
  8247                           
  8248                           ; Switch size 1, requested type "space"
  8249                           ; Number of cases is 2, Range of values is 0 to 1
  8250                           ; switch strategies available:
  8251                           ; Name         Instructions Cycles
  8252                           ; simple_byte            7     4 (average)
  8253                           ;	Chosen strategy is simple_byte
  8254  012546  0A00               	xorlw	0	; case 0
  8255  012548  B4D8               	btfsc	status,2,c
  8256  01254A  D6F6               	goto	l11996
  8257  01254C  0A01               	xorlw	1	; case 1
  8258  01254E  B4D8               	btfsc	status,2,c
  8259  012550  D748               	goto	l12020
  8260  012552                     l1908:
  8261                           
  8262                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8263  012552  0100               	movlb	0	; () banked
  8264  012554  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8265  012556  D01C               	goto	l12068
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;settings.c: 184: ctmu_m.flags = 0;
  8269  012558  0E00               	movlw	0
  8270  01255A  0100               	movlb	0	; () banked
  8271  01255C  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8272  01255E  0E00               	movlw	0
  8273  012560  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8274                           
  8275                           ;settings.c: 185: state = 0;
  8276  012562  0E00               	movlw	0
  8277  012564  0101               	movlb	1	; () banked
  8278  012566  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8279                           
  8280                           ;settings.c: 186: settings_flag = 0;
  8281  012568  0E00               	movlw	0
  8282  01256A  0101               	movlb	1	; () banked
  8283  01256C  6F22               	movwf	_settings_flag& (0+255),b
  8284                           
  8285                           ; BSR set to: 1
  8286                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8287  01256E  0EE6               	movlw	low (STR_19+3)
  8288  012570  0100               	movlb	0	; () banked
  8289  012572  6F60               	movwf	display@str0& (0+255),b
  8290  012574  0EFF               	movlw	high (STR_19+3)
  8291  012576  0100               	movlb	0	; () banked
  8292  012578  6F61               	movwf	(display@str0+1)& (0+255),b
  8293  01257A  0EE6               	movlw	low (STR_19+3)
  8294  01257C  0100               	movlb	0	; () banked
  8295  01257E  6F62               	movwf	display@str1& (0+255),b
  8296  012580  0EFF               	movlw	high (STR_19+3)
  8297  012582  0100               	movlb	0	; () banked
  8298  012584  6F63               	movwf	(display@str1+1)& (0+255),b
  8299  012586  0E01               	movlw	1
  8300  012588  ECE0  F09B         	call	_display
  8301                           
  8302                           ;settings.c: 188: return 1;
  8303  01258C  0E01               	movlw	1
  8304  01258E  0012               	return	
  8305  012590                     l12068:
  8306                           
  8307                           ;settings.c: 189: }
  8308                           ;settings.c: 190: return 0;
  8309  012590  0E00               	movlw	0
  8310  012592  0012               	return	
  8311  012594                     __end_of_settings_integrating_reset:
  8312                           	opt stack 0
  8313                           tblptru	equ	0xFF8
  8314                           tblptrh	equ	0xFF7
  8315                           tblptrl	equ	0xFF6
  8316                           tablat	equ	0xFF5
  8317                           prodh	equ	0xFF4
  8318                           prodl	equ	0xFF3
  8319                           intcon	equ	0xFF2
  8320                           postinc0	equ	0xFEE
  8321                           wreg	equ	0xFE8
  8322                           postinc1	equ	0xFE6
  8323                           postdec1	equ	0xFE5
  8324                           fsr1h	equ	0xFE2
  8325                           fsr1l	equ	0xFE1
  8326                           indf2	equ	0xFDF
  8327                           postinc2	equ	0xFDE
  8328                           postdec2	equ	0xFDD
  8329                           fsr2h	equ	0xFDA
  8330                           fsr2l	equ	0xFD9
  8331                           status	equ	0xFD8
  8332                           
  8333 ;; *************** function _settings_auto_stop *****************
  8334 ;; Defined at:
  8335 ;;		line 49 in file "settings.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;		None
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  i               1   52[BANK0 ] unsigned char 
  8340 ;;  str            20   27[BANK0 ] unsigned char [20]
  8341 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8342 ;;		 -> settings_auto_stop@str_6113(20), 
  8343 ;;  i               1   51[BANK0 ] unsigned char 
  8344 ;;  j               1   53[BANK0 ] unsigned char 
  8345 ;;  str            20    7[BANK0 ] unsigned char [20]
  8346 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8347 ;;		 -> settings_auto_stop@str(20), 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      unsigned char 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8360 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;Total ram usage:       48 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:   13
  8364 ;; This function calls:
  8365 ;;		_display
  8366 ;;		_strcpy
  8367 ;; This function is called by:
  8368 ;;		_settings_task
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text20
  8373  0127E8                     __ptext20:
  8374                           	opt stack 0
  8375  0127E8                     _settings_auto_stop:
  8376                           	opt stack 15
  8377                           
  8378                           ;settings.c: 50: static uint8_t state = 0;
  8379                           ;settings.c: 51: switch (state) {
  8380                           
  8381                           ;incstack = 0
  8382  0127E8  D0F7               	goto	l11900
  8383  0127EA                     l11838:
  8384                           
  8385                           ;settings.c: 53: {
  8386                           ;settings.c: 54: char str[20];
  8387                           ;settings.c: 55: char *strp;
  8388                           ;settings.c: 56: strp = str;
  8389  0127EA  0E67               	movlw	low settings_auto_stop@str
  8390  0127EC  0100               	movlb	0	; () banked
  8391  0127EE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8392  0127F0  0E00               	movlw	high settings_auto_stop@str
  8393  0127F2  0100               	movlb	0	; () banked
  8394  0127F4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8398  0127F6  0E00               	movlw	0
  8399  0127F8  0100               	movlb	0	; () banked
  8400  0127FA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8401  0127FC                     l11842:
  8402                           
  8403                           ; BSR set to: 0
  8404  0127FC  0E02               	movlw	2
  8405  0127FE  0100               	movlb	0	; () banked
  8406  012800  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8407  012802  D001               	goto	l11846
  8408  012804  D031               	goto	l11858
  8409  012806                     l11846:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8413  012806  0100               	movlb	0	; () banked
  8414  012808  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8415  01280A  0D17               	mullw	23
  8416  01280C  0E16               	movlw	22
  8417  01280E  26F3               	addwf	prodl,f,c
  8418  012810  0E00               	movlw	0
  8419  012812  22F4               	addwfc	prodh,f,c
  8420  012814  0E2E               	movlw	low _port
  8421  012816  24F3               	addwf	prodl,w,c
  8422  012818  6ED9               	movwf	fsr2l,c
  8423  01281A  0E01               	movlw	high _port
  8424  01281C  20F4               	addwfc	prodh,w,c
  8425  01281E  6EDA               	movwf	fsr2h,c
  8426  012820  0101               	movlb	1	; () banked
  8427  012822  A0DF               	btfss	indf2,0,c
  8428  012824  D00D               	goto	l11850
  8429                           
  8430                           ; BSR set to: 1
  8431  012826  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8432  01282A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8433  01282E  0EA5               	movlw	low STR_80
  8434  012830  0100               	movlb	0	; () banked
  8435  012832  6F62               	movwf	strcpy@from& (0+255),b
  8436  012834  0EFF               	movlw	high STR_80
  8437  012836  0100               	movlb	0	; () banked
  8438  012838  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8439  01283A  EC1D  F0B4         	call	_strcpy	;wreg free
  8440  01283E  D00C               	goto	l11852
  8441  012840                     l11850:
  8442                           
  8443                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8444  012840  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8445  012844  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8446  012848  0EAB               	movlw	low STR_81
  8447  01284A  0100               	movlb	0	; () banked
  8448  01284C  6F62               	movwf	strcpy@from& (0+255),b
  8449  01284E  0EFF               	movlw	high STR_81
  8450  012850  0100               	movlb	0	; () banked
  8451  012852  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8452  012854  EC1D  F0B4         	call	_strcpy	;wreg free
  8453  012858                     l11852:
  8454                           
  8455                           ;settings.c: 60: strp += 5;
  8456  012858  0E05               	movlw	5
  8457  01285A  0100               	movlb	0	; () banked
  8458  01285C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8459  01285E  0E00               	movlw	0
  8460  012860  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8461                           
  8462                           ; BSR set to: 0
  8463  012862  0100               	movlb	0	; () banked
  8464  012864  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8465  012866  D7CA               	goto	l11842
  8466  012868                     l11858:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;settings.c: 61: }
  8470                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8471  012868  0E81               	movlw	low STR_82
  8472  01286A  0100               	movlb	0	; () banked
  8473  01286C  6F60               	movwf	display@str0& (0+255),b
  8474  01286E  0EFE               	movlw	high STR_82
  8475  012870  0100               	movlb	0	; () banked
  8476  012872  6F61               	movwf	(display@str0+1)& (0+255),b
  8477  012874  0E67               	movlw	low settings_auto_stop@str
  8478  012876  0100               	movlb	0	; () banked
  8479  012878  6F62               	movwf	display@str1& (0+255),b
  8480  01287A  0E00               	movlw	high settings_auto_stop@str
  8481  01287C  0100               	movlb	0	; () banked
  8482  01287E  6F63               	movwf	(display@str1+1)& (0+255),b
  8483  012880  0E03               	movlw	3
  8484  012882  ECE0  F09B         	call	_display
  8485                           
  8486                           ;settings.c: 63: state = 1;
  8487  012886  0E01               	movlw	1
  8488  012888  0101               	movlb	1	; () banked
  8489  01288A  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8490                           
  8491                           ;settings.c: 64: }
  8492                           ;settings.c: 65: break;
  8493  01288C  D0AD               	goto	l1864
  8494  01288E                     l11862:
  8495                           
  8496                           ; BSR set to: 1
  8497                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8498  01288E  0E00               	movlw	0
  8499  012890  0100               	movlb	0	; () banked
  8500  012892  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8501  012894                     l11864:
  8502                           
  8503                           ; BSR set to: 0
  8504  012894  0E02               	movlw	2
  8505  012896  0100               	movlb	0	; () banked
  8506  012898  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8507  01289A  D001               	goto	l11868
  8508  01289C  D0A5               	goto	l1864
  8509  01289E                     l11868:
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8513  01289E  0100               	movlb	0	; () banked
  8514  0128A0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8515  0128A2  0D17               	mullw	23
  8516  0128A4  0E02               	movlw	2
  8517  0128A6  26F3               	addwf	prodl,f,c
  8518  0128A8  0E00               	movlw	0
  8519  0128AA  22F4               	addwfc	prodh,f,c
  8520  0128AC  0E2E               	movlw	low _port
  8521  0128AE  24F3               	addwf	prodl,w,c
  8522  0128B0  6ED9               	movwf	fsr2l,c
  8523  0128B2  0E01               	movlw	high _port
  8524  0128B4  20F4               	addwfc	prodh,w,c
  8525  0128B6  6EDA               	movwf	fsr2h,c
  8526  0128B8  0101               	movlb	1	; () banked
  8527  0128BA  A0DF               	btfss	indf2,0,c
  8528  0128BC  D08A               	goto	l11894
  8529                           
  8530                           ; BSR set to: 1
  8531                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8532  0128BE  0100               	movlb	0	; () banked
  8533  0128C0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8534  0128C2  0D17               	mullw	23
  8535  0128C4  0E02               	movlw	2
  8536  0128C6  26F3               	addwf	prodl,f,c
  8537  0128C8  0E00               	movlw	0
  8538  0128CA  22F4               	addwfc	prodh,f,c
  8539  0128CC  0E2E               	movlw	low _port
  8540  0128CE  24F3               	addwf	prodl,w,c
  8541  0128D0  6ED9               	movwf	fsr2l,c
  8542  0128D2  0E01               	movlw	high _port
  8543  0128D4  20F4               	addwfc	prodh,w,c
  8544  0128D6  6EDA               	movwf	fsr2h,c
  8545  0128D8  0E00               	movlw	0
  8546  0128DA  6EDE               	movwf	postinc2,c
  8547  0128DC  0E00               	movlw	0
  8548  0128DE  6EDD               	movwf	postdec2,c
  8549                           
  8550                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8551  0128E0  0100               	movlb	0	; () banked
  8552  0128E2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8553  0128E4  0D17               	mullw	23
  8554  0128E6  0E16               	movlw	22
  8555  0128E8  26F3               	addwf	prodl,f,c
  8556  0128EA  0E00               	movlw	0
  8557  0128EC  22F4               	addwfc	prodh,f,c
  8558  0128EE  0E2E               	movlw	low _port
  8559  0128F0  24F3               	addwf	prodl,w,c
  8560  0128F2  6ED9               	movwf	fsr2l,c
  8561  0128F4  0E01               	movlw	high _port
  8562  0128F6  20F4               	addwfc	prodh,w,c
  8563  0128F8  6EDA               	movwf	fsr2h,c
  8564  0128FA  0101               	movlb	1	; () banked
  8565  0128FC  B0DF               	btfsc	indf2,0,c
  8566  0128FE  D004               	goto	u13420
  8567  012900  0100               	movlb	0	; () banked
  8568  012902  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8569  012904  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8570  012906  D002               	goto	u13438
  8571  012908                     u13420:
  8572  012908  0100               	movlb	0	; () banked
  8573  01290A  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8574  01290C                     u13438:
  8575  01290C  0100               	movlb	0	; () banked
  8576  01290E  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8577  012910  0D17               	mullw	23
  8578  012912  0E16               	movlw	22
  8579  012914  26F3               	addwf	prodl,f,c
  8580  012916  0E00               	movlw	0
  8581  012918  22F4               	addwfc	prodh,f,c
  8582  01291A  0E2E               	movlw	low _port
  8583  01291C  24F3               	addwf	prodl,w,c
  8584  01291E  6ED9               	movwf	fsr2l,c
  8585  012920  0E01               	movlw	high _port
  8586  012922  20F4               	addwfc	prodh,w,c
  8587  012924  6EDA               	movwf	fsr2h,c
  8588  012926  0101               	movlb	1	; () banked
  8589  012928  50DF               	movf	223,w,c
  8590  01292A  0100               	movlb	0	; () banked
  8591  01292C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8592  01292E  0BFE               	andlw	-2
  8593  012930  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8594  012932  0101               	movlb	1	; () banked
  8595  012934  6EDF               	movwf	223,c
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;settings.c: 71: char str[20];
  8599                           ;settings.c: 72: char *strp;
  8600                           ;settings.c: 73: strp = str;
  8601  012936  0E7B               	movlw	low settings_auto_stop@str_6113
  8602  012938  0100               	movlb	0	; () banked
  8603  01293A  6F91               	movwf	settings_auto_stop@strp_6114& (0+255),b
  8604  01293C  0E00               	movlw	high settings_auto_stop@str_6113
  8605  01293E  0100               	movlb	0	; () banked
  8606  012940  6F92               	movwf	(settings_auto_stop@strp_6114+1)& (0+255),b
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8610  012942  0E00               	movlw	0
  8611  012944  0100               	movlb	0	; () banked
  8612  012946  6F94               	movwf	settings_auto_stop@i_6115& (0+255),b
  8613  012948                     l11876:
  8614                           
  8615                           ; BSR set to: 0
  8616  012948  0E02               	movlw	2
  8617  01294A  0100               	movlb	0	; () banked
  8618  01294C  6594               	cpfsgt	settings_auto_stop@i_6115& (0+255),b
  8619  01294E  D001               	goto	l11880
  8620  012950  D031               	goto	l11892
  8621  012952                     l11880:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8625  012952  0100               	movlb	0	; () banked
  8626  012954  5194               	movf	settings_auto_stop@i_6115& (0+255),w,b
  8627  012956  0D17               	mullw	23
  8628  012958  0E16               	movlw	22
  8629  01295A  26F3               	addwf	prodl,f,c
  8630  01295C  0E00               	movlw	0
  8631  01295E  22F4               	addwfc	prodh,f,c
  8632  012960  0E2E               	movlw	low _port
  8633  012962  24F3               	addwf	prodl,w,c
  8634  012964  6ED9               	movwf	fsr2l,c
  8635  012966  0E01               	movlw	high _port
  8636  012968  20F4               	addwfc	prodh,w,c
  8637  01296A  6EDA               	movwf	fsr2h,c
  8638  01296C  0101               	movlb	1	; () banked
  8639  01296E  A0DF               	btfss	indf2,0,c
  8640  012970  D00D               	goto	l11884
  8641                           
  8642                           ; BSR set to: 1
  8643  012972  C091  F060         	movff	settings_auto_stop@strp_6114,strcpy@to
  8644  012976  C092  F061         	movff	settings_auto_stop@strp_6114+1,strcpy@to+1
  8645  01297A  0EA5               	movlw	low STR_80
  8646  01297C  0100               	movlb	0	; () banked
  8647  01297E  6F62               	movwf	strcpy@from& (0+255),b
  8648  012980  0EFF               	movlw	high STR_80
  8649  012982  0100               	movlb	0	; () banked
  8650  012984  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8651  012986  EC1D  F0B4         	call	_strcpy	;wreg free
  8652  01298A  D00C               	goto	l11886
  8653  01298C                     l11884:
  8654                           
  8655                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8656  01298C  C091  F060         	movff	settings_auto_stop@strp_6114,strcpy@to
  8657  012990  C092  F061         	movff	settings_auto_stop@strp_6114+1,strcpy@to+1
  8658  012994  0EAB               	movlw	low STR_81
  8659  012996  0100               	movlb	0	; () banked
  8660  012998  6F62               	movwf	strcpy@from& (0+255),b
  8661  01299A  0EFF               	movlw	high STR_81
  8662  01299C  0100               	movlb	0	; () banked
  8663  01299E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8664  0129A0  EC1D  F0B4         	call	_strcpy	;wreg free
  8665  0129A4                     l11886:
  8666                           
  8667                           ;settings.c: 77: strp += 5;
  8668  0129A4  0E05               	movlw	5
  8669  0129A6  0100               	movlb	0	; () banked
  8670  0129A8  2791               	addwf	settings_auto_stop@strp_6114& (0+255),f,b
  8671  0129AA  0E00               	movlw	0
  8672  0129AC  2392               	addwfc	(settings_auto_stop@strp_6114+1)& (0+255),f,b
  8673                           
  8674                           ; BSR set to: 0
  8675  0129AE  0100               	movlb	0	; () banked
  8676  0129B0  2B94               	incf	settings_auto_stop@i_6115& (0+255),f,b
  8677  0129B2  D7CA               	goto	l11876
  8678  0129B4                     l11892:
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;settings.c: 78: }
  8682                           ;settings.c: 79: display(SETTINGS, "", str);
  8683  0129B4  0EE6               	movlw	low (STR_19+3)
  8684  0129B6  0100               	movlb	0	; () banked
  8685  0129B8  6F60               	movwf	display@str0& (0+255),b
  8686  0129BA  0EFF               	movlw	high (STR_19+3)
  8687  0129BC  0100               	movlb	0	; () banked
  8688  0129BE  6F61               	movwf	(display@str0+1)& (0+255),b
  8689  0129C0  0E7B               	movlw	low settings_auto_stop@str_6113
  8690  0129C2  0100               	movlb	0	; () banked
  8691  0129C4  6F62               	movwf	display@str1& (0+255),b
  8692  0129C6  0E00               	movlw	high settings_auto_stop@str_6113
  8693  0129C8  0100               	movlb	0	; () banked
  8694  0129CA  6F63               	movwf	(display@str1+1)& (0+255),b
  8695  0129CC  0E03               	movlw	3
  8696  0129CE  ECE0  F09B         	call	_display
  8697  0129D2                     l11894:
  8698  0129D2  0100               	movlb	0	; () banked
  8699  0129D4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8700  0129D6  D75E               	goto	l11864
  8701  0129D8                     l11900:
  8702  0129D8  0101               	movlb	1	; () banked
  8703  0129DA  5128               	movf	settings_auto_stop@state& (0+255),w,b
  8704                           
  8705                           ; Switch size 1, requested type "space"
  8706                           ; Number of cases is 2, Range of values is 0 to 1
  8707                           ; switch strategies available:
  8708                           ; Name         Instructions Cycles
  8709                           ; simple_byte            7     4 (average)
  8710                           ;	Chosen strategy is simple_byte
  8711  0129DC  0A00               	xorlw	0	; case 0
  8712  0129DE  B4D8               	btfsc	status,2,c
  8713  0129E0  D704               	goto	l11838
  8714  0129E2  0A01               	xorlw	1	; case 1
  8715  0129E4  B4D8               	btfsc	status,2,c
  8716  0129E6  D753               	goto	l11862
  8717  0129E8                     l1864:
  8718                           
  8719                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8720  0129E8  0100               	movlb	0	; () banked
  8721  0129EA  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8722  0129EC  D01C               	goto	l11910
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;settings.c: 87: ctmu_m.flags = 0;
  8726  0129EE  0E00               	movlw	0
  8727  0129F0  0100               	movlb	0	; () banked
  8728  0129F2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8729  0129F4  0E00               	movlw	0
  8730  0129F6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8731                           
  8732                           ;settings.c: 88: state = 0;
  8733  0129F8  0E00               	movlw	0
  8734  0129FA  0101               	movlb	1	; () banked
  8735  0129FC  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8736                           
  8737                           ;settings.c: 89: settings_flag = 0;
  8738  0129FE  0E00               	movlw	0
  8739  012A00  0101               	movlb	1	; () banked
  8740  012A02  6F22               	movwf	_settings_flag& (0+255),b
  8741                           
  8742                           ; BSR set to: 1
  8743                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8744  012A04  0EE6               	movlw	low (STR_19+3)
  8745  012A06  0100               	movlb	0	; () banked
  8746  012A08  6F60               	movwf	display@str0& (0+255),b
  8747  012A0A  0EFF               	movlw	high (STR_19+3)
  8748  012A0C  0100               	movlb	0	; () banked
  8749  012A0E  6F61               	movwf	(display@str0+1)& (0+255),b
  8750  012A10  0EE6               	movlw	low (STR_19+3)
  8751  012A12  0100               	movlb	0	; () banked
  8752  012A14  6F62               	movwf	display@str1& (0+255),b
  8753  012A16  0EFF               	movlw	high (STR_19+3)
  8754  012A18  0100               	movlb	0	; () banked
  8755  012A1A  6F63               	movwf	(display@str1+1)& (0+255),b
  8756  012A1C  0E01               	movlw	1
  8757  012A1E  ECE0  F09B         	call	_display
  8758                           
  8759                           ;settings.c: 91: return 1;
  8760  012A22  0E01               	movlw	1
  8761  012A24  0012               	return	
  8762  012A26                     l11910:
  8763                           
  8764                           ;settings.c: 92: }
  8765                           ;settings.c: 93: return 0;
  8766  012A26  0E00               	movlw	0
  8767  012A28  0012               	return	
  8768  012A2A                     __end_of_settings_auto_stop:
  8769                           	opt stack 0
  8770                           tblptru	equ	0xFF8
  8771                           tblptrh	equ	0xFF7
  8772                           tblptrl	equ	0xFF6
  8773                           tablat	equ	0xFF5
  8774                           prodh	equ	0xFF4
  8775                           prodl	equ	0xFF3
  8776                           intcon	equ	0xFF2
  8777                           postinc0	equ	0xFEE
  8778                           wreg	equ	0xFE8
  8779                           postinc1	equ	0xFE6
  8780                           postdec1	equ	0xFE5
  8781                           fsr1h	equ	0xFE2
  8782                           fsr1l	equ	0xFE1
  8783                           indf2	equ	0xFDF
  8784                           postinc2	equ	0xFDE
  8785                           postdec2	equ	0xFDD
  8786                           fsr2h	equ	0xFDA
  8787                           fsr2l	equ	0xFD9
  8788                           status	equ	0xFD8
  8789                           
  8790 ;; *************** function _settings_adjust_time *****************
  8791 ;; Defined at:
  8792 ;;		line 13 in file "settings.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      unsigned char 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;Total ram usage:        0 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:   17
  8813 ;; This function calls:
  8814 ;;		_RTCC_adjust_time_cursor
  8815 ;;		_RTCC_adjust_time_dec
  8816 ;;		_RTCC_adjust_time_inc
  8817 ;;		_RTCC_adjust_time_toggle
  8818 ;;		_display
  8819 ;; This function is called by:
  8820 ;;		_settings_task
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text21
  8825  0145EE                     __ptext21:
  8826                           	opt stack 0
  8827  0145EE                     _settings_adjust_time:
  8828                           	opt stack 11
  8829                           
  8830                           ;settings.c: 14: static uint8_t state = 0;
  8831                           ;settings.c: 15: switch (state) {
  8832                           
  8833                           ;incstack = 0
  8834  0145EE  D043               	goto	l11822
  8835  0145F0                     l11798:
  8836                           
  8837                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8838  0145F0  0EE6               	movlw	low (STR_19+3)
  8839  0145F2  0100               	movlb	0	; () banked
  8840  0145F4  6F60               	movwf	display@str0& (0+255),b
  8841  0145F6  0EFF               	movlw	high (STR_19+3)
  8842  0145F8  0100               	movlb	0	; () banked
  8843  0145FA  6F61               	movwf	(display@str0+1)& (0+255),b
  8844  0145FC  0EE6               	movlw	low (STR_19+3)
  8845  0145FE  0100               	movlb	0	; () banked
  8846  014600  6F62               	movwf	display@str1& (0+255),b
  8847  014602  0EFF               	movlw	high (STR_19+3)
  8848  014604  0100               	movlb	0	; () banked
  8849  014606  6F63               	movwf	(display@str1+1)& (0+255),b
  8850  014608  0E01               	movlw	1
  8851  01460A  ECE0  F09B         	call	_display
  8852                           
  8853                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8854  01460E  0E73               	movlw	low _now
  8855  014610  0100               	movlb	0	; () banked
  8856  014612  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8857  014614  0E01               	movlw	high _now
  8858  014616  0100               	movlb	0	; () banked
  8859  014618  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8860  01461A  ECA7  F0B3         	call	_RTCC_adjust_time_toggle	;wreg free
  8861                           
  8862                           ;settings.c: 19: state = 1;
  8863  01461E  0E01               	movlw	1
  8864  014620  0101               	movlb	1	; () banked
  8865  014622  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8866                           
  8867                           ;settings.c: 20: break;
  8868  014624  D030               	goto	l1846
  8869  014626                     l1847:
  8870                           
  8871                           ; BSR set to: 1
  8872                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8873  014626  0101               	movlb	1	; () banked
  8874  014628  A147               	btfss	(_port+25)& (0+255),0,b
  8875  01462A  D00A               	goto	l11808
  8876                           
  8877                           ; BSR set to: 1
  8878                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8879  01462C  0101               	movlb	1	; () banked
  8880  01462E  9147               	bcf	(_port+25)& (0+255),0,b
  8881                           
  8882                           ; BSR set to: 1
  8883                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8884  014630  0E73               	movlw	low _now
  8885  014632  0100               	movlb	0	; () banked
  8886  014634  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8887  014636  0E01               	movlw	high _now
  8888  014638  0100               	movlb	0	; () banked
  8889  01463A  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8890  01463C  EC34  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8891  014640                     l11808:
  8892                           
  8893                           ;settings.c: 25: }
  8894                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8895  014640  0101               	movlb	1	; () banked
  8896  014642  A15E               	btfss	(_port+48)& (0+255),0,b
  8897  014644  D00A               	goto	l11814
  8898                           
  8899                           ; BSR set to: 1
  8900                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8901  014646  0101               	movlb	1	; () banked
  8902  014648  915E               	bcf	(_port+48)& (0+255),0,b
  8903                           
  8904                           ; BSR set to: 1
  8905                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8906  01464A  0E73               	movlw	low _now
  8907  01464C  0100               	movlb	0	; () banked
  8908  01464E  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8909  014650  0E01               	movlw	high _now
  8910  014652  0100               	movlb	0	; () banked
  8911  014654  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8912  014656  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8913  01465A                     l11814:
  8914                           
  8915                           ;settings.c: 29: }
  8916                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8917  01465A  0101               	movlb	1	; () banked
  8918  01465C  A130               	btfss	(_port+2)& (0+255),0,b
  8919  01465E  D013               	goto	l1846
  8920                           
  8921                           ; BSR set to: 1
  8922                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8923  014660  0101               	movlb	1	; () banked
  8924  014662  9130               	bcf	(_port+2)& (0+255),0,b
  8925                           
  8926                           ; BSR set to: 1
  8927                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8928  014664  0E73               	movlw	low _now
  8929  014666  0100               	movlb	0	; () banked
  8930  014668  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8931  01466A  0E01               	movlw	high _now
  8932  01466C  0100               	movlb	0	; () banked
  8933  01466E  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8934  014670  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8935                           
  8936                           ;settings.c: 37: }
  8937                           
  8938                           ;settings.c: 36: break;
  8939                           
  8940                           ;settings.c: 35: default:
  8941                           
  8942                           ;settings.c: 33: }
  8943                           ;settings.c: 34: break;
  8944  014674  D008               	goto	l1846
  8945  014676                     l11822:
  8946  014676  0101               	movlb	1	; () banked
  8947  014678  5127               	movf	settings_adjust_time@state& (0+255),w,b
  8948                           
  8949                           ; Switch size 1, requested type "space"
  8950                           ; Number of cases is 2, Range of values is 0 to 1
  8951                           ; switch strategies available:
  8952                           ; Name         Instructions Cycles
  8953                           ; simple_byte            7     4 (average)
  8954                           ;	Chosen strategy is simple_byte
  8955  01467A  0A00               	xorlw	0	; case 0
  8956  01467C  B4D8               	btfsc	status,2,c
  8957  01467E  D7B8               	goto	l11798
  8958  014680  0A01               	xorlw	1	; case 1
  8959  014682  B4D8               	btfsc	status,2,c
  8960  014684  D7D0               	goto	l1847
  8961  014686                     l1846:
  8962                           
  8963                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8964  014686  0100               	movlb	0	; () banked
  8965  014688  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8966  01468A  D01F               	goto	l11832
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;settings.c: 39: ctmu_m.flags = 0;
  8970  01468C  0E00               	movlw	0
  8971  01468E  0100               	movlb	0	; () banked
  8972  014690  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8973  014692  0E00               	movlw	0
  8974  014694  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8975                           
  8976                           ;settings.c: 40: now.edit.flags = 0;
  8977  014696  0E00               	movlw	0
  8978  014698  0101               	movlb	1	; () banked
  8979  01469A  6F80               	movwf	(_now+13)& (0+255),b
  8980                           
  8981                           ;settings.c: 41: state = 0;
  8982  01469C  0E00               	movlw	0
  8983  01469E  0101               	movlb	1	; () banked
  8984  0146A0  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8985                           
  8986                           ;settings.c: 42: settings_flag = 0;
  8987  0146A2  0E00               	movlw	0
  8988  0146A4  0101               	movlb	1	; () banked
  8989  0146A6  6F22               	movwf	_settings_flag& (0+255),b
  8990                           
  8991                           ; BSR set to: 1
  8992                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8993  0146A8  0EE6               	movlw	low (STR_19+3)
  8994  0146AA  0100               	movlb	0	; () banked
  8995  0146AC  6F60               	movwf	display@str0& (0+255),b
  8996  0146AE  0EFF               	movlw	high (STR_19+3)
  8997  0146B0  0100               	movlb	0	; () banked
  8998  0146B2  6F61               	movwf	(display@str0+1)& (0+255),b
  8999  0146B4  0EE6               	movlw	low (STR_19+3)
  9000  0146B6  0100               	movlb	0	; () banked
  9001  0146B8  6F62               	movwf	display@str1& (0+255),b
  9002  0146BA  0EFF               	movlw	high (STR_19+3)
  9003  0146BC  0100               	movlb	0	; () banked
  9004  0146BE  6F63               	movwf	(display@str1+1)& (0+255),b
  9005  0146C0  0E01               	movlw	1
  9006  0146C2  ECE0  F09B         	call	_display
  9007                           
  9008                           ;settings.c: 44: return 1;
  9009  0146C6  0E01               	movlw	1
  9010  0146C8  0012               	return	
  9011  0146CA                     l11832:
  9012                           
  9013                           ;settings.c: 45: }
  9014                           ;settings.c: 46: return 0;
  9015  0146CA  0E00               	movlw	0
  9016  0146CC  0012               	return	
  9017  0146CE                     __end_of_settings_adjust_time:
  9018                           	opt stack 0
  9019                           tblptru	equ	0xFF8
  9020                           tblptrh	equ	0xFF7
  9021                           tblptrl	equ	0xFF6
  9022                           tablat	equ	0xFF5
  9023                           prodh	equ	0xFF4
  9024                           prodl	equ	0xFF3
  9025                           intcon	equ	0xFF2
  9026                           postinc0	equ	0xFEE
  9027                           wreg	equ	0xFE8
  9028                           postinc1	equ	0xFE6
  9029                           postdec1	equ	0xFE5
  9030                           fsr1h	equ	0xFE2
  9031                           fsr1l	equ	0xFE1
  9032                           indf2	equ	0xFDF
  9033                           postinc2	equ	0xFDE
  9034                           postdec2	equ	0xFDD
  9035                           fsr2h	equ	0xFDA
  9036                           fsr2l	equ	0xFD9
  9037                           status	equ	0xFD8
  9038                           
  9039 ;; *************** function _RTCC_adjust_time_toggle *****************
  9040 ;; Defined at:
  9041 ;;		line 268 in file "../My_library/My_RTCC.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  tm              2    0[BANK0 ] PTR struct .
  9044 ;;		 -> now(14), 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;		None               void
  9049 ;; Registers used:
  9050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;Total ram usage:        2 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:   12
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_settings_adjust_time
  9067 ;;		_RTCC_adjust_time_button
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text22
  9072  01674E                     __ptext22:
  9073                           	opt stack 0
  9074  01674E                     _RTCC_adjust_time_toggle:
  9075                           	opt stack 15
  9076                           
  9077                           ;My_RTCC.c: 269: if (tm->edit.flags) {
  9078                           
  9079                           ;incstack = 0
  9080  01674E  0100               	movlb	0	; () banked
  9081  016750  EE20 F00D          	lfsr	2,13
  9082  016754  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9083  016756  26D9               	addwf	fsr2l,f,c
  9084  016758  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9085  01675A  22DA               	addwfc	fsr2h,f,c
  9086  01675C  50DF               	movf	indf2,w,c
  9087  01675E  B4D8               	btfsc	status,2,c
  9088  016760  D00A               	goto	l11196
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;My_RTCC.c: 270: tm->edit.flags = 0;
  9092  016762  0100               	movlb	0	; () banked
  9093  016764  EE20 F00D          	lfsr	2,13
  9094  016768  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9095  01676A  26D9               	addwf	fsr2l,f,c
  9096  01676C  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9097  01676E  22DA               	addwfc	fsr2h,f,c
  9098  016770  0E00               	movlw	0
  9099  016772  6EDF               	movwf	indf2,c
  9100                           
  9101                           ;My_RTCC.c: 271: } else {
  9102  016774  0012               	return	
  9103  016776                     l11196:
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;My_RTCC.c: 272: tm->edit.flag.ss = 1;
  9107  016776  0100               	movlb	0	; () banked
  9108  016778  EE20 F00D          	lfsr	2,13
  9109  01677C  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9110  01677E  26D9               	addwf	fsr2l,f,c
  9111  016780  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9112  016782  22DA               	addwfc	fsr2h,f,c
  9113  016784  0100               	movlb	0	; () banked
  9114  016786  80DF               	bsf	indf2,0,c
  9115  016788  0012               	return	
  9116  01678A                     __end_of_RTCC_adjust_time_toggle:
  9117                           	opt stack 0
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           postinc0	equ	0xFEE
  9126                           wreg	equ	0xFE8
  9127                           postinc1	equ	0xFE6
  9128                           postdec1	equ	0xFE5
  9129                           fsr1h	equ	0xFE2
  9130                           fsr1l	equ	0xFE1
  9131                           indf2	equ	0xFDF
  9132                           postinc2	equ	0xFDE
  9133                           postdec2	equ	0xFDD
  9134                           fsr2h	equ	0xFDA
  9135                           fsr2l	equ	0xFD9
  9136                           status	equ	0xFD8
  9137                           
  9138 ;; *************** function _RTCC_adjust_time_inc *****************
  9139 ;; Defined at:
  9140 ;;		line 286 in file "../My_library/My_RTCC.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  tm              2   49[BANK0 ] PTR struct .
  9143 ;;		 -> now(14), 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  i               1   55[BANK0 ] unsigned char 
  9146 ;;  i               1   56[BANK0 ] unsigned char 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;		None               void
  9149 ;; Registers used:
  9150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9158 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9159 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;Total ram usage:        8 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:   16
  9163 ;; This function calls:
  9164 ;;		_RTCC_from_RTCC
  9165 ;;		_RTCC_from_epoch
  9166 ;;		___lmul
  9167 ;;		_month_length
  9168 ;; This function is called by:
  9169 ;;		_settings_adjust_time
  9170 ;;		_RTCC_adjust_time_button
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text23
  9175  01166E                     __ptext23:
  9176                           	opt stack 0
  9177  01166E                     _RTCC_adjust_time_inc:
  9178                           	opt stack 11
  9179                           
  9180                           ;My_RTCC.c: 287: RTCC_from_RTCC(tm);
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;incstack = 0
  9184  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9185  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9186  011676  EC65  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9187                           
  9188                           ;My_RTCC.c: 288: if (tm->edit.flag.ss) tm->epoch += 1;
  9189  01167A  0100               	movlb	0	; () banked
  9190  01167C  EE20 F00D          	lfsr	2,13
  9191  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9192  011682  26D9               	addwf	fsr2l,f,c
  9193  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9194  011686  22DA               	addwfc	fsr2h,f,c
  9195  011688  0100               	movlb	0	; () banked
  9196  01168A  A0DF               	btfss	indf2,0,c
  9197  01168C  D009               	goto	l937
  9198                           
  9199                           ; BSR set to: 0
  9200  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9201  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9202  011696  2ADE               	incf	postinc2,f,c
  9203  011698  0E00               	movlw	0
  9204  01169A  22DE               	addwfc	postinc2,f,c
  9205  01169C  22DE               	addwfc	postinc2,f,c
  9206  01169E  22DE               	addwfc	postinc2,f,c
  9207  0116A0                     l937:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;My_RTCC.c: 289: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9211  0116A0  0100               	movlb	0	; () banked
  9212  0116A2  EE20 F00D          	lfsr	2,13
  9213  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9214  0116A8  26D9               	addwf	fsr2l,f,c
  9215  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9216  0116AC  22DA               	addwfc	fsr2h,f,c
  9217  0116AE  0100               	movlb	0	; () banked
  9218  0116B0  A2DF               	btfss	indf2,1,c
  9219  0116B2  D00A               	goto	l11232
  9220                           
  9221                           ; BSR set to: 0
  9222  0116B4  0E3C               	movlw	60
  9223  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9224  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9225  0116BE  26DE               	addwf	postinc2,f,c
  9226  0116C0  0E00               	movlw	0
  9227  0116C2  22DE               	addwfc	postinc2,f,c
  9228  0116C4  22DE               	addwfc	postinc2,f,c
  9229  0116C6  22DE               	addwfc	postinc2,f,c
  9230  0116C8                     l11232:
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;My_RTCC.c: 290: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9234  0116C8  0100               	movlb	0	; () banked
  9235  0116CA  EE20 F00D          	lfsr	2,13
  9236  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9237  0116D0  26D9               	addwf	fsr2l,f,c
  9238  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9239  0116D4  22DA               	addwfc	fsr2h,f,c
  9240  0116D6  0100               	movlb	0	; () banked
  9241  0116D8  A4DF               	btfss	indf2,2,c
  9242  0116DA  D00C               	goto	l11236
  9243                           
  9244                           ; BSR set to: 0
  9245  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9246  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9247  0116E4  0E10               	movlw	16
  9248  0116E6  26DE               	addwf	postinc2,f,c
  9249  0116E8  0E0E               	movlw	14
  9250  0116EA  22DE               	addwfc	postinc2,f,c
  9251  0116EC  0E00               	movlw	0
  9252  0116EE  22DE               	addwfc	postinc2,f,c
  9253  0116F0  0E00               	movlw	0
  9254  0116F2  22DE               	addwfc	postinc2,f,c
  9255  0116F4                     l11236:
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;My_RTCC.c: 291: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9259  0116F4  0100               	movlb	0	; () banked
  9260  0116F6  EE20 F00D          	lfsr	2,13
  9261  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9262  0116FC  26D9               	addwf	fsr2l,f,c
  9263  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9264  011700  22DA               	addwfc	fsr2h,f,c
  9265  011702  0100               	movlb	0	; () banked
  9266  011704  A6DF               	btfss	indf2,3,c
  9267  011706  D00C               	goto	l11240
  9268                           
  9269                           ; BSR set to: 0
  9270  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9271  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9272  011710  0E80               	movlw	128
  9273  011712  26DE               	addwf	postinc2,f,c
  9274  011714  0E51               	movlw	81
  9275  011716  22DE               	addwfc	postinc2,f,c
  9276  011718  0E01               	movlw	1
  9277  01171A  22DE               	addwfc	postinc2,f,c
  9278  01171C  0E00               	movlw	0
  9279  01171E  22DE               	addwfc	postinc2,f,c
  9280  011720                     l11240:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;My_RTCC.c: 292: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9284  011720  0100               	movlb	0	; () banked
  9285  011722  EE20 F00D          	lfsr	2,13
  9286  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9287  011728  26D9               	addwf	fsr2l,f,c
  9288  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9289  01172C  22DA               	addwfc	fsr2h,f,c
  9290  01172E  0100               	movlb	0	; () banked
  9291  011730  A8DF               	btfss	indf2,4,c
  9292  011732  D038               	goto	l11244
  9293                           
  9294                           ; BSR set to: 0
  9295  011734  0100               	movlb	0	; () banked
  9296  011736  EE20 F009          	lfsr	2,9
  9297  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9298  01173C  26D9               	addwf	fsr2l,f,c
  9299  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9300  011740  22DA               	addwfc	fsr2h,f,c
  9301  011742  50DF               	movf	indf2,w,c
  9302  011744  0100               	movlb	0	; () banked
  9303  011746  6F66               	movwf	month_length@month& (0+255),b
  9304  011748  0100               	movlb	0	; () banked
  9305  01174A  EE20 F00A          	lfsr	2,10
  9306  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9307  011750  26D9               	addwf	fsr2l,f,c
  9308  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9309  011754  22DA               	addwfc	fsr2h,f,c
  9310  011756  50DF               	movf	indf2,w,c
  9311  011758  ECD7  F0A3         	call	_month_length
  9312  01175C  0100               	movlb	0	; () banked
  9313  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9314  011760  0100               	movlb	0	; () banked
  9315  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9316  011764  0100               	movlb	0	; () banked
  9317  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9318  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9319  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9320  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9321  01176E  0E80               	movlw	128
  9322  011770  0100               	movlb	0	; () banked
  9323  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9324  011774  0E51               	movlw	81
  9325  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9326  011778  0E01               	movlw	1
  9327  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9328  01177C  0E00               	movlw	0
  9329  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9330  011780  EC62  F0AF         	call	___lmul	;wreg free
  9331  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9332  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9333  01178C  0100               	movlb	0	; () banked
  9334  01178E  516D               	movf	?___lmul& (0+255),w,b
  9335  011790  26DE               	addwf	postinc2,f,c
  9336  011792  0100               	movlb	0	; () banked
  9337  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9338  011796  22DE               	addwfc	postinc2,f,c
  9339  011798  0100               	movlb	0	; () banked
  9340  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9341  01179C  22DE               	addwfc	postinc2,f,c
  9342  01179E  0100               	movlb	0	; () banked
  9343  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9344  0117A2  22DE               	addwfc	postinc2,f,c
  9345  0117A4                     l11244:
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;My_RTCC.c: 293: if (tm->edit.flag.YY) {
  9349  0117A4  0100               	movlb	0	; () banked
  9350  0117A6  EE20 F00D          	lfsr	2,13
  9351  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9352  0117AC  26D9               	addwf	fsr2l,f,c
  9353  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9354  0117B0  22DA               	addwfc	fsr2h,f,c
  9355  0117B2  0100               	movlb	0	; () banked
  9356  0117B4  AADF               	btfss	indf2,5,c
  9357  0117B6  D088               	goto	l11266
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;My_RTCC.c: 294: for (uint8_t i = tm->MM; i <= 12; i++) {
  9361  0117B8  0100               	movlb	0	; () banked
  9362  0117BA  EE20 F009          	lfsr	2,9
  9363  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9364  0117C0  26D9               	addwf	fsr2l,f,c
  9365  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9366  0117C4  22DA               	addwfc	fsr2h,f,c
  9367  0117C6  50DF               	movf	indf2,w,c
  9368  0117C8  0100               	movlb	0	; () banked
  9369  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9370  0117CC                     l11248:
  9371                           
  9372                           ; BSR set to: 0
  9373  0117CC  0E0C               	movlw	12
  9374  0117CE  0100               	movlb	0	; () banked
  9375  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9376  0117D2  D001               	goto	l11252
  9377  0117D4  D033               	goto	l11258
  9378  0117D6                     l11252:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;My_RTCC.c: 295: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9382  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9383  0117DA  0100               	movlb	0	; () banked
  9384  0117DC  EE20 F00A          	lfsr	2,10
  9385  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9386  0117E2  26D9               	addwf	fsr2l,f,c
  9387  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9388  0117E6  22DA               	addwfc	fsr2h,f,c
  9389  0117E8  50DF               	movf	indf2,w,c
  9390  0117EA  ECD7  F0A3         	call	_month_length
  9391  0117EE  0100               	movlb	0	; () banked
  9392  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9393  0117F2  0100               	movlb	0	; () banked
  9394  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9395  0117F6  0100               	movlb	0	; () banked
  9396  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9397  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9398  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9399  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9400  011800  0E80               	movlw	128
  9401  011802  0100               	movlb	0	; () banked
  9402  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9403  011806  0E51               	movlw	81
  9404  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9405  01180A  0E01               	movlw	1
  9406  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9407  01180E  0E00               	movlw	0
  9408  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9409  011812  EC62  F0AF         	call	___lmul	;wreg free
  9410  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9411  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9412  01181E  0100               	movlb	0	; () banked
  9413  011820  516D               	movf	?___lmul& (0+255),w,b
  9414  011822  26DE               	addwf	postinc2,f,c
  9415  011824  0100               	movlb	0	; () banked
  9416  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9417  011828  22DE               	addwfc	postinc2,f,c
  9418  01182A  0100               	movlb	0	; () banked
  9419  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9420  01182E  22DE               	addwfc	postinc2,f,c
  9421  011830  0100               	movlb	0	; () banked
  9422  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9423  011834  22DE               	addwfc	postinc2,f,c
  9424                           
  9425                           ; BSR set to: 0
  9426  011836  0100               	movlb	0	; () banked
  9427  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9428  01183A  D7C8               	goto	l11248
  9429  01183C                     l11258:
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;My_RTCC.c: 296: }
  9433                           ;My_RTCC.c: 297: for (uint8_t i = 1; i < tm->MM; i++) {
  9434  01183C  0E01               	movlw	1
  9435  01183E  0100               	movlb	0	; () banked
  9436  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3817& (0+255),b
  9437  011842  D036               	goto	l11264
  9438  011844                     l11260:
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;My_RTCC.c: 298: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9442  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3817,month_length@month
  9443  011848  0100               	movlb	0	; () banked
  9444  01184A  EE20 F00A          	lfsr	2,10
  9445  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9446  011850  26D9               	addwf	fsr2l,f,c
  9447  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9448  011854  22DA               	addwfc	fsr2h,f,c
  9449  011856  50DF               	movf	indf2,w,c
  9450  011858  0100               	movlb	0	; () banked
  9451  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9452  01185C  0100               	movlb	0	; () banked
  9453  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9454  011860  ECD7  F0A3         	call	_month_length
  9455  011864  0100               	movlb	0	; () banked
  9456  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9457  011868  0100               	movlb	0	; () banked
  9458  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9459  01186C  0100               	movlb	0	; () banked
  9460  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9461  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9462  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9463  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9464  011876  0E80               	movlw	128
  9465  011878  0100               	movlb	0	; () banked
  9466  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9467  01187C  0E51               	movlw	81
  9468  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9469  011880  0E01               	movlw	1
  9470  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9471  011884  0E00               	movlw	0
  9472  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9473  011888  EC62  F0AF         	call	___lmul	;wreg free
  9474  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9475  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9476  011894  0100               	movlb	0	; () banked
  9477  011896  516D               	movf	?___lmul& (0+255),w,b
  9478  011898  26DE               	addwf	postinc2,f,c
  9479  01189A  0100               	movlb	0	; () banked
  9480  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9481  01189E  22DE               	addwfc	postinc2,f,c
  9482  0118A0  0100               	movlb	0	; () banked
  9483  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9484  0118A4  22DE               	addwfc	postinc2,f,c
  9485  0118A6  0100               	movlb	0	; () banked
  9486  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9487  0118AA  22DE               	addwfc	postinc2,f,c
  9488                           
  9489                           ; BSR set to: 0
  9490  0118AC  0100               	movlb	0	; () banked
  9491  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3817& (0+255),f,b
  9492  0118B0                     l11264:
  9493                           
  9494                           ; BSR set to: 0
  9495  0118B0  0100               	movlb	0	; () banked
  9496  0118B2  EE20 F009          	lfsr	2,9
  9497  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9498  0118B8  26D9               	addwf	fsr2l,f,c
  9499  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9500  0118BC  22DA               	addwfc	fsr2h,f,c
  9501  0118BE  50DE               	movf	postinc2,w,c
  9502  0118C0  0100               	movlb	0	; () banked
  9503  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3817& (0+255),w,b
  9504  0118C4  A0D8               	btfss	status,0,c
  9505  0118C6  D7BE               	goto	l11260
  9506  0118C8                     l11266:
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;My_RTCC.c: 299: }
  9510                           ;My_RTCC.c: 300: }
  9511                           ;My_RTCC.c: 302: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9512  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9513  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9514  0118D0  0E80               	movlw	128
  9515  0118D2  5CDE               	subwf	postinc2,w,c
  9516  0118D4  0E13               	movlw	19
  9517  0118D6  58DE               	subwfb	postinc2,w,c
  9518  0118D8  0E19               	movlw	25
  9519  0118DA  58DE               	subwfb	postinc2,w,c
  9520  0118DC  0EBC               	movlw	188
  9521  0118DE  58DE               	subwfb	postinc2,w,c
  9522  0118E0  A0D8               	btfss	status,0,c
  9523  0118E2  D00C               	goto	l11270
  9524                           
  9525                           ; BSR set to: 0
  9526  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9527  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9528  0118EC  0E80               	movlw	128
  9529  0118EE  5EDE               	subwf	postinc2,f,c
  9530  0118F0  0E13               	movlw	19
  9531  0118F2  5ADE               	subwfb	postinc2,f,c
  9532  0118F4  0E19               	movlw	25
  9533  0118F6  5ADE               	subwfb	postinc2,f,c
  9534  0118F8  0EBC               	movlw	188
  9535  0118FA  5ADE               	subwfb	postinc2,f,c
  9536  0118FC                     l11270:
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;My_RTCC.c: 303: RTCC_from_epoch(&now);
  9540  0118FC  0E73               	movlw	low _now
  9541  0118FE  0100               	movlb	0	; () banked
  9542  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9543  011902  0E01               	movlw	high _now
  9544  011904  0100               	movlb	0	; () banked
  9545  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9546  011908  EC4B  F0B6         	call	_RTCC_from_epoch	;wreg free
  9547                           
  9548                           ;My_RTCC.c: 304: time_change_flag = 1;
  9549  01190C  0E01               	movlw	1
  9550  01190E  6E22               	movwf	_time_change_flag,c
  9551  011910  0012               	return		;funcret
  9552  011912                     __end_of_RTCC_adjust_time_inc:
  9553                           	opt stack 0
  9554                           tblptru	equ	0xFF8
  9555                           tblptrh	equ	0xFF7
  9556                           tblptrl	equ	0xFF6
  9557                           tablat	equ	0xFF5
  9558                           prodh	equ	0xFF4
  9559                           prodl	equ	0xFF3
  9560                           intcon	equ	0xFF2
  9561                           postinc0	equ	0xFEE
  9562                           wreg	equ	0xFE8
  9563                           postinc1	equ	0xFE6
  9564                           postdec1	equ	0xFE5
  9565                           fsr1h	equ	0xFE2
  9566                           fsr1l	equ	0xFE1
  9567                           indf2	equ	0xFDF
  9568                           postinc2	equ	0xFDE
  9569                           postdec2	equ	0xFDD
  9570                           fsr2h	equ	0xFDA
  9571                           fsr2l	equ	0xFD9
  9572                           status	equ	0xFD8
  9573                           
  9574 ;; *************** function _RTCC_adjust_time_dec *****************
  9575 ;; Defined at:
  9576 ;;		line 307 in file "../My_library/My_RTCC.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;  tm              2   49[BANK0 ] PTR struct .
  9579 ;;		 -> now(14), 
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;  i               1   55[BANK0 ] unsigned char 
  9582 ;;  i               1   56[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;		None               void
  9585 ;; Registers used:
  9586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;Total ram usage:        8 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:   16
  9599 ;; This function calls:
  9600 ;;		_RTCC_from_RTCC
  9601 ;;		_RTCC_from_epoch
  9602 ;;		___lmul
  9603 ;;		_month_length
  9604 ;; This function is called by:
  9605 ;;		_settings_adjust_time
  9606 ;;		_RTCC_adjust_time_button
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text24
  9611  011912                     __ptext24:
  9612                           	opt stack 0
  9613  011912                     _RTCC_adjust_time_dec:
  9614                           	opt stack 11
  9615                           
  9616                           ;My_RTCC.c: 308: RTCC_from_RTCC(tm);
  9617                           
  9618                           ;incstack = 0
  9619  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9620  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9621  01191A  EC65  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9622                           
  9623                           ;My_RTCC.c: 309: if (tm->edit.flag.ss) tm->epoch -= 1;
  9624  01191E  0100               	movlb	0	; () banked
  9625  011920  EE20 F00D          	lfsr	2,13
  9626  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9627  011926  26D9               	addwf	fsr2l,f,c
  9628  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9629  01192A  22DA               	addwfc	fsr2h,f,c
  9630  01192C  0100               	movlb	0	; () banked
  9631  01192E  A0DF               	btfss	indf2,0,c
  9632  011930  D009               	goto	l952
  9633                           
  9634                           ; BSR set to: 0
  9635  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9636  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9637  01193A  06DE               	decf	postinc2,f,c
  9638  01193C  0E00               	movlw	0
  9639  01193E  5ADE               	subwfb	postinc2,f,c
  9640  011940  5ADE               	subwfb	postinc2,f,c
  9641  011942  5ADE               	subwfb	postinc2,f,c
  9642  011944                     l952:
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;My_RTCC.c: 310: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9646  011944  0100               	movlb	0	; () banked
  9647  011946  EE20 F00D          	lfsr	2,13
  9648  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9649  01194C  26D9               	addwf	fsr2l,f,c
  9650  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9651  011950  22DA               	addwfc	fsr2h,f,c
  9652  011952  0100               	movlb	0	; () banked
  9653  011954  A2DF               	btfss	indf2,1,c
  9654  011956  D00A               	goto	l11282
  9655                           
  9656                           ; BSR set to: 0
  9657  011958  0E3C               	movlw	60
  9658  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9659  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9660  011962  5EDE               	subwf	postinc2,f,c
  9661  011964  0E00               	movlw	0
  9662  011966  5ADE               	subwfb	postinc2,f,c
  9663  011968  5ADE               	subwfb	postinc2,f,c
  9664  01196A  5ADE               	subwfb	postinc2,f,c
  9665  01196C                     l11282:
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;My_RTCC.c: 311: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9669  01196C  0100               	movlb	0	; () banked
  9670  01196E  EE20 F00D          	lfsr	2,13
  9671  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9672  011974  26D9               	addwf	fsr2l,f,c
  9673  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9674  011978  22DA               	addwfc	fsr2h,f,c
  9675  01197A  0100               	movlb	0	; () banked
  9676  01197C  A4DF               	btfss	indf2,2,c
  9677  01197E  D00C               	goto	l11286
  9678                           
  9679                           ; BSR set to: 0
  9680  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9681  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9682  011988  0E10               	movlw	16
  9683  01198A  5EDE               	subwf	postinc2,f,c
  9684  01198C  0E0E               	movlw	14
  9685  01198E  5ADE               	subwfb	postinc2,f,c
  9686  011990  0E00               	movlw	0
  9687  011992  5ADE               	subwfb	postinc2,f,c
  9688  011994  0E00               	movlw	0
  9689  011996  5ADE               	subwfb	postinc2,f,c
  9690  011998                     l11286:
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;My_RTCC.c: 312: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9694  011998  0100               	movlb	0	; () banked
  9695  01199A  EE20 F00D          	lfsr	2,13
  9696  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9697  0119A0  26D9               	addwf	fsr2l,f,c
  9698  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9699  0119A4  22DA               	addwfc	fsr2h,f,c
  9700  0119A6  0100               	movlb	0	; () banked
  9701  0119A8  A6DF               	btfss	indf2,3,c
  9702  0119AA  D00C               	goto	l11290
  9703                           
  9704                           ; BSR set to: 0
  9705  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9706  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9707  0119B4  0E80               	movlw	128
  9708  0119B6  5EDE               	subwf	postinc2,f,c
  9709  0119B8  0E51               	movlw	81
  9710  0119BA  5ADE               	subwfb	postinc2,f,c
  9711  0119BC  0E01               	movlw	1
  9712  0119BE  5ADE               	subwfb	postinc2,f,c
  9713  0119C0  0E00               	movlw	0
  9714  0119C2  5ADE               	subwfb	postinc2,f,c
  9715  0119C4                     l11290:
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;My_RTCC.c: 313: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9719  0119C4  0100               	movlb	0	; () banked
  9720  0119C6  EE20 F00D          	lfsr	2,13
  9721  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9722  0119CC  26D9               	addwf	fsr2l,f,c
  9723  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9724  0119D0  22DA               	addwfc	fsr2h,f,c
  9725  0119D2  0100               	movlb	0	; () banked
  9726  0119D4  A8DF               	btfss	indf2,4,c
  9727  0119D6  D038               	goto	l11294
  9728                           
  9729                           ; BSR set to: 0
  9730  0119D8  0100               	movlb	0	; () banked
  9731  0119DA  EE20 F009          	lfsr	2,9
  9732  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9733  0119E0  26D9               	addwf	fsr2l,f,c
  9734  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9735  0119E4  22DA               	addwfc	fsr2h,f,c
  9736  0119E6  50DF               	movf	indf2,w,c
  9737  0119E8  0100               	movlb	0	; () banked
  9738  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9739  0119EC  0100               	movlb	0	; () banked
  9740  0119EE  EE20 F00A          	lfsr	2,10
  9741  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9742  0119F4  26D9               	addwf	fsr2l,f,c
  9743  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9744  0119F8  22DA               	addwfc	fsr2h,f,c
  9745  0119FA  50DF               	movf	indf2,w,c
  9746  0119FC  ECD7  F0A3         	call	_month_length
  9747  011A00  0100               	movlb	0	; () banked
  9748  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9749  011A04  0100               	movlb	0	; () banked
  9750  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9751  011A08  0100               	movlb	0	; () banked
  9752  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9753  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9754  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9755  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9756  011A12  0E80               	movlw	128
  9757  011A14  0100               	movlb	0	; () banked
  9758  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9759  011A18  0E51               	movlw	81
  9760  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9761  011A1C  0E01               	movlw	1
  9762  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9763  011A20  0E00               	movlw	0
  9764  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9765  011A24  EC62  F0AF         	call	___lmul	;wreg free
  9766  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9767  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9768  011A30  0100               	movlb	0	; () banked
  9769  011A32  516D               	movf	?___lmul& (0+255),w,b
  9770  011A34  5EDE               	subwf	postinc2,f,c
  9771  011A36  0100               	movlb	0	; () banked
  9772  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9773  011A3A  5ADE               	subwfb	postinc2,f,c
  9774  011A3C  0100               	movlb	0	; () banked
  9775  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9776  011A40  5ADE               	subwfb	postinc2,f,c
  9777  011A42  0100               	movlb	0	; () banked
  9778  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9779  011A46  5ADE               	subwfb	postinc2,f,c
  9780  011A48                     l11294:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;My_RTCC.c: 314: if (tm->edit.flag.YY) {
  9784  011A48  0100               	movlb	0	; () banked
  9785  011A4A  EE20 F00D          	lfsr	2,13
  9786  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9787  011A50  26D9               	addwf	fsr2l,f,c
  9788  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9789  011A54  22DA               	addwfc	fsr2h,f,c
  9790  011A56  0100               	movlb	0	; () banked
  9791  011A58  AADF               	btfss	indf2,5,c
  9792  011A5A  D088               	goto	l11316
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;My_RTCC.c: 315: for (uint8_t i = tm->MM; i >= 1; i--) {
  9796  011A5C  0100               	movlb	0	; () banked
  9797  011A5E  EE20 F009          	lfsr	2,9
  9798  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9799  011A64  26D9               	addwf	fsr2l,f,c
  9800  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9801  011A68  22DA               	addwfc	fsr2h,f,c
  9802  011A6A  50DF               	movf	indf2,w,c
  9803  011A6C  0100               	movlb	0	; () banked
  9804  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9805  011A70                     l11298:
  9806                           
  9807                           ; BSR set to: 0
  9808  011A70  0100               	movlb	0	; () banked
  9809  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9810  011A74  0100               	movlb	0	; () banked
  9811  011A76  B4D8               	btfsc	status,2,c
  9812  011A78  D033               	goto	l11308
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;My_RTCC.c: 316: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9816                           
  9817                           ; BSR set to: 0
  9818                           
  9819                           ; BSR set to: 0
  9820  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9821  011A7E  0100               	movlb	0	; () banked
  9822  011A80  EE20 F00A          	lfsr	2,10
  9823  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9824  011A86  26D9               	addwf	fsr2l,f,c
  9825  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9826  011A8A  22DA               	addwfc	fsr2h,f,c
  9827  011A8C  50DF               	movf	indf2,w,c
  9828  011A8E  ECD7  F0A3         	call	_month_length
  9829  011A92  0100               	movlb	0	; () banked
  9830  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9831  011A96  0100               	movlb	0	; () banked
  9832  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9833  011A9A  0100               	movlb	0	; () banked
  9834  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9835  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9836  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9837  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9838  011AA4  0E80               	movlw	128
  9839  011AA6  0100               	movlb	0	; () banked
  9840  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9841  011AAA  0E51               	movlw	81
  9842  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9843  011AAE  0E01               	movlw	1
  9844  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9845  011AB2  0E00               	movlw	0
  9846  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9847  011AB6  EC62  F0AF         	call	___lmul	;wreg free
  9848  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9849  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9850  011AC2  0100               	movlb	0	; () banked
  9851  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9852  011AC6  5EDE               	subwf	postinc2,f,c
  9853  011AC8  0100               	movlb	0	; () banked
  9854  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9855  011ACC  5ADE               	subwfb	postinc2,f,c
  9856  011ACE  0100               	movlb	0	; () banked
  9857  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9858  011AD2  5ADE               	subwfb	postinc2,f,c
  9859  011AD4  0100               	movlb	0	; () banked
  9860  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9861  011AD8  5ADE               	subwfb	postinc2,f,c
  9862                           
  9863                           ; BSR set to: 0
  9864  011ADA  0100               	movlb	0	; () banked
  9865  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9866  011ADE  D7C8               	goto	l11298
  9867  011AE0                     l11308:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;My_RTCC.c: 317: }
  9871                           ;My_RTCC.c: 318: for (uint8_t i = 12; i > tm->MM; i--) {
  9872  011AE0  0E0C               	movlw	12
  9873  011AE2  0100               	movlb	0	; () banked
  9874  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_3847& (0+255),b
  9875  011AE6  D036               	goto	l11314
  9876  011AE8                     l11310:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;My_RTCC.c: 319: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9880  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_3847,month_length@month
  9881  011AEC  0100               	movlb	0	; () banked
  9882  011AEE  EE20 F00A          	lfsr	2,10
  9883  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9884  011AF4  26D9               	addwf	fsr2l,f,c
  9885  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9886  011AF8  22DA               	addwfc	fsr2h,f,c
  9887  011AFA  50DF               	movf	indf2,w,c
  9888  011AFC  0100               	movlb	0	; () banked
  9889  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9890  011B00  0100               	movlb	0	; () banked
  9891  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9892  011B04  ECD7  F0A3         	call	_month_length
  9893  011B08  0100               	movlb	0	; () banked
  9894  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9895  011B0C  0100               	movlb	0	; () banked
  9896  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9897  011B10  0100               	movlb	0	; () banked
  9898  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9899  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9900  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9901  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9902  011B1A  0E80               	movlw	128
  9903  011B1C  0100               	movlb	0	; () banked
  9904  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9905  011B20  0E51               	movlw	81
  9906  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9907  011B24  0E01               	movlw	1
  9908  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9909  011B28  0E00               	movlw	0
  9910  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9911  011B2C  EC62  F0AF         	call	___lmul	;wreg free
  9912  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9913  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9914  011B38  0100               	movlb	0	; () banked
  9915  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9916  011B3C  5EDE               	subwf	postinc2,f,c
  9917  011B3E  0100               	movlb	0	; () banked
  9918  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9919  011B42  5ADE               	subwfb	postinc2,f,c
  9920  011B44  0100               	movlb	0	; () banked
  9921  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9922  011B48  5ADE               	subwfb	postinc2,f,c
  9923  011B4A  0100               	movlb	0	; () banked
  9924  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9925  011B4E  5ADE               	subwfb	postinc2,f,c
  9926                           
  9927                           ; BSR set to: 0
  9928  011B50  0100               	movlb	0	; () banked
  9929  011B52  0797               	decf	RTCC_adjust_time_dec@i_3847& (0+255),f,b
  9930  011B54                     l11314:
  9931                           
  9932                           ; BSR set to: 0
  9933  011B54  0100               	movlb	0	; () banked
  9934  011B56  EE20 F009          	lfsr	2,9
  9935  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9936  011B5C  26D9               	addwf	fsr2l,f,c
  9937  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9938  011B60  22DA               	addwfc	fsr2h,f,c
  9939  011B62  0100               	movlb	0	; () banked
  9940  011B64  5197               	movf	RTCC_adjust_time_dec@i_3847& (0+255),w,b
  9941  011B66  5CDE               	subwf	postinc2,w,c
  9942  011B68  A0D8               	btfss	status,0,c
  9943  011B6A  D7BE               	goto	l11310
  9944  011B6C                     l11316:
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;My_RTCC.c: 320: }
  9948                           ;My_RTCC.c: 321: }
  9949                           ;My_RTCC.c: 323: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9950  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9951  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9952  011B74  0E80               	movlw	128
  9953  011B76  5CDE               	subwf	postinc2,w,c
  9954  011B78  0E13               	movlw	19
  9955  011B7A  58DE               	subwfb	postinc2,w,c
  9956  011B7C  0E19               	movlw	25
  9957  011B7E  58DE               	subwfb	postinc2,w,c
  9958  011B80  0EBC               	movlw	188
  9959  011B82  58DE               	subwfb	postinc2,w,c
  9960  011B84  A0D8               	btfss	status,0,c
  9961  011B86  D00C               	goto	l11320
  9962                           
  9963                           ; BSR set to: 0
  9964  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9965  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9966  011B90  0E80               	movlw	128
  9967  011B92  26DE               	addwf	postinc2,f,c
  9968  011B94  0E13               	movlw	19
  9969  011B96  22DE               	addwfc	postinc2,f,c
  9970  011B98  0E19               	movlw	25
  9971  011B9A  22DE               	addwfc	postinc2,f,c
  9972  011B9C  0EBC               	movlw	188
  9973  011B9E  22DE               	addwfc	postinc2,f,c
  9974  011BA0                     l11320:
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;My_RTCC.c: 324: RTCC_from_epoch(&now);
  9978  011BA0  0E73               	movlw	low _now
  9979  011BA2  0100               	movlb	0	; () banked
  9980  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9981  011BA6  0E01               	movlw	high _now
  9982  011BA8  0100               	movlb	0	; () banked
  9983  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9984  011BAC  EC4B  F0B6         	call	_RTCC_from_epoch	;wreg free
  9985                           
  9986                           ;My_RTCC.c: 325: time_change_flag = 1;
  9987  011BB0  0E01               	movlw	1
  9988  011BB2  6E22               	movwf	_time_change_flag,c
  9989  011BB4  0012               	return		;funcret
  9990  011BB6                     __end_of_RTCC_adjust_time_dec:
  9991                           	opt stack 0
  9992                           tblptru	equ	0xFF8
  9993                           tblptrh	equ	0xFF7
  9994                           tblptrl	equ	0xFF6
  9995                           tablat	equ	0xFF5
  9996                           prodh	equ	0xFF4
  9997                           prodl	equ	0xFF3
  9998                           intcon	equ	0xFF2
  9999                           postinc0	equ	0xFEE
 10000                           wreg	equ	0xFE8
 10001                           postinc1	equ	0xFE6
 10002                           postdec1	equ	0xFE5
 10003                           fsr1h	equ	0xFE2
 10004                           fsr1l	equ	0xFE1
 10005                           indf2	equ	0xFDF
 10006                           postinc2	equ	0xFDE
 10007                           postdec2	equ	0xFDD
 10008                           fsr2h	equ	0xFDA
 10009                           fsr2l	equ	0xFD9
 10010                           status	equ	0xFD8
 10011                           
 10012 ;; *************** function _RTCC_adjust_time_cursor *****************
 10013 ;; Defined at:
 10014 ;;		line 276 in file "../My_library/My_RTCC.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  tm              2    0[BANK0 ] PTR struct .
 10017 ;;		 -> now(14), 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;		None               void
 10022 ;; Registers used:
 10023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10033 ;;Total ram usage:        2 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:   12
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_settings_adjust_time
 10040 ;;		_RTCC_adjust_time_button
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text25
 10045  013C68                     __ptext25:
 10046                           	opt stack 0
 10047  013C68                     _RTCC_adjust_time_cursor:
 10048                           	opt stack 15
 10049                           
 10050                           ;My_RTCC.c: 277: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 10051                           
 10052                           ;incstack = 0
 10053  013C68  0100               	movlb	0	; () banked
 10054  013C6A  EE20 F00D          	lfsr	2,13
 10055  013C6E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10056  013C70  26D9               	addwf	fsr2l,f,c
 10057  013C72  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10058  013C74  22DA               	addwfc	fsr2h,f,c
 10059  013C76  0100               	movlb	0	; () banked
 10060  013C78  A0DF               	btfss	indf2,0,c
 10061  013C7A  D00A               	goto	l11202
 10062                           
 10063                           ; BSR set to: 0
 10064  013C7C  0100               	movlb	0	; () banked
 10065  013C7E  EE20 F00D          	lfsr	2,13
 10066  013C82  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10067  013C84  26D9               	addwf	fsr2l,f,c
 10068  013C86  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10069  013C88  22DA               	addwfc	fsr2h,f,c
 10070  013C8A  0E02               	movlw	2
 10071  013C8C  6EDF               	movwf	indf2,c
 10072  013C8E  0012               	return	
 10073  013C90                     l11202:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;My_RTCC.c: 278: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 10077  013C90  0100               	movlb	0	; () banked
 10078  013C92  EE20 F00D          	lfsr	2,13
 10079  013C96  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10080  013C98  26D9               	addwf	fsr2l,f,c
 10081  013C9A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10082  013C9C  22DA               	addwfc	fsr2h,f,c
 10083  013C9E  0100               	movlb	0	; () banked
 10084  013CA0  A2DF               	btfss	indf2,1,c
 10085  013CA2  D00A               	goto	l11206
 10086                           
 10087                           ; BSR set to: 0
 10088  013CA4  0100               	movlb	0	; () banked
 10089  013CA6  EE20 F00D          	lfsr	2,13
 10090  013CAA  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10091  013CAC  26D9               	addwf	fsr2l,f,c
 10092  013CAE  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10093  013CB0  22DA               	addwfc	fsr2h,f,c
 10094  013CB2  0E04               	movlw	4
 10095  013CB4  6EDF               	movwf	indf2,c
 10096  013CB6  0012               	return	
 10097  013CB8                     l11206:
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;My_RTCC.c: 279: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 10101  013CB8  0100               	movlb	0	; () banked
 10102  013CBA  EE20 F00D          	lfsr	2,13
 10103  013CBE  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10104  013CC0  26D9               	addwf	fsr2l,f,c
 10105  013CC2  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10106  013CC4  22DA               	addwfc	fsr2h,f,c
 10107  013CC6  0100               	movlb	0	; () banked
 10108  013CC8  A4DF               	btfss	indf2,2,c
 10109  013CCA  D00A               	goto	l11210
 10110                           
 10111                           ; BSR set to: 0
 10112  013CCC  0100               	movlb	0	; () banked
 10113  013CCE  EE20 F00D          	lfsr	2,13
 10114  013CD2  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10115  013CD4  26D9               	addwf	fsr2l,f,c
 10116  013CD6  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10117  013CD8  22DA               	addwfc	fsr2h,f,c
 10118  013CDA  0E08               	movlw	8
 10119  013CDC  6EDF               	movwf	indf2,c
 10120  013CDE  0012               	return	
 10121  013CE0                     l11210:
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;My_RTCC.c: 280: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10125  013CE0  0100               	movlb	0	; () banked
 10126  013CE2  EE20 F00D          	lfsr	2,13
 10127  013CE6  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10128  013CE8  26D9               	addwf	fsr2l,f,c
 10129  013CEA  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10130  013CEC  22DA               	addwfc	fsr2h,f,c
 10131  013CEE  0100               	movlb	0	; () banked
 10132  013CF0  A6DF               	btfss	indf2,3,c
 10133  013CF2  D00A               	goto	l11214
 10134                           
 10135                           ; BSR set to: 0
 10136  013CF4  0100               	movlb	0	; () banked
 10137  013CF6  EE20 F00D          	lfsr	2,13
 10138  013CFA  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10139  013CFC  26D9               	addwf	fsr2l,f,c
 10140  013CFE  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10141  013D00  22DA               	addwfc	fsr2h,f,c
 10142  013D02  0E10               	movlw	16
 10143  013D04  6EDF               	movwf	indf2,c
 10144  013D06  0012               	return	
 10145  013D08                     l11214:
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;My_RTCC.c: 281: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10149  013D08  0100               	movlb	0	; () banked
 10150  013D0A  EE20 F00D          	lfsr	2,13
 10151  013D0E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10152  013D10  26D9               	addwf	fsr2l,f,c
 10153  013D12  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10154  013D14  22DA               	addwfc	fsr2h,f,c
 10155  013D16  0100               	movlb	0	; () banked
 10156  013D18  A8DF               	btfss	indf2,4,c
 10157  013D1A  D00A               	goto	l11218
 10158                           
 10159                           ; BSR set to: 0
 10160  013D1C  0100               	movlb	0	; () banked
 10161  013D1E  EE20 F00D          	lfsr	2,13
 10162  013D22  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10163  013D24  26D9               	addwf	fsr2l,f,c
 10164  013D26  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10165  013D28  22DA               	addwfc	fsr2h,f,c
 10166  013D2A  0E20               	movlw	32
 10167  013D2C  6EDF               	movwf	indf2,c
 10168  013D2E  0012               	return	
 10169  013D30                     l11218:
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;My_RTCC.c: 282: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10173  013D30  0100               	movlb	0	; () banked
 10174  013D32  EE20 F00D          	lfsr	2,13
 10175  013D36  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10176  013D38  26D9               	addwf	fsr2l,f,c
 10177  013D3A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10178  013D3C  22DA               	addwfc	fsr2h,f,c
 10179  013D3E  0100               	movlb	0	; () banked
 10180  013D40  AADF               	btfss	indf2,5,c
 10181  013D42  D00A               	goto	l11222
 10182                           
 10183                           ; BSR set to: 0
 10184  013D44  0100               	movlb	0	; () banked
 10185  013D46  EE20 F00D          	lfsr	2,13
 10186  013D4A  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10187  013D4C  26D9               	addwf	fsr2l,f,c
 10188  013D4E  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10189  013D50  22DA               	addwfc	fsr2h,f,c
 10190  013D52  0E01               	movlw	1
 10191  013D54  6EDF               	movwf	indf2,c
 10192  013D56  0012               	return	
 10193  013D58                     l11222:
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;My_RTCC.c: 283: else tm->edit.flags = 0x00;
 10197  013D58  0100               	movlb	0	; () banked
 10198  013D5A  EE20 F00D          	lfsr	2,13
 10199  013D5E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10200  013D60  26D9               	addwf	fsr2l,f,c
 10201  013D62  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10202  013D64  22DA               	addwfc	fsr2h,f,c
 10203  013D66  0E00               	movlw	0
 10204  013D68  6EDF               	movwf	indf2,c
 10205                           
 10206                           ; BSR set to: 0
 10207                           
 10208                           ; BSR set to: 0
 10209                           
 10210                           ; BSR set to: 0
 10211                           
 10212                           ; BSR set to: 0
 10213                           
 10214                           ; BSR set to: 0
 10215  013D6A  0012               	return	
 10216  013D6C                     __end_of_RTCC_adjust_time_cursor:
 10217                           	opt stack 0
 10218                           tblptru	equ	0xFF8
 10219                           tblptrh	equ	0xFF7
 10220                           tblptrl	equ	0xFF6
 10221                           tablat	equ	0xFF5
 10222                           prodh	equ	0xFF4
 10223                           prodl	equ	0xFF3
 10224                           intcon	equ	0xFF2
 10225                           postinc0	equ	0xFEE
 10226                           wreg	equ	0xFE8
 10227                           postinc1	equ	0xFE6
 10228                           postdec1	equ	0xFE5
 10229                           fsr1h	equ	0xFE2
 10230                           fsr1l	equ	0xFE1
 10231                           indf2	equ	0xFDF
 10232                           postinc2	equ	0xFDE
 10233                           postdec2	equ	0xFDD
 10234                           fsr2h	equ	0xFDA
 10235                           fsr2l	equ	0xFD9
 10236                           status	equ	0xFD8
 10237                           
 10238 ;; *************** function _port_button_task *****************
 10239 ;; Defined at:
 10240 ;;		line 82 in file "ChargeStation_task.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  i               1    6[BANK0 ] unsigned char 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;		None               void
 10247 ;; Registers used:
 10248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10258 ;;Total ram usage:        1 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:   13
 10261 ;; This function calls:
 10262 ;;		_LED_output
 10263 ;;		_OUT
 10264 ;;		_display
 10265 ;; This function is called by:
 10266 ;;		_normal_task
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text26
 10271  013124                     __ptext26:
 10272                           	opt stack 0
 10273  013124                     _port_button_task:
 10274                           	opt stack 16
 10275                           
 10276                           ;ChargeStation_task.c: 83: uint8_t i;
 10277                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;incstack = 0
 10281  013124  0E00               	movlw	0
 10282  013126  0100               	movlb	0	; () banked
 10283  013128  6F66               	movwf	port_button_task@i& (0+255),b
 10284  01312A                     l12388:
 10285                           
 10286                           ; BSR set to: 0
 10287  01312A  0E02               	movlw	2
 10288  01312C  0100               	movlb	0	; () banked
 10289  01312E  6566               	cpfsgt	port_button_task@i& (0+255),b
 10290  013130  D001               	goto	l12392
 10291  013132  0012               	return	
 10292  013134                     l12392:
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10296  013134  0100               	movlb	0	; () banked
 10297  013136  5166               	movf	port_button_task@i& (0+255),w,b
 10298  013138  0D17               	mullw	23
 10299  01313A  0E03               	movlw	3
 10300  01313C  26F3               	addwf	prodl,f,c
 10301  01313E  0E00               	movlw	0
 10302  013140  22F4               	addwfc	prodh,f,c
 10303  013142  0E2E               	movlw	low _port
 10304  013144  24F3               	addwf	prodl,w,c
 10305  013146  6ED9               	movwf	fsr2l,c
 10306  013148  0E01               	movlw	high _port
 10307  01314A  20F4               	addwfc	prodh,w,c
 10308  01314C  6EDA               	movwf	fsr2h,c
 10309  01314E  0101               	movlb	1	; () banked
 10310  013150  A0DF               	btfss	indf2,0,c
 10311  013152  D008               	goto	l12396
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10315  013154  0E01               	movlw	1
 10316  013156  0100               	movlb	0	; () banked
 10317  013158  6F60               	movwf	LED_output@value& (0+255),b
 10318  01315A  0100               	movlb	0	; () banked
 10319  01315C  5166               	movf	port_button_task@i& (0+255),w,b
 10320  01315E  EC9D  F0AF         	call	_LED_output
 10321                           
 10322                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10323  013162  D027               	goto	l12402
 10324  013164                     l12396:
 10325  013164  0100               	movlb	0	; () banked
 10326  013166  5166               	movf	port_button_task@i& (0+255),w,b
 10327  013168  0D17               	mullw	23
 10328  01316A  0E16               	movlw	22
 10329  01316C  26F3               	addwf	prodl,f,c
 10330  01316E  0E00               	movlw	0
 10331  013170  22F4               	addwfc	prodh,f,c
 10332  013172  0E2E               	movlw	low _port
 10333  013174  24F3               	addwf	prodl,w,c
 10334  013176  6ED9               	movwf	fsr2l,c
 10335  013178  0E01               	movlw	high _port
 10336  01317A  20F4               	addwfc	prodh,w,c
 10337  01317C  6EDA               	movwf	fsr2h,c
 10338  01317E  0101               	movlb	1	; () banked
 10339  013180  B2DF               	btfsc	indf2,1,c
 10340  013182  D017               	goto	l12402
 10341                           
 10342                           ; BSR set to: 1
 10343  013184  0100               	movlb	0	; () banked
 10344  013186  5166               	movf	port_button_task@i& (0+255),w,b
 10345  013188  0D17               	mullw	23
 10346  01318A  0E16               	movlw	22
 10347  01318C  26F3               	addwf	prodl,f,c
 10348  01318E  0E00               	movlw	0
 10349  013190  22F4               	addwfc	prodh,f,c
 10350  013192  0E2E               	movlw	low _port
 10351  013194  24F3               	addwf	prodl,w,c
 10352  013196  6ED9               	movwf	fsr2l,c
 10353  013198  0E01               	movlw	high _port
 10354  01319A  20F4               	addwfc	prodh,w,c
 10355  01319C  6EDA               	movwf	fsr2h,c
 10356  01319E  0101               	movlb	1	; () banked
 10357  0131A0  A6DF               	btfss	indf2,3,c
 10358  0131A2  D007               	goto	l12402
 10359                           
 10360                           ; BSR set to: 1
 10361                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10362  0131A4  0E00               	movlw	0
 10363  0131A6  0100               	movlb	0	; () banked
 10364  0131A8  6F60               	movwf	LED_output@value& (0+255),b
 10365  0131AA  0100               	movlb	0	; () banked
 10366  0131AC  5166               	movf	port_button_task@i& (0+255),w,b
 10367  0131AE  EC9D  F0AF         	call	_LED_output
 10368  0131B2                     l12402:
 10369                           
 10370                           ;ChargeStation_task.c: 90: }
 10371                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10372  0131B2  0100               	movlb	0	; () banked
 10373  0131B4  5166               	movf	port_button_task@i& (0+255),w,b
 10374  0131B6  0D17               	mullw	23
 10375  0131B8  0E02               	movlw	2
 10376  0131BA  26F3               	addwf	prodl,f,c
 10377  0131BC  0E00               	movlw	0
 10378  0131BE  22F4               	addwfc	prodh,f,c
 10379  0131C0  0E2E               	movlw	low _port
 10380  0131C2  24F3               	addwf	prodl,w,c
 10381  0131C4  6ED9               	movwf	fsr2l,c
 10382  0131C6  0E01               	movlw	high _port
 10383  0131C8  20F4               	addwfc	prodh,w,c
 10384  0131CA  6EDA               	movwf	fsr2h,c
 10385  0131CC  0101               	movlb	1	; () banked
 10386  0131CE  A0DF               	btfss	indf2,0,c
 10387  0131D0  D058               	goto	l12428
 10388                           
 10389                           ; BSR set to: 1
 10390                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10391  0131D2  0100               	movlb	0	; () banked
 10392  0131D4  5166               	movf	port_button_task@i& (0+255),w,b
 10393  0131D6  0D17               	mullw	23
 10394  0131D8  0E02               	movlw	2
 10395  0131DA  26F3               	addwf	prodl,f,c
 10396  0131DC  0E00               	movlw	0
 10397  0131DE  22F4               	addwfc	prodh,f,c
 10398  0131E0  0E2E               	movlw	low _port
 10399  0131E2  24F3               	addwf	prodl,w,c
 10400  0131E4  6ED9               	movwf	fsr2l,c
 10401  0131E6  0E01               	movlw	high _port
 10402  0131E8  20F4               	addwfc	prodh,w,c
 10403  0131EA  6EDA               	movwf	fsr2h,c
 10404  0131EC  0E00               	movlw	0
 10405  0131EE  6EDE               	movwf	postinc2,c
 10406  0131F0  0E00               	movlw	0
 10407  0131F2  6EDD               	movwf	postdec2,c
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10411  0131F4  0E00               	movlw	0
 10412  0131F6  0100               	movlb	0	; () banked
 10413  0131F8  6F60               	movwf	LED_output@value& (0+255),b
 10414  0131FA  0100               	movlb	0	; () banked
 10415  0131FC  5166               	movf	port_button_task@i& (0+255),w,b
 10416  0131FE  EC9D  F0AF         	call	_LED_output
 10417                           
 10418                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10419  013202  0100               	movlb	0	; () banked
 10420  013204  5166               	movf	port_button_task@i& (0+255),w,b
 10421  013206  0100               	movlb	0	; () banked
 10422  013208  19FB               	xorwf	_print_port& (0+255),w,b
 10423  01320A  B4D8               	btfsc	status,2,c
 10424  01320C  D008               	goto	l12420
 10425  01320E  D010               	goto	l1506
 10426  013210                     l12412:
 10427                           
 10428                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10429  013210  0E01               	movlw	1
 10430  013212  D003               	goto	L2
 10431  013214                     l12414:
 10432                           
 10433                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10434  013214  0E02               	movlw	2
 10435  013216  D001               	goto	L2
 10436  013218                     l12416:
 10437                           
 10438                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10439  013218  0E00               	movlw	0
 10440  01321A                     L2:
 10441  01321A  6E1D               	movwf	_data_item,c
 10442                           
 10443                           ;ChargeStation_task.c: 109: }
 10444                           
 10445                           ;ChargeStation_task.c: 108: break;
 10446  01321C  D00B               	goto	l12422
 10447  01321E                     l12420:
 10448  01321E  501D               	movf	_data_item,w,c
 10449                           
 10450                           ; Switch size 1, requested type "space"
 10451                           ; Number of cases is 3, Range of values is 0 to 2
 10452                           ; switch strategies available:
 10453                           ; Name         Instructions Cycles
 10454                           ; simple_byte           10     6 (average)
 10455                           ;	Chosen strategy is simple_byte
 10456  013220  0A00               	xorlw	0	; case 0
 10457  013222  B4D8               	btfsc	status,2,c
 10458  013224  D7F5               	goto	l12412
 10459  013226  0A01               	xorlw	1	; case 1
 10460  013228  B4D8               	btfsc	status,2,c
 10461  01322A  D7F4               	goto	l12414
 10462  01322C  0A03               	xorlw	3	; case 2
 10463  01322E  D7F4               	goto	l12416
 10464  013230                     l1506:
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;ChargeStation_task.c: 111: print_port = i;
 10468  013230  C066  F0FB         	movff	port_button_task@i,_print_port
 10469  013234                     l12422:
 10470                           
 10471                           ;ChargeStation_task.c: 112: }
 10472                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10473  013234  0EE6               	movlw	low (STR_19+3)
 10474  013236  0100               	movlb	0	; () banked
 10475  013238  6F60               	movwf	display@str0& (0+255),b
 10476  01323A  0EFF               	movlw	high (STR_19+3)
 10477  01323C  0100               	movlb	0	; () banked
 10478  01323E  6F61               	movwf	(display@str0+1)& (0+255),b
 10479  013240  0EE6               	movlw	low (STR_19+3)
 10480  013242  0100               	movlb	0	; () banked
 10481  013244  6F62               	movwf	display@str1& (0+255),b
 10482  013246  0EFF               	movlw	high (STR_19+3)
 10483  013248  0100               	movlb	0	; () banked
 10484  01324A  6F63               	movwf	(display@str1+1)& (0+255),b
 10485  01324C  0E02               	movlw	2
 10486  01324E  ECE0  F09B         	call	_display
 10487                           
 10488                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10489  013252  0E01               	movlw	1
 10490  013254  0100               	movlb	0	; () banked
 10491  013256  6F60               	movwf	OUT@value& (0+255),b
 10492  013258  0100               	movlb	0	; () banked
 10493  01325A  5166               	movf	port_button_task@i& (0+255),w,b
 10494  01325C  ECD6  F0AF         	call	_OUT
 10495                           
 10496                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10497  013260  0100               	movlb	0	; () banked
 10498  013262  5166               	movf	port_button_task@i& (0+255),w,b
 10499  013264  0D17               	mullw	23
 10500  013266  0E14               	movlw	20
 10501  013268  26F3               	addwf	prodl,f,c
 10502  01326A  0E00               	movlw	0
 10503  01326C  22F4               	addwfc	prodh,f,c
 10504  01326E  0E2E               	movlw	low _port
 10505  013270  24F3               	addwf	prodl,w,c
 10506  013272  6ED9               	movwf	fsr2l,c
 10507  013274  0E01               	movlw	high _port
 10508  013276  20F4               	addwfc	prodh,w,c
 10509  013278  6EDA               	movwf	fsr2h,c
 10510  01327A  0E00               	movlw	0
 10511  01327C  6EDE               	movwf	postinc2,c
 10512  01327E  0E00               	movlw	0
 10513  013280  6EDD               	movwf	postdec2,c
 10514  013282                     l12428:
 10515  013282  0100               	movlb	0	; () banked
 10516  013284  2B66               	incf	port_button_task@i& (0+255),f,b
 10517  013286  D751               	goto	l12388
 10518  013288                     __end_of_port_button_task:
 10519                           	opt stack 0
 10520                           tblptru	equ	0xFF8
 10521                           tblptrh	equ	0xFF7
 10522                           tblptrl	equ	0xFF6
 10523                           tablat	equ	0xFF5
 10524                           prodh	equ	0xFF4
 10525                           prodl	equ	0xFF3
 10526                           intcon	equ	0xFF2
 10527                           postinc0	equ	0xFEE
 10528                           wreg	equ	0xFE8
 10529                           postinc1	equ	0xFE6
 10530                           postdec1	equ	0xFE5
 10531                           fsr1h	equ	0xFE2
 10532                           fsr1l	equ	0xFE1
 10533                           indf2	equ	0xFDF
 10534                           postinc2	equ	0xFDE
 10535                           postdec2	equ	0xFDD
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function _display *****************
 10541 ;; Defined at:
 10542 ;;		line 15 in file "LCD_print.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  item            1    wreg     enum E8527
 10545 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10546 ;;		 -> STR_116(1), STR_114(9), STR_112(9), STR_110(9), 
 10547 ;;		 -> STR_108(9), STR_106(9), STR_104(9), STR_102(1), 
 10548 ;;		 -> STR_101(1), STR_98(17), STR_94(1), STR_93(1), 
 10549 ;;		 -> STR_90(17), STR_86(1), STR_85(1), STR_82(17), 
 10550 ;;		 -> STR_78(1), STR_76(1), STR_74(15), STR_47(15), 
 10551 ;;		 -> STR_43(1), STR_41(1), 
 10552 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10553 ;;		 -> STR_117(1), STR_115(15), STR_113(16), STR_111(17), 
 10554 ;;		 -> STR_109(16), STR_107(17), STR_105(17), STR_103(1), 
 10555 ;;		 -> settings_integrating_reset@str_6147(20), settings_integrating_reset@str(20), STR_95(1), settings_led_indicator@s
      +tr_6130(20), 
 10556 ;;		 -> settings_led_indicator@str(20), STR_87(1), settings_auto_stop@str_6113(20), settings_auto_stop@str(20), 
 10557 ;;		 -> STR_79(1), STR_77(1), STR_75(13), STR_48(14), 
 10558 ;;		 -> STR_44(1), STR_42(1), 
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;  item            1    4[BANK0 ] enum E8527
 10561 ;;  i               1    5[BANK0 ] unsigned char 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;		None               void
 10564 ;; Registers used:
 10565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10575 ;;Total ram usage:        6 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:   12
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_port_button_task
 10582 ;;		_normal_task
 10583 ;;		_sleep_task
 10584 ;;		_software_init
 10585 ;;		_settings_adjust_time
 10586 ;;		_settings_auto_stop
 10587 ;;		_settings_led_indicator
 10588 ;;		_settings_integrating_reset
 10589 ;;		_settings_task
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           	psect	text27
 10594  0137C0                     __ptext27:
 10595                           	opt stack 0
 10596  0137C0                     _display:
 10597                           	opt stack 17
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;incstack = 0
 10601                           ;display@item stored from wreg
 10602  0137C0  0100               	movlb	0	; () banked
 10603  0137C2  6F64               	movwf	display@item& (0+255),b
 10604                           
 10605                           ;LCD_print.c: 16: print_item = item;
 10606  0137C4  C064  F01F         	movff	display@item,_print_item
 10607                           
 10608                           ;LCD_print.c: 17: uint8_t i;
 10609                           ;LCD_print.c: 18: if (*str0) {
 10610  0137C8  C060  FFF6         	movff	display@str0,tblptrl
 10611  0137CC  C061  FFF7         	movff	display@str0+1,tblptrh
 10612  0137D0                     	if	0	;tblptru may be non-zero
 10613  0137D0                     	endif
 10614  0137D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10615  0137D0  0E00               	movlw	low (__mediumconst shr (0+16))
 10616  0137D2  6EF8               	movwf	tblptru,c
 10617  0137D4                     	endif
 10618  0137D4  0008               	tblrd		*
 10619  0137D6  50F5               	movf	tablat,w,c
 10620  0137D8  0900               	iorlw	0
 10621  0137DA  B4D8               	btfsc	status,2,c
 10622  0137DC  D031               	goto	l11424
 10623                           
 10624                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10625  0137DE  0E00               	movlw	0
 10626  0137E0  0100               	movlb	0	; () banked
 10627  0137E2  6F65               	movwf	display@i& (0+255),b
 10628  0137E4  D017               	goto	l11420
 10629  0137E6                     l11414:
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10633  0137E6  C060  FFF6         	movff	display@str0,tblptrl
 10634  0137EA  C061  FFF7         	movff	display@str0+1,tblptrh
 10635  0137EE                     	if	0	;tblptru may be non-zero
 10636  0137EE                     	endif
 10637  0137EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10638  0137EE  0E00               	movlw	low (__mediumconst shr (0+16))
 10639  0137F0  6EF8               	movwf	tblptru,c
 10640  0137F2                     	endif
 10641  0137F2  0100               	movlb	0	; () banked
 10642  0137F4  5165               	movf	display@i& (0+255),w,b
 10643  0137F6  0D01               	mullw	1
 10644  0137F8  0E1A               	movlw	low _display_char
 10645  0137FA  24F3               	addwf	prodl,w,c
 10646  0137FC  6ED9               	movwf	fsr2l,c
 10647  0137FE  0E02               	movlw	high _display_char
 10648  013800  20F4               	addwfc	prodh,w,c
 10649  013802  6EDA               	movwf	fsr2h,c
 10650  013804  0008               	tblrd		*
 10651  013806  CFF5 FFDF          	movff	tablat,indf2
 10652                           
 10653                           ; BSR set to: 0
 10654  01380A  0100               	movlb	0	; () banked
 10655  01380C  4B60               	infsnz	display@str0& (0+255),f,b
 10656  01380E  2B61               	incf	(display@str0+1)& (0+255),f,b
 10657                           
 10658                           ; BSR set to: 0
 10659  013810  0100               	movlb	0	; () banked
 10660  013812  2B65               	incf	display@i& (0+255),f,b
 10661  013814                     l11420:
 10662                           
 10663                           ; BSR set to: 0
 10664  013814  C060  FFF6         	movff	display@str0,tblptrl
 10665  013818  C061  FFF7         	movff	display@str0+1,tblptrh
 10666  01381C                     	if	0	;tblptru may be non-zero
 10667  01381C                     	endif
 10668  01381C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10669  01381C  0E00               	movlw	low (__mediumconst shr (0+16))
 10670  01381E  6EF8               	movwf	tblptru,c
 10671  013820                     	endif
 10672  013820  0008               	tblrd		*
 10673  013822  50F5               	movf	tablat,w,c
 10674  013824  0900               	iorlw	0
 10675  013826  A4D8               	btfss	status,2,c
 10676  013828  D7DE               	goto	l11414
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;LCD_print.c: 21: }
 10680                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10681                           
 10682                           ; BSR set to: 0
 10683  01382A  0100               	movlb	0	; () banked
 10684  01382C  5165               	movf	display@i& (0+255),w,b
 10685  01382E  0D01               	mullw	1
 10686  013830  0E1A               	movlw	low _display_char
 10687  013832  24F3               	addwf	prodl,w,c
 10688  013834  6ED9               	movwf	fsr2l,c
 10689  013836  0E02               	movlw	high _display_char
 10690  013838  20F4               	addwfc	prodh,w,c
 10691  01383A  6EDA               	movwf	fsr2h,c
 10692  01383C  0E00               	movlw	0
 10693  01383E  6EDF               	movwf	indf2,c
 10694  013840                     l11424:
 10695                           
 10696                           ;LCD_print.c: 23: }
 10697                           ;LCD_print.c: 24: if (*str1) {
 10698  013840  C062  FFF6         	movff	display@str1,tblptrl
 10699  013844  C063  FFF7         	movff	display@str1+1,tblptrh
 10700  013848  0E00               	movlw	low (__mediumconst shr (0+16))
 10701  01384A  6EF8               	movwf	tblptru,c
 10702  01384C  0E0E               	movlw	(high __ramtop+-1)
 10703  01384E  64F7               	cpfsgt	tblptrh,c
 10704  013850  D003               	bra	u12747
 10705  013852  0008               	tblrd		*
 10706  013854  50F5               	movf	tablat,w,c
 10707  013856  D005               	bra	u12740
 10708  013858                     u12747:
 10709  013858  CFF6 FFE1          	movff	tblptrl,fsr1l
 10710  01385C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10711  013860  50E7               	movf	indf1,w,c
 10712  013862                     u12740:
 10713  013862  0900               	iorlw	0
 10714  013864  B4D8               	btfsc	status,2,c
 10715  013866  D043               	goto	l11438
 10716                           
 10717                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10718  013868  0E00               	movlw	0
 10719  01386A  0100               	movlb	0	; () banked
 10720  01386C  6F65               	movwf	display@i& (0+255),b
 10721  01386E  D020               	goto	l11434
 10722  013870                     l11428:
 10723                           
 10724                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10725  013870  C062  FFF6         	movff	display@str1,tblptrl
 10726  013874  C063  FFF7         	movff	display@str1+1,tblptrh
 10727  013878  0E00               	movlw	low (__mediumconst shr (0+16))
 10728  01387A  6EF8               	movwf	tblptru,c
 10729  01387C  0100               	movlb	0	; () banked
 10730  01387E  5165               	movf	display@i& (0+255),w,b
 10731  013880  0D01               	mullw	1
 10732  013882  0E2E               	movlw	low (_display_char+20)
 10733  013884  24F3               	addwf	prodl,w,c
 10734  013886  6ED9               	movwf	fsr2l,c
 10735  013888  0E02               	movlw	high (_display_char+20)
 10736  01388A  20F4               	addwfc	prodh,w,c
 10737  01388C  6EDA               	movwf	fsr2h,c
 10738  01388E  0E0E               	movlw	(high __ramtop+-1)
 10739  013890  64F7               	cpfsgt	tblptrh,c
 10740  013892  D003               	bra	u12767
 10741  013894  0008               	tblrd		*
 10742  013896  50F5               	movf	tablat,w,c
 10743  013898  D005               	bra	u12760
 10744  01389A                     u12767:
 10745  01389A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10746  01389E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10747  0138A2  50E7               	movf	indf1,w,c
 10748  0138A4                     u12760:
 10749  0138A4  6EDF               	movwf	indf2,c
 10750  0138A6  0100               	movlb	0	; () banked
 10751  0138A8  4B62               	infsnz	display@str1& (0+255),f,b
 10752  0138AA  2B63               	incf	(display@str1+1)& (0+255),f,b
 10753                           
 10754                           ; BSR set to: 0
 10755  0138AC  0100               	movlb	0	; () banked
 10756  0138AE  2B65               	incf	display@i& (0+255),f,b
 10757  0138B0                     l11434:
 10758                           
 10759                           ; BSR set to: 0
 10760  0138B0  C062  FFF6         	movff	display@str1,tblptrl
 10761  0138B4  C063  FFF7         	movff	display@str1+1,tblptrh
 10762  0138B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10763  0138BA  6EF8               	movwf	tblptru,c
 10764  0138BC  0E0E               	movlw	(high __ramtop+-1)
 10765  0138BE  64F7               	cpfsgt	tblptrh,c
 10766  0138C0  D003               	bra	u12777
 10767  0138C2  0008               	tblrd		*
 10768  0138C4  50F5               	movf	tablat,w,c
 10769  0138C6  D005               	bra	u12770
 10770  0138C8                     u12777:
 10771  0138C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10772  0138CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10773  0138D0  50E7               	movf	indf1,w,c
 10774  0138D2                     u12770:
 10775  0138D2  0900               	iorlw	0
 10776  0138D4  A4D8               	btfss	status,2,c
 10777  0138D6  D7CC               	goto	l11428
 10778                           
 10779                           ;LCD_print.c: 27: }
 10780                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10781  0138D8  0100               	movlb	0	; () banked
 10782  0138DA  5165               	movf	display@i& (0+255),w,b
 10783  0138DC  0D01               	mullw	1
 10784  0138DE  0E2E               	movlw	low (_display_char+20)
 10785  0138E0  24F3               	addwf	prodl,w,c
 10786  0138E2  6ED9               	movwf	fsr2l,c
 10787  0138E4  0E02               	movlw	high (_display_char+20)
 10788  0138E6  20F4               	addwfc	prodh,w,c
 10789  0138E8  6EDA               	movwf	fsr2h,c
 10790  0138EA  0E00               	movlw	0
 10791  0138EC  6EDF               	movwf	indf2,c
 10792  0138EE                     l11438:
 10793                           
 10794                           ;LCD_print.c: 29: }
 10795                           ;LCD_print.c: 30: display_flag = 1;
 10796  0138EE  0E01               	movlw	1
 10797  0138F0  0101               	movlb	1	; () banked
 10798  0138F2  6F20               	movwf	_display_flag& (0+255),b
 10799                           
 10800                           ; BSR set to: 1
 10801  0138F4  0012               	return		;funcret
 10802  0138F6                     __end_of_display:
 10803                           	opt stack 0
 10804                           tblptru	equ	0xFF8
 10805                           tblptrh	equ	0xFF7
 10806                           tblptrl	equ	0xFF6
 10807                           tablat	equ	0xFF5
 10808                           prodh	equ	0xFF4
 10809                           prodl	equ	0xFF3
 10810                           intcon	equ	0xFF2
 10811                           postinc0	equ	0xFEE
 10812                           wreg	equ	0xFE8
 10813                           indf1	equ	0xFE7
 10814                           postinc1	equ	0xFE6
 10815                           postdec1	equ	0xFE5
 10816                           fsr1h	equ	0xFE2
 10817                           fsr1l	equ	0xFE1
 10818                           indf2	equ	0xFDF
 10819                           postinc2	equ	0xFDE
 10820                           postdec2	equ	0xFDD
 10821                           fsr2h	equ	0xFDA
 10822                           fsr2l	equ	0xFD9
 10823                           status	equ	0xFD8
 10824                           
 10825 ;; *************** function _LED_output *****************
 10826 ;; Defined at:
 10827 ;;		line 36 in file "io.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  b               1    wreg     unsigned char 
 10830 ;;  value           1    0[BANK0 ] unsigned char 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  b               1    1[BANK0 ] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;		None               void
 10835 ;; Registers used:
 10836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10842 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;Total ram usage:        2 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:   12
 10849 ;; This function calls:
 10850 ;;		Nothing
 10851 ;; This function is called by:
 10852 ;;		_port_button_task
 10853 ;;		_sleep_task
 10854 ;;		_software_init
 10855 ;;		_settings_led_indicator
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text28
 10860  015F3A                     __ptext28:
 10861                           	opt stack 0
 10862  015F3A                     _LED_output:
 10863                           	opt stack 17
 10864                           
 10865                           ; BSR set to: 1
 10866                           ;incstack = 0
 10867                           ;LED_output@b stored from wreg
 10868  015F3A  0100               	movlb	0	; () banked
 10869  015F3C  6F61               	movwf	LED_output@b& (0+255),b
 10870                           
 10871                           ;io.c: 37: port[b].flag.led_flag = value;
 10872  015F3E  0100               	movlb	0	; () banked
 10873  015F40  5161               	movf	LED_output@b& (0+255),w,b
 10874  015F42  0D17               	mullw	23
 10875  015F44  0E16               	movlw	22
 10876  015F46  26F3               	addwf	prodl,f,c
 10877  015F48  0E00               	movlw	0
 10878  015F4A  22F4               	addwfc	prodh,f,c
 10879  015F4C  0E2E               	movlw	low _port
 10880  015F4E  24F3               	addwf	prodl,w,c
 10881  015F50  6ED9               	movwf	fsr2l,c
 10882  015F52  0E01               	movlw	high _port
 10883  015F54  20F4               	addwfc	prodh,w,c
 10884  015F56  6EDA               	movwf	fsr2h,c
 10885  015F58  0100               	movlb	0	; () banked
 10886  015F5A  B160               	btfsc	LED_output@value& (0+255),0,b
 10887  015F5C  D003               	bra	u12655
 10888  015F5E  0101               	movlb	1	; () banked
 10889  015F60  96DF               	bcf	indf2,3,c
 10890  015F62  D002               	bra	u12656
 10891  015F64                     u12655:
 10892  015F64  0101               	movlb	1	; () banked
 10893  015F66  86DF               	bsf	indf2,3,c
 10894  015F68                     u12656:
 10895                           
 10896                           ;io.c: 38: switch (b) {
 10897  015F68  D015               	goto	l11406
 10898  015F6A                     l1685:
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;io.c: 40: LATB7 = value;
 10902  015F6A  0100               	movlb	0	; () banked
 10903  015F6C  A160               	btfss	LED_output@value& (0+255),0,b
 10904  015F6E  D002               	goto	u12660
 10905  015F70  8E8A               	bsf	3978,7,c	;volatile
 10906  015F72  0012               	return	
 10907  015F74                     u12660:
 10908  015F74  9E8A               	bcf	3978,7,c	;volatile
 10909                           
 10910                           ;io.c: 41: break;
 10911  015F76  0012               	return	
 10912  015F78                     l1687:
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;io.c: 43: LATB6 = value;
 10916  015F78  0100               	movlb	0	; () banked
 10917  015F7A  A160               	btfss	LED_output@value& (0+255),0,b
 10918  015F7C  D002               	goto	u12680
 10919  015F7E  8C8A               	bsf	3978,6,c	;volatile
 10920  015F80  0012               	return	
 10921  015F82                     u12680:
 10922  015F82  9C8A               	bcf	3978,6,c	;volatile
 10923                           
 10924                           ;io.c: 44: break;
 10925  015F84  0012               	return	
 10926  015F86                     l1688:
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;io.c: 46: LATC2 = value;
 10930  015F86  0100               	movlb	0	; () banked
 10931  015F88  A160               	btfss	LED_output@value& (0+255),0,b
 10932  015F8A  D002               	goto	u12700
 10933  015F8C  848B               	bsf	3979,2,c	;volatile
 10934  015F8E  0012               	return	
 10935  015F90                     u12700:
 10936  015F90  948B               	bcf	3979,2,c	;volatile
 10937                           
 10938                           ;io.c: 48: }
 10939                           
 10940                           ;io.c: 47: break;
 10941  015F92  0012               	return	
 10942  015F94                     l11406:
 10943  015F94  0100               	movlb	0	; () banked
 10944  015F96  5161               	movf	LED_output@b& (0+255),w,b
 10945                           
 10946                           ; Switch size 1, requested type "space"
 10947                           ; Number of cases is 3, Range of values is 0 to 2
 10948                           ; switch strategies available:
 10949                           ; Name         Instructions Cycles
 10950                           ; simple_byte           10     6 (average)
 10951                           ;	Chosen strategy is simple_byte
 10952  015F98  0A00               	xorlw	0	; case 0
 10953  015F9A  B4D8               	btfsc	status,2,c
 10954  015F9C  D7E6               	goto	l1685
 10955  015F9E  0A01               	xorlw	1	; case 1
 10956  015FA0  B4D8               	btfsc	status,2,c
 10957  015FA2  D7EA               	goto	l1687
 10958  015FA4  0A03               	xorlw	3	; case 2
 10959  015FA6  A4D8               	btfss	status,2,c
 10960  015FA8  0012               	return	
 10961  015FAA  D7ED               	goto	l1688
 10962  015FAC                     __end_of_LED_output:
 10963                           	opt stack 0
 10964                           tblptru	equ	0xFF8
 10965                           tblptrh	equ	0xFF7
 10966                           tblptrl	equ	0xFF6
 10967                           tablat	equ	0xFF5
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           postinc0	equ	0xFEE
 10972                           wreg	equ	0xFE8
 10973                           indf1	equ	0xFE7
 10974                           postinc1	equ	0xFE6
 10975                           postdec1	equ	0xFE5
 10976                           fsr1h	equ	0xFE2
 10977                           fsr1l	equ	0xFE1
 10978                           indf2	equ	0xFDF
 10979                           postinc2	equ	0xFDE
 10980                           postdec2	equ	0xFDD
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _integrate_time *****************
 10986 ;; Defined at:
 10987 ;;		line 76 in file "ChargeStation_task.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  i               1    2[BANK0 ] unsigned char 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;		None               void
 10994 ;; Registers used:
 10995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;Total ram usage:        3 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:   12
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_normal_task
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text29
 11016  016294                     __ptext29:
 11017                           	opt stack 0
 11018  016294                     _integrate_time:
 11019                           	opt stack 17
 11020                           
 11021                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 11022                           
 11023                           ;incstack = 0
 11024  016294  0E00               	movlw	0
 11025  016296  0100               	movlb	0	; () banked
 11026  016298  6F62               	movwf	integrate_time@i& (0+255),b
 11027  01629A                     l12374:
 11028                           
 11029                           ; BSR set to: 0
 11030  01629A  0E02               	movlw	2
 11031  01629C  0100               	movlb	0	; () banked
 11032  01629E  6562               	cpfsgt	integrate_time@i& (0+255),b
 11033  0162A0  D001               	goto	l12378
 11034  0162A2  0012               	return	
 11035  0162A4                     l12378:
 11036                           
 11037                           ; BSR set to: 0
 11038                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 11039  0162A4  0100               	movlb	0	; () banked
 11040  0162A6  5162               	movf	integrate_time@i& (0+255),w,b
 11041  0162A8  0D17               	mullw	23
 11042  0162AA  0E06               	movlw	6
 11043  0162AC  26F3               	addwf	prodl,f,c
 11044  0162AE  0E00               	movlw	0
 11045  0162B0  22F4               	addwfc	prodh,f,c
 11046  0162B2  0E2E               	movlw	low _port
 11047  0162B4  24F3               	addwf	prodl,w,c
 11048  0162B6  6ED9               	movwf	fsr2l,c
 11049  0162B8  0E01               	movlw	high _port
 11050  0162BA  20F4               	addwfc	prodh,w,c
 11051  0162BC  6EDA               	movwf	fsr2h,c
 11052  0162BE  0E01               	movlw	1
 11053  0162C0  50DB               	movf	plusw2,w,c
 11054  0162C2  E104               	bnz	u14140
 11055  0162C4  0E65               	movlw	101
 11056  0162C6  5CDE               	subwf	postinc2,w,c
 11057  0162C8  A0D8               	btfss	status,0,c
 11058  0162CA  D012               	goto	l12382
 11059  0162CC                     u14140:
 11060                           
 11061                           ; BSR set to: 0
 11062  0162CC  0100               	movlb	0	; () banked
 11063  0162CE  5162               	movf	integrate_time@i& (0+255),w,b
 11064  0162D0  0D17               	mullw	23
 11065  0162D2  0E10               	movlw	16
 11066  0162D4  26F3               	addwf	prodl,f,c
 11067  0162D6  0E00               	movlw	0
 11068  0162D8  22F4               	addwfc	prodh,f,c
 11069  0162DA  0E2E               	movlw	low _port
 11070  0162DC  24F3               	addwf	prodl,w,c
 11071  0162DE  6ED9               	movwf	fsr2l,c
 11072  0162E0  0E01               	movlw	high _port
 11073  0162E2  20F4               	addwfc	prodh,w,c
 11074  0162E4  6EDA               	movwf	fsr2h,c
 11075  0162E6  2ADE               	incf	postinc2,f,c
 11076  0162E8  0E00               	movlw	0
 11077  0162EA  22DE               	addwfc	postinc2,f,c
 11078  0162EC  22DE               	addwfc	postinc2,f,c
 11079  0162EE  22DE               	addwfc	postinc2,f,c
 11080  0162F0                     l12382:
 11081                           
 11082                           ; BSR set to: 0
 11083  0162F0  0100               	movlb	0	; () banked
 11084  0162F2  2B62               	incf	integrate_time@i& (0+255),f,b
 11085  0162F4  D7D2               	goto	l12374
 11086  0162F6                     __end_of_integrate_time:
 11087                           	opt stack 0
 11088                           tblptru	equ	0xFF8
 11089                           tblptrh	equ	0xFF7
 11090                           tblptrl	equ	0xFF6
 11091                           tablat	equ	0xFF5
 11092                           prodh	equ	0xFF4
 11093                           prodl	equ	0xFF3
 11094                           intcon	equ	0xFF2
 11095                           postinc0	equ	0xFEE
 11096                           wreg	equ	0xFE8
 11097                           indf1	equ	0xFE7
 11098                           postinc1	equ	0xFE6
 11099                           postdec1	equ	0xFE5
 11100                           fsr1h	equ	0xFE2
 11101                           fsr1l	equ	0xFE1
 11102                           indf2	equ	0xFDF
 11103                           postinc2	equ	0xFDE
 11104                           postdec2	equ	0xFDD
 11105                           plusw2	equ	0xFDB
 11106                           fsr2h	equ	0xFDA
 11107                           fsr2l	equ	0xFD9
 11108                           status	equ	0xFD8
 11109                           
 11110 ;; *************** function _integrate_current *****************
 11111 ;; Defined at:
 11112 ;;		line 67 in file "ChargeStation_task.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;		None
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;  i               1   15[BANK0 ] unsigned char 
 11117 ;; Return value:  Size  Location     Type
 11118 ;;		None               void
 11119 ;; Registers used:
 11120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11128 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11129 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11130 ;;Total ram usage:        3 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:   13
 11133 ;; This function calls:
 11134 ;;		___lldiv
 11135 ;; This function is called by:
 11136 ;;		_normal_task
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text30
 11141  013E6E                     __ptext30:
 11142                           	opt stack 0
 11143  013E6E                     _integrate_current:
 11144                           	opt stack 16
 11145                           
 11146                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;incstack = 0
 11150  013E6E  0E00               	movlw	0
 11151  013E70  0100               	movlb	0	; () banked
 11152  013E72  6F6F               	movwf	integrate_current@i& (0+255),b
 11153  013E74                     l12358:
 11154                           
 11155                           ; BSR set to: 0
 11156  013E74  0E02               	movlw	2
 11157  013E76  0100               	movlb	0	; () banked
 11158  013E78  656F               	cpfsgt	integrate_current@i& (0+255),b
 11159  013E7A  D001               	goto	l12362
 11160  013E7C  0012               	return	
 11161  013E7E                     l12362:
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11165  013E7E  0100               	movlb	0	; () banked
 11166  013E80  516F               	movf	integrate_current@i& (0+255),w,b
 11167  013E82  0D17               	mullw	23
 11168  013E84  0E06               	movlw	6
 11169  013E86  26F3               	addwf	prodl,f,c
 11170  013E88  0E00               	movlw	0
 11171  013E8A  22F4               	addwfc	prodh,f,c
 11172  013E8C  0E2E               	movlw	low _port
 11173  013E8E  24F3               	addwf	prodl,w,c
 11174  013E90  6ED9               	movwf	fsr2l,c
 11175  013E92  0E01               	movlw	high _port
 11176  013E94  20F4               	addwfc	prodh,w,c
 11177  013E96  6EDA               	movwf	fsr2h,c
 11178  013E98  0E01               	movlw	1
 11179  013E9A  50DB               	movf	plusw2,w,c
 11180  013E9C  E104               	bnz	u14110
 11181  013E9E  0E65               	movlw	101
 11182  013EA0  5CDE               	subwf	postinc2,w,c
 11183  013EA2  A0D8               	btfss	status,0,c
 11184  013EA4  D05F               	goto	l12368
 11185  013EA6                     u14110:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11189  013EA6  0100               	movlb	0	; () banked
 11190  013EA8  516F               	movf	integrate_current@i& (0+255),w,b
 11191  013EAA  0D17               	mullw	23
 11192  013EAC  0E06               	movlw	6
 11193  013EAE  26F3               	addwf	prodl,f,c
 11194  013EB0  0E00               	movlw	0
 11195  013EB2  22F4               	addwfc	prodh,f,c
 11196  013EB4  0E2E               	movlw	low _port
 11197  013EB6  24F3               	addwf	prodl,w,c
 11198  013EB8  6ED9               	movwf	fsr2l,c
 11199  013EBA  0E01               	movlw	high _port
 11200  013EBC  20F4               	addwfc	prodh,w,c
 11201  013EBE  6EDA               	movwf	fsr2h,c
 11202  013EC0  CFDE F06D          	movff	postinc2,??_integrate_current
 11203  013EC4  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11204  013EC8  0100               	movlb	0	; () banked
 11205  013ECA  516F               	movf	integrate_current@i& (0+255),w,b
 11206  013ECC  0D17               	mullw	23
 11207  013ECE  0E08               	movlw	8
 11208  013ED0  26F3               	addwf	prodl,f,c
 11209  013ED2  0E00               	movlw	0
 11210  013ED4  22F4               	addwfc	prodh,f,c
 11211  013ED6  0E2E               	movlw	low _port
 11212  013ED8  24F3               	addwf	prodl,w,c
 11213  013EDA  6ED9               	movwf	fsr2l,c
 11214  013EDC  0E01               	movlw	high _port
 11215  013EDE  20F4               	addwfc	prodh,w,c
 11216  013EE0  6EDA               	movwf	fsr2h,c
 11217  013EE2  0100               	movlb	0	; () banked
 11218  013EE4  516D               	movf	??_integrate_current& (0+255),w,b
 11219  013EE6  26DE               	addwf	postinc2,f,c
 11220  013EE8  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11221  013EEA  22DE               	addwfc	postinc2,f,c
 11222  013EEC  0E00               	movlw	0
 11223  013EEE  22DE               	addwfc	postinc2,f,c
 11224  013EF0  22DE               	addwfc	postinc2,f,c
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11228  013EF2  0100               	movlb	0	; () banked
 11229  013EF4  516F               	movf	integrate_current@i& (0+255),w,b
 11230  013EF6  0D17               	mullw	23
 11231  013EF8  0E08               	movlw	8
 11232  013EFA  26F3               	addwf	prodl,f,c
 11233  013EFC  0E00               	movlw	0
 11234  013EFE  22F4               	addwfc	prodh,f,c
 11235  013F00  0E2E               	movlw	low _port
 11236  013F02  24F3               	addwf	prodl,w,c
 11237  013F04  6ED9               	movwf	fsr2l,c
 11238  013F06  0E01               	movlw	high _port
 11239  013F08  20F4               	addwfc	prodh,w,c
 11240  013F0A  6EDA               	movwf	fsr2h,c
 11241  013F0C  CFDE F060          	movff	postinc2,___lldiv@dividend
 11242  013F10  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11243  013F14  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11244  013F18  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11245  013F1C  0E10               	movlw	16
 11246  013F1E  0100               	movlb	0	; () banked
 11247  013F20  6F64               	movwf	___lldiv@divisor& (0+255),b
 11248  013F22  0E0E               	movlw	14
 11249  013F24  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11250  013F26  0E00               	movlw	0
 11251  013F28  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11252  013F2A  0E00               	movlw	0
 11253  013F2C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11254  013F2E  EC46  F0AA         	call	___lldiv	;wreg free
 11255  013F32  0100               	movlb	0	; () banked
 11256  013F34  516F               	movf	integrate_current@i& (0+255),w,b
 11257  013F36  0D17               	mullw	23
 11258  013F38  0E0C               	movlw	12
 11259  013F3A  26F3               	addwf	prodl,f,c
 11260  013F3C  0E00               	movlw	0
 11261  013F3E  22F4               	addwfc	prodh,f,c
 11262  013F40  0E2E               	movlw	low _port
 11263  013F42  24F3               	addwf	prodl,w,c
 11264  013F44  6ED9               	movwf	fsr2l,c
 11265  013F46  0E01               	movlw	high _port
 11266  013F48  20F4               	addwfc	prodh,w,c
 11267  013F4A  6EDA               	movwf	fsr2h,c
 11268  013F4C  0100               	movlb	0	; () banked
 11269  013F4E  C060  FFDE         	movff	?___lldiv,postinc2
 11270  013F52  0100               	movlb	0	; () banked
 11271  013F54  C061  FFDE         	movff	?___lldiv+1,postinc2
 11272  013F58  0100               	movlb	0	; () banked
 11273  013F5A  C062  FFDE         	movff	?___lldiv+2,postinc2
 11274  013F5E  0100               	movlb	0	; () banked
 11275  013F60  C063  FFDE         	movff	?___lldiv+3,postinc2
 11276  013F64                     l12368:
 11277                           
 11278                           ; BSR set to: 0
 11279  013F64  0100               	movlb	0	; () banked
 11280  013F66  2B6F               	incf	integrate_current@i& (0+255),f,b
 11281  013F68  D785               	goto	l12358
 11282  013F6A                     __end_of_integrate_current:
 11283                           	opt stack 0
 11284                           tblptru	equ	0xFF8
 11285                           tblptrh	equ	0xFF7
 11286                           tblptrl	equ	0xFF6
 11287                           tablat	equ	0xFF5
 11288                           prodh	equ	0xFF4
 11289                           prodl	equ	0xFF3
 11290                           intcon	equ	0xFF2
 11291                           postinc0	equ	0xFEE
 11292                           wreg	equ	0xFE8
 11293                           indf1	equ	0xFE7
 11294                           postinc1	equ	0xFE6
 11295                           postdec1	equ	0xFE5
 11296                           fsr1h	equ	0xFE2
 11297                           fsr1l	equ	0xFE1
 11298                           indf2	equ	0xFDF
 11299                           postinc2	equ	0xFDE
 11300                           postdec2	equ	0xFDD
 11301                           plusw2	equ	0xFDB
 11302                           fsr2h	equ	0xFDA
 11303                           fsr2l	equ	0xFD9
 11304                           status	equ	0xFD8
 11305                           
 11306 ;; *************** function _display_LCD *****************
 11307 ;; Defined at:
 11308 ;;		line 33 in file "LCD_print.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;		None
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;  str            20   40[BANK1 ] unsigned char [20]
 11313 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11314 ;; Return value:  Size  Location     Type
 11315 ;;		None               void
 11316 ;; Registers used:
 11317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11324 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11325 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11326 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11327 ;;Total ram usage:       85 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:   17
 11330 ;; This function calls:
 11331 ;;		_I2C_LCD_Clear
 11332 ;;		_I2C_LCD_Puts
 11333 ;;		_I2C_LCD_SetCursor
 11334 ;;		___lldiv
 11335 ;;		___llmod
 11336 ;;		___lwdiv
 11337 ;;		___lwmod
 11338 ;;		_display_time_1602
 11339 ;;		_sprintf
 11340 ;; This function is called by:
 11341 ;;		_normal_task
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           	psect	text31
 11346  01051C                     __ptext31:
 11347                           	opt stack 0
 11348  01051C                     _display_LCD:
 11349                           	opt stack 12
 11350                           
 11351                           ;LCD_print.c: 34: I2C_LCD_Clear();
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;incstack = 0
 11355  01051C  EC58  F0B6         	call	_I2C_LCD_Clear	;wreg free
 11356                           
 11357                           ;LCD_print.c: 35: switch (print_item) {
 11358  010520  D251               	goto	l12568
 11359  010522                     l12520:
 11360                           
 11361                           ;LCD_print.c: 37: case SETTINGS:
 11362                           ;LCD_print.c: 38: I2C_LCD_SetCursor(0, 0);
 11363  010522  0E00               	movlw	0
 11364  010524  0100               	movlb	0	; () banked
 11365  010526  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11366  010528  0E00               	movlw	0
 11367  01052A  ECEE  F0B4         	call	_I2C_LCD_SetCursor
 11368                           
 11369                           ;LCD_print.c: 39: I2C_LCD_Puts(display_char[0]);
 11370  01052E  0E1A               	movlw	low _display_char
 11371  010530  0100               	movlb	0	; () banked
 11372  010532  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11373  010534  0E02               	movlw	high _display_char
 11374  010536  0100               	movlb	0	; () banked
 11375  010538  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11376  01053A  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11377                           
 11378                           ;LCD_print.c: 40: I2C_LCD_SetCursor(0, 1);
 11379  01053E  0E01               	movlw	1
 11380  010540  0100               	movlb	0	; () banked
 11381  010542  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11382  010544  0E00               	movlw	0
 11383  010546  ECEE  F0B4         	call	_I2C_LCD_SetCursor
 11384                           
 11385                           ;LCD_print.c: 41: I2C_LCD_Puts(display_char[1]);
 11386  01054A  0E2E               	movlw	low (_display_char+20)
 11387  01054C  0100               	movlb	0	; () banked
 11388  01054E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11389  010550  0E02               	movlw	high (_display_char+20)
 11390  010552  0100               	movlb	0	; () banked
 11391  010554  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11392  010556  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11393                           
 11394                           ;LCD_print.c: 42: break;
 11395  01055A  0012               	return	
 11396  01055C                     l12526:
 11397                           
 11398                           ;LCD_print.c: 44: {
 11399                           ;LCD_print.c: 45: char str[2][20];
 11400                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11401  01055C  0E73               	movlw	low _now
 11402  01055E  0100               	movlb	0	; () banked
 11403  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11404  010562  0E01               	movlw	high _now
 11405  010564  0100               	movlb	0	; () banked
 11406  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11407  010568  0E92               	movlw	low display_LCD@str
 11408  01056A  0100               	movlb	0	; () banked
 11409  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11410  01056E  0E01               	movlw	high display_LCD@str
 11411  010570  0100               	movlb	0	; () banked
 11412  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11413  010574  0EA6               	movlw	low (display_LCD@str+20)
 11414  010576  0100               	movlb	0	; () banked
 11415  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11416  01057A  0E01               	movlw	high (display_LCD@str+20)
 11417  01057C  0100               	movlb	0	; () banked
 11418  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11419  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 11420                           
 11421                           ;LCD_print.c: 47: I2C_LCD_SetCursor(0, 0);
 11422  010584  0E00               	movlw	0
 11423  010586  0100               	movlb	0	; () banked
 11424  010588  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11425  01058A  0E00               	movlw	0
 11426  01058C  ECEE  F0B4         	call	_I2C_LCD_SetCursor
 11427                           
 11428                           ;LCD_print.c: 48: I2C_LCD_Puts(str[0]);
 11429  010590  0E92               	movlw	low display_LCD@str
 11430  010592  0100               	movlb	0	; () banked
 11431  010594  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11432  010596  0E01               	movlw	high display_LCD@str
 11433  010598  0100               	movlb	0	; () banked
 11434  01059A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11435  01059C  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11436                           
 11437                           ;LCD_print.c: 49: I2C_LCD_SetCursor(0, 1);
 11438  0105A0  0E01               	movlw	1
 11439  0105A2  0100               	movlb	0	; () banked
 11440  0105A4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11441  0105A6  0E00               	movlw	0
 11442  0105A8  ECEE  F0B4         	call	_I2C_LCD_SetCursor
 11443                           
 11444                           ;LCD_print.c: 50: I2C_LCD_Puts(str[1]);
 11445  0105AC  0EA6               	movlw	low (display_LCD@str+20)
 11446  0105AE  0100               	movlb	0	; () banked
 11447  0105B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11448  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11449  0105B4  0100               	movlb	0	; () banked
 11450  0105B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11451  0105B8  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11452                           
 11453                           ;LCD_print.c: 51: }
 11454                           ;LCD_print.c: 52: break;
 11455  0105BC  0012               	return	
 11456  0105BE                     l12536:
 11457                           
 11458                           ;LCD_print.c: 54: {
 11459                           ;LCD_print.c: 55: char str[20];
 11460                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11461                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11462                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11463                           ;LCD_print.c: 59: };
 11464                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11465                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11466                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11467  0105BE  0EBA               	movlw	low display_LCD@str_5594
 11468  0105C0  0100               	movlb	0	; () banked
 11469  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11470  0105C4  0E01               	movlw	high display_LCD@str_5594
 11471  0105C6  0100               	movlb	0	; () banked
 11472  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11473  0105CA  0EB7               	movlw	low STR_70
 11474  0105CC  0100               	movlb	0	; () banked
 11475  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11476  0105D0  0EFF               	movlw	high STR_70
 11477  0105D2  0100               	movlb	0	; () banked
 11478  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11479  0105D6  0100               	movlb	0	; () banked
 11480  0105D8  51FB               	movf	_print_port& (0+255),w,b
 11481  0105DA  0D17               	mullw	23
 11482  0105DC  0E16               	movlw	22
 11483  0105DE  26F3               	addwf	prodl,f,c
 11484  0105E0  0E00               	movlw	0
 11485  0105E2  22F4               	addwfc	prodh,f,c
 11486  0105E4  0E2E               	movlw	low _port
 11487  0105E6  24F3               	addwf	prodl,w,c
 11488  0105E8  6ED9               	movwf	fsr2l,c
 11489  0105EA  0E01               	movlw	high _port
 11490  0105EC  20F4               	addwfc	prodh,w,c
 11491  0105EE  6EDA               	movwf	fsr2h,c
 11492  0105F0  0101               	movlb	1	; () banked
 11493  0105F2  A0DF               	btfss	indf2,0,c
 11494  0105F4  D004               	goto	u14340
 11495  0105F6  0100               	movlb	0	; () banked
 11496  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11497  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11498  0105FC  D002               	goto	u14348
 11499  0105FE                     u14340:
 11500  0105FE  0100               	movlb	0	; () banked
 11501  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11502  010602                     u14348:
 11503  010602  0100               	movlb	0	; () banked
 11504  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11505  010606  0D3C               	mullw	60
 11506  010608  0E81               	movlw	low display_LCD@port_char
 11507  01060A  0100               	movlb	0	; () banked
 11508  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11509  01060E  0EFA               	movlw	high display_LCD@port_char
 11510  010610  0100               	movlb	0	; () banked
 11511  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11512  010614  50F3               	movf	prodl,w,c
 11513  010616  0100               	movlb	0	; () banked
 11514  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11515  01061A  50F4               	movf	prodh,w,c
 11516  01061C  0100               	movlb	0	; () banked
 11517  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11518  010620  0100               	movlb	0	; () banked
 11519  010622  51FB               	movf	_print_port& (0+255),w,b
 11520  010624  0D14               	mullw	20
 11521  010626  50F3               	movf	prodl,w,c
 11522  010628  0100               	movlb	0	; () banked
 11523  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11524  01062C  0100               	movlb	0	; () banked
 11525  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11526  010630  50F4               	movf	prodh,w,c
 11527  010632  0100               	movlb	0	; () banked
 11528  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11529  010636  0100               	movlb	0	; () banked
 11530  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11531  01063A  0100               	movlb	0	; () banked
 11532  01063C  51FB               	movf	_print_port& (0+255),w,b
 11533  01063E  0D17               	mullw	23
 11534  010640  0E06               	movlw	6
 11535  010642  26F3               	addwf	prodl,f,c
 11536  010644  0E00               	movlw	0
 11537  010646  22F4               	addwfc	prodh,f,c
 11538  010648  0E2E               	movlw	low _port
 11539  01064A  24F3               	addwf	prodl,w,c
 11540  01064C  6ED9               	movwf	fsr2l,c
 11541  01064E  0E01               	movlw	high _port
 11542  010650  20F4               	addwfc	prodh,w,c
 11543  010652  6EDA               	movwf	fsr2h,c
 11544  010654  0E01               	movlw	1
 11545  010656  50DB               	movf	plusw2,w,c
 11546  010658  E104               	bnz	u14351
 11547  01065A  0E65               	movlw	101
 11548  01065C  5CDE               	subwf	postinc2,w,c
 11549  01065E  A0D8               	btfss	status,0,c
 11550  010660  D002               	goto	u14350
 11551  010662                     u14351:
 11552  010662  0E01               	movlw	1
 11553  010664  D001               	goto	u14360
 11554  010666                     u14350:
 11555  010666  0E00               	movlw	0
 11556  010668                     u14360:
 11557  010668  0D05               	mullw	5
 11558  01066A  0ED2               	movlw	low display_LCD@onoff
 11559  01066C  24F3               	addwf	prodl,w,c
 11560  01066E  0100               	movlb	0	; () banked
 11561  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11562  010672  0EFB               	movlw	high display_LCD@onoff
 11563  010674  20F4               	addwfc	prodh,w,c
 11564  010676  0100               	movlb	0	; () banked
 11565  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11566  01067A  EC00  F080         	call	_sprintf	;wreg free
 11567                           
 11568                           ;LCD_print.c: 63: I2C_LCD_SetCursor(0, 0);
 11569  01067E  0E00               	movlw	0
 11570  010680  0100               	movlb	0	; () banked
 11571  010682  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11572  010684  0E00               	movlw	0
 11573  010686  ECEE  F0B4         	call	_I2C_LCD_SetCursor
 11574                           
 11575                           ;LCD_print.c: 64: I2C_LCD_Puts(str);
 11576  01068A  0EBA               	movlw	low display_LCD@str_5594
 11577  01068C  0100               	movlb	0	; () banked
 11578  01068E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11579  010690  0E01               	movlw	high display_LCD@str_5594
 11580  010692  0100               	movlb	0	; () banked
 11581  010694  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11582  010696  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11583                           
 11584                           ;LCD_print.c: 65: switch (data_item) {
 11585  01069A  D17B               	goto	l12560
 11586  01069C                     l12542:
 11587                           
 11588                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11589  01069C  0EBA               	movlw	low display_LCD@str_5594
 11590  01069E  0100               	movlb	0	; () banked
 11591  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11592  0106A2  0E01               	movlw	high display_LCD@str_5594
 11593  0106A4  0100               	movlb	0	; () banked
 11594  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11595  0106A8  0E3D               	movlw	low STR_71
 11596  0106AA  0100               	movlb	0	; () banked
 11597  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11598  0106AE  0EFF               	movlw	high STR_71
 11599  0106B0  0100               	movlb	0	; () banked
 11600  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11601  0106B4  0100               	movlb	0	; () banked
 11602  0106B6  51FB               	movf	_print_port& (0+255),w,b
 11603  0106B8  0D17               	mullw	23
 11604  0106BA  0E06               	movlw	6
 11605  0106BC  26F3               	addwf	prodl,f,c
 11606  0106BE  0E00               	movlw	0
 11607  0106C0  22F4               	addwfc	prodh,f,c
 11608  0106C2  0E2E               	movlw	low _port
 11609  0106C4  24F3               	addwf	prodl,w,c
 11610  0106C6  6ED9               	movwf	fsr2l,c
 11611  0106C8  0E01               	movlw	high _port
 11612  0106CA  20F4               	addwfc	prodh,w,c
 11613  0106CC  6EDA               	movwf	fsr2h,c
 11614  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11615  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11616  0106D6  0E03               	movlw	3
 11617  0106D8  0100               	movlb	0	; () banked
 11618  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11619  0106DC  0EE8               	movlw	232
 11620  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11621  0106E0  EC26  F0AF         	call	___lwdiv	;wreg free
 11622  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11623  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11624  0106EC  0100               	movlb	0	; () banked
 11625  0106EE  51FB               	movf	_print_port& (0+255),w,b
 11626  0106F0  0D17               	mullw	23
 11627  0106F2  0E06               	movlw	6
 11628  0106F4  26F3               	addwf	prodl,f,c
 11629  0106F6  0E00               	movlw	0
 11630  0106F8  22F4               	addwfc	prodh,f,c
 11631  0106FA  0E2E               	movlw	low _port
 11632  0106FC  24F3               	addwf	prodl,w,c
 11633  0106FE  6ED9               	movwf	fsr2l,c
 11634  010700  0E01               	movlw	high _port
 11635  010702  20F4               	addwfc	prodh,w,c
 11636  010704  6EDA               	movwf	fsr2h,c
 11637  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11638  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11639  01070E  0E03               	movlw	3
 11640  010710  0100               	movlb	0	; () banked
 11641  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11642  010714  0EE8               	movlw	232
 11643  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11644  010718  EC7B  F0B1         	call	___lwmod	;wreg free
 11645  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11646  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11647  010724  EC00  F080         	call	_sprintf	;wreg free
 11648                           
 11649                           ;LCD_print.c: 68: break;
 11650  010728  D13E               	goto	l12562
 11651  01072A                     l12544:
 11652                           
 11653                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11654  01072A  0EBA               	movlw	low display_LCD@str_5594
 11655  01072C  0100               	movlb	0	; () banked
 11656  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11657  010730  0E01               	movlw	high display_LCD@str_5594
 11658  010732  0100               	movlb	0	; () banked
 11659  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11660  010736  0E44               	movlw	low (STR_68+15)
 11661  010738  0100               	movlb	0	; () banked
 11662  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11663  01073C  0EFE               	movlw	high (STR_68+15)
 11664  01073E  0100               	movlb	0	; () banked
 11665  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11666  010742  0100               	movlb	0	; () banked
 11667  010744  51FB               	movf	_print_port& (0+255),w,b
 11668  010746  0D17               	mullw	23
 11669  010748  0E0C               	movlw	12
 11670  01074A  26F3               	addwf	prodl,f,c
 11671  01074C  0E00               	movlw	0
 11672  01074E  22F4               	addwfc	prodh,f,c
 11673  010750  0E2E               	movlw	low _port
 11674  010752  24F3               	addwf	prodl,w,c
 11675  010754  6ED9               	movwf	fsr2l,c
 11676  010756  0E01               	movlw	high _port
 11677  010758  20F4               	addwfc	prodh,w,c
 11678  01075A  6EDA               	movwf	fsr2h,c
 11679  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11680  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11681  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11682  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11683  01076C  EC00  F080         	call	_sprintf	;wreg free
 11684                           
 11685                           ;LCD_print.c: 71: break;
 11686  010770  D11A               	goto	l12562
 11687  010772                     l12546:
 11688                           
 11689                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11690                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11691                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11692                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11693                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11694  010772  0E10               	movlw	16
 11695  010774  0100               	movlb	0	; () banked
 11696  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11697  010778  0E0E               	movlw	14
 11698  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11699  01077C  0E00               	movlw	0
 11700  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11701  010780  0E00               	movlw	0
 11702  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11703  010784  0100               	movlb	0	; () banked
 11704  010786  51FB               	movf	_print_port& (0+255),w,b
 11705  010788  0D17               	mullw	23
 11706  01078A  0E10               	movlw	16
 11707  01078C  26F3               	addwf	prodl,f,c
 11708  01078E  0E00               	movlw	0
 11709  010790  22F4               	addwfc	prodh,f,c
 11710  010792  0E2E               	movlw	low _port
 11711  010794  24F3               	addwf	prodl,w,c
 11712  010796  6ED9               	movwf	fsr2l,c
 11713  010798  0E01               	movlw	high _port
 11714  01079A  20F4               	addwfc	prodh,w,c
 11715  01079C  6EDA               	movwf	fsr2h,c
 11716  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11717  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11718  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11719  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11720  0107AE  EC46  F0AA         	call	___lldiv	;wreg free
 11721  0107B2  C060  F1CE         	movff	?___lldiv,_display_LCD$7035
 11722  0107B6  C061  F1CF         	movff	?___lldiv+1,_display_LCD$7035+1
 11723  0107BA  C062  F1D0         	movff	?___lldiv+2,_display_LCD$7035+2
 11724  0107BE  C063  F1D1         	movff	?___lldiv+3,_display_LCD$7035+3
 11725                           
 11726                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11727                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11728                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11729                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11730                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11731  0107C2  C1CE  F060         	movff	_display_LCD$7035,___lldiv@dividend
 11732  0107C6  C1CF  F061         	movff	_display_LCD$7035+1,___lldiv@dividend+1
 11733  0107CA  C1D0  F062         	movff	_display_LCD$7035+2,___lldiv@dividend+2
 11734  0107CE  C1D1  F063         	movff	_display_LCD$7035+3,___lldiv@dividend+3
 11735  0107D2  0E18               	movlw	24
 11736  0107D4  0100               	movlb	0	; () banked
 11737  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11738  0107D8  0E00               	movlw	0
 11739  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11740  0107DC  0E00               	movlw	0
 11741  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11742  0107E0  0E00               	movlw	0
 11743  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11744  0107E4  EC46  F0AA         	call	___lldiv	;wreg free
 11745  0107E8  C060  F1D2         	movff	?___lldiv,_display_LCD$7036
 11746  0107EC  C061  F1D3         	movff	?___lldiv+1,_display_LCD$7036+1
 11747  0107F0  C062  F1D4         	movff	?___lldiv+2,_display_LCD$7036+2
 11748  0107F4  C063  F1D5         	movff	?___lldiv+3,_display_LCD$7036+3
 11749                           
 11750                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11751                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11752                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11753                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11754                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11755  0107F8  0E10               	movlw	16
 11756  0107FA  0100               	movlb	0	; () banked
 11757  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11758  0107FE  0E0E               	movlw	14
 11759  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11760  010802  0E00               	movlw	0
 11761  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11762  010806  0E00               	movlw	0
 11763  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11764  01080A  0100               	movlb	0	; () banked
 11765  01080C  51FB               	movf	_print_port& (0+255),w,b
 11766  01080E  0D17               	mullw	23
 11767  010810  0E10               	movlw	16
 11768  010812  26F3               	addwf	prodl,f,c
 11769  010814  0E00               	movlw	0
 11770  010816  22F4               	addwfc	prodh,f,c
 11771  010818  0E2E               	movlw	low _port
 11772  01081A  24F3               	addwf	prodl,w,c
 11773  01081C  6ED9               	movwf	fsr2l,c
 11774  01081E  0E01               	movlw	high _port
 11775  010820  20F4               	addwfc	prodh,w,c
 11776  010822  6EDA               	movwf	fsr2h,c
 11777  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11778  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11779  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11780  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11781  010834  EC46  F0AA         	call	___lldiv	;wreg free
 11782  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11783  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11784  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11785  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11786  010848  0E18               	movlw	24
 11787  01084A  0100               	movlb	0	; () banked
 11788  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11789  01084E  0E00               	movlw	0
 11790  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11791  010852  0E00               	movlw	0
 11792  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11793  010856  0E00               	movlw	0
 11794  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11795  01085A  ECA9  F0AC         	call	___llmod	;wreg free
 11796  01085E  C06D  F1D6         	movff	?___llmod,_display_LCD$7037
 11797  010862  C06E  F1D7         	movff	?___llmod+1,_display_LCD$7037+1
 11798  010866  C06F  F1D8         	movff	?___llmod+2,_display_LCD$7037+2
 11799  01086A  C070  F1D9         	movff	?___llmod+3,_display_LCD$7037+3
 11800                           
 11801                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11802                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11803                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11804                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11805                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11806  01086E  0E3C               	movlw	60
 11807  010870  0100               	movlb	0	; () banked
 11808  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11809  010874  0E00               	movlw	0
 11810  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11811  010878  0E00               	movlw	0
 11812  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11813  01087C  0E00               	movlw	0
 11814  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11815  010880  0100               	movlb	0	; () banked
 11816  010882  51FB               	movf	_print_port& (0+255),w,b
 11817  010884  0D17               	mullw	23
 11818  010886  0E10               	movlw	16
 11819  010888  26F3               	addwf	prodl,f,c
 11820  01088A  0E00               	movlw	0
 11821  01088C  22F4               	addwfc	prodh,f,c
 11822  01088E  0E2E               	movlw	low _port
 11823  010890  24F3               	addwf	prodl,w,c
 11824  010892  6ED9               	movwf	fsr2l,c
 11825  010894  0E01               	movlw	high _port
 11826  010896  20F4               	addwfc	prodh,w,c
 11827  010898  6EDA               	movwf	fsr2h,c
 11828  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11829  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11830  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11831  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11832  0108AA  EC46  F0AA         	call	___lldiv	;wreg free
 11833  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11834  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11835  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11836  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11837  0108BE  0E3C               	movlw	60
 11838  0108C0  0100               	movlb	0	; () banked
 11839  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11840  0108C4  0E00               	movlw	0
 11841  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11842  0108C8  0E00               	movlw	0
 11843  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11844  0108CC  0E00               	movlw	0
 11845  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11846  0108D0  ECA9  F0AC         	call	___llmod	;wreg free
 11847  0108D4  C06D  F1DA         	movff	?___llmod,_display_LCD$7038
 11848  0108D8  C06E  F1DB         	movff	?___llmod+1,_display_LCD$7038+1
 11849  0108DC  C06F  F1DC         	movff	?___llmod+2,_display_LCD$7038+2
 11850  0108E0  C070  F1DD         	movff	?___llmod+3,_display_LCD$7038+3
 11851                           
 11852                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11853                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11854                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11855                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11856                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11857  0108E4  0100               	movlb	0	; () banked
 11858  0108E6  51FB               	movf	_print_port& (0+255),w,b
 11859  0108E8  0D17               	mullw	23
 11860  0108EA  0E10               	movlw	16
 11861  0108EC  26F3               	addwf	prodl,f,c
 11862  0108EE  0E00               	movlw	0
 11863  0108F0  22F4               	addwfc	prodh,f,c
 11864  0108F2  0E2E               	movlw	low _port
 11865  0108F4  24F3               	addwf	prodl,w,c
 11866  0108F6  6ED9               	movwf	fsr2l,c
 11867  0108F8  0E01               	movlw	high _port
 11868  0108FA  20F4               	addwfc	prodh,w,c
 11869  0108FC  6EDA               	movwf	fsr2h,c
 11870  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11871  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11872  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11873  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11874  01090E  0E3C               	movlw	60
 11875  010910  0100               	movlb	0	; () banked
 11876  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11877  010914  0E00               	movlw	0
 11878  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11879  010918  0E00               	movlw	0
 11880  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11881  01091C  0E00               	movlw	0
 11882  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11883  010920  ECA9  F0AC         	call	___llmod	;wreg free
 11884  010924  C06D  F1DE         	movff	?___llmod,_display_LCD$7039
 11885  010928  C06E  F1DF         	movff	?___llmod+1,_display_LCD$7039+1
 11886  01092C  C06F  F1E0         	movff	?___llmod+2,_display_LCD$7039+2
 11887  010930  C070  F1E1         	movff	?___llmod+3,_display_LCD$7039+3
 11888                           
 11889                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11890                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11891                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11892                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11893                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11894  010934  0EBA               	movlw	low display_LCD@str_5594
 11895  010936  0100               	movlb	0	; () banked
 11896  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11897  01093A  0E01               	movlw	high display_LCD@str_5594
 11898  01093C  0100               	movlb	0	; () banked
 11899  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11900  010940  0E01               	movlw	low STR_73
 11901  010942  0100               	movlb	0	; () banked
 11902  010944  6F85               	movwf	sprintf@f& (0+255),b
 11903  010946  0EFE               	movlw	high STR_73
 11904  010948  0100               	movlb	0	; () banked
 11905  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11906  01094C  C1D2  F087         	movff	_display_LCD$7036,?_sprintf+4
 11907  010950  C1D3  F088         	movff	_display_LCD$7036+1,?_sprintf+5
 11908  010954  C1D4  F089         	movff	_display_LCD$7036+2,?_sprintf+6
 11909  010958  C1D5  F08A         	movff	_display_LCD$7036+3,?_sprintf+7
 11910  01095C  C1D6  F08B         	movff	_display_LCD$7037,?_sprintf+8
 11911  010960  C1D7  F08C         	movff	_display_LCD$7037+1,?_sprintf+9
 11912  010964  C1D8  F08D         	movff	_display_LCD$7037+2,?_sprintf+10
 11913  010968  C1D9  F08E         	movff	_display_LCD$7037+3,?_sprintf+11
 11914  01096C  C1DA  F08F         	movff	_display_LCD$7038,?_sprintf+12
 11915  010970  C1DB  F090         	movff	_display_LCD$7038+1,?_sprintf+13
 11916  010974  C1DC  F091         	movff	_display_LCD$7038+2,?_sprintf+14
 11917  010978  C1DD  F092         	movff	_display_LCD$7038+3,?_sprintf+15
 11918  01097C  C1DE  F093         	movff	_display_LCD$7039,?_sprintf+16
 11919  010980  C1DF  F094         	movff	_display_LCD$7039+1,?_sprintf+17
 11920  010984  C1E0  F095         	movff	_display_LCD$7039+2,?_sprintf+18
 11921  010988  C1E1  F096         	movff	_display_LCD$7039+3,?_sprintf+19
 11922  01098C  EC00  F080         	call	_sprintf	;wreg free
 11923                           
 11924                           ;LCD_print.c: 79: }
 11925                           
 11926                           ;LCD_print.c: 78: break;
 11927  010990  D00A               	goto	l12562
 11928  010992                     l12560:
 11929  010992  501D               	movf	_data_item,w,c
 11930                           
 11931                           ; Switch size 1, requested type "space"
 11932                           ; Number of cases is 3, Range of values is 0 to 2
 11933                           ; switch strategies available:
 11934                           ; Name         Instructions Cycles
 11935                           ; simple_byte           10     6 (average)
 11936                           ;	Chosen strategy is simple_byte
 11937  010994  0A00               	xorlw	0	; case 0
 11938  010996  B4D8               	btfsc	status,2,c
 11939  010998  D681               	goto	l12542
 11940  01099A  0A01               	xorlw	1	; case 1
 11941  01099C  B4D8               	btfsc	status,2,c
 11942  01099E  D6C5               	goto	l12544
 11943  0109A0  0A03               	xorlw	3	; case 2
 11944  0109A2  B4D8               	btfsc	status,2,c
 11945  0109A4  D6E6               	goto	l12546
 11946  0109A6                     l12562:
 11947                           
 11948                           ;LCD_print.c: 80: I2C_LCD_SetCursor(0, 1);
 11949  0109A6  0E01               	movlw	1
 11950  0109A8  0100               	movlb	0	; () banked
 11951  0109AA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11952  0109AC  0E00               	movlw	0
 11953  0109AE  ECEE  F0B4         	call	_I2C_LCD_SetCursor
 11954                           
 11955                           ;LCD_print.c: 81: I2C_LCD_Puts(str);
 11956  0109B2  0EBA               	movlw	low display_LCD@str_5594
 11957  0109B4  0100               	movlb	0	; () banked
 11958  0109B6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11959  0109B8  0E01               	movlw	high display_LCD@str_5594
 11960  0109BA  0100               	movlb	0	; () banked
 11961  0109BC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11962  0109BE  ECCF  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11963                           
 11964                           ;LCD_print.c: 84: }
 11965                           
 11966                           ;LCD_print.c: 82: }
 11967                           ;LCD_print.c: 83: break;
 11968  0109C2  0012               	return	
 11969  0109C4                     l12568:
 11970  0109C4  501F               	movf	_print_item,w,c
 11971                           
 11972                           ; Switch size 1, requested type "space"
 11973                           ; Number of cases is 4, Range of values is 0 to 3
 11974                           ; switch strategies available:
 11975                           ; Name         Instructions Cycles
 11976                           ; simple_byte           13     7 (average)
 11977                           ;	Chosen strategy is simple_byte
 11978  0109C6  0A00               	xorlw	0	; case 0
 11979  0109C8  B4D8               	btfsc	status,2,c
 11980  0109CA  D5AB               	goto	l12520
 11981  0109CC  0A01               	xorlw	1	; case 1
 11982  0109CE  B4D8               	btfsc	status,2,c
 11983  0109D0  D5C5               	goto	l12526
 11984  0109D2  0A03               	xorlw	3	; case 2
 11985  0109D4  B4D8               	btfsc	status,2,c
 11986  0109D6  D5F3               	goto	l12536
 11987  0109D8  0A01               	xorlw	1	; case 3
 11988  0109DA  A4D8               	btfss	status,2,c
 11989  0109DC  0012               	return	
 11990  0109DE  D5A1               	goto	l12520
 11991  0109E0                     __end_of_display_LCD:
 11992                           	opt stack 0
 11993                           tblptru	equ	0xFF8
 11994                           tblptrh	equ	0xFF7
 11995                           tblptrl	equ	0xFF6
 11996                           tablat	equ	0xFF5
 11997                           prodh	equ	0xFF4
 11998                           prodl	equ	0xFF3
 11999                           intcon	equ	0xFF2
 12000                           postinc0	equ	0xFEE
 12001                           wreg	equ	0xFE8
 12002                           indf1	equ	0xFE7
 12003                           postinc1	equ	0xFE6
 12004                           postdec1	equ	0xFE5
 12005                           fsr1h	equ	0xFE2
 12006                           fsr1l	equ	0xFE1
 12007                           indf2	equ	0xFDF
 12008                           postinc2	equ	0xFDE
 12009                           postdec2	equ	0xFDD
 12010                           plusw2	equ	0xFDB
 12011                           fsr2h	equ	0xFDA
 12012                           fsr2l	equ	0xFD9
 12013                           status	equ	0xFD8
 12014                           
 12015 ;; *************** function _display_time_1602 *****************
 12016 ;; Defined at:
 12017 ;;		line 243 in file "../My_library/My_RTCC.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  tm              2   83[BANK0 ] PTR struct .
 12020 ;;		 -> now(14), 
 12021 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 12022 ;;		 -> display_LCD@str(40), 
 12023 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 12024 ;;		 -> display_LCD@str(40), 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;		None
 12027 ;; Return value:  Size  Location     Type
 12028 ;;		None               void
 12029 ;; Registers used:
 12030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12036 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;Total ram usage:        7 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:   16
 12043 ;; This function calls:
 12044 ;;		_RTCC_from_RTCC
 12045 ;;		_display_dec
 12046 ;;		_strcat
 12047 ;;		_strcpy
 12048 ;; This function is called by:
 12049 ;;		_display_LCD
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text32
 12054  0113BE                     __ptext32:
 12055                           	opt stack 0
 12056  0113BE                     _display_time_1602:
 12057                           	opt stack 12
 12058                           
 12059                           ;My_RTCC.c: 244: RTCC_from_RTCC(&now);
 12060                           
 12061                           ;incstack = 0
 12062  0113BE  0E73               	movlw	low _now
 12063  0113C0  0100               	movlb	0	; () banked
 12064  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12065  0113C4  0E01               	movlw	high _now
 12066  0113C6  0100               	movlb	0	; () banked
 12067  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12068  0113CA  EC65  F0B6         	call	_RTCC_from_RTCC	;wreg free
 12069                           
 12070                           ;My_RTCC.c: 246: strcpy(line0, "");
 12071  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 12072  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 12073  0113D6  0EE6               	movlw	low (STR_19+3)
 12074  0113D8  0100               	movlb	0	; () banked
 12075  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 12076  0113DC  0EFF               	movlw	high (STR_19+3)
 12077  0113DE  0100               	movlb	0	; () banked
 12078  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12079  0113E2  EC1D  F0B4         	call	_strcpy	;wreg free
 12080                           
 12081                           ;My_RTCC.c: 247: display_dec(line0, 20, tm->edit.flag.YY);
 12082  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12083  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12084  0113EE  0E14               	movlw	20
 12085  0113F0  0100               	movlb	0	; () banked
 12086  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 12087  0113F4  0100               	movlb	0	; () banked
 12088  0113F6  EE20 F00D          	lfsr	2,13
 12089  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12090  0113FC  26D9               	addwf	fsr2l,f,c
 12091  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12092  011400  22DA               	addwfc	fsr2h,f,c
 12093  011402  0E00               	movlw	0
 12094  011404  BADF               	btfsc	indf2,5,c
 12095  011406  0E01               	movlw	1
 12096  011408  0100               	movlb	0	; () banked
 12097  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 12098  01140C  EC7C  F0B0         	call	_display_dec	;wreg free
 12099                           
 12100                           ;My_RTCC.c: 248: display_dec(line0, tm->YY, tm->edit.flag.YY);
 12101  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12102  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12103  011418  0100               	movlb	0	; () banked
 12104  01141A  EE20 F00A          	lfsr	2,10
 12105  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12106  011420  26D9               	addwf	fsr2l,f,c
 12107  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12108  011424  22DA               	addwfc	fsr2h,f,c
 12109  011426  50DF               	movf	indf2,w,c
 12110  011428  0100               	movlb	0	; () banked
 12111  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 12112  01142C  0100               	movlb	0	; () banked
 12113  01142E  EE20 F00D          	lfsr	2,13
 12114  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12115  011434  26D9               	addwf	fsr2l,f,c
 12116  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12117  011438  22DA               	addwfc	fsr2h,f,c
 12118  01143A  0E00               	movlw	0
 12119  01143C  BADF               	btfsc	indf2,5,c
 12120  01143E  0E01               	movlw	1
 12121  011440  0100               	movlb	0	; () banked
 12122  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 12123  011444  EC7C  F0B0         	call	_display_dec	;wreg free
 12124                           
 12125                           ;My_RTCC.c: 249: strcat(line0, "/");
 12126  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12127  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12128  011450  0EFB               	movlw	low STR_4
 12129  011452  0100               	movlb	0	; () banked
 12130  011454  6F62               	movwf	strcat@from& (0+255),b
 12131  011456  0EFF               	movlw	high STR_4
 12132  011458  0100               	movlb	0	; () banked
 12133  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12134  01145C  ECDC  F0B1         	call	_strcat	;wreg free
 12135                           
 12136                           ;My_RTCC.c: 250: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12137  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12138  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12139  011468  0100               	movlb	0	; () banked
 12140  01146A  EE20 F009          	lfsr	2,9
 12141  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12142  011470  26D9               	addwf	fsr2l,f,c
 12143  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12144  011474  22DA               	addwfc	fsr2h,f,c
 12145  011476  50DF               	movf	indf2,w,c
 12146  011478  0100               	movlb	0	; () banked
 12147  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 12148  01147C  0100               	movlb	0	; () banked
 12149  01147E  EE20 F00D          	lfsr	2,13
 12150  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12151  011484  26D9               	addwf	fsr2l,f,c
 12152  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12153  011488  22DA               	addwfc	fsr2h,f,c
 12154  01148A  0E00               	movlw	0
 12155  01148C  B8DF               	btfsc	indf2,4,c
 12156  01148E  0E01               	movlw	1
 12157  011490  0100               	movlb	0	; () banked
 12158  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 12159  011494  EC7C  F0B0         	call	_display_dec	;wreg free
 12160                           
 12161                           ;My_RTCC.c: 251: strcat(line0, "/");
 12162  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12163  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12164  0114A0  0EFB               	movlw	low STR_4
 12165  0114A2  0100               	movlb	0	; () banked
 12166  0114A4  6F62               	movwf	strcat@from& (0+255),b
 12167  0114A6  0EFF               	movlw	high STR_4
 12168  0114A8  0100               	movlb	0	; () banked
 12169  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12170  0114AC  ECDC  F0B1         	call	_strcat	;wreg free
 12171                           
 12172                           ;My_RTCC.c: 252: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12173  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12174  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12175  0114B8  0100               	movlb	0	; () banked
 12176  0114BA  EE20 F008          	lfsr	2,8
 12177  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12178  0114C0  26D9               	addwf	fsr2l,f,c
 12179  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12180  0114C4  22DA               	addwfc	fsr2h,f,c
 12181  0114C6  50DF               	movf	indf2,w,c
 12182  0114C8  0100               	movlb	0	; () banked
 12183  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 12184  0114CC  0100               	movlb	0	; () banked
 12185  0114CE  EE20 F00D          	lfsr	2,13
 12186  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12187  0114D4  26D9               	addwf	fsr2l,f,c
 12188  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12189  0114D8  22DA               	addwfc	fsr2h,f,c
 12190  0114DA  0E00               	movlw	0
 12191  0114DC  B6DF               	btfsc	indf2,3,c
 12192  0114DE  0E01               	movlw	1
 12193  0114E0  0100               	movlb	0	; () banked
 12194  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 12195  0114E4  EC7C  F0B0         	call	_display_dec	;wreg free
 12196                           
 12197                           ;My_RTCC.c: 253: strcat(line0, "(");
 12198  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12199  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12200  0114F0  0EF7               	movlw	low STR_13
 12201  0114F2  0100               	movlb	0	; () banked
 12202  0114F4  6F62               	movwf	strcat@from& (0+255),b
 12203  0114F6  0EFF               	movlw	high STR_13
 12204  0114F8  0100               	movlb	0	; () banked
 12205  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12206  0114FC  ECDC  F0B1         	call	_strcat	;wreg free
 12207                           
 12208                           ;My_RTCC.c: 254: strcat(line0, weekday_3char[tm->EE]);
 12209  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12210  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12211  011508  0100               	movlb	0	; () banked
 12212  01150A  EE20 F007          	lfsr	2,7
 12213  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12214  011510  26D9               	addwf	fsr2l,f,c
 12215  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12216  011514  22DA               	addwfc	fsr2h,f,c
 12217  011516  50DF               	movf	indf2,w,c
 12218  011518  0100               	movlb	0	; () banked
 12219  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 12220  01151C  0100               	movlb	0	; () banked
 12221  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 12222  011520  0D04               	mullw	4
 12223  011522  0EA4               	movlw	low _weekday_3char
 12224  011524  24F3               	addwf	prodl,w,c
 12225  011526  0100               	movlb	0	; () banked
 12226  011528  6F62               	movwf	strcat@from& (0+255),b
 12227  01152A  0EFB               	movlw	high _weekday_3char
 12228  01152C  20F4               	addwfc	prodh,w,c
 12229  01152E  0100               	movlb	0	; () banked
 12230  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 12231  011532  ECDC  F0B1         	call	_strcat	;wreg free
 12232                           
 12233                           ;My_RTCC.c: 255: strcat(line0, ")");
 12234  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12235  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12236  01153E  0E8F               	movlw	low (STR_118+5)
 12237  011540  0100               	movlb	0	; () banked
 12238  011542  6F62               	movwf	strcat@from& (0+255),b
 12239  011544  0EFF               	movlw	high (STR_118+5)
 12240  011546  0100               	movlb	0	; () banked
 12241  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 12242  01154A  ECDC  F0B1         	call	_strcat	;wreg free
 12243                           
 12244                           ;My_RTCC.c: 257: strcpy(line1, "        ");
 12245  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12246  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12247  011556  0E79               	movlw	low STR_15
 12248  011558  0100               	movlb	0	; () banked
 12249  01155A  6F62               	movwf	strcpy@from& (0+255),b
 12250  01155C  0EFF               	movlw	high STR_15
 12251  01155E  0100               	movlb	0	; () banked
 12252  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12253  011562  EC1D  F0B4         	call	_strcpy	;wreg free
 12254                           
 12255                           ;My_RTCC.c: 258: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12256  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12257  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12258  01156E  0100               	movlb	0	; () banked
 12259  011570  EE20 F006          	lfsr	2,6
 12260  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12261  011576  26D9               	addwf	fsr2l,f,c
 12262  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12263  01157A  22DA               	addwfc	fsr2h,f,c
 12264  01157C  50DF               	movf	indf2,w,c
 12265  01157E  0100               	movlb	0	; () banked
 12266  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 12267  011582  0100               	movlb	0	; () banked
 12268  011584  EE20 F00D          	lfsr	2,13
 12269  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12270  01158A  26D9               	addwf	fsr2l,f,c
 12271  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12272  01158E  22DA               	addwfc	fsr2h,f,c
 12273  011590  0E00               	movlw	0
 12274  011592  B4DF               	btfsc	indf2,2,c
 12275  011594  0E01               	movlw	1
 12276  011596  0100               	movlb	0	; () banked
 12277  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 12278  01159A  EC7C  F0B0         	call	_display_dec	;wreg free
 12279                           
 12280                           ;My_RTCC.c: 259: if (tm->colon) strcat(line1, ":");
 12281  01159E  0100               	movlb	0	; () banked
 12282  0115A0  EE20 F00B          	lfsr	2,11
 12283  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12284  0115A6  26D9               	addwf	fsr2l,f,c
 12285  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12286  0115AA  22DA               	addwfc	fsr2h,f,c
 12287  0115AC  50DF               	movf	indf2,w,c
 12288  0115AE  B4D8               	btfsc	status,2,c
 12289  0115B0  D00D               	goto	l11700
 12290                           
 12291                           ; BSR set to: 0
 12292  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12293  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12294  0115BA  0EFD               	movlw	low STR_7
 12295  0115BC  0100               	movlb	0	; () banked
 12296  0115BE  6F62               	movwf	strcat@from& (0+255),b
 12297  0115C0  0EFF               	movlw	high STR_7
 12298  0115C2  0100               	movlb	0	; () banked
 12299  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12300  0115C6  ECDC  F0B1         	call	_strcat	;wreg free
 12301  0115CA  D00C               	goto	l11702
 12302  0115CC                     l11700:
 12303                           
 12304                           ;My_RTCC.c: 260: else strcat(line1, " ");
 12305  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12306  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12307  0115D4  0E80               	movlw	low (STR_15+7)
 12308  0115D6  0100               	movlb	0	; () banked
 12309  0115D8  6F62               	movwf	strcat@from& (0+255),b
 12310  0115DA  0EFF               	movlw	high (STR_15+7)
 12311  0115DC  0100               	movlb	0	; () banked
 12312  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12313  0115E0  ECDC  F0B1         	call	_strcat	;wreg free
 12314  0115E4                     l11702:
 12315                           
 12316                           ;My_RTCC.c: 261: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12317  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12318  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12319  0115EC  0100               	movlb	0	; () banked
 12320  0115EE  EE20 F005          	lfsr	2,5
 12321  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12322  0115F4  26D9               	addwf	fsr2l,f,c
 12323  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12324  0115F8  22DA               	addwfc	fsr2h,f,c
 12325  0115FA  50DF               	movf	indf2,w,c
 12326  0115FC  0100               	movlb	0	; () banked
 12327  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 12328  011600  0100               	movlb	0	; () banked
 12329  011602  EE20 F00D          	lfsr	2,13
 12330  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12331  011608  26D9               	addwf	fsr2l,f,c
 12332  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12333  01160C  22DA               	addwfc	fsr2h,f,c
 12334  01160E  0E00               	movlw	0
 12335  011610  B2DF               	btfsc	indf2,1,c
 12336  011612  0E01               	movlw	1
 12337  011614  0100               	movlb	0	; () banked
 12338  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 12339  011618  EC7C  F0B0         	call	_display_dec	;wreg free
 12340                           
 12341                           ;My_RTCC.c: 262: strcat(line1, "-");
 12342  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12343  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12344  011624  0EF9               	movlw	low STR_9
 12345  011626  0100               	movlb	0	; () banked
 12346  011628  6F62               	movwf	strcat@from& (0+255),b
 12347  01162A  0EFF               	movlw	high STR_9
 12348  01162C  0100               	movlb	0	; () banked
 12349  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12350  011630  ECDC  F0B1         	call	_strcat	;wreg free
 12351                           
 12352                           ;My_RTCC.c: 263: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12353  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12354  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12355  01163C  0100               	movlb	0	; () banked
 12356  01163E  EE20 F004          	lfsr	2,4
 12357  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12358  011644  26D9               	addwf	fsr2l,f,c
 12359  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12360  011648  22DA               	addwfc	fsr2h,f,c
 12361  01164A  50DF               	movf	indf2,w,c
 12362  01164C  0100               	movlb	0	; () banked
 12363  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 12364  011650  0100               	movlb	0	; () banked
 12365  011652  EE20 F00D          	lfsr	2,13
 12366  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12367  011658  26D9               	addwf	fsr2l,f,c
 12368  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12369  01165C  22DA               	addwfc	fsr2h,f,c
 12370  01165E  0E00               	movlw	0
 12371  011660  B0DF               	btfsc	indf2,0,c
 12372  011662  0E01               	movlw	1
 12373  011664  0100               	movlb	0	; () banked
 12374  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 12375  011668  EC7C  F0B0         	call	_display_dec	;wreg free
 12376  01166C  0012               	return		;funcret
 12377  01166E                     __end_of_display_time_1602:
 12378                           	opt stack 0
 12379                           tblptru	equ	0xFF8
 12380                           tblptrh	equ	0xFF7
 12381                           tblptrl	equ	0xFF6
 12382                           tablat	equ	0xFF5
 12383                           prodh	equ	0xFF4
 12384                           prodl	equ	0xFF3
 12385                           intcon	equ	0xFF2
 12386                           postinc0	equ	0xFEE
 12387                           wreg	equ	0xFE8
 12388                           indf1	equ	0xFE7
 12389                           postinc1	equ	0xFE6
 12390                           postdec1	equ	0xFE5
 12391                           fsr1h	equ	0xFE2
 12392                           fsr1l	equ	0xFE1
 12393                           indf2	equ	0xFDF
 12394                           postinc2	equ	0xFDE
 12395                           postdec2	equ	0xFDD
 12396                           plusw2	equ	0xFDB
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function _strcpy *****************
 12402 ;; Defined at:
 12403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12406 ;;		 -> settings_integrating_reset@str_6147(20), settings_integrating_reset@str(20), settings_led_indicator@str_6130(20)
      +, settings_led_indicator@str(20), 
 12407 ;;		 -> settings_auto_stop@str_6113(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12408 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12409 ;;		 -> STR_100(6), STR_99(6), STR_97(6), STR_96(6), 
 12410 ;;		 -> STR_92(6), STR_91(6), STR_89(6), STR_88(6), 
 12411 ;;		 -> STR_84(6), STR_83(6), STR_81(6), STR_80(6), 
 12412 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12415 ;;		 -> settings_integrating_reset@str_6147(20), settings_integrating_reset@str(20), settings_led_indicator@str_6130(20)
      +, settings_led_indicator@str(20), 
 12416 ;;		 -> settings_auto_stop@str_6113(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  2    0[BANK0 ] PTR unsigned char 
 12419 ;; Registers used:
 12420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12421 ;; Tracked objects:
 12422 ;;		On entry : 0/0
 12423 ;;		On exit  : 0/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12429 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12430 ;;Total ram usage:        6 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:   12
 12433 ;; This function calls:
 12434 ;;		Nothing
 12435 ;; This function is called by:
 12436 ;;		_display_time_1602
 12437 ;;		_settings_auto_stop
 12438 ;;		_settings_led_indicator
 12439 ;;		_settings_integrating_reset
 12440 ;;		_display_time_0802
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text33
 12445  01683A                     __ptext33:
 12446                           	opt stack 0
 12447  01683A                     _strcpy:
 12448                           	opt stack 15
 12449                           
 12450                           ;incstack = 0
 12451  01683A  C060  F064         	movff	strcpy@to,strcpy@cp
 12452  01683E  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12453  016842  D006               	goto	l11190
 12454  016844                     l11188:
 12455  016844  0100               	movlb	0	; () banked
 12456  016846  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12457  016848  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12458  01684A  0100               	movlb	0	; () banked
 12459  01684C  4B62               	infsnz	strcpy@from& (0+255),f,b
 12460  01684E  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12461  016850                     l11190:
 12462  016850  C062  FFF6         	movff	strcpy@from,tblptrl
 12463  016854  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12464  016858                     	if	0	;tblptru may be non-zero
 12465  016858                     	endif
 12466  016858                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12467  016858  0E00               	movlw	low (__mediumconst shr (0+16))
 12468  01685A  6EF8               	movwf	tblptru,c
 12469  01685C                     	endif
 12470  01685C  C064  FFD9         	movff	strcpy@cp,fsr2l
 12471  016860  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12472  016864  0008               	tblrd		*
 12473  016866  CFF5 FFDF          	movff	tablat,indf2
 12474  01686A  50DF               	movf	indf2,w,c
 12475  01686C  B4D8               	btfsc	status,2,c
 12476  01686E  0012               	return	
 12477  016870  D7E9               	goto	l11188
 12478  016872                     __end_of_strcpy:
 12479                           	opt stack 0
 12480                           tblptru	equ	0xFF8
 12481                           tblptrh	equ	0xFF7
 12482                           tblptrl	equ	0xFF6
 12483                           tablat	equ	0xFF5
 12484                           prodh	equ	0xFF4
 12485                           prodl	equ	0xFF3
 12486                           intcon	equ	0xFF2
 12487                           postinc0	equ	0xFEE
 12488                           wreg	equ	0xFE8
 12489                           indf1	equ	0xFE7
 12490                           postinc1	equ	0xFE6
 12491                           postdec1	equ	0xFE5
 12492                           fsr1h	equ	0xFE2
 12493                           fsr1l	equ	0xFE1
 12494                           indf2	equ	0xFDF
 12495                           postinc2	equ	0xFDE
 12496                           postdec2	equ	0xFDD
 12497                           plusw2	equ	0xFDB
 12498                           fsr2h	equ	0xFDA
 12499                           fsr2l	equ	0xFD9
 12500                           status	equ	0xFD8
 12501                           
 12502 ;; *************** function _display_dec *****************
 12503 ;; Defined at:
 12504 ;;		line 217 in file "../My_library/My_RTCC.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12507 ;;		 -> display_LCD@str(40), 
 12508 ;;  dec             1   77[BANK0 ] unsigned char 
 12509 ;;  edit            1   78[BANK0 ] unsigned char 
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;  s               4   79[BANK0 ] unsigned char [4]
 12512 ;; Return value:  Size  Location     Type
 12513 ;;		None               void
 12514 ;; Registers used:
 12515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12522 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12525 ;;Total ram usage:        8 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:   14
 12528 ;; This function calls:
 12529 ;;		_sprintf
 12530 ;;		_strcat
 12531 ;; This function is called by:
 12532 ;;		_display_time_1602
 12533 ;;		_display_time_0802
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text34
 12538  0160F8                     __ptext34:
 12539                           	opt stack 0
 12540  0160F8                     _display_dec:
 12541                           	opt stack 13
 12542                           
 12543                           ;My_RTCC.c: 218: char s[4];
 12544                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
 12545                           
 12546                           ;incstack = 0
 12547  0160F8  0EAF               	movlw	low display_dec@s
 12548  0160FA  0100               	movlb	0	; () banked
 12549  0160FC  6F83               	movwf	sprintf@sp& (0+255),b
 12550  0160FE  0E00               	movlw	high display_dec@s
 12551  016100  0100               	movlb	0	; () banked
 12552  016102  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12553  016104  0EFC               	movlw	low (STR_67+27)
 12554  016106  0100               	movlb	0	; () banked
 12555  016108  6F85               	movwf	sprintf@f& (0+255),b
 12556  01610A  0EFD               	movlw	high (STR_67+27)
 12557  01610C  0100               	movlb	0	; () banked
 12558  01610E  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12559  016110  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12560  016114  0100               	movlb	0	; () banked
 12561  016116  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12562  016118  EC00  F080         	call	_sprintf	;wreg free
 12563                           
 12564                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
 12565  01611C  0100               	movlb	0	; () banked
 12566  01611E  51AE               	movf	display_dec@edit& (0+255),w,b
 12567  016120  0100               	movlb	0	; () banked
 12568  016122  B4D8               	btfsc	status,2,c
 12569  016124  D011               	goto	l11184
 12570                           
 12571                           ; BSR set to: 0
 12572  016126  0101               	movlb	1	; () banked
 12573  016128  517F               	movf	(_now+12)& (0+255),w,b
 12574  01612A  B4D8               	btfsc	status,2,c
 12575  01612C  D00D               	goto	l11184
 12576                           
 12577                           ; BSR set to: 1
 12578  01612E  C0AB  F060         	movff	display_dec@str,strcat@to
 12579  016132  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12580  016136  0E7F               	movlw	low (STR_15+6)
 12581  016138  0100               	movlb	0	; () banked
 12582  01613A  6F62               	movwf	strcat@from& (0+255),b
 12583  01613C  0EFF               	movlw	high (STR_15+6)
 12584  01613E  0100               	movlb	0	; () banked
 12585  016140  6F63               	movwf	(strcat@from+1)& (0+255),b
 12586  016142  ECDC  F0B1         	call	_strcat	;wreg free
 12587  016146  0012               	return	
 12588  016148                     l11184:
 12589                           
 12590                           ;My_RTCC.c: 221: else strcat(str, s);
 12591  016148  C0AB  F060         	movff	display_dec@str,strcat@to
 12592  01614C  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12593  016150  0EAF               	movlw	low display_dec@s
 12594  016152  0100               	movlb	0	; () banked
 12595  016154  6F62               	movwf	strcat@from& (0+255),b
 12596  016156  0E00               	movlw	high display_dec@s
 12597  016158  0100               	movlb	0	; () banked
 12598  01615A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12599  01615C  ECDC  F0B1         	call	_strcat	;wreg free
 12600  016160  0012               	return	
 12601  016162                     __end_of_display_dec:
 12602                           	opt stack 0
 12603                           tblptru	equ	0xFF8
 12604                           tblptrh	equ	0xFF7
 12605                           tblptrl	equ	0xFF6
 12606                           tablat	equ	0xFF5
 12607                           prodh	equ	0xFF4
 12608                           prodl	equ	0xFF3
 12609                           intcon	equ	0xFF2
 12610                           postinc0	equ	0xFEE
 12611                           wreg	equ	0xFE8
 12612                           indf1	equ	0xFE7
 12613                           postinc1	equ	0xFE6
 12614                           postdec1	equ	0xFE5
 12615                           fsr1h	equ	0xFE2
 12616                           fsr1l	equ	0xFE1
 12617                           indf2	equ	0xFDF
 12618                           postinc2	equ	0xFDE
 12619                           postdec2	equ	0xFDD
 12620                           plusw2	equ	0xFDB
 12621                           fsr2h	equ	0xFDA
 12622                           fsr2l	equ	0xFD9
 12623                           status	equ	0xFD8
 12624                           
 12625 ;; *************** function _strcat *****************
 12626 ;; Defined at:
 12627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12630 ;;		 -> display_LCD@str(40), 
 12631 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12632 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 12633 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 12634 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 12635 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12638 ;;		 -> display_LCD@str(40), 
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  2    0[BANK0 ] PTR unsigned char 
 12641 ;; Registers used:
 12642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12651 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12652 ;;Total ram usage:        6 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:   12
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_display_dec
 12659 ;;		_display_time_1602
 12660 ;;		_display_time_0802
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           	psect	text35
 12665  0163B8                     __ptext35:
 12666                           	opt stack 0
 12667  0163B8                     _strcat:
 12668                           	opt stack 15
 12669                           
 12670                           ;incstack = 0
 12671  0163B8  C060  F064         	movff	strcat@to,strcat@cp
 12672  0163BC  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12673  0163C0  D003               	goto	l11072
 12674  0163C2                     l11070:
 12675  0163C2  0100               	movlb	0	; () banked
 12676  0163C4  4B64               	infsnz	strcat@cp& (0+255),f,b
 12677  0163C6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12678  0163C8                     l11072:
 12679  0163C8  C064  FFD9         	movff	strcat@cp,fsr2l
 12680  0163CC  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12681  0163D0  50DF               	movf	indf2,w,c
 12682  0163D2  B4D8               	btfsc	status,2,c
 12683  0163D4  D007               	goto	l11076
 12684  0163D6  D7F5               	goto	l11070
 12685  0163D8                     l11074:
 12686  0163D8  0100               	movlb	0	; () banked
 12687  0163DA  4B64               	infsnz	strcat@cp& (0+255),f,b
 12688  0163DC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12689  0163DE  0100               	movlb	0	; () banked
 12690  0163E0  4B62               	infsnz	strcat@from& (0+255),f,b
 12691  0163E2  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12692  0163E4                     l11076:
 12693  0163E4  C062  FFF6         	movff	strcat@from,tblptrl
 12694  0163E8  C063  FFF7         	movff	strcat@from+1,tblptrh
 12695  0163EC  0E00               	movlw	low (__mediumconst shr (0+16))
 12696  0163EE  6EF8               	movwf	tblptru,c
 12697  0163F0  C064  FFD9         	movff	strcat@cp,fsr2l
 12698  0163F4  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12699  0163F8  0E0E               	movlw	(high __ramtop+-1)
 12700  0163FA  64F7               	cpfsgt	tblptrh,c
 12701  0163FC  D003               	bra	u12107
 12702  0163FE  0008               	tblrd		*
 12703  016400  50F5               	movf	tablat,w,c
 12704  016402  D005               	bra	u12100
 12705  016404                     u12107:
 12706  016404  CFF6 FFE1          	movff	tblptrl,fsr1l
 12707  016408  CFF7 FFE2          	movff	tblptrh,fsr1h
 12708  01640C  50E7               	movf	indf1,w,c
 12709  01640E                     u12100:
 12710  01640E  6EDF               	movwf	indf2,c
 12711  016410  50DF               	movf	indf2,w,c
 12712  016412  B4D8               	btfsc	status,2,c
 12713  016414  0012               	return	
 12714  016416  D7E0               	goto	l11074
 12715  016418                     __end_of_strcat:
 12716                           	opt stack 0
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           intcon	equ	0xFF2
 12724                           postinc0	equ	0xFEE
 12725                           wreg	equ	0xFE8
 12726                           indf1	equ	0xFE7
 12727                           postinc1	equ	0xFE6
 12728                           postdec1	equ	0xFE5
 12729                           fsr1h	equ	0xFE2
 12730                           fsr1l	equ	0xFE1
 12731                           indf2	equ	0xFDF
 12732                           postinc2	equ	0xFDE
 12733                           postdec2	equ	0xFDD
 12734                           plusw2	equ	0xFDB
 12735                           fsr2h	equ	0xFDA
 12736                           fsr2l	equ	0xFD9
 12737                           status	equ	0xFD8
 12738                           
 12739 ;; *************** function _I2C_LCD_SetCursor *****************
 12740 ;; Defined at:
 12741 ;;		line 159 in file "../My_library/My_ST7032.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;  col             1    wreg     unsigned char 
 12744 ;;  row             1    6[BANK0 ] unsigned char 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  col             1    9[BANK0 ] unsigned char 
 12747 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 12748 ;; Return value:  Size  Location     Type
 12749 ;;		None               void
 12750 ;; Registers used:
 12751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12757 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12761 ;;Total ram usage:        4 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:   15
 12764 ;; This function calls:
 12765 ;;		_I2C_LCD_Command
 12766 ;; This function is called by:
 12767 ;;		_sleep_task
 12768 ;;		_bootload
 12769 ;;		_display_LCD
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773                           	psect	text36
 12774  0169DC                     __ptext36:
 12775                           	opt stack 0
 12776  0169DC                     _I2C_LCD_SetCursor:
 12777                           	opt stack 12
 12778                           
 12779                           ;incstack = 0
 12780                           ;I2C_LCD_SetCursor@col stored from wreg
 12781  0169DC  0100               	movlb	0	; () banked
 12782  0169DE  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 12783                           
 12784                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 12785  0169E0  C1E2  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 12786  0169E4  C1E3  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 12787                           
 12788                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 12789  0169E8  0100               	movlb	0	; () banked
 12790  0169EA  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 12791  0169EC  0D01               	mullw	1
 12792  0169EE  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 12793  0169F0  24F3               	addwf	prodl,w,c
 12794  0169F2  6ED9               	movwf	fsr2l,c
 12795  0169F4  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 12796  0169F6  20F4               	addwfc	prodh,w,c
 12797  0169F8  6EDA               	movwf	fsr2h,c
 12798  0169FA  50DF               	movf	indf2,w,c
 12799  0169FC  0100               	movlb	0	; () banked
 12800  0169FE  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 12801  016A00  0980               	iorlw	128
 12802  016A02  EC55  F0B4         	call	_I2C_LCD_Command
 12803  016A06  0012               	return		;funcret
 12804  016A08                     __end_of_I2C_LCD_SetCursor:
 12805                           	opt stack 0
 12806                           tblptru	equ	0xFF8
 12807                           tblptrh	equ	0xFF7
 12808                           tblptrl	equ	0xFF6
 12809                           tablat	equ	0xFF5
 12810                           prodh	equ	0xFF4
 12811                           prodl	equ	0xFF3
 12812                           intcon	equ	0xFF2
 12813                           postinc0	equ	0xFEE
 12814                           wreg	equ	0xFE8
 12815                           indf1	equ	0xFE7
 12816                           postinc1	equ	0xFE6
 12817                           postdec1	equ	0xFE5
 12818                           fsr1h	equ	0xFE2
 12819                           fsr1l	equ	0xFE1
 12820                           indf2	equ	0xFDF
 12821                           postinc2	equ	0xFDE
 12822                           postdec2	equ	0xFDD
 12823                           plusw2	equ	0xFDB
 12824                           fsr2h	equ	0xFDA
 12825                           fsr2l	equ	0xFD9
 12826                           status	equ	0xFD8
 12827                           
 12828 ;; *************** function _I2C_LCD_Puts *****************
 12829 ;; Defined at:
 12830 ;;		line 178 in file "../My_library/My_ST7032.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 12833 ;;		 -> display_LCD@str_5594(20), display_LCD@str(40), display_char(40), STR_50(16), 
 12834 ;;		 -> STR_49(12), STR_46(13), STR_45(17), 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  ans             2    7[BANK0 ] int 
 12837 ;; Return value:  Size  Location     Type
 12838 ;;		None               void
 12839 ;; Registers used:
 12840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12847 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12850 ;;Total ram usage:        5 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:   14
 12853 ;; This function calls:
 12854 ;;		_I2C_Send
 12855 ;;		_I2C_Start
 12856 ;;		_I2C_Stop
 12857 ;; This function is called by:
 12858 ;;		_sleep_task
 12859 ;;		_bootload
 12860 ;;		_display_LCD
 12861 ;; This function uses a non-reentrant model
 12862 ;;
 12863                           
 12864                           	psect	text37
 12865  015B9E                     __ptext37:
 12866                           	opt stack 0
 12867  015B9E                     _I2C_LCD_Puts:
 12868                           	opt stack 13
 12869                           
 12870                           ;My_ST7032.c: 179: int ans;
 12871                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 12872                           
 12873                           ;incstack = 0
 12874  015B9E  0E00               	movlw	0
 12875  015BA0  0100               	movlb	0	; () banked
 12876  015BA2  6F62               	movwf	I2C_Start@rw& (0+255),b
 12877  015BA4  0E3E               	movlw	62
 12878  015BA6  ECBF  F0B4         	call	_I2C_Start
 12879  015BAA  0100               	movlb	0	; () banked
 12880  015BAC  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 12881  015BAE  0100               	movlb	0	; () banked
 12882  015BB0  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 12883  015BB2  0100               	movlb	0	; () banked
 12884  015BB4  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 12885  015BB6  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;My_ST7032.c: 182: if (ans == 0) {
 12889  015BB8  0100               	movlb	0	; () banked
 12890  015BBA  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 12891  015BBC  0100               	movlb	0	; () banked
 12892  015BBE  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 12893  015BC0  A4D8               	btfss	status,2,c
 12894  015BC2  D031               	goto	l11346
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 12898  015BC4  0E40               	movlw	64
 12899  015BC6  EC72  F0B6         	call	_I2C_Send
 12900                           
 12901                           ;My_ST7032.c: 184: while (*s) {
 12902  015BCA  D019               	goto	l11344
 12903  015BCC                     l11338:
 12904                           
 12905                           ;My_ST7032.c: 185: I2C_Send(*s++);
 12906  015BCC  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 12907  015BD0  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 12908  015BD4  0E00               	movlw	low (__mediumconst shr (0+16))
 12909  015BD6  6EF8               	movwf	tblptru,c
 12910  015BD8  0E0E               	movlw	(high __ramtop+-1)
 12911  015BDA  64F7               	cpfsgt	tblptrh,c
 12912  015BDC  D003               	bra	u12527
 12913  015BDE  0008               	tblrd		*
 12914  015BE0  50F5               	movf	tablat,w,c
 12915  015BE2  D005               	bra	u12520
 12916  015BE4                     u12527:
 12917  015BE4  CFF6 FFE1          	movff	tblptrl,fsr1l
 12918  015BE8  CFF7 FFE2          	movff	tblptrh,fsr1h
 12919  015BEC  50E7               	movf	indf1,w,c
 12920  015BEE                     u12520:
 12921  015BEE  EC72  F0B6         	call	_I2C_Send
 12922  015BF2  0100               	movlb	0	; () banked
 12923  015BF4  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 12924  015BF6  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 12928  015BF8  0E68               	movlw	104
 12929  015BFA                     u15177:
 12930  015BFA  2EE8               	decfsz	wreg,f,c
 12931  015BFC  D7FE               	goto	u15177
 12932  015BFE                     l11344:
 12933  015BFE  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 12934  015C02  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 12935  015C06  0E00               	movlw	low (__mediumconst shr (0+16))
 12936  015C08  6EF8               	movwf	tblptru,c
 12937  015C0A  0E0E               	movlw	(high __ramtop+-1)
 12938  015C0C  64F7               	cpfsgt	tblptrh,c
 12939  015C0E  D003               	bra	u12537
 12940  015C10  0008               	tblrd		*
 12941  015C12  50F5               	movf	tablat,w,c
 12942  015C14  D005               	bra	u12530
 12943  015C16                     u12537:
 12944  015C16  CFF6 FFE1          	movff	tblptrl,fsr1l
 12945  015C1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 12946  015C1E  50E7               	movf	indf1,w,c
 12947  015C20                     u12530:
 12948  015C20  0900               	iorlw	0
 12949  015C22  A4D8               	btfss	status,2,c
 12950  015C24  D7D3               	goto	l11338
 12951  015C26                     l11346:
 12952                           
 12953                           ;My_ST7032.c: 187: }
 12954                           ;My_ST7032.c: 188: }
 12955                           ;My_ST7032.c: 189: I2C_Stop();
 12956  015C26  EC98  F0B6         	call	_I2C_Stop	;wreg free
 12957  015C2A  0012               	return		;funcret
 12958  015C2C                     __end_of_I2C_LCD_Puts:
 12959                           	opt stack 0
 12960                           tblptru	equ	0xFF8
 12961                           tblptrh	equ	0xFF7
 12962                           tblptrl	equ	0xFF6
 12963                           tablat	equ	0xFF5
 12964                           prodh	equ	0xFF4
 12965                           prodl	equ	0xFF3
 12966                           intcon	equ	0xFF2
 12967                           postinc0	equ	0xFEE
 12968                           wreg	equ	0xFE8
 12969                           indf1	equ	0xFE7
 12970                           postinc1	equ	0xFE6
 12971                           postdec1	equ	0xFE5
 12972                           fsr1h	equ	0xFE2
 12973                           fsr1l	equ	0xFE1
 12974                           indf2	equ	0xFDF
 12975                           postinc2	equ	0xFDE
 12976                           postdec2	equ	0xFDD
 12977                           plusw2	equ	0xFDB
 12978                           fsr2h	equ	0xFDA
 12979                           fsr2l	equ	0xFD9
 12980                           status	equ	0xFD8
 12981                           
 12982 ;; *************** function _data_out *****************
 12983 ;; Defined at:
 12984 ;;		line 248 in file "ChargeStation_task.c"
 12985 ;; Parameters:    Size  Location     Type
 12986 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 12987 ;;		 -> usb_tx(8), 
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;  i               1  107[BANK0 ] unsigned char 
 12990 ;;  str            30   77[BANK0 ] unsigned char [30]
 12991 ;; Return value:  Size  Location     Type
 12992 ;;		None               void
 12993 ;; Registers used:
 12994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13001 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13003 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13004 ;;Total ram usage:       33 bytes
 13005 ;; Hardware stack levels used:    1
 13006 ;; Hardware stack levels required when called:   15
 13007 ;; This function calls:
 13008 ;;		___lwdiv
 13009 ;;		___lwmod
 13010 ;;		_ringbuf_put_str
 13011 ;;		_sprintf
 13012 ;; This function is called by:
 13013 ;;		_normal_task
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text38
 13018  012E3C                     __ptext38:
 13019                           	opt stack 0
 13020  012E3C                     _data_out:
 13021                           	opt stack 14
 13022                           
 13023                           ;ChargeStation_task.c: 249: char str[30];
 13024                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 13025                           ;ChargeStation_task.c: 251: now.YY,
 13026                           ;ChargeStation_task.c: 252: now.MM,
 13027                           ;ChargeStation_task.c: 253: now.DD,
 13028                           ;ChargeStation_task.c: 254: now.hh,
 13029                           ;ChargeStation_task.c: 255: now.mm,
 13030                           ;ChargeStation_task.c: 256: now.ss
 13031                           ;ChargeStation_task.c: 257: );
 13032                           
 13033                           ;incstack = 0
 13034  012E3C  0EAD               	movlw	low data_out@str
 13035  012E3E  0100               	movlb	0	; () banked
 13036  012E40  6F83               	movwf	sprintf@sp& (0+255),b
 13037  012E42  0E00               	movlw	high data_out@str
 13038  012E44  0100               	movlb	0	; () banked
 13039  012E46  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13040  012E48  0EE1               	movlw	low STR_67
 13041  012E4A  0100               	movlb	0	; () banked
 13042  012E4C  6F85               	movwf	sprintf@f& (0+255),b
 13043  012E4E  0EFD               	movlw	high STR_67
 13044  012E50  0100               	movlb	0	; () banked
 13045  012E52  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13046  012E54  C17D  F087         	movff	_now+10,?_sprintf+4
 13047  012E58  0100               	movlb	0	; () banked
 13048  012E5A  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13049  012E5C  C17C  F089         	movff	_now+9,?_sprintf+6
 13050  012E60  0100               	movlb	0	; () banked
 13051  012E62  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13052  012E64  C17B  F08B         	movff	_now+8,?_sprintf+8
 13053  012E68  0100               	movlb	0	; () banked
 13054  012E6A  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13055  012E6C  C179  F08D         	movff	_now+6,?_sprintf+10
 13056  012E70  0100               	movlb	0	; () banked
 13057  012E72  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 13058  012E74  C178  F08F         	movff	_now+5,?_sprintf+12
 13059  012E78  0100               	movlb	0	; () banked
 13060  012E7A  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13061  012E7C  C177  F091         	movff	_now+4,?_sprintf+14
 13062  012E80  0100               	movlb	0	; () banked
 13063  012E82  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13064  012E84  EC00  F080         	call	_sprintf	;wreg free
 13065                           
 13066                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 13067  012E88  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13068  012E8C  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13069  012E90  0EAD               	movlw	low data_out@str
 13070  012E92  0100               	movlb	0	; () banked
 13071  012E94  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13072  012E96  0E00               	movlw	high data_out@str
 13073  012E98  0100               	movlb	0	; () banked
 13074  012E9A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13075  012E9C  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
 13076                           
 13077                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 13078  012EA0  0E00               	movlw	0
 13079  012EA2  0100               	movlb	0	; () banked
 13080  012EA4  6FCB               	movwf	data_out@i& (0+255),b
 13081  012EA6                     l12576:
 13082                           
 13083                           ; BSR set to: 0
 13084  012EA6  0E02               	movlw	2
 13085  012EA8  0100               	movlb	0	; () banked
 13086  012EAA  65CB               	cpfsgt	data_out@i& (0+255),b
 13087  012EAC  D001               	goto	l12580
 13088  012EAE  D075               	goto	l12588
 13089  012EB0                     l12580:
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 13093                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 13094                           ;ChargeStation_task.c: 262: p[i],
 13095                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 13096                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 13097                           ;ChargeStation_task.c: 265: port[i].integrated_current
 13098                           ;ChargeStation_task.c: 266: );
 13099  012EB0  0EAD               	movlw	low data_out@str
 13100  012EB2  0100               	movlb	0	; () banked
 13101  012EB4  6F83               	movwf	sprintf@sp& (0+255),b
 13102  012EB6  0E00               	movlw	high data_out@str
 13103  012EB8  0100               	movlb	0	; () banked
 13104  012EBA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13105  012EBC  0E35               	movlw	low STR_68
 13106  012EBE  0100               	movlb	0	; () banked
 13107  012EC0  6F85               	movwf	sprintf@f& (0+255),b
 13108  012EC2  0EFE               	movlw	high STR_68
 13109  012EC4  0100               	movlb	0	; () banked
 13110  012EC6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13111  012EC8  0100               	movlb	0	; () banked
 13112  012ECA  51CB               	movf	data_out@i& (0+255),w,b
 13113  012ECC  0D02               	mullw	2
 13114  012ECE  0EDC               	movlw	low data_out@p
 13115  012ED0  24F3               	addwf	prodl,w,c
 13116  012ED2  0100               	movlb	0	; () banked
 13117  012ED4  6F87               	movwf	(?_sprintf+4)& (0+255),b
 13118  012ED6  0EFB               	movlw	high data_out@p
 13119  012ED8  20F4               	addwfc	prodh,w,c
 13120  012EDA  0100               	movlb	0	; () banked
 13121  012EDC  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13122  012EDE  0100               	movlb	0	; () banked
 13123  012EE0  51CB               	movf	data_out@i& (0+255),w,b
 13124  012EE2  0D17               	mullw	23
 13125  012EE4  0E06               	movlw	6
 13126  012EE6  26F3               	addwf	prodl,f,c
 13127  012EE8  0E00               	movlw	0
 13128  012EEA  22F4               	addwfc	prodh,f,c
 13129  012EEC  0E2E               	movlw	low _port
 13130  012EEE  24F3               	addwf	prodl,w,c
 13131  012EF0  6ED9               	movwf	fsr2l,c
 13132  012EF2  0E01               	movlw	high _port
 13133  012EF4  20F4               	addwfc	prodh,w,c
 13134  012EF6  6EDA               	movwf	fsr2h,c
 13135  012EF8  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13136  012EFC  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13137  012F00  0E03               	movlw	3
 13138  012F02  0100               	movlb	0	; () banked
 13139  012F04  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13140  012F06  0EE8               	movlw	232
 13141  012F08  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13142  012F0A  EC26  F0AF         	call	___lwdiv	;wreg free
 13143  012F0E  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13144  012F12  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13145  012F16  0100               	movlb	0	; () banked
 13146  012F18  51CB               	movf	data_out@i& (0+255),w,b
 13147  012F1A  0D17               	mullw	23
 13148  012F1C  0E06               	movlw	6
 13149  012F1E  26F3               	addwf	prodl,f,c
 13150  012F20  0E00               	movlw	0
 13151  012F22  22F4               	addwfc	prodh,f,c
 13152  012F24  0E2E               	movlw	low _port
 13153  012F26  24F3               	addwf	prodl,w,c
 13154  012F28  6ED9               	movwf	fsr2l,c
 13155  012F2A  0E01               	movlw	high _port
 13156  012F2C  20F4               	addwfc	prodh,w,c
 13157  012F2E  6EDA               	movwf	fsr2h,c
 13158  012F30  CFDE F060          	movff	postinc2,___lwmod@dividend
 13159  012F34  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13160  012F38  0E03               	movlw	3
 13161  012F3A  0100               	movlb	0	; () banked
 13162  012F3C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13163  012F3E  0EE8               	movlw	232
 13164  012F40  6F62               	movwf	___lwmod@divisor& (0+255),b
 13165  012F42  EC7B  F0B1         	call	___lwmod	;wreg free
 13166  012F46  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13167  012F4A  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13168  012F4E  0100               	movlb	0	; () banked
 13169  012F50  51CB               	movf	data_out@i& (0+255),w,b
 13170  012F52  0D17               	mullw	23
 13171  012F54  0E0C               	movlw	12
 13172  012F56  26F3               	addwf	prodl,f,c
 13173  012F58  0E00               	movlw	0
 13174  012F5A  22F4               	addwfc	prodh,f,c
 13175  012F5C  0E2E               	movlw	low _port
 13176  012F5E  24F3               	addwf	prodl,w,c
 13177  012F60  6ED9               	movwf	fsr2l,c
 13178  012F62  0E01               	movlw	high _port
 13179  012F64  20F4               	addwfc	prodh,w,c
 13180  012F66  6EDA               	movwf	fsr2h,c
 13181  012F68  CFDE F08D          	movff	postinc2,?_sprintf+10
 13182  012F6C  CFDE F08E          	movff	postinc2,?_sprintf+11
 13183  012F70  CFDE F08F          	movff	postinc2,?_sprintf+12
 13184  012F74  CFDE F090          	movff	postinc2,?_sprintf+13
 13185  012F78  EC00  F080         	call	_sprintf	;wreg free
 13186                           
 13187                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13188  012F7C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13189  012F80  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13190  012F84  0EAD               	movlw	low data_out@str
 13191  012F86  0100               	movlb	0	; () banked
 13192  012F88  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13193  012F8A  0E00               	movlw	high data_out@str
 13194  012F8C  0100               	movlb	0	; () banked
 13195  012F8E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13196  012F90  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
 13197  012F94  0100               	movlb	0	; () banked
 13198  012F96  2BCB               	incf	data_out@i& (0+255),f,b
 13199  012F98  D786               	goto	l12576
 13200  012F9A                     l12588:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;ChargeStation_task.c: 268: }
 13204                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13205  012F9A  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13206  012F9E  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13207  012FA2  0EBB               	movlw	low (STR_23+35)
 13208  012FA4  0100               	movlb	0	; () banked
 13209  012FA6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13210  012FA8  0EFD               	movlw	high (STR_23+35)
 13211  012FAA  0100               	movlb	0	; () banked
 13212  012FAC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13213  012FAE  ECE6  F0B0         	call	_ringbuf_put_str	;wreg free
 13214  012FB2  0012               	return		;funcret
 13215  012FB4                     __end_of_data_out:
 13216                           	opt stack 0
 13217                           tblptru	equ	0xFF8
 13218                           tblptrh	equ	0xFF7
 13219                           tblptrl	equ	0xFF6
 13220                           tablat	equ	0xFF5
 13221                           prodh	equ	0xFF4
 13222                           prodl	equ	0xFF3
 13223                           intcon	equ	0xFF2
 13224                           postinc0	equ	0xFEE
 13225                           wreg	equ	0xFE8
 13226                           indf1	equ	0xFE7
 13227                           postinc1	equ	0xFE6
 13228                           postdec1	equ	0xFE5
 13229                           fsr1h	equ	0xFE2
 13230                           fsr1l	equ	0xFE1
 13231                           indf2	equ	0xFDF
 13232                           postinc2	equ	0xFDE
 13233                           postdec2	equ	0xFDD
 13234                           plusw2	equ	0xFDB
 13235                           fsr2h	equ	0xFDA
 13236                           fsr2l	equ	0xFD9
 13237                           status	equ	0xFD8
 13238                           
 13239 ;; *************** function _sprintf *****************
 13240 ;; Defined at:
 13241 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13244 ;;		 -> display_LCD@str_5594(20), data_out@str(30), print_time@str(30), print_time_dec@str(10), 
 13245 ;;		 -> display_dec@s(4), 
 13246 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13247 ;;		 -> STR_73(28), STR_72(9), STR_71(11), STR_70(6), 
 13248 ;;		 -> STR_68(24), STR_67(32), STR_23(37), STR_21(5), 
 13249 ;;		 -> STR_1(5), 
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;  val             4   67[BANK0 ] unsigned long 
 13252 ;;  tmpval          4    0        struct .
 13253 ;;  width           2   73[BANK0 ] int 
 13254 ;;  len             2   65[BANK0 ] unsigned int 
 13255 ;;  ap              2   63[BANK0 ] PTR void [1]
 13256 ;;		 -> ?_sprintf(2), 
 13257 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13258 ;;		 -> STR_118(7), display_LCD@onoff(10), display_LCD@port_char(120), data_out@p(6), 
 13259 ;;		 -> sp__ADC(2), weekday_3char(28), 
 13260 ;;  prec            2   59[BANK0 ] int 
 13261 ;;  c               1   72[BANK0 ] char 
 13262 ;;  flag            1   71[BANK0 ] unsigned char 
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  2   35[BANK0 ] int 
 13265 ;; Registers used:
 13266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13272 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13273 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13274 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13275 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13276 ;;Total ram usage:       40 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:   13
 13279 ;; This function calls:
 13280 ;;		___lldiv
 13281 ;;		___llmod
 13282 ;;		___wmul
 13283 ;;		_isdigit
 13284 ;; This function is called by:
 13285 ;;		_display_dec
 13286 ;;		_print_time
 13287 ;;		_data_out
 13288 ;;		_display_LCD
 13289 ;;		_print_time_dec
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text39
 13294  010000                     __ptext39:
 13295                           	opt stack 0
 13296  010000                     _sprintf:
 13297                           	opt stack 12
 13298                           
 13299                           ;doprnt.c: 494: va_list ap;
 13300                           ;doprnt.c: 499: signed char c;
 13301                           ;doprnt.c: 501: int width;
 13302                           ;doprnt.c: 504: int prec;
 13303                           ;doprnt.c: 508: unsigned char flag;
 13304                           ;doprnt.c: 523: union {
 13305                           ;doprnt.c: 524: unsigned long vd;
 13306                           ;doprnt.c: 525: double integ;
 13307                           ;doprnt.c: 526: } tmpval;
 13308                           ;doprnt.c: 528: unsigned long val;
 13309                           ;doprnt.c: 529: unsigned len;
 13310                           ;doprnt.c: 530: const char * cp;
 13311                           ;doprnt.c: 533: *ap = __va_start();
 13312                           
 13313                           ;incstack = 0
 13314  010000  0E87               	movlw	low (?_sprintf+4)
 13315  010002  0100               	movlb	0	; () banked
 13316  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13317  010006  0E00               	movlw	high (?_sprintf+4)
 13318  010008  0100               	movlb	0	; () banked
 13319  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13320                           
 13321                           ;doprnt.c: 536: while(c = *f++) {
 13322  01000C  D270               	goto	l11054
 13323  01000E                     l10908:
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;doprnt.c: 538: if(c != '%')
 13327  01000E  0E25               	movlw	37
 13328  010010  0100               	movlb	0	; () banked
 13329  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13330  010014  B4D8               	btfsc	status,2,c
 13331  010016  D00A               	goto	l10914
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;doprnt.c: 540: {
 13335                           ;doprnt.c: 541: ((*sp++ = (c)));
 13336  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13337  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13338  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13339                           
 13340                           ; BSR set to: 0
 13341  010024  0100               	movlb	0	; () banked
 13342  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13343  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13344                           
 13345                           ;doprnt.c: 542: continue;
 13346  01002A  D261               	goto	l11054
 13347  01002C                     l10914:
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;doprnt.c: 543: }
 13351                           ;doprnt.c: 546: width = 0;
 13352  01002C  0E00               	movlw	0
 13353  01002E  0100               	movlb	0	; () banked
 13354  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13355  010032  0E00               	movlw	0
 13356  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13357                           
 13358                           ;doprnt.c: 548: flag = 0;
 13359  010036  0E00               	movlw	0
 13360  010038  0100               	movlb	0	; () banked
 13361  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13362                           
 13363                           ; BSR set to: 0
 13364                           ;doprnt.c: 551: switch(*f) {
 13365                           
 13366                           ;doprnt.c: 550: for(;;) {
 13367  01003C  D005               	goto	l10920
 13368  01003E                     l10916:
 13369                           
 13370                           ;doprnt.c: 580: flag |= 0x04;
 13371  01003E  0100               	movlb	0	; () banked
 13372  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13373                           
 13374                           ;doprnt.c: 581: f++;
 13375  010042  0100               	movlb	0	; () banked
 13376  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13377  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13378  010048                     l10920:
 13379  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13380  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13381  010050                     	if	0	;tblptru may be non-zero
 13382  010050                     	endif
 13383  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13384  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13385  010052  6EF8               	movwf	tblptru,c
 13386  010054                     	endif
 13387  010054  0008               	tblrd		*
 13388  010056  50F5               	movf	tablat,w,c
 13389                           
 13390                           ; Switch size 1, requested type "space"
 13391                           ; Number of cases is 1, Range of values is 48 to 48
 13392                           ; switch strategies available:
 13393                           ; Name         Instructions Cycles
 13394                           ; simple_byte            4     3 (average)
 13395                           ;	Chosen strategy is simple_byte
 13396  010058  0A30               	xorlw	48	; case 48
 13397  01005A  B4D8               	btfsc	status,2,c
 13398  01005C  D7F0               	goto	l10916
 13399                           
 13400                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13401                           
 13402                           ;doprnt.c: 586: }
 13403                           
 13404                           ;doprnt.c: 585: break;
 13405  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13406  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13407  010066                     	if	0	;tblptru may be non-zero
 13408  010066                     	endif
 13409  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13410  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13411  010068  6EF8               	movwf	tblptru,c
 13412  01006A                     	endif
 13413  01006A  0008               	tblrd		*
 13414  01006C  50F5               	movf	tablat,w,c
 13415  01006E  EC5C  F0B5         	call	_isdigit
 13416  010072  A0D8               	btfss	status,0,c
 13417  010074  D0E0               	goto	l10972
 13418                           
 13419                           ;doprnt.c: 598: width = 0;
 13420  010076  0E00               	movlw	0
 13421  010078  0100               	movlb	0	; () banked
 13422  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13423  01007C  0E00               	movlw	0
 13424  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13425  010080                     l10926:
 13426                           
 13427                           ;doprnt.c: 600: width *= 10;
 13428  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13429  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13430  010088  0E00               	movlw	0
 13431  01008A  0100               	movlb	0	; () banked
 13432  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13433  01008E  0E0A               	movlw	10
 13434  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13435  010092  EC71  F0B4         	call	___wmul	;wreg free
 13436  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13437  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13438                           
 13439                           ;doprnt.c: 601: width += *f++ - '0';
 13440  01009E  0ED0               	movlw	208
 13441  0100A0  0100               	movlb	0	; () banked
 13442  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13443  0100A4  0EFF               	movlw	255
 13444  0100A6  0100               	movlb	0	; () banked
 13445  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13446  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13447  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13448  0100B2                     	if	0	;tblptru may be non-zero
 13449  0100B2                     	endif
 13450  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13451  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13452  0100B4  6EF8               	movwf	tblptru,c
 13453  0100B6                     	endif
 13454  0100B6  0008               	tblrd		*
 13455  0100B8  50F5               	movf	tablat,w,c
 13456  0100BA  0100               	movlb	0	; () banked
 13457  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13458  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13459  0100C0  0100               	movlb	0	; () banked
 13460  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13461  0100C4  0100               	movlb	0	; () banked
 13462  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13463  0100C8  0100               	movlb	0	; () banked
 13464  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13465  0100CC  0100               	movlb	0	; () banked
 13466  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13467  0100D0  0100               	movlb	0	; () banked
 13468  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13469  0100D4  0100               	movlb	0	; () banked
 13470  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13471  0100D8  0100               	movlb	0	; () banked
 13472  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13473  0100DC  0100               	movlb	0	; () banked
 13474  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13475                           
 13476                           ; BSR set to: 0
 13477  0100E0  0100               	movlb	0	; () banked
 13478  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13479  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13483  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13484  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13485  0100EE                     	if	0	;tblptru may be non-zero
 13486  0100EE                     	endif
 13487  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13488  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13489  0100F0  6EF8               	movwf	tblptru,c
 13490  0100F2                     	endif
 13491  0100F2  0008               	tblrd		*
 13492  0100F4  50F5               	movf	tablat,w,c
 13493  0100F6  EC5C  F0B5         	call	_isdigit
 13494  0100FA  A0D8               	btfss	status,0,c
 13495  0100FC  D09C               	goto	l10972
 13496  0100FE  D7C0               	goto	l10926
 13497  010100                     l10934:
 13498                           
 13499                           ;doprnt.c: 643: flag |= 0x10;
 13500  010100  0100               	movlb	0	; () banked
 13501  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13502                           
 13503                           ;doprnt.c: 644: goto loop;
 13504  010104  D098               	goto	l10972
 13505  010106                     l10936:
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13509  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13510  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13511  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13512  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13513                           
 13514                           ; BSR set to: 0
 13515  010116  0E02               	movlw	2
 13516  010118  0100               	movlb	0	; () banked
 13517  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13518  01011C  0E00               	movlw	0
 13519  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;doprnt.c: 740: if(!cp)
 13523  010120  0100               	movlb	0	; () banked
 13524  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13525  010124  0100               	movlb	0	; () banked
 13526  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13527  010128  A4D8               	btfss	status,2,c
 13528  01012A  D006               	goto	l10944
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;doprnt.c: 741: cp = "(null)";
 13532  01012C  0E8A               	movlw	low STR_118
 13533  01012E  0100               	movlb	0	; () banked
 13534  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13535  010132  0EFF               	movlw	high STR_118
 13536  010134  0100               	movlb	0	; () banked
 13537  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13538  010138                     l10944:
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;doprnt.c: 745: len = 0;
 13542  010138  0E00               	movlw	0
 13543  01013A  0100               	movlb	0	; () banked
 13544  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13545  01013E  0E00               	movlw	0
 13546  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13547                           
 13548                           ;doprnt.c: 746: while(cp[len])
 13549  010142  D003               	goto	l10948
 13550  010144                     l10946:
 13551                           
 13552                           ;doprnt.c: 747: len++;
 13553  010144  0100               	movlb	0	; () banked
 13554  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13555  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13556  01014A                     l10948:
 13557                           
 13558                           ; BSR set to: 0
 13559  01014A  0100               	movlb	0	; () banked
 13560  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13561  01014E  0100               	movlb	0	; () banked
 13562  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13563  010152  0100               	movlb	0	; () banked
 13564  010154  6F97               	movwf	??_sprintf& (0+255),b
 13565  010156  0100               	movlb	0	; () banked
 13566  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13567  01015A  0100               	movlb	0	; () banked
 13568  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13569  01015E  0100               	movlb	0	; () banked
 13570  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13571  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13572  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13573  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13574  01016C  6EF8               	movwf	tblptru,c
 13575  01016E  0E0E               	movlw	(high __ramtop+-1)
 13576  010170  64F7               	cpfsgt	tblptrh,c
 13577  010172  D003               	bra	u11867
 13578  010174  0008               	tblrd		*
 13579  010176  50F5               	movf	tablat,w,c
 13580  010178  D005               	bra	u11860
 13581  01017A                     u11867:
 13582  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13583  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13584  010182  50E7               	movf	indf1,w,c
 13585  010184                     u11860:
 13586  010184  0900               	iorlw	0
 13587  010186  A4D8               	btfss	status,2,c
 13588  010188  D7DD               	goto	l10946
 13589                           
 13590                           ;doprnt.c: 757: if(width > len)
 13591  01018A  0100               	movlb	0	; () banked
 13592  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13593  01018E  0100               	movlb	0	; () banked
 13594  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13595  010192  0100               	movlb	0	; () banked
 13596  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13597  010196  0100               	movlb	0	; () banked
 13598  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13599  01019A  B0D8               	btfsc	status,0,c
 13600  01019C  D009               	goto	l10954
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;doprnt.c: 758: width -= len;
 13604  01019E  0100               	movlb	0	; () banked
 13605  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13606  0101A2  0100               	movlb	0	; () banked
 13607  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13608  0101A6  0100               	movlb	0	; () banked
 13609  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13610  0101AA  0100               	movlb	0	; () banked
 13611  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13612  0101AE  D00F               	goto	l10960
 13613  0101B0                     l10954:
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;doprnt.c: 759: else
 13617                           ;doprnt.c: 760: width = 0;
 13618  0101B0  0E00               	movlw	0
 13619  0101B2  0100               	movlb	0	; () banked
 13620  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13621  0101B6  0E00               	movlw	0
 13622  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;doprnt.c: 764: while(width--)
 13626  0101BA  D009               	goto	l10960
 13627  0101BC                     l10956:
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13631  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13632  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13633  0101C4  0E20               	movlw	32
 13634  0101C6  6EDF               	movwf	indf2,c
 13635                           
 13636                           ; BSR set to: 0
 13637  0101C8  0100               	movlb	0	; () banked
 13638  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13639  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13640  0101CE                     l10960:
 13641                           
 13642                           ; BSR set to: 0
 13643  0101CE  0100               	movlb	0	; () banked
 13644  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13645  0101D2  A0D8               	btfss	status,0,c
 13646  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13647  0101D6  0100               	movlb	0	; () banked
 13648  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13649  0101DA  E1F0               	bnz	l10956
 13650  0101DC  0100               	movlb	0	; () banked
 13651  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13652  0101E0  B4D8               	btfsc	status,2,c
 13653  0101E2  D01D               	goto	l10968
 13654  0101E4  D7EB               	goto	l10956
 13655  0101E6                     l10962:
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13659  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13660  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13661  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13662  0101F0  6EF8               	movwf	tblptru,c
 13663  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13664  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13665  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13666  0101FC  64F7               	cpfsgt	tblptrh,c
 13667  0101FE  D003               	bra	u11907
 13668  010200  0008               	tblrd		*
 13669  010202  50F5               	movf	tablat,w,c
 13670  010204  D005               	bra	u11900
 13671  010206                     u11907:
 13672  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 13673  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13674  01020E  50E7               	movf	indf1,w,c
 13675  010210                     u11900:
 13676  010210  6EDF               	movwf	indf2,c
 13677  010212  0100               	movlb	0	; () banked
 13678  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13679  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13680                           
 13681                           ; BSR set to: 0
 13682  010218  0100               	movlb	0	; () banked
 13683  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13684  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13685  01021E                     l10968:
 13686                           
 13687                           ; BSR set to: 0
 13688  01021E  0100               	movlb	0	; () banked
 13689  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13690  010222  A0D8               	btfss	status,0,c
 13691  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13692  010226  0100               	movlb	0	; () banked
 13693  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13694  01022A  E1DD               	bnz	l10962
 13695  01022C  0100               	movlb	0	; () banked
 13696  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13697  010230  B4D8               	btfsc	status,2,c
 13698  010232  D15D               	goto	l11054
 13699  010234  D7D8               	goto	l10962
 13700  010236                     l10972:
 13701  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13702  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13703  01023E  0100               	movlb	0	; () banked
 13704  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13705  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13706  010244                     	if	0	;tblptru may be non-zero
 13707  010244                     	endif
 13708  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13709  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13710  010246  6EF8               	movwf	tblptru,c
 13711  010248                     	endif
 13712  010248  0008               	tblrd		*
 13713  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13714  01024E  0100               	movlb	0	; () banked
 13715  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13716                           
 13717                           ; Switch size 1, requested type "space"
 13718                           ; Number of cases is 5, Range of values is 0 to 115
 13719                           ; switch strategies available:
 13720                           ; Name         Instructions Cycles
 13721                           ; simple_byte           16     9 (average)
 13722                           ;	Chosen strategy is simple_byte
 13723  010252  0A00               	xorlw	0	; case 0
 13724  010254  B4D8               	btfsc	status,2,c
 13725  010256  D15B               	goto	l11056
 13726  010258  0A64               	xorlw	100	; case 100
 13727  01025A  B4D8               	btfsc	status,2,c
 13728  01025C  D00A               	goto	l1987
 13729  01025E  0A0D               	xorlw	13	; case 105
 13730  010260  B4D8               	btfsc	status,2,c
 13731  010262  D007               	goto	l1987
 13732  010264  0A05               	xorlw	5	; case 108
 13733  010266  B4D8               	btfsc	status,2,c
 13734  010268  D74B               	goto	l10934
 13735  01026A  0A1F               	xorlw	31	; case 115
 13736  01026C  B4D8               	btfsc	status,2,c
 13737  01026E  D74B               	goto	l10936
 13738  010270  D13E               	goto	l11054
 13739  010272                     l1987:
 13740                           
 13741                           ; BSR set to: 0
 13742                           ;doprnt.c: 1253: {
 13743                           ;doprnt.c: 1255: if(flag & 0x10)
 13744  010272  0100               	movlb	0	; () banked
 13745  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13746  010276  D00E               	goto	l10978
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13750  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13751  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13752  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13753  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13754  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13755  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13756                           
 13757                           ; BSR set to: 0
 13758  010290  0E04               	movlw	4
 13759  010292  D00F               	goto	L3
 13760  010294                     l10978:
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;doprnt.c: 1257: else
 13764                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13765  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13766  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13767  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13768  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13769  0102A4  0100               	movlb	0	; () banked
 13770  0102A6  0E00               	movlw	0
 13771  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13772  0102AA  0EFF               	movlw	-1
 13773  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13774  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13775                           
 13776                           ; BSR set to: 0
 13777  0102B0  0E02               	movlw	2
 13778  0102B2                     L3:
 13779  0102B2  0100               	movlb	0	; () banked
 13780  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13781  0102B6  0E00               	movlw	0
 13782  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13783                           
 13784                           ; BSR set to: 0
 13785                           ;doprnt.c: 1261: if((long)val < 0) {
 13786                           
 13787                           ; BSR set to: 0
 13788  0102BA  0100               	movlb	0	; () banked
 13789  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13790  0102BE  D00C               	goto	l10988
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;doprnt.c: 1262: flag |= 0x03;
 13794  0102C0  0E03               	movlw	3
 13795  0102C2  0100               	movlb	0	; () banked
 13796  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;doprnt.c: 1263: val = -val;
 13800  0102C6  0100               	movlb	0	; () banked
 13801  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13802  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13803  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13804  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13805  0102D0  0E00               	movlw	0
 13806  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13807  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13808  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13809  0102D8                     l10988:
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;doprnt.c: 1264: }
 13813                           ;doprnt.c: 1266: }
 13814                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13815  0102D8  0E01               	movlw	1
 13816  0102DA  0100               	movlb	0	; () banked
 13817  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13818  0102DE                     l10990:
 13819                           
 13820                           ; BSR set to: 0
 13821  0102DE  0E0A               	movlw	10
 13822  0102E0  0100               	movlb	0	; () banked
 13823  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13824  0102E4  B4D8               	btfsc	status,2,c
 13825  0102E6  D021               	goto	l11002
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;doprnt.c: 1306: if(val < dpowers[c])
 13829                           
 13830                           ; BSR set to: 0
 13831                           
 13832                           ; BSR set to: 0
 13833  0102E8  0100               	movlb	0	; () banked
 13834  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13835  0102EC  0D04               	mullw	4
 13836  0102EE  0E51               	movlw	low _dpowers
 13837  0102F0  24F3               	addwf	prodl,w,c
 13838  0102F2  6EF6               	movwf	tblptrl,c
 13839  0102F4  0EFA               	movlw	high _dpowers
 13840  0102F6  20F4               	addwfc	prodh,w,c
 13841  0102F8  6EF7               	movwf	tblptrh,c
 13842  0102FA                     	if	1	;There are 3 active tblptr bytes
 13843  0102FA  6AF8               	clrf	tblptru,c
 13844  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13845  0102FE  22F8               	addwfc	tblptru,f,c
 13846  010300                     	endif
 13847  010300  0009               	tblrd		*+
 13848  010302  50F5               	movf	tablat,w,c
 13849  010304  0100               	movlb	0	; () banked
 13850  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13851  010308  0009               	tblrd		*+
 13852  01030A  50F5               	movf	tablat,w,c
 13853  01030C  0100               	movlb	0	; () banked
 13854  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 13855  010310  0009               	tblrd		*+
 13856  010312  50F5               	movf	tablat,w,c
 13857  010314  0100               	movlb	0	; () banked
 13858  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 13859  010318  0009               	tblrd		*+
 13860  01031A  50F5               	movf	tablat,w,c
 13861  01031C  0100               	movlb	0	; () banked
 13862  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 13863  010320  A0D8               	btfss	status,0,c
 13864  010322  D003               	goto	l11002
 13865                           
 13866                           ; BSR set to: 0
 13867                           
 13868                           ; BSR set to: 0
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;doprnt.c: 1307: break;
 13872  010324  0100               	movlb	0	; () banked
 13873  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 13874  010328  D7DA               	goto	l10990
 13875  01032A                     l11002:
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13879  01032A  0100               	movlb	0	; () banked
 13880  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 13881  01032E  0100               	movlb	0	; () banked
 13882  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13883  010332  B4D8               	btfsc	status,2,c
 13884  010334  D00B               	goto	l11008
 13885                           
 13886                           ; BSR set to: 0
 13887  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13888  01033A  0E03               	movlw	3
 13889  01033C  0100               	movlb	0	; () banked
 13890  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 13891  010340  B4D8               	btfsc	status,2,c
 13892  010342  D004               	goto	l11008
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;doprnt.c: 1346: width--;
 13896  010344  0100               	movlb	0	; () banked
 13897  010346  07A9               	decf	sprintf@width& (0+255),f,b
 13898  010348  A0D8               	btfss	status,0,c
 13899  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13900  01034C                     l11008:
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;doprnt.c: 1381: if(width > c)
 13904  01034C  0E80               	movlw	128
 13905  01034E  0100               	movlb	0	; () banked
 13906  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13907  010352  0E7F               	movlw	127
 13908  010354  0100               	movlb	0	; () banked
 13909  010356  6F97               	movwf	??_sprintf& (0+255),b
 13910  010358  0100               	movlb	0	; () banked
 13911  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 13912  01035C  0100               	movlb	0	; () banked
 13913  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 13914  010360  0100               	movlb	0	; () banked
 13915  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13916  010364  0A80               	xorlw	128
 13917  010366  0100               	movlb	0	; () banked
 13918  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 13919  01036A  B0D8               	btfsc	status,0,c
 13920  01036C  D00B               	goto	l11012
 13921                           
 13922                           ; BSR set to: 0
 13923                           ;doprnt.c: 1382: width -= c;
 13924  01036E  0100               	movlb	0	; () banked
 13925  010370  51A8               	movf	sprintf@c& (0+255),w,b
 13926  010372  0100               	movlb	0	; () banked
 13927  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 13928  010376  0E00               	movlw	0
 13929  010378  0100               	movlb	0	; () banked
 13930  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13931  01037C  0EFF               	movlw	255
 13932  01037E  0100               	movlb	0	; () banked
 13933  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13934  010382  D005               	goto	l11014
 13935  010384                     l11012:
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;doprnt.c: 1383: else
 13939                           ;doprnt.c: 1384: width = 0;
 13940  010384  0E00               	movlw	0
 13941  010386  0100               	movlb	0	; () banked
 13942  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13943  01038A  0E00               	movlw	0
 13944  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 13945  01038E                     l11014:
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;doprnt.c: 1387: if(flag & 0x04) {
 13949  01038E  0100               	movlb	0	; () banked
 13950  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 13951  010392  D024               	goto	l11030
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;doprnt.c: 1392: if(flag & 0x03)
 13955  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13956  010398  0E03               	movlw	3
 13957  01039A  0100               	movlb	0	; () banked
 13958  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 13959  01039E  B4D8               	btfsc	status,2,c
 13960  0103A0  D009               	goto	l11022
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 13964  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13965  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13966  0103AA  0E2D               	movlw	45
 13967  0103AC  6EDF               	movwf	indf2,c
 13968                           
 13969                           ; BSR set to: 0
 13970  0103AE  0100               	movlb	0	; () banked
 13971  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13972  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13973  0103B4                     l11022:
 13974                           
 13975                           ; BSR set to: 0
 13976                           ;doprnt.c: 1415: if(width)
 13977  0103B4  0100               	movlb	0	; () banked
 13978  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 13979  0103B8  0100               	movlb	0	; () banked
 13980  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13981  0103BC  B4D8               	btfsc	status,2,c
 13982  0103BE  D037               	goto	l11044
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 13986                           
 13987                           ; BSR set to: 0
 13988                           
 13989                           ;doprnt.c: 1416: do
 13990  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 13991  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13992  0103C8  0E30               	movlw	48
 13993  0103CA  6EDF               	movwf	indf2,c
 13994                           
 13995                           ; BSR set to: 0
 13996  0103CC  0100               	movlb	0	; () banked
 13997  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13998  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;doprnt.c: 1418: while(--width);
 14002  0103D2  0100               	movlb	0	; () banked
 14003  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 14004  0103D6  A0D8               	btfss	status,0,c
 14005  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14006  0103DA  D7EC               	goto	l11022
 14007  0103DC                     l11030:
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;doprnt.c: 1422: {
 14011                           ;doprnt.c: 1424: if(width
 14012                           ;doprnt.c: 1428: )
 14013  0103DC  0100               	movlb	0	; () banked
 14014  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 14015  0103E0  0100               	movlb	0	; () banked
 14016  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14017  0103E4  B4D8               	btfsc	status,2,c
 14018  0103E6  D013               	goto	l11038
 14019  0103E8                     l11032:
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14023  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 14024  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14025  0103F0  0E20               	movlw	32
 14026  0103F2  6EDF               	movwf	indf2,c
 14027                           
 14028                           ; BSR set to: 0
 14029  0103F4  0100               	movlb	0	; () banked
 14030  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14031  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;doprnt.c: 1431: while(--width);
 14035  0103FA  0100               	movlb	0	; () banked
 14036  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 14037  0103FE  A0D8               	btfss	status,0,c
 14038  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14039  010402  0100               	movlb	0	; () banked
 14040  010404  51A9               	movf	sprintf@width& (0+255),w,b
 14041  010406  0100               	movlb	0	; () banked
 14042  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14043  01040A  A4D8               	btfss	status,2,c
 14044  01040C  D7ED               	goto	l11032
 14045  01040E                     l11038:
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;doprnt.c: 1438: if(flag & 0x03)
 14049  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14050  010412  0E03               	movlw	3
 14051  010414  0100               	movlb	0	; () banked
 14052  010416  1797               	andwf	??_sprintf& (0+255),f,b
 14053  010418  B4D8               	btfsc	status,2,c
 14054  01041A  D009               	goto	l11044
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14058  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14059  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14060  010424  0E2D               	movlw	45
 14061  010426  6EDF               	movwf	indf2,c
 14062                           
 14063                           ; BSR set to: 0
 14064  010428  0100               	movlb	0	; () banked
 14065  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14066  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14067  01042E                     l11044:
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;doprnt.c: 1469: }
 14071                           ;doprnt.c: 1472: prec = c;
 14072  01042E  0100               	movlb	0	; () banked
 14073  010430  51A8               	movf	sprintf@c& (0+255),w,b
 14074  010432  0100               	movlb	0	; () banked
 14075  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 14076  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14077  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14078  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14079                           
 14080                           ;doprnt.c: 1474: while(prec--) {
 14081  01043C  D04D               	goto	l11052
 14082  01043E                     l11046:
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;doprnt.c: 1478: {
 14086                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14087  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 14088  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14089  010446  0100               	movlb	0	; () banked
 14090  010448  90D8               	bcf	status,0,c
 14091  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 14092  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14093  01044E  0100               	movlb	0	; () banked
 14094  010450  90D8               	bcf	status,0,c
 14095  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 14096  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14097  010456  0E51               	movlw	low _dpowers
 14098  010458  0100               	movlb	0	; () banked
 14099  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 14100  01045C  6EF6               	movwf	tblptrl,c
 14101  01045E  0EFA               	movlw	high _dpowers
 14102  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14103  010462  6EF7               	movwf	tblptrh,c
 14104  010464                     	if	1	;There are 3 active tblptr bytes
 14105  010464  6AF8               	clrf	tblptru,c
 14106  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 14107  010468  22F8               	addwfc	tblptru,f,c
 14108  01046A                     	endif
 14109  01046A  0009               	tblrd		*+
 14110  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 14111  010470  0009               	tblrd		*+
 14112  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14113  010476  0009               	tblrd		*+
 14114  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14115  01047C  000A               	tblrd		*-
 14116  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14117  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14118  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14119  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14120  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14121  010492  EC46  F0AA         	call	___lldiv	;wreg free
 14122  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14123  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14124  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14125  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14126  0104A6  0E0A               	movlw	10
 14127  0104A8  0100               	movlb	0	; () banked
 14128  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14129  0104AC  0E00               	movlw	0
 14130  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14131  0104B0  0E00               	movlw	0
 14132  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14133  0104B4  0E00               	movlw	0
 14134  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14135  0104B8  ECA9  F0AC         	call	___llmod	;wreg free
 14136  0104BC  0100               	movlb	0	; () banked
 14137  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14138  0104C0  0F30               	addlw	48
 14139  0104C2  0100               	movlb	0	; () banked
 14140  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14141                           
 14142                           ; BSR set to: 0
 14143                           ;doprnt.c: 1523: }
 14144                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14145  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14146  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14147  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14148                           
 14149                           ; BSR set to: 0
 14150  0104D2  0100               	movlb	0	; () banked
 14151  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14152  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14153  0104D8                     l11052:
 14154                           
 14155                           ; BSR set to: 0
 14156  0104D8  0100               	movlb	0	; () banked
 14157  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14158  0104DC  A0D8               	btfss	status,0,c
 14159  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14160  0104E0  0100               	movlb	0	; () banked
 14161  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14162  0104E4  E1AC               	bnz	l11046
 14163  0104E6  0100               	movlb	0	; () banked
 14164  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14165  0104EA  A4D8               	btfss	status,2,c
 14166  0104EC  D7A8               	goto	l11046
 14167  0104EE                     l11054:
 14168                           
 14169                           ; BSR set to: 0
 14170  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14171  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14172  0104F6  0100               	movlb	0	; () banked
 14173  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14174  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14175  0104FC                     	if	0	;tblptru may be non-zero
 14176  0104FC                     	endif
 14177  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14178  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14179  0104FE  6EF8               	movwf	tblptru,c
 14180  010500                     	endif
 14181  010500  0008               	tblrd		*
 14182  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14183  010506  0100               	movlb	0	; () banked
 14184  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14185  01050A  A4D8               	btfss	status,2,c
 14186  01050C  D580               	goto	l10908
 14187  01050E                     l11056:
 14188                           
 14189                           ;doprnt.c: 1538: *sp = 0;
 14190  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14191  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14192  010516  0E00               	movlw	0
 14193  010518  6EDF               	movwf	indf2,c
 14194  01051A  0012               	return	
 14195  01051C                     __end_of_sprintf:
 14196                           	opt stack 0
 14197                           tblptru	equ	0xFF8
 14198                           tblptrh	equ	0xFF7
 14199                           tblptrl	equ	0xFF6
 14200                           tablat	equ	0xFF5
 14201                           prodh	equ	0xFF4
 14202                           prodl	equ	0xFF3
 14203                           intcon	equ	0xFF2
 14204                           postinc0	equ	0xFEE
 14205                           wreg	equ	0xFE8
 14206                           indf1	equ	0xFE7
 14207                           postinc1	equ	0xFE6
 14208                           postdec1	equ	0xFE5
 14209                           fsr1h	equ	0xFE2
 14210                           fsr1l	equ	0xFE1
 14211                           indf2	equ	0xFDF
 14212                           postinc2	equ	0xFDE
 14213                           postdec2	equ	0xFDD
 14214                           plusw2	equ	0xFDB
 14215                           fsr2h	equ	0xFDA
 14216                           fsr2l	equ	0xFD9
 14217                           status	equ	0xFD8
 14218                           
 14219 ;; *************** function _isdigit *****************
 14220 ;; Defined at:
 14221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;  c               1    wreg     unsigned char 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  c               1    2[BANK0 ] unsigned char 
 14226 ;; Return value:  Size  Location     Type
 14227 ;;		None               void
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14238 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14239 ;;Total ram usage:        3 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:   12
 14242 ;; This function calls:
 14243 ;;		Nothing
 14244 ;; This function is called by:
 14245 ;;		_sprintf
 14246 ;;		_atoi
 14247 ;; This function uses a non-reentrant model
 14248 ;;
 14249                           
 14250                           	psect	text40
 14251  016AB8                     __ptext40:
 14252                           	opt stack 0
 14253  016AB8                     _isdigit:
 14254                           	opt stack 12
 14255                           
 14256                           ;incstack = 0
 14257                           ;isdigit@c stored from wreg
 14258  016AB8  0100               	movlb	0	; () banked
 14259  016ABA  6F62               	movwf	isdigit@c& (0+255),b
 14260  016ABC  0E00               	movlw	0
 14261  016ABE  0100               	movlb	0	; () banked
 14262  016AC0  6F61               	movwf	_isdigit$6428& (0+255),b
 14263                           
 14264                           ; BSR set to: 0
 14265  016AC2  0E3A               	movlw	58
 14266  016AC4  0100               	movlb	0	; () banked
 14267  016AC6  6162               	cpfslt	isdigit@c& (0+255),b
 14268  016AC8  D007               	goto	l10762
 14269                           
 14270                           ; BSR set to: 0
 14271  016ACA  0E2F               	movlw	47
 14272  016ACC  0100               	movlb	0	; () banked
 14273  016ACE  6562               	cpfsgt	isdigit@c& (0+255),b
 14274  016AD0  D003               	goto	l10762
 14275                           
 14276                           ; BSR set to: 0
 14277  016AD2  0E01               	movlw	1
 14278  016AD4  0100               	movlb	0	; () banked
 14279  016AD6  6F61               	movwf	_isdigit$6428& (0+255),b
 14280  016AD8                     l10762:
 14281                           
 14282                           ; BSR set to: 0
 14283  016AD8  C061  F060         	movff	_isdigit$6428,??_isdigit
 14284  016ADC  0100               	movlb	0	; () banked
 14285  016ADE  3160               	rrcf	??_isdigit& (0+255),w,b
 14286  016AE0  0012               	return	
 14287  016AE2                     __end_of_isdigit:
 14288                           	opt stack 0
 14289                           tblptru	equ	0xFF8
 14290                           tblptrh	equ	0xFF7
 14291                           tblptrl	equ	0xFF6
 14292                           tablat	equ	0xFF5
 14293                           prodh	equ	0xFF4
 14294                           prodl	equ	0xFF3
 14295                           intcon	equ	0xFF2
 14296                           postinc0	equ	0xFEE
 14297                           wreg	equ	0xFE8
 14298                           indf1	equ	0xFE7
 14299                           postinc1	equ	0xFE6
 14300                           postdec1	equ	0xFE5
 14301                           fsr1h	equ	0xFE2
 14302                           fsr1l	equ	0xFE1
 14303                           indf2	equ	0xFDF
 14304                           postinc2	equ	0xFDE
 14305                           postdec2	equ	0xFDD
 14306                           plusw2	equ	0xFDB
 14307                           fsr2h	equ	0xFDA
 14308                           fsr2l	equ	0xFD9
 14309                           status	equ	0xFD8
 14310                           
 14311 ;; *************** function ___llmod *****************
 14312 ;; Defined at:
 14313 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;  dividend        4   13[BANK0 ] unsigned long 
 14316 ;;  divisor         4   17[BANK0 ] unsigned long 
 14317 ;; Auto vars:     Size  Location     Type
 14318 ;;  counter         1   21[BANK0 ] unsigned char 
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  4   13[BANK0 ] unsigned long 
 14321 ;; Registers used:
 14322 ;;		wreg, status,2, status,0
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14328 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14331 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14332 ;;Total ram usage:        9 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:   12
 14335 ;; This function calls:
 14336 ;;		Nothing
 14337 ;; This function is called by:
 14338 ;;		_display_LCD
 14339 ;;		_sprintf
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text41
 14344  015952                     __ptext41:
 14345                           	opt stack 0
 14346  015952                     ___llmod:
 14347                           	opt stack 12
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;incstack = 0
 14351  015952  0100               	movlb	0	; () banked
 14352  015954  5171               	movf	___llmod@divisor& (0+255),w,b
 14353  015956  0100               	movlb	0	; () banked
 14354  015958  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14355  01595A  0100               	movlb	0	; () banked
 14356  01595C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14357  01595E  0100               	movlb	0	; () banked
 14358  015960  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14359  015962  B4D8               	btfsc	status,2,c
 14360  015964  D03A               	goto	l2405
 14361                           
 14362                           ; BSR set to: 0
 14363  015966  0E01               	movlw	1
 14364  015968  0100               	movlb	0	; () banked
 14365  01596A  6F75               	movwf	___llmod@counter& (0+255),b
 14366  01596C  D008               	goto	l10778
 14367  01596E                     l10776:
 14368                           
 14369                           ; BSR set to: 0
 14370  01596E  0100               	movlb	0	; () banked
 14371  015970  90D8               	bcf	status,0,c
 14372  015972  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14373  015974  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14374  015976  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14375  015978  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14376  01597A  0100               	movlb	0	; () banked
 14377  01597C  2B75               	incf	___llmod@counter& (0+255),f,b
 14378  01597E                     l10778:
 14379                           
 14380                           ; BSR set to: 0
 14381  01597E  0100               	movlb	0	; () banked
 14382  015980  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14383  015982  D7F5               	goto	l10776
 14384  015984                     l10780:
 14385                           
 14386                           ; BSR set to: 0
 14387  015984  0100               	movlb	0	; () banked
 14388  015986  5171               	movf	___llmod@divisor& (0+255),w,b
 14389  015988  0100               	movlb	0	; () banked
 14390  01598A  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14391  01598C  0100               	movlb	0	; () banked
 14392  01598E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14393  015990  0100               	movlb	0	; () banked
 14394  015992  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14395  015994  0100               	movlb	0	; () banked
 14396  015996  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14397  015998  0100               	movlb	0	; () banked
 14398  01599A  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14399  01599C  0100               	movlb	0	; () banked
 14400  01599E  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14401  0159A0  0100               	movlb	0	; () banked
 14402  0159A2  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14403  0159A4  A0D8               	btfss	status,0,c
 14404  0159A6  D010               	goto	l10784
 14405                           
 14406                           ; BSR set to: 0
 14407  0159A8  0100               	movlb	0	; () banked
 14408  0159AA  5171               	movf	___llmod@divisor& (0+255),w,b
 14409  0159AC  0100               	movlb	0	; () banked
 14410  0159AE  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14411  0159B0  0100               	movlb	0	; () banked
 14412  0159B2  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14413  0159B4  0100               	movlb	0	; () banked
 14414  0159B6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14415  0159B8  0100               	movlb	0	; () banked
 14416  0159BA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14417  0159BC  0100               	movlb	0	; () banked
 14418  0159BE  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14419  0159C0  0100               	movlb	0	; () banked
 14420  0159C2  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14421  0159C4  0100               	movlb	0	; () banked
 14422  0159C6  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14423  0159C8                     l10784:
 14424                           
 14425                           ; BSR set to: 0
 14426  0159C8  0100               	movlb	0	; () banked
 14427  0159CA  90D8               	bcf	status,0,c
 14428  0159CC  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14429  0159CE  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14430  0159D0  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14431  0159D2  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14432                           
 14433                           ; BSR set to: 0
 14434  0159D4  0100               	movlb	0	; () banked
 14435  0159D6  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14436  0159D8  D7D5               	goto	l10780
 14437  0159DA                     l2405:
 14438                           
 14439                           ; BSR set to: 0
 14440  0159DA  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14441  0159DE  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14442  0159E2  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14443  0159E6  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14444                           
 14445                           ; BSR set to: 0
 14446  0159EA  0012               	return		;funcret
 14447  0159EC                     __end_of___llmod:
 14448                           	opt stack 0
 14449                           tblptru	equ	0xFF8
 14450                           tblptrh	equ	0xFF7
 14451                           tblptrl	equ	0xFF6
 14452                           tablat	equ	0xFF5
 14453                           prodh	equ	0xFF4
 14454                           prodl	equ	0xFF3
 14455                           intcon	equ	0xFF2
 14456                           postinc0	equ	0xFEE
 14457                           wreg	equ	0xFE8
 14458                           indf1	equ	0xFE7
 14459                           postinc1	equ	0xFE6
 14460                           postdec1	equ	0xFE5
 14461                           fsr1h	equ	0xFE2
 14462                           fsr1l	equ	0xFE1
 14463                           indf2	equ	0xFDF
 14464                           postinc2	equ	0xFDE
 14465                           postdec2	equ	0xFDD
 14466                           plusw2	equ	0xFDB
 14467                           fsr2h	equ	0xFDA
 14468                           fsr2l	equ	0xFD9
 14469                           status	equ	0xFD8
 14470                           
 14471 ;; *************** function _ringbuf_put_str *****************
 14472 ;; Defined at:
 14473 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14476 ;;		 -> usb_tx(8), 
 14477 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14478 ;;		 -> STR_69(2), data_out@str(30), STR_66(18), STR_63(36), 
 14479 ;;		 -> STR_62(24), STR_53(434), STR_24(8), print_time@str(30), 
 14480 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;		None
 14483 ;; Return value:  Size  Location     Type
 14484 ;;		None               void
 14485 ;; Registers used:
 14486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14487 ;; Tracked objects:
 14488 ;;		On entry : 0/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;Total ram usage:        4 bytes
 14497 ;; Hardware stack levels used:    1
 14498 ;; Hardware stack levels required when called:   14
 14499 ;; This function calls:
 14500 ;;		_ringbuf_put
 14501 ;; This function is called by:
 14502 ;;		_terminal_task
 14503 ;;		_print_time
 14504 ;;		_terminal_at_hand
 14505 ;;		_terminal_operation
 14506 ;;		_data_out
 14507 ;;		_print_time_dec
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511                           	psect	text42
 14512  0161CC                     __ptext42:
 14513                           	opt stack 0
 14514  0161CC                     _ringbuf_put_str:
 14515                           	opt stack 12
 14516                           
 14517                           ;My_ringbuf.c: 40: while (*str) {
 14518                           
 14519                           ; BSR set to: 0
 14520                           ;incstack = 0
 14521  0161CC  D01C               	goto	l10820
 14522  0161CE                     l10816:
 14523                           
 14524                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14525  0161CE  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14526  0161D2  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14527  0161D6  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14528  0161DA  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14529  0161DE  0E00               	movlw	low (__mediumconst shr (0+16))
 14530  0161E0  6EF8               	movwf	tblptru,c
 14531  0161E2  0E0E               	movlw	(high __ramtop+-1)
 14532  0161E4  64F7               	cpfsgt	tblptrh,c
 14533  0161E6  D003               	bra	u11757
 14534  0161E8  0008               	tblrd		*
 14535  0161EA  50F5               	movf	tablat,w,c
 14536  0161EC  D005               	bra	u11750
 14537  0161EE                     u11757:
 14538  0161EE  CFF6 FFE1          	movff	tblptrl,fsr1l
 14539  0161F2  CFF7 FFE2          	movff	tblptrh,fsr1h
 14540  0161F6  50E7               	movf	indf1,w,c
 14541  0161F8                     u11750:
 14542  0161F8  0100               	movlb	0	; () banked
 14543  0161FA  6F6A               	movwf	ringbuf_put@data& (0+255),b
 14544  0161FC  ECF2  F0A5         	call	_ringbuf_put	;wreg free
 14545  016200  0100               	movlb	0	; () banked
 14546  016202  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14547  016204  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14548  016206                     l10820:
 14549  016206  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14550  01620A  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14551  01620E  0E00               	movlw	low (__mediumconst shr (0+16))
 14552  016210  6EF8               	movwf	tblptru,c
 14553  016212  0E0E               	movlw	(high __ramtop+-1)
 14554  016214  64F7               	cpfsgt	tblptrh,c
 14555  016216  D003               	bra	u11767
 14556  016218  0008               	tblrd		*
 14557  01621A  50F5               	movf	tablat,w,c
 14558  01621C  D005               	bra	u11760
 14559  01621E                     u11767:
 14560  01621E  CFF6 FFE1          	movff	tblptrl,fsr1l
 14561  016222  CFF7 FFE2          	movff	tblptrh,fsr1h
 14562  016226  50E7               	movf	indf1,w,c
 14563  016228                     u11760:
 14564  016228  0900               	iorlw	0
 14565  01622A  B4D8               	btfsc	status,2,c
 14566  01622C  0012               	return	
 14567  01622E  D7CF               	goto	l10816
 14568  016230                     __end_of_ringbuf_put_str:
 14569                           	opt stack 0
 14570                           tblptru	equ	0xFF8
 14571                           tblptrh	equ	0xFF7
 14572                           tblptrl	equ	0xFF6
 14573                           tablat	equ	0xFF5
 14574                           prodh	equ	0xFF4
 14575                           prodl	equ	0xFF3
 14576                           intcon	equ	0xFF2
 14577                           postinc0	equ	0xFEE
 14578                           wreg	equ	0xFE8
 14579                           indf1	equ	0xFE7
 14580                           postinc1	equ	0xFE6
 14581                           postdec1	equ	0xFE5
 14582                           fsr1h	equ	0xFE2
 14583                           fsr1l	equ	0xFE1
 14584                           indf2	equ	0xFDF
 14585                           postinc2	equ	0xFDE
 14586                           postdec2	equ	0xFDD
 14587                           plusw2	equ	0xFDB
 14588                           fsr2h	equ	0xFDA
 14589                           fsr2l	equ	0xFD9
 14590                           status	equ	0xFD8
 14591                           
 14592 ;; *************** function ___lwmod *****************
 14593 ;; Defined at:
 14594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  dividend        2    0[BANK0 ] unsigned int 
 14597 ;;  divisor         2    2[BANK0 ] unsigned int 
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  counter         1    4[BANK0 ] unsigned char 
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  2    0[BANK0 ] unsigned int 
 14602 ;; Registers used:
 14603 ;;		wreg, status,2, status,0
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/0
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14612 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14613 ;;Total ram usage:        5 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; Hardware stack levels required when called:   12
 14616 ;; This function calls:
 14617 ;;		Nothing
 14618 ;; This function is called by:
 14619 ;;		_ringbuf_put_num
 14620 ;;		_data_out
 14621 ;;		_display_LCD
 14622 ;; This function uses a non-reentrant model
 14623 ;;
 14624                           
 14625                           	psect	text43
 14626  0162F6                     __ptext43:
 14627                           	opt stack 0
 14628  0162F6                     ___lwmod:
 14629                           	opt stack 16
 14630                           
 14631                           ;incstack = 0
 14632  0162F6  0100               	movlb	0	; () banked
 14633  0162F8  5162               	movf	___lwmod@divisor& (0+255),w,b
 14634  0162FA  0100               	movlb	0	; () banked
 14635  0162FC  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14636  0162FE  B4D8               	btfsc	status,2,c
 14637  016300  D026               	goto	l2458
 14638                           
 14639                           ; BSR set to: 0
 14640  016302  0E01               	movlw	1
 14641  016304  0100               	movlb	0	; () banked
 14642  016306  6F64               	movwf	___lwmod@counter& (0+255),b
 14643  016308  D006               	goto	l12078
 14644  01630A                     l12076:
 14645                           
 14646                           ; BSR set to: 0
 14647  01630A  0100               	movlb	0	; () banked
 14648  01630C  90D8               	bcf	status,0,c
 14649  01630E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14650  016310  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14651  016312  0100               	movlb	0	; () banked
 14652  016314  2B64               	incf	___lwmod@counter& (0+255),f,b
 14653  016316                     l12078:
 14654                           
 14655                           ; BSR set to: 0
 14656  016316  0100               	movlb	0	; () banked
 14657  016318  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14658  01631A  D7F7               	goto	l12076
 14659  01631C                     l12080:
 14660                           
 14661                           ; BSR set to: 0
 14662  01631C  0100               	movlb	0	; () banked
 14663  01631E  5162               	movf	___lwmod@divisor& (0+255),w,b
 14664  016320  0100               	movlb	0	; () banked
 14665  016322  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14666  016324  0100               	movlb	0	; () banked
 14667  016326  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14668  016328  0100               	movlb	0	; () banked
 14669  01632A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14670  01632C  A0D8               	btfss	status,0,c
 14671  01632E  D008               	goto	l12084
 14672                           
 14673                           ; BSR set to: 0
 14674  016330  0100               	movlb	0	; () banked
 14675  016332  5162               	movf	___lwmod@divisor& (0+255),w,b
 14676  016334  0100               	movlb	0	; () banked
 14677  016336  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14678  016338  0100               	movlb	0	; () banked
 14679  01633A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14680  01633C  0100               	movlb	0	; () banked
 14681  01633E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14682  016340                     l12084:
 14683                           
 14684                           ; BSR set to: 0
 14685  016340  0100               	movlb	0	; () banked
 14686  016342  90D8               	bcf	status,0,c
 14687  016344  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14688  016346  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14689                           
 14690                           ; BSR set to: 0
 14691  016348  0100               	movlb	0	; () banked
 14692  01634A  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14693  01634C  D7E7               	goto	l12080
 14694  01634E                     l2458:
 14695                           
 14696                           ; BSR set to: 0
 14697  01634E  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14698  016352  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14699                           
 14700                           ; BSR set to: 0
 14701  016356  0012               	return		;funcret
 14702  016358                     __end_of___lwmod:
 14703                           	opt stack 0
 14704                           tblptru	equ	0xFF8
 14705                           tblptrh	equ	0xFF7
 14706                           tblptrl	equ	0xFF6
 14707                           tablat	equ	0xFF5
 14708                           prodh	equ	0xFF4
 14709                           prodl	equ	0xFF3
 14710                           intcon	equ	0xFF2
 14711                           postinc0	equ	0xFEE
 14712                           wreg	equ	0xFE8
 14713                           indf1	equ	0xFE7
 14714                           postinc1	equ	0xFE6
 14715                           postdec1	equ	0xFE5
 14716                           fsr1h	equ	0xFE2
 14717                           fsr1l	equ	0xFE1
 14718                           indf2	equ	0xFDF
 14719                           postinc2	equ	0xFDE
 14720                           postdec2	equ	0xFDD
 14721                           plusw2	equ	0xFDB
 14722                           fsr2h	equ	0xFDA
 14723                           fsr2l	equ	0xFD9
 14724                           status	equ	0xFD8
 14725                           
 14726 ;; *************** function _Auto_cut *****************
 14727 ;; Defined at:
 14728 ;;		line 49 in file "ChargeStation_task.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;		None
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;  i               1   30[BANK0 ] unsigned char 
 14733 ;; Return value:  Size  Location     Type
 14734 ;;		None               void
 14735 ;; Registers used:
 14736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14745 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14746 ;;Total ram usage:        3 bytes
 14747 ;; Hardware stack levels used:    1
 14748 ;; Hardware stack levels required when called:   13
 14749 ;; This function calls:
 14750 ;;		_ADC
 14751 ;;		_ANALOG_IN
 14752 ;;		_OUT
 14753 ;;		___wmul
 14754 ;; This function is called by:
 14755 ;;		_normal_task
 14756 ;; This function uses a non-reentrant model
 14757 ;;
 14758                           
 14759                           	psect	text44
 14760  0138F6                     __ptext44:
 14761                           	opt stack 0
 14762  0138F6                     _Auto_cut:
 14763                           	opt stack 16
 14764                           
 14765                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14766                           
 14767                           ; BSR set to: 0
 14768                           ;incstack = 0
 14769  0138F6  0E00               	movlw	0
 14770  0138F8  0100               	movlb	0	; () banked
 14771  0138FA  6F7E               	movwf	Auto_cut@i& (0+255),b
 14772  0138FC                     l12336:
 14773                           
 14774                           ; BSR set to: 0
 14775  0138FC  0E02               	movlw	2
 14776  0138FE  0100               	movlb	0	; () banked
 14777  013900  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14778  013902  D001               	goto	l12340
 14779  013904  0012               	return	
 14780  013906                     l12340:
 14781                           
 14782                           ; BSR set to: 0
 14783                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14784  013906  0100               	movlb	0	; () banked
 14785  013908  517E               	movf	Auto_cut@i& (0+255),w,b
 14786  01390A  EC04  F0B5         	call	_ANALOG_IN
 14787  01390E  ECD7  F0B4         	call	_ADC
 14788  013912  C060  F076         	movff	?_ADC,___wmul@multiplier
 14789  013916  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14790  01391A  0E00               	movlw	0
 14791  01391C  0100               	movlb	0	; () banked
 14792  01391E  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14793  013920  0E0D               	movlw	13
 14794  013922  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14795  013924  EC71  F0B4         	call	___wmul	;wreg free
 14796  013928  0E04               	movlw	4
 14797  01392A  0100               	movlb	0	; () banked
 14798  01392C  6F7C               	movwf	??_Auto_cut& (0+255),b
 14799  01392E                     u14055:
 14800  01392E  0100               	movlb	0	; () banked
 14801  013930  90D8               	bcf	status,0,c
 14802  013932  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14803  013934  3376               	rrcf	?___wmul& (0+255),f,b
 14804  013936  0100               	movlb	0	; () banked
 14805  013938  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14806  01393A  D7F9               	goto	u14055
 14807  01393C  0100               	movlb	0	; () banked
 14808  01393E  517E               	movf	Auto_cut@i& (0+255),w,b
 14809  013940  0D17               	mullw	23
 14810  013942  0E06               	movlw	6
 14811  013944  26F3               	addwf	prodl,f,c
 14812  013946  0E00               	movlw	0
 14813  013948  22F4               	addwfc	prodh,f,c
 14814  01394A  0E2E               	movlw	low _port
 14815  01394C  24F3               	addwf	prodl,w,c
 14816  01394E  6ED9               	movwf	fsr2l,c
 14817  013950  0E01               	movlw	high _port
 14818  013952  20F4               	addwfc	prodh,w,c
 14819  013954  6EDA               	movwf	fsr2h,c
 14820  013956  0100               	movlb	0	; () banked
 14821  013958  C076  FFDE         	movff	?___wmul,postinc2
 14822  01395C  0100               	movlb	0	; () banked
 14823  01395E  C077  FFDD         	movff	?___wmul+1,postdec2
 14824                           
 14825                           ; BSR set to: 0
 14826                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14827  013962  0100               	movlb	0	; () banked
 14828  013964  517E               	movf	Auto_cut@i& (0+255),w,b
 14829  013966  0D17               	mullw	23
 14830  013968  0E16               	movlw	22
 14831  01396A  26F3               	addwf	prodl,f,c
 14832  01396C  0E00               	movlw	0
 14833  01396E  22F4               	addwfc	prodh,f,c
 14834  013970  0E2E               	movlw	low _port
 14835  013972  24F3               	addwf	prodl,w,c
 14836  013974  6ED9               	movwf	fsr2l,c
 14837  013976  0E01               	movlw	high _port
 14838  013978  20F4               	addwfc	prodh,w,c
 14839  01397A  6EDA               	movwf	fsr2h,c
 14840  01397C  0101               	movlb	1	; () banked
 14841  01397E  A0DF               	btfss	indf2,0,c
 14842  013980  D051               	goto	l12352
 14843                           
 14844                           ; BSR set to: 1
 14845                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 14846  013982  0100               	movlb	0	; () banked
 14847  013984  517E               	movf	Auto_cut@i& (0+255),w,b
 14848  013986  0D17               	mullw	23
 14849  013988  0E06               	movlw	6
 14850  01398A  26F3               	addwf	prodl,f,c
 14851  01398C  0E00               	movlw	0
 14852  01398E  22F4               	addwfc	prodh,f,c
 14853  013990  0E2E               	movlw	low _port
 14854  013992  24F3               	addwf	prodl,w,c
 14855  013994  6ED9               	movwf	fsr2l,c
 14856  013996  0E01               	movlw	high _port
 14857  013998  20F4               	addwfc	prodh,w,c
 14858  01399A  6EDA               	movwf	fsr2h,c
 14859  01399C  0E01               	movlw	1
 14860  01399E  50DB               	movf	plusw2,w,c
 14861  0139A0  E130               	bnz	l12350
 14862  0139A2  0E64               	movlw	100
 14863  0139A4  5CDE               	subwf	postinc2,w,c
 14864  0139A6  B0D8               	btfsc	status,0,c
 14865  0139A8  D02C               	goto	l12350
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 14869  0139AA  0100               	movlb	0	; () banked
 14870  0139AC  517E               	movf	Auto_cut@i& (0+255),w,b
 14871  0139AE  0D17               	mullw	23
 14872  0139B0  0E14               	movlw	20
 14873  0139B2  26F3               	addwf	prodl,f,c
 14874  0139B4  0E00               	movlw	0
 14875  0139B6  22F4               	addwfc	prodh,f,c
 14876  0139B8  0E2E               	movlw	low _port
 14877  0139BA  24F3               	addwf	prodl,w,c
 14878  0139BC  6ED9               	movwf	fsr2l,c
 14879  0139BE  0E01               	movlw	high _port
 14880  0139C0  20F4               	addwfc	prodh,w,c
 14881  0139C2  6EDA               	movwf	fsr2h,c
 14882  0139C4  2ADE               	incf	postinc2,f,c
 14883  0139C6  0E00               	movlw	0
 14884  0139C8  22DD               	addwfc	postdec2,f,c
 14885                           
 14886                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 14887  0139CA  0100               	movlb	0	; () banked
 14888  0139CC  517E               	movf	Auto_cut@i& (0+255),w,b
 14889  0139CE  0D17               	mullw	23
 14890  0139D0  0E14               	movlw	20
 14891  0139D2  26F3               	addwf	prodl,f,c
 14892  0139D4  0E00               	movlw	0
 14893  0139D6  22F4               	addwfc	prodh,f,c
 14894  0139D8  0E2E               	movlw	low _port
 14895  0139DA  24F3               	addwf	prodl,w,c
 14896  0139DC  6ED9               	movwf	fsr2l,c
 14897  0139DE  0E01               	movlw	high _port
 14898  0139E0  20F4               	addwfc	prodh,w,c
 14899  0139E2  6EDA               	movwf	fsr2h,c
 14900  0139E4  0E01               	movlw	1
 14901  0139E6  50DB               	movf	plusw2,w,c
 14902  0139E8  E104               	bnz	u14080
 14903  0139EA  0E07               	movlw	7
 14904  0139EC  5CDE               	subwf	postinc2,w,c
 14905  0139EE  A0D8               	btfss	status,0,c
 14906  0139F0  D019               	goto	l12352
 14907  0139F2                     u14080:
 14908                           
 14909                           ; BSR set to: 0
 14910                           ;ChargeStation_task.c: 57: OUT(i, 0);
 14911  0139F2  0E00               	movlw	0
 14912  0139F4  0100               	movlb	0	; () banked
 14913  0139F6  6F60               	movwf	OUT@value& (0+255),b
 14914  0139F8  0100               	movlb	0	; () banked
 14915  0139FA  517E               	movf	Auto_cut@i& (0+255),w,b
 14916  0139FC  ECD6  F0AF         	call	_OUT
 14917                           
 14918                           ;ChargeStation_task.c: 58: }
 14919                           ;ChargeStation_task.c: 59: } else {
 14920  013A00  D011               	goto	l12352
 14921  013A02                     l12350:
 14922                           
 14923                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 14924  013A02  0100               	movlb	0	; () banked
 14925  013A04  517E               	movf	Auto_cut@i& (0+255),w,b
 14926  013A06  0D17               	mullw	23
 14927  013A08  0E14               	movlw	20
 14928  013A0A  26F3               	addwf	prodl,f,c
 14929  013A0C  0E00               	movlw	0
 14930  013A0E  22F4               	addwfc	prodh,f,c
 14931  013A10  0E2E               	movlw	low _port
 14932  013A12  24F3               	addwf	prodl,w,c
 14933  013A14  6ED9               	movwf	fsr2l,c
 14934  013A16  0E01               	movlw	high _port
 14935  013A18  20F4               	addwfc	prodh,w,c
 14936  013A1A  6EDA               	movwf	fsr2h,c
 14937  013A1C  0E00               	movlw	0
 14938  013A1E  6EDE               	movwf	postinc2,c
 14939  013A20  0E00               	movlw	0
 14940  013A22  6EDD               	movwf	postdec2,c
 14941  013A24                     l12352:
 14942  013A24  0100               	movlb	0	; () banked
 14943  013A26  2B7E               	incf	Auto_cut@i& (0+255),f,b
 14944  013A28  D769               	goto	l12336
 14945  013A2A                     __end_of_Auto_cut:
 14946                           	opt stack 0
 14947                           tblptru	equ	0xFF8
 14948                           tblptrh	equ	0xFF7
 14949                           tblptrl	equ	0xFF6
 14950                           tablat	equ	0xFF5
 14951                           prodh	equ	0xFF4
 14952                           prodl	equ	0xFF3
 14953                           intcon	equ	0xFF2
 14954                           postinc0	equ	0xFEE
 14955                           wreg	equ	0xFE8
 14956                           indf1	equ	0xFE7
 14957                           postinc1	equ	0xFE6
 14958                           postdec1	equ	0xFE5
 14959                           fsr1h	equ	0xFE2
 14960                           fsr1l	equ	0xFE1
 14961                           indf2	equ	0xFDF
 14962                           postinc2	equ	0xFDE
 14963                           postdec2	equ	0xFDD
 14964                           plusw2	equ	0xFDB
 14965                           fsr2h	equ	0xFDA
 14966                           fsr2l	equ	0xFD9
 14967                           status	equ	0xFD8
 14968                           
 14969 ;; *************** function ___wmul *****************
 14970 ;; Defined at:
 14971 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;  multiplier      2   22[BANK0 ] unsigned int 
 14974 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 14975 ;; Auto vars:     Size  Location     Type
 14976 ;;  product         2   26[BANK0 ] unsigned int 
 14977 ;; Return value:  Size  Location     Type
 14978 ;;                  2   22[BANK0 ] unsigned int 
 14979 ;; Registers used:
 14980 ;;		wreg, status,2, status,0, prodl, prodh
 14981 ;; Tracked objects:
 14982 ;;		On entry : 0/0
 14983 ;;		On exit  : 0/0
 14984 ;;		Unchanged: 0/0
 14985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14989 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14990 ;;Total ram usage:        6 bytes
 14991 ;; Hardware stack levels used:    1
 14992 ;; Hardware stack levels required when called:   12
 14993 ;; This function calls:
 14994 ;;		Nothing
 14995 ;; This function is called by:
 14996 ;;		_Auto_cut
 14997 ;;		_ctmu_set_ratio
 14998 ;;		_sprintf
 14999 ;;		_atoi
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text45
 15004  0168E2                     __ptext45:
 15005                           	opt stack 0
 15006  0168E2                     ___wmul:
 15007                           	opt stack 12
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;incstack = 0
 15011  0168E2  0100               	movlb	0	; () banked
 15012  0168E4  5176               	movf	___wmul@multiplier& (0+255),w,b
 15013  0168E6  0100               	movlb	0	; () banked
 15014  0168E8  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15015  0168EA  CFF3 F07A          	movff	prodl,___wmul@product
 15016  0168EE  CFF4 F07B          	movff	prodh,___wmul@product+1
 15017  0168F2  0100               	movlb	0	; () banked
 15018  0168F4  5176               	movf	___wmul@multiplier& (0+255),w,b
 15019  0168F6  0100               	movlb	0	; () banked
 15020  0168F8  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15021  0168FA  50F3               	movf	prodl,w,c
 15022  0168FC  0100               	movlb	0	; () banked
 15023  0168FE  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15024  016900  0100               	movlb	0	; () banked
 15025  016902  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15026  016904  0100               	movlb	0	; () banked
 15027  016906  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15028  016908  50F3               	movf	prodl,w,c
 15029  01690A  0100               	movlb	0	; () banked
 15030  01690C  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15031                           
 15032                           ; BSR set to: 0
 15033  01690E  C07A  F076         	movff	___wmul@product,?___wmul
 15034  016912  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 15035  016916  0012               	return	
 15036  016918                     __end_of___wmul:
 15037                           	opt stack 0
 15038                           tblptru	equ	0xFF8
 15039                           tblptrh	equ	0xFF7
 15040                           tblptrl	equ	0xFF6
 15041                           tablat	equ	0xFF5
 15042                           prodh	equ	0xFF4
 15043                           prodl	equ	0xFF3
 15044                           intcon	equ	0xFF2
 15045                           postinc0	equ	0xFEE
 15046                           wreg	equ	0xFE8
 15047                           indf1	equ	0xFE7
 15048                           postinc1	equ	0xFE6
 15049                           postdec1	equ	0xFE5
 15050                           fsr1h	equ	0xFE2
 15051                           fsr1l	equ	0xFE1
 15052                           indf2	equ	0xFDF
 15053                           postinc2	equ	0xFDE
 15054                           postdec2	equ	0xFDD
 15055                           plusw2	equ	0xFDB
 15056                           fsr2h	equ	0xFDA
 15057                           fsr2l	equ	0xFD9
 15058                           status	equ	0xFD8
 15059                           
 15060 ;; *************** function _OUT *****************
 15061 ;; Defined at:
 15062 ;;		line 7 in file "io.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;  b               1    wreg     unsigned char 
 15065 ;;  value           1    0[BANK0 ] unsigned char 
 15066 ;; Auto vars:     Size  Location     Type
 15067 ;;  b               1    1[BANK0 ] unsigned char 
 15068 ;; Return value:  Size  Location     Type
 15069 ;;		None               void
 15070 ;; Registers used:
 15071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15072 ;; Tracked objects:
 15073 ;;		On entry : 0/0
 15074 ;;		On exit  : 0/0
 15075 ;;		Unchanged: 0/0
 15076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15077 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15080 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15081 ;;Total ram usage:        2 bytes
 15082 ;; Hardware stack levels used:    1
 15083 ;; Hardware stack levels required when called:   12
 15084 ;; This function calls:
 15085 ;;		Nothing
 15086 ;; This function is called by:
 15087 ;;		_Auto_cut
 15088 ;;		_port_button_task
 15089 ;;		_sleep_task
 15090 ;;		_software_init
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           	psect	text46
 15095  015FAC                     __ptext46:
 15096                           	opt stack 0
 15097  015FAC                     _OUT:
 15098                           	opt stack 17
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;incstack = 0
 15102                           ;OUT@b stored from wreg
 15103  015FAC  0100               	movlb	0	; () banked
 15104  015FAE  6F61               	movwf	OUT@b& (0+255),b
 15105                           
 15106                           ;io.c: 8: port[b].flag.out_flag = value;
 15107  015FB0  0100               	movlb	0	; () banked
 15108  015FB2  5161               	movf	OUT@b& (0+255),w,b
 15109  015FB4  0D17               	mullw	23
 15110  015FB6  0E16               	movlw	22
 15111  015FB8  26F3               	addwf	prodl,f,c
 15112  015FBA  0E00               	movlw	0
 15113  015FBC  22F4               	addwfc	prodh,f,c
 15114  015FBE  0E2E               	movlw	low _port
 15115  015FC0  24F3               	addwf	prodl,w,c
 15116  015FC2  6ED9               	movwf	fsr2l,c
 15117  015FC4  0E01               	movlw	high _port
 15118  015FC6  20F4               	addwfc	prodh,w,c
 15119  015FC8  6EDA               	movwf	fsr2h,c
 15120  015FCA  0100               	movlb	0	; () banked
 15121  015FCC  B160               	btfsc	OUT@value& (0+255),0,b
 15122  015FCE  D003               	bra	u13265
 15123  015FD0  0101               	movlb	1	; () banked
 15124  015FD2  94DF               	bcf	indf2,2,c
 15125  015FD4  D002               	bra	u13266
 15126  015FD6                     u13265:
 15127  015FD6  0101               	movlb	1	; () banked
 15128  015FD8  84DF               	bsf	indf2,2,c
 15129  015FDA                     u13266:
 15130                           
 15131                           ;io.c: 9: switch (b) {
 15132  015FDA  D015               	goto	l11782
 15133  015FDC                     l1669:
 15134                           
 15135                           ; BSR set to: 0
 15136                           ;io.c: 11: LATA5 = value;
 15137  015FDC  0100               	movlb	0	; () banked
 15138  015FDE  A160               	btfss	OUT@value& (0+255),0,b
 15139  015FE0  D002               	goto	u13270
 15140  015FE2  8A89               	bsf	3977,5,c	;volatile
 15141  015FE4  0012               	return	
 15142  015FE6                     u13270:
 15143  015FE6  9A89               	bcf	3977,5,c	;volatile
 15144                           
 15145                           ;io.c: 12: break;
 15146  015FE8  0012               	return	
 15147  015FEA                     l1671:
 15148                           
 15149                           ; BSR set to: 0
 15150                           ;io.c: 14: LATA6 = value;
 15151  015FEA  0100               	movlb	0	; () banked
 15152  015FEC  A160               	btfss	OUT@value& (0+255),0,b
 15153  015FEE  D002               	goto	u13290
 15154  015FF0  8C89               	bsf	3977,6,c	;volatile
 15155  015FF2  0012               	return	
 15156  015FF4                     u13290:
 15157  015FF4  9C89               	bcf	3977,6,c	;volatile
 15158                           
 15159                           ;io.c: 15: break;
 15160  015FF6  0012               	return	
 15161  015FF8                     l1672:
 15162                           
 15163                           ; BSR set to: 0
 15164                           ;io.c: 17: LATA7 = value;
 15165  015FF8  0100               	movlb	0	; () banked
 15166  015FFA  A160               	btfss	OUT@value& (0+255),0,b
 15167  015FFC  D002               	goto	u13310
 15168  015FFE  8E89               	bsf	3977,7,c	;volatile
 15169  016000  0012               	return	
 15170  016002                     u13310:
 15171  016002  9E89               	bcf	3977,7,c	;volatile
 15172                           
 15173                           ;io.c: 19: }
 15174                           
 15175                           ;io.c: 18: break;
 15176  016004  0012               	return	
 15177  016006                     l11782:
 15178  016006  0100               	movlb	0	; () banked
 15179  016008  5161               	movf	OUT@b& (0+255),w,b
 15180                           
 15181                           ; Switch size 1, requested type "space"
 15182                           ; Number of cases is 3, Range of values is 0 to 2
 15183                           ; switch strategies available:
 15184                           ; Name         Instructions Cycles
 15185                           ; simple_byte           10     6 (average)
 15186                           ;	Chosen strategy is simple_byte
 15187  01600A  0A00               	xorlw	0	; case 0
 15188  01600C  B4D8               	btfsc	status,2,c
 15189  01600E  D7E6               	goto	l1669
 15190  016010  0A01               	xorlw	1	; case 1
 15191  016012  B4D8               	btfsc	status,2,c
 15192  016014  D7EA               	goto	l1671
 15193  016016  0A03               	xorlw	3	; case 2
 15194  016018  A4D8               	btfss	status,2,c
 15195  01601A  0012               	return	
 15196  01601C  D7ED               	goto	l1672
 15197  01601E                     __end_of_OUT:
 15198                           	opt stack 0
 15199                           tblptru	equ	0xFF8
 15200                           tblptrh	equ	0xFF7
 15201                           tblptrl	equ	0xFF6
 15202                           tablat	equ	0xFF5
 15203                           prodh	equ	0xFF4
 15204                           prodl	equ	0xFF3
 15205                           intcon	equ	0xFF2
 15206                           postinc0	equ	0xFEE
 15207                           wreg	equ	0xFE8
 15208                           indf1	equ	0xFE7
 15209                           postinc1	equ	0xFE6
 15210                           postdec1	equ	0xFE5
 15211                           fsr1h	equ	0xFE2
 15212                           fsr1l	equ	0xFE1
 15213                           indf2	equ	0xFDF
 15214                           postinc2	equ	0xFDE
 15215                           postdec2	equ	0xFDD
 15216                           plusw2	equ	0xFDB
 15217                           fsr2h	equ	0xFDA
 15218                           fsr2l	equ	0xFD9
 15219                           status	equ	0xFD8
 15220                           
 15221 ;; *************** function _ANALOG_IN *****************
 15222 ;; Defined at:
 15223 ;;		line 23 in file "io.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;  b               1    wreg     unsigned char 
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;  b               1    0[BANK0 ] unsigned char 
 15228 ;; Return value:  Size  Location     Type
 15229 ;;                  1    wreg      unsigned char 
 15230 ;; Registers used:
 15231 ;;		wreg, status,2, status,0
 15232 ;; Tracked objects:
 15233 ;;		On entry : 0/0
 15234 ;;		On exit  : 0/0
 15235 ;;		Unchanged: 0/0
 15236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15240 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15241 ;;Total ram usage:        1 bytes
 15242 ;; Hardware stack levels used:    1
 15243 ;; Hardware stack levels required when called:   12
 15244 ;; This function calls:
 15245 ;;		Nothing
 15246 ;; This function is called by:
 15247 ;;		_Auto_cut
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           	psect	text47
 15252  016A08                     __ptext47:
 15253                           	opt stack 0
 15254  016A08                     _ANALOG_IN:
 15255                           	opt stack 16
 15256                           
 15257                           ;incstack = 0
 15258                           ;ANALOG_IN@b stored from wreg
 15259  016A08  0100               	movlb	0	; () banked
 15260  016A0A  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15261                           
 15262                           ;io.c: 24: switch (b) {
 15263  016A0C  D006               	goto	l11772
 15264  016A0E                     l11758:
 15265                           
 15266                           ;io.c: 26: return 8;
 15267  016A0E  0E08               	movlw	8
 15268  016A10  0012               	return	
 15269  016A12                     l11762:
 15270                           
 15271                           ;io.c: 28: return 9;
 15272  016A12  0E09               	movlw	9
 15273  016A14  0012               	return	
 15274  016A16                     l11766:
 15275                           
 15276                           ;io.c: 30: return 10;
 15277  016A16  0E0A               	movlw	10
 15278  016A18  0012               	return	
 15279  016A1A                     l11772:
 15280  016A1A  0100               	movlb	0	; () banked
 15281  016A1C  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15282                           
 15283                           ; Switch size 1, requested type "space"
 15284                           ; Number of cases is 3, Range of values is 0 to 2
 15285                           ; switch strategies available:
 15286                           ; Name         Instructions Cycles
 15287                           ; simple_byte           10     6 (average)
 15288                           ;	Chosen strategy is simple_byte
 15289  016A1E  0A00               	xorlw	0	; case 0
 15290  016A20  B4D8               	btfsc	status,2,c
 15291  016A22  D7F5               	goto	l11758
 15292  016A24  0A01               	xorlw	1	; case 1
 15293  016A26  B4D8               	btfsc	status,2,c
 15294  016A28  D7F4               	goto	l11762
 15295  016A2A  0A03               	xorlw	3	; case 2
 15296  016A2C  B4D8               	btfsc	status,2,c
 15297  016A2E  D7F3               	goto	l11766
 15298                           
 15299                           ;io.c: 32: return 0;
 15300                           
 15301                           ; BSR set to: 0
 15302  016A30  0E00               	movlw	0
 15303  016A32  0012               	return	
 15304  016A34                     __end_of_ANALOG_IN:
 15305                           	opt stack 0
 15306                           tblptru	equ	0xFF8
 15307                           tblptrh	equ	0xFF7
 15308                           tblptrl	equ	0xFF6
 15309                           tablat	equ	0xFF5
 15310                           prodh	equ	0xFF4
 15311                           prodl	equ	0xFF3
 15312                           intcon	equ	0xFF2
 15313                           postinc0	equ	0xFEE
 15314                           wreg	equ	0xFE8
 15315                           indf1	equ	0xFE7
 15316                           postinc1	equ	0xFE6
 15317                           postdec1	equ	0xFE5
 15318                           fsr1h	equ	0xFE2
 15319                           fsr1l	equ	0xFE1
 15320                           indf2	equ	0xFDF
 15321                           postinc2	equ	0xFDE
 15322                           postdec2	equ	0xFDD
 15323                           plusw2	equ	0xFDB
 15324                           fsr2h	equ	0xFDA
 15325                           fsr2l	equ	0xFD9
 15326                           status	equ	0xFD8
 15327                           
 15328 ;; *************** function _ADC *****************
 15329 ;; Defined at:
 15330 ;;		line 156 in file "../My_library/My_PIC.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;  ch              1    wreg     unsigned char 
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;  ch              1    3[BANK0 ] unsigned char 
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  2    0[BANK0 ] unsigned int 
 15337 ;; Registers used:
 15338 ;;		wreg, status,2, status,0
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15347 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15348 ;;Total ram usage:        4 bytes
 15349 ;; Hardware stack levels used:    1
 15350 ;; Hardware stack levels required when called:   12
 15351 ;; This function calls:
 15352 ;;		Nothing
 15353 ;; This function is called by:
 15354 ;;		_Auto_cut
 15355 ;;		_sleep_task
 15356 ;; This function uses a non-reentrant model
 15357 ;;
 15358                           
 15359                           	psect	text48
 15360  0169AE                     __ptext48:
 15361                           	opt stack 0
 15362  0169AE                     _ADC:
 15363                           	opt stack 17
 15364                           
 15365                           ;incstack = 0
 15366                           ;ADC@ch stored from wreg
 15367  0169AE  0100               	movlb	0	; () banked
 15368  0169B0  6F63               	movwf	ADC@ch& (0+255),b
 15369                           
 15370                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 15371  0169B2  C063  F062         	movff	ADC@ch,??_ADC
 15372  0169B6  0100               	movlb	0	; () banked
 15373  0169B8  4762               	rlncf	??_ADC& (0+255),f,b
 15374  0169BA  4762               	rlncf	??_ADC& (0+255),f,b
 15375  0169BC  50C2               	movf	4034,w,c	;volatile
 15376  0169BE  0100               	movlb	0	; () banked
 15377  0169C0  1962               	xorwf	??_ADC& (0+255),w,b
 15378  0169C2  0BC3               	andlw	-61
 15379  0169C4  1962               	xorwf	??_ADC& (0+255),w,b
 15380  0169C6  6EC2               	movwf	4034,c	;volatile
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 15384  0169C8  80C2               	bsf	4034,0,c	;volatile
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 15388  0169CA  9C9E               	bcf	3998,6,c	;volatile
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 15392  0169CC  82C2               	bsf	4034,1,c	;volatile
 15393  0169CE                     l724:
 15394  0169CE  AC9E               	btfss	3998,6,c	;volatile
 15395  0169D0  D7FE               	goto	l724
 15396                           
 15397                           ;My_PIC.c: 163: return ADRES;
 15398  0169D2  CFC3 F060          	movff	4035,?_ADC	;volatile
 15399  0169D6  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15400  0169DA  0012               	return		;funcret
 15401  0169DC                     __end_of_ADC:
 15402                           	opt stack 0
 15403                           tblptru	equ	0xFF8
 15404                           tblptrh	equ	0xFF7
 15405                           tblptrl	equ	0xFF6
 15406                           tablat	equ	0xFF5
 15407                           prodh	equ	0xFF4
 15408                           prodl	equ	0xFF3
 15409                           intcon	equ	0xFF2
 15410                           postinc0	equ	0xFEE
 15411                           wreg	equ	0xFE8
 15412                           indf1	equ	0xFE7
 15413                           postinc1	equ	0xFE6
 15414                           postdec1	equ	0xFE5
 15415                           fsr1h	equ	0xFE2
 15416                           fsr1l	equ	0xFE1
 15417                           indf2	equ	0xFDF
 15418                           postinc2	equ	0xFDE
 15419                           postdec2	equ	0xFDD
 15420                           plusw2	equ	0xFDB
 15421                           fsr2h	equ	0xFDA
 15422                           fsr2l	equ	0xFD9
 15423                           status	equ	0xFD8
 15424                           
 15425 ;; *************** function _hardware_init *****************
 15426 ;; Defined at:
 15427 ;;		line 82 in file "main.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;		None
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;		None
 15432 ;; Return value:  Size  Location     Type
 15433 ;;		None               void
 15434 ;; Registers used:
 15435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15445 ;;Total ram usage:        0 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; Hardware stack levels required when called:   17
 15448 ;; This function calls:
 15449 ;;		_ADC_init
 15450 ;;		_CTMU_init
 15451 ;;		_I2C_LCD_init
 15452 ;;		_RTCC_init
 15453 ;;		_USB_CDC_init
 15454 ;;		_timer0_init
 15455 ;;		_timer1_init
 15456 ;;		_timer3_init
 15457 ;; This function is called by:
 15458 ;;		_main
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462                           	psect	text49
 15463  01652C                     __ptext49:
 15464                           	opt stack 0
 15465  01652C                     _hardware_init:
 15466                           	opt stack 13
 15467                           
 15468                           ;main.c: 83: OSCCONbits.IRCF = 7;
 15469                           
 15470                           ;incstack = 0
 15471  01652C  88D3               	bsf	4051,4,c	;volatile
 15472  01652E  8AD3               	bsf	4051,5,c	;volatile
 15473  016530  8CD3               	bsf	4051,6,c	;volatile
 15474                           
 15475                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 15476  016532  8C9B               	bsf	3995,6,c	;volatile
 15477                           
 15478                           ;main.c: 85: OSCCONbits.SCS = 0;
 15479  016534  0EFC               	movlw	-4
 15480  016536  16D3               	andwf	4051,f,c	;volatile
 15481                           
 15482                           ;main.c: 86: TRISA = 0b00011111;
 15483  016538  0E1F               	movlw	31
 15484  01653A  6E92               	movwf	3986,c	;volatile
 15485                           
 15486                           ;main.c: 87: TRISB = 0b00111111;
 15487  01653C  0E3F               	movlw	63
 15488  01653E  6E93               	movwf	3987,c	;volatile
 15489                           
 15490                           ;main.c: 88: TRISC = 0b10110010;
 15491  016540  0EB2               	movlw	178
 15492  016542  6E94               	movwf	3988,c	;volatile
 15493                           
 15494                           ;main.c: 89: ANCON0 = 0b11110000;
 15495  016544  0EF0               	movlw	240
 15496  016546  010F               	movlb	15	; () banked
 15497  016548  6F48               	movwf	72,b	;volatile
 15498                           
 15499                           ;main.c: 90: ANCON1 = 0b00001000;
 15500  01654A  0E08               	movlw	8
 15501  01654C  010F               	movlb	15	; () banked
 15502  01654E  6F49               	movwf	73,b	;volatile
 15503                           
 15504                           ; BSR set to: 15
 15505                           ;main.c: 91: INTCON2bits.RBPU = 0;
 15506  016550  9EF1               	bcf	intcon2,7,c	;volatile
 15507                           
 15508                           ; BSR set to: 15
 15509                           ;main.c: 93: timer0_init(0);
 15510  016552  0E00               	movlw	0
 15511  016554  ECE3  F0B3         	call	_timer0_init
 15512                           
 15513                           ;main.c: 94: timer1_init(0, 2);
 15514  016558  0E02               	movlw	2
 15515  01655A  0100               	movlb	0	; () banked
 15516  01655C  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15517  01655E  0E00               	movlw	0
 15518  016560  EC14  F0B3         	call	_timer1_init
 15519                           
 15520                           ;main.c: 95: timer3_init(2);
 15521  016564  0E02               	movlw	2
 15522  016566  EC1A  F0B5         	call	_timer3_init
 15523                           
 15524                           ;main.c: 96: I2C_LCD_init();
 15525  01656A  EC40  F0AD         	call	_I2C_LCD_init	;wreg free
 15526                           
 15527                           ;main.c: 97: RTCC_init();
 15528  01656E  ECB1  F0B0         	call	_RTCC_init	;wreg free
 15529                           
 15530                           ;main.c: 98: ADC_init(0);
 15531  016572  0E00               	movlw	0
 15532  016574  ECFC  F0B5         	call	_ADC_init
 15533                           
 15534                           ;main.c: 99: CTMU_init();
 15535  016578  ECAF  F0B5         	call	_CTMU_init	;wreg free
 15536                           
 15537                           ;main.c: 100: USB_CDC_init();
 15538  01657C  EC91  F0B6         	call	_USB_CDC_init	;wreg free
 15539  016580  0012               	return		;funcret
 15540  016582                     __end_of_hardware_init:
 15541                           	opt stack 0
 15542                           tblptru	equ	0xFF8
 15543                           tblptrh	equ	0xFF7
 15544                           tblptrl	equ	0xFF6
 15545                           tablat	equ	0xFF5
 15546                           prodh	equ	0xFF4
 15547                           prodl	equ	0xFF3
 15548                           intcon	equ	0xFF2
 15549                           intcon2	equ	0xFF1
 15550                           postinc0	equ	0xFEE
 15551                           wreg	equ	0xFE8
 15552                           indf1	equ	0xFE7
 15553                           postinc1	equ	0xFE6
 15554                           postdec1	equ	0xFE5
 15555                           fsr1h	equ	0xFE2
 15556                           fsr1l	equ	0xFE1
 15557                           indf2	equ	0xFDF
 15558                           postinc2	equ	0xFDE
 15559                           postdec2	equ	0xFDD
 15560                           plusw2	equ	0xFDB
 15561                           fsr2h	equ	0xFDA
 15562                           fsr2l	equ	0xFD9
 15563                           status	equ	0xFD8
 15564                           
 15565 ;; *************** function _timer3_init *****************
 15566 ;; Defined at:
 15567 ;;		line 101 in file "../My_library/My_PIC.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;  prescaler       1    wreg     unsigned char 
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15572 ;; Return value:  Size  Location     Type
 15573 ;;		None               void
 15574 ;; Registers used:
 15575 ;;		wreg, status,2, status,0
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;Total ram usage:        2 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; Hardware stack levels required when called:   12
 15588 ;; This function calls:
 15589 ;;		Nothing
 15590 ;; This function is called by:
 15591 ;;		_hardware_init
 15592 ;; This function uses a non-reentrant model
 15593 ;;
 15594                           
 15595                           	psect	text50
 15596  016A34                     __ptext50:
 15597                           	opt stack 0
 15598  016A34                     _timer3_init:
 15599                           	opt stack 17
 15600                           
 15601                           ;incstack = 0
 15602                           ;timer3_init@prescaler stored from wreg
 15603  016A34  0100               	movlb	0	; () banked
 15604  016A36  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15605                           
 15606                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 15607  016A38  0E3F               	movlw	-193
 15608  016A3A  1679               	andwf	3961,f,c	;volatile
 15609                           
 15610                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 15611  016A3C  9679               	bcf	3961,3,c	;volatile
 15612                           
 15613                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 15614  016A3E  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15615  016A42  0100               	movlb	0	; () banked
 15616  016A44  3B60               	swapf	??_timer3_init& (0+255),f,b
 15617  016A46  5079               	movf	3961,w,c	;volatile
 15618  016A48  0100               	movlb	0	; () banked
 15619  016A4A  1960               	xorwf	??_timer3_init& (0+255),w,b
 15620  016A4C  0BCF               	andlw	-49
 15621  016A4E  1960               	xorwf	??_timer3_init& (0+255),w,b
 15622  016A50  6E79               	movwf	3961,c	;volatile
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 15626  016A52  9E79               	bcf	3961,7,c	;volatile
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 15630  016A54  8079               	bsf	3961,0,c	;volatile
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 15634  016A56  92A2               	bcf	4002,1,c	;volatile
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 15638  016A58  92A1               	bcf	4001,1,c	;volatile
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 15642  016A5A  82A0               	bsf	4000,1,c	;volatile
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 15646  016A5C  8CF2               	bsf	intcon,6,c	;volatile
 15647                           
 15648                           ; BSR set to: 0
 15649  016A5E  0012               	return		;funcret
 15650  016A60                     __end_of_timer3_init:
 15651                           	opt stack 0
 15652                           tblptru	equ	0xFF8
 15653                           tblptrh	equ	0xFF7
 15654                           tblptrl	equ	0xFF6
 15655                           tablat	equ	0xFF5
 15656                           prodh	equ	0xFF4
 15657                           prodl	equ	0xFF3
 15658                           intcon	equ	0xFF2
 15659                           intcon2	equ	0xFF1
 15660                           postinc0	equ	0xFEE
 15661                           wreg	equ	0xFE8
 15662                           indf1	equ	0xFE7
 15663                           postinc1	equ	0xFE6
 15664                           postdec1	equ	0xFE5
 15665                           fsr1h	equ	0xFE2
 15666                           fsr1l	equ	0xFE1
 15667                           indf2	equ	0xFDF
 15668                           postinc2	equ	0xFDE
 15669                           postdec2	equ	0xFDD
 15670                           plusw2	equ	0xFDB
 15671                           fsr2h	equ	0xFDA
 15672                           fsr2l	equ	0xFD9
 15673                           status	equ	0xFD8
 15674                           
 15675 ;; *************** function _timer1_init *****************
 15676 ;; Defined at:
 15677 ;;		line 70 in file "../My_library/My_PIC.c"
 15678 ;; Parameters:    Size  Location     Type
 15679 ;;  prescaler       1    wreg     unsigned char 
 15680 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15683 ;; Return value:  Size  Location     Type
 15684 ;;		None               void
 15685 ;; Registers used:
 15686 ;;		wreg, status,2, status,0
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15692 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15695 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15696 ;;Total ram usage:        3 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:   12
 15699 ;; This function calls:
 15700 ;;		Nothing
 15701 ;; This function is called by:
 15702 ;;		_hardware_init
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           	psect	text51
 15707  016628                     __ptext51:
 15708                           	opt stack 0
 15709  016628                     _timer1_init:
 15710                           	opt stack 17
 15711                           
 15712                           ; BSR set to: 0
 15713                           ;incstack = 0
 15714                           ;timer1_init@prescaler stored from wreg
 15715  016628  0100               	movlb	0	; () banked
 15716  01662A  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15717                           
 15718                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 15719  01662C  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15720  016630  0100               	movlb	0	; () banked
 15721  016632  3B61               	swapf	??_timer1_init& (0+255),f,b
 15722  016634  4761               	rlncf	??_timer1_init& (0+255),f,b
 15723  016636  4761               	rlncf	??_timer1_init& (0+255),f,b
 15724  016638  50CD               	movf	4045,w,c	;volatile
 15725  01663A  0100               	movlb	0	; () banked
 15726  01663C  1961               	xorwf	??_timer1_init& (0+255),w,b
 15727  01663E  0B3F               	andlw	-193
 15728  016640  1961               	xorwf	??_timer1_init& (0+255),w,b
 15729  016642  6ECD               	movwf	4045,c	;volatile
 15730                           
 15731                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15732  016644  0E02               	movlw	2
 15733  016646  0100               	movlb	0	; () banked
 15734  016648  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15735  01664A  A4D8               	btfss	status,2,c
 15736  01664C  D002               	goto	l710
 15737                           
 15738                           ; BSR set to: 0
 15739  01664E  86CD               	bsf	4045,3,c	;volatile
 15740  016650  D001               	goto	l12108
 15741  016652                     l710:
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 15745  016652  96CD               	bcf	4045,3,c	;volatile
 15746  016654                     l12108:
 15747                           
 15748                           ; BSR set to: 0
 15749                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 15750  016654  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15751  016658  0100               	movlb	0	; () banked
 15752  01665A  3B61               	swapf	??_timer1_init& (0+255),f,b
 15753  01665C  50CD               	movf	4045,w,c	;volatile
 15754  01665E  0100               	movlb	0	; () banked
 15755  016660  1961               	xorwf	??_timer1_init& (0+255),w,b
 15756  016662  0BCF               	andlw	-49
 15757  016664  1961               	xorwf	??_timer1_init& (0+255),w,b
 15758  016666  6ECD               	movwf	4045,c	;volatile
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 15762  016668  84CD               	bsf	4045,2,c	;volatile
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 15766  01666A  92CD               	bcf	4045,1,c	;volatile
 15767                           
 15768                           ; BSR set to: 0
 15769                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 15770  01666C  80CD               	bsf	4045,0,c	;volatile
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 15774  01666E  909F               	bcf	3999,0,c	;volatile
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 15778  016670  909E               	bcf	3998,0,c	;volatile
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 15782  016672  809D               	bsf	3997,0,c	;volatile
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15786  016674  8CF2               	bsf	intcon,6,c	;volatile
 15787                           
 15788                           ; BSR set to: 0
 15789  016676  0012               	return		;funcret
 15790  016678                     __end_of_timer1_init:
 15791                           	opt stack 0
 15792                           tblptru	equ	0xFF8
 15793                           tblptrh	equ	0xFF7
 15794                           tblptrl	equ	0xFF6
 15795                           tablat	equ	0xFF5
 15796                           prodh	equ	0xFF4
 15797                           prodl	equ	0xFF3
 15798                           intcon	equ	0xFF2
 15799                           intcon2	equ	0xFF1
 15800                           postinc0	equ	0xFEE
 15801                           wreg	equ	0xFE8
 15802                           indf1	equ	0xFE7
 15803                           postinc1	equ	0xFE6
 15804                           postdec1	equ	0xFE5
 15805                           fsr1h	equ	0xFE2
 15806                           fsr1l	equ	0xFE1
 15807                           indf2	equ	0xFDF
 15808                           postinc2	equ	0xFDE
 15809                           postdec2	equ	0xFDD
 15810                           plusw2	equ	0xFDB
 15811                           fsr2h	equ	0xFDA
 15812                           fsr2l	equ	0xFD9
 15813                           status	equ	0xFD8
 15814                           
 15815 ;; *************** function _timer0_init *****************
 15816 ;; Defined at:
 15817 ;;		line 34 in file "../My_library/My_PIC.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  prescaler       1    wreg     unsigned char 
 15820 ;; Auto vars:     Size  Location     Type
 15821 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15822 ;; Return value:  Size  Location     Type
 15823 ;;		None               void
 15824 ;; Registers used:
 15825 ;;		wreg, status,2, status,0
 15826 ;; Tracked objects:
 15827 ;;		On entry : 0/0
 15828 ;;		On exit  : 0/0
 15829 ;;		Unchanged: 0/0
 15830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15835 ;;Total ram usage:        2 bytes
 15836 ;; Hardware stack levels used:    1
 15837 ;; Hardware stack levels required when called:   12
 15838 ;; This function calls:
 15839 ;;		Nothing
 15840 ;; This function is called by:
 15841 ;;		_hardware_init
 15842 ;; This function uses a non-reentrant model
 15843 ;;
 15844                           
 15845                           	psect	text52
 15846  0167C6                     __ptext52:
 15847                           	opt stack 0
 15848  0167C6                     _timer0_init:
 15849                           	opt stack 17
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;incstack = 0
 15853                           ;timer0_init@prescaler stored from wreg
 15854  0167C6  0100               	movlb	0	; () banked
 15855  0167C8  6F61               	movwf	timer0_init@prescaler& (0+255),b
 15856                           
 15857                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 15858  0167CA  8ED5               	bsf	4053,7,c	;volatile
 15859                           
 15860                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 15861  0167CC  8CD5               	bsf	4053,6,c	;volatile
 15862                           
 15863                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 15864  0167CE  9AD5               	bcf	4053,5,c	;volatile
 15865                           
 15866                           ;My_PIC.c: 38: if (prescaler == 0) {
 15867  0167D0  0100               	movlb	0	; () banked
 15868  0167D2  5161               	movf	timer0_init@prescaler& (0+255),w,b
 15869  0167D4  0100               	movlb	0	; () banked
 15870  0167D6  A4D8               	btfss	status,2,c
 15871  0167D8  D002               	goto	l705
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 15875  0167DA  86D5               	bsf	4053,3,c	;volatile
 15876                           
 15877                           ;My_PIC.c: 40: } else {
 15878  0167DC  D00C               	goto	l12096
 15879  0167DE                     l705:
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 15883  0167DE  96D5               	bcf	4053,3,c	;volatile
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 15887  0167E0  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 15888  0167E4  0EFF               	movlw	255
 15889  0167E6  0100               	movlb	0	; () banked
 15890  0167E8  2760               	addwf	??_timer0_init& (0+255),f,b
 15891  0167EA  50D5               	movf	4053,w,c	;volatile
 15892  0167EC  0100               	movlb	0	; () banked
 15893  0167EE  1960               	xorwf	??_timer0_init& (0+255),w,b
 15894  0167F0  0BF8               	andlw	-8
 15895  0167F2  1960               	xorwf	??_timer0_init& (0+255),w,b
 15896  0167F4  6ED5               	movwf	4053,c	;volatile
 15897  0167F6                     l12096:
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;My_PIC.c: 43: }
 15901                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 15902  0167F6  8AF2               	bsf	intcon,5,c	;volatile
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 15906  0167F8  94F2               	bcf	intcon,2,c	;volatile
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 15910  0167FA  94F1               	bcf	intcon2,2,c	;volatile
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 15914  0167FC  8CF2               	bsf	intcon,6,c	;volatile
 15915                           
 15916                           ; BSR set to: 0
 15917  0167FE  0012               	return		;funcret
 15918  016800                     __end_of_timer0_init:
 15919                           	opt stack 0
 15920                           tblptru	equ	0xFF8
 15921                           tblptrh	equ	0xFF7
 15922                           tblptrl	equ	0xFF6
 15923                           tablat	equ	0xFF5
 15924                           prodh	equ	0xFF4
 15925                           prodl	equ	0xFF3
 15926                           intcon	equ	0xFF2
 15927                           intcon2	equ	0xFF1
 15928                           postinc0	equ	0xFEE
 15929                           wreg	equ	0xFE8
 15930                           indf1	equ	0xFE7
 15931                           postinc1	equ	0xFE6
 15932                           postdec1	equ	0xFE5
 15933                           fsr1h	equ	0xFE2
 15934                           fsr1l	equ	0xFE1
 15935                           indf2	equ	0xFDF
 15936                           postinc2	equ	0xFDE
 15937                           postdec2	equ	0xFDD
 15938                           plusw2	equ	0xFDB
 15939                           fsr2h	equ	0xFDA
 15940                           fsr2l	equ	0xFD9
 15941                           status	equ	0xFD8
 15942                           
 15943 ;; *************** function _USB_CDC_init *****************
 15944 ;; Defined at:
 15945 ;;		line 20 in file "../My_library/My_usb_cdc.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;		None
 15948 ;; Auto vars:     Size  Location     Type
 15949 ;;		None
 15950 ;; Return value:  Size  Location     Type
 15951 ;;		None               void
 15952 ;; Registers used:
 15953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15954 ;; Tracked objects:
 15955 ;;		On entry : 0/0
 15956 ;;		On exit  : 0/0
 15957 ;;		Unchanged: 0/0
 15958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15963 ;;Total ram usage:        0 bytes
 15964 ;; Hardware stack levels used:    1
 15965 ;; Hardware stack levels required when called:   14
 15966 ;; This function calls:
 15967 ;;		_USBDeviceAttach
 15968 ;;		_USBDeviceInit
 15969 ;;		_USB_CDC_buffer_init
 15970 ;; This function is called by:
 15971 ;;		_hardware_init
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           	psect	text53
 15976  016D22                     __ptext53:
 15977                           	opt stack 0
 15978  016D22                     _USB_CDC_init:
 15979                           	opt stack 15
 15980                           
 15981                           ;My_usb_cdc.c: 21: USBDeviceInit();
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;incstack = 0
 15985  016D22  EC44  F099         	call	_USBDeviceInit	;wreg free
 15986                           
 15987                           ;My_usb_cdc.c: 22: USBDeviceAttach();
 15988  016D26  EC39  F0B4         	call	_USBDeviceAttach	;wreg free
 15989                           
 15990                           ;My_usb_cdc.c: 23: USB_CDC_buffer_init();
 15991  016D2A  EC3C  F0B3         	call	_USB_CDC_buffer_init	;wreg free
 15992  016D2E  0012               	return		;funcret
 15993  016D30                     __end_of_USB_CDC_init:
 15994                           	opt stack 0
 15995                           tblptru	equ	0xFF8
 15996                           tblptrh	equ	0xFF7
 15997                           tblptrl	equ	0xFF6
 15998                           tablat	equ	0xFF5
 15999                           prodh	equ	0xFF4
 16000                           prodl	equ	0xFF3
 16001                           intcon	equ	0xFF2
 16002                           intcon2	equ	0xFF1
 16003                           postinc0	equ	0xFEE
 16004                           wreg	equ	0xFE8
 16005                           indf1	equ	0xFE7
 16006                           postinc1	equ	0xFE6
 16007                           postdec1	equ	0xFE5
 16008                           fsr1h	equ	0xFE2
 16009                           fsr1l	equ	0xFE1
 16010                           indf2	equ	0xFDF
 16011                           postinc2	equ	0xFDE
 16012                           postdec2	equ	0xFDD
 16013                           plusw2	equ	0xFDB
 16014                           fsr2h	equ	0xFDA
 16015                           fsr2l	equ	0xFD9
 16016                           status	equ	0xFD8
 16017                           
 16018 ;; *************** function _USB_CDC_buffer_init *****************
 16019 ;; Defined at:
 16020 ;;		line 26 in file "../My_library/My_usb_cdc.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;		None               void
 16027 ;; Registers used:
 16028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16038 ;;Total ram usage:        0 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; Hardware stack levels required when called:   13
 16041 ;; This function calls:
 16042 ;;		_ringbuf_init
 16043 ;; This function is called by:
 16044 ;;		_USB_CDC_init
 16045 ;; This function uses a non-reentrant model
 16046 ;;
 16047                           
 16048                           	psect	text54
 16049  016678                     __ptext54:
 16050                           	opt stack 0
 16051  016678                     _USB_CDC_buffer_init:
 16052                           	opt stack 15
 16053                           
 16054                           ;My_usb_cdc.c: 27: static uint8_t rxbuf[250];
 16055                           ;My_usb_cdc.c: 28: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
 16056                           
 16057                           ;incstack = 0
 16058  016678  0EBE               	movlw	low _usb_rx
 16059  01667A  0100               	movlb	0	; () banked
 16060  01667C  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16061  01667E  0E02               	movlw	high _usb_rx
 16062  016680  0100               	movlb	0	; () banked
 16063  016682  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16064  016684  0E00               	movlw	low USB_CDC_buffer_init@rxbuf
 16065  016686  0100               	movlb	0	; () banked
 16066  016688  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16067  01668A  0E05               	movlw	high USB_CDC_buffer_init@rxbuf
 16068  01668C  0100               	movlb	0	; () banked
 16069  01668E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16070  016690  0E00               	movlw	0
 16071  016692  0100               	movlb	0	; () banked
 16072  016694  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16073  016696  0EFA               	movlw	250
 16074  016698  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16075  01669A  ECC1  F0B2         	call	_ringbuf_init	;wreg free
 16076                           
 16077                           ;My_usb_cdc.c: 29: static uint8_t txbuf[1500];
 16078                           ;My_usb_cdc.c: 30: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
 16079  01669E  0EC6               	movlw	low _usb_tx
 16080  0166A0  0100               	movlb	0	; () banked
 16081  0166A2  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16082  0166A4  0E02               	movlw	high _usb_tx
 16083  0166A6  0100               	movlb	0	; () banked
 16084  0166A8  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16085  0166AA  0E69               	movlw	low USB_CDC_buffer_init@txbuf
 16086  0166AC  0100               	movlb	0	; () banked
 16087  0166AE  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16088  0166B0  0E06               	movlw	high USB_CDC_buffer_init@txbuf
 16089  0166B2  0100               	movlb	0	; () banked
 16090  0166B4  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16091  0166B6  0E05               	movlw	5
 16092  0166B8  0100               	movlb	0	; () banked
 16093  0166BA  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16094  0166BC  0EDC               	movlw	220
 16095  0166BE  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16096  0166C0  ECC1  F0B2         	call	_ringbuf_init	;wreg free
 16097  0166C4  0012               	return		;funcret
 16098  0166C6                     __end_of_USB_CDC_buffer_init:
 16099                           	opt stack 0
 16100                           tblptru	equ	0xFF8
 16101                           tblptrh	equ	0xFF7
 16102                           tblptrl	equ	0xFF6
 16103                           tablat	equ	0xFF5
 16104                           prodh	equ	0xFF4
 16105                           prodl	equ	0xFF3
 16106                           intcon	equ	0xFF2
 16107                           intcon2	equ	0xFF1
 16108                           postinc0	equ	0xFEE
 16109                           wreg	equ	0xFE8
 16110                           indf1	equ	0xFE7
 16111                           postinc1	equ	0xFE6
 16112                           postdec1	equ	0xFE5
 16113                           fsr1h	equ	0xFE2
 16114                           fsr1l	equ	0xFE1
 16115                           indf2	equ	0xFDF
 16116                           postinc2	equ	0xFDE
 16117                           postdec2	equ	0xFDD
 16118                           plusw2	equ	0xFDB
 16119                           fsr2h	equ	0xFDA
 16120                           fsr2l	equ	0xFD9
 16121                           status	equ	0xFD8
 16122                           
 16123 ;; *************** function _ringbuf_init *****************
 16124 ;; Defined at:
 16125 ;;		line 5 in file "../My_library/My_ringbuf.c"
 16126 ;; Parameters:    Size  Location     Type
 16127 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 16128 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), lcd_tx(8), 
 16129 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 16130 ;;		 -> USB_CDC_buffer_init@txbuf(1500), USB_CDC_buffer_init@rxbuf(250), terminal_task@buf(100), ST7032_init@buf(200), 
 16131 ;;  bufsize         2    4[BANK0 ] unsigned int 
 16132 ;; Auto vars:     Size  Location     Type
 16133 ;;		None
 16134 ;; Return value:  Size  Location     Type
 16135 ;;		None               void
 16136 ;; Registers used:
 16137 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16138 ;; Tracked objects:
 16139 ;;		On entry : 0/0
 16140 ;;		On exit  : 0/0
 16141 ;;		Unchanged: 0/0
 16142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16143 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16147 ;;Total ram usage:        6 bytes
 16148 ;; Hardware stack levels used:    1
 16149 ;; Hardware stack levels required when called:   12
 16150 ;; This function calls:
 16151 ;;		Nothing
 16152 ;; This function is called by:
 16153 ;;		_terminal_task
 16154 ;;		_USB_CDC_buffer_init
 16155 ;;		_ST7032_init
 16156 ;; This function uses a non-reentrant model
 16157 ;;
 16158                           
 16159                           	psect	text55
 16160  016582                     __ptext55:
 16161                           	opt stack 0
 16162  016582                     _ringbuf_init:
 16163                           	opt stack 17
 16164                           
 16165                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 16166                           
 16167                           ;incstack = 0
 16168  016582  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 16169  016586  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 16170  01658A  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 16171  01658E  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 16172                           
 16173                           ;My_ringbuf.c: 7: rb->size = bufsize;
 16174  016592  0100               	movlb	0	; () banked
 16175  016594  EE20 F002          	lfsr	2,2
 16176  016598  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16177  01659A  26D9               	addwf	fsr2l,f,c
 16178  01659C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16179  01659E  22DA               	addwfc	fsr2h,f,c
 16180  0165A0  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 16181  0165A4  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 16182                           
 16183                           ; BSR set to: 0
 16184                           ;My_ringbuf.c: 8: rb->head = 0;
 16185  0165A8  0100               	movlb	0	; () banked
 16186  0165AA  EE20 F004          	lfsr	2,4
 16187  0165AE  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16188  0165B0  26D9               	addwf	fsr2l,f,c
 16189  0165B2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16190  0165B4  22DA               	addwfc	fsr2h,f,c
 16191  0165B6  0E00               	movlw	0
 16192  0165B8  6EDE               	movwf	postinc2,c
 16193  0165BA  0E00               	movlw	0
 16194  0165BC  6EDD               	movwf	postdec2,c
 16195                           
 16196                           ; BSR set to: 0
 16197                           ;My_ringbuf.c: 9: rb->tail = 0;
 16198  0165BE  0100               	movlb	0	; () banked
 16199  0165C0  EE20 F006          	lfsr	2,6
 16200  0165C4  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16201  0165C6  26D9               	addwf	fsr2l,f,c
 16202  0165C8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16203  0165CA  22DA               	addwfc	fsr2h,f,c
 16204  0165CC  0E00               	movlw	0
 16205  0165CE  6EDE               	movwf	postinc2,c
 16206  0165D0  0E00               	movlw	0
 16207  0165D2  6EDD               	movwf	postdec2,c
 16208                           
 16209                           ; BSR set to: 0
 16210  0165D4  0012               	return		;funcret
 16211  0165D6                     __end_of_ringbuf_init:
 16212                           	opt stack 0
 16213                           tblptru	equ	0xFF8
 16214                           tblptrh	equ	0xFF7
 16215                           tblptrl	equ	0xFF6
 16216                           tablat	equ	0xFF5
 16217                           prodh	equ	0xFF4
 16218                           prodl	equ	0xFF3
 16219                           intcon	equ	0xFF2
 16220                           intcon2	equ	0xFF1
 16221                           postinc0	equ	0xFEE
 16222                           wreg	equ	0xFE8
 16223                           indf1	equ	0xFE7
 16224                           postinc1	equ	0xFE6
 16225                           postdec1	equ	0xFE5
 16226                           fsr1h	equ	0xFE2
 16227                           fsr1l	equ	0xFE1
 16228                           indf2	equ	0xFDF
 16229                           postinc2	equ	0xFDE
 16230                           postdec2	equ	0xFDD
 16231                           plusw2	equ	0xFDB
 16232                           fsr2h	equ	0xFDA
 16233                           fsr2l	equ	0xFD9
 16234                           status	equ	0xFD8
 16235                           
 16236 ;; *************** function _USBDeviceInit *****************
 16237 ;; Defined at:
 16238 ;;		line 299 in file "../My_library/usb/usb_device.c"
 16239 ;; Parameters:    Size  Location     Type
 16240 ;;		None
 16241 ;; Auto vars:     Size  Location     Type
 16242 ;;  i               1    8[BANK0 ] unsigned char 
 16243 ;; Return value:  Size  Location     Type
 16244 ;;		None               void
 16245 ;; Registers used:
 16246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16247 ;; Tracked objects:
 16248 ;;		On entry : 0/0
 16249 ;;		On exit  : 0/0
 16250 ;;		Unchanged: 0/0
 16251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16255 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16256 ;;Total ram usage:        1 bytes
 16257 ;; Hardware stack levels used:    1
 16258 ;; Hardware stack levels required when called:   13
 16259 ;; This function calls:
 16260 ;;		_memset
 16261 ;; This function is called by:
 16262 ;;		_USB_CDC_init
 16263 ;; This function uses a non-reentrant model
 16264 ;;
 16265                           
 16266                           	psect	text56
 16267  013288                     __ptext56:
 16268                           	opt stack 0
 16269  013288                     _USBDeviceInit:
 16270                           	opt stack 15
 16271                           
 16272                           ;usb_device.c: 301: uint8_t i;
 16273                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;incstack = 0
 16277  013288  98A0               	bcf	4000,4,c	;volatile
 16278                           
 16279                           ;usb_device.c: 306: {UEIR = 0;};
 16280  01328A  0E00               	movlw	0
 16281  01328C  6E63               	movwf	3939,c	;volatile
 16282                           
 16283                           ;usb_device.c: 309: {UIR = 0;};
 16284  01328E  0E00               	movlw	0
 16285  013290  6E62               	movwf	3938,c	;volatile
 16286                           
 16287                           ;usb_device.c: 312: UEP0 = 0;
 16288  013292  0E00               	movlw	0
 16289  013294  010F               	movlb	15	; () banked
 16290  013296  6F26               	movwf	38,b	;volatile
 16291                           
 16292                           ; BSR set to: 15
 16293                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 16294  013298  0E27               	movlw	39
 16295  01329A  0100               	movlb	0	; () banked
 16296  01329C  6F60               	movwf	memset@p1& (0+255),b
 16297  01329E  0E0F               	movlw	15
 16298  0132A0  0100               	movlb	0	; () banked
 16299  0132A2  6F61               	movwf	(memset@p1+1)& (0+255),b
 16300  0132A4  0E00               	movlw	0
 16301  0132A6  0100               	movlb	0	; () banked
 16302  0132A8  6F63               	movwf	(memset@c+1)& (0+255),b
 16303  0132AA  0E00               	movlw	0
 16304  0132AC  6F62               	movwf	memset@c& (0+255),b
 16305  0132AE  0E00               	movlw	0
 16306  0132B0  0100               	movlb	0	; () banked
 16307  0132B2  6F65               	movwf	(memset@n+1)& (0+255),b
 16308  0132B4  0E02               	movlw	2
 16309  0132B6  6F64               	movwf	memset@n& (0+255),b
 16310  0132B8  EC8C  F0B4         	call	_memset	;wreg free
 16311                           
 16312                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16313  0132BC  0E16               	movlw	22
 16314  0132BE  010F               	movlb	15	; () banked
 16315  0132C0  6F39               	movwf	57,b	;volatile
 16316                           
 16317                           ; BSR set to: 15
 16318  0132C2  0E9F               	movlw	159
 16319  0132C4  010F               	movlb	15	; () banked
 16320  0132C6  6F37               	movwf	55,b	;volatile
 16321                           
 16322                           ; BSR set to: 15
 16323  0132C8  0E7B               	movlw	123
 16324  0132CA  010F               	movlb	15	; () banked
 16325  0132CC  6F36               	movwf	54,b	;volatile
 16326                           
 16327                           ; BSR set to: 15
 16328                           ;usb_device.c: 319: ;
 16329                           ;usb_device.c: 322: ;
 16330                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16331  0132CE  0E00               	movlw	0
 16332  0132D0  0100               	movlb	0	; () banked
 16333  0132D2  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16334  0132D4                     l11476:
 16335                           
 16336                           ; BSR set to: 0
 16337  0132D4  0E0B               	movlw	11
 16338  0132D6  0100               	movlb	0	; () banked
 16339  0132D8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16340  0132DA  D001               	goto	l11480
 16341  0132DC  D010               	goto	l146
 16342  0132DE                     l11480:
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;usb_device.c: 326: {
 16346                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 16347  0132DE  0100               	movlb	0	; () banked
 16348  0132E0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16349  0132E2  0D04               	mullw	4
 16350  0132E4  0E00               	movlw	0
 16351  0132E6  24F3               	addwf	prodl,w,c
 16352  0132E8  6ED9               	movwf	fsr2l,c
 16353  0132EA  0E0D               	movlw	13
 16354  0132EC  20F4               	addwfc	prodh,w,c
 16355  0132EE  6EDA               	movwf	fsr2h,c
 16356  0132F0  6ADE               	clrf	postinc2,c
 16357  0132F2  6ADE               	clrf	postinc2,c
 16358  0132F4  6ADE               	clrf	postinc2,c
 16359  0132F6  6ADD               	clrf	postdec2,c
 16360                           
 16361                           ; BSR set to: 0
 16362  0132F8  0100               	movlb	0	; () banked
 16363  0132FA  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16364  0132FC  D7EB               	goto	l11476
 16365  0132FE                     l146:
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;usb_device.c: 328: }
 16369                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 16370  0132FE  8C65               	bsf	3941,6,c	;volatile
 16371                           
 16372                           ; BSR set to: 0
 16373                           ;usb_device.c: 334: UADDR = 0x00;
 16374  013300  0E00               	movlw	0
 16375  013302  010F               	movlb	15	; () banked
 16376  013304  6F38               	movwf	56,b	;volatile
 16377                           
 16378                           ; BSR set to: 15
 16379                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 16380  013306  9865               	bcf	3941,4,c	;volatile
 16381                           
 16382                           ; BSR set to: 15
 16383                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 16384  013308  9C65               	bcf	3941,6,c	;volatile
 16385                           
 16386                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 16387  01330A  D00C               	goto	l11500
 16388  01330C                     l11492:
 16389                           
 16390                           ;usb_device.c: 344: {
 16391                           ;usb_device.c: 345: (UIR &= 0xF7);
 16392  01330C  9662               	bcf	3938,3,c	;volatile
 16393                           
 16394                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 16395  01330E  0E00               	movlw	0
 16396  013310  0100               	movlb	0	; () banked
 16397  013312  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16398                           
 16399                           ; BSR set to: 0
 16400                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 16401  013314  0E00               	movlw	0
 16402  013316  0100               	movlb	0	; () banked
 16403  013318  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16404                           
 16405                           ; BSR set to: 0
 16406                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 16407  01331A  0E00               	movlw	0
 16408  01331C  0100               	movlb	0	; () banked
 16409  01331E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16410  013320  0E00               	movlw	0
 16411  013322  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16412  013324                     l11500:
 16413  013324  B662               	btfsc	3938,3,c	;volatile
 16414  013326  D7F2               	goto	l11492
 16415                           
 16416                           ;usb_device.c: 350: }
 16417                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 16418  013328  0E01               	movlw	1
 16419  01332A  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16420                           
 16421                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 16422  01332C  0E01               	movlw	1
 16423  01332E  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16424                           
 16425                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 16426  013330  0E00               	movlw	0
 16427  013332  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16428                           
 16429                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 16430  013334  0E00               	movlw	0
 16431  013336  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16432                           
 16433                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 16434  013338  0E00               	movlw	0
 16435  01333A  0101               	movlb	1	; () banked
 16436  01333C  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16437                           
 16438                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 16439  01333E  0E00               	movlw	0
 16440  013340  0100               	movlb	0	; () banked
 16441  013342  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16442  013344                     l11504:
 16443                           
 16444                           ; BSR set to: 0
 16445  013344  0E02               	movlw	2
 16446  013346  0100               	movlb	0	; () banked
 16447  013348  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16448  01334A  D001               	goto	l11508
 16449  01334C  D033               	goto	l11514
 16450  01334E                     l11508:
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;usb_device.c: 364: {
 16454                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 16455  01334E  0100               	movlb	0	; () banked
 16456  013350  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16457  013352  0D02               	mullw	2
 16458  013354  0EF5               	movlw	low _pBDTEntryIn
 16459  013356  24F3               	addwf	prodl,w,c
 16460  013358  6ED9               	movwf	fsr2l,c
 16461  01335A  0E00               	movlw	high _pBDTEntryIn
 16462  01335C  20F4               	addwfc	prodh,w,c
 16463  01335E  6EDA               	movwf	fsr2h,c
 16464  013360  0E00               	movlw	0
 16465  013362  6EDE               	movwf	postinc2,c
 16466  013364  0E00               	movlw	0
 16467  013366  6EDD               	movwf	postdec2,c
 16468                           
 16469                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 16470  013368  0100               	movlb	0	; () banked
 16471  01336A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16472  01336C  0D02               	mullw	2
 16473  01336E  0E00               	movlw	low _pBDTEntryOut
 16474  013370  24F3               	addwf	prodl,w,c
 16475  013372  6ED9               	movwf	fsr2l,c
 16476  013374  0E01               	movlw	high _pBDTEntryOut
 16477  013376  20F4               	addwfc	prodh,w,c
 16478  013378  6EDA               	movwf	fsr2h,c
 16479  01337A  0E00               	movlw	0
 16480  01337C  6EDE               	movwf	postinc2,c
 16481  01337E  0E00               	movlw	0
 16482  013380  6EDD               	movwf	postdec2,c
 16483                           
 16484                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 16485  013382  0100               	movlb	0	; () banked
 16486  013384  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16487  013386  0D01               	mullw	1
 16488  013388  0E01               	movlw	low _ep_data_in
 16489  01338A  24F3               	addwf	prodl,w,c
 16490  01338C  6ED9               	movwf	fsr2l,c
 16491  01338E  0E00               	movlw	high _ep_data_in
 16492  013390  20F4               	addwfc	prodh,w,c
 16493  013392  6EDA               	movwf	fsr2h,c
 16494  013394  0E00               	movlw	0
 16495  013396  6EDF               	movwf	indf2,c
 16496                           
 16497                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 16498  013398  0100               	movlb	0	; () banked
 16499  01339A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16500  01339C  0D01               	mullw	1
 16501  01339E  0E04               	movlw	low _ep_data_out
 16502  0133A0  24F3               	addwf	prodl,w,c
 16503  0133A2  6ED9               	movwf	fsr2l,c
 16504  0133A4  0E00               	movlw	high _ep_data_out
 16505  0133A6  20F4               	addwfc	prodh,w,c
 16506  0133A8  6EDA               	movwf	fsr2h,c
 16507  0133AA  0E00               	movlw	0
 16508  0133AC  6EDF               	movwf	indf2,c
 16509                           
 16510                           ; BSR set to: 0
 16511  0133AE  0100               	movlb	0	; () banked
 16512  0133B0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16513  0133B2  D7C8               	goto	l11504
 16514  0133B4                     l11514:
 16515                           
 16516                           ; BSR set to: 0
 16517                           ;usb_device.c: 369: }
 16518                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16519  0133B4  0E08               	movlw	8
 16520  0133B6  0100               	movlb	0	; () banked
 16521  0133B8  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16522  0133BA  0E0D               	movlw	13
 16523  0133BC  0100               	movlb	0	; () banked
 16524  0133BE  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16525                           
 16526                           ; BSR set to: 0
 16527                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 16528  0133C0  0E16               	movlw	22
 16529  0133C2  010F               	movlb	15	; () banked
 16530  0133C4  6F26               	movwf	38,b	;volatile
 16531                           
 16532                           ; BSR set to: 15
 16533                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16534  0133C6  0E0D               	movlw	13
 16535  0133C8  010D               	movlb	13	; () banked
 16536  0133CA  6F03               	movwf	3,b	;volatile
 16537  0133CC  0E30               	movlw	48
 16538  0133CE  6F02               	movwf	2,b	;volatile
 16539                           
 16540                           ; BSR set to: 13
 16541                           ;usb_device.c: 377: BDT[0].CNT = 8;
 16542  0133D0  0E08               	movlw	8
 16543  0133D2  010D               	movlb	13	; () banked
 16544  0133D4  6F01               	movwf	1,b	;volatile
 16545                           
 16546                           ; BSR set to: 13
 16547                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 16548  0133D6  0E04               	movlw	4
 16549  0133D8  010D               	movlb	13	; () banked
 16550  0133DA  6F00               	movwf	0,b	;volatile
 16551                           
 16552                           ; BSR set to: 13
 16553                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 16554  0133DC  010D               	movlb	13	; () banked
 16555  0133DE  8F00               	bsf	0,7,b	;volatile
 16556                           
 16557                           ; BSR set to: 13
 16558                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 16559  0133E0  0E00               	movlw	0
 16560  0133E2  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16561                           
 16562                           ; BSR set to: 13
 16563                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 16564  0133E4  0E00               	movlw	0
 16565  0133E6  6E13               	movwf	_USBDeviceState,c	;volatile
 16566                           
 16567                           ; BSR set to: 13
 16568  0133E8  0012               	return		;funcret
 16569  0133EA                     __end_of_USBDeviceInit:
 16570                           	opt stack 0
 16571                           tblptru	equ	0xFF8
 16572                           tblptrh	equ	0xFF7
 16573                           tblptrl	equ	0xFF6
 16574                           tablat	equ	0xFF5
 16575                           prodh	equ	0xFF4
 16576                           prodl	equ	0xFF3
 16577                           intcon	equ	0xFF2
 16578                           intcon2	equ	0xFF1
 16579                           postinc0	equ	0xFEE
 16580                           wreg	equ	0xFE8
 16581                           indf1	equ	0xFE7
 16582                           postinc1	equ	0xFE6
 16583                           postdec1	equ	0xFE5
 16584                           fsr1h	equ	0xFE2
 16585                           fsr1l	equ	0xFE1
 16586                           indf2	equ	0xFDF
 16587                           postinc2	equ	0xFDE
 16588                           postdec2	equ	0xFDD
 16589                           plusw2	equ	0xFDB
 16590                           fsr2h	equ	0xFDA
 16591                           fsr2l	equ	0xFD9
 16592                           status	equ	0xFD8
 16593                           
 16594 ;; *************** function _memset *****************
 16595 ;; Defined at:
 16596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;  p1              2    0[BANK0 ] PTR void 
 16599 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16600 ;;  c               2    2[BANK0 ] int 
 16601 ;;  n               2    4[BANK0 ] unsigned int 
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16604 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16605 ;; Return value:  Size  Location     Type
 16606 ;;                  2    0[BANK0 ] PTR void 
 16607 ;; Registers used:
 16608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16609 ;; Tracked objects:
 16610 ;;		On entry : 0/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16614 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16617 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16618 ;;Total ram usage:        8 bytes
 16619 ;; Hardware stack levels used:    1
 16620 ;; Hardware stack levels required when called:   12
 16621 ;; This function calls:
 16622 ;;		Nothing
 16623 ;; This function is called by:
 16624 ;;		_USBDeviceInit
 16625 ;; This function uses a non-reentrant model
 16626 ;;
 16627                           
 16628                           	psect	text57
 16629  016918                     __ptext57:
 16630                           	opt stack 0
 16631  016918                     _memset:
 16632                           	opt stack 15
 16633                           
 16634                           ; BSR set to: 13
 16635                           ;incstack = 0
 16636  016918  C060  F066         	movff	memset@p1,memset@p
 16637  01691C  C061  F067         	movff	memset@p1+1,memset@p+1
 16638  016920  D009               	goto	l11098
 16639  016922                     l11094:
 16640  016922  C066  FFD9         	movff	memset@p,fsr2l
 16641  016926  C067  FFDA         	movff	memset@p+1,fsr2h
 16642  01692A  C062  FFDF         	movff	memset@c,indf2
 16643  01692E  0100               	movlb	0	; () banked
 16644  016930  4B66               	infsnz	memset@p& (0+255),f,b
 16645  016932  2B67               	incf	(memset@p+1)& (0+255),f,b
 16646  016934                     l11098:
 16647  016934  0100               	movlb	0	; () banked
 16648  016936  0764               	decf	memset@n& (0+255),f,b
 16649  016938  A0D8               	btfss	status,0,c
 16650  01693A  0765               	decf	(memset@n+1)& (0+255),f,b
 16651  01693C  0100               	movlb	0	; () banked
 16652  01693E  2964               	incf	memset@n& (0+255),w,b
 16653  016940  E1F0               	bnz	l11094
 16654  016942  0100               	movlb	0	; () banked
 16655  016944  2965               	incf	(memset@n+1)& (0+255),w,b
 16656  016946  B4D8               	btfsc	status,2,c
 16657  016948  0012               	return	
 16658  01694A  D7EB               	goto	l11094
 16659  01694C                     __end_of_memset:
 16660                           	opt stack 0
 16661                           tblptru	equ	0xFF8
 16662                           tblptrh	equ	0xFF7
 16663                           tblptrl	equ	0xFF6
 16664                           tablat	equ	0xFF5
 16665                           prodh	equ	0xFF4
 16666                           prodl	equ	0xFF3
 16667                           intcon	equ	0xFF2
 16668                           intcon2	equ	0xFF1
 16669                           postinc0	equ	0xFEE
 16670                           wreg	equ	0xFE8
 16671                           indf1	equ	0xFE7
 16672                           postinc1	equ	0xFE6
 16673                           postdec1	equ	0xFE5
 16674                           fsr1h	equ	0xFE2
 16675                           fsr1l	equ	0xFE1
 16676                           indf2	equ	0xFDF
 16677                           postinc2	equ	0xFDE
 16678                           postdec2	equ	0xFDD
 16679                           plusw2	equ	0xFDB
 16680                           fsr2h	equ	0xFDA
 16681                           fsr2l	equ	0xFD9
 16682                           status	equ	0xFD8
 16683                           
 16684 ;; *************** function _USBDeviceAttach *****************
 16685 ;; Defined at:
 16686 ;;		line 1353 in file "../My_library/usb/usb_device.c"
 16687 ;; Parameters:    Size  Location     Type
 16688 ;;		None
 16689 ;; Auto vars:     Size  Location     Type
 16690 ;;		None
 16691 ;; Return value:  Size  Location     Type
 16692 ;;		None               void
 16693 ;; Registers used:
 16694 ;;		wreg, status,2
 16695 ;; Tracked objects:
 16696 ;;		On entry : 0/0
 16697 ;;		On exit  : 0/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;Total ram usage:        0 bytes
 16705 ;; Hardware stack levels used:    1
 16706 ;; Hardware stack levels required when called:   12
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_USB_CDC_init
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text58
 16715  016872                     __ptext58:
 16716                           	opt stack 0
 16717  016872                     _USBDeviceAttach:
 16718                           	opt stack 16
 16719                           
 16720                           ;usb_device.c: 1357: {
 16721                           ;usb_device.c: 1358: if(1 == 1)
 16722                           
 16723                           ; BSR set to: 0
 16724                           ;incstack = 0
 16725  016872  5013               	movf	_USBDeviceState,w,c	;volatile
 16726  016874  A4D8               	btfss	status,2,c
 16727  016876  0012               	return	
 16728                           
 16729                           ;usb_device.c: 1359: {
 16730                           ;usb_device.c: 1361: UCON = 0;
 16731  016878  0E00               	movlw	0
 16732  01687A  6E65               	movwf	3941,c	;volatile
 16733                           
 16734                           ;usb_device.c: 1364: UIE = 0;
 16735  01687C  0E00               	movlw	0
 16736  01687E  010F               	movlb	15	; () banked
 16737  016880  6F36               	movwf	54,b	;volatile
 16738                           
 16739                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16740  016882  0E16               	movlw	22
 16741  016884  010F               	movlb	15	; () banked
 16742  016886  6F39               	movwf	57,b	;volatile
 16743  016888  0E9F               	movlw	159
 16744  01688A  010F               	movlb	15	; () banked
 16745  01688C  6F37               	movwf	55,b	;volatile
 16746  01688E  0E7B               	movlw	123
 16747  016890  010F               	movlb	15	; () banked
 16748  016892  6F36               	movwf	54,b	;volatile
 16749                           
 16750                           ; BSR set to: 15
 16751                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16752  016894  8ED0               	bsf	4048,7,c	;volatile
 16753                           
 16754                           ; BSR set to: 15
 16755  016896  88A2               	bsf	4002,4,c	;volatile
 16756                           
 16757                           ; BSR set to: 15
 16758  016898  88A0               	bsf	4000,4,c	;volatile
 16759                           
 16760                           ; BSR set to: 15
 16761  01689A  8EF2               	bsf	intcon,7,c	;volatile
 16762                           
 16763                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16764  01689C  D001               	goto	l207
 16765  01689E                     l208:
 16766  01689E  8665               	bsf	3941,3,c	;volatile
 16767  0168A0                     l207:
 16768  0168A0  A665               	btfss	3941,3,c	;volatile
 16769  0168A2  D7FD               	goto	l208
 16770                           
 16771                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
 16772  0168A4  0E01               	movlw	1
 16773  0168A6  6E13               	movwf	_USBDeviceState,c	;volatile
 16774  0168A8  0012               	return	
 16775  0168AA                     __end_of_USBDeviceAttach:
 16776                           	opt stack 0
 16777                           tblptru	equ	0xFF8
 16778                           tblptrh	equ	0xFF7
 16779                           tblptrl	equ	0xFF6
 16780                           tablat	equ	0xFF5
 16781                           prodh	equ	0xFF4
 16782                           prodl	equ	0xFF3
 16783                           intcon	equ	0xFF2
 16784                           intcon2	equ	0xFF1
 16785                           postinc0	equ	0xFEE
 16786                           wreg	equ	0xFE8
 16787                           indf1	equ	0xFE7
 16788                           postinc1	equ	0xFE6
 16789                           postdec1	equ	0xFE5
 16790                           fsr1h	equ	0xFE2
 16791                           fsr1l	equ	0xFE1
 16792                           indf2	equ	0xFDF
 16793                           postinc2	equ	0xFDE
 16794                           postdec2	equ	0xFDD
 16795                           plusw2	equ	0xFDB
 16796                           fsr2h	equ	0xFDA
 16797                           fsr2l	equ	0xFD9
 16798                           status	equ	0xFD8
 16799                           
 16800 ;; *************** function _RTCC_init *****************
 16801 ;; Defined at:
 16802 ;;		line 22 in file "../My_library/My_RTCC.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;		None
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;		None
 16807 ;; Return value:  Size  Location     Type
 16808 ;;		None               void
 16809 ;; Registers used:
 16810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16820 ;;Total ram usage:        0 bytes
 16821 ;; Hardware stack levels used:    1
 16822 ;; Hardware stack levels required when called:   16
 16823 ;; This function calls:
 16824 ;;		_RTCC_from_RTCC
 16825 ;;		_RTCC_from_epoch
 16826 ;; This function is called by:
 16827 ;;		_hardware_init
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text59
 16832  016162                     __ptext59:
 16833                           	opt stack 0
 16834  016162                     _RTCC_init:
 16835                           	opt stack 13
 16836                           
 16837                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 16838                           
 16839                           ;incstack = 0
 16840  016162  010F               	movlb	15	; () banked
 16841  016164  8B3F               	bsf	63,5,b	;volatile
 16842                           
 16843                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 16844  016166  010F               	movlb	15	; () banked
 16845  016168  BB3F               	btfsc	63,5,b	;volatile
 16846  01616A  D006               	goto	l12216
 16847                           
 16848                           ; BSR set to: 15
 16849                           ;My_RTCC.c: 25: EECON2 = 0x55;
 16850  01616C  0E55               	movlw	85
 16851  01616E  6EA7               	movwf	4007,c	;volatile
 16852                           
 16853                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 16854  016170  0EAA               	movlw	170
 16855  016172  6EA7               	movwf	4007,c	;volatile
 16856                           
 16857                           ; BSR set to: 15
 16858                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 16859  016174  010F               	movlb	15	; () banked
 16860  016176  8B3F               	bsf	63,5,b	;volatile
 16861  016178                     l12216:
 16862                           
 16863                           ; BSR set to: 15
 16864                           ;My_RTCC.c: 28: }
 16865                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 16866  016178  010F               	movlb	15	; () banked
 16867  01617A  8F3F               	bsf	63,7,b	;volatile
 16868                           
 16869                           ; BSR set to: 15
 16870                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 16871  01617C  010F               	movlb	15	; () banked
 16872  01617E  953F               	bcf	63,2,b	;volatile
 16873                           
 16874                           ; BSR set to: 15
 16875                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 16876  016180  010F               	movlb	15	; () banked
 16877  016182  833C               	bsf	60,1,b	;volatile
 16878                           
 16879                           ; BSR set to: 15
 16880                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 16881  016184  010F               	movlb	15	; () banked
 16882  016186  853C               	bsf	60,2,b	;volatile
 16883                           
 16884                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 16885  016188  0E00               	movlw	0
 16886  01618A  010F               	movlb	15	; () banked
 16887  01618C  6F3E               	movwf	62,b	;volatile
 16888                           
 16889                           ; BSR set to: 15
 16890                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 16891  01618E  86CD               	bsf	4045,3,c	;volatile
 16892                           
 16893                           ; BSR set to: 15
 16894                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
 16895  016190  0E73               	movlw	low _now
 16896  016192  0100               	movlb	0	; () banked
 16897  016194  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 16898  016196  0E01               	movlw	high _now
 16899  016198  0100               	movlb	0	; () banked
 16900  01619A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 16901  01619C  EC65  F0B6         	call	_RTCC_from_RTCC	;wreg free
 16902                           
 16903                           ;My_RTCC.c: 37: if (now.DD == 0) {
 16904  0161A0  0101               	movlb	1	; () banked
 16905  0161A2  517B               	movf	(_now+8)& (0+255),w,b
 16906  0161A4  A4D8               	btfss	status,2,c
 16907  0161A6  0012               	return	
 16908                           
 16909                           ; BSR set to: 1
 16910                           ;My_RTCC.c: 38: now.epoch = 0;
 16911  0161A8  0E00               	movlw	0
 16912  0161AA  0101               	movlb	1	; () banked
 16913  0161AC  6F73               	movwf	_now& (0+255),b
 16914  0161AE  0E00               	movlw	0
 16915  0161B0  6F74               	movwf	(_now+1)& (0+255),b
 16916  0161B2  0E00               	movlw	0
 16917  0161B4  6F75               	movwf	(_now+2)& (0+255),b
 16918  0161B6  0E00               	movlw	0
 16919  0161B8  6F76               	movwf	(_now+3)& (0+255),b
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
 16923  0161BA  0E73               	movlw	low _now
 16924  0161BC  0100               	movlb	0	; () banked
 16925  0161BE  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 16926  0161C0  0E01               	movlw	high _now
 16927  0161C2  0100               	movlb	0	; () banked
 16928  0161C4  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 16929  0161C6  EC4B  F0B6         	call	_RTCC_from_epoch	;wreg free
 16930  0161CA  0012               	return	
 16931  0161CC                     __end_of_RTCC_init:
 16932                           	opt stack 0
 16933                           tblptru	equ	0xFF8
 16934                           tblptrh	equ	0xFF7
 16935                           tblptrl	equ	0xFF6
 16936                           tablat	equ	0xFF5
 16937                           prodh	equ	0xFF4
 16938                           prodl	equ	0xFF3
 16939                           intcon	equ	0xFF2
 16940                           intcon2	equ	0xFF1
 16941                           postinc0	equ	0xFEE
 16942                           wreg	equ	0xFE8
 16943                           indf1	equ	0xFE7
 16944                           postinc1	equ	0xFE6
 16945                           postdec1	equ	0xFE5
 16946                           fsr1h	equ	0xFE2
 16947                           fsr1l	equ	0xFE1
 16948                           indf2	equ	0xFDF
 16949                           postinc2	equ	0xFDE
 16950                           postdec2	equ	0xFDD
 16951                           plusw2	equ	0xFDB
 16952                           fsr2h	equ	0xFDA
 16953                           fsr2l	equ	0xFD9
 16954                           status	equ	0xFD8
 16955                           
 16956 ;; *************** function _RTCC_from_epoch *****************
 16957 ;; Defined at:
 16958 ;;		line 210 in file "../My_library/My_RTCC.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;  tm              2   47[BANK0 ] PTR struct .
 16961 ;;		 -> now(14), 
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;		None
 16964 ;; Return value:  Size  Location     Type
 16965 ;;		None               void
 16966 ;; Registers used:
 16967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16968 ;; Tracked objects:
 16969 ;;		On entry : 0/0
 16970 ;;		On exit  : 0/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16977 ;;Total ram usage:        2 bytes
 16978 ;; Hardware stack levels used:    1
 16979 ;; Hardware stack levels required when called:   15
 16980 ;; This function calls:
 16981 ;;		_caltime_to_RTCC
 16982 ;;		_epoch_to_caltime
 16983 ;; This function is called by:
 16984 ;;		_RTCC_init
 16985 ;;		_RTCC_adjust_time_inc
 16986 ;;		_RTCC_adjust_time_dec
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990                           	psect	text60
 16991  016C96                     __ptext60:
 16992                           	opt stack 0
 16993  016C96                     _RTCC_from_epoch:
 16994                           	opt stack 11
 16995                           
 16996                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
 16997                           
 16998                           ;incstack = 0
 16999  016C96  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 17000  016C9A  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 17001  016C9E  EC25  F096         	call	_epoch_to_caltime	;wreg free
 17002                           
 17003                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
 17004  016CA2  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 17005  016CA6  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 17006  016CAA  ECB2  F0A4         	call	_caltime_to_RTCC	;wreg free
 17007  016CAE  0012               	return		;funcret
 17008  016CB0                     __end_of_RTCC_from_epoch:
 17009                           	opt stack 0
 17010                           tblptru	equ	0xFF8
 17011                           tblptrh	equ	0xFF7
 17012                           tblptrl	equ	0xFF6
 17013                           tablat	equ	0xFF5
 17014                           prodh	equ	0xFF4
 17015                           prodl	equ	0xFF3
 17016                           intcon	equ	0xFF2
 17017                           intcon2	equ	0xFF1
 17018                           postinc0	equ	0xFEE
 17019                           wreg	equ	0xFE8
 17020                           indf1	equ	0xFE7
 17021                           postinc1	equ	0xFE6
 17022                           postdec1	equ	0xFE5
 17023                           fsr1h	equ	0xFE2
 17024                           fsr1l	equ	0xFE1
 17025                           indf2	equ	0xFDF
 17026                           postinc2	equ	0xFDE
 17027                           postdec2	equ	0xFDD
 17028                           plusw2	equ	0xFDB
 17029                           fsr2h	equ	0xFDA
 17030                           fsr2l	equ	0xFD9
 17031                           status	equ	0xFD8
 17032                           
 17033 ;; *************** function _epoch_to_caltime *****************
 17034 ;; Defined at:
 17035 ;;		line 125 in file "../My_library/My_RTCC.c"
 17036 ;; Parameters:    Size  Location     Type
 17037 ;;  tm              2   33[BANK0 ] PTR struct .
 17038 ;;		 -> now(14), 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;  num             4   43[BANK0 ] unsigned long 
 17041 ;;  day             2   39[BANK0 ] unsigned int 
 17042 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 17043 ;;  month           1   42[BANK0 ] unsigned char 
 17044 ;;  year            1   41[BANK0 ] unsigned char 
 17045 ;; Return value:  Size  Location     Type
 17046 ;;		None               void
 17047 ;; Registers used:
 17048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17049 ;; Tracked objects:
 17050 ;;		On entry : 0/0
 17051 ;;		On exit  : 0/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17055 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17057 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17058 ;;Total ram usage:       14 bytes
 17059 ;; Hardware stack levels used:    1
 17060 ;; Hardware stack levels required when called:   14
 17061 ;; This function calls:
 17062 ;;		_get_quot_rem
 17063 ;;		_month_length
 17064 ;; This function is called by:
 17065 ;;		_RTCC_from_caltime
 17066 ;;		_RTCC_from_epoch
 17067 ;; This function uses a non-reentrant model
 17068 ;;
 17069                           
 17070                           	psect	text61
 17071  012C4A                     __ptext61:
 17072                           	opt stack 0
 17073  012C4A                     _epoch_to_caltime:
 17074                           	opt stack 11
 17075                           
 17076                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
 17077                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
 17078                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
 17079                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
 17080                           ;My_RTCC.c: 132: uint16_t day;
 17081                           ;My_RTCC.c: 133: uint8_t year = 0;
 17082                           
 17083                           ;incstack = 0
 17084  012C4A  0E00               	movlw	0
 17085  012C4C  0100               	movlb	0	; () banked
 17086  012C4E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17087                           
 17088                           ;My_RTCC.c: 134: uint8_t month = 1;
 17089  012C50  0E01               	movlw	1
 17090  012C52  0100               	movlb	0	; () banked
 17091  012C54  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17092                           
 17093                           ; BSR set to: 0
 17094                           ;My_RTCC.c: 135: epoch_t num;
 17095                           ;My_RTCC.c: 137: num = tm->epoch;
 17096  012C56  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17097  012C5A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17098  012C5E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 17099  012C62  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 17100  012C66  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 17101  012C6A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 17102                           
 17103                           ; BSR set to: 0
 17104                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
 17105  012C6E  0E8B               	movlw	low epoch_to_caltime@num
 17106  012C70  0100               	movlb	0	; () banked
 17107  012C72  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17108  012C74  0E00               	movlw	high epoch_to_caltime@num
 17109  012C76  0100               	movlb	0	; () banked
 17110  012C78  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17111  012C7A  0E3C               	movlw	60
 17112  012C7C  0100               	movlb	0	; () banked
 17113  012C7E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17114  012C80  EC88  F0A5         	call	_get_quot_rem	;wreg free
 17115  012C84  0100               	movlb	0	; () banked
 17116  012C86  EE20 F004          	lfsr	2,4
 17117  012C8A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17118  012C8C  26D9               	addwf	fsr2l,f,c
 17119  012C8E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17120  012C90  22DA               	addwfc	fsr2h,f,c
 17121  012C92  0100               	movlb	0	; () banked
 17122  012C94  C079  FFDF         	movff	?_get_quot_rem,indf2
 17123                           
 17124                           ; BSR set to: 0
 17125                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
 17126  012C98  0E8B               	movlw	low epoch_to_caltime@num
 17127  012C9A  0100               	movlb	0	; () banked
 17128  012C9C  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17129  012C9E  0E00               	movlw	high epoch_to_caltime@num
 17130  012CA0  0100               	movlb	0	; () banked
 17131  012CA2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17132  012CA4  0E3C               	movlw	60
 17133  012CA6  0100               	movlb	0	; () banked
 17134  012CA8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17135  012CAA  EC88  F0A5         	call	_get_quot_rem	;wreg free
 17136  012CAE  0100               	movlb	0	; () banked
 17137  012CB0  EE20 F005          	lfsr	2,5
 17138  012CB4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17139  012CB6  26D9               	addwf	fsr2l,f,c
 17140  012CB8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17141  012CBA  22DA               	addwfc	fsr2h,f,c
 17142  012CBC  0100               	movlb	0	; () banked
 17143  012CBE  C079  FFDF         	movff	?_get_quot_rem,indf2
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
 17147  012CC2  0E8B               	movlw	low epoch_to_caltime@num
 17148  012CC4  0100               	movlb	0	; () banked
 17149  012CC6  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17150  012CC8  0E00               	movlw	high epoch_to_caltime@num
 17151  012CCA  0100               	movlb	0	; () banked
 17152  012CCC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17153  012CCE  0E18               	movlw	24
 17154  012CD0  0100               	movlb	0	; () banked
 17155  012CD2  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17156  012CD4  EC88  F0A5         	call	_get_quot_rem	;wreg free
 17157  012CD8  0100               	movlb	0	; () banked
 17158  012CDA  EE20 F006          	lfsr	2,6
 17159  012CDE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17160  012CE0  26D9               	addwf	fsr2l,f,c
 17161  012CE2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17162  012CE4  22DA               	addwfc	fsr2h,f,c
 17163  012CE6  0100               	movlb	0	; () banked
 17164  012CE8  C079  FFDF         	movff	?_get_quot_rem,indf2
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;My_RTCC.c: 141: day = num;
 17168  012CEC  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17169  012CF0  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;My_RTCC.c: 142: day_since_epoch = day;
 17173  012CF4  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17174  012CF8  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;My_RTCC.c: 144: num += 6;
 17178  012CFC  0E06               	movlw	6
 17179  012CFE  0100               	movlb	0	; () banked
 17180  012D00  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17181  012D02  0E00               	movlw	0
 17182  012D04  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17183  012D06  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17184  012D08  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17185                           
 17186                           ; BSR set to: 0
 17187                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
 17188  012D0A  0E8B               	movlw	low epoch_to_caltime@num
 17189  012D0C  0100               	movlb	0	; () banked
 17190  012D0E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17191  012D10  0E00               	movlw	high epoch_to_caltime@num
 17192  012D12  0100               	movlb	0	; () banked
 17193  012D14  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17194  012D16  0E07               	movlw	7
 17195  012D18  0100               	movlb	0	; () banked
 17196  012D1A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17197  012D1C  EC88  F0A5         	call	_get_quot_rem	;wreg free
 17198  012D20  0100               	movlb	0	; () banked
 17199  012D22  EE20 F007          	lfsr	2,7
 17200  012D26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17201  012D28  26D9               	addwf	fsr2l,f,c
 17202  012D2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17203  012D2C  22DA               	addwfc	fsr2h,f,c
 17204  012D2E  0100               	movlb	0	; () banked
 17205  012D30  C079  FFDF         	movff	?_get_quot_rem,indf2
 17206                           
 17207                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
 17208  012D34  D03F               	goto	l10894
 17209  012D36                     l874:
 17210                           
 17211                           ; BSR set to: 0
 17212                           ;My_RTCC.c: 155: LATB2 = 1;
 17213  012D36  848A               	bsf	3978,2,c	;volatile
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;My_RTCC.c: 156: day = day - month_length(year, month);
 17217  012D38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17218  012D3C  0100               	movlb	0	; () banked
 17219  012D3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17220  012D40  ECD7  F0A3         	call	_month_length
 17221  012D44  0100               	movlb	0	; () banked
 17222  012D46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17223  012D48  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17224  012D4A  0100               	movlb	0	; () banked
 17225  012D4C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17226  012D4E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17227  012D50  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17228  012D52  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17229  012D54  0100               	movlb	0	; () banked
 17230  012D56  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17231  012D58  0100               	movlb	0	; () banked
 17232  012D5A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17233  012D5C  0100               	movlb	0	; () banked
 17234  012D5E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17235  012D60  0100               	movlb	0	; () banked
 17236  012D62  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17237  012D64  0100               	movlb	0	; () banked
 17238  012D66  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17239  012D68  0100               	movlb	0	; () banked
 17240  012D6A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;My_RTCC.c: 157: if (month == 12) {
 17244  012D6C  0E0C               	movlw	12
 17245  012D6E  0100               	movlb	0	; () banked
 17246  012D70  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17247  012D72  A4D8               	btfss	status,2,c
 17248  012D74  D019               	goto	l10888
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;My_RTCC.c: 158: month = 1;
 17252  012D76  0E01               	movlw	1
 17253  012D78  0100               	movlb	0	; () banked
 17254  012D7A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17255                           
 17256                           ; BSR set to: 0
 17257                           ;My_RTCC.c: 159: year++;
 17258  012D7C  0100               	movlb	0	; () banked
 17259  012D7E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17260                           
 17261                           ; BSR set to: 0
 17262                           ;My_RTCC.c: 161: if (year >= 100) {
 17263  012D80  0E63               	movlw	99
 17264  012D82  0100               	movlb	0	; () banked
 17265  012D84  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17266  012D86  D012               	goto	l10890
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
 17270  012D88  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17271  012D8C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17272  012D90  0E80               	movlw	128
 17273  012D92  5EDE               	subwf	postinc2,f,c
 17274  012D94  0E13               	movlw	19
 17275  012D96  5ADE               	subwfb	postinc2,f,c
 17276  012D98  0E19               	movlw	25
 17277  012D9A  5ADE               	subwfb	postinc2,f,c
 17278  012D9C  0EBC               	movlw	188
 17279  012D9E  5ADE               	subwfb	postinc2,f,c
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;My_RTCC.c: 163: year = 0;
 17283  012DA0  0E00               	movlw	0
 17284  012DA2  0100               	movlb	0	; () banked
 17285  012DA4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;My_RTCC.c: 164: }
 17289                           ;My_RTCC.c: 165: } else {
 17290  012DA6  D002               	goto	l10890
 17291  012DA8                     l10888:
 17292                           
 17293                           ; BSR set to: 0
 17294                           ;My_RTCC.c: 166: month++;
 17295  012DA8  0100               	movlb	0	; () banked
 17296  012DAA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17297  012DAC                     l10890:
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;My_RTCC.c: 167: }
 17301                           ;My_RTCC.c: 168: month_cache = month;
 17302  012DAC  C08A  F1E6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17303                           
 17304                           ; BSR set to: 0
 17305                           ;My_RTCC.c: 169: year_cache = year;
 17306  012DB0  C089  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17307  012DB4                     l10894:
 17308                           
 17309                           ; BSR set to: 0
 17310  012DB4  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17311  012DB8  0100               	movlb	0	; () banked
 17312  012DBA  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17313  012DBC  ECD7  F0A3         	call	_month_length
 17314  012DC0  0100               	movlb	0	; () banked
 17315  012DC2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17316  012DC4  0100               	movlb	0	; () banked
 17317  012DC6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17318  012DC8  0100               	movlb	0	; () banked
 17319  012DCA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17320  012DCC  0E00               	movlw	0
 17321  012DCE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17322  012DD0  B0D8               	btfsc	status,0,c
 17323  012DD2  D7B1               	goto	l874
 17324                           
 17325                           ; BSR set to: 0
 17326                           ;My_RTCC.c: 170: }
 17327                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
 17328                           
 17329                           ; BSR set to: 0
 17330  012DD4  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 17331  012DD8  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 17332  012DDC  0100               	movlb	0	; () banked
 17333  012DDE  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17334  012DE0  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17335  012DE2  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17336  012DE4  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17337  012DE6  0100               	movlb	0	; () banked
 17338  012DE8  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 17339  012DEA  0100               	movlb	0	; () banked
 17340  012DEC  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17341  012DEE  0102               	movlb	2	; () banked
 17342  012DF0  6F18               	movwf	epoch_to_caltime@day_cache& (0+255),b
 17343  012DF2  0100               	movlb	0	; () banked
 17344  012DF4  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 17345  012DF6  0100               	movlb	0	; () banked
 17346  012DF8  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17347  012DFA  0102               	movlb	2	; () banked
 17348  012DFC  6F19               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 17349                           
 17350                           ; BSR set to: 2
 17351                           ;My_RTCC.c: 172: day++;
 17352  012DFE  0100               	movlb	0	; () banked
 17353  012E00  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 17354  012E02  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;My_RTCC.c: 174: tm->YY = year;
 17358  012E04  0100               	movlb	0	; () banked
 17359  012E06  EE20 F00A          	lfsr	2,10
 17360  012E0A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17361  012E0C  26D9               	addwf	fsr2l,f,c
 17362  012E0E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17363  012E10  22DA               	addwfc	fsr2h,f,c
 17364  012E12  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;My_RTCC.c: 175: tm->MM = month;
 17368  012E16  0100               	movlb	0	; () banked
 17369  012E18  EE20 F009          	lfsr	2,9
 17370  012E1C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17371  012E1E  26D9               	addwf	fsr2l,f,c
 17372  012E20  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17373  012E22  22DA               	addwfc	fsr2h,f,c
 17374  012E24  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;My_RTCC.c: 176: tm->DD = day;
 17378  012E28  0100               	movlb	0	; () banked
 17379  012E2A  EE20 F008          	lfsr	2,8
 17380  012E2E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17381  012E30  26D9               	addwf	fsr2l,f,c
 17382  012E32  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17383  012E34  22DA               	addwfc	fsr2h,f,c
 17384  012E36  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 17385                           
 17386                           ; BSR set to: 0
 17387  012E3A  0012               	return		;funcret
 17388  012E3C                     __end_of_epoch_to_caltime:
 17389                           	opt stack 0
 17390                           tblptru	equ	0xFF8
 17391                           tblptrh	equ	0xFF7
 17392                           tblptrl	equ	0xFF6
 17393                           tablat	equ	0xFF5
 17394                           prodh	equ	0xFF4
 17395                           prodl	equ	0xFF3
 17396                           intcon	equ	0xFF2
 17397                           intcon2	equ	0xFF1
 17398                           postinc0	equ	0xFEE
 17399                           wreg	equ	0xFE8
 17400                           indf1	equ	0xFE7
 17401                           postinc1	equ	0xFE6
 17402                           postdec1	equ	0xFE5
 17403                           fsr1h	equ	0xFE2
 17404                           fsr1l	equ	0xFE1
 17405                           indf2	equ	0xFDF
 17406                           postinc2	equ	0xFDE
 17407                           postdec2	equ	0xFDD
 17408                           plusw2	equ	0xFDB
 17409                           fsr2h	equ	0xFDA
 17410                           fsr2l	equ	0xFD9
 17411                           status	equ	0xFD8
 17412                           
 17413 ;; *************** function _get_quot_rem *****************
 17414 ;; Defined at:
 17415 ;;		line 80 in file "../My_library/My_RTCC.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 17418 ;;		 -> epoch_to_caltime@num(4), 
 17419 ;;  div             1   27[BANK0 ] unsigned char 
 17420 ;; Auto vars:     Size  Location     Type
 17421 ;;  num             4   29[BANK0 ] unsigned long 
 17422 ;; Return value:  Size  Location     Type
 17423 ;;                  4   25[BANK0 ] unsigned long 
 17424 ;; Registers used:
 17425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17426 ;; Tracked objects:
 17427 ;;		On entry : 0/0
 17428 ;;		On exit  : 0/0
 17429 ;;		Unchanged: 0/0
 17430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17431 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;Total ram usage:        8 bytes
 17436 ;; Hardware stack levels used:    1
 17437 ;; Hardware stack levels required when called:   13
 17438 ;; This function calls:
 17439 ;;		___lldiv
 17440 ;;		___lmul
 17441 ;; This function is called by:
 17442 ;;		_epoch_to_caltime
 17443 ;; This function uses a non-reentrant model
 17444 ;;
 17445                           
 17446                           	psect	text62
 17447  014B10                     __ptext62:
 17448                           	opt stack 0
 17449  014B10                     _get_quot_rem:
 17450                           	opt stack 11
 17451                           
 17452                           ;My_RTCC.c: 83: epoch_t num = *quot;
 17453                           
 17454                           ; BSR set to: 0
 17455                           ;incstack = 0
 17456  014B10  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17457  014B14  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17458  014B18  CFDE F07D          	movff	postinc2,get_quot_rem@num
 17459  014B1C  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 17460  014B20  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 17461  014B24  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 17462                           
 17463                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
 17464  014B28  0100               	movlb	0	; () banked
 17465  014B2A  517B               	movf	get_quot_rem@div& (0+255),w,b
 17466  014B2C  0100               	movlb	0	; () banked
 17467  014B2E  6F64               	movwf	___lldiv@divisor& (0+255),b
 17468  014B30  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 17469  014B32  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 17470  014B34  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 17471  014B36  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 17472  014B3A  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 17473  014B3E  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 17474  014B42  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 17475  014B46  EC46  F0AA         	call	___lldiv	;wreg free
 17476  014B4A  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17477  014B4E  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17478  014B52  0100               	movlb	0	; () banked
 17479  014B54  C060  FFDE         	movff	?___lldiv,postinc2
 17480  014B58  0100               	movlb	0	; () banked
 17481  014B5A  C061  FFDE         	movff	?___lldiv+1,postinc2
 17482  014B5E  0100               	movlb	0	; () banked
 17483  014B60  C062  FFDE         	movff	?___lldiv+2,postinc2
 17484  014B64  0100               	movlb	0	; () banked
 17485  014B66  C063  FFDD         	movff	?___lldiv+3,postdec2
 17486  014B6A  52DD               	movf	postdec2,f,c
 17487  014B6C  52DD               	movf	postdec2,f,c
 17488  014B6E  CFDE F06D          	movff	postinc2,___lmul@multiplier
 17489  014B72  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 17490  014B76  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 17491  014B7A  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 17492  014B7E  0100               	movlb	0	; () banked
 17493  014B80  517B               	movf	get_quot_rem@div& (0+255),w,b
 17494  014B82  0100               	movlb	0	; () banked
 17495  014B84  6F71               	movwf	___lmul@multiplicand& (0+255),b
 17496  014B86  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 17497  014B88  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17498  014B8A  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17499  014B8C  EC62  F0AF         	call	___lmul	;wreg free
 17500  014B90  0100               	movlb	0	; () banked
 17501  014B92  1F6D               	comf	?___lmul& (0+255),f,b
 17502  014B94  0100               	movlb	0	; () banked
 17503  014B96  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 17504  014B98  0100               	movlb	0	; () banked
 17505  014B9A  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 17506  014B9C  0100               	movlb	0	; () banked
 17507  014B9E  1F70               	comf	(?___lmul+3)& (0+255),f,b
 17508  014BA0  0100               	movlb	0	; () banked
 17509  014BA2  2B6D               	incf	?___lmul& (0+255),f,b
 17510  014BA4  0E00               	movlw	0
 17511  014BA6  0100               	movlb	0	; () banked
 17512  014BA8  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 17513  014BAA  0100               	movlb	0	; () banked
 17514  014BAC  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 17515  014BAE  0100               	movlb	0	; () banked
 17516  014BB0  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 17517  014BB2  0100               	movlb	0	; () banked
 17518  014BB4  517D               	movf	get_quot_rem@num& (0+255),w,b
 17519  014BB6  0100               	movlb	0	; () banked
 17520  014BB8  256D               	addwf	?___lmul& (0+255),w,b
 17521  014BBA  0100               	movlb	0	; () banked
 17522  014BBC  6F79               	movwf	?_get_quot_rem& (0+255),b
 17523  014BBE  0100               	movlb	0	; () banked
 17524  014BC0  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 17525  014BC2  0100               	movlb	0	; () banked
 17526  014BC4  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 17527  014BC6  0100               	movlb	0	; () banked
 17528  014BC8  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 17529  014BCA  0100               	movlb	0	; () banked
 17530  014BCC  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 17531  014BCE  0100               	movlb	0	; () banked
 17532  014BD0  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 17533  014BD2  0100               	movlb	0	; () banked
 17534  014BD4  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 17535  014BD6  0100               	movlb	0	; () banked
 17536  014BD8  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 17537  014BDA  0100               	movlb	0	; () banked
 17538  014BDC  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 17539  014BDE  0100               	movlb	0	; () banked
 17540  014BE0  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 17541  014BE2  0012               	return	
 17542  014BE4                     __end_of_get_quot_rem:
 17543                           	opt stack 0
 17544                           tblptru	equ	0xFF8
 17545                           tblptrh	equ	0xFF7
 17546                           tblptrl	equ	0xFF6
 17547                           tablat	equ	0xFF5
 17548                           prodh	equ	0xFF4
 17549                           prodl	equ	0xFF3
 17550                           intcon	equ	0xFF2
 17551                           intcon2	equ	0xFF1
 17552                           postinc0	equ	0xFEE
 17553                           wreg	equ	0xFE8
 17554                           indf1	equ	0xFE7
 17555                           postinc1	equ	0xFE6
 17556                           postdec1	equ	0xFE5
 17557                           fsr1h	equ	0xFE2
 17558                           fsr1l	equ	0xFE1
 17559                           indf2	equ	0xFDF
 17560                           postinc2	equ	0xFDE
 17561                           postdec2	equ	0xFDD
 17562                           plusw2	equ	0xFDB
 17563                           fsr2h	equ	0xFDA
 17564                           fsr2l	equ	0xFD9
 17565                           status	equ	0xFD8
 17566                           
 17567 ;; *************** function _caltime_to_RTCC *****************
 17568 ;; Defined at:
 17569 ;;		line 105 in file "../My_library/My_RTCC.c"
 17570 ;; Parameters:    Size  Location     Type
 17571 ;;  tm              2    9[BANK0 ] PTR struct .
 17572 ;;		 -> now(14), 
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;		None
 17575 ;; Return value:  Size  Location     Type
 17576 ;;		None               void
 17577 ;; Registers used:
 17578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17587 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17588 ;;Total ram usage:        2 bytes
 17589 ;; Hardware stack levels used:    1
 17590 ;; Hardware stack levels required when called:   14
 17591 ;; This function calls:
 17592 ;;		_d_to_x
 17593 ;; This function is called by:
 17594 ;;		_RTCC_from_caltime
 17595 ;;		_RTCC_from_epoch
 17596 ;; This function uses a non-reentrant model
 17597 ;;
 17598                           
 17599                           	psect	text63
 17600  014964                     __ptext63:
 17601                           	opt stack 0
 17602  014964                     _caltime_to_RTCC:
 17603                           	opt stack 11
 17604  014964                     l861:
 17605  014964  010F               	movlb	15	; () banked
 17606  014966  B93F               	btfsc	63,4,b	;volatile
 17607  014968  D7FD               	goto	l861
 17608                           
 17609                           ; BSR set to: 15
 17610                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
 17611  01496A  010F               	movlb	15	; () banked
 17612  01496C  813F               	bsf	63,0,b	;volatile
 17613                           
 17614                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
 17615  01496E  010F               	movlb	15	; () banked
 17616  014970  833F               	bsf	63,1,b	;volatile
 17617                           
 17618                           ; BSR set to: 15
 17619                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
 17620  014972  0100               	movlb	0	; () banked
 17621  014974  EE20 F00A          	lfsr	2,10
 17622  014978  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17623  01497A  26D9               	addwf	fsr2l,f,c
 17624  01497C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17625  01497E  22DA               	addwfc	fsr2h,f,c
 17626  014980  50DF               	movf	indf2,w,c
 17627  014982  EC9B  F0B5         	call	_d_to_x
 17628  014986  010F               	movlb	15	; () banked
 17629  014988  6F3A               	movwf	58,b	;volatile
 17630                           
 17631                           ; BSR set to: 15
 17632                           ;My_RTCC.c: 110: RTCVALH = 0x00;
 17633  01498A  0E00               	movlw	0
 17634  01498C  010F               	movlb	15	; () banked
 17635  01498E  6F3B               	movwf	59,b	;volatile
 17636                           
 17637                           ; BSR set to: 15
 17638                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
 17639  014990  010F               	movlb	15	; () banked
 17640  014992  913F               	bcf	63,0,b	;volatile
 17641                           
 17642                           ; BSR set to: 15
 17643                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
 17644  014994  010F               	movlb	15	; () banked
 17645  014996  833F               	bsf	63,1,b	;volatile
 17646                           
 17647                           ; BSR set to: 15
 17648                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
 17649  014998  0100               	movlb	0	; () banked
 17650  01499A  EE20 F008          	lfsr	2,8
 17651  01499E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17652  0149A0  26D9               	addwf	fsr2l,f,c
 17653  0149A2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17654  0149A4  22DA               	addwfc	fsr2h,f,c
 17655  0149A6  50DF               	movf	indf2,w,c
 17656  0149A8  EC9B  F0B5         	call	_d_to_x
 17657  0149AC  010F               	movlb	15	; () banked
 17658  0149AE  6F3A               	movwf	58,b	;volatile
 17659                           
 17660                           ; BSR set to: 15
 17661                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
 17662  0149B0  0100               	movlb	0	; () banked
 17663  0149B2  EE20 F009          	lfsr	2,9
 17664  0149B6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17665  0149B8  26D9               	addwf	fsr2l,f,c
 17666  0149BA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17667  0149BC  22DA               	addwfc	fsr2h,f,c
 17668  0149BE  50DF               	movf	indf2,w,c
 17669  0149C0  EC9B  F0B5         	call	_d_to_x
 17670  0149C4  010F               	movlb	15	; () banked
 17671  0149C6  6F3B               	movwf	59,b	;volatile
 17672                           
 17673                           ; BSR set to: 15
 17674                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
 17675  0149C8  010F               	movlb	15	; () banked
 17676  0149CA  813F               	bsf	63,0,b	;volatile
 17677                           
 17678                           ; BSR set to: 15
 17679                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
 17680  0149CC  010F               	movlb	15	; () banked
 17681  0149CE  933F               	bcf	63,1,b	;volatile
 17682                           
 17683                           ; BSR set to: 15
 17684                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
 17685  0149D0  0100               	movlb	0	; () banked
 17686  0149D2  EE20 F006          	lfsr	2,6
 17687  0149D6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17688  0149D8  26D9               	addwf	fsr2l,f,c
 17689  0149DA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17690  0149DC  22DA               	addwfc	fsr2h,f,c
 17691  0149DE  50DF               	movf	indf2,w,c
 17692  0149E0  EC9B  F0B5         	call	_d_to_x
 17693  0149E4  010F               	movlb	15	; () banked
 17694  0149E6  6F3A               	movwf	58,b	;volatile
 17695                           
 17696                           ; BSR set to: 15
 17697                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
 17698  0149E8  0100               	movlb	0	; () banked
 17699  0149EA  EE20 F007          	lfsr	2,7
 17700  0149EE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17701  0149F0  26D9               	addwf	fsr2l,f,c
 17702  0149F2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17703  0149F4  22DA               	addwfc	fsr2h,f,c
 17704  0149F6  50DF               	movf	indf2,w,c
 17705  0149F8  EC9B  F0B5         	call	_d_to_x
 17706  0149FC  010F               	movlb	15	; () banked
 17707  0149FE  6F3B               	movwf	59,b	;volatile
 17708                           
 17709                           ; BSR set to: 15
 17710                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
 17711  014A00  010F               	movlb	15	; () banked
 17712  014A02  913F               	bcf	63,0,b	;volatile
 17713                           
 17714                           ; BSR set to: 15
 17715                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
 17716  014A04  010F               	movlb	15	; () banked
 17717  014A06  933F               	bcf	63,1,b	;volatile
 17718                           
 17719                           ; BSR set to: 15
 17720                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
 17721  014A08  0100               	movlb	0	; () banked
 17722  014A0A  EE20 F004          	lfsr	2,4
 17723  014A0E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17724  014A10  26D9               	addwf	fsr2l,f,c
 17725  014A12  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17726  014A14  22DA               	addwfc	fsr2h,f,c
 17727  014A16  50DF               	movf	indf2,w,c
 17728  014A18  EC9B  F0B5         	call	_d_to_x
 17729  014A1C  010F               	movlb	15	; () banked
 17730  014A1E  6F3A               	movwf	58,b	;volatile
 17731                           
 17732                           ; BSR set to: 15
 17733                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
 17734  014A20  0100               	movlb	0	; () banked
 17735  014A22  EE20 F005          	lfsr	2,5
 17736  014A26  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17737  014A28  26D9               	addwf	fsr2l,f,c
 17738  014A2A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17739  014A2C  22DA               	addwfc	fsr2h,f,c
 17740  014A2E  50DF               	movf	indf2,w,c
 17741  014A30  EC9B  F0B5         	call	_d_to_x
 17742  014A34  010F               	movlb	15	; () banked
 17743  014A36  6F3B               	movwf	59,b	;volatile
 17744                           
 17745                           ; BSR set to: 15
 17746  014A38  0012               	return		;funcret
 17747  014A3A                     __end_of_caltime_to_RTCC:
 17748                           	opt stack 0
 17749                           tblptru	equ	0xFF8
 17750                           tblptrh	equ	0xFF7
 17751                           tblptrl	equ	0xFF6
 17752                           tablat	equ	0xFF5
 17753                           prodh	equ	0xFF4
 17754                           prodl	equ	0xFF3
 17755                           intcon	equ	0xFF2
 17756                           intcon2	equ	0xFF1
 17757                           postinc0	equ	0xFEE
 17758                           wreg	equ	0xFE8
 17759                           indf1	equ	0xFE7
 17760                           postinc1	equ	0xFE6
 17761                           postdec1	equ	0xFE5
 17762                           fsr1h	equ	0xFE2
 17763                           fsr1l	equ	0xFE1
 17764                           indf2	equ	0xFDF
 17765                           postinc2	equ	0xFDE
 17766                           postdec2	equ	0xFDD
 17767                           plusw2	equ	0xFDB
 17768                           fsr2h	equ	0xFDA
 17769                           fsr2l	equ	0xFD9
 17770                           status	equ	0xFD8
 17771                           
 17772 ;; *************** function _d_to_x *****************
 17773 ;; Defined at:
 17774 ;;		line 45 in file "../My_library/My_RTCC.c"
 17775 ;; Parameters:    Size  Location     Type
 17776 ;;  dec             1    wreg     unsigned char 
 17777 ;; Auto vars:     Size  Location     Type
 17778 ;;  dec             1    8[BANK0 ] unsigned char 
 17779 ;; Return value:  Size  Location     Type
 17780 ;;                  1    wreg      unsigned char 
 17781 ;; Registers used:
 17782 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17783 ;; Tracked objects:
 17784 ;;		On entry : 0/0
 17785 ;;		On exit  : 0/0
 17786 ;;		Unchanged: 0/0
 17787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17792 ;;Total ram usage:        1 bytes
 17793 ;; Hardware stack levels used:    1
 17794 ;; Hardware stack levels required when called:   13
 17795 ;; This function calls:
 17796 ;;		___awdiv
 17797 ;; This function is called by:
 17798 ;;		_caltime_to_RTCC
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802                           	psect	text64
 17803  016B36                     __ptext64:
 17804                           	opt stack 0
 17805  016B36                     _d_to_x:
 17806                           	opt stack 11
 17807                           
 17808                           ; BSR set to: 15
 17809                           ;incstack = 0
 17810                           ;d_to_x@dec stored from wreg
 17811  016B36  0100               	movlb	0	; () banked
 17812  016B38  6F68               	movwf	d_to_x@dec& (0+255),b
 17813                           
 17814                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
 17815  016B3A  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 17816  016B3E  0100               	movlb	0	; () banked
 17817  016B40  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 17818  016B42  0E00               	movlw	0
 17819  016B44  0100               	movlb	0	; () banked
 17820  016B46  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 17821  016B48  0E0A               	movlw	10
 17822  016B4A  6F62               	movwf	___awdiv@divisor& (0+255),b
 17823  016B4C  ECE7  F0A9         	call	___awdiv	;wreg free
 17824  016B50  0100               	movlb	0	; () banked
 17825  016B52  5160               	movf	?___awdiv& (0+255),w,b
 17826  016B54  0D06               	mullw	6
 17827  016B56  50F3               	movf	prodl,w,c
 17828  016B58  0100               	movlb	0	; () banked
 17829  016B5A  2568               	addwf	d_to_x@dec& (0+255),w,b
 17830  016B5C  0012               	return	
 17831  016B5E                     __end_of_d_to_x:
 17832                           	opt stack 0
 17833                           tblptru	equ	0xFF8
 17834                           tblptrh	equ	0xFF7
 17835                           tblptrl	equ	0xFF6
 17836                           tablat	equ	0xFF5
 17837                           prodh	equ	0xFF4
 17838                           prodl	equ	0xFF3
 17839                           intcon	equ	0xFF2
 17840                           intcon2	equ	0xFF1
 17841                           postinc0	equ	0xFEE
 17842                           wreg	equ	0xFE8
 17843                           indf1	equ	0xFE7
 17844                           postinc1	equ	0xFE6
 17845                           postdec1	equ	0xFE5
 17846                           fsr1h	equ	0xFE2
 17847                           fsr1l	equ	0xFE1
 17848                           indf2	equ	0xFDF
 17849                           postinc2	equ	0xFDE
 17850                           postdec2	equ	0xFDD
 17851                           plusw2	equ	0xFDB
 17852                           fsr2h	equ	0xFDA
 17853                           fsr2l	equ	0xFD9
 17854                           status	equ	0xFD8
 17855                           
 17856 ;; *************** function ___awdiv *****************
 17857 ;; Defined at:
 17858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;  dividend        2    0[BANK0 ] int 
 17861 ;;  divisor         2    2[BANK0 ] int 
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;  quotient        2    6[BANK0 ] int 
 17864 ;;  sign            1    5[BANK0 ] unsigned char 
 17865 ;;  counter         1    4[BANK0 ] unsigned char 
 17866 ;; Return value:  Size  Location     Type
 17867 ;;                  2    0[BANK0 ] int 
 17868 ;; Registers used:
 17869 ;;		wreg, status,2, status,0
 17870 ;; Tracked objects:
 17871 ;;		On entry : 0/0
 17872 ;;		On exit  : 0/0
 17873 ;;		Unchanged: 0/0
 17874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17875 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17876 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17878 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17879 ;;Total ram usage:        8 bytes
 17880 ;; Hardware stack levels used:    1
 17881 ;; Hardware stack levels required when called:   12
 17882 ;; This function calls:
 17883 ;;		Nothing
 17884 ;; This function is called by:
 17885 ;;		_d_to_x
 17886 ;; This function uses a non-reentrant model
 17887 ;;
 17888                           
 17889                           	psect	text65
 17890  0153CE                     __ptext65:
 17891                           	opt stack 0
 17892  0153CE                     ___awdiv:
 17893                           	opt stack 11
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;incstack = 0
 17897  0153CE  0E00               	movlw	0
 17898  0153D0  0100               	movlb	0	; () banked
 17899  0153D2  6F65               	movwf	___awdiv@sign& (0+255),b
 17900                           
 17901                           ; BSR set to: 0
 17902  0153D4  0100               	movlb	0	; () banked
 17903  0153D6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17904  0153D8  D008               	goto	l10634
 17905                           
 17906                           ; BSR set to: 0
 17907  0153DA  0100               	movlb	0	; () banked
 17908  0153DC  6D62               	negf	___awdiv@divisor& (0+255),b
 17909  0153DE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17910  0153E0  B0D8               	btfsc	status,0,c
 17911  0153E2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17912                           
 17913                           ; BSR set to: 0
 17914  0153E4  0E01               	movlw	1
 17915  0153E6  0100               	movlb	0	; () banked
 17916  0153E8  6F65               	movwf	___awdiv@sign& (0+255),b
 17917  0153EA                     l10634:
 17918                           
 17919                           ; BSR set to: 0
 17920  0153EA  0100               	movlb	0	; () banked
 17921  0153EC  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17922  0153EE  D008               	goto	l10640
 17923                           
 17924                           ; BSR set to: 0
 17925  0153F0  0100               	movlb	0	; () banked
 17926  0153F2  6D60               	negf	___awdiv@dividend& (0+255),b
 17927  0153F4  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17928  0153F6  B0D8               	btfsc	status,0,c
 17929  0153F8  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17930                           
 17931                           ; BSR set to: 0
 17932  0153FA  0E01               	movlw	1
 17933  0153FC  0100               	movlb	0	; () banked
 17934  0153FE  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 17935  015400                     l10640:
 17936                           
 17937                           ; BSR set to: 0
 17938  015400  0E00               	movlw	0
 17939  015402  0100               	movlb	0	; () banked
 17940  015404  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 17941  015406  0E00               	movlw	0
 17942  015408  6F66               	movwf	___awdiv@quotient& (0+255),b
 17943                           
 17944                           ; BSR set to: 0
 17945  01540A  0100               	movlb	0	; () banked
 17946  01540C  5162               	movf	___awdiv@divisor& (0+255),w,b
 17947  01540E  0100               	movlb	0	; () banked
 17948  015410  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17949  015412  B4D8               	btfsc	status,2,c
 17950  015414  D02C               	goto	l10662
 17951                           
 17952                           ; BSR set to: 0
 17953  015416  0E01               	movlw	1
 17954  015418  0100               	movlb	0	; () banked
 17955  01541A  6F64               	movwf	___awdiv@counter& (0+255),b
 17956  01541C  D006               	goto	l10648
 17957  01541E                     l10646:
 17958                           
 17959                           ; BSR set to: 0
 17960  01541E  0100               	movlb	0	; () banked
 17961  015420  90D8               	bcf	status,0,c
 17962  015422  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 17963  015424  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17964  015426  0100               	movlb	0	; () banked
 17965  015428  2B64               	incf	___awdiv@counter& (0+255),f,b
 17966  01542A                     l10648:
 17967                           
 17968                           ; BSR set to: 0
 17969  01542A  0100               	movlb	0	; () banked
 17970  01542C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17971  01542E  D7F7               	goto	l10646
 17972  015430                     l10650:
 17973                           
 17974                           ; BSR set to: 0
 17975  015430  0100               	movlb	0	; () banked
 17976  015432  90D8               	bcf	status,0,c
 17977  015434  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 17978  015436  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17979                           
 17980                           ; BSR set to: 0
 17981  015438  0100               	movlb	0	; () banked
 17982  01543A  5162               	movf	___awdiv@divisor& (0+255),w,b
 17983  01543C  0100               	movlb	0	; () banked
 17984  01543E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 17985  015440  0100               	movlb	0	; () banked
 17986  015442  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17987  015444  0100               	movlb	0	; () banked
 17988  015446  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17989  015448  A0D8               	btfss	status,0,c
 17990  01544A  D00A               	goto	l10658
 17991                           
 17992                           ; BSR set to: 0
 17993  01544C  0100               	movlb	0	; () banked
 17994  01544E  5162               	movf	___awdiv@divisor& (0+255),w,b
 17995  015450  0100               	movlb	0	; () banked
 17996  015452  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 17997  015454  0100               	movlb	0	; () banked
 17998  015456  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17999  015458  0100               	movlb	0	; () banked
 18000  01545A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18001                           
 18002                           ; BSR set to: 0
 18003  01545C  0100               	movlb	0	; () banked
 18004  01545E  8166               	bsf	___awdiv@quotient& (0+255),0,b
 18005  015460                     l10658:
 18006                           
 18007                           ; BSR set to: 0
 18008  015460  0100               	movlb	0	; () banked
 18009  015462  90D8               	bcf	status,0,c
 18010  015464  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18011  015466  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 18012                           
 18013                           ; BSR set to: 0
 18014  015468  0100               	movlb	0	; () banked
 18015  01546A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 18016  01546C  D7E1               	goto	l10650
 18017  01546E                     l10662:
 18018                           
 18019                           ; BSR set to: 0
 18020  01546E  0100               	movlb	0	; () banked
 18021  015470  5165               	movf	___awdiv@sign& (0+255),w,b
 18022  015472  0100               	movlb	0	; () banked
 18023  015474  B4D8               	btfsc	status,2,c
 18024  015476  D005               	goto	l10666
 18025                           
 18026                           ; BSR set to: 0
 18027  015478  0100               	movlb	0	; () banked
 18028  01547A  6D66               	negf	___awdiv@quotient& (0+255),b
 18029  01547C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18030  01547E  B0D8               	btfsc	status,0,c
 18031  015480  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18032  015482                     l10666:
 18033                           
 18034                           ; BSR set to: 0
 18035  015482  C066  F060         	movff	___awdiv@quotient,?___awdiv
 18036  015486  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 18037  01548A  0012               	return	
 18038  01548C                     __end_of___awdiv:
 18039                           	opt stack 0
 18040                           tblptru	equ	0xFF8
 18041                           tblptrh	equ	0xFF7
 18042                           tblptrl	equ	0xFF6
 18043                           tablat	equ	0xFF5
 18044                           prodh	equ	0xFF4
 18045                           prodl	equ	0xFF3
 18046                           intcon	equ	0xFF2
 18047                           intcon2	equ	0xFF1
 18048                           postinc0	equ	0xFEE
 18049                           wreg	equ	0xFE8
 18050                           indf1	equ	0xFE7
 18051                           postinc1	equ	0xFE6
 18052                           postdec1	equ	0xFE5
 18053                           fsr1h	equ	0xFE2
 18054                           fsr1l	equ	0xFE1
 18055                           indf2	equ	0xFDF
 18056                           postinc2	equ	0xFDE
 18057                           postdec2	equ	0xFDD
 18058                           plusw2	equ	0xFDB
 18059                           fsr2h	equ	0xFDA
 18060                           fsr2l	equ	0xFD9
 18061                           status	equ	0xFD8
 18062                           
 18063 ;; *************** function _I2C_LCD_init *****************
 18064 ;; Defined at:
 18065 ;;		line 211 in file "../My_library/My_ST7032.c"
 18066 ;; Parameters:    Size  Location     Type
 18067 ;;		None
 18068 ;; Auto vars:     Size  Location     Type
 18069 ;;  i               1    9[BANK0 ] unsigned char 
 18070 ;;  i               1    8[BANK0 ] unsigned char 
 18071 ;; Return value:  Size  Location     Type
 18072 ;;		None               void
 18073 ;; Registers used:
 18074 ;;		wreg, status,2, status,0, cstack
 18075 ;; Tracked objects:
 18076 ;;		On entry : 0/0
 18077 ;;		On exit  : 0/0
 18078 ;;		Unchanged: 0/0
 18079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18082 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18083 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;Total ram usage:        3 bytes
 18085 ;; Hardware stack levels used:    1
 18086 ;; Hardware stack levels required when called:   16
 18087 ;; This function calls:
 18088 ;;		_I2C_LCD_Clear
 18089 ;;		_I2C_LCD_Command
 18090 ;;		_I2C_init_old
 18091 ;; This function is called by:
 18092 ;;		_hardware_init
 18093 ;; This function uses a non-reentrant model
 18094 ;;
 18095                           
 18096                           	psect	text66
 18097  015A80                     __ptext66:
 18098                           	opt stack 0
 18099  015A80                     _I2C_LCD_init:
 18100                           	opt stack 13
 18101                           
 18102                           ;My_ST7032.c: 212: I2C_init_old();
 18103                           
 18104                           ; BSR set to: 0
 18105                           ;incstack = 0
 18106  015A80  EC88  F0B6         	call	_I2C_init_old	;wreg free
 18107                           
 18108                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
 18109  015A84  0E00               	movlw	0
 18110  015A86  0100               	movlb	0	; () banked
 18111  015A88  6F68               	movwf	I2C_LCD_init@i& (0+255),b
 18112  015A8A                     l12240:
 18113                           
 18114                           ; BSR set to: 0
 18115  015A8A  0E27               	movlw	39
 18116  015A8C  0100               	movlb	0	; () banked
 18117  015A8E  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
 18118  015A90  D001               	goto	l12244
 18119  015A92  D00C               	goto	l12248
 18120  015A94                     l12244:
 18121                           
 18122                           ; BSR set to: 0
 18123  015A94  0E10               	movlw	16
 18124  015A96  0100               	movlb	0	; () banked
 18125  015A98  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18126  015A9A  0E94               	movlw	148
 18127  015A9C                     u15187:
 18128  015A9C  2EE8               	decfsz	wreg,f,c
 18129  015A9E  D7FE               	goto	u15187
 18130  015AA0  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18131  015AA2  D7FC               	goto	u15187
 18132  015AA4  D000               	nop2	
 18133  015AA6  0100               	movlb	0	; () banked
 18134  015AA8  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
 18135  015AAA  D7EF               	goto	l12240
 18136  015AAC                     l12248:
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
 18140  015AAC  0E38               	movlw	56
 18141  015AAE  EC55  F0B4         	call	_I2C_LCD_Command
 18142                           
 18143                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
 18144  015AB2  0E39               	movlw	57
 18145  015AB4  EC55  F0B4         	call	_I2C_LCD_Command
 18146                           
 18147                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
 18148  015AB8  0E14               	movlw	20
 18149  015ABA  EC55  F0B4         	call	_I2C_LCD_Command
 18150                           
 18151                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
 18152  015ABE  0E70               	movlw	112
 18153  015AC0  EC55  F0B4         	call	_I2C_LCD_Command
 18154                           
 18155                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
 18156  015AC4  0E56               	movlw	86
 18157  015AC6  EC55  F0B4         	call	_I2C_LCD_Command
 18158                           
 18159                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
 18160  015ACA  0E6C               	movlw	108
 18161  015ACC  EC55  F0B4         	call	_I2C_LCD_Command
 18162                           
 18163                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
 18164  015AD0  0E00               	movlw	0
 18165  015AD2  0100               	movlb	0	; () banked
 18166  015AD4  6F69               	movwf	I2C_LCD_init@i_4452& (0+255),b
 18167  015AD6                     l12252:
 18168                           
 18169                           ; BSR set to: 0
 18170  015AD6  0E27               	movlw	39
 18171  015AD8  0100               	movlb	0	; () banked
 18172  015ADA  6569               	cpfsgt	I2C_LCD_init@i_4452& (0+255),b
 18173  015ADC  D001               	goto	l12256
 18174  015ADE  D00C               	goto	l12260
 18175  015AE0                     l12256:
 18176                           
 18177                           ; BSR set to: 0
 18178  015AE0  0E10               	movlw	16
 18179  015AE2  0100               	movlb	0	; () banked
 18180  015AE4  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18181  015AE6  0E94               	movlw	148
 18182  015AE8                     u15197:
 18183  015AE8  2EE8               	decfsz	wreg,f,c
 18184  015AEA  D7FE               	goto	u15197
 18185  015AEC  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18186  015AEE  D7FC               	goto	u15197
 18187  015AF0  D000               	nop2	
 18188  015AF2  0100               	movlb	0	; () banked
 18189  015AF4  2B69               	incf	I2C_LCD_init@i_4452& (0+255),f,b
 18190  015AF6  D7EF               	goto	l12252
 18191  015AF8                     l12260:
 18192                           
 18193                           ; BSR set to: 0
 18194                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
 18195  015AF8  0E38               	movlw	56
 18196  015AFA  EC55  F0B4         	call	_I2C_LCD_Command
 18197                           
 18198                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
 18199  015AFE  0E0C               	movlw	12
 18200  015B00  EC55  F0B4         	call	_I2C_LCD_Command
 18201                           
 18202                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
 18203  015B04  0E06               	movlw	6
 18204  015B06  EC55  F0B4         	call	_I2C_LCD_Command
 18205                           
 18206                           ;My_ST7032.c: 225: I2C_LCD_Clear();
 18207  015B0A  EC58  F0B6         	call	_I2C_LCD_Clear	;wreg free
 18208  015B0E  0012               	return		;funcret
 18209  015B10                     __end_of_I2C_LCD_init:
 18210                           	opt stack 0
 18211                           tblptru	equ	0xFF8
 18212                           tblptrh	equ	0xFF7
 18213                           tblptrl	equ	0xFF6
 18214                           tablat	equ	0xFF5
 18215                           prodh	equ	0xFF4
 18216                           prodl	equ	0xFF3
 18217                           intcon	equ	0xFF2
 18218                           intcon2	equ	0xFF1
 18219                           postinc0	equ	0xFEE
 18220                           wreg	equ	0xFE8
 18221                           indf1	equ	0xFE7
 18222                           postinc1	equ	0xFE6
 18223                           postdec1	equ	0xFE5
 18224                           fsr1h	equ	0xFE2
 18225                           fsr1l	equ	0xFE1
 18226                           indf2	equ	0xFDF
 18227                           postinc2	equ	0xFDE
 18228                           postdec2	equ	0xFDD
 18229                           plusw2	equ	0xFDB
 18230                           fsr2h	equ	0xFDA
 18231                           fsr2l	equ	0xFD9
 18232                           status	equ	0xFD8
 18233                           
 18234 ;; *************** function _I2C_init_old *****************
 18235 ;; Defined at:
 18236 ;;		line 62 in file "../My_library/My_I2C.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;		None
 18239 ;; Auto vars:     Size  Location     Type
 18240 ;;		None
 18241 ;; Return value:  Size  Location     Type
 18242 ;;		None               void
 18243 ;; Registers used:
 18244 ;;		wreg, status,2
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18254 ;;Total ram usage:        0 bytes
 18255 ;; Hardware stack levels used:    1
 18256 ;; Hardware stack levels required when called:   12
 18257 ;; This function calls:
 18258 ;;		Nothing
 18259 ;; This function is called by:
 18260 ;;		_I2C_LCD_init
 18261 ;; This function uses a non-reentrant model
 18262 ;;
 18263                           
 18264                           	psect	text67
 18265  016D10                     __ptext67:
 18266                           	opt stack 0
 18267  016D10                     _I2C_init_old:
 18268                           	opt stack 16
 18269                           
 18270                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
 18271                           
 18272                           ;incstack = 0
 18273  016D10  0E80               	movlw	128
 18274  016D12  6EC7               	movwf	4039,c	;volatile
 18275                           
 18276                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
 18277  016D14  0E28               	movlw	40
 18278  016D16  6EC6               	movwf	4038,c	;volatile
 18279                           
 18280                           ;My_I2C.c: 65: SSP1ADD = 0x13;
 18281  016D18  0E13               	movlw	19
 18282  016D1A  6EC8               	movwf	4040,c	;volatile
 18283                           
 18284                           ;My_I2C.c: 68: SSP1IF = 0;
 18285  016D1C  969E               	bcf	3998,3,c	;volatile
 18286                           
 18287                           ;My_I2C.c: 69: BCL1IF = 0;
 18288  016D1E  96A1               	bcf	4001,3,c	;volatile
 18289  016D20  0012               	return		;funcret
 18290  016D22                     __end_of_I2C_init_old:
 18291                           	opt stack 0
 18292                           tblptru	equ	0xFF8
 18293                           tblptrh	equ	0xFF7
 18294                           tblptrl	equ	0xFF6
 18295                           tablat	equ	0xFF5
 18296                           prodh	equ	0xFF4
 18297                           prodl	equ	0xFF3
 18298                           intcon	equ	0xFF2
 18299                           intcon2	equ	0xFF1
 18300                           postinc0	equ	0xFEE
 18301                           wreg	equ	0xFE8
 18302                           indf1	equ	0xFE7
 18303                           postinc1	equ	0xFE6
 18304                           postdec1	equ	0xFE5
 18305                           fsr1h	equ	0xFE2
 18306                           fsr1l	equ	0xFE1
 18307                           indf2	equ	0xFDF
 18308                           postinc2	equ	0xFDE
 18309                           postdec2	equ	0xFDD
 18310                           plusw2	equ	0xFDB
 18311                           fsr2h	equ	0xFDA
 18312                           fsr2l	equ	0xFD9
 18313                           status	equ	0xFD8
 18314                           
 18315 ;; *************** function _I2C_LCD_Clear *****************
 18316 ;; Defined at:
 18317 ;;		line 154 in file "../My_library/My_ST7032.c"
 18318 ;; Parameters:    Size  Location     Type
 18319 ;;		None
 18320 ;; Auto vars:     Size  Location     Type
 18321 ;;		None
 18322 ;; Return value:  Size  Location     Type
 18323 ;;		None               void
 18324 ;; Registers used:
 18325 ;;		wreg, status,2, status,0, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;Total ram usage:        1 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:   15
 18338 ;; This function calls:
 18339 ;;		_I2C_LCD_Command
 18340 ;; This function is called by:
 18341 ;;		_I2C_LCD_init
 18342 ;;		_sleep_task
 18343 ;;		_bootload
 18344 ;;		_display_LCD
 18345 ;; This function uses a non-reentrant model
 18346 ;;
 18347                           
 18348                           	psect	text68
 18349  016CB0                     __ptext68:
 18350                           	opt stack 0
 18351  016CB0                     _I2C_LCD_Clear:
 18352                           	opt stack 12
 18353                           
 18354                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
 18355                           
 18356                           ;incstack = 0
 18357  016CB0  0E01               	movlw	1
 18358  016CB2  EC55  F0B4         	call	_I2C_LCD_Command
 18359                           
 18360                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18361  016CB6  0E12               	movlw	18
 18362  016CB8  0100               	movlb	0	; () banked
 18363  016CBA  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18364  016CBC  0E23               	movlw	35
 18365  016CBE                     u15207:
 18366  016CBE  2EE8               	decfsz	wreg,f,c
 18367  016CC0  D7FE               	goto	u15207
 18368  016CC2  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18369  016CC4  D7FC               	goto	u15207
 18370  016CC6  F000               	nop	
 18371  016CC8  0012               	return		;funcret
 18372  016CCA                     __end_of_I2C_LCD_Clear:
 18373                           	opt stack 0
 18374                           tblptru	equ	0xFF8
 18375                           tblptrh	equ	0xFF7
 18376                           tblptrl	equ	0xFF6
 18377                           tablat	equ	0xFF5
 18378                           prodh	equ	0xFF4
 18379                           prodl	equ	0xFF3
 18380                           intcon	equ	0xFF2
 18381                           intcon2	equ	0xFF1
 18382                           postinc0	equ	0xFEE
 18383                           wreg	equ	0xFE8
 18384                           indf1	equ	0xFE7
 18385                           postinc1	equ	0xFE6
 18386                           postdec1	equ	0xFE5
 18387                           fsr1h	equ	0xFE2
 18388                           fsr1l	equ	0xFE1
 18389                           indf2	equ	0xFDF
 18390                           postinc2	equ	0xFDE
 18391                           postdec2	equ	0xFDD
 18392                           plusw2	equ	0xFDB
 18393                           fsr2h	equ	0xFDA
 18394                           fsr2l	equ	0xFD9
 18395                           status	equ	0xFD8
 18396                           
 18397 ;; *************** function _I2C_LCD_Command *****************
 18398 ;; Defined at:
 18399 ;;		line 141 in file "../My_library/My_ST7032.c"
 18400 ;; Parameters:    Size  Location     Type
 18401 ;;  c               1    wreg     unsigned char 
 18402 ;; Auto vars:     Size  Location     Type
 18403 ;;  c               1    4[BANK0 ] unsigned char 
 18404 ;;  ans             1    5[BANK0 ] unsigned char 
 18405 ;; Return value:  Size  Location     Type
 18406 ;;		None               void
 18407 ;; Registers used:
 18408 ;;		wreg, status,2, status,0, cstack
 18409 ;; Tracked objects:
 18410 ;;		On entry : 0/0
 18411 ;;		On exit  : 0/0
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18418 ;;Total ram usage:        2 bytes
 18419 ;; Hardware stack levels used:    1
 18420 ;; Hardware stack levels required when called:   14
 18421 ;; This function calls:
 18422 ;;		_I2C_Send
 18423 ;;		_I2C_Start
 18424 ;;		_I2C_Stop
 18425 ;; This function is called by:
 18426 ;;		_I2C_LCD_Clear
 18427 ;;		_I2C_LCD_SetCursor
 18428 ;;		_I2C_LCD_init
 18429 ;; This function uses a non-reentrant model
 18430 ;;
 18431                           
 18432                           	psect	text69
 18433  0168AA                     __ptext69:
 18434                           	opt stack 0
 18435  0168AA                     _I2C_LCD_Command:
 18436                           	opt stack 12
 18437                           
 18438                           ;incstack = 0
 18439                           ;I2C_LCD_Command@c stored from wreg
 18440  0168AA  0100               	movlb	0	; () banked
 18441  0168AC  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 18442                           
 18443                           ;My_ST7032.c: 142: uint8_t ans;
 18444                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 18445  0168AE  0E00               	movlw	0
 18446  0168B0  0100               	movlb	0	; () banked
 18447  0168B2  6F62               	movwf	I2C_Start@rw& (0+255),b
 18448  0168B4  0E3E               	movlw	62
 18449  0168B6  ECBF  F0B4         	call	_I2C_Start
 18450  0168BA  0100               	movlb	0	; () banked
 18451  0168BC  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 18452                           
 18453                           ; BSR set to: 0
 18454                           ;My_ST7032.c: 145: if (ans == 0) {
 18455  0168BE  0100               	movlb	0	; () banked
 18456  0168C0  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 18457  0168C2  0100               	movlb	0	; () banked
 18458  0168C4  A4D8               	btfss	status,2,c
 18459  0168C6  D007               	goto	l1099
 18460                           
 18461                           ; BSR set to: 0
 18462                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 18463  0168C8  0E80               	movlw	128
 18464  0168CA  EC72  F0B6         	call	_I2C_Send
 18465                           
 18466                           ;My_ST7032.c: 148: I2C_Send(c);
 18467  0168CE  0100               	movlb	0	; () banked
 18468  0168D0  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 18469  0168D2  EC72  F0B6         	call	_I2C_Send
 18470  0168D6                     l1099:
 18471                           
 18472                           ;My_ST7032.c: 149: }
 18473                           ;My_ST7032.c: 150: I2C_Stop();
 18474  0168D6  EC98  F0B6         	call	_I2C_Stop	;wreg free
 18475                           
 18476                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 18477  0168DA  0E68               	movlw	104
 18478  0168DC                     u15217:
 18479  0168DC  2EE8               	decfsz	wreg,f,c
 18480  0168DE  D7FE               	goto	u15217
 18481  0168E0  0012               	return		;funcret
 18482  0168E2                     __end_of_I2C_LCD_Command:
 18483                           	opt stack 0
 18484                           tblptru	equ	0xFF8
 18485                           tblptrh	equ	0xFF7
 18486                           tblptrl	equ	0xFF6
 18487                           tablat	equ	0xFF5
 18488                           prodh	equ	0xFF4
 18489                           prodl	equ	0xFF3
 18490                           intcon	equ	0xFF2
 18491                           intcon2	equ	0xFF1
 18492                           postinc0	equ	0xFEE
 18493                           wreg	equ	0xFE8
 18494                           indf1	equ	0xFE7
 18495                           postinc1	equ	0xFE6
 18496                           postdec1	equ	0xFE5
 18497                           fsr1h	equ	0xFE2
 18498                           fsr1l	equ	0xFE1
 18499                           indf2	equ	0xFDF
 18500                           postinc2	equ	0xFDE
 18501                           postdec2	equ	0xFDD
 18502                           plusw2	equ	0xFDB
 18503                           fsr2h	equ	0xFDA
 18504                           fsr2l	equ	0xFD9
 18505                           status	equ	0xFD8
 18506                           
 18507 ;; *************** function _I2C_Stop *****************
 18508 ;; Defined at:
 18509 ;;		line 96 in file "../My_library/My_I2C.c"
 18510 ;; Parameters:    Size  Location     Type
 18511 ;;		None
 18512 ;; Auto vars:     Size  Location     Type
 18513 ;;		None
 18514 ;; Return value:  Size  Location     Type
 18515 ;;		None               void
 18516 ;; Registers used:
 18517 ;;		wreg, status,2, status,0, cstack
 18518 ;; Tracked objects:
 18519 ;;		On entry : 0/0
 18520 ;;		On exit  : 0/0
 18521 ;;		Unchanged: 0/0
 18522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;Total ram usage:        0 bytes
 18528 ;; Hardware stack levels used:    1
 18529 ;; Hardware stack levels required when called:   13
 18530 ;; This function calls:
 18531 ;;		_I2C_IdleCheck
 18532 ;; This function is called by:
 18533 ;;		_I2C_LCD_Command
 18534 ;;		_I2C_LCD_Puts
 18535 ;;		_I2C_LCD_Putc
 18536 ;;		_I2C_LCD_CreateChar
 18537 ;; This function uses a non-reentrant model
 18538 ;;
 18539                           
 18540                           	psect	text70
 18541  016D30                     __ptext70:
 18542                           	opt stack 0
 18543  016D30                     _I2C_Stop:
 18544                           	opt stack 12
 18545                           
 18546                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 18547                           
 18548                           ;incstack = 0
 18549  016D30  0E05               	movlw	5
 18550  016D32  EC3C  F0B6         	call	_I2C_IdleCheck
 18551                           
 18552                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 18553  016D36  84C5               	bsf	4037,2,c	;volatile
 18554  016D38  0012               	return		;funcret
 18555  016D3A                     __end_of_I2C_Stop:
 18556                           	opt stack 0
 18557                           tblptru	equ	0xFF8
 18558                           tblptrh	equ	0xFF7
 18559                           tblptrl	equ	0xFF6
 18560                           tablat	equ	0xFF5
 18561                           prodh	equ	0xFF4
 18562                           prodl	equ	0xFF3
 18563                           intcon	equ	0xFF2
 18564                           intcon2	equ	0xFF1
 18565                           postinc0	equ	0xFEE
 18566                           wreg	equ	0xFE8
 18567                           indf1	equ	0xFE7
 18568                           postinc1	equ	0xFE6
 18569                           postdec1	equ	0xFE5
 18570                           fsr1h	equ	0xFE2
 18571                           fsr1l	equ	0xFE1
 18572                           indf2	equ	0xFDF
 18573                           postinc2	equ	0xFDE
 18574                           postdec2	equ	0xFDD
 18575                           plusw2	equ	0xFDB
 18576                           fsr2h	equ	0xFDA
 18577                           fsr2l	equ	0xFD9
 18578                           status	equ	0xFD8
 18579                           
 18580 ;; *************** function _I2C_Start *****************
 18581 ;; Defined at:
 18582 ;;		line 72 in file "../My_library/My_I2C.c"
 18583 ;; Parameters:    Size  Location     Type
 18584 ;;  adrs            1    wreg     unsigned char 
 18585 ;;  rw              1    2[BANK0 ] unsigned char 
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;  adrs            1    3[BANK0 ] unsigned char 
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      unsigned char 
 18590 ;; Registers used:
 18591 ;;		wreg, status,2, status,0, cstack
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18597 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18601 ;;Total ram usage:        2 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; Hardware stack levels required when called:   13
 18604 ;; This function calls:
 18605 ;;		_I2C_IdleCheck
 18606 ;; This function is called by:
 18607 ;;		_I2C_LCD_Command
 18608 ;;		_I2C_LCD_Puts
 18609 ;;		_I2C_LCD_Putc
 18610 ;;		_I2C_LCD_CreateChar
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text71
 18615  01697E                     __ptext71:
 18616                           	opt stack 0
 18617  01697E                     _I2C_Start:
 18618                           	opt stack 12
 18619                           
 18620                           ;incstack = 0
 18621                           ;I2C_Start@adrs stored from wreg
 18622  01697E  0100               	movlb	0	; () banked
 18623  016980  6F63               	movwf	I2C_Start@adrs& (0+255),b
 18624                           
 18625                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 18626  016982  0E05               	movlw	5
 18627  016984  EC3C  F0B6         	call	_I2C_IdleCheck
 18628                           
 18629                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 18630  016988  80C5               	bsf	4037,0,c	;volatile
 18631                           
 18632                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 18633  01698A  0E05               	movlw	5
 18634  01698C  EC3C  F0B6         	call	_I2C_IdleCheck
 18635                           
 18636                           ;My_I2C.c: 78: SSP1IF = 0;
 18637  016990  969E               	bcf	3998,3,c	;volatile
 18638                           
 18639                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 18640  016992  0100               	movlb	0	; () banked
 18641  016994  5163               	movf	I2C_Start@adrs& (0+255),w,b
 18642  016996  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 18643  016998  0100               	movlb	0	; () banked
 18644  01699A  2562               	addwf	I2C_Start@rw& (0+255),w,b
 18645  01699C  6EC9               	movwf	4041,c	;volatile
 18646  01699E                     l626:
 18647  01699E  A69E               	btfss	3998,3,c	;volatile
 18648  0169A0  D7FE               	goto	l626
 18649                           
 18650                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 18651  0169A2  ACC5               	btfss	4037,6,c	;volatile
 18652  0169A4  D002               	goto	u11730
 18653  0169A6  0E01               	movlw	1
 18654  0169A8  0012               	return	
 18655  0169AA                     u11730:
 18656  0169AA  0E00               	movlw	0
 18657  0169AC  0012               	return	
 18658  0169AE                     __end_of_I2C_Start:
 18659                           	opt stack 0
 18660                           tblptru	equ	0xFF8
 18661                           tblptrh	equ	0xFF7
 18662                           tblptrl	equ	0xFF6
 18663                           tablat	equ	0xFF5
 18664                           prodh	equ	0xFF4
 18665                           prodl	equ	0xFF3
 18666                           intcon	equ	0xFF2
 18667                           intcon2	equ	0xFF1
 18668                           postinc0	equ	0xFEE
 18669                           wreg	equ	0xFE8
 18670                           indf1	equ	0xFE7
 18671                           postinc1	equ	0xFE6
 18672                           postdec1	equ	0xFE5
 18673                           fsr1h	equ	0xFE2
 18674                           fsr1l	equ	0xFE1
 18675                           indf2	equ	0xFDF
 18676                           postinc2	equ	0xFDE
 18677                           postdec2	equ	0xFDD
 18678                           plusw2	equ	0xFDB
 18679                           fsr2h	equ	0xFDA
 18680                           fsr2l	equ	0xFD9
 18681                           status	equ	0xFD8
 18682                           
 18683 ;; *************** function _I2C_Send *****************
 18684 ;; Defined at:
 18685 ;;		line 102 in file "../My_library/My_I2C.c"
 18686 ;; Parameters:    Size  Location     Type
 18687 ;;  data            1    wreg     unsigned char 
 18688 ;; Auto vars:     Size  Location     Type
 18689 ;;  data            1    2[BANK0 ] unsigned char 
 18690 ;; Return value:  Size  Location     Type
 18691 ;;                  1    wreg      unsigned char 
 18692 ;; Registers used:
 18693 ;;		wreg, status,2, status,0, cstack
 18694 ;; Tracked objects:
 18695 ;;		On entry : 0/0
 18696 ;;		On exit  : 0/0
 18697 ;;		Unchanged: 0/0
 18698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18702 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18703 ;;Total ram usage:        1 bytes
 18704 ;; Hardware stack levels used:    1
 18705 ;; Hardware stack levels required when called:   13
 18706 ;; This function calls:
 18707 ;;		_I2C_IdleCheck
 18708 ;; This function is called by:
 18709 ;;		_I2C_LCD_Command
 18710 ;;		_I2C_LCD_Puts
 18711 ;;		_I2C_LCD_Putc
 18712 ;;		_I2C_LCD_CreateChar
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           	psect	text72
 18717  016CE4                     __ptext72:
 18718                           	opt stack 0
 18719  016CE4                     _I2C_Send:
 18720                           	opt stack 12
 18721                           
 18722                           ;incstack = 0
 18723                           ;I2C_Send@data stored from wreg
 18724  016CE4  0100               	movlb	0	; () banked
 18725  016CE6  6F62               	movwf	I2C_Send@data& (0+255),b
 18726                           
 18727                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 18728  016CE8  0E05               	movlw	5
 18729  016CEA  EC3C  F0B6         	call	_I2C_IdleCheck
 18730                           
 18731                           ;My_I2C.c: 104: SSP1IF = 0;
 18732  016CEE  969E               	bcf	3998,3,c	;volatile
 18733                           
 18734                           ;My_I2C.c: 105: SSP1BUF = data;
 18735  016CF0  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 18736  016CF4                     l641:
 18737  016CF4  A69E               	btfss	3998,3,c	;volatile
 18738  016CF6  D7FE               	goto	l641
 18739                           
 18740                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 18741                           ;	Return value of _I2C_Send is never used
 18742  016CF8  50C5               	movf	4037,w,c	;volatile
 18743  016CFA  0012               	return	
 18744  016CFC                     __end_of_I2C_Send:
 18745                           	opt stack 0
 18746                           tblptru	equ	0xFF8
 18747                           tblptrh	equ	0xFF7
 18748                           tblptrl	equ	0xFF6
 18749                           tablat	equ	0xFF5
 18750                           prodh	equ	0xFF4
 18751                           prodl	equ	0xFF3
 18752                           intcon	equ	0xFF2
 18753                           intcon2	equ	0xFF1
 18754                           postinc0	equ	0xFEE
 18755                           wreg	equ	0xFE8
 18756                           indf1	equ	0xFE7
 18757                           postinc1	equ	0xFE6
 18758                           postdec1	equ	0xFE5
 18759                           fsr1h	equ	0xFE2
 18760                           fsr1l	equ	0xFE1
 18761                           indf2	equ	0xFDF
 18762                           postinc2	equ	0xFDE
 18763                           postdec2	equ	0xFDD
 18764                           plusw2	equ	0xFDB
 18765                           fsr2h	equ	0xFDA
 18766                           fsr2l	equ	0xFD9
 18767                           status	equ	0xFD8
 18768                           
 18769 ;; *************** function _I2C_IdleCheck *****************
 18770 ;; Defined at:
 18771 ;;		line 58 in file "../My_library/My_I2C.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;  mask            1    wreg     unsigned char 
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;  mask            1    1[BANK0 ] unsigned char 
 18776 ;; Return value:  Size  Location     Type
 18777 ;;		None               void
 18778 ;; Registers used:
 18779 ;;		wreg, status,2, status,0
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/0
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18789 ;;Total ram usage:        2 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:   12
 18792 ;; This function calls:
 18793 ;;		Nothing
 18794 ;; This function is called by:
 18795 ;;		_I2C_Start
 18796 ;;		_I2C_Stop
 18797 ;;		_I2C_Send
 18798 ;;		_I2C_rStart
 18799 ;;		_I2C_Receive
 18800 ;; This function uses a non-reentrant model
 18801 ;;
 18802                           
 18803                           	psect	text73
 18804  016C78                     __ptext73:
 18805                           	opt stack 0
 18806  016C78                     _I2C_IdleCheck:
 18807                           	opt stack 12
 18808                           
 18809                           ;incstack = 0
 18810                           ;I2C_IdleCheck@mask stored from wreg
 18811  016C78  0100               	movlb	0	; () banked
 18812  016C7A  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 18813  016C7C                     l10694:
 18814  016C7C  50C7               	movf	4039,w,c	;volatile
 18815  016C7E  0100               	movlb	0	; () banked
 18816  016C80  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 18817  016C82  0100               	movlb	0	; () banked
 18818  016C84  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 18819  016C86  50C5               	movf	4037,w,c	;volatile
 18820  016C88  0B1F               	andlw	31
 18821  016C8A  0100               	movlb	0	; () banked
 18822  016C8C  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 18823  016C8E  0900               	iorlw	0
 18824  016C90  B4D8               	btfsc	status,2,c
 18825  016C92  0012               	return	
 18826  016C94  D7F3               	goto	l10694
 18827  016C96                     __end_of_I2C_IdleCheck:
 18828                           	opt stack 0
 18829                           tblptru	equ	0xFF8
 18830                           tblptrh	equ	0xFF7
 18831                           tblptrl	equ	0xFF6
 18832                           tablat	equ	0xFF5
 18833                           prodh	equ	0xFF4
 18834                           prodl	equ	0xFF3
 18835                           intcon	equ	0xFF2
 18836                           intcon2	equ	0xFF1
 18837                           postinc0	equ	0xFEE
 18838                           wreg	equ	0xFE8
 18839                           indf1	equ	0xFE7
 18840                           postinc1	equ	0xFE6
 18841                           postdec1	equ	0xFE5
 18842                           fsr1h	equ	0xFE2
 18843                           fsr1l	equ	0xFE1
 18844                           indf2	equ	0xFDF
 18845                           postinc2	equ	0xFDE
 18846                           postdec2	equ	0xFDD
 18847                           plusw2	equ	0xFDB
 18848                           fsr2h	equ	0xFDA
 18849                           fsr2l	equ	0xFD9
 18850                           status	equ	0xFD8
 18851                           
 18852 ;; *************** function _CTMU_init *****************
 18853 ;; Defined at:
 18854 ;;		line 169 in file "../My_library/My_PIC.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;		None
 18857 ;; Auto vars:     Size  Location     Type
 18858 ;;		None
 18859 ;; Return value:  Size  Location     Type
 18860 ;;		None               void
 18861 ;; Registers used:
 18862 ;;		wreg, status,2
 18863 ;; Tracked objects:
 18864 ;;		On entry : 0/0
 18865 ;;		On exit  : 0/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18872 ;;Total ram usage:        0 bytes
 18873 ;; Hardware stack levels used:    1
 18874 ;; Hardware stack levels required when called:   12
 18875 ;; This function calls:
 18876 ;;		Nothing
 18877 ;; This function is called by:
 18878 ;;		_hardware_init
 18879 ;; This function uses a non-reentrant model
 18880 ;;
 18881                           
 18882                           	psect	text74
 18883  016B5E                     __ptext74:
 18884                           	opt stack 0
 18885  016B5E                     _CTMU_init:
 18886                           	opt stack 17
 18887                           
 18888                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 18889                           
 18890                           ; BSR set to: 0
 18891                           ;incstack = 0
 18892  016B5E  0E00               	movlw	0
 18893  016B60  6EB3               	movwf	4019,c	;volatile
 18894                           
 18895                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 18896  016B62  0E90               	movlw	144
 18897  016B64  6EB2               	movwf	4018,c	;volatile
 18898                           
 18899                           ;My_PIC.c: 172: CTMUICON = 0x01;
 18900  016B66  0E01               	movlw	1
 18901  016B68  6EB1               	movwf	4017,c	;volatile
 18902                           
 18903                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 18904  016B6A  8EC1               	bsf	4033,7,c	;volatile
 18905                           
 18906                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 18907  016B6C  9CC1               	bcf	4033,6,c	;volatile
 18908                           
 18909                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 18910  016B6E  50C1               	movf	4033,w,c	;volatile
 18911  016B70  0BC7               	andlw	-57
 18912  016B72  0908               	iorlw	8
 18913  016B74  6EC1               	movwf	4033,c	;volatile
 18914                           
 18915                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 18916  016B76  50C1               	movf	4033,w,c	;volatile
 18917  016B78  0BF8               	andlw	-8
 18918  016B7A  0906               	iorlw	6
 18919  016B7C  6EC1               	movwf	4033,c	;volatile
 18920                           
 18921                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 18922  016B7E  9CC2               	bcf	4034,6,c	;volatile
 18923                           
 18924                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 18925  016B80  9EC2               	bcf	4034,7,c	;volatile
 18926                           
 18927                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 18928  016B82  80C2               	bsf	4034,0,c	;volatile
 18929  016B84  0012               	return		;funcret
 18930  016B86                     __end_of_CTMU_init:
 18931                           	opt stack 0
 18932                           tblptru	equ	0xFF8
 18933                           tblptrh	equ	0xFF7
 18934                           tblptrl	equ	0xFF6
 18935                           tablat	equ	0xFF5
 18936                           prodh	equ	0xFF4
 18937                           prodl	equ	0xFF3
 18938                           intcon	equ	0xFF2
 18939                           intcon2	equ	0xFF1
 18940                           postinc0	equ	0xFEE
 18941                           wreg	equ	0xFE8
 18942                           indf1	equ	0xFE7
 18943                           postinc1	equ	0xFE6
 18944                           postdec1	equ	0xFE5
 18945                           fsr1h	equ	0xFE2
 18946                           fsr1l	equ	0xFE1
 18947                           indf2	equ	0xFDF
 18948                           postinc2	equ	0xFDE
 18949                           postdec2	equ	0xFDD
 18950                           plusw2	equ	0xFDB
 18951                           fsr2h	equ	0xFDA
 18952                           fsr2l	equ	0xFD9
 18953                           status	equ	0xFD8
 18954                           
 18955 ;; *************** function _ADC_init *****************
 18956 ;; Defined at:
 18957 ;;		line 133 in file "../My_library/My_PIC.c"
 18958 ;; Parameters:    Size  Location     Type
 18959 ;;  p_ref           1    wreg     unsigned char 
 18960 ;; Auto vars:     Size  Location     Type
 18961 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18962 ;; Return value:  Size  Location     Type
 18963 ;;		None               void
 18964 ;; Registers used:
 18965 ;;		wreg, status,2
 18966 ;; Tracked objects:
 18967 ;;		On entry : 0/0
 18968 ;;		On exit  : 0/0
 18969 ;;		Unchanged: 0/0
 18970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18975 ;;Total ram usage:        1 bytes
 18976 ;; Hardware stack levels used:    1
 18977 ;; Hardware stack levels required when called:   12
 18978 ;; This function calls:
 18979 ;;		Nothing
 18980 ;; This function is called by:
 18981 ;;		_hardware_init
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           	psect	text75
 18986  016BF8                     __ptext75:
 18987                           	opt stack 0
 18988  016BF8                     _ADC_init:
 18989                           	opt stack 17
 18990                           
 18991                           ;incstack = 0
 18992                           ;ADC_init@p_ref stored from wreg
 18993  016BF8  0100               	movlb	0	; () banked
 18994  016BFA  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18995                           
 18996                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 18997  016BFC  9EC2               	bcf	4034,7,c	;volatile
 18998                           
 18999                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 19000  016BFE  0100               	movlb	0	; () banked
 19001  016C00  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 19002  016C02  D002               	bra	u13765
 19003  016C04  9CC2               	bcf	4034,6,c	;volatile
 19004  016C06  D001               	bra	u13766
 19005  016C08                     u13765:
 19006  016C08  8CC2               	bsf	4034,6,c	;volatile
 19007  016C0A                     u13766:
 19008                           
 19009                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 19010  016C0A  8EC1               	bsf	4033,7,c	;volatile
 19011                           
 19012                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 19013  016C0C  9CC1               	bcf	4033,6,c	;volatile
 19014                           
 19015                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 19016  016C0E  50C1               	movf	4033,w,c	;volatile
 19017  016C10  0BF8               	andlw	-8
 19018  016C12  0906               	iorlw	6
 19019  016C14  6EC1               	movwf	4033,c	;volatile
 19020  016C16  0012               	return		;funcret
 19021  016C18                     __end_of_ADC_init:
 19022                           	opt stack 0
 19023                           tblptru	equ	0xFF8
 19024                           tblptrh	equ	0xFF7
 19025                           tblptrl	equ	0xFF6
 19026                           tablat	equ	0xFF5
 19027                           prodh	equ	0xFF4
 19028                           prodl	equ	0xFF3
 19029                           intcon	equ	0xFF2
 19030                           intcon2	equ	0xFF1
 19031                           postinc0	equ	0xFEE
 19032                           wreg	equ	0xFE8
 19033                           indf1	equ	0xFE7
 19034                           postinc1	equ	0xFE6
 19035                           postdec1	equ	0xFE5
 19036                           fsr1h	equ	0xFE2
 19037                           fsr1l	equ	0xFE1
 19038                           indf2	equ	0xFDF
 19039                           postinc2	equ	0xFDE
 19040                           postdec2	equ	0xFDD
 19041                           plusw2	equ	0xFDB
 19042                           fsr2h	equ	0xFDA
 19043                           fsr2l	equ	0xFD9
 19044                           status	equ	0xFD8
 19045                           
 19046 ;; *************** function _ctmu_task *****************
 19047 ;; Defined at:
 19048 ;;		line 29 in file "ctmu.c"
 19049 ;; Parameters:    Size  Location     Type
 19050 ;;		None
 19051 ;; Auto vars:     Size  Location     Type
 19052 ;;		None
 19053 ;; Return value:  Size  Location     Type
 19054 ;;		None               void
 19055 ;; Registers used:
 19056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19057 ;; Tracked objects:
 19058 ;;		On entry : 0/0
 19059 ;;		On exit  : 0/0
 19060 ;;		Unchanged: 0/0
 19061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19066 ;;Total ram usage:        0 bytes
 19067 ;; Hardware stack levels used:    1
 19068 ;; Hardware stack levels required when called:   15
 19069 ;; This function calls:
 19070 ;;		_ctmu_sampling
 19071 ;; This function is called by:
 19072 ;;		_main
 19073 ;; This function uses a non-reentrant model
 19074 ;;
 19075                           
 19076                           	psect	text76
 19077  016CFC                     __ptext76:
 19078                           	opt stack 0
 19079  016CFC                     _ctmu_task:
 19080                           	opt stack 15
 19081                           
 19082                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 19083                           
 19084                           ;incstack = 0
 19085  016CFC  0101               	movlb	1	; () banked
 19086  016CFE  511E               	movf	_ctmu_sampling_flag& (0+255),w,b
 19087  016D00  B4D8               	btfsc	status,2,c
 19088  016D02  0012               	return	
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 19092  016D04  0E00               	movlw	0
 19093  016D06  0101               	movlb	1	; () banked
 19094  016D08  6F1E               	movwf	_ctmu_sampling_flag& (0+255),b
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;ctmu.c: 32: ctmu_sampling();
 19098  016D0A  ECB6  F09E         	call	_ctmu_sampling	;wreg free
 19099  016D0E  0012               	return	
 19100  016D10                     __end_of_ctmu_task:
 19101                           	opt stack 0
 19102                           tblptru	equ	0xFF8
 19103                           tblptrh	equ	0xFF7
 19104                           tblptrl	equ	0xFF6
 19105                           tablat	equ	0xFF5
 19106                           prodh	equ	0xFF4
 19107                           prodl	equ	0xFF3
 19108                           intcon	equ	0xFF2
 19109                           intcon2	equ	0xFF1
 19110                           postinc0	equ	0xFEE
 19111                           wreg	equ	0xFE8
 19112                           indf1	equ	0xFE7
 19113                           postinc1	equ	0xFE6
 19114                           postdec1	equ	0xFE5
 19115                           fsr1h	equ	0xFE2
 19116                           fsr1l	equ	0xFE1
 19117                           indf2	equ	0xFDF
 19118                           postinc2	equ	0xFDE
 19119                           postdec2	equ	0xFDD
 19120                           plusw2	equ	0xFDB
 19121                           fsr2h	equ	0xFDA
 19122                           fsr2l	equ	0xFD9
 19123                           status	equ	0xFD8
 19124                           
 19125 ;; *************** function _ctmu_sampling *****************
 19126 ;; Defined at:
 19127 ;;		line 22 in file "ctmu.c"
 19128 ;; Parameters:    Size  Location     Type
 19129 ;;		None
 19130 ;; Auto vars:     Size  Location     Type
 19131 ;;		None
 19132 ;; Return value:  Size  Location     Type
 19133 ;;		None               void
 19134 ;; Registers used:
 19135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19136 ;; Tracked objects:
 19137 ;;		On entry : 0/0
 19138 ;;		On exit  : 0/0
 19139 ;;		Unchanged: 0/0
 19140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19145 ;;Total ram usage:        0 bytes
 19146 ;; Hardware stack levels used:    1
 19147 ;; Hardware stack levels required when called:   14
 19148 ;; This function calls:
 19149 ;;		_CTMU_read
 19150 ;;		___lwdiv
 19151 ;;		_button_timer_interrupt
 19152 ;; This function is called by:
 19153 ;;		_ctmu_task
 19154 ;; This function uses a non-reentrant model
 19155 ;;
 19156                           
 19157                           	psect	text77
 19158  013D6C                     __ptext77:
 19159                           	opt stack 0
 19160  013D6C                     _ctmu_sampling:
 19161                           	opt stack 15
 19162                           
 19163                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 19164                           
 19165                           ;incstack = 0
 19166  013D6C  0E2E               	movlw	low _port
 19167  013D6E  0100               	movlb	0	; () banked
 19168  013D70  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19169  013D72  0E01               	movlw	high _port
 19170  013D74  0100               	movlb	0	; () banked
 19171  013D76  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19172  013D78  0E00               	movlw	0
 19173  013D7A  EC26  F0A9         	call	_CTMU_read
 19174  013D7E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19175  013D82  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19176  013D86  C132  F07E         	movff	_port+4,___lwdiv@divisor
 19177  013D8A  C133  F07F         	movff	_port+5,___lwdiv@divisor+1
 19178  013D8E  EC26  F0AF         	call	___lwdiv	;wreg free
 19179  013D92  0100               	movlb	0	; () banked
 19180  013D94  517C               	movf	?___lwdiv& (0+255),w,b
 19181  013D96  0100               	movlb	0	; () banked
 19182  013D98  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19183  013D9A  A4D8               	btfss	status,2,c
 19184  013D9C  D002               	goto	u14390
 19185  013D9E  0E01               	movlw	1
 19186  013DA0  D001               	goto	u14400
 19187  013DA2                     u14390:
 19188  013DA2  0E00               	movlw	0
 19189  013DA4                     u14400:
 19190  013DA4  0100               	movlb	0	; () banked
 19191  013DA6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19192  013DA8  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19193                           
 19194                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19195  013DAC  0E45               	movlw	low (_port+23)
 19196  013DAE  0100               	movlb	0	; () banked
 19197  013DB0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19198  013DB2  0E01               	movlw	high (_port+23)
 19199  013DB4  0100               	movlb	0	; () banked
 19200  013DB6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19201  013DB8  0E01               	movlw	1
 19202  013DBA  EC26  F0A9         	call	_CTMU_read
 19203  013DBE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19204  013DC2  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19205  013DC6  C149  F07E         	movff	_port+27,___lwdiv@divisor
 19206  013DCA  C14A  F07F         	movff	_port+28,___lwdiv@divisor+1
 19207  013DCE  EC26  F0AF         	call	___lwdiv	;wreg free
 19208  013DD2  0100               	movlb	0	; () banked
 19209  013DD4  517C               	movf	?___lwdiv& (0+255),w,b
 19210  013DD6  0100               	movlb	0	; () banked
 19211  013DD8  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19212  013DDA  A4D8               	btfss	status,2,c
 19213  013DDC  D002               	goto	u14410
 19214  013DDE  0E01               	movlw	1
 19215  013DE0  D001               	goto	u14420
 19216  013DE2                     u14410:
 19217  013DE2  0E00               	movlw	0
 19218  013DE4                     u14420:
 19219  013DE4  0100               	movlb	0	; () banked
 19220  013DE6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19221  013DE8  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19222                           
 19223                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19224  013DEC  0E5C               	movlw	low (_port+46)
 19225  013DEE  0100               	movlb	0	; () banked
 19226  013DF0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19227  013DF2  0E01               	movlw	high (_port+46)
 19228  013DF4  0100               	movlb	0	; () banked
 19229  013DF6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19230  013DF8  0E02               	movlw	2
 19231  013DFA  EC26  F0A9         	call	_CTMU_read
 19232  013DFE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19233  013E02  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19234  013E06  C160  F07E         	movff	_port+50,___lwdiv@divisor
 19235  013E0A  C161  F07F         	movff	_port+51,___lwdiv@divisor+1
 19236  013E0E  EC26  F0AF         	call	___lwdiv	;wreg free
 19237  013E12  0100               	movlb	0	; () banked
 19238  013E14  517C               	movf	?___lwdiv& (0+255),w,b
 19239  013E16  0100               	movlb	0	; () banked
 19240  013E18  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19241  013E1A  A4D8               	btfss	status,2,c
 19242  013E1C  D002               	goto	u14430
 19243  013E1E  0E01               	movlw	1
 19244  013E20  D001               	goto	u14440
 19245  013E22                     u14430:
 19246  013E22  0E00               	movlw	0
 19247  013E24                     u14440:
 19248  013E24  0100               	movlb	0	; () banked
 19249  013E26  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19250  013E28  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19251                           
 19252                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19253  013E2C  0EFC               	movlw	low _ctmu_m
 19254  013E2E  0100               	movlb	0	; () banked
 19255  013E30  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19256  013E32  0E00               	movlw	high _ctmu_m
 19257  013E34  0100               	movlb	0	; () banked
 19258  013E36  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19259  013E38  0E03               	movlw	3
 19260  013E3A  EC26  F0A9         	call	_CTMU_read
 19261  013E3E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19262  013E42  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19263  013E46  C110  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19264  013E4A  C111  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19265  013E4E  EC26  F0AF         	call	___lwdiv	;wreg free
 19266  013E52  0100               	movlb	0	; () banked
 19267  013E54  517C               	movf	?___lwdiv& (0+255),w,b
 19268  013E56  0100               	movlb	0	; () banked
 19269  013E58  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19270  013E5A  A4D8               	btfss	status,2,c
 19271  013E5C  D002               	goto	u14450
 19272  013E5E  0E01               	movlw	1
 19273  013E60  D001               	goto	u14460
 19274  013E62                     u14450:
 19275  013E62  0E00               	movlw	0
 19276  013E64                     u14460:
 19277  013E64  0100               	movlb	0	; () banked
 19278  013E66  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19279  013E68  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19280  013E6C  0012               	return		;funcret
 19281  013E6E                     __end_of_ctmu_sampling:
 19282                           	opt stack 0
 19283                           tblptru	equ	0xFF8
 19284                           tblptrh	equ	0xFF7
 19285                           tblptrl	equ	0xFF6
 19286                           tablat	equ	0xFF5
 19287                           prodh	equ	0xFF4
 19288                           prodl	equ	0xFF3
 19289                           intcon	equ	0xFF2
 19290                           intcon2	equ	0xFF1
 19291                           postinc0	equ	0xFEE
 19292                           wreg	equ	0xFE8
 19293                           indf1	equ	0xFE7
 19294                           postinc1	equ	0xFE6
 19295                           postdec1	equ	0xFE5
 19296                           fsr1h	equ	0xFE2
 19297                           fsr1l	equ	0xFE1
 19298                           indf2	equ	0xFDF
 19299                           postinc2	equ	0xFDE
 19300                           postdec2	equ	0xFDD
 19301                           plusw2	equ	0xFDB
 19302                           fsr2h	equ	0xFDA
 19303                           fsr2l	equ	0xFD9
 19304                           status	equ	0xFD8
 19305                           
 19306 ;; *************** function _button_timer_interrupt *****************
 19307 ;; Defined at:
 19308 ;;		line 3 in file "../My_library/My_button.c"
 19309 ;; Parameters:    Size  Location     Type
 19310 ;;  bt              2   35[BANK0 ] PTR struct button
 19311 ;;		 -> ctmu_m(4), port(69), 
 19312 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19313 ;; Auto vars:     Size  Location     Type
 19314 ;;		None
 19315 ;; Return value:  Size  Location     Type
 19316 ;;		None               void
 19317 ;; Registers used:
 19318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19319 ;; Tracked objects:
 19320 ;;		On entry : 0/0
 19321 ;;		On exit  : 0/0
 19322 ;;		Unchanged: 0/0
 19323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19324 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19327 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19328 ;;Total ram usage:        5 bytes
 19329 ;; Hardware stack levels used:    1
 19330 ;; Hardware stack levels required when called:   12
 19331 ;; This function calls:
 19332 ;;		Nothing
 19333 ;; This function is called by:
 19334 ;;		_ctmu_sampling
 19335 ;; This function uses a non-reentrant model
 19336 ;;
 19337                           
 19338                           	psect	text78
 19339  0110F6                     __ptext78:
 19340                           	opt stack 0
 19341  0110F6                     _button_timer_interrupt:
 19342                           	opt stack 16
 19343                           
 19344                           ;My_button.c: 4: if (sw_value) {
 19345                           
 19346                           ;incstack = 0
 19347  0110F6  0100               	movlb	0	; () banked
 19348  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19349  0110FA  0100               	movlb	0	; () banked
 19350  0110FC  B4D8               	btfsc	status,2,c
 19351  0110FE  D0A8               	goto	l8506
 19352                           
 19353                           ; BSR set to: 0
 19354                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19355  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19356  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19357  011108  0E84               	movlw	132
 19358  01110A  18DE               	xorwf	postinc2,w,c
 19359  01110C  E10D               	bnz	l525
 19360  01110E  0E03               	movlw	3
 19361  011110  18DE               	xorwf	postinc2,w,c
 19362  011112  A4D8               	btfss	status,2,c
 19363  011114  D009               	goto	l525
 19364                           
 19365                           ; BSR set to: 0
 19366  011116  0100               	movlb	0	; () banked
 19367  011118  EE20 F003          	lfsr	2,3
 19368  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19369  01111E  26D9               	addwf	fsr2l,f,c
 19370  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19371  011122  22DA               	addwfc	fsr2h,f,c
 19372  011124  0100               	movlb	0	; () banked
 19373  011126  8EDF               	bsf	indf2,7,c
 19374  011128                     l525:
 19375                           
 19376                           ; BSR set to: 0
 19377                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19378  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19379  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19380  011130  0EBC               	movlw	188
 19381  011132  18DE               	xorwf	postinc2,w,c
 19382  011134  E10D               	bnz	l526
 19383  011136  0E02               	movlw	2
 19384  011138  18DE               	xorwf	postinc2,w,c
 19385  01113A  A4D8               	btfss	status,2,c
 19386  01113C  D009               	goto	l526
 19387                           
 19388                           ; BSR set to: 0
 19389  01113E  0100               	movlb	0	; () banked
 19390  011140  EE20 F003          	lfsr	2,3
 19391  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19392  011146  26D9               	addwf	fsr2l,f,c
 19393  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19394  01114A  22DA               	addwfc	fsr2h,f,c
 19395  01114C  0100               	movlb	0	; () banked
 19396  01114E  8CDF               	bsf	indf2,6,c
 19397  011150                     l526:
 19398                           
 19399                           ; BSR set to: 0
 19400                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19401  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19402  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19403  011158  0EF4               	movlw	244
 19404  01115A  18DE               	xorwf	postinc2,w,c
 19405  01115C  E10C               	bnz	l527
 19406  01115E  04DE               	decf	postinc2,w,c
 19407  011160  A4D8               	btfss	status,2,c
 19408  011162  D009               	goto	l527
 19409                           
 19410                           ; BSR set to: 0
 19411  011164  0100               	movlb	0	; () banked
 19412  011166  EE20 F003          	lfsr	2,3
 19413  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19414  01116C  26D9               	addwf	fsr2l,f,c
 19415  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19416  011170  22DA               	addwfc	fsr2h,f,c
 19417  011172  0100               	movlb	0	; () banked
 19418  011174  8ADF               	bsf	indf2,5,c
 19419  011176                     l527:
 19420                           
 19421                           ; BSR set to: 0
 19422                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19423  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19424  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19425  01117E  0E2C               	movlw	44
 19426  011180  18DE               	xorwf	postinc2,w,c
 19427  011182  E10C               	bnz	l528
 19428  011184  04DE               	decf	postinc2,w,c
 19429  011186  A4D8               	btfss	status,2,c
 19430  011188  D009               	goto	l528
 19431                           
 19432                           ; BSR set to: 0
 19433  01118A  0100               	movlb	0	; () banked
 19434  01118C  EE20 F003          	lfsr	2,3
 19435  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19436  011192  26D9               	addwf	fsr2l,f,c
 19437  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19438  011196  22DA               	addwfc	fsr2h,f,c
 19439  011198  0100               	movlb	0	; () banked
 19440  01119A  88DF               	bsf	indf2,4,c
 19441  01119C                     l528:
 19442                           
 19443                           ; BSR set to: 0
 19444                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19445  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19446  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19447  0111A4  0E96               	movlw	150
 19448  0111A6  18DE               	xorwf	postinc2,w,c
 19449  0111A8  10DE               	iorwf	postinc2,w,c
 19450  0111AA  A4D8               	btfss	status,2,c
 19451  0111AC  D009               	goto	l529
 19452                           
 19453                           ; BSR set to: 0
 19454  0111AE  0100               	movlb	0	; () banked
 19455  0111B0  EE20 F003          	lfsr	2,3
 19456  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19457  0111B6  26D9               	addwf	fsr2l,f,c
 19458  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19459  0111BA  22DA               	addwfc	fsr2h,f,c
 19460  0111BC  0100               	movlb	0	; () banked
 19461  0111BE  86DF               	bsf	indf2,3,c
 19462  0111C0                     l529:
 19463                           
 19464                           ; BSR set to: 0
 19465                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19466  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19467  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19468  0111C8  0E3C               	movlw	60
 19469  0111CA  18DE               	xorwf	postinc2,w,c
 19470  0111CC  10DE               	iorwf	postinc2,w,c
 19471  0111CE  A4D8               	btfss	status,2,c
 19472  0111D0  D009               	goto	l530
 19473                           
 19474                           ; BSR set to: 0
 19475  0111D2  0100               	movlb	0	; () banked
 19476  0111D4  EE20 F003          	lfsr	2,3
 19477  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19478  0111DA  26D9               	addwf	fsr2l,f,c
 19479  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19480  0111DE  22DA               	addwfc	fsr2h,f,c
 19481  0111E0  0100               	movlb	0	; () banked
 19482  0111E2  84DF               	bsf	indf2,2,c
 19483  0111E4                     l530:
 19484                           
 19485                           ; BSR set to: 0
 19486                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19487  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19488  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19489  0111EC  0E10               	movlw	16
 19490  0111EE  18DE               	xorwf	postinc2,w,c
 19491  0111F0  10DE               	iorwf	postinc2,w,c
 19492  0111F2  A4D8               	btfss	status,2,c
 19493  0111F4  D009               	goto	l531
 19494                           
 19495                           ; BSR set to: 0
 19496  0111F6  0100               	movlb	0	; () banked
 19497  0111F8  EE20 F003          	lfsr	2,3
 19498  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19499  0111FE  26D9               	addwf	fsr2l,f,c
 19500  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19501  011202  22DA               	addwfc	fsr2h,f,c
 19502  011204  0100               	movlb	0	; () banked
 19503  011206  82DF               	bsf	indf2,1,c
 19504  011208                     l531:
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19508  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19509  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19510  011210  0E02               	movlw	2
 19511  011212  18DE               	xorwf	postinc2,w,c
 19512  011214  10DE               	iorwf	postinc2,w,c
 19513  011216  A4D8               	btfss	status,2,c
 19514  011218  D009               	goto	l532
 19515                           
 19516                           ; BSR set to: 0
 19517  01121A  0100               	movlb	0	; () banked
 19518  01121C  EE20 F003          	lfsr	2,3
 19519  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19520  011222  26D9               	addwf	fsr2l,f,c
 19521  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19522  011226  22DA               	addwfc	fsr2h,f,c
 19523  011228  0100               	movlb	0	; () banked
 19524  01122A  80DF               	bsf	indf2,0,c
 19525  01122C                     l532:
 19526                           
 19527                           ; BSR set to: 0
 19528                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19529  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19530  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19531  011234  0E85               	movlw	133
 19532  011236  5CDE               	subwf	postinc2,w,c
 19533  011238  0E03               	movlw	3
 19534  01123A  58DE               	subwfb	postinc2,w,c
 19535  01123C  B0D8               	btfsc	status,0,c
 19536  01123E  0012               	return	
 19537                           
 19538                           ; BSR set to: 0
 19539  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19540  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19541  011248  2ADE               	incf	postinc2,f,c
 19542  01124A  0E00               	movlw	0
 19543  01124C  22DD               	addwfc	postdec2,f,c
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;My_button.c: 14: } else {
 19547  01124E  0012               	return	
 19548  011250                     l8506:
 19549                           
 19550                           ; BSR set to: 0
 19551                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19552  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19553  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19554  011258  0E84               	movlw	132
 19555  01125A  5CDE               	subwf	postinc2,w,c
 19556  01125C  0E03               	movlw	3
 19557  01125E  58DE               	subwfb	postinc2,w,c
 19558  011260  A0D8               	btfss	status,0,c
 19559  011262  D00A               	goto	l8510
 19560                           
 19561                           ; BSR set to: 0
 19562  011264  0100               	movlb	0	; () banked
 19563  011266  EE20 F002          	lfsr	2,2
 19564  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19565  01126C  26D9               	addwf	fsr2l,f,c
 19566  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19567  011270  22DA               	addwfc	fsr2h,f,c
 19568  011272  0100               	movlb	0	; () banked
 19569  011274  8EDF               	bsf	indf2,7,c
 19570  011276  D08F               	goto	l8538
 19571  011278                     l8510:
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19575  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19576  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19577  011280  0EBC               	movlw	188
 19578  011282  5CDE               	subwf	postinc2,w,c
 19579  011284  0E02               	movlw	2
 19580  011286  58DE               	subwfb	postinc2,w,c
 19581  011288  A0D8               	btfss	status,0,c
 19582  01128A  D00A               	goto	l8514
 19583                           
 19584                           ; BSR set to: 0
 19585  01128C  0100               	movlb	0	; () banked
 19586  01128E  EE20 F002          	lfsr	2,2
 19587  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19588  011294  26D9               	addwf	fsr2l,f,c
 19589  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19590  011298  22DA               	addwfc	fsr2h,f,c
 19591  01129A  0100               	movlb	0	; () banked
 19592  01129C  8CDF               	bsf	indf2,6,c
 19593  01129E  D07B               	goto	l8538
 19594  0112A0                     l8514:
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19598  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19599  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19600  0112A8  0EF4               	movlw	244
 19601  0112AA  5CDE               	subwf	postinc2,w,c
 19602  0112AC  0E01               	movlw	1
 19603  0112AE  58DE               	subwfb	postinc2,w,c
 19604  0112B0  A0D8               	btfss	status,0,c
 19605  0112B2  D00A               	goto	l8518
 19606                           
 19607                           ; BSR set to: 0
 19608  0112B4  0100               	movlb	0	; () banked
 19609  0112B6  EE20 F002          	lfsr	2,2
 19610  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19611  0112BC  26D9               	addwf	fsr2l,f,c
 19612  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19613  0112C0  22DA               	addwfc	fsr2h,f,c
 19614  0112C2  0100               	movlb	0	; () banked
 19615  0112C4  8ADF               	bsf	indf2,5,c
 19616  0112C6  D067               	goto	l8538
 19617  0112C8                     l8518:
 19618                           
 19619                           ; BSR set to: 0
 19620                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19621  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19622  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19623  0112D0  0E2C               	movlw	44
 19624  0112D2  5CDE               	subwf	postinc2,w,c
 19625  0112D4  0E01               	movlw	1
 19626  0112D6  58DE               	subwfb	postinc2,w,c
 19627  0112D8  A0D8               	btfss	status,0,c
 19628  0112DA  D00A               	goto	l8522
 19629                           
 19630                           ; BSR set to: 0
 19631  0112DC  0100               	movlb	0	; () banked
 19632  0112DE  EE20 F002          	lfsr	2,2
 19633  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19634  0112E4  26D9               	addwf	fsr2l,f,c
 19635  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19636  0112E8  22DA               	addwfc	fsr2h,f,c
 19637  0112EA  0100               	movlb	0	; () banked
 19638  0112EC  88DF               	bsf	indf2,4,c
 19639  0112EE  D053               	goto	l8538
 19640  0112F0                     l8522:
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19644  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19645  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19646  0112F8  0E01               	movlw	1
 19647  0112FA  50DB               	movf	plusw2,w,c
 19648  0112FC  E104               	bnz	u8460
 19649  0112FE  0E96               	movlw	150
 19650  011300  5CDE               	subwf	postinc2,w,c
 19651  011302  A0D8               	btfss	status,0,c
 19652  011304  D00A               	goto	l8526
 19653  011306                     u8460:
 19654                           
 19655                           ; BSR set to: 0
 19656  011306  0100               	movlb	0	; () banked
 19657  011308  EE20 F002          	lfsr	2,2
 19658  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19659  01130E  26D9               	addwf	fsr2l,f,c
 19660  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19661  011312  22DA               	addwfc	fsr2h,f,c
 19662  011314  0100               	movlb	0	; () banked
 19663  011316  86DF               	bsf	indf2,3,c
 19664  011318  D03E               	goto	l8538
 19665  01131A                     l8526:
 19666                           
 19667                           ; BSR set to: 0
 19668                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19669  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19670  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19671  011322  0E01               	movlw	1
 19672  011324  50DB               	movf	plusw2,w,c
 19673  011326  E104               	bnz	u8470
 19674  011328  0E3C               	movlw	60
 19675  01132A  5CDE               	subwf	postinc2,w,c
 19676  01132C  A0D8               	btfss	status,0,c
 19677  01132E  D00A               	goto	l8530
 19678  011330                     u8470:
 19679                           
 19680                           ; BSR set to: 0
 19681  011330  0100               	movlb	0	; () banked
 19682  011332  EE20 F002          	lfsr	2,2
 19683  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19684  011338  26D9               	addwf	fsr2l,f,c
 19685  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19686  01133C  22DA               	addwfc	fsr2h,f,c
 19687  01133E  0100               	movlb	0	; () banked
 19688  011340  84DF               	bsf	indf2,2,c
 19689  011342  D029               	goto	l8538
 19690  011344                     l8530:
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19694  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19695  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19696  01134C  0E01               	movlw	1
 19697  01134E  50DB               	movf	plusw2,w,c
 19698  011350  E104               	bnz	u8480
 19699  011352  0E10               	movlw	16
 19700  011354  5CDE               	subwf	postinc2,w,c
 19701  011356  A0D8               	btfss	status,0,c
 19702  011358  D00A               	goto	l8534
 19703  01135A                     u8480:
 19704                           
 19705                           ; BSR set to: 0
 19706  01135A  0100               	movlb	0	; () banked
 19707  01135C  EE20 F002          	lfsr	2,2
 19708  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19709  011362  26D9               	addwf	fsr2l,f,c
 19710  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19711  011366  22DA               	addwfc	fsr2h,f,c
 19712  011368  0100               	movlb	0	; () banked
 19713  01136A  82DF               	bsf	indf2,1,c
 19714  01136C  D014               	goto	l8538
 19715  01136E                     l8534:
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19719  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19720  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19721  011376  0E01               	movlw	1
 19722  011378  50DB               	movf	plusw2,w,c
 19723  01137A  E104               	bnz	u8490
 19724  01137C  0E02               	movlw	2
 19725  01137E  5CDE               	subwf	postinc2,w,c
 19726  011380  A0D8               	btfss	status,0,c
 19727  011382  D009               	goto	l8538
 19728  011384                     u8490:
 19729                           
 19730                           ; BSR set to: 0
 19731  011384  0100               	movlb	0	; () banked
 19732  011386  EE20 F002          	lfsr	2,2
 19733  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19734  01138C  26D9               	addwf	fsr2l,f,c
 19735  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19736  011390  22DA               	addwfc	fsr2h,f,c
 19737  011392  0100               	movlb	0	; () banked
 19738  011394  80DF               	bsf	indf2,0,c
 19739  011396                     l8538:
 19740                           
 19741                           ; BSR set to: 0
 19742                           ;My_button.c: 23: bt->cnt_sw = 0;
 19743  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19744  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19745  01139E  0E00               	movlw	0
 19746  0113A0  6EDE               	movwf	postinc2,c
 19747  0113A2  0E00               	movlw	0
 19748  0113A4  6EDD               	movwf	postdec2,c
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19752  0113A6  0100               	movlb	0	; () banked
 19753  0113A8  EE20 F002          	lfsr	2,2
 19754  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19755  0113AE  26D9               	addwf	fsr2l,f,c
 19756  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19757  0113B2  22DA               	addwfc	fsr2h,f,c
 19758  0113B4  0EFF               	movlw	255
 19759  0113B6  16DE               	andwf	postinc2,f,c
 19760  0113B8  0E00               	movlw	0
 19761  0113BA  16DD               	andwf	postdec2,f,c
 19762  0113BC  0012               	return	
 19763  0113BE                     __end_of_button_timer_interrupt:
 19764                           	opt stack 0
 19765                           tblptru	equ	0xFF8
 19766                           tblptrh	equ	0xFF7
 19767                           tblptrl	equ	0xFF6
 19768                           tablat	equ	0xFF5
 19769                           prodh	equ	0xFF4
 19770                           prodl	equ	0xFF3
 19771                           intcon	equ	0xFF2
 19772                           intcon2	equ	0xFF1
 19773                           postinc0	equ	0xFEE
 19774                           wreg	equ	0xFE8
 19775                           indf1	equ	0xFE7
 19776                           postinc1	equ	0xFE6
 19777                           postdec1	equ	0xFE5
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           plusw2	equ	0xFDB
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function ___lwdiv *****************
 19789 ;; Defined at:
 19790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;  dividend        2   28[BANK0 ] unsigned int 
 19793 ;;  divisor         2   30[BANK0 ] unsigned int 
 19794 ;; Auto vars:     Size  Location     Type
 19795 ;;  quotient        2   33[BANK0 ] unsigned int 
 19796 ;;  counter         1   32[BANK0 ] unsigned char 
 19797 ;; Return value:  Size  Location     Type
 19798 ;;                  2   28[BANK0 ] unsigned int 
 19799 ;; Registers used:
 19800 ;;		wreg, status,2, status,0
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19809 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19810 ;;Total ram usage:        7 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; Hardware stack levels required when called:   12
 19813 ;; This function calls:
 19814 ;;		Nothing
 19815 ;; This function is called by:
 19816 ;;		_ringbuf_put_num
 19817 ;;		_data_out
 19818 ;;		_display_LCD
 19819 ;;		_ctmu_set_ratio
 19820 ;;		_ctmu_sampling
 19821 ;; This function uses a non-reentrant model
 19822 ;;
 19823                           
 19824                           	psect	text79
 19825  015E4C                     __ptext79:
 19826                           	opt stack 0
 19827  015E4C                     ___lwdiv:
 19828                           	opt stack 15
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;incstack = 0
 19832  015E4C  0E00               	movlw	0
 19833  015E4E  0100               	movlb	0	; () banked
 19834  015E50  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19835  015E52  0E00               	movlw	0
 19836  015E54  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19837                           
 19838                           ; BSR set to: 0
 19839  015E56  0100               	movlb	0	; () banked
 19840  015E58  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19841  015E5A  0100               	movlb	0	; () banked
 19842  015E5C  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19843  015E5E  B4D8               	btfsc	status,2,c
 19844  015E60  D02C               	goto	l2448
 19845                           
 19846                           ; BSR set to: 0
 19847  015E62  0E01               	movlw	1
 19848  015E64  0100               	movlb	0	; () banked
 19849  015E66  6F80               	movwf	___lwdiv@counter& (0+255),b
 19850  015E68  D006               	goto	l11448
 19851  015E6A                     l11446:
 19852                           
 19853                           ; BSR set to: 0
 19854  015E6A  0100               	movlb	0	; () banked
 19855  015E6C  90D8               	bcf	status,0,c
 19856  015E6E  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19857  015E70  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19858  015E72  0100               	movlb	0	; () banked
 19859  015E74  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19860  015E76                     l11448:
 19861                           
 19862                           ; BSR set to: 0
 19863  015E76  0100               	movlb	0	; () banked
 19864  015E78  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19865  015E7A  D7F7               	goto	l11446
 19866  015E7C                     l11450:
 19867                           
 19868                           ; BSR set to: 0
 19869  015E7C  0100               	movlb	0	; () banked
 19870  015E7E  90D8               	bcf	status,0,c
 19871  015E80  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19872  015E82  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19873                           
 19874                           ; BSR set to: 0
 19875  015E84  0100               	movlb	0	; () banked
 19876  015E86  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19877  015E88  0100               	movlb	0	; () banked
 19878  015E8A  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19879  015E8C  0100               	movlb	0	; () banked
 19880  015E8E  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19881  015E90  0100               	movlb	0	; () banked
 19882  015E92  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19883  015E94  A0D8               	btfss	status,0,c
 19884  015E96  D00A               	goto	l11458
 19885                           
 19886                           ; BSR set to: 0
 19887  015E98  0100               	movlb	0	; () banked
 19888  015E9A  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19889  015E9C  0100               	movlb	0	; () banked
 19890  015E9E  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19891  015EA0  0100               	movlb	0	; () banked
 19892  015EA2  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19893  015EA4  0100               	movlb	0	; () banked
 19894  015EA6  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19895                           
 19896                           ; BSR set to: 0
 19897  015EA8  0100               	movlb	0	; () banked
 19898  015EAA  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19899  015EAC                     l11458:
 19900                           
 19901                           ; BSR set to: 0
 19902  015EAC  0100               	movlb	0	; () banked
 19903  015EAE  90D8               	bcf	status,0,c
 19904  015EB0  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19905  015EB2  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19906                           
 19907                           ; BSR set to: 0
 19908  015EB4  0100               	movlb	0	; () banked
 19909  015EB6  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19910  015EB8  D7E1               	goto	l11450
 19911  015EBA                     l2448:
 19912                           
 19913                           ; BSR set to: 0
 19914  015EBA  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19915  015EBE  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19916                           
 19917                           ; BSR set to: 0
 19918  015EC2  0012               	return		;funcret
 19919  015EC4                     __end_of___lwdiv:
 19920                           	opt stack 0
 19921                           tblptru	equ	0xFF8
 19922                           tblptrh	equ	0xFF7
 19923                           tblptrl	equ	0xFF6
 19924                           tablat	equ	0xFF5
 19925                           prodh	equ	0xFF4
 19926                           prodl	equ	0xFF3
 19927                           intcon	equ	0xFF2
 19928                           intcon2	equ	0xFF1
 19929                           postinc0	equ	0xFEE
 19930                           wreg	equ	0xFE8
 19931                           indf1	equ	0xFE7
 19932                           postinc1	equ	0xFE6
 19933                           postdec1	equ	0xFE5
 19934                           fsr1h	equ	0xFE2
 19935                           fsr1l	equ	0xFE1
 19936                           indf2	equ	0xFDF
 19937                           postinc2	equ	0xFDE
 19938                           postdec2	equ	0xFDD
 19939                           plusw2	equ	0xFDB
 19940                           fsr2h	equ	0xFDA
 19941                           fsr2l	equ	0xFD9
 19942                           status	equ	0xFD8
 19943                           
 19944 ;; *************** function _CTMU_read *****************
 19945 ;; Defined at:
 19946 ;;		line 184 in file "../My_library/My_PIC.c"
 19947 ;; Parameters:    Size  Location     Type
 19948 ;;  ch              1    wreg     unsigned char 
 19949 ;; Auto vars:     Size  Location     Type
 19950 ;;  ch              1   16[BANK0 ] unsigned char 
 19951 ;;  i               1   21[BANK0 ] unsigned char 
 19952 ;;  sum             4   17[BANK0 ] unsigned long 
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  2   13[BANK0 ] unsigned int 
 19955 ;; Registers used:
 19956 ;;		wreg, status,2, status,0, cstack
 19957 ;; Tracked objects:
 19958 ;;		On entry : 0/0
 19959 ;;		On exit  : 0/0
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19963 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19965 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19966 ;;Total ram usage:        9 bytes
 19967 ;; Hardware stack levels used:    1
 19968 ;; Hardware stack levels required when called:   13
 19969 ;; This function calls:
 19970 ;;		___lldiv
 19971 ;; This function is called by:
 19972 ;;		_ctmu_set_ratio
 19973 ;;		_ctmu_sampling
 19974 ;; This function uses a non-reentrant model
 19975 ;;
 19976                           
 19977                           	psect	text80
 19978  01524C                     __ptext80:
 19979                           	opt stack 0
 19980  01524C                     _CTMU_read:
 19981                           	opt stack 14
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;incstack = 0
 19985                           ;CTMU_read@ch stored from wreg
 19986  01524C  0100               	movlb	0	; () banked
 19987  01524E  6F70               	movwf	CTMU_read@ch& (0+255),b
 19988                           
 19989                           ;My_PIC.c: 185: uint32_t sum = 0;
 19990  015250  0E00               	movlw	0
 19991  015252  0100               	movlb	0	; () banked
 19992  015254  6F71               	movwf	CTMU_read@sum& (0+255),b
 19993  015256  0E00               	movlw	0
 19994  015258  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19995  01525A  0E00               	movlw	0
 19996  01525C  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19997  01525E  0E00               	movlw	0
 19998  015260  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19999                           
 20000                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 20001  015262  0E00               	movlw	0
 20002  015264  0100               	movlb	0	; () banked
 20003  015266  6F75               	movwf	CTMU_read@i& (0+255),b
 20004  015268                     l11132:
 20005                           
 20006                           ; BSR set to: 0
 20007  015268  0E09               	movlw	9
 20008  01526A  0100               	movlb	0	; () banked
 20009  01526C  6575               	cpfsgt	CTMU_read@i& (0+255),b
 20010  01526E  D001               	goto	l11136
 20011  015270  D02B               	goto	l11164
 20012  015272                     l11136:
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 20016  015272  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 20017  015276  0100               	movlb	0	; () banked
 20018  015278  476F               	rlncf	??_CTMU_read& (0+255),f,b
 20019  01527A  476F               	rlncf	??_CTMU_read& (0+255),f,b
 20020  01527C  50C2               	movf	4034,w,c	;volatile
 20021  01527E  0100               	movlb	0	; () banked
 20022  015280  196F               	xorwf	??_CTMU_read& (0+255),w,b
 20023  015282  0BC3               	andlw	-61
 20024  015284  196F               	xorwf	??_CTMU_read& (0+255),w,b
 20025  015286  6EC2               	movwf	4034,c	;volatile
 20026                           
 20027                           ; BSR set to: 0
 20028                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 20029  015288  8EB3               	bsf	4019,7,c	;volatile
 20030                           
 20031                           ; BSR set to: 0
 20032                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 20033  01528A  90B2               	bcf	4018,0,c	;volatile
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 20037  01528C  92B2               	bcf	4018,1,c	;volatile
 20038                           
 20039                           ; BSR set to: 0
 20040                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 20041  01528E  82B3               	bsf	4019,1,c	;volatile
 20042                           
 20043                           ; BSR set to: 0
 20044                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 20045  015290  0E50               	movlw	80
 20046  015292                     u15227:
 20047  015292  2EE8               	decfsz	wreg,f,c
 20048  015294  D7FE               	goto	u15227
 20049                           
 20050                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 20051  015296  92B3               	bcf	4019,1,c	;volatile
 20052                           
 20053                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 20054  015298  80B2               	bsf	4018,0,c	;volatile
 20055                           
 20056                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 20057  01529A  0E14               	movlw	20
 20058  01529C                     u15237:
 20059  01529C  2EE8               	decfsz	wreg,f,c
 20060  01529E  D7FE               	goto	u15237
 20061                           
 20062                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 20063  0152A0  90B2               	bcf	4018,0,c	;volatile
 20064                           
 20065                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 20066  0152A2  9C9E               	bcf	3998,6,c	;volatile
 20067                           
 20068                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 20069  0152A4  82C2               	bsf	4034,1,c	;volatile
 20070  0152A6                     l735:
 20071  0152A6  AC9E               	btfss	3998,6,c	;volatile
 20072  0152A8  D7FE               	goto	l735
 20073                           
 20074                           ;My_PIC.c: 204: sum += ADRES;
 20075  0152AA  50C3               	movf	4035,w,c	;volatile
 20076  0152AC  0100               	movlb	0	; () banked
 20077  0152AE  2771               	addwf	CTMU_read@sum& (0+255),f,b
 20078  0152B0  50C4               	movf	4036,w,c	;volatile
 20079  0152B2  0100               	movlb	0	; () banked
 20080  0152B4  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 20081  0152B6  0E00               	movlw	0
 20082  0152B8  0100               	movlb	0	; () banked
 20083  0152BA  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 20084  0152BC  0E00               	movlw	0
 20085  0152BE  0100               	movlb	0	; () banked
 20086  0152C0  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 20087  0152C2  0100               	movlb	0	; () banked
 20088  0152C4  2B75               	incf	CTMU_read@i& (0+255),f,b
 20089  0152C6  D7D0               	goto	l11132
 20090  0152C8                     l11164:
 20091                           
 20092                           ; BSR set to: 0
 20093                           ;My_PIC.c: 205: }
 20094                           ;My_PIC.c: 206: return sum / 10 / 4;
 20095  0152C8  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 20096  0152CC  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 20097  0152D0  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 20098  0152D4  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 20099  0152D8  0E0A               	movlw	10
 20100  0152DA  0100               	movlb	0	; () banked
 20101  0152DC  6F64               	movwf	___lldiv@divisor& (0+255),b
 20102  0152DE  0E00               	movlw	0
 20103  0152E0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 20104  0152E2  0E00               	movlw	0
 20105  0152E4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 20106  0152E6  0E00               	movlw	0
 20107  0152E8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 20108  0152EA  EC46  F0AA         	call	___lldiv	;wreg free
 20109  0152EE  0E03               	movlw	3
 20110  0152F0  D007               	goto	u12200
 20111  0152F2                     u12205:
 20112  0152F2  0100               	movlb	0	; () banked
 20113  0152F4  90D8               	bcf	status,0,c
 20114  0152F6  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 20115  0152F8  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 20116  0152FA  0100               	movlb	0	; () banked
 20117  0152FC  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 20118  0152FE  3360               	rrcf	?___lldiv& (0+255),f,b
 20119  015300                     u12200:
 20120  015300  2EE8               	decfsz	wreg,f,c
 20121  015302  D7F7               	goto	u12205
 20122  015304  C060  F06D         	movff	?___lldiv,?_CTMU_read
 20123  015308  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 20124  01530C  0012               	return	
 20125  01530E                     __end_of_CTMU_read:
 20126                           	opt stack 0
 20127                           tblptru	equ	0xFF8
 20128                           tblptrh	equ	0xFF7
 20129                           tblptrl	equ	0xFF6
 20130                           tablat	equ	0xFF5
 20131                           prodh	equ	0xFF4
 20132                           prodl	equ	0xFF3
 20133                           intcon	equ	0xFF2
 20134                           intcon2	equ	0xFF1
 20135                           postinc0	equ	0xFEE
 20136                           wreg	equ	0xFE8
 20137                           indf1	equ	0xFE7
 20138                           postinc1	equ	0xFE6
 20139                           postdec1	equ	0xFE5
 20140                           fsr1h	equ	0xFE2
 20141                           fsr1l	equ	0xFE1
 20142                           indf2	equ	0xFDF
 20143                           postinc2	equ	0xFDE
 20144                           postdec2	equ	0xFDD
 20145                           plusw2	equ	0xFDB
 20146                           fsr2h	equ	0xFDA
 20147                           fsr2l	equ	0xFD9
 20148                           status	equ	0xFD8
 20149                           
 20150 ;; *************** function ___lldiv *****************
 20151 ;; Defined at:
 20152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 20153 ;; Parameters:    Size  Location     Type
 20154 ;;  dividend        4    0[BANK0 ] unsigned long 
 20155 ;;  divisor         4    4[BANK0 ] unsigned long 
 20156 ;; Auto vars:     Size  Location     Type
 20157 ;;  quotient        4    8[BANK0 ] unsigned long 
 20158 ;;  counter         1   12[BANK0 ] unsigned char 
 20159 ;; Return value:  Size  Location     Type
 20160 ;;                  4    0[BANK0 ] unsigned long 
 20161 ;; Registers used:
 20162 ;;		wreg, status,2, status,0
 20163 ;; Tracked objects:
 20164 ;;		On entry : 0/0
 20165 ;;		On exit  : 0/0
 20166 ;;		Unchanged: 0/0
 20167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20168 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20169 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20171 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20172 ;;Total ram usage:       13 bytes
 20173 ;; Hardware stack levels used:    1
 20174 ;; Hardware stack levels required when called:   12
 20175 ;; This function calls:
 20176 ;;		Nothing
 20177 ;; This function is called by:
 20178 ;;		_CTMU_read
 20179 ;;		_get_quot_rem
 20180 ;;		_integrate_current
 20181 ;;		_display_LCD
 20182 ;;		_sprintf
 20183 ;; This function uses a non-reentrant model
 20184 ;;
 20185                           
 20186                           	psect	text81
 20187  01548C                     __ptext81:
 20188                           	opt stack 0
 20189  01548C                     ___lldiv:
 20190                           	opt stack 12
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;incstack = 0
 20194  01548C  0E00               	movlw	0
 20195  01548E  0100               	movlb	0	; () banked
 20196  015490  6F68               	movwf	___lldiv@quotient& (0+255),b
 20197  015492  0E00               	movlw	0
 20198  015494  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20199  015496  0E00               	movlw	0
 20200  015498  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20201  01549A  0E00               	movlw	0
 20202  01549C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20203                           
 20204                           ; BSR set to: 0
 20205  01549E  0100               	movlb	0	; () banked
 20206  0154A0  5164               	movf	___lldiv@divisor& (0+255),w,b
 20207  0154A2  0100               	movlb	0	; () banked
 20208  0154A4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20209  0154A6  0100               	movlb	0	; () banked
 20210  0154A8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20211  0154AA  0100               	movlb	0	; () banked
 20212  0154AC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20213  0154AE  B4D8               	btfsc	status,2,c
 20214  0154B0  D042               	goto	l2395
 20215                           
 20216                           ; BSR set to: 0
 20217  0154B2  0E01               	movlw	1
 20218  0154B4  0100               	movlb	0	; () banked
 20219  0154B6  6F6C               	movwf	___lldiv@counter& (0+255),b
 20220  0154B8  D008               	goto	l10678
 20221  0154BA                     l10676:
 20222                           
 20223                           ; BSR set to: 0
 20224  0154BA  0100               	movlb	0	; () banked
 20225  0154BC  90D8               	bcf	status,0,c
 20226  0154BE  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20227  0154C0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20228  0154C2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20229  0154C4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20230  0154C6  0100               	movlb	0	; () banked
 20231  0154C8  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20232  0154CA                     l10678:
 20233                           
 20234                           ; BSR set to: 0
 20235  0154CA  0100               	movlb	0	; () banked
 20236  0154CC  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20237  0154CE  D7F5               	goto	l10676
 20238  0154D0                     l10680:
 20239                           
 20240                           ; BSR set to: 0
 20241  0154D0  0100               	movlb	0	; () banked
 20242  0154D2  90D8               	bcf	status,0,c
 20243  0154D4  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20244  0154D6  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20245  0154D8  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20246  0154DA  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20247                           
 20248                           ; BSR set to: 0
 20249  0154DC  0100               	movlb	0	; () banked
 20250  0154DE  5164               	movf	___lldiv@divisor& (0+255),w,b
 20251  0154E0  0100               	movlb	0	; () banked
 20252  0154E2  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20253  0154E4  0100               	movlb	0	; () banked
 20254  0154E6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20255  0154E8  0100               	movlb	0	; () banked
 20256  0154EA  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20257  0154EC  0100               	movlb	0	; () banked
 20258  0154EE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20259  0154F0  0100               	movlb	0	; () banked
 20260  0154F2  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20261  0154F4  0100               	movlb	0	; () banked
 20262  0154F6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20263  0154F8  0100               	movlb	0	; () banked
 20264  0154FA  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20265  0154FC  A0D8               	btfss	status,0,c
 20266  0154FE  D012               	goto	l10688
 20267                           
 20268                           ; BSR set to: 0
 20269  015500  0100               	movlb	0	; () banked
 20270  015502  5164               	movf	___lldiv@divisor& (0+255),w,b
 20271  015504  0100               	movlb	0	; () banked
 20272  015506  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20273  015508  0100               	movlb	0	; () banked
 20274  01550A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20275  01550C  0100               	movlb	0	; () banked
 20276  01550E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20277  015510  0100               	movlb	0	; () banked
 20278  015512  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20279  015514  0100               	movlb	0	; () banked
 20280  015516  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20281  015518  0100               	movlb	0	; () banked
 20282  01551A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20283  01551C  0100               	movlb	0	; () banked
 20284  01551E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20285                           
 20286                           ; BSR set to: 0
 20287  015520  0100               	movlb	0	; () banked
 20288  015522  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20289  015524                     l10688:
 20290                           
 20291                           ; BSR set to: 0
 20292  015524  0100               	movlb	0	; () banked
 20293  015526  90D8               	bcf	status,0,c
 20294  015528  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20295  01552A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20296  01552C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20297  01552E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20298                           
 20299                           ; BSR set to: 0
 20300  015530  0100               	movlb	0	; () banked
 20301  015532  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20302  015534  D7CD               	goto	l10680
 20303  015536                     l2395:
 20304                           
 20305                           ; BSR set to: 0
 20306  015536  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20307  01553A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20308  01553E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20309  015542  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20310                           
 20311                           ; BSR set to: 0
 20312  015546  0012               	return		;funcret
 20313  015548                     __end_of___lldiv:
 20314                           	opt stack 0
 20315                           tblptru	equ	0xFF8
 20316                           tblptrh	equ	0xFF7
 20317                           tblptrl	equ	0xFF6
 20318                           tablat	equ	0xFF5
 20319                           prodh	equ	0xFF4
 20320                           prodl	equ	0xFF3
 20321                           intcon	equ	0xFF2
 20322                           intcon2	equ	0xFF1
 20323                           postinc0	equ	0xFEE
 20324                           wreg	equ	0xFE8
 20325                           indf1	equ	0xFE7
 20326                           postinc1	equ	0xFE6
 20327                           postdec1	equ	0xFE5
 20328                           fsr1h	equ	0xFE2
 20329                           fsr1l	equ	0xFE1
 20330                           indf2	equ	0xFDF
 20331                           postinc2	equ	0xFDE
 20332                           postdec2	equ	0xFDD
 20333                           plusw2	equ	0xFDB
 20334                           fsr2h	equ	0xFDA
 20335                           fsr2l	equ	0xFD9
 20336                           status	equ	0xFD8
 20337                           
 20338 ;; *************** function _USB_CDC_task *****************
 20339 ;; Defined at:
 20340 ;;		line 39 in file "../My_library/My_usb_cdc.c"
 20341 ;; Parameters:    Size  Location     Type
 20342 ;;		None
 20343 ;; Auto vars:     Size  Location     Type
 20344 ;;  i               2   16[BANK0 ] unsigned int 
 20345 ;;  length          2   18[BANK0 ] unsigned int 
 20346 ;; Return value:  Size  Location     Type
 20347 ;;		None               void
 20348 ;; Registers used:
 20349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20350 ;; Tracked objects:
 20351 ;;		On entry : 0/0
 20352 ;;		On exit  : 0/0
 20353 ;;		Unchanged: 0/0
 20354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20356 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20358 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20359 ;;Total ram usage:        5 bytes
 20360 ;; Hardware stack levels used:    1
 20361 ;; Hardware stack levels required when called:   15
 20362 ;; This function calls:
 20363 ;;		_USB_CDC_get
 20364 ;;		_USB_CDC_send
 20365 ;;		_ringbuf_num
 20366 ;;		_ringbuf_pop
 20367 ;;		_ringbuf_put
 20368 ;; This function is called by:
 20369 ;;		_main
 20370 ;; This function uses a non-reentrant model
 20371 ;;
 20372                           
 20373                           	psect	text82
 20374  013F6A                     __ptext82:
 20375                           	opt stack 0
 20376  013F6A                     _USB_CDC_task:
 20377                           	opt stack 15
 20378                           
 20379                           ;My_usb_cdc.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;incstack = 0
 20383  013F6A  0E20               	movlw	32
 20384  013F6C  6013               	cpfslt	_USBDeviceState,c	;volatile
 20385  013F6E  D001               	goto	l1356
 20386  013F70  0012               	return	
 20387  013F72                     l1356:
 20388                           
 20389                           ;My_usb_cdc.c: 63: }
 20390                           ;My_usb_cdc.c: 69: if (UCONbits.SUSPND == 1) {
 20391  013F72  B265               	btfsc	3941,1,c	;volatile
 20392  013F74  0012               	return	
 20393                           
 20394                           ;My_usb_cdc.c: 72: }
 20395                           ;My_usb_cdc.c: 75: uint16_t length = 0;
 20396                           
 20397                           ;My_usb_cdc.c: 71: return;
 20398  013F76  0E00               	movlw	0
 20399  013F78  0100               	movlb	0	; () banked
 20400  013F7A  6F73               	movwf	(USB_CDC_task@length+1)& (0+255),b
 20401  013F7C  0E00               	movlw	0
 20402  013F7E  6F72               	movwf	USB_CDC_task@length& (0+255),b
 20403                           
 20404                           ;My_usb_cdc.c: 76: while (ringbuf_num(&usb_tx)) {
 20405  013F80  D01F               	goto	l12698
 20406  013F82                     l12690:
 20407                           
 20408                           ; BSR set to: 0
 20409                           ;My_usb_cdc.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
 20410  013F82  0EC6               	movlw	low _usb_tx
 20411  013F84  0100               	movlb	0	; () banked
 20412  013F86  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20413  013F88  0E02               	movlw	high _usb_tx
 20414  013F8A  0100               	movlb	0	; () banked
 20415  013F8C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20416  013F8E  ECFC  F0A7         	call	_ringbuf_pop	;wreg free
 20417  013F92  0100               	movlb	0	; () banked
 20418  013F94  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 20419  013F96  0EC0               	movlw	low _writeBuffer
 20420  013F98  0100               	movlb	0	; () banked
 20421  013F9A  2572               	addwf	USB_CDC_task@length& (0+255),w,b
 20422  013F9C  6ED9               	movwf	fsr2l,c
 20423  013F9E  0E03               	movlw	high _writeBuffer
 20424  013FA0  0100               	movlb	0	; () banked
 20425  013FA2  2173               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
 20426  013FA4  6EDA               	movwf	fsr2h,c
 20427  013FA6  C06F  FFDF         	movff	??_USB_CDC_task,indf2
 20428                           
 20429                           ; BSR set to: 0
 20430  013FAA  0100               	movlb	0	; () banked
 20431  013FAC  4B72               	infsnz	USB_CDC_task@length& (0+255),f,b
 20432  013FAE  2B73               	incf	(USB_CDC_task@length+1)& (0+255),f,b
 20433                           
 20434                           ; BSR set to: 0
 20435                           ;My_usb_cdc.c: 78: if (length >= 64) {
 20436  013FB0  0100               	movlb	0	; () banked
 20437  013FB2  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 20438  013FB4  E113               	bnz	l12700
 20439  013FB6  0E40               	movlw	64
 20440  013FB8  0100               	movlb	0	; () banked
 20441  013FBA  5D72               	subwf	USB_CDC_task@length& (0+255),w,b
 20442  013FBC  B0D8               	btfsc	status,0,c
 20443  013FBE  D00E               	goto	l12700
 20444  013FC0                     l12698:
 20445                           
 20446                           ; BSR set to: 0
 20447  013FC0  0EC6               	movlw	low _usb_tx
 20448  013FC2  0100               	movlb	0	; () banked
 20449  013FC4  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20450  013FC6  0E02               	movlw	high _usb_tx
 20451  013FC8  0100               	movlb	0	; () banked
 20452  013FCA  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20453  013FCC  EC9C  F0A1         	call	_ringbuf_num	;wreg free
 20454  013FD0  0100               	movlb	0	; () banked
 20455  013FD2  5160               	movf	?_ringbuf_num& (0+255),w,b
 20456  013FD4  0100               	movlb	0	; () banked
 20457  013FD6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20458  013FD8  A4D8               	btfss	status,2,c
 20459  013FDA  D7D3               	goto	l12690
 20460  013FDC                     l12700:
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;My_usb_cdc.c: 80: }
 20464                           ;My_usb_cdc.c: 81: }
 20465                           ;My_usb_cdc.c: 82: if (length) {
 20466  013FDC  0100               	movlb	0	; () banked
 20467  013FDE  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20468  013FE0  0100               	movlb	0	; () banked
 20469  013FE2  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 20470  013FE4  B4D8               	btfsc	status,2,c
 20471  013FE6  D006               	goto	l1363
 20472                           
 20473                           ; BSR set to: 0
 20474                           ;My_usb_cdc.c: 83: USB_CDC_send(length);
 20475  013FE8  C072  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
 20476  013FEC  C073  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
 20477  013FF0  EC0C  F0B6         	call	_USB_CDC_send	;wreg free
 20478  013FF4                     l1363:
 20479                           
 20480                           ;My_usb_cdc.c: 84: }
 20481                           ;My_usb_cdc.c: 86: length = USB_CDC_get();
 20482  013FF4  EC71  F0B5         	call	_USB_CDC_get	;wreg free
 20483  013FF8  0100               	movlb	0	; () banked
 20484  013FFA  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 20485  013FFC  0100               	movlb	0	; () banked
 20486  013FFE  516F               	movf	??_USB_CDC_task& (0+255),w,b
 20487  014000  0100               	movlb	0	; () banked
 20488  014002  6F72               	movwf	USB_CDC_task@length& (0+255),b
 20489  014004  6B73               	clrf	(USB_CDC_task@length+1)& (0+255),b
 20490                           
 20491                           ; BSR set to: 0
 20492                           ;My_usb_cdc.c: 87: if (length) {
 20493  014006  0100               	movlb	0	; () banked
 20494  014008  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20495  01400A  0100               	movlb	0	; () banked
 20496  01400C  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 20497  01400E  B4D8               	btfsc	status,2,c
 20498  014010  0012               	return	
 20499                           
 20500                           ; BSR set to: 0
 20501                           ;My_usb_cdc.c: 88: for (uint16_t i = 0; i < length; i++) {
 20502  014012  0E00               	movlw	0
 20503  014014  0100               	movlb	0	; () banked
 20504  014016  6F71               	movwf	(USB_CDC_task@i+1)& (0+255),b
 20505  014018  0E00               	movlw	0
 20506  01401A  6F70               	movwf	USB_CDC_task@i& (0+255),b
 20507  01401C  D016               	goto	l12712
 20508  01401E                     l12708:
 20509                           
 20510                           ; BSR set to: 0
 20511                           ;My_usb_cdc.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
 20512  01401E  0EBE               	movlw	low _usb_rx
 20513  014020  0100               	movlb	0	; () banked
 20514  014022  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20515  014024  0E02               	movlw	high _usb_rx
 20516  014026  0100               	movlb	0	; () banked
 20517  014028  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20518  01402A  0E80               	movlw	low _readBuffer
 20519  01402C  0100               	movlb	0	; () banked
 20520  01402E  2570               	addwf	USB_CDC_task@i& (0+255),w,b
 20521  014030  6ED9               	movwf	fsr2l,c
 20522  014032  0E03               	movlw	high _readBuffer
 20523  014034  0100               	movlb	0	; () banked
 20524  014036  2171               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
 20525  014038  6EDA               	movwf	fsr2h,c
 20526  01403A  50DF               	movf	indf2,w,c
 20527  01403C  0100               	movlb	0	; () banked
 20528  01403E  6F6A               	movwf	ringbuf_put@data& (0+255),b
 20529  014040  ECF2  F0A5         	call	_ringbuf_put	;wreg free
 20530  014044  0100               	movlb	0	; () banked
 20531  014046  4B70               	infsnz	USB_CDC_task@i& (0+255),f,b
 20532  014048  2B71               	incf	(USB_CDC_task@i+1)& (0+255),f,b
 20533  01404A                     l12712:
 20534                           
 20535                           ; BSR set to: 0
 20536  01404A  0100               	movlb	0	; () banked
 20537  01404C  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20538  01404E  0100               	movlb	0	; () banked
 20539  014050  5D70               	subwf	USB_CDC_task@i& (0+255),w,b
 20540  014052  0100               	movlb	0	; () banked
 20541  014054  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 20542  014056  0100               	movlb	0	; () banked
 20543  014058  5971               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
 20544  01405A  B0D8               	btfsc	status,0,c
 20545  01405C  0012               	return	
 20546  01405E  D7DF               	goto	l12708
 20547  014060                     __end_of_USB_CDC_task:
 20548                           	opt stack 0
 20549                           tblptru	equ	0xFF8
 20550                           tblptrh	equ	0xFF7
 20551                           tblptrl	equ	0xFF6
 20552                           tablat	equ	0xFF5
 20553                           prodh	equ	0xFF4
 20554                           prodl	equ	0xFF3
 20555                           intcon	equ	0xFF2
 20556                           intcon2	equ	0xFF1
 20557                           postinc0	equ	0xFEE
 20558                           wreg	equ	0xFE8
 20559                           indf1	equ	0xFE7
 20560                           postinc1	equ	0xFE6
 20561                           postdec1	equ	0xFE5
 20562                           fsr1h	equ	0xFE2
 20563                           fsr1l	equ	0xFE1
 20564                           indf2	equ	0xFDF
 20565                           postinc2	equ	0xFDE
 20566                           postdec2	equ	0xFDD
 20567                           plusw2	equ	0xFDB
 20568                           fsr2h	equ	0xFDA
 20569                           fsr2l	equ	0xFD9
 20570                           status	equ	0xFD8
 20571                           
 20572 ;; *************** function _ringbuf_put *****************
 20573 ;; Defined at:
 20574 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20575 ;; Parameters:    Size  Location     Type
 20576 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20577 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 20578 ;;		 -> lcd_tx(8), 
 20579 ;;  data            1   10[BANK0 ] unsigned char 
 20580 ;; Auto vars:     Size  Location     Type
 20581 ;;		None
 20582 ;; Return value:  Size  Location     Type
 20583 ;;		None               void
 20584 ;; Registers used:
 20585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20586 ;; Tracked objects:
 20587 ;;		On entry : 0/0
 20588 ;;		On exit  : 0/0
 20589 ;;		Unchanged: 0/0
 20590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20591 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20593 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20594 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20595 ;;Total ram usage:        7 bytes
 20596 ;; Hardware stack levels used:    1
 20597 ;; Hardware stack levels required when called:   13
 20598 ;; This function calls:
 20599 ;;		_ringbuf_num
 20600 ;; This function is called by:
 20601 ;;		_ringbuf_put_num
 20602 ;;		_ringbuf_put_str
 20603 ;;		_terminal_task
 20604 ;;		_USB_CDC_task
 20605 ;;		_ST7032_command
 20606 ;;		_ST7032_put
 20607 ;;		_ST7032_create_char
 20608 ;;		_ST7032_init
 20609 ;;		_UART_ISR
 20610 ;; This function uses a non-reentrant model
 20611 ;;
 20612                           
 20613                           	psect	text83
 20614  014BE4                     __ptext83:
 20615                           	opt stack 0
 20616  014BE4                     _ringbuf_put:
 20617                           	opt stack 12
 20618                           
 20619                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20620                           
 20621                           ;incstack = 0
 20622  014BE4  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20623  014BE8  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20624  014BEC  EC9C  F0A1         	call	_ringbuf_num	;wreg free
 20625  014BF0  0100               	movlb	0	; () banked
 20626  014BF2  EE20 F002          	lfsr	2,2
 20627  014BF6  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20628  014BF8  26D9               	addwf	fsr2l,f,c
 20629  014BFA  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20630  014BFC  22DA               	addwfc	fsr2h,f,c
 20631  014BFE  50DE               	movf	postinc2,w,c
 20632  014C00  0100               	movlb	0	; () banked
 20633  014C02  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20634  014C04  50DE               	movf	postinc2,w,c
 20635  014C06  0100               	movlb	0	; () banked
 20636  014C08  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20637  014C0A  B0D8               	btfsc	status,0,c
 20638  014C0C  0012               	return	
 20639                           
 20640                           ; BSR set to: 0
 20641                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 20642  014C0E  0100               	movlb	0	; () banked
 20643  014C10  EE20 F004          	lfsr	2,4
 20644  014C14  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20645  014C16  26D9               	addwf	fsr2l,f,c
 20646  014C18  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20647  014C1A  22DA               	addwfc	fsr2h,f,c
 20648  014C1C  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20649  014C20  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20650  014C24  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20651  014C28  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20652  014C2C  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20653  014C30  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20654  014C34  0100               	movlb	0	; () banked
 20655  014C36  516B               	movf	??_ringbuf_put& (0+255),w,b
 20656  014C38  0100               	movlb	0	; () banked
 20657  014C3A  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20658  014C3C  6ED9               	movwf	fsr2l,c
 20659  014C3E  0100               	movlb	0	; () banked
 20660  014C40  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20661  014C42  0100               	movlb	0	; () banked
 20662  014C44  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20663  014C46  6EDA               	movwf	fsr2h,c
 20664  014C48  C06A  FFDF         	movff	ringbuf_put@data,indf2
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20668  014C4C  0100               	movlb	0	; () banked
 20669  014C4E  EE20 F002          	lfsr	2,2
 20670  014C52  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20671  014C54  26D9               	addwf	fsr2l,f,c
 20672  014C56  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20673  014C58  22DA               	addwfc	fsr2h,f,c
 20674  014C5A  0100               	movlb	0	; () banked
 20675  014C5C  EE10 F004          	lfsr	1,4
 20676  014C60  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20677  014C62  26E1               	addwf	fsr1l,f,c
 20678  014C64  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20679  014C66  22E2               	addwfc	fsr1h,f,c
 20680  014C68  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20681  014C6C  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20682  014C70  0E01               	movlw	1
 20683  014C72  0100               	movlb	0	; () banked
 20684  014C74  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20685  014C76  0E00               	movlw	0
 20686  014C78  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20687  014C7A  50DE               	movf	postinc2,w,c
 20688  014C7C  0100               	movlb	0	; () banked
 20689  014C7E  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20690  014C80  50DE               	movf	postinc2,w,c
 20691  014C82  0100               	movlb	0	; () banked
 20692  014C84  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20693  014C86  B0D8               	btfsc	status,0,c
 20694  014C88  D00B               	goto	l10704
 20695                           
 20696                           ; BSR set to: 0
 20697  014C8A  0100               	movlb	0	; () banked
 20698  014C8C  EE20 F004          	lfsr	2,4
 20699  014C90  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20700  014C92  26D9               	addwf	fsr2l,f,c
 20701  014C94  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20702  014C96  22DA               	addwfc	fsr2h,f,c
 20703  014C98  2ADE               	incf	postinc2,f,c
 20704  014C9A  0E00               	movlw	0
 20705  014C9C  22DD               	addwfc	postdec2,f,c
 20706  014C9E  0012               	return	
 20707  014CA0                     l10704:
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;My_ringbuf.c: 24: else rb->head = 0;
 20711  014CA0  0100               	movlb	0	; () banked
 20712  014CA2  EE20 F004          	lfsr	2,4
 20713  014CA6  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20714  014CA8  26D9               	addwf	fsr2l,f,c
 20715  014CAA  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20716  014CAC  22DA               	addwfc	fsr2h,f,c
 20717  014CAE  0E00               	movlw	0
 20718  014CB0  6EDE               	movwf	postinc2,c
 20719  014CB2  0E00               	movlw	0
 20720  014CB4  6EDD               	movwf	postdec2,c
 20721                           
 20722                           ; BSR set to: 0
 20723  014CB6  0012               	return	
 20724  014CB8                     __end_of_ringbuf_put:
 20725                           	opt stack 0
 20726                           tblptru	equ	0xFF8
 20727                           tblptrh	equ	0xFF7
 20728                           tblptrl	equ	0xFF6
 20729                           tablat	equ	0xFF5
 20730                           prodh	equ	0xFF4
 20731                           prodl	equ	0xFF3
 20732                           intcon	equ	0xFF2
 20733                           intcon2	equ	0xFF1
 20734                           postinc0	equ	0xFEE
 20735                           wreg	equ	0xFE8
 20736                           indf1	equ	0xFE7
 20737                           postinc1	equ	0xFE6
 20738                           postdec1	equ	0xFE5
 20739                           fsr1h	equ	0xFE2
 20740                           fsr1l	equ	0xFE1
 20741                           indf2	equ	0xFDF
 20742                           postinc2	equ	0xFDE
 20743                           postdec2	equ	0xFDD
 20744                           plusw2	equ	0xFDB
 20745                           fsr2h	equ	0xFDA
 20746                           fsr2l	equ	0xFD9
 20747                           status	equ	0xFD8
 20748                           
 20749 ;; *************** function _ringbuf_pop *****************
 20750 ;; Defined at:
 20751 ;;		line 45 in file "../My_library/My_ringbuf.c"
 20752 ;; Parameters:    Size  Location     Type
 20753 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20754 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 20755 ;;		 -> lcd_tx(8), 
 20756 ;; Auto vars:     Size  Location     Type
 20757 ;;  ret             1   14[BANK0 ] unsigned char 
 20758 ;; Return value:  Size  Location     Type
 20759 ;;                  1    wreg      unsigned char 
 20760 ;; Registers used:
 20761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20762 ;; Tracked objects:
 20763 ;;		On entry : 0/0
 20764 ;;		On exit  : 0/0
 20765 ;;		Unchanged: 0/0
 20766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20769 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20770 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20771 ;;Total ram usage:        7 bytes
 20772 ;; Hardware stack levels used:    1
 20773 ;; Hardware stack levels required when called:   13
 20774 ;; This function calls:
 20775 ;;		_ringbuf_num
 20776 ;; This function is called by:
 20777 ;;		_terminal_task
 20778 ;;		_USB_CDC_task
 20779 ;;		_ST7032_task
 20780 ;;		_UART_ISR
 20781 ;; This function uses a non-reentrant model
 20782 ;;
 20783                           
 20784                           	psect	text84
 20785  014FF8                     __ptext84:
 20786                           	opt stack 0
 20787  014FF8                     _ringbuf_pop:
 20788                           	opt stack 16
 20789                           
 20790                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20791                           
 20792                           ; BSR set to: 0
 20793                           ;incstack = 0
 20794  014FF8  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 20795  014FFC  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 20796  015000  EC9C  F0A1         	call	_ringbuf_num	;wreg free
 20797  015004  0100               	movlb	0	; () banked
 20798  015006  5160               	movf	?_ringbuf_num& (0+255),w,b
 20799  015008  0100               	movlb	0	; () banked
 20800  01500A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20801  01500C  B4D8               	btfsc	status,2,c
 20802  01500E  D058               	goto	l12196
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20806  015010  0100               	movlb	0	; () banked
 20807  015012  EE20 F006          	lfsr	2,6
 20808  015016  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20809  015018  26D9               	addwf	fsr2l,f,c
 20810  01501A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20811  01501C  22DA               	addwfc	fsr2h,f,c
 20812  01501E  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 20813  015022  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 20814  015026  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 20815  01502A  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 20816  01502E  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 20817  015032  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 20818  015036  0100               	movlb	0	; () banked
 20819  015038  516A               	movf	??_ringbuf_pop& (0+255),w,b
 20820  01503A  0100               	movlb	0	; () banked
 20821  01503C  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 20822  01503E  6ED9               	movwf	fsr2l,c
 20823  015040  0100               	movlb	0	; () banked
 20824  015042  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 20825  015044  0100               	movlb	0	; () banked
 20826  015046  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 20827  015048  6EDA               	movwf	fsr2h,c
 20828  01504A  50DF               	movf	indf2,w,c
 20829  01504C  0100               	movlb	0	; () banked
 20830  01504E  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 20831                           
 20832                           ; BSR set to: 0
 20833                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20834  015050  0100               	movlb	0	; () banked
 20835  015052  EE20 F002          	lfsr	2,2
 20836  015056  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20837  015058  26D9               	addwf	fsr2l,f,c
 20838  01505A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20839  01505C  22DA               	addwfc	fsr2h,f,c
 20840  01505E  0100               	movlb	0	; () banked
 20841  015060  EE10 F006          	lfsr	1,6
 20842  015064  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20843  015066  26E1               	addwf	fsr1l,f,c
 20844  015068  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20845  01506A  22E2               	addwfc	fsr1h,f,c
 20846  01506C  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 20847  015070  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 20848  015074  0E01               	movlw	1
 20849  015076  0100               	movlb	0	; () banked
 20850  015078  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 20851  01507A  0E00               	movlw	0
 20852  01507C  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 20853  01507E  50DE               	movf	postinc2,w,c
 20854  015080  0100               	movlb	0	; () banked
 20855  015082  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 20856  015084  50DE               	movf	postinc2,w,c
 20857  015086  0100               	movlb	0	; () banked
 20858  015088  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 20859  01508A  B0D8               	btfsc	status,0,c
 20860  01508C  D00B               	goto	l12188
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;My_ringbuf.c: 49: rb->tail++;
 20864  01508E  0100               	movlb	0	; () banked
 20865  015090  EE20 F006          	lfsr	2,6
 20866  015094  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20867  015096  26D9               	addwf	fsr2l,f,c
 20868  015098  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20869  01509A  22DA               	addwfc	fsr2h,f,c
 20870  01509C  2ADE               	incf	postinc2,f,c
 20871  01509E  0E00               	movlw	0
 20872  0150A0  22DD               	addwfc	postdec2,f,c
 20873                           
 20874                           ;My_ringbuf.c: 50: } else {
 20875  0150A2  D00B               	goto	l12190
 20876  0150A4                     l12188:
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;My_ringbuf.c: 51: rb->tail = 0;
 20880  0150A4  0100               	movlb	0	; () banked
 20881  0150A6  EE20 F006          	lfsr	2,6
 20882  0150AA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20883  0150AC  26D9               	addwf	fsr2l,f,c
 20884  0150AE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20885  0150B0  22DA               	addwfc	fsr2h,f,c
 20886  0150B2  0E00               	movlw	0
 20887  0150B4  6EDE               	movwf	postinc2,c
 20888  0150B6  0E00               	movlw	0
 20889  0150B8  6EDD               	movwf	postdec2,c
 20890  0150BA                     l12190:
 20891                           
 20892                           ; BSR set to: 0
 20893                           ;My_ringbuf.c: 52: }
 20894                           ;My_ringbuf.c: 53: return ret;
 20895  0150BA  0100               	movlb	0	; () banked
 20896  0150BC  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;My_ringbuf.c: 54: } else {
 20900                           
 20901                           ; BSR set to: 0
 20902  0150BE  0012               	return	
 20903  0150C0                     l12196:
 20904                           
 20905                           ; BSR set to: 0
 20906                           ;My_ringbuf.c: 55: return 0;
 20907  0150C0  0E00               	movlw	0
 20908                           
 20909                           ; BSR set to: 0
 20910  0150C2  0012               	return	
 20911  0150C4                     __end_of_ringbuf_pop:
 20912                           	opt stack 0
 20913                           tblptru	equ	0xFF8
 20914                           tblptrh	equ	0xFF7
 20915                           tblptrl	equ	0xFF6
 20916                           tablat	equ	0xFF5
 20917                           prodh	equ	0xFF4
 20918                           prodl	equ	0xFF3
 20919                           intcon	equ	0xFF2
 20920                           intcon2	equ	0xFF1
 20921                           postinc0	equ	0xFEE
 20922                           wreg	equ	0xFE8
 20923                           indf1	equ	0xFE7
 20924                           postinc1	equ	0xFE6
 20925                           postdec1	equ	0xFE5
 20926                           fsr1h	equ	0xFE2
 20927                           fsr1l	equ	0xFE1
 20928                           indf2	equ	0xFDF
 20929                           postinc2	equ	0xFDE
 20930                           postdec2	equ	0xFDD
 20931                           plusw2	equ	0xFDB
 20932                           fsr2h	equ	0xFDA
 20933                           fsr2l	equ	0xFD9
 20934                           status	equ	0xFD8
 20935                           
 20936 ;; *************** function _ringbuf_num *****************
 20937 ;; Defined at:
 20938 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20939 ;; Parameters:    Size  Location     Type
 20940 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 20941 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 20942 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 20943 ;; Auto vars:     Size  Location     Type
 20944 ;;		None
 20945 ;; Return value:  Size  Location     Type
 20946 ;;                  2    0[BANK0 ] unsigned int 
 20947 ;; Registers used:
 20948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20949 ;; Tracked objects:
 20950 ;;		On entry : 0/0
 20951 ;;		On exit  : 0/0
 20952 ;;		Unchanged: 0/0
 20953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20954 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20956 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20957 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;Total ram usage:        8 bytes
 20959 ;; Hardware stack levels used:    1
 20960 ;; Hardware stack levels required when called:   12
 20961 ;; This function calls:
 20962 ;;		Nothing
 20963 ;; This function is called by:
 20964 ;;		_ringbuf_put
 20965 ;;		_ringbuf_pop
 20966 ;;		_ringbuf_backspace
 20967 ;;		_terminal_task
 20968 ;;		_USB_CDC_task
 20969 ;;		_ST7032_task
 20970 ;;		_UART_ISR
 20971 ;;		_UART_task
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975                           	psect	text85
 20976  014338                     __ptext85:
 20977                           	opt stack 0
 20978  014338                     _ringbuf_num:
 20979                           	opt stack 12
 20980                           
 20981                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;incstack = 0
 20985  014338  0100               	movlb	0	; () banked
 20986  01433A  EE20 F006          	lfsr	2,6
 20987  01433E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20988  014340  26D9               	addwf	fsr2l,f,c
 20989  014342  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20990  014344  22DA               	addwfc	fsr2h,f,c
 20991  014346  0100               	movlb	0	; () banked
 20992  014348  EE10 F004          	lfsr	1,4
 20993  01434C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20994  01434E  26E1               	addwf	fsr1l,f,c
 20995  014350  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20996  014352  22E2               	addwfc	fsr1h,f,c
 20997  014354  50DE               	movf	postinc2,w,c
 20998  014356  5CE6               	subwf	postinc1,w,c
 20999  014358  50DE               	movf	postinc2,w,c
 21000  01435A  58E6               	subwfb	postinc1,w,c
 21001  01435C  A0D8               	btfss	status,0,c
 21002  01435E  D028               	goto	l10596
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 21006  014360  0100               	movlb	0	; () banked
 21007  014362  EE20 F004          	lfsr	2,4
 21008  014366  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21009  014368  26D9               	addwf	fsr2l,f,c
 21010  01436A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21011  01436C  22DA               	addwfc	fsr2h,f,c
 21012  01436E  CFDE F062          	movff	postinc2,??_ringbuf_num
 21013  014372  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 21014  014376  0100               	movlb	0	; () banked
 21015  014378  EE20 F006          	lfsr	2,6
 21016  01437C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21017  01437E  26D9               	addwf	fsr2l,f,c
 21018  014380  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21019  014382  22DA               	addwfc	fsr2h,f,c
 21020  014384  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 21021  014388  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 21022  01438C  0100               	movlb	0	; () banked
 21023  01438E  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 21024  014390  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 21025  014392  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 21026  014394  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 21027  014396  0100               	movlb	0	; () banked
 21028  014398  5162               	movf	??_ringbuf_num& (0+255),w,b
 21029  01439A  0100               	movlb	0	; () banked
 21030  01439C  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 21031  01439E  0100               	movlb	0	; () banked
 21032  0143A0  6F60               	movwf	?_ringbuf_num& (0+255),b
 21033  0143A2  0100               	movlb	0	; () banked
 21034  0143A4  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 21035  0143A6  0100               	movlb	0	; () banked
 21036  0143A8  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 21037  0143AA  0100               	movlb	0	; () banked
 21038  0143AC  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;My_ringbuf.c: 15: } else {
 21042                           
 21043                           ; BSR set to: 0
 21044  0143AE  0012               	return	
 21045  0143B0                     l10596:
 21046                           
 21047                           ; BSR set to: 0
 21048                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 21049  0143B0  0100               	movlb	0	; () banked
 21050  0143B2  EE20 F004          	lfsr	2,4
 21051  0143B6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21052  0143B8  26D9               	addwf	fsr2l,f,c
 21053  0143BA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21054  0143BC  22DA               	addwfc	fsr2h,f,c
 21055  0143BE  CFDE F062          	movff	postinc2,??_ringbuf_num
 21056  0143C2  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 21057  0143C6  0100               	movlb	0	; () banked
 21058  0143C8  EE20 F002          	lfsr	2,2
 21059  0143CC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21060  0143CE  26D9               	addwf	fsr2l,f,c
 21061  0143D0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21062  0143D2  22DA               	addwfc	fsr2h,f,c
 21063  0143D4  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 21064  0143D8  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 21065  0143DC  0100               	movlb	0	; () banked
 21066  0143DE  EE20 F006          	lfsr	2,6
 21067  0143E2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21068  0143E4  26D9               	addwf	fsr2l,f,c
 21069  0143E6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21070  0143E8  22DA               	addwfc	fsr2h,f,c
 21071  0143EA  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 21072  0143EE  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 21073  0143F2  0100               	movlb	0	; () banked
 21074  0143F4  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 21075  0143F6  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 21076  0143F8  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 21077  0143FA  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 21078  0143FC  0100               	movlb	0	; () banked
 21079  0143FE  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 21080  014400  0100               	movlb	0	; () banked
 21081  014402  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 21082  014404  0100               	movlb	0	; () banked
 21083  014406  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 21084  014408  0100               	movlb	0	; () banked
 21085  01440A  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 21086  01440C  0100               	movlb	0	; () banked
 21087  01440E  5162               	movf	??_ringbuf_num& (0+255),w,b
 21088  014410  0100               	movlb	0	; () banked
 21089  014412  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 21090  014414  0100               	movlb	0	; () banked
 21091  014416  6F60               	movwf	?_ringbuf_num& (0+255),b
 21092  014418  0100               	movlb	0	; () banked
 21093  01441A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 21094  01441C  0100               	movlb	0	; () banked
 21095  01441E  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 21096  014420  0100               	movlb	0	; () banked
 21097  014422  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 21098                           
 21099                           ; BSR set to: 0
 21100  014424  0012               	return	
 21101  014426                     __end_of_ringbuf_num:
 21102                           	opt stack 0
 21103                           tblptru	equ	0xFF8
 21104                           tblptrh	equ	0xFF7
 21105                           tblptrl	equ	0xFF6
 21106                           tablat	equ	0xFF5
 21107                           prodh	equ	0xFF4
 21108                           prodl	equ	0xFF3
 21109                           intcon	equ	0xFF2
 21110                           intcon2	equ	0xFF1
 21111                           postinc0	equ	0xFEE
 21112                           wreg	equ	0xFE8
 21113                           indf1	equ	0xFE7
 21114                           postinc1	equ	0xFE6
 21115                           postdec1	equ	0xFE5
 21116                           fsr1h	equ	0xFE2
 21117                           fsr1l	equ	0xFE1
 21118                           indf2	equ	0xFDF
 21119                           postinc2	equ	0xFDE
 21120                           postdec2	equ	0xFDD
 21121                           plusw2	equ	0xFDB
 21122                           fsr2h	equ	0xFDA
 21123                           fsr2l	equ	0xFD9
 21124                           status	equ	0xFD8
 21125                           
 21126 ;; *************** function _USB_CDC_send *****************
 21127 ;; Defined at:
 21128 ;;		line 94 in file "../My_library/My_usb_cdc.c"
 21129 ;; Parameters:    Size  Location     Type
 21130 ;;  length          2   12[BANK0 ] unsigned int 
 21131 ;; Auto vars:     Size  Location     Type
 21132 ;;		None
 21133 ;; Return value:  Size  Location     Type
 21134 ;;		None               void
 21135 ;; Registers used:
 21136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21137 ;; Tracked objects:
 21138 ;;		On entry : 0/0
 21139 ;;		On exit  : 0/0
 21140 ;;		Unchanged: 0/0
 21141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21146 ;;Total ram usage:        2 bytes
 21147 ;; Hardware stack levels used:    1
 21148 ;; Hardware stack levels required when called:   14
 21149 ;; This function calls:
 21150 ;;		_CDCTxService
 21151 ;;		_putUSBUSART
 21152 ;; This function is called by:
 21153 ;;		_USB_CDC_task
 21154 ;; This function uses a non-reentrant model
 21155 ;;
 21156                           
 21157                           	psect	text86
 21158  016C18                     __ptext86:
 21159                           	opt stack 0
 21160  016C18                     _USB_CDC_send:
 21161                           	opt stack 15
 21162                           
 21163                           ;My_usb_cdc.c: 95: if ((cdc_trf_state == 0) == 1) {
 21164                           
 21165                           ; BSR set to: 0
 21166                           ;incstack = 0
 21167  016C18  5019               	movf	_cdc_trf_state,w,c
 21168  016C1A  A4D8               	btfss	status,2,c
 21169  016C1C  D00A               	goto	l12324
 21170                           
 21171                           ;My_usb_cdc.c: 96: putUSBUSART(writeBuffer, length);
 21172  016C1E  0EC0               	movlw	low _writeBuffer
 21173  016C20  0100               	movlb	0	; () banked
 21174  016C22  6F60               	movwf	putUSBUSART@data& (0+255),b
 21175  016C24  0E03               	movlw	high _writeBuffer
 21176  016C26  0100               	movlb	0	; () banked
 21177  016C28  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 21178  016C2A  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
 21179  016C2E  EC1C  F0B6         	call	_putUSBUSART	;wreg free
 21180  016C32                     l12324:
 21181                           
 21182                           ;My_usb_cdc.c: 97: }
 21183                           ;My_usb_cdc.c: 98: CDCTxService();
 21184  016C32  ECDA  F097         	call	_CDCTxService	;wreg free
 21185  016C36  0012               	return		;funcret
 21186  016C38                     __end_of_USB_CDC_send:
 21187                           	opt stack 0
 21188                           tblptru	equ	0xFF8
 21189                           tblptrh	equ	0xFF7
 21190                           tblptrl	equ	0xFF6
 21191                           tablat	equ	0xFF5
 21192                           prodh	equ	0xFF4
 21193                           prodl	equ	0xFF3
 21194                           intcon	equ	0xFF2
 21195                           intcon2	equ	0xFF1
 21196                           postinc0	equ	0xFEE
 21197                           wreg	equ	0xFE8
 21198                           indf1	equ	0xFE7
 21199                           postinc1	equ	0xFE6
 21200                           postdec1	equ	0xFE5
 21201                           fsr1h	equ	0xFE2
 21202                           fsr1l	equ	0xFE1
 21203                           indf2	equ	0xFDF
 21204                           postinc2	equ	0xFDE
 21205                           postdec2	equ	0xFDD
 21206                           plusw2	equ	0xFDB
 21207                           fsr2h	equ	0xFDA
 21208                           fsr2l	equ	0xFD9
 21209                           status	equ	0xFD8
 21210                           
 21211 ;; *************** function _putUSBUSART *****************
 21212 ;; Defined at:
 21213 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 21214 ;; Parameters:    Size  Location     Type
 21215 ;;  data            2    0[BANK0 ] PTR unsigned char 
 21216 ;;		 -> writeBuffer(64), 
 21217 ;;  length          1    2[BANK0 ] unsigned char 
 21218 ;; Auto vars:     Size  Location     Type
 21219 ;;		None
 21220 ;; Return value:  Size  Location     Type
 21221 ;;		None               void
 21222 ;; Registers used:
 21223 ;;		wreg, status,2, status,0
 21224 ;; Tracked objects:
 21225 ;;		On entry : 0/0
 21226 ;;		On exit  : 0/0
 21227 ;;		Unchanged: 0/0
 21228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21229 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21232 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21233 ;;Total ram usage:        3 bytes
 21234 ;; Hardware stack levels used:    1
 21235 ;; Hardware stack levels required when called:   12
 21236 ;; This function calls:
 21237 ;;		Nothing
 21238 ;; This function is called by:
 21239 ;;		_USB_CDC_send
 21240 ;; This function uses a non-reentrant model
 21241 ;;
 21242                           
 21243                           	psect	text87
 21244  016C38                     __ptext87:
 21245                           	opt stack 0
 21246  016C38                     _putUSBUSART:
 21247                           	opt stack 16
 21248                           
 21249                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 21250                           
 21251                           ;incstack = 0
 21252  016C38  98A0               	bcf	4000,4,c	;volatile
 21253                           
 21254                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 21255  016C3A  5019               	movf	_cdc_trf_state,w,c
 21256  016C3C  A4D8               	btfss	status,2,c
 21257  016C3E  D00A               	goto	l11584
 21258                           
 21259                           ;usb_device_cdc.c: 640: {
 21260                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 21261  016C40  C060  F109         	movff	putUSBUSART@data,_pCDCSrc
 21262  016C44  C061  F10A         	movff	putUSBUSART@data+1,_pCDCSrc+1
 21263  016C48  C062  F01A         	movff	putUSBUSART@length,_cdc_tx_len
 21264  016C4C  0E01               	movlw	1
 21265  016C4E  6E17               	movwf	_cdc_mem_type,c
 21266  016C50  0E01               	movlw	1
 21267  016C52  6E19               	movwf	_cdc_trf_state,c
 21268  016C54                     l11584:
 21269                           
 21270                           ;usb_device_cdc.c: 642: }
 21271                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21272  016C54  88A0               	bsf	4000,4,c	;volatile
 21273  016C56  0012               	return		;funcret
 21274  016C58                     __end_of_putUSBUSART:
 21275                           	opt stack 0
 21276                           tblptru	equ	0xFF8
 21277                           tblptrh	equ	0xFF7
 21278                           tblptrl	equ	0xFF6
 21279                           tablat	equ	0xFF5
 21280                           prodh	equ	0xFF4
 21281                           prodl	equ	0xFF3
 21282                           intcon	equ	0xFF2
 21283                           intcon2	equ	0xFF1
 21284                           postinc0	equ	0xFEE
 21285                           wreg	equ	0xFE8
 21286                           indf1	equ	0xFE7
 21287                           postinc1	equ	0xFE6
 21288                           postdec1	equ	0xFE5
 21289                           fsr1h	equ	0xFE2
 21290                           fsr1l	equ	0xFE1
 21291                           indf2	equ	0xFDF
 21292                           postinc2	equ	0xFDE
 21293                           postdec2	equ	0xFDD
 21294                           plusw2	equ	0xFDB
 21295                           fsr2h	equ	0xFDA
 21296                           fsr2l	equ	0xFD9
 21297                           status	equ	0xFD8
 21298                           
 21299 ;; *************** function _USB_CDC_get *****************
 21300 ;; Defined at:
 21301 ;;		line 101 in file "../My_library/My_usb_cdc.c"
 21302 ;; Parameters:    Size  Location     Type
 21303 ;;		None
 21304 ;; Auto vars:     Size  Location     Type
 21305 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
 21306 ;; Return value:  Size  Location     Type
 21307 ;;                  1    wreg      unsigned char 
 21308 ;; Registers used:
 21309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21310 ;; Tracked objects:
 21311 ;;		On entry : 0/0
 21312 ;;		On exit  : 0/0
 21313 ;;		Unchanged: 0/0
 21314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21318 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21319 ;;Total ram usage:        1 bytes
 21320 ;; Hardware stack levels used:    1
 21321 ;; Hardware stack levels required when called:   14
 21322 ;; This function calls:
 21323 ;;		_CDCTxService
 21324 ;;		_getsUSBUSART
 21325 ;; This function is called by:
 21326 ;;		_USB_CDC_task
 21327 ;; This function uses a non-reentrant model
 21328 ;;
 21329                           
 21330                           	psect	text88
 21331  016AE2                     __ptext88:
 21332                           	opt stack 0
 21333  016AE2                     _USB_CDC_get:
 21334                           	opt stack 15
 21335                           
 21336                           ;My_usb_cdc.c: 102: uint8_t numBytesRead;
 21337                           ;My_usb_cdc.c: 103: if ((cdc_trf_state == 0) == 1) {
 21338                           
 21339                           ;incstack = 0
 21340  016AE2  5019               	movf	_cdc_trf_state,w,c
 21341  016AE4  A4D8               	btfss	status,2,c
 21342  016AE6  D00D               	goto	l1374
 21343                           
 21344                           ;My_usb_cdc.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
 21345  016AE8  0E80               	movlw	low _readBuffer
 21346  016AEA  0100               	movlb	0	; () banked
 21347  016AEC  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 21348  016AEE  0E03               	movlw	high _readBuffer
 21349  016AF0  0100               	movlb	0	; () banked
 21350  016AF2  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 21351  016AF4  0E40               	movlw	64
 21352  016AF6  0100               	movlb	0	; () banked
 21353  016AF8  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21354  016AFA  ECC5  F0A6         	call	_getsUSBUSART	;wreg free
 21355  016AFE  0100               	movlb	0	; () banked
 21356  016B00  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
 21357  016B02                     l1374:
 21358                           
 21359                           ;My_usb_cdc.c: 105: }
 21360                           ;My_usb_cdc.c: 106: CDCTxService();
 21361  016B02  ECDA  F097         	call	_CDCTxService	;wreg free
 21362                           
 21363                           ;My_usb_cdc.c: 107: return numBytesRead;
 21364  016B06  0100               	movlb	0	; () banked
 21365  016B08  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
 21366  016B0A  0012               	return	
 21367  016B0C                     __end_of_USB_CDC_get:
 21368                           	opt stack 0
 21369                           tblptru	equ	0xFF8
 21370                           tblptrh	equ	0xFF7
 21371                           tblptrl	equ	0xFF6
 21372                           tablat	equ	0xFF5
 21373                           prodh	equ	0xFF4
 21374                           prodl	equ	0xFF3
 21375                           intcon	equ	0xFF2
 21376                           intcon2	equ	0xFF1
 21377                           postinc0	equ	0xFEE
 21378                           wreg	equ	0xFE8
 21379                           indf1	equ	0xFE7
 21380                           postinc1	equ	0xFE6
 21381                           postdec1	equ	0xFE5
 21382                           fsr1h	equ	0xFE2
 21383                           fsr1l	equ	0xFE1
 21384                           indf2	equ	0xFDF
 21385                           postinc2	equ	0xFDE
 21386                           postdec2	equ	0xFDD
 21387                           plusw2	equ	0xFDB
 21388                           fsr2h	equ	0xFDA
 21389                           fsr2l	equ	0xFD9
 21390                           status	equ	0xFD8
 21391                           
 21392 ;; *************** function _getsUSBUSART *****************
 21393 ;; Defined at:
 21394 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 21395 ;; Parameters:    Size  Location     Type
 21396 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21397 ;;		 -> readBuffer(64), 
 21398 ;;  len             1    9[BANK0 ] unsigned char 
 21399 ;; Auto vars:     Size  Location     Type
 21400 ;;		None
 21401 ;; Return value:  Size  Location     Type
 21402 ;;                  1    wreg      unsigned char 
 21403 ;; Registers used:
 21404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21405 ;; Tracked objects:
 21406 ;;		On entry : 0/0
 21407 ;;		On exit  : 0/0
 21408 ;;		Unchanged: 0/0
 21409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21410 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21413 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21414 ;;Total ram usage:        6 bytes
 21415 ;; Hardware stack levels used:    1
 21416 ;; Hardware stack levels required when called:   13
 21417 ;; This function calls:
 21418 ;;		_USBTransferOnePacket
 21419 ;; This function is called by:
 21420 ;;		_USB_CDC_get
 21421 ;; This function uses a non-reentrant model
 21422 ;;
 21423                           
 21424                           	psect	text89
 21425  014D8A                     __ptext89:
 21426                           	opt stack 0
 21427  014D8A                     _getsUSBUSART:
 21428                           	opt stack 15
 21429                           
 21430                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 21431                           
 21432                           ; BSR set to: 0
 21433                           ;incstack = 0
 21434  014D8A  0E00               	movlw	0
 21435  014D8C  6E18               	movwf	_cdc_rx_len,c
 21436                           
 21437                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21438  014D8E  5007               	movf	_CDCDataOutHandle,w,c
 21439  014D90  1008               	iorwf	_CDCDataOutHandle+1,w,c
 21440  014D92  B4D8               	btfsc	status,2,c
 21441  014D94  D012               	goto	l11550
 21442  014D96  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21443  014D9A  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21444  014D9E  AEDF               	btfss	indf2,7,c
 21445  014DA0  D004               	goto	u12900
 21446  014DA2  0100               	movlb	0	; () banked
 21447  014DA4  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21448  014DA6  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21449  014DA8  D002               	goto	u12908
 21450  014DAA                     u12900:
 21451  014DAA  0100               	movlb	0	; () banked
 21452  014DAC  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21453  014DAE                     u12908:
 21454  014DAE  0100               	movlb	0	; () banked
 21455  014DB0  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21456  014DB2  0100               	movlb	0	; () banked
 21457  014DB4  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 21458  014DB6  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 21459  014DB8  D005               	goto	l11552
 21460  014DBA                     l11550:
 21461  014DBA  0E00               	movlw	0
 21462  014DBC  0100               	movlb	0	; () banked
 21463  014DBE  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 21464  014DC0  0E00               	movlw	0
 21465  014DC2  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 21466  014DC4                     l11552:
 21467                           
 21468                           ; BSR set to: 0
 21469  014DC4  0100               	movlb	0	; () banked
 21470  014DC6  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 21471  014DC8  0100               	movlb	0	; () banked
 21472  014DCA  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 21473  014DCC  A4D8               	btfss	status,2,c
 21474  014DCE  D044               	goto	l11568
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;usb_device_cdc.c: 547: {
 21478                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21479  014DD0  EE20 F001          	lfsr	2,1
 21480  014DD4  5007               	movf	_CDCDataOutHandle,w,c
 21481  014DD6  26D9               	addwf	fsr2l,f,c
 21482  014DD8  5008               	movf	_CDCDataOutHandle+1,w,c
 21483  014DDA  22DA               	addwfc	fsr2h,f,c
 21484  014DDC  0100               	movlb	0	; () banked
 21485  014DDE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21486  014DE0  5CDE               	subwf	postinc2,w,c
 21487  014DE2  B0D8               	btfsc	status,0,c
 21488  014DE4  D009               	goto	l11558
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21492  014DE6  EE20 F001          	lfsr	2,1
 21493  014DEA  5007               	movf	_CDCDataOutHandle,w,c
 21494  014DEC  26D9               	addwf	fsr2l,f,c
 21495  014DEE  5008               	movf	_CDCDataOutHandle+1,w,c
 21496  014DF0  22DA               	addwfc	fsr2h,f,c
 21497  014DF2  50DF               	movf	indf2,w,c
 21498  014DF4  0100               	movlb	0	; () banked
 21499  014DF6  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21500  014DF8                     l11558:
 21501                           
 21502                           ; BSR set to: 0
 21503                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21504  014DF8  0E00               	movlw	0
 21505  014DFA  6E18               	movwf	_cdc_rx_len,c
 21506  014DFC  D015               	goto	l11564
 21507  014DFE                     l11560:
 21508                           
 21509                           ; BSR set to: 0
 21510                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21511  014DFE  5018               	movf	_cdc_rx_len,w,c
 21512  014E00  0D01               	mullw	1
 21513  014E02  0E00               	movlw	low _cdc_data_rx
 21514  014E04  24F3               	addwf	prodl,w,c
 21515  014E06  6ED9               	movwf	fsr2l,c
 21516  014E08  0E03               	movlw	high _cdc_data_rx
 21517  014E0A  20F4               	addwfc	prodh,w,c
 21518  014E0C  6EDA               	movwf	fsr2h,c
 21519  014E0E  5018               	movf	_cdc_rx_len,w,c
 21520  014E10  0D01               	mullw	1
 21521  014E12  50F3               	movf	prodl,w,c
 21522  014E14  0100               	movlb	0	; () banked
 21523  014E16  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21524  014E18  6EE1               	movwf	fsr1l,c
 21525  014E1A  50F4               	movf	prodh,w,c
 21526  014E1C  0100               	movlb	0	; () banked
 21527  014E1E  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21528  014E20  6EE2               	movwf	fsr1h,c
 21529  014E22  CFDF FFE7          	movff	indf2,indf1
 21530                           
 21531                           ; BSR set to: 0
 21532  014E26  2A18               	incf	_cdc_rx_len,f,c
 21533  014E28                     l11564:
 21534                           
 21535                           ; BSR set to: 0
 21536  014E28  0100               	movlb	0	; () banked
 21537  014E2A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21538  014E2C  5C18               	subwf	_cdc_rx_len,w,c
 21539  014E2E  A0D8               	btfss	status,0,c
 21540  014E30  D7E6               	goto	l11560
 21541                           
 21542                           ; BSR set to: 0
 21543                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21544                           
 21545                           ; BSR set to: 0
 21546  014E32  0E00               	movlw	0
 21547  014E34  0100               	movlb	0	; () banked
 21548  014E36  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21549  014E38  0E00               	movlw	low _cdc_data_rx
 21550  014E3A  0100               	movlb	0	; () banked
 21551  014E3C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21552  014E3E  0E03               	movlw	high _cdc_data_rx
 21553  014E40  0100               	movlb	0	; () banked
 21554  014E42  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21555  014E44  0E40               	movlw	64
 21556  014E46  0100               	movlb	0	; () banked
 21557  014E48  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21558  014E4A  0E02               	movlw	2
 21559  014E4C  EC46  F0A4         	call	_USBTransferOnePacket
 21560  014E50  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21561  014E54  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21562  014E58                     l11568:
 21563                           
 21564                           ;usb_device_cdc.c: 567: }
 21565                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21566  014E58  5018               	movf	_cdc_rx_len,w,c
 21567  014E5A  0012               	return	
 21568  014E5C                     __end_of_getsUSBUSART:
 21569                           	opt stack 0
 21570                           tblptru	equ	0xFF8
 21571                           tblptrh	equ	0xFF7
 21572                           tblptrl	equ	0xFF6
 21573                           tablat	equ	0xFF5
 21574                           prodh	equ	0xFF4
 21575                           prodl	equ	0xFF3
 21576                           intcon	equ	0xFF2
 21577                           intcon2	equ	0xFF1
 21578                           postinc0	equ	0xFEE
 21579                           wreg	equ	0xFE8
 21580                           indf1	equ	0xFE7
 21581                           postinc1	equ	0xFE6
 21582                           postdec1	equ	0xFE5
 21583                           fsr1h	equ	0xFE2
 21584                           fsr1l	equ	0xFE1
 21585                           indf2	equ	0xFDF
 21586                           postinc2	equ	0xFDE
 21587                           postdec2	equ	0xFDD
 21588                           plusw2	equ	0xFDB
 21589                           fsr2h	equ	0xFDA
 21590                           fsr2l	equ	0xFD9
 21591                           status	equ	0xFD8
 21592                           
 21593 ;; *************** function _CDCTxService *****************
 21594 ;; Defined at:
 21595 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 21596 ;; Parameters:    Size  Location     Type
 21597 ;;		None
 21598 ;; Auto vars:     Size  Location     Type
 21599 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21600 ;;  i               1   10[BANK0 ] unsigned char 
 21601 ;; Return value:  Size  Location     Type
 21602 ;;		None               void
 21603 ;; Registers used:
 21604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21605 ;; Tracked objects:
 21606 ;;		On entry : 0/0
 21607 ;;		On exit  : 0/0
 21608 ;;		Unchanged: 0/0
 21609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21611 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21613 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21614 ;;Total ram usage:        5 bytes
 21615 ;; Hardware stack levels used:    1
 21616 ;; Hardware stack levels required when called:   13
 21617 ;; This function calls:
 21618 ;;		_USBTransferOnePacket
 21619 ;; This function is called by:
 21620 ;;		_USB_CDC_send
 21621 ;;		_USB_CDC_get
 21622 ;; This function uses a non-reentrant model
 21623 ;;
 21624                           
 21625                           	psect	text90
 21626  012FB4                     __ptext90:
 21627                           	opt stack 0
 21628  012FB4                     _CDCTxService:
 21629                           	opt stack 15
 21630                           
 21631                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21632                           ;usb_device_cdc.c: 896: uint8_t i;
 21633                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21634                           
 21635                           ;incstack = 0
 21636  012FB4  98A0               	bcf	4000,4,c	;volatile
 21637                           
 21638                           ;usb_device_cdc.c: 900: {};
 21639                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21640  012FB6  0101               	movlb	1	; () banked
 21641  012FB8  510E               	movf	_CDCDataInHandle& (0+255),w,b
 21642  012FBA  0101               	movlb	1	; () banked
 21643  012FBC  110F               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21644  012FBE  B4D8               	btfsc	status,2,c
 21645  012FC0  D013               	goto	l11592
 21646                           
 21647                           ; BSR set to: 1
 21648  012FC2  C10E  FFD9         	movff	_CDCDataInHandle,fsr2l
 21649  012FC6  C10F  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21650  012FCA  0101               	movlb	1	; () banked
 21651  012FCC  AEDF               	btfss	indf2,7,c
 21652  012FCE  D004               	goto	u12960
 21653  012FD0  0100               	movlb	0	; () banked
 21654  012FD2  6B67               	clrf	??_CDCTxService& (0+255),b
 21655  012FD4  2B67               	incf	??_CDCTxService& (0+255),f,b
 21656  012FD6  D002               	goto	u12968
 21657  012FD8                     u12960:
 21658  012FD8  0100               	movlb	0	; () banked
 21659  012FDA  6B67               	clrf	??_CDCTxService& (0+255),b
 21660  012FDC                     u12968:
 21661  012FDC  0100               	movlb	0	; () banked
 21662  012FDE  5167               	movf	??_CDCTxService& (0+255),w,b
 21663  012FE0  0100               	movlb	0	; () banked
 21664  012FE2  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21665  012FE4  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 21666  012FE6  D005               	goto	l11594
 21667  012FE8                     l11592:
 21668  012FE8  0E00               	movlw	0
 21669  012FEA  0100               	movlb	0	; () banked
 21670  012FEC  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 21671  012FEE  0E00               	movlw	0
 21672  012FF0  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21673  012FF2                     l11594:
 21674                           
 21675                           ; BSR set to: 0
 21676  012FF2  0100               	movlb	0	; () banked
 21677  012FF4  5168               	movf	_CDCTxService$2005& (0+255),w,b
 21678  012FF6  0100               	movlb	0	; () banked
 21679  012FF8  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 21680  012FFA  B4D8               	btfsc	status,2,c
 21681  012FFC  D002               	goto	l11598
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;usb_device_cdc.c: 903: {
 21685                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21686  012FFE  88A0               	bsf	4000,4,c	;volatile
 21687                           
 21688                           ;usb_device_cdc.c: 905: return;
 21689  013000  0012               	return	
 21690  013002                     l11598:
 21691                           
 21692                           ; BSR set to: 0
 21693                           ;usb_device_cdc.c: 906: }
 21694                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21695  013002  0E03               	movlw	3
 21696  013004  1819               	xorwf	_cdc_trf_state,w,c
 21697  013006  A4D8               	btfss	status,2,c
 21698  013008  D002               	goto	l504
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21702  01300A  0E00               	movlw	0
 21703  01300C  6E19               	movwf	_cdc_trf_state,c
 21704  01300E                     l504:
 21705                           
 21706                           ; BSR set to: 0
 21707                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21708  01300E  5019               	movf	_cdc_trf_state,w,c
 21709  013010  A4D8               	btfss	status,2,c
 21710  013012  D002               	goto	l11604
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;usb_device_cdc.c: 920: {
 21714                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21715  013014  88A0               	bsf	4000,4,c	;volatile
 21716                           
 21717                           ;usb_device_cdc.c: 922: return;
 21718  013016  0012               	return	
 21719  013018                     l11604:
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;usb_device_cdc.c: 923: }
 21723                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21724  013018  0E02               	movlw	2
 21725  01301A  1819               	xorwf	_cdc_trf_state,w,c
 21726  01301C  A4D8               	btfss	status,2,c
 21727  01301E  D016               	goto	l11610
 21728                           
 21729                           ; BSR set to: 0
 21730                           ;usb_device_cdc.c: 929: {
 21731                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21732  013020  0E01               	movlw	1
 21733  013022  0100               	movlb	0	; () banked
 21734  013024  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21735  013026  0E00               	movlw	0
 21736  013028  0100               	movlb	0	; () banked
 21737  01302A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21738  01302C  0E00               	movlw	0
 21739  01302E  0100               	movlb	0	; () banked
 21740  013030  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21741  013032  0E00               	movlw	0
 21742  013034  0100               	movlb	0	; () banked
 21743  013036  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21744  013038  0E02               	movlw	2
 21745  01303A  EC46  F0A4         	call	_USBTransferOnePacket
 21746  01303E  C060  F10E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21747  013042  C061  F10F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21748                           
 21749                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21750  013046  0E03               	movlw	3
 21751  013048  6E19               	movwf	_cdc_trf_state,c
 21752                           
 21753                           ;usb_device_cdc.c: 933: }
 21754  01304A  D06A               	goto	l11654
 21755  01304C                     l11610:
 21756                           
 21757                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21758  01304C  0419               	decf	_cdc_trf_state,w,c
 21759  01304E  A4D8               	btfss	status,2,c
 21760  013050  D067               	goto	l11654
 21761                           
 21762                           ;usb_device_cdc.c: 935: {
 21763                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21764  013052  0E40               	movlw	64
 21765  013054  641A               	cpfsgt	_cdc_tx_len,c
 21766  013056  D004               	goto	l509
 21767                           
 21768                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21769  013058  0E40               	movlw	64
 21770  01305A  0100               	movlb	0	; () banked
 21771  01305C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21772  01305E  D002               	goto	l11616
 21773  013060                     l509:
 21774                           
 21775                           ;usb_device_cdc.c: 941: else
 21776                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21777  013060  C01A  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21778  013064                     l11616:
 21779                           
 21780                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21781  013064  0100               	movlb	0	; () banked
 21782  013066  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21783  013068  0800               	sublw	0
 21784  01306A  241A               	addwf	_cdc_tx_len,w,c
 21785  01306C  6E1A               	movwf	_cdc_tx_len,c
 21786                           
 21787                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21788  01306E  0E40               	movlw	low _cdc_data_tx
 21789  013070  0101               	movlb	1	; () banked
 21790  013072  6F06               	movwf	_pCDCDst& (0+255),b
 21791  013074  0E03               	movlw	high _cdc_data_tx
 21792  013076  0101               	movlb	1	; () banked
 21793  013078  6F07               	movwf	(_pCDCDst+1)& (0+255),b
 21794                           
 21795                           ; BSR set to: 1
 21796                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21797  01307A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21798                           
 21799                           ; BSR set to: 1
 21800                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21801  01307E  5017               	movf	_cdc_mem_type,w,c
 21802  013080  B4D8               	btfsc	status,2,c
 21803  013082  D013               	goto	l11632
 21804  013084  D02A               	goto	l11642
 21805  013086                     l11624:
 21806                           
 21807                           ;usb_device_cdc.c: 955: {
 21808                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21809  013086  C109  FFD9         	movff	_pCDCSrc,fsr2l
 21810  01308A  C10A  FFDA         	movff	_pCDCSrc+1,fsr2h
 21811  01308E  C106  FFE1         	movff	_pCDCDst,fsr1l
 21812  013092  C107  FFE2         	movff	_pCDCDst+1,fsr1h
 21813  013096  CFDF FFE7          	movff	indf2,indf1
 21814                           
 21815                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21816  01309A  0101               	movlb	1	; () banked
 21817  01309C  4B06               	infsnz	_pCDCDst& (0+255),f,b
 21818  01309E  2B07               	incf	(_pCDCDst+1)& (0+255),f,b
 21819                           
 21820                           ; BSR set to: 1
 21821                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21822  0130A0  0101               	movlb	1	; () banked
 21823  0130A2  4B09               	infsnz	_pCDCSrc& (0+255),f,b
 21824  0130A4  2B0A               	incf	(_pCDCSrc+1)& (0+255),f,b
 21825                           
 21826                           ; BSR set to: 1
 21827                           ;usb_device_cdc.c: 959: i--;
 21828  0130A6  0100               	movlb	0	; () banked
 21829  0130A8  076A               	decf	CDCTxService@i& (0+255),f,b
 21830  0130AA                     l11632:
 21831  0130AA  0100               	movlb	0	; () banked
 21832  0130AC  516A               	movf	CDCTxService@i& (0+255),w,b
 21833  0130AE  0100               	movlb	0	; () banked
 21834  0130B0  B4D8               	btfsc	status,2,c
 21835  0130B2  D018               	goto	l11644
 21836  0130B4  D7E8               	goto	l11624
 21837  0130B6                     l11634:
 21838                           
 21839                           ; BSR set to: 0
 21840                           ;usb_device_cdc.c: 965: {
 21841                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21842  0130B6  C109  FFD9         	movff	_pCDCSrc,fsr2l
 21843  0130BA  C10A  FFDA         	movff	_pCDCSrc+1,fsr2h
 21844  0130BE  C106  FFE1         	movff	_pCDCDst,fsr1l
 21845  0130C2  C107  FFE2         	movff	_pCDCDst+1,fsr1h
 21846  0130C6  CFDF FFE7          	movff	indf2,indf1
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21850  0130CA  0101               	movlb	1	; () banked
 21851  0130CC  4B06               	infsnz	_pCDCDst& (0+255),f,b
 21852  0130CE  2B07               	incf	(_pCDCDst+1)& (0+255),f,b
 21853                           
 21854                           ; BSR set to: 1
 21855                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21856  0130D0  0101               	movlb	1	; () banked
 21857  0130D2  4B09               	infsnz	_pCDCSrc& (0+255),f,b
 21858  0130D4  2B0A               	incf	(_pCDCSrc+1)& (0+255),f,b
 21859                           
 21860                           ; BSR set to: 1
 21861                           ;usb_device_cdc.c: 969: i--;
 21862  0130D6  0100               	movlb	0	; () banked
 21863  0130D8  076A               	decf	CDCTxService@i& (0+255),f,b
 21864  0130DA                     l11642:
 21865  0130DA  0100               	movlb	0	; () banked
 21866  0130DC  516A               	movf	CDCTxService@i& (0+255),w,b
 21867  0130DE  0100               	movlb	0	; () banked
 21868  0130E0  A4D8               	btfss	status,2,c
 21869  0130E2  D7E9               	goto	l11634
 21870  0130E4                     l11644:
 21871                           
 21872                           ; BSR set to: 0
 21873                           ;usb_device_cdc.c: 970: }
 21874                           ;usb_device_cdc.c: 971: }
 21875                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21876  0130E4  501A               	movf	_cdc_tx_len,w,c
 21877  0130E6  A4D8               	btfss	status,2,c
 21878  0130E8  D009               	goto	l11652
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;usb_device_cdc.c: 978: {
 21882                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21883  0130EA  0E40               	movlw	64
 21884  0130EC  0100               	movlb	0	; () banked
 21885  0130EE  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21886  0130F0  A4D8               	btfss	status,2,c
 21887  0130F2  D002               	goto	l11650
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21891  0130F4  0E02               	movlw	2
 21892  0130F6  D001               	goto	L4
 21893  0130F8                     l11650:
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;usb_device_cdc.c: 981: else
 21897                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21898  0130F8  0E03               	movlw	3
 21899  0130FA                     L4:
 21900  0130FA  6E19               	movwf	_cdc_trf_state,c
 21901  0130FC                     l11652:
 21902                           
 21903                           ; BSR set to: 0
 21904                           ;usb_device_cdc.c: 983: }
 21905                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21906  0130FC  0E01               	movlw	1
 21907  0130FE  0100               	movlb	0	; () banked
 21908  013100  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21909  013102  0E40               	movlw	low _cdc_data_tx
 21910  013104  0100               	movlb	0	; () banked
 21911  013106  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21912  013108  0E03               	movlw	high _cdc_data_tx
 21913  01310A  0100               	movlb	0	; () banked
 21914  01310C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21915  01310E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21916  013112  0E02               	movlw	2
 21917  013114  EC46  F0A4         	call	_USBTransferOnePacket
 21918  013118  C060  F10E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21919  01311C  C061  F10F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21920  013120                     l11654:
 21921                           
 21922                           ;usb_device_cdc.c: 986: }
 21923                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21924  013120  88A0               	bsf	4000,4,c	;volatile
 21925  013122  0012               	return		;funcret
 21926  013124                     __end_of_CDCTxService:
 21927                           	opt stack 0
 21928                           tblptru	equ	0xFF8
 21929                           tblptrh	equ	0xFF7
 21930                           tblptrl	equ	0xFF6
 21931                           tablat	equ	0xFF5
 21932                           prodh	equ	0xFF4
 21933                           prodl	equ	0xFF3
 21934                           intcon	equ	0xFF2
 21935                           intcon2	equ	0xFF1
 21936                           postinc0	equ	0xFEE
 21937                           wreg	equ	0xFE8
 21938                           indf1	equ	0xFE7
 21939                           postinc1	equ	0xFE6
 21940                           postdec1	equ	0xFE5
 21941                           fsr1h	equ	0xFE2
 21942                           fsr1l	equ	0xFE1
 21943                           indf2	equ	0xFDF
 21944                           postinc2	equ	0xFDE
 21945                           postdec2	equ	0xFDD
 21946                           plusw2	equ	0xFDB
 21947                           fsr2h	equ	0xFDA
 21948                           fsr2l	equ	0xFD9
 21949                           status	equ	0xFD8
 21950                           
 21951 ;; *************** function _USBTransferOnePacket *****************
 21952 ;; Defined at:
 21953 ;;		line 996 in file "../My_library/usb/usb_device.c"
 21954 ;; Parameters:    Size  Location     Type
 21955 ;;  ep              1    wreg     unsigned char 
 21956 ;;  dir             1    0[BANK0 ] unsigned char 
 21957 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21958 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21959 ;;  len             1    3[BANK0 ] unsigned char 
 21960 ;; Auto vars:     Size  Location     Type
 21961 ;;  ep              1    4[BANK0 ] unsigned char 
 21962 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21963 ;;		 -> NULL(0), BDT(48), 
 21964 ;; Return value:  Size  Location     Type
 21965 ;;                  2    0[BANK0 ] PTR void 
 21966 ;; Registers used:
 21967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21968 ;; Tracked objects:
 21969 ;;		On entry : 0/0
 21970 ;;		On exit  : 0/0
 21971 ;;		Unchanged: 0/0
 21972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21974 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21976 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21977 ;;Total ram usage:        7 bytes
 21978 ;; Hardware stack levels used:    1
 21979 ;; Hardware stack levels required when called:   12
 21980 ;; This function calls:
 21981 ;;		Nothing
 21982 ;; This function is called by:
 21983 ;;		_getsUSBUSART
 21984 ;;		_CDCTxService
 21985 ;;		_USBCDCEventHandler
 21986 ;; This function uses a non-reentrant model
 21987 ;;
 21988                           
 21989                           	psect	text91
 21990  01488C                     __ptext91:
 21991                           	opt stack 0
 21992  01488C                     _USBTransferOnePacket:
 21993                           	opt stack 15
 21994                           
 21995                           ;incstack = 0
 21996                           ;USBTransferOnePacket@ep stored from wreg
 21997  01488C  0100               	movlb	0	; () banked
 21998  01488E  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21999                           
 22000                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 22001                           ;usb_device.c: 1001: if(dir != 0)
 22002  014890  0100               	movlb	0	; () banked
 22003  014892  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22004  014894  0100               	movlb	0	; () banked
 22005  014896  B4D8               	btfsc	status,2,c
 22006  014898  D008               	goto	l11104
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;usb_device.c: 1002: {
 22010                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 22011  01489A  0100               	movlb	0	; () banked
 22012  01489C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22013  01489E  0D02               	mullw	2
 22014  0148A0  0EF5               	movlw	low _pBDTEntryIn
 22015  0148A2  24F3               	addwf	prodl,w,c
 22016  0148A4  6ED9               	movwf	fsr2l,c
 22017  0148A6  0E00               	movlw	high _pBDTEntryIn
 22018  0148A8  D007               	goto	L5
 22019  0148AA                     l11104:
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;usb_device.c: 1006: else
 22023                           ;usb_device.c: 1007: {
 22024                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 22025  0148AA  0100               	movlb	0	; () banked
 22026  0148AC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22027  0148AE  0D02               	mullw	2
 22028  0148B0  0E00               	movlw	low _pBDTEntryOut
 22029  0148B2  24F3               	addwf	prodl,w,c
 22030  0148B4  6ED9               	movwf	fsr2l,c
 22031  0148B6  0E01               	movlw	high _pBDTEntryOut
 22032  0148B8                     L5:
 22033  0148B8  20F4               	addwfc	prodh,w,c
 22034  0148BA  6EDA               	movwf	fsr2h,c
 22035  0148BC  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 22036  0148C0  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;usb_device.c: 1010: }
 22040                           ;usb_device.c: 1014: if(handle == 0)
 22041                           
 22042                           ; BSR set to: 0
 22043  0148C4  0100               	movlb	0	; () banked
 22044  0148C6  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22045  0148C8  0100               	movlb	0	; () banked
 22046  0148CA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22047  0148CC  A4D8               	btfss	status,2,c
 22048  0148CE  D007               	goto	l11112
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;usb_device.c: 1015: {
 22052                           ;usb_device.c: 1016: return 0;
 22053  0148D0  0E00               	movlw	0
 22054  0148D2  0100               	movlb	0	; () banked
 22055  0148D4  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 22056  0148D6  0E00               	movlw	0
 22057  0148D8  0100               	movlb	0	; () banked
 22058  0148DA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 22059                           
 22060                           ; BSR set to: 0
 22061  0148DC  0012               	return	
 22062  0148DE                     l11112:
 22063                           
 22064                           ; BSR set to: 0
 22065                           ;usb_device.c: 1017: }
 22066                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 22067  0148DE  0100               	movlb	0	; () banked
 22068  0148E0  EE20 F002          	lfsr	2,2
 22069  0148E4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22070  0148E6  26D9               	addwf	fsr2l,f,c
 22071  0148E8  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22072  0148EA  22DA               	addwfc	fsr2h,f,c
 22073  0148EC  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 22074  0148F0  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 22075                           
 22076                           ;usb_device.c: 1031: handle->CNT = len;
 22077  0148F4  0100               	movlb	0	; () banked
 22078  0148F6  EE20 F001          	lfsr	2,1
 22079  0148FA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22080  0148FC  26D9               	addwf	fsr2l,f,c
 22081  0148FE  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22082  014900  22DA               	addwfc	fsr2h,f,c
 22083  014902  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 22087  014906  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22088  01490A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22089  01490E  0E40               	movlw	64
 22090  014910  16DF               	andwf	indf2,f,c
 22091                           
 22092                           ; BSR set to: 0
 22093                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 22094  014912  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22095  014916  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22096  01491A  0E00               	movlw	0
 22097  01491C  86DB               	bsf	plusw2,3,c
 22098                           
 22099                           ; BSR set to: 0
 22100                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 22101  01491E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22102  014922  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22103  014926  0E00               	movlw	0
 22104  014928  8EDB               	bsf	plusw2,7,c
 22105                           
 22106                           ; BSR set to: 0
 22107                           ;usb_device.c: 1037: if(dir != 0)
 22108  01492A  0100               	movlb	0	; () banked
 22109  01492C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22110  01492E  0100               	movlb	0	; () banked
 22111  014930  B4D8               	btfsc	status,2,c
 22112  014932  D008               	goto	l11124
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;usb_device.c: 1038: {
 22116                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22117  014934  0100               	movlb	0	; () banked
 22118  014936  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22119  014938  0D02               	mullw	2
 22120  01493A  0EF5               	movlw	low _pBDTEntryIn
 22121  01493C  24F3               	addwf	prodl,w,c
 22122  01493E  6ED9               	movwf	fsr2l,c
 22123  014940  0E00               	movlw	high _pBDTEntryIn
 22124  014942  D007               	goto	L6
 22125  014944                     l11124:
 22126                           
 22127                           ; BSR set to: 0
 22128                           ;usb_device.c: 1042: else
 22129                           ;usb_device.c: 1043: {
 22130                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22131  014944  0100               	movlb	0	; () banked
 22132  014946  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22133  014948  0D02               	mullw	2
 22134  01494A  0E00               	movlw	low _pBDTEntryOut
 22135  01494C  24F3               	addwf	prodl,w,c
 22136  01494E  6ED9               	movwf	fsr2l,c
 22137  014950  0E01               	movlw	high _pBDTEntryOut
 22138  014952                     L6:
 22139  014952  20F4               	addwfc	prodh,w,c
 22140  014954  6EDA               	movwf	fsr2h,c
 22141  014956  0E04               	movlw	4
 22142  014958  1ADF               	xorwf	indf2,f,c
 22143                           
 22144                           ; BSR set to: 0
 22145                           ;usb_device.c: 1046: }
 22146                           ;usb_device.c: 1047: return (void*)handle;
 22147                           
 22148                           ; BSR set to: 0
 22149  01495A  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22150  01495E  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22151  014962  0012               	return	
 22152  014964                     __end_of_USBTransferOnePacket:
 22153                           	opt stack 0
 22154                           tblptru	equ	0xFF8
 22155                           tblptrh	equ	0xFF7
 22156                           tblptrl	equ	0xFF6
 22157                           tablat	equ	0xFF5
 22158                           prodh	equ	0xFF4
 22159                           prodl	equ	0xFF3
 22160                           intcon	equ	0xFF2
 22161                           intcon2	equ	0xFF1
 22162                           postinc0	equ	0xFEE
 22163                           wreg	equ	0xFE8
 22164                           indf1	equ	0xFE7
 22165                           postinc1	equ	0xFE6
 22166                           postdec1	equ	0xFE5
 22167                           fsr1h	equ	0xFE2
 22168                           fsr1l	equ	0xFE1
 22169                           indf2	equ	0xFDF
 22170                           postinc2	equ	0xFDE
 22171                           postdec2	equ	0xFDD
 22172                           plusw2	equ	0xFDB
 22173                           fsr2h	equ	0xFDA
 22174                           fsr2l	equ	0xFD9
 22175                           status	equ	0xFD8
 22176                           
 22177 ;; *************** function _RTCC_task *****************
 22178 ;; Defined at:
 22179 ;;		line 352 in file "../My_library/My_RTCC.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;		None
 22182 ;; Auto vars:     Size  Location     Type
 22183 ;;		None
 22184 ;; Return value:  Size  Location     Type
 22185 ;;		None               void
 22186 ;; Registers used:
 22187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22188 ;; Tracked objects:
 22189 ;;		On entry : 0/0
 22190 ;;		On exit  : 0/0
 22191 ;;		Unchanged: 0/0
 22192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22197 ;;Total ram usage:        0 bytes
 22198 ;; Hardware stack levels used:    1
 22199 ;; Hardware stack levels required when called:   16
 22200 ;; This function calls:
 22201 ;;		_RTCC_from_RTCC
 22202 ;; This function is called by:
 22203 ;;		_main
 22204 ;; This function uses a non-reentrant model
 22205 ;;
 22206                           
 22207                           	psect	text92
 22208  016800                     __ptext92:
 22209                           	opt stack 0
 22210  016800                     _RTCC_task:
 22211                           	opt stack 14
 22212                           
 22213                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 22214                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 22215                           
 22216                           ; BSR set to: 0
 22217                           ;incstack = 0
 22218  016800  010F               	movlb	15	; () banked
 22219  016802  B93F               	btfsc	63,4,b	;volatile
 22220  016804  0012               	return	
 22221                           
 22222                           ; BSR set to: 15
 22223                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 22224                           
 22225                           ; BSR set to: 15
 22226                           
 22227                           ; BSR set to: 15
 22228  016806  0E00               	movlw	0
 22229  016808  B73F               	btfsc	63,3,b	;volatile
 22230  01680A  0E01               	movlw	1
 22231  01680C  0101               	movlb	1	; () banked
 22232  01680E  6F7F               	movwf	(_now+12)& (0+255),b
 22233                           
 22234                           ; BSR set to: 1
 22235                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 22236  016810  0101               	movlb	1	; () banked
 22237  016812  5118               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22238  016814  0101               	movlb	1	; () banked
 22239  016816  197F               	xorwf	(_now+12)& (0+255),w,b
 22240  016818  B4D8               	btfsc	status,2,c
 22241  01681A  0012               	return	
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 22245  01681C  C17F  F118         	movff	_now+12,RTCC_task@prev_halfsec
 22246                           
 22247                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 22248  016820  C17F  F17E         	movff	_now+12,_now+11
 22249                           
 22250                           ; BSR set to: 1
 22251                           ;My_RTCC.c: 359: time_change_flag = 1;
 22252  016824  0E01               	movlw	1
 22253  016826  6E22               	movwf	_time_change_flag,c
 22254                           
 22255                           ; BSR set to: 1
 22256                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 22257  016828  0E73               	movlw	low _now
 22258  01682A  0100               	movlb	0	; () banked
 22259  01682C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22260  01682E  0E01               	movlw	high _now
 22261  016830  0100               	movlb	0	; () banked
 22262  016832  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22263  016834  EC65  F0B6         	call	_RTCC_from_RTCC	;wreg free
 22264  016838  0012               	return	
 22265  01683A                     __end_of_RTCC_task:
 22266                           	opt stack 0
 22267                           tblptru	equ	0xFF8
 22268                           tblptrh	equ	0xFF7
 22269                           tblptrl	equ	0xFF6
 22270                           tablat	equ	0xFF5
 22271                           prodh	equ	0xFF4
 22272                           prodl	equ	0xFF3
 22273                           intcon	equ	0xFF2
 22274                           intcon2	equ	0xFF1
 22275                           postinc0	equ	0xFEE
 22276                           wreg	equ	0xFE8
 22277                           indf1	equ	0xFE7
 22278                           postinc1	equ	0xFE6
 22279                           postdec1	equ	0xFE5
 22280                           fsr1h	equ	0xFE2
 22281                           fsr1l	equ	0xFE1
 22282                           indf2	equ	0xFDF
 22283                           postinc2	equ	0xFDE
 22284                           postdec2	equ	0xFDD
 22285                           plusw2	equ	0xFDB
 22286                           fsr2h	equ	0xFDA
 22287                           fsr2l	equ	0xFD9
 22288                           status	equ	0xFD8
 22289                           
 22290 ;; *************** function _RTCC_from_RTCC *****************
 22291 ;; Defined at:
 22292 ;;		line 199 in file "../My_library/My_RTCC.c"
 22293 ;; Parameters:    Size  Location     Type
 22294 ;;  tm              2   38[BANK0 ] PTR struct .
 22295 ;;		 -> now(14), 
 22296 ;; Auto vars:     Size  Location     Type
 22297 ;;		None
 22298 ;; Return value:  Size  Location     Type
 22299 ;;		None               void
 22300 ;; Registers used:
 22301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22302 ;; Tracked objects:
 22303 ;;		On entry : 0/0
 22304 ;;		On exit  : 0/0
 22305 ;;		Unchanged: 0/0
 22306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22311 ;;Total ram usage:        2 bytes
 22312 ;; Hardware stack levels used:    1
 22313 ;; Hardware stack levels required when called:   15
 22314 ;; This function calls:
 22315 ;;		_RTCC_to_caltime
 22316 ;;		_caltime_to_epoch
 22317 ;; This function is called by:
 22318 ;;		_RTCC_init
 22319 ;;		_display_time_1602
 22320 ;;		_RTCC_adjust_time_inc
 22321 ;;		_RTCC_adjust_time_dec
 22322 ;;		_RTCC_task
 22323 ;;		_print_time
 22324 ;;		_display_time_0802
 22325 ;; This function uses a non-reentrant model
 22326 ;;
 22327                           
 22328                           	psect	text93
 22329  016CCA                     __ptext93:
 22330                           	opt stack 0
 22331  016CCA                     _RTCC_from_RTCC:
 22332                           	opt stack 10
 22333                           
 22334                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 22335                           
 22336                           ;incstack = 0
 22337  016CCA  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22338  016CCE  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22339  016CD2  ECA4  F0AA         	call	_RTCC_to_caltime	;wreg free
 22340                           
 22341                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 22342  016CD6  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22343  016CDA  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22344  016CDE  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22345  016CE2  0012               	return		;funcret
 22346  016CE4                     __end_of_RTCC_from_RTCC:
 22347                           	opt stack 0
 22348                           tblptru	equ	0xFF8
 22349                           tblptrh	equ	0xFF7
 22350                           tblptrl	equ	0xFF6
 22351                           tablat	equ	0xFF5
 22352                           prodh	equ	0xFF4
 22353                           prodl	equ	0xFF3
 22354                           intcon	equ	0xFF2
 22355                           intcon2	equ	0xFF1
 22356                           postinc0	equ	0xFEE
 22357                           wreg	equ	0xFE8
 22358                           indf1	equ	0xFE7
 22359                           postinc1	equ	0xFE6
 22360                           postdec1	equ	0xFE5
 22361                           fsr1h	equ	0xFE2
 22362                           fsr1l	equ	0xFE1
 22363                           indf2	equ	0xFDF
 22364                           postinc2	equ	0xFDE
 22365                           postdec2	equ	0xFDD
 22366                           plusw2	equ	0xFDB
 22367                           fsr2h	equ	0xFDA
 22368                           fsr2l	equ	0xFD9
 22369                           status	equ	0xFD8
 22370                           
 22371 ;; *************** function _caltime_to_epoch *****************
 22372 ;; Defined at:
 22373 ;;		line 179 in file "../My_library/My_RTCC.c"
 22374 ;; Parameters:    Size  Location     Type
 22375 ;;  tm              2   25[BANK0 ] PTR struct .
 22376 ;;		 -> now(14), 
 22377 ;; Auto vars:     Size  Location     Type
 22378 ;;  month           1   37[BANK0 ] unsigned char 
 22379 ;;  month           1   32[BANK0 ] unsigned char 
 22380 ;;  year            1   31[BANK0 ] unsigned char 
 22381 ;;  epoch           4   33[BANK0 ] unsigned long 
 22382 ;; Return value:  Size  Location     Type
 22383 ;;		None               void
 22384 ;; Registers used:
 22385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22386 ;; Tracked objects:
 22387 ;;		On entry : 0/0
 22388 ;;		On exit  : 0/0
 22389 ;;		Unchanged: 0/0
 22390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22392 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22394 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22395 ;;Total ram usage:       13 bytes
 22396 ;; Hardware stack levels used:    1
 22397 ;; Hardware stack levels required when called:   14
 22398 ;; This function calls:
 22399 ;;		___lmul
 22400 ;;		_month_length
 22401 ;; This function is called by:
 22402 ;;		_RTCC_from_RTCC
 22403 ;;		_RTCC_from_caltime
 22404 ;; This function uses a non-reentrant model
 22405 ;;
 22406                           
 22407                           	psect	text94
 22408  011BB6                     __ptext94:
 22409                           	opt stack 0
 22410  011BB6                     _caltime_to_epoch:
 22411                           	opt stack 10
 22412                           
 22413                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 22414                           
 22415                           ;incstack = 0
 22416  011BB6  0E00               	movlw	0
 22417  011BB8  0100               	movlb	0	; () banked
 22418  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22419  011BBC  0E00               	movlw	0
 22420  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22421  011BC0  0E00               	movlw	0
 22422  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22423  011BC4  0E00               	movlw	0
 22424  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22425                           
 22426                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 22427  011BC8  0E00               	movlw	0
 22428  011BCA  0100               	movlb	0	; () banked
 22429  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22430  011BCE  D037               	goto	l10738
 22431  011BD0                     l10724:
 22432                           
 22433                           ; BSR set to: 0
 22434                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 22435  011BD0  0E01               	movlw	1
 22436  011BD2  0100               	movlb	0	; () banked
 22437  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22438  011BD6                     l10726:
 22439                           
 22440                           ; BSR set to: 0
 22441  011BD6  0E0C               	movlw	12
 22442  011BD8  0100               	movlb	0	; () banked
 22443  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22444  011BDC  D001               	goto	l10730
 22445  011BDE  D02D               	goto	l10736
 22446  011BE0                     l10730:
 22447                           
 22448                           ; BSR set to: 0
 22449                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22450  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22451  011BE4  0100               	movlb	0	; () banked
 22452  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22453  011BE8  ECD7  F0A3         	call	_month_length
 22454  011BEC  0100               	movlb	0	; () banked
 22455  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22456  011BF0  0100               	movlb	0	; () banked
 22457  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22458  011BF4  0100               	movlb	0	; () banked
 22459  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22460  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22461  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22462  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22463  011BFE  0E80               	movlw	128
 22464  011C00  0100               	movlb	0	; () banked
 22465  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22466  011C04  0E51               	movlw	81
 22467  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22468  011C08  0E01               	movlw	1
 22469  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22470  011C0C  0E00               	movlw	0
 22471  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22472  011C10  EC62  F0AF         	call	___lmul	;wreg free
 22473  011C14  0100               	movlb	0	; () banked
 22474  011C16  516D               	movf	?___lmul& (0+255),w,b
 22475  011C18  0100               	movlb	0	; () banked
 22476  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22477  011C1C  0100               	movlb	0	; () banked
 22478  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 22479  011C20  0100               	movlb	0	; () banked
 22480  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22481  011C24  0100               	movlb	0	; () banked
 22482  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 22483  011C28  0100               	movlb	0	; () banked
 22484  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22485  011C2C  0100               	movlb	0	; () banked
 22486  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 22487  011C30  0100               	movlb	0	; () banked
 22488  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22489                           
 22490                           ; BSR set to: 0
 22491  011C34  0100               	movlb	0	; () banked
 22492  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22493  011C38  D7CE               	goto	l10726
 22494  011C3A                     l10736:
 22495                           
 22496                           ; BSR set to: 0
 22497  011C3A  0100               	movlb	0	; () banked
 22498  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22499  011C3E                     l10738:
 22500                           
 22501                           ; BSR set to: 0
 22502  011C3E  0100               	movlb	0	; () banked
 22503  011C40  EE20 F00A          	lfsr	2,10
 22504  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22505  011C46  26D9               	addwf	fsr2l,f,c
 22506  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22507  011C4A  22DA               	addwfc	fsr2h,f,c
 22508  011C4C  50DE               	movf	postinc2,w,c
 22509  011C4E  0100               	movlb	0	; () banked
 22510  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22511  011C52  A0D8               	btfss	status,0,c
 22512  011C54  D7BD               	goto	l10724
 22513                           
 22514                           ; BSR set to: 0
 22515                           ;My_RTCC.c: 184: }
 22516                           ;My_RTCC.c: 185: }
 22517                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 22518                           
 22519                           ; BSR set to: 0
 22520  011C56  0E01               	movlw	1
 22521  011C58  0100               	movlb	0	; () banked
 22522  011C5A  6F80               	movwf	caltime_to_epoch@month_3637& (0+255),b
 22523  011C5C  D032               	goto	l10746
 22524  011C5E                     l10742:
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22528  011C5E  C080  F066         	movff	caltime_to_epoch@month_3637,month_length@month
 22529  011C62  0100               	movlb	0	; () banked
 22530  011C64  EE20 F00A          	lfsr	2,10
 22531  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22532  011C6A  26D9               	addwf	fsr2l,f,c
 22533  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22534  011C6E  22DA               	addwfc	fsr2h,f,c
 22535  011C70  50DF               	movf	indf2,w,c
 22536  011C72  ECD7  F0A3         	call	_month_length
 22537  011C76  0100               	movlb	0	; () banked
 22538  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22539  011C7A  0100               	movlb	0	; () banked
 22540  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22541  011C7E  0100               	movlb	0	; () banked
 22542  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22543  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22544  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22545  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22546  011C88  0E80               	movlw	128
 22547  011C8A  0100               	movlb	0	; () banked
 22548  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22549  011C8E  0E51               	movlw	81
 22550  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22551  011C92  0E01               	movlw	1
 22552  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22553  011C96  0E00               	movlw	0
 22554  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22555  011C9A  EC62  F0AF         	call	___lmul	;wreg free
 22556  011C9E  0100               	movlb	0	; () banked
 22557  011CA0  516D               	movf	?___lmul& (0+255),w,b
 22558  011CA2  0100               	movlb	0	; () banked
 22559  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22560  011CA6  0100               	movlb	0	; () banked
 22561  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 22562  011CAA  0100               	movlb	0	; () banked
 22563  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22564  011CAE  0100               	movlb	0	; () banked
 22565  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22566  011CB2  0100               	movlb	0	; () banked
 22567  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22568  011CB6  0100               	movlb	0	; () banked
 22569  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22570  011CBA  0100               	movlb	0	; () banked
 22571  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22572                           
 22573                           ; BSR set to: 0
 22574  011CBE  0100               	movlb	0	; () banked
 22575  011CC0  2B80               	incf	caltime_to_epoch@month_3637& (0+255),f,b
 22576  011CC2                     l10746:
 22577                           
 22578                           ; BSR set to: 0
 22579  011CC2  0100               	movlb	0	; () banked
 22580  011CC4  EE20 F009          	lfsr	2,9
 22581  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22582  011CCA  26D9               	addwf	fsr2l,f,c
 22583  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22584  011CCE  22DA               	addwfc	fsr2h,f,c
 22585  011CD0  50DE               	movf	postinc2,w,c
 22586  011CD2  0100               	movlb	0	; () banked
 22587  011CD4  5D80               	subwf	caltime_to_epoch@month_3637& (0+255),w,b
 22588  011CD6  A0D8               	btfss	status,0,c
 22589  011CD8  D7C2               	goto	l10742
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;My_RTCC.c: 188: }
 22593                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22594                           
 22595                           ; BSR set to: 0
 22596  011CDA  0EFF               	movlw	255
 22597  011CDC  0100               	movlb	0	; () banked
 22598  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22599  011CE0  0EFF               	movlw	255
 22600  011CE2  0100               	movlb	0	; () banked
 22601  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22602  011CE6  0100               	movlb	0	; () banked
 22603  011CE8  EE20 F008          	lfsr	2,8
 22604  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22605  011CEE  26D9               	addwf	fsr2l,f,c
 22606  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22607  011CF2  22DA               	addwfc	fsr2h,f,c
 22608  011CF4  50DF               	movf	indf2,w,c
 22609  011CF6  0100               	movlb	0	; () banked
 22610  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22611  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22612  011CFC  0100               	movlb	0	; () banked
 22613  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22614  011D00  0100               	movlb	0	; () banked
 22615  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22616  011D04  0100               	movlb	0	; () banked
 22617  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22618  011D08  0100               	movlb	0	; () banked
 22619  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22620  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22621  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22622  011D14  0100               	movlb	0	; () banked
 22623  011D16  0E00               	movlw	0
 22624  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22625  011D1A  0EFF               	movlw	-1
 22626  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22627  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22628  011D20  0E80               	movlw	128
 22629  011D22  0100               	movlb	0	; () banked
 22630  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22631  011D26  0E51               	movlw	81
 22632  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22633  011D2A  0E01               	movlw	1
 22634  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22635  011D2E  0E00               	movlw	0
 22636  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22637  011D32  EC62  F0AF         	call	___lmul	;wreg free
 22638  011D36  0100               	movlb	0	; () banked
 22639  011D38  516D               	movf	?___lmul& (0+255),w,b
 22640  011D3A  0100               	movlb	0	; () banked
 22641  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22642  011D3E  0100               	movlb	0	; () banked
 22643  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 22644  011D42  0100               	movlb	0	; () banked
 22645  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22646  011D46  0100               	movlb	0	; () banked
 22647  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 22648  011D4A  0100               	movlb	0	; () banked
 22649  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22650  011D4E  0100               	movlb	0	; () banked
 22651  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 22652  011D52  0100               	movlb	0	; () banked
 22653  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22654                           
 22655                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 22656  011D56  0100               	movlb	0	; () banked
 22657  011D58  EE20 F006          	lfsr	2,6
 22658  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22659  011D5E  26D9               	addwf	fsr2l,f,c
 22660  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22661  011D62  22DA               	addwfc	fsr2h,f,c
 22662  011D64  50DF               	movf	indf2,w,c
 22663  011D66  0100               	movlb	0	; () banked
 22664  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22665  011D6A  0100               	movlb	0	; () banked
 22666  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22667  011D6E  0100               	movlb	0	; () banked
 22668  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22669  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22670  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22671  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22672  011D78  0E10               	movlw	16
 22673  011D7A  0100               	movlb	0	; () banked
 22674  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22675  011D7E  0E0E               	movlw	14
 22676  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22677  011D82  0E00               	movlw	0
 22678  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22679  011D86  0E00               	movlw	0
 22680  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22681  011D8A  EC62  F0AF         	call	___lmul	;wreg free
 22682  011D8E  0100               	movlb	0	; () banked
 22683  011D90  516D               	movf	?___lmul& (0+255),w,b
 22684  011D92  0100               	movlb	0	; () banked
 22685  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22686  011D96  0100               	movlb	0	; () banked
 22687  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 22688  011D9A  0100               	movlb	0	; () banked
 22689  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22690  011D9E  0100               	movlb	0	; () banked
 22691  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22692  011DA2  0100               	movlb	0	; () banked
 22693  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22694  011DA6  0100               	movlb	0	; () banked
 22695  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22696  011DAA  0100               	movlb	0	; () banked
 22697  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22698                           
 22699                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 22700  011DAE  0100               	movlb	0	; () banked
 22701  011DB0  EE20 F005          	lfsr	2,5
 22702  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22703  011DB6  26D9               	addwf	fsr2l,f,c
 22704  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22705  011DBA  22DA               	addwfc	fsr2h,f,c
 22706  011DBC  50DF               	movf	indf2,w,c
 22707  011DBE  0100               	movlb	0	; () banked
 22708  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22709  011DC2  0100               	movlb	0	; () banked
 22710  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22711  011DC6  0100               	movlb	0	; () banked
 22712  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22713  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22714  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22715  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22716  011DD0  0E3C               	movlw	60
 22717  011DD2  0100               	movlb	0	; () banked
 22718  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22719  011DD6  0E00               	movlw	0
 22720  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22721  011DDA  0E00               	movlw	0
 22722  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22723  011DDE  0E00               	movlw	0
 22724  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22725  011DE2  EC62  F0AF         	call	___lmul	;wreg free
 22726  011DE6  0100               	movlb	0	; () banked
 22727  011DE8  516D               	movf	?___lmul& (0+255),w,b
 22728  011DEA  0100               	movlb	0	; () banked
 22729  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22730  011DEE  0100               	movlb	0	; () banked
 22731  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 22732  011DF2  0100               	movlb	0	; () banked
 22733  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22734  011DF6  0100               	movlb	0	; () banked
 22735  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 22736  011DFA  0100               	movlb	0	; () banked
 22737  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22738  011DFE  0100               	movlb	0	; () banked
 22739  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 22740  011E02  0100               	movlb	0	; () banked
 22741  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22742                           
 22743                           ; BSR set to: 0
 22744                           ;My_RTCC.c: 192: epoch += tm->ss;
 22745  011E06  0100               	movlb	0	; () banked
 22746  011E08  EE20 F004          	lfsr	2,4
 22747  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22748  011E0E  26D9               	addwf	fsr2l,f,c
 22749  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22750  011E12  22DA               	addwfc	fsr2h,f,c
 22751  011E14  50DF               	movf	indf2,w,c
 22752  011E16  0100               	movlb	0	; () banked
 22753  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22754  011E1A  0100               	movlb	0	; () banked
 22755  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22756  011E1E  0100               	movlb	0	; () banked
 22757  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22758  011E22  0E00               	movlw	0
 22759  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22760  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22761  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22762                           
 22763                           ; BSR set to: 0
 22764                           ;My_RTCC.c: 194: tm->epoch = epoch;
 22765  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 22766  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 22767  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 22768  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 22769  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 22770  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 22771                           
 22772                           ; BSR set to: 0
 22773  011E42  0012               	return		;funcret
 22774  011E44                     __end_of_caltime_to_epoch:
 22775                           	opt stack 0
 22776                           tblptru	equ	0xFF8
 22777                           tblptrh	equ	0xFF7
 22778                           tblptrl	equ	0xFF6
 22779                           tablat	equ	0xFF5
 22780                           prodh	equ	0xFF4
 22781                           prodl	equ	0xFF3
 22782                           intcon	equ	0xFF2
 22783                           intcon2	equ	0xFF1
 22784                           postinc0	equ	0xFEE
 22785                           wreg	equ	0xFE8
 22786                           indf1	equ	0xFE7
 22787                           postinc1	equ	0xFE6
 22788                           postdec1	equ	0xFE5
 22789                           fsr1h	equ	0xFE2
 22790                           fsr1l	equ	0xFE1
 22791                           indf2	equ	0xFDF
 22792                           postinc2	equ	0xFDE
 22793                           postdec2	equ	0xFDD
 22794                           plusw2	equ	0xFDB
 22795                           fsr2h	equ	0xFDA
 22796                           fsr2l	equ	0xFD9
 22797                           status	equ	0xFD8
 22798                           
 22799 ;; *************** function _month_length *****************
 22800 ;; Defined at:
 22801 ;;		line 55 in file "../My_library/My_RTCC.c"
 22802 ;; Parameters:    Size  Location     Type
 22803 ;;  year            1    wreg     unsigned char 
 22804 ;;  month           1    6[BANK0 ] unsigned char 
 22805 ;; Auto vars:     Size  Location     Type
 22806 ;;  year            1   11[BANK0 ] unsigned char 
 22807 ;; Return value:  Size  Location     Type
 22808 ;;                  1    wreg      unsigned char 
 22809 ;; Registers used:
 22810 ;;		wreg, status,2, status,0, cstack
 22811 ;; Tracked objects:
 22812 ;;		On entry : 0/0
 22813 ;;		On exit  : 0/0
 22814 ;;		Unchanged: 0/0
 22815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22816 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22820 ;;Total ram usage:        6 bytes
 22821 ;; Hardware stack levels used:    1
 22822 ;; Hardware stack levels required when called:   13
 22823 ;; This function calls:
 22824 ;;		___awmod
 22825 ;; This function is called by:
 22826 ;;		_epoch_to_caltime
 22827 ;;		_caltime_to_epoch
 22828 ;;		_RTCC_adjust_time_inc
 22829 ;;		_RTCC_adjust_time_dec
 22830 ;;		_terminal_time
 22831 ;; This function uses a non-reentrant model
 22832 ;;
 22833                           
 22834                           	psect	text95
 22835  0147AE                     __ptext95:
 22836                           	opt stack 0
 22837  0147AE                     _month_length:
 22838                           	opt stack 10
 22839                           
 22840                           ; BSR set to: 0
 22841                           ;incstack = 0
 22842                           ;month_length@year stored from wreg
 22843  0147AE  0100               	movlb	0	; () banked
 22844  0147B0  6F6B               	movwf	month_length@year& (0+255),b
 22845                           
 22846                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 22847  0147B2  0E02               	movlw	2
 22848  0147B4  0100               	movlb	0	; () banked
 22849  0147B6  1966               	xorwf	month_length@month& (0+255),w,b
 22850  0147B8  A4D8               	btfss	status,2,c
 22851  0147BA  D03E               	goto	l10612
 22852                           
 22853                           ; BSR set to: 0
 22854  0147BC  C06B  F060         	movff	month_length@year,___awmod@dividend
 22855  0147C0  0100               	movlb	0	; () banked
 22856  0147C2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22857  0147C4  0E00               	movlw	0
 22858  0147C6  0100               	movlb	0	; () banked
 22859  0147C8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22860  0147CA  0E64               	movlw	100
 22861  0147CC  6F62               	movwf	___awmod@divisor& (0+255),b
 22862  0147CE  ECBC  F0AB         	call	___awmod	;wreg free
 22863  0147D2  0100               	movlb	0	; () banked
 22864  0147D4  5160               	movf	?___awmod& (0+255),w,b
 22865  0147D6  0100               	movlb	0	; () banked
 22866  0147D8  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22867  0147DA  A4D8               	btfss	status,2,c
 22868  0147DC  D002               	goto	u11400
 22869  0147DE  0E01               	movlw	1
 22870  0147E0  D001               	goto	u11410
 22871  0147E2                     u11400:
 22872  0147E2  0E00               	movlw	0
 22873  0147E4                     u11410:
 22874  0147E4  0800               	sublw	0
 22875  0147E6  0100               	movlb	0	; () banked
 22876  0147E8  6F67               	movwf	??_month_length& (0+255),b
 22877  0147EA  C06B  F060         	movff	month_length@year,___awmod@dividend
 22878  0147EE  0100               	movlb	0	; () banked
 22879  0147F0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22880  0147F2  0E01               	movlw	1
 22881  0147F4  0100               	movlb	0	; () banked
 22882  0147F6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22883  0147F8  0E90               	movlw	144
 22884  0147FA  6F62               	movwf	___awmod@divisor& (0+255),b
 22885  0147FC  ECBC  F0AB         	call	___awmod	;wreg free
 22886  014800  0100               	movlb	0	; () banked
 22887  014802  5160               	movf	?___awmod& (0+255),w,b
 22888  014804  0100               	movlb	0	; () banked
 22889  014806  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22890  014808  A4D8               	btfss	status,2,c
 22891  01480A  D004               	goto	u11420
 22892  01480C  0100               	movlb	0	; () banked
 22893  01480E  6B68               	clrf	(??_month_length+1)& (0+255),b
 22894  014810  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22895  014812  D002               	goto	u11438
 22896  014814                     u11420:
 22897  014814  0100               	movlb	0	; () banked
 22898  014816  6B68               	clrf	(??_month_length+1)& (0+255),b
 22899  014818                     u11438:
 22900  014818  C06B  F069         	movff	month_length@year,??_month_length+2
 22901  01481C  0E03               	movlw	3
 22902  01481E  0100               	movlb	0	; () banked
 22903  014820  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22904  014822  A4D8               	btfss	status,2,c
 22905  014824  D002               	goto	u11440
 22906  014826  0E01               	movlw	1
 22907  014828  D001               	goto	u11450
 22908  01482A                     u11440:
 22909  01482A  0E00               	movlw	0
 22910  01482C                     u11450:
 22911  01482C  0100               	movlb	0	; () banked
 22912  01482E  2568               	addwf	(??_month_length+1)& (0+255),w,b
 22913  014830  0100               	movlb	0	; () banked
 22914  014832  2567               	addwf	??_month_length& (0+255),w,b
 22915  014834  0F1C               	addlw	28
 22916                           
 22917                           ; BSR set to: 0
 22918                           
 22919                           ; BSR set to: 0
 22920  014836  0012               	return	
 22921  014838                     l10612:
 22922                           
 22923                           ; BSR set to: 0
 22924                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 22925  014838  0100               	movlb	0	; () banked
 22926  01483A  5166               	movf	month_length@month& (0+255),w,b
 22927  01483C  0B01               	andlw	1
 22928  01483E  0100               	movlb	0	; () banked
 22929  014840  6F67               	movwf	??_month_length& (0+255),b
 22930  014842  6B68               	clrf	(??_month_length+1)& (0+255),b
 22931  014844  0100               	movlb	0	; () banked
 22932  014846  1F67               	comf	??_month_length& (0+255),f,b
 22933  014848  1F68               	comf	(??_month_length+1)& (0+255),f,b
 22934  01484A  4B67               	infsnz	??_month_length& (0+255),f,b
 22935  01484C  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22936  01484E  0100               	movlb	0	; () banked
 22937  014850  5166               	movf	month_length@month& (0+255),w,b
 22938  014852  0100               	movlb	0	; () banked
 22939  014854  6F69               	movwf	(??_month_length+2)& (0+255),b
 22940  014856  6B6A               	clrf	(??_month_length+3)& (0+255),b
 22941  014858  0100               	movlb	0	; () banked
 22942  01485A  5167               	movf	??_month_length& (0+255),w,b
 22943  01485C  0100               	movlb	0	; () banked
 22944  01485E  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 22945  014860  0100               	movlb	0	; () banked
 22946  014862  5168               	movf	(??_month_length+1)& (0+255),w,b
 22947  014864  0100               	movlb	0	; () banked
 22948  014866  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 22949  014868  0E0D               	movlw	13
 22950  01486A  0100               	movlb	0	; () banked
 22951  01486C  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22952  01486E  0E00               	movlw	0
 22953  014870  176A               	andwf	(??_month_length+3)& (0+255),f,b
 22954  014872  0E04               	movlw	4
 22955  014874  0100               	movlb	0	; () banked
 22956  014876  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 22957  014878  0100               	movlb	0	; () banked
 22958  01487A  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 22959  01487C  A4D8               	btfss	status,2,c
 22960  01487E  D002               	goto	u11460
 22961  014880  0E01               	movlw	1
 22962  014882  D001               	goto	u11470
 22963  014884                     u11460:
 22964  014884  0E00               	movlw	0
 22965  014886                     u11470:
 22966  014886  0800               	sublw	0
 22967  014888  0F1F               	addlw	31
 22968                           
 22969                           ; BSR set to: 0
 22970  01488A  0012               	return	
 22971  01488C                     __end_of_month_length:
 22972                           	opt stack 0
 22973                           tblptru	equ	0xFF8
 22974                           tblptrh	equ	0xFF7
 22975                           tblptrl	equ	0xFF6
 22976                           tablat	equ	0xFF5
 22977                           prodh	equ	0xFF4
 22978                           prodl	equ	0xFF3
 22979                           intcon	equ	0xFF2
 22980                           intcon2	equ	0xFF1
 22981                           postinc0	equ	0xFEE
 22982                           wreg	equ	0xFE8
 22983                           indf1	equ	0xFE7
 22984                           postinc1	equ	0xFE6
 22985                           postdec1	equ	0xFE5
 22986                           fsr1h	equ	0xFE2
 22987                           fsr1l	equ	0xFE1
 22988                           indf2	equ	0xFDF
 22989                           postinc2	equ	0xFDE
 22990                           postdec2	equ	0xFDD
 22991                           plusw2	equ	0xFDB
 22992                           fsr2h	equ	0xFDA
 22993                           fsr2l	equ	0xFD9
 22994                           status	equ	0xFD8
 22995                           
 22996 ;; *************** function ___awmod *****************
 22997 ;; Defined at:
 22998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 22999 ;; Parameters:    Size  Location     Type
 23000 ;;  dividend        2    0[BANK0 ] int 
 23001 ;;  divisor         2    2[BANK0 ] int 
 23002 ;; Auto vars:     Size  Location     Type
 23003 ;;  sign            1    5[BANK0 ] unsigned char 
 23004 ;;  counter         1    4[BANK0 ] unsigned char 
 23005 ;; Return value:  Size  Location     Type
 23006 ;;                  2    0[BANK0 ] int 
 23007 ;; Registers used:
 23008 ;;		wreg, status,2, status,0
 23009 ;; Tracked objects:
 23010 ;;		On entry : 0/0
 23011 ;;		On exit  : 0/0
 23012 ;;		Unchanged: 0/0
 23013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23017 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23018 ;;Total ram usage:        6 bytes
 23019 ;; Hardware stack levels used:    1
 23020 ;; Hardware stack levels required when called:   12
 23021 ;; This function calls:
 23022 ;;		Nothing
 23023 ;; This function is called by:
 23024 ;;		_month_length
 23025 ;; This function uses a non-reentrant model
 23026 ;;
 23027                           
 23028                           	psect	text96
 23029  015778                     __ptext96:
 23030                           	opt stack 0
 23031  015778                     ___awmod:
 23032                           	opt stack 10
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;incstack = 0
 23036  015778  0E00               	movlw	0
 23037  01577A  0100               	movlb	0	; () banked
 23038  01577C  6F65               	movwf	___awmod@sign& (0+255),b
 23039                           
 23040                           ; BSR set to: 0
 23041  01577E  0100               	movlb	0	; () banked
 23042  015780  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23043  015782  D008               	goto	l10560
 23044                           
 23045                           ; BSR set to: 0
 23046  015784  0100               	movlb	0	; () banked
 23047  015786  6D60               	negf	___awmod@dividend& (0+255),b
 23048  015788  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23049  01578A  B0D8               	btfsc	status,0,c
 23050  01578C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23051                           
 23052                           ; BSR set to: 0
 23053  01578E  0E01               	movlw	1
 23054  015790  0100               	movlb	0	; () banked
 23055  015792  6F65               	movwf	___awmod@sign& (0+255),b
 23056  015794                     l10560:
 23057                           
 23058                           ; BSR set to: 0
 23059  015794  0100               	movlb	0	; () banked
 23060  015796  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23061  015798  D005               	goto	l10564
 23062                           
 23063                           ; BSR set to: 0
 23064  01579A  0100               	movlb	0	; () banked
 23065  01579C  6D62               	negf	___awmod@divisor& (0+255),b
 23066  01579E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23067  0157A0  B0D8               	btfsc	status,0,c
 23068  0157A2  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23069  0157A4                     l10564:
 23070                           
 23071                           ; BSR set to: 0
 23072  0157A4  0100               	movlb	0	; () banked
 23073  0157A6  5162               	movf	___awmod@divisor& (0+255),w,b
 23074  0157A8  0100               	movlb	0	; () banked
 23075  0157AA  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23076  0157AC  B4D8               	btfsc	status,2,c
 23077  0157AE  D026               	goto	l10580
 23078                           
 23079                           ; BSR set to: 0
 23080  0157B0  0E01               	movlw	1
 23081  0157B2  0100               	movlb	0	; () banked
 23082  0157B4  6F64               	movwf	___awmod@counter& (0+255),b
 23083  0157B6  D006               	goto	l10570
 23084  0157B8                     l10568:
 23085                           
 23086                           ; BSR set to: 0
 23087  0157B8  0100               	movlb	0	; () banked
 23088  0157BA  90D8               	bcf	status,0,c
 23089  0157BC  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23090  0157BE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23091  0157C0  0100               	movlb	0	; () banked
 23092  0157C2  2B64               	incf	___awmod@counter& (0+255),f,b
 23093  0157C4                     l10570:
 23094                           
 23095                           ; BSR set to: 0
 23096  0157C4  0100               	movlb	0	; () banked
 23097  0157C6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23098  0157C8  D7F7               	goto	l10568
 23099  0157CA                     l10572:
 23100                           
 23101                           ; BSR set to: 0
 23102  0157CA  0100               	movlb	0	; () banked
 23103  0157CC  5162               	movf	___awmod@divisor& (0+255),w,b
 23104  0157CE  0100               	movlb	0	; () banked
 23105  0157D0  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23106  0157D2  0100               	movlb	0	; () banked
 23107  0157D4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23108  0157D6  0100               	movlb	0	; () banked
 23109  0157D8  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23110  0157DA  A0D8               	btfss	status,0,c
 23111  0157DC  D008               	goto	l10576
 23112                           
 23113                           ; BSR set to: 0
 23114  0157DE  0100               	movlb	0	; () banked
 23115  0157E0  5162               	movf	___awmod@divisor& (0+255),w,b
 23116  0157E2  0100               	movlb	0	; () banked
 23117  0157E4  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23118  0157E6  0100               	movlb	0	; () banked
 23119  0157E8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23120  0157EA  0100               	movlb	0	; () banked
 23121  0157EC  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23122  0157EE                     l10576:
 23123                           
 23124                           ; BSR set to: 0
 23125  0157EE  0100               	movlb	0	; () banked
 23126  0157F0  90D8               	bcf	status,0,c
 23127  0157F2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23128  0157F4  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23129                           
 23130                           ; BSR set to: 0
 23131  0157F6  0100               	movlb	0	; () banked
 23132  0157F8  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23133  0157FA  D7E7               	goto	l10572
 23134  0157FC                     l10580:
 23135                           
 23136                           ; BSR set to: 0
 23137  0157FC  0100               	movlb	0	; () banked
 23138  0157FE  5165               	movf	___awmod@sign& (0+255),w,b
 23139  015800  0100               	movlb	0	; () banked
 23140  015802  B4D8               	btfsc	status,2,c
 23141  015804  D005               	goto	l10584
 23142                           
 23143                           ; BSR set to: 0
 23144  015806  0100               	movlb	0	; () banked
 23145  015808  6D60               	negf	___awmod@dividend& (0+255),b
 23146  01580A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23147  01580C  B0D8               	btfsc	status,0,c
 23148  01580E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23149  015810                     l10584:
 23150                           
 23151                           ; BSR set to: 0
 23152  015810  C060  F060         	movff	___awmod@dividend,?___awmod
 23153  015814  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23154  015818  0012               	return	
 23155  01581A                     __end_of___awmod:
 23156                           	opt stack 0
 23157                           tblptru	equ	0xFF8
 23158                           tblptrh	equ	0xFF7
 23159                           tblptrl	equ	0xFF6
 23160                           tablat	equ	0xFF5
 23161                           prodh	equ	0xFF4
 23162                           prodl	equ	0xFF3
 23163                           intcon	equ	0xFF2
 23164                           intcon2	equ	0xFF1
 23165                           postinc0	equ	0xFEE
 23166                           wreg	equ	0xFE8
 23167                           indf1	equ	0xFE7
 23168                           postinc1	equ	0xFE6
 23169                           postdec1	equ	0xFE5
 23170                           fsr1h	equ	0xFE2
 23171                           fsr1l	equ	0xFE1
 23172                           indf2	equ	0xFDF
 23173                           postinc2	equ	0xFDE
 23174                           postdec2	equ	0xFDD
 23175                           plusw2	equ	0xFDB
 23176                           fsr2h	equ	0xFDA
 23177                           fsr2l	equ	0xFD9
 23178                           status	equ	0xFD8
 23179                           
 23180 ;; *************** function ___lmul *****************
 23181 ;; Defined at:
 23182 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23183 ;; Parameters:    Size  Location     Type
 23184 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23185 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23186 ;; Auto vars:     Size  Location     Type
 23187 ;;  product         4   21[BANK0 ] unsigned long 
 23188 ;; Return value:  Size  Location     Type
 23189 ;;                  4   13[BANK0 ] unsigned long 
 23190 ;; Registers used:
 23191 ;;		wreg, status,2, status,0
 23192 ;; Tracked objects:
 23193 ;;		On entry : 0/0
 23194 ;;		On exit  : 0/0
 23195 ;;		Unchanged: 0/0
 23196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23197 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23198 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23200 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23201 ;;Total ram usage:       12 bytes
 23202 ;; Hardware stack levels used:    1
 23203 ;; Hardware stack levels required when called:   12
 23204 ;; This function calls:
 23205 ;;		Nothing
 23206 ;; This function is called by:
 23207 ;;		_get_quot_rem
 23208 ;;		_caltime_to_epoch
 23209 ;;		_RTCC_adjust_time_inc
 23210 ;;		_RTCC_adjust_time_dec
 23211 ;; This function uses a non-reentrant model
 23212 ;;
 23213                           
 23214                           	psect	text97
 23215  015EC4                     __ptext97:
 23216                           	opt stack 0
 23217  015EC4                     ___lmul:
 23218                           	opt stack 11
 23219                           
 23220                           ; BSR set to: 0
 23221                           ;incstack = 0
 23222  015EC4  0E00               	movlw	0
 23223  015EC6  0100               	movlb	0	; () banked
 23224  015EC8  6F75               	movwf	___lmul@product& (0+255),b
 23225  015ECA  0E00               	movlw	0
 23226  015ECC  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23227  015ECE  0E00               	movlw	0
 23228  015ED0  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23229  015ED2  0E00               	movlw	0
 23230  015ED4  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23231  015ED6                     l10618:
 23232                           
 23233                           ; BSR set to: 0
 23234  015ED6  0100               	movlb	0	; () banked
 23235  015ED8  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23236  015EDA  D010               	goto	l10622
 23237                           
 23238                           ; BSR set to: 0
 23239  015EDC  0100               	movlb	0	; () banked
 23240  015EDE  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23241  015EE0  0100               	movlb	0	; () banked
 23242  015EE2  2775               	addwf	___lmul@product& (0+255),f,b
 23243  015EE4  0100               	movlb	0	; () banked
 23244  015EE6  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23245  015EE8  0100               	movlb	0	; () banked
 23246  015EEA  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23247  015EEC  0100               	movlb	0	; () banked
 23248  015EEE  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23249  015EF0  0100               	movlb	0	; () banked
 23250  015EF2  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23251  015EF4  0100               	movlb	0	; () banked
 23252  015EF6  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23253  015EF8  0100               	movlb	0	; () banked
 23254  015EFA  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23255  015EFC                     l10622:
 23256                           
 23257                           ; BSR set to: 0
 23258  015EFC  0100               	movlb	0	; () banked
 23259  015EFE  90D8               	bcf	status,0,c
 23260  015F00  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23261  015F02  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23262  015F04  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23263  015F06  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23264                           
 23265                           ; BSR set to: 0
 23266  015F08  0100               	movlb	0	; () banked
 23267  015F0A  90D8               	bcf	status,0,c
 23268  015F0C  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23269  015F0E  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23270  015F10  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23271  015F12  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23272  015F14  0100               	movlb	0	; () banked
 23273  015F16  516D               	movf	___lmul@multiplier& (0+255),w,b
 23274  015F18  0100               	movlb	0	; () banked
 23275  015F1A  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23276  015F1C  0100               	movlb	0	; () banked
 23277  015F1E  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23278  015F20  0100               	movlb	0	; () banked
 23279  015F22  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23280  015F24  A4D8               	btfss	status,2,c
 23281  015F26  D7D7               	goto	l10618
 23282                           
 23283                           ; BSR set to: 0
 23284  015F28  C075  F06D         	movff	___lmul@product,?___lmul
 23285  015F2C  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23286  015F30  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23287  015F34  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23288                           
 23289                           ; BSR set to: 0
 23290  015F38  0012               	return		;funcret
 23291  015F3A                     __end_of___lmul:
 23292                           	opt stack 0
 23293                           tblptru	equ	0xFF8
 23294                           tblptrh	equ	0xFF7
 23295                           tblptrl	equ	0xFF6
 23296                           tablat	equ	0xFF5
 23297                           prodh	equ	0xFF4
 23298                           prodl	equ	0xFF3
 23299                           intcon	equ	0xFF2
 23300                           intcon2	equ	0xFF1
 23301                           postinc0	equ	0xFEE
 23302                           wreg	equ	0xFE8
 23303                           indf1	equ	0xFE7
 23304                           postinc1	equ	0xFE6
 23305                           postdec1	equ	0xFE5
 23306                           fsr1h	equ	0xFE2
 23307                           fsr1l	equ	0xFE1
 23308                           indf2	equ	0xFDF
 23309                           postinc2	equ	0xFDE
 23310                           postdec2	equ	0xFDD
 23311                           plusw2	equ	0xFDB
 23312                           fsr2h	equ	0xFDA
 23313                           fsr2l	equ	0xFD9
 23314                           status	equ	0xFD8
 23315                           
 23316 ;; *************** function _RTCC_to_caltime *****************
 23317 ;; Defined at:
 23318 ;;		line 89 in file "../My_library/My_RTCC.c"
 23319 ;; Parameters:    Size  Location     Type
 23320 ;;  tm              2    2[BANK0 ] PTR struct .
 23321 ;;		 -> now(14), 
 23322 ;; Auto vars:     Size  Location     Type
 23323 ;;  dumy            1    4[BANK0 ] unsigned char 
 23324 ;; Return value:  Size  Location     Type
 23325 ;;		None               void
 23326 ;; Registers used:
 23327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23328 ;; Tracked objects:
 23329 ;;		On entry : 0/0
 23330 ;;		On exit  : 0/0
 23331 ;;		Unchanged: 0/0
 23332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23336 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23337 ;;Total ram usage:        3 bytes
 23338 ;; Hardware stack levels used:    1
 23339 ;; Hardware stack levels required when called:   13
 23340 ;; This function calls:
 23341 ;;		_x_to_d
 23342 ;; This function is called by:
 23343 ;;		_RTCC_from_RTCC
 23344 ;; This function uses a non-reentrant model
 23345 ;;
 23346                           
 23347                           	psect	text98
 23348  015548                     __ptext98:
 23349                           	opt stack 0
 23350  015548                     _RTCC_to_caltime:
 23351                           	opt stack 11
 23352  015548                     l855:
 23353  015548  010F               	movlb	15	; () banked
 23354  01554A  B93F               	btfsc	63,4,b	;volatile
 23355  01554C  D7FD               	goto	l855
 23356                           
 23357                           ; BSR set to: 15
 23358                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 23359  01554E  010F               	movlb	15	; () banked
 23360  015550  813F               	bsf	63,0,b	;volatile
 23361                           
 23362                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 23363  015552  010F               	movlb	15	; () banked
 23364  015554  833F               	bsf	63,1,b	;volatile
 23365                           
 23366                           ; BSR set to: 15
 23367                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 23368  015556  0100               	movlb	0	; () banked
 23369  015558  EE20 F00A          	lfsr	2,10
 23370  01555C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23371  01555E  26D9               	addwf	fsr2l,f,c
 23372  015560  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23373  015562  22DA               	addwfc	fsr2h,f,c
 23374  015564  010F               	movlb	15	; () banked
 23375  015566  513A               	movf	58,w,b	;volatile
 23376  015568  EC2C  F0B6         	call	_x_to_d
 23377  01556C  6EDF               	movwf	indf2,c
 23378                           
 23379                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 23380  01556E  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23381                           
 23382                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 23383  015572  0100               	movlb	0	; () banked
 23384  015574  EE20 F008          	lfsr	2,8
 23385  015578  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23386  01557A  26D9               	addwf	fsr2l,f,c
 23387  01557C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23388  01557E  22DA               	addwfc	fsr2h,f,c
 23389  015580  010F               	movlb	15	; () banked
 23390  015582  513A               	movf	58,w,b	;volatile
 23391  015584  EC2C  F0B6         	call	_x_to_d
 23392  015588  6EDF               	movwf	indf2,c
 23393                           
 23394                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 23395  01558A  0100               	movlb	0	; () banked
 23396  01558C  EE20 F009          	lfsr	2,9
 23397  015590  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23398  015592  26D9               	addwf	fsr2l,f,c
 23399  015594  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23400  015596  22DA               	addwfc	fsr2h,f,c
 23401  015598  010F               	movlb	15	; () banked
 23402  01559A  513B               	movf	59,w,b	;volatile
 23403  01559C  EC2C  F0B6         	call	_x_to_d
 23404  0155A0  6EDF               	movwf	indf2,c
 23405                           
 23406                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 23407  0155A2  0100               	movlb	0	; () banked
 23408  0155A4  EE20 F006          	lfsr	2,6
 23409  0155A8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23410  0155AA  26D9               	addwf	fsr2l,f,c
 23411  0155AC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23412  0155AE  22DA               	addwfc	fsr2h,f,c
 23413  0155B0  010F               	movlb	15	; () banked
 23414  0155B2  513A               	movf	58,w,b	;volatile
 23415  0155B4  EC2C  F0B6         	call	_x_to_d
 23416  0155B8  6EDF               	movwf	indf2,c
 23417                           
 23418                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 23419  0155BA  0100               	movlb	0	; () banked
 23420  0155BC  EE20 F007          	lfsr	2,7
 23421  0155C0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23422  0155C2  26D9               	addwf	fsr2l,f,c
 23423  0155C4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23424  0155C6  22DA               	addwfc	fsr2h,f,c
 23425  0155C8  010F               	movlb	15	; () banked
 23426  0155CA  513B               	movf	59,w,b	;volatile
 23427  0155CC  EC2C  F0B6         	call	_x_to_d
 23428  0155D0  6EDF               	movwf	indf2,c
 23429                           
 23430                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 23431  0155D2  0100               	movlb	0	; () banked
 23432  0155D4  EE20 F004          	lfsr	2,4
 23433  0155D8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23434  0155DA  26D9               	addwf	fsr2l,f,c
 23435  0155DC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23436  0155DE  22DA               	addwfc	fsr2h,f,c
 23437  0155E0  010F               	movlb	15	; () banked
 23438  0155E2  513A               	movf	58,w,b	;volatile
 23439  0155E4  EC2C  F0B6         	call	_x_to_d
 23440  0155E8  6EDF               	movwf	indf2,c
 23441                           
 23442                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 23443  0155EA  0100               	movlb	0	; () banked
 23444  0155EC  EE20 F005          	lfsr	2,5
 23445  0155F0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23446  0155F2  26D9               	addwf	fsr2l,f,c
 23447  0155F4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23448  0155F6  22DA               	addwfc	fsr2h,f,c
 23449  0155F8  010F               	movlb	15	; () banked
 23450  0155FA  513B               	movf	59,w,b	;volatile
 23451  0155FC  EC2C  F0B6         	call	_x_to_d
 23452  015600  6EDF               	movwf	indf2,c
 23453  015602  0012               	return		;funcret
 23454  015604                     __end_of_RTCC_to_caltime:
 23455                           	opt stack 0
 23456                           tblptru	equ	0xFF8
 23457                           tblptrh	equ	0xFF7
 23458                           tblptrl	equ	0xFF6
 23459                           tablat	equ	0xFF5
 23460                           prodh	equ	0xFF4
 23461                           prodl	equ	0xFF3
 23462                           intcon	equ	0xFF2
 23463                           intcon2	equ	0xFF1
 23464                           postinc0	equ	0xFEE
 23465                           wreg	equ	0xFE8
 23466                           indf1	equ	0xFE7
 23467                           postinc1	equ	0xFE6
 23468                           postdec1	equ	0xFE5
 23469                           fsr1h	equ	0xFE2
 23470                           fsr1l	equ	0xFE1
 23471                           indf2	equ	0xFDF
 23472                           postinc2	equ	0xFDE
 23473                           postdec2	equ	0xFDD
 23474                           plusw2	equ	0xFDB
 23475                           fsr2h	equ	0xFDA
 23476                           fsr2l	equ	0xFD9
 23477                           status	equ	0xFD8
 23478                           
 23479 ;; *************** function _x_to_d *****************
 23480 ;; Defined at:
 23481 ;;		line 51 in file "../My_library/My_RTCC.c"
 23482 ;; Parameters:    Size  Location     Type
 23483 ;;  hex             1    wreg     unsigned char 
 23484 ;; Auto vars:     Size  Location     Type
 23485 ;;  hex             1    1[BANK0 ] unsigned char 
 23486 ;; Return value:  Size  Location     Type
 23487 ;;                  1    wreg      unsigned char 
 23488 ;; Registers used:
 23489 ;;		wreg, status,2, status,0, prodl, prodh
 23490 ;; Tracked objects:
 23491 ;;		On entry : 0/0
 23492 ;;		On exit  : 0/0
 23493 ;;		Unchanged: 0/0
 23494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23499 ;;Total ram usage:        2 bytes
 23500 ;; Hardware stack levels used:    1
 23501 ;; Hardware stack levels required when called:   12
 23502 ;; This function calls:
 23503 ;;		Nothing
 23504 ;; This function is called by:
 23505 ;;		_RTCC_to_caltime
 23506 ;; This function uses a non-reentrant model
 23507 ;;
 23508                           
 23509                           	psect	text99
 23510  016C58                     __ptext99:
 23511                           	opt stack 0
 23512  016C58                     _x_to_d:
 23513                           	opt stack 11
 23514                           
 23515                           ;incstack = 0
 23516                           ;x_to_d@hex stored from wreg
 23517  016C58  0100               	movlb	0	; () banked
 23518  016C5A  6F61               	movwf	x_to_d@hex& (0+255),b
 23519                           
 23520                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23521  016C5C  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23522  016C60  0E0F               	movlw	15
 23523  016C62  0100               	movlb	0	; () banked
 23524  016C64  1760               	andwf	??_x_to_d& (0+255),f,b
 23525  016C66  0100               	movlb	0	; () banked
 23526  016C68  3961               	swapf	x_to_d@hex& (0+255),w,b
 23527  016C6A  0B0F               	andlw	15
 23528  016C6C  0B0F               	andlw	15
 23529  016C6E  0D0A               	mullw	10
 23530  016C70  50F3               	movf	prodl,w,c
 23531  016C72  0100               	movlb	0	; () banked
 23532  016C74  2560               	addwf	??_x_to_d& (0+255),w,b
 23533  016C76  0012               	return	
 23534  016C78                     __end_of_x_to_d:
 23535                           	opt stack 0
 23536                           tblptru	equ	0xFF8
 23537                           tblptrh	equ	0xFF7
 23538                           tblptrl	equ	0xFF6
 23539                           tablat	equ	0xFF5
 23540                           prodh	equ	0xFF4
 23541                           prodl	equ	0xFF3
 23542                           intcon	equ	0xFF2
 23543                           intcon2	equ	0xFF1
 23544                           postinc0	equ	0xFEE
 23545                           wreg	equ	0xFE8
 23546                           indf1	equ	0xFE7
 23547                           postinc1	equ	0xFE6
 23548                           postdec1	equ	0xFE5
 23549                           fsr1h	equ	0xFE2
 23550                           fsr1l	equ	0xFE1
 23551                           indf2	equ	0xFDF
 23552                           postinc2	equ	0xFDE
 23553                           postdec2	equ	0xFDD
 23554                           plusw2	equ	0xFDB
 23555                           fsr2h	equ	0xFDA
 23556                           fsr2l	equ	0xFD9
 23557                           status	equ	0xFD8
 23558                           
 23559 ;; *************** function _ISR *****************
 23560 ;; Defined at:
 23561 ;;		line 49 in file "main.c"
 23562 ;; Parameters:    Size  Location     Type
 23563 ;;		None
 23564 ;; Auto vars:     Size  Location     Type
 23565 ;;		None
 23566 ;; Return value:  Size  Location     Type
 23567 ;;		None               void
 23568 ;; Registers used:
 23569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23570 ;; Tracked objects:
 23571 ;;		On entry : 0/0
 23572 ;;		On exit  : 0/0
 23573 ;;		Unchanged: 0/0
 23574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23577 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23578 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23579 ;;Total ram usage:       14 bytes
 23580 ;; Hardware stack levels used:    1
 23581 ;; Hardware stack levels required when called:   11
 23582 ;; This function calls:
 23583 ;;		_LED_indicator
 23584 ;;		_USB_CDC_ISR
 23585 ;;		_millis_timer
 23586 ;; This function is called by:
 23587 ;;		Interrupt level 2
 23588 ;; This function uses a non-reentrant model
 23589 ;;
 23590                           
 23591                           	psect	intcode
 23592  001008                     __pintcode:
 23593                           	opt stack 0
 23594  001008                     _ISR:
 23595                           	opt stack 10
 23596                           
 23597                           ; BSR set to: 0
 23598                           ;incstack = 0
 23599  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23600  00100A  CFFA F04B          	movff	pclath,??_ISR
 23601  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 23602  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23603  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23604  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23605  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23606  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23607  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 23608  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 23609  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 23610  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23611  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23612  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 23613  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 23614                           
 23615                           ;main.c: 50: USB_CDC_ISR();
 23616  001042  EC9D  F0B6         	call	_USB_CDC_ISR	;wreg free
 23617                           
 23618                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23619  001046  B4F2               	btfsc	intcon,2,c	;volatile
 23620  001048  AAF2               	btfss	intcon,5,c	;volatile
 23621  00104A  D003               	goto	i2l10432
 23622                           
 23623                           ;main.c: 52: INTCONbits.T0IF = 0;
 23624  00104C  94F2               	bcf	intcon,2,c	;volatile
 23625                           
 23626                           ;main.c: 53: millis_timer();
 23627  00104E  ECE9  F0B5         	call	_millis_timer	;wreg free
 23628  001052                     i2l10432:
 23629                           
 23630                           ;main.c: 54: }
 23631                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 23632  001052  B09E               	btfsc	3998,0,c	;volatile
 23633  001054  A09D               	btfss	3997,0,c	;volatile
 23634  001056  D01E               	goto	i2l10448
 23635                           
 23636                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 23637  001058  909E               	bcf	3998,0,c	;volatile
 23638                           
 23639                           ;main.c: 57: TMR1H = 0xC0;
 23640  00105A  0EC0               	movlw	192
 23641  00105C  6ECF               	movwf	4047,c	;volatile
 23642                           
 23643                           ;main.c: 58: cut_time_flag = 1;
 23644  00105E  0E01               	movlw	1
 23645  001060  0101               	movlb	1	; () banked
 23646  001062  6F1F               	movwf	_cut_time_flag& (0+255),b
 23647                           
 23648                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 23649                           ;main.c: 60: if (cnt_t1) {
 23650  001064  0101               	movlb	1	; () banked
 23651  001066  5117               	movf	ISR@cnt_t1& (0+255),w,b
 23652  001068  B4D8               	btfsc	status,2,c
 23653  00106A  D004               	goto	i2l10442
 23654                           
 23655                           ; BSR set to: 1
 23656                           ;main.c: 61: cnt_t1 = 0;
 23657  00106C  0E00               	movlw	0
 23658  00106E  0101               	movlb	1	; () banked
 23659  001070  6F17               	movwf	ISR@cnt_t1& (0+255),b
 23660                           
 23661                           ;main.c: 62: } else {
 23662  001072  D010               	goto	i2l10448
 23663  001074                     i2l10442:
 23664                           
 23665                           ; BSR set to: 1
 23666                           ;main.c: 63: cnt_t1 = 1;
 23667  001074  0E01               	movlw	1
 23668  001076  0101               	movlb	1	; () banked
 23669  001078  6F17               	movwf	ISR@cnt_t1& (0+255),b
 23670                           
 23671                           ;main.c: 64: terminal_data_out_flag = 1;
 23672  00107A  0E01               	movlw	1
 23673  00107C  0101               	movlb	1	; () banked
 23674  00107E  6F25               	movwf	_terminal_data_out_flag& (0+255),b
 23675                           
 23676                           ;main.c: 65: integrate_flag = 1;
 23677  001080  0E01               	movlw	1
 23678  001082  0101               	movlb	1	; () banked
 23679  001084  6F21               	movwf	_integrate_flag& (0+255),b
 23680                           
 23681                           ; BSR set to: 1
 23682                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 23683  001086  0E02               	movlw	2
 23684  001088  181F               	xorwf	_print_item,w,c
 23685  00108A  A4D8               	btfss	status,2,c
 23686  00108C  D003               	goto	i2l10448
 23687                           
 23688                           ; BSR set to: 1
 23689  00108E  0E01               	movlw	1
 23690  001090  0101               	movlb	1	; () banked
 23691  001092  6F20               	movwf	_display_flag& (0+255),b
 23692  001094                     i2l10448:
 23693                           
 23694                           ;main.c: 67: }
 23695                           ;main.c: 68: }
 23696                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 23697  001094  B2A1               	btfsc	4001,1,c	;volatile
 23698  001096  A2A0               	btfss	4000,1,c	;volatile
 23699  001098  D010               	goto	i2l1800
 23700                           
 23701                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 23702  00109A  92A1               	bcf	4001,1,c	;volatile
 23703                           
 23704                           ;main.c: 71: ctmu_sampling_flag = 1;
 23705  00109C  0E01               	movlw	1
 23706  00109E  0101               	movlb	1	; () banked
 23707  0010A0  6F1E               	movwf	_ctmu_sampling_flag& (0+255),b
 23708                           
 23709                           ;main.c: 72: static uint8_t cnt;
 23710                           ;main.c: 73: if (cnt) {
 23711  0010A2  0101               	movlb	1	; () banked
 23712  0010A4  5116               	movf	ISR@cnt& (0+255),w,b
 23713  0010A6  B4D8               	btfsc	status,2,c
 23714  0010A8  D003               	goto	i2l10458
 23715                           
 23716                           ; BSR set to: 1
 23717                           ;main.c: 74: cnt--;
 23718  0010AA  0101               	movlb	1	; () banked
 23719  0010AC  0716               	decf	ISR@cnt& (0+255),f,b
 23720                           
 23721                           ;main.c: 75: } else {
 23722  0010AE  D005               	goto	i2l1800
 23723  0010B0                     i2l10458:
 23724                           
 23725                           ; BSR set to: 1
 23726                           ;main.c: 76: cnt = 8;
 23727  0010B0  0E08               	movlw	8
 23728  0010B2  0101               	movlb	1	; () banked
 23729  0010B4  6F16               	movwf	ISR@cnt& (0+255),b
 23730                           
 23731                           ; BSR set to: 1
 23732                           ;main.c: 77: LED_indicator();
 23733  0010B6  EC15  F09D         	call	_LED_indicator	;wreg free
 23734  0010BA                     i2l1800:
 23735  0010BA  C058  FFF5         	movff	??_ISR+13,tablat
 23736  0010BE  C057  FFF8         	movff	??_ISR+12,tblptru
 23737  0010C2  C056  FFF7         	movff	??_ISR+11,tblptrh
 23738  0010C6  C055  FFF6         	movff	??_ISR+10,tblptrl
 23739  0010CA  C054  FFF4         	movff	??_ISR+9,prodh
 23740  0010CE  C053  FFF3         	movff	??_ISR+8,prodl
 23741  0010D2  C052  FFDA         	movff	??_ISR+7,fsr2h
 23742  0010D6  C051  FFD9         	movff	??_ISR+6,fsr2l
 23743  0010DA  C050  FFE2         	movff	??_ISR+5,fsr1h
 23744  0010DE  C04F  FFE1         	movff	??_ISR+4,fsr1l
 23745  0010E2  C04E  FFEA         	movff	??_ISR+3,fsr0h
 23746  0010E6  C04D  FFE9         	movff	??_ISR+2,fsr0l
 23747  0010EA  C04C  FFFB         	movff	??_ISR+1,pclatu
 23748  0010EE  C04B  FFFA         	movff	??_ISR,pclath
 23749  0010F2  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23750  0010F4  0011               	retfie		f
 23751  0010F6                     __end_of_ISR:
 23752                           	opt stack 0
 23753                           pclatu	equ	0xFFB
 23754                           pclath	equ	0xFFA
 23755                           tblptru	equ	0xFF8
 23756                           tblptrh	equ	0xFF7
 23757                           tblptrl	equ	0xFF6
 23758                           tablat	equ	0xFF5
 23759                           prodh	equ	0xFF4
 23760                           prodl	equ	0xFF3
 23761                           intcon	equ	0xFF2
 23762                           intcon2	equ	0xFF1
 23763                           postinc0	equ	0xFEE
 23764                           fsr0h	equ	0xFEA
 23765                           fsr0l	equ	0xFE9
 23766                           wreg	equ	0xFE8
 23767                           indf1	equ	0xFE7
 23768                           postinc1	equ	0xFE6
 23769                           postdec1	equ	0xFE5
 23770                           fsr1h	equ	0xFE2
 23771                           fsr1l	equ	0xFE1
 23772                           indf2	equ	0xFDF
 23773                           postinc2	equ	0xFDE
 23774                           postdec2	equ	0xFDD
 23775                           plusw2	equ	0xFDB
 23776                           fsr2h	equ	0xFDA
 23777                           fsr2l	equ	0xFD9
 23778                           status	equ	0xFD8
 23779                           
 23780 ;; *************** function _millis_timer *****************
 23781 ;; Defined at:
 23782 ;;		line 222 in file "../My_library/My_PIC.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;		None
 23785 ;; Auto vars:     Size  Location     Type
 23786 ;;		None
 23787 ;; Return value:  Size  Location     Type
 23788 ;;		None               void
 23789 ;; Registers used:
 23790 ;;		wreg, status,2, status,0
 23791 ;; Tracked objects:
 23792 ;;		On entry : 0/0
 23793 ;;		On exit  : 0/0
 23794 ;;		Unchanged: 0/0
 23795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23800 ;;Total ram usage:        0 bytes
 23801 ;; Hardware stack levels used:    1
 23802 ;; This function calls:
 23803 ;;		Nothing
 23804 ;; This function is called by:
 23805 ;;		_ISR
 23806 ;; This function uses a non-reentrant model
 23807 ;;
 23808                           
 23809                           	psect	text101
 23810  016BD2                     __ptext101:
 23811                           	opt stack 0
 23812  016BD2                     _millis_timer:
 23813                           	opt stack 20
 23814                           
 23815                           ;My_PIC.c: 223: static uint16_t cnt;
 23816                           ;My_PIC.c: 224: if (cnt) {
 23817                           
 23818                           ;incstack = 0
 23819  016BD2  0101               	movlb	1	; () banked
 23820  016BD4  5114               	movf	millis_timer@cnt& (0+255),w,b
 23821  016BD6  0101               	movlb	1	; () banked
 23822  016BD8  1115               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 23823  016BDA  A4D8               	btfss	status,2,c
 23824  016BDC  0012               	return	
 23825                           
 23826                           ; BSR set to: 1
 23827                           ;My_PIC.c: 227: cnt = 47;
 23828                           
 23829                           ; BSR set to: 1
 23830                           
 23831                           ; BSR set to: 1
 23832                           ;My_PIC.c: 226: } else {
 23833  016BDE  0E00               	movlw	0
 23834  016BE0  0101               	movlb	1	; () banked
 23835  016BE2  6F15               	movwf	(millis_timer@cnt+1)& (0+255),b
 23836  016BE4  0E2F               	movlw	47
 23837  016BE6  6F14               	movwf	millis_timer@cnt& (0+255),b
 23838                           
 23839                           ; BSR set to: 1
 23840                           ;My_PIC.c: 228: ms++;
 23841  016BE8  0E01               	movlw	1
 23842  016BEA  0102               	movlb	2	; () banked
 23843  016BEC  270E               	addwf	_ms& (0+255),f,b
 23844  016BEE  0E00               	movlw	0
 23845  016BF0  230F               	addwfc	(_ms+1)& (0+255),f,b
 23846  016BF2  2310               	addwfc	(_ms+2)& (0+255),f,b
 23847  016BF4  2311               	addwfc	(_ms+3)& (0+255),f,b
 23848  016BF6  0012               	return	
 23849  016BF8                     __end_of_millis_timer:
 23850                           	opt stack 0
 23851                           pclatu	equ	0xFFB
 23852                           pclath	equ	0xFFA
 23853                           tblptru	equ	0xFF8
 23854                           tblptrh	equ	0xFF7
 23855                           tblptrl	equ	0xFF6
 23856                           tablat	equ	0xFF5
 23857                           prodh	equ	0xFF4
 23858                           prodl	equ	0xFF3
 23859                           intcon	equ	0xFF2
 23860                           intcon2	equ	0xFF1
 23861                           postinc0	equ	0xFEE
 23862                           fsr0h	equ	0xFEA
 23863                           fsr0l	equ	0xFE9
 23864                           wreg	equ	0xFE8
 23865                           indf1	equ	0xFE7
 23866                           postinc1	equ	0xFE6
 23867                           postdec1	equ	0xFE5
 23868                           fsr1h	equ	0xFE2
 23869                           fsr1l	equ	0xFE1
 23870                           indf2	equ	0xFDF
 23871                           postinc2	equ	0xFDE
 23872                           postdec2	equ	0xFDD
 23873                           plusw2	equ	0xFDB
 23874                           fsr2h	equ	0xFDA
 23875                           fsr2l	equ	0xFD9
 23876                           status	equ	0xFD8
 23877                           
 23878 ;; *************** function _USB_CDC_ISR *****************
 23879 ;; Defined at:
 23880 ;;		line 33 in file "../My_library/My_usb_cdc.c"
 23881 ;; Parameters:    Size  Location     Type
 23882 ;;		None
 23883 ;; Auto vars:     Size  Location     Type
 23884 ;;		None
 23885 ;; Return value:  Size  Location     Type
 23886 ;;		None               void
 23887 ;; Registers used:
 23888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23889 ;; Tracked objects:
 23890 ;;		On entry : 0/0
 23891 ;;		On exit  : 0/0
 23892 ;;		Unchanged: 0/0
 23893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23898 ;;Total ram usage:        0 bytes
 23899 ;; Hardware stack levels used:    1
 23900 ;; Hardware stack levels required when called:   10
 23901 ;; This function calls:
 23902 ;;		_USBDeviceTasks
 23903 ;; This function is called by:
 23904 ;;		_ISR
 23905 ;; This function uses a non-reentrant model
 23906 ;;
 23907                           
 23908                           	psect	text102
 23909  016D3A                     __ptext102:
 23910                           	opt stack 0
 23911  016D3A                     _USB_CDC_ISR:
 23912                           	opt stack 10
 23913                           
 23914                           ;My_usb_cdc.c: 35: USBDeviceTasks();
 23915                           
 23916                           ;incstack = 0
 23917  016D3A  EC9C  F09A         	call	_USBDeviceTasks	;wreg free
 23918  016D3E  0012               	return		;funcret
 23919  016D40                     __end_of_USB_CDC_ISR:
 23920                           	opt stack 0
 23921                           pclatu	equ	0xFFB
 23922                           pclath	equ	0xFFA
 23923                           tblptru	equ	0xFF8
 23924                           tblptrh	equ	0xFF7
 23925                           tblptrl	equ	0xFF6
 23926                           tablat	equ	0xFF5
 23927                           prodh	equ	0xFF4
 23928                           prodl	equ	0xFF3
 23929                           intcon	equ	0xFF2
 23930                           intcon2	equ	0xFF1
 23931                           postinc0	equ	0xFEE
 23932                           fsr0h	equ	0xFEA
 23933                           fsr0l	equ	0xFE9
 23934                           wreg	equ	0xFE8
 23935                           indf1	equ	0xFE7
 23936                           postinc1	equ	0xFE6
 23937                           postdec1	equ	0xFE5
 23938                           fsr1h	equ	0xFE2
 23939                           fsr1l	equ	0xFE1
 23940                           indf2	equ	0xFDF
 23941                           postinc2	equ	0xFDE
 23942                           postdec2	equ	0xFDD
 23943                           plusw2	equ	0xFDB
 23944                           fsr2h	equ	0xFDA
 23945                           fsr2l	equ	0xFD9
 23946                           status	equ	0xFD8
 23947                           
 23948 ;; *************** function _USBDeviceTasks *****************
 23949 ;; Defined at:
 23950 ;;		line 490 in file "../My_library/usb/usb_device.c"
 23951 ;; Parameters:    Size  Location     Type
 23952 ;;		None
 23953 ;; Auto vars:     Size  Location     Type
 23954 ;;  i               1   29[COMRAM] unsigned char 
 23955 ;; Return value:  Size  Location     Type
 23956 ;;		None               void
 23957 ;; Registers used:
 23958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23959 ;; Tracked objects:
 23960 ;;		On entry : 0/0
 23961 ;;		On exit  : 0/0
 23962 ;;		Unchanged: 0/0
 23963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23968 ;;Total ram usage:        1 bytes
 23969 ;; Hardware stack levels used:    1
 23970 ;; Hardware stack levels required when called:    9
 23971 ;; This function calls:
 23972 ;;		_USBCtrlEPAllowStatusStage
 23973 ;;		_USBCtrlEPService
 23974 ;;		_USBStallHandler
 23975 ;;		_USBSuspend
 23976 ;;		_USBWakeFromSuspend
 23977 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23978 ;;		i2_USBDeviceInit
 23979 ;; This function is called by:
 23980 ;;		_USB_CDC_ISR
 23981 ;; This function uses a non-reentrant model
 23982 ;;
 23983                           
 23984                           	psect	text103
 23985  013538                     __ptext103:
 23986                           	opt stack 0
 23987  013538                     _USBDeviceTasks:
 23988                           	opt stack 10
 23989                           
 23990                           ;usb_device.c: 492: uint8_t i;
 23991                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 23992                           
 23993                           ;incstack = 0
 23994  013538  0413               	decf	_USBDeviceState,w,c	;volatile
 23995  01353A  B4D8               	btfsc	status,2,c
 23996                           
 23997                           ;usb_device.c: 604: {
 23998                           ;usb_device.c: 614: if(!UCONbits.SE0)
 23999  01353C  BA65               	btfsc	3941,5,c	;volatile
 24000  01353E  D008               	goto	i2l9052
 24001                           
 24002                           ;usb_device.c: 615: {
 24003                           ;usb_device.c: 616: {UIR = 0;};
 24004  013540  0E00               	movlw	0
 24005  013542  6E62               	movwf	3938,c	;volatile
 24006                           
 24007                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 24008  013544  010F               	movlb	15	; () banked
 24009  013546  8136               	bsf	54,0,b	;volatile
 24010                           
 24011                           ; BSR set to: 15
 24012                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 24013  013548  010F               	movlb	15	; () banked
 24014  01354A  8936               	bsf	54,4,b	;volatile
 24015                           
 24016                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 24017  01354C  0E02               	movlw	2
 24018  01354E  6E13               	movwf	_USBDeviceState,c	;volatile
 24019  013550                     i2l9052:
 24020                           
 24021                           ;usb_device.c: 623: }
 24022                           ;usb_device.c: 624: }
 24023                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24024  013550  A462               	btfss	3938,2,c	;volatile
 24025  013552  D006               	goto	i2l9060
 24026  013554  010F               	movlb	15	; () banked
 24027  013556  A536               	btfss	54,2,b	;volatile
 24028  013558  D003               	goto	i2l9060
 24029                           
 24030                           ; BSR set to: 15
 24031                           ;usb_device.c: 641: {
 24032                           ;usb_device.c: 642: (UIR &= 0xFB);
 24033  01355A  9462               	bcf	3938,2,c	;volatile
 24034                           
 24035                           ; BSR set to: 15
 24036                           ;usb_device.c: 646: USBWakeFromSuspend();
 24037  01355C  ECA6  F0B4         	call	_USBWakeFromSuspend	;wreg free
 24038  013560                     i2l9060:
 24039                           
 24040                           ;usb_device.c: 648: }
 24041                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 24042  013560  A265               	btfss	3941,1,c	;volatile
 24043  013562  D002               	goto	i2l158
 24044                           
 24045                           ;usb_device.c: 654: {
 24046                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 24047  013564  98A1               	bcf	4001,4,c	;volatile
 24048                           
 24049                           ;usb_device.c: 656: return;
 24050  013566  0012               	return	
 24051  013568                     i2l158:
 24052                           
 24053                           ;usb_device.c: 657: }
 24054                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24055  013568  A062               	btfss	3938,0,c	;volatile
 24056  01356A  D009               	goto	i2l9074
 24057  01356C  010F               	movlb	15	; () banked
 24058  01356E  A136               	btfss	54,0,b	;volatile
 24059  013570  D006               	goto	i2l9074
 24060                           
 24061                           ; BSR set to: 15
 24062                           ;usb_device.c: 670: {
 24063                           ;usb_device.c: 671: USBDeviceInit();
 24064  013572  EC3E  F09B         	call	i2_USBDeviceInit	;wreg free
 24065                           
 24066                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 24067  013576  88A0               	bsf	4000,4,c	;volatile
 24068                           
 24069                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 24070  013578  0E04               	movlw	4
 24071  01357A  6E13               	movwf	_USBDeviceState,c	;volatile
 24072                           
 24073                           ;usb_device.c: 687: (UIR &= 0xFE);
 24074  01357C  9062               	bcf	3938,0,c	;volatile
 24075  01357E                     i2l9074:
 24076                           
 24077                           ;usb_device.c: 688: }
 24078                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24079  01357E  A862               	btfss	3938,4,c	;volatile
 24080  013580  D006               	goto	i2l9082
 24081  013582  010F               	movlb	15	; () banked
 24082  013584  A936               	btfss	54,4,b	;volatile
 24083  013586  D003               	goto	i2l9082
 24084                           
 24085                           ; BSR set to: 15
 24086                           ;usb_device.c: 694: {
 24087                           ;usb_device.c: 699: USBSuspend();
 24088  013588  EC30  F0B5         	call	_USBSuspend	;wreg free
 24089                           
 24090                           ;usb_device.c: 702: (UIR &= 0xEF);
 24091  01358C  9862               	bcf	3938,4,c	;volatile
 24092  01358E                     i2l9082:
 24093                           
 24094                           ;usb_device.c: 703: }
 24095                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 24096  01358E  AC62               	btfss	3938,6,c	;volatile
 24097  013590  D019               	goto	i2l9098
 24098                           
 24099                           ;usb_device.c: 706: {
 24100                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 24101  013592  010F               	movlb	15	; () banked
 24102  013594  AD36               	btfss	54,6,b	;volatile
 24103  013596  D00E               	goto	i2l9088
 24104                           
 24105                           ; BSR set to: 15
 24106                           ;usb_device.c: 708: {
 24107                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24108  013598  0E00               	movlw	0
 24109  01359A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24110  01359C  0E73               	movlw	115
 24111  01359E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24112  0135A0  0E00               	movlw	0
 24113  0135A2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24114  0135A4  0E00               	movlw	0
 24115  0135A6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24116  0135A8  0E00               	movlw	0
 24117  0135AA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24118  0135AC  0E01               	movlw	1
 24119  0135AE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24120  0135B0  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24121  0135B4                     i2l9088:
 24122                           
 24123                           ;usb_device.c: 710: }
 24124                           ;usb_device.c: 711: (UIR &= 0xBF);
 24125  0135B4  9C62               	bcf	3938,6,c	;volatile
 24126                           
 24127                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 24128  0135B6  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24129  0135B8  A4D8               	btfss	status,2,c
 24130                           
 24131                           ;usb_device.c: 737: {
 24132                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 24133  0135BA  0616               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24134                           
 24135                           ;usb_device.c: 739: }
 24136                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 24137  0135BC  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24138  0135BE  B4D8               	btfsc	status,2,c
 24139                           
 24140                           ;usb_device.c: 746: {
 24141                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 24142  0135C0  EC62  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24143  0135C4                     i2l9098:
 24144                           
 24145                           ;usb_device.c: 748: }
 24146                           ;usb_device.c: 750: }
 24147                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24148  0135C4  AA62               	btfss	3938,5,c	;volatile
 24149  0135C6  D004               	goto	i2l9104
 24150  0135C8  010F               	movlb	15	; () banked
 24151  0135CA  BB36               	btfsc	54,5,b	;volatile
 24152                           
 24153                           ; BSR set to: 15
 24154                           ;usb_device.c: 753: {
 24155                           ;usb_device.c: 754: USBStallHandler();
 24156  0135CC  EC63  F0B3         	call	_USBStallHandler	;wreg free
 24157  0135D0                     i2l9104:
 24158                           
 24159                           ;usb_device.c: 755: }
 24160                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24161  0135D0  A262               	btfss	3938,1,c	;volatile
 24162  0135D2  D012               	goto	i2l9112
 24163  0135D4  010F               	movlb	15	; () banked
 24164  0135D6  A336               	btfss	54,1,b	;volatile
 24165  0135D8  D00F               	goto	i2l9112
 24166                           
 24167                           ; BSR set to: 15
 24168                           ;usb_device.c: 758: {
 24169                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24170  0135DA  0E7F               	movlw	127
 24171  0135DC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24172  0135DE  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24173  0135E0  0E00               	movlw	0
 24174  0135E2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24175  0135E4  0E00               	movlw	0
 24176  0135E6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24177  0135E8  0E00               	movlw	0
 24178  0135EA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24179  0135EC  0E01               	movlw	1
 24180  0135EE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24181  0135F0  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24182                           
 24183                           ;usb_device.c: 760: {UEIR = 0;};
 24184  0135F4  0E00               	movlw	0
 24185  0135F6  6E63               	movwf	3939,c	;volatile
 24186  0135F8                     i2l9112:
 24187                           
 24188                           ;usb_device.c: 768: }
 24189                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 24190  0135F8  0E04               	movlw	4
 24191  0135FA  6013               	cpfslt	_USBDeviceState,c	;volatile
 24192  0135FC  D002               	goto	i2l168
 24193                           
 24194                           ;usb_device.c: 776: {
 24195                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 24196  0135FE  98A1               	bcf	4001,4,c	;volatile
 24197                           
 24198                           ;usb_device.c: 778: return;
 24199  013600  0012               	return	
 24200  013602                     i2l168:
 24201                           
 24202                           ;usb_device.c: 779: }
 24203                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 24204  013602  010F               	movlb	15	; () banked
 24205  013604  A736               	btfss	54,3,b	;volatile
 24206  013606  D038               	goto	i2l169
 24207                           
 24208                           ; BSR set to: 15
 24209                           ;usb_device.c: 785: {
 24210                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 24211  013608  0E00               	movlw	0
 24212  01360A  6E4A               	movwf	USBDeviceTasks@i,c
 24213  01360C                     i2l9118:
 24214                           
 24215                           ; BSR set to: 15
 24216  01360C  0E03               	movlw	3
 24217  01360E  644A               	cpfsgt	USBDeviceTasks@i,c
 24218  013610  D001               	goto	i2l170
 24219  013612  D032               	goto	i2l169
 24220  013614                     i2l170:
 24221                           
 24222                           ;usb_device.c: 787: {
 24223                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 24224  013614  A662               	btfss	3938,3,c	;volatile
 24225  013616  D030               	goto	i2l169
 24226                           
 24227                           ;usb_device.c: 789: {
 24228                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 24229  013618  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24230                           
 24231                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 24232  01361C  302C               	rrcf	_USTATcopy,w,c	;volatile
 24233  01361E  32E8               	rrcf	wreg,f,c
 24234  013620  32E8               	rrcf	wreg,f,c
 24235  013622  0B0F               	andlw	15
 24236  013624  6E1E               	movwf	_endpoint_number,c	;volatile
 24237                           
 24238                           ;usb_device.c: 794: (UIR &= 0xF7);
 24239  013626  9662               	bcf	3938,3,c	;volatile
 24240                           
 24241                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 24242  013628  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24243  01362A  D007               	goto	i2l9132
 24244                           
 24245                           ;usb_device.c: 800: {
 24246                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24247  01362C  501E               	movf	_endpoint_number,w,c	;volatile
 24248  01362E  0D01               	mullw	1
 24249  013630  0E04               	movlw	low _ep_data_out
 24250  013632  24F3               	addwf	prodl,w,c
 24251  013634  6ED9               	movwf	fsr2l,c
 24252  013636  0E00               	movlw	high _ep_data_out
 24253  013638  D006               	goto	L7
 24254  01363A                     i2l9132:
 24255                           
 24256                           ;usb_device.c: 803: else
 24257                           ;usb_device.c: 804: {
 24258                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24259  01363A  501E               	movf	_endpoint_number,w,c	;volatile
 24260  01363C  0D01               	mullw	1
 24261  01363E  0E01               	movlw	low _ep_data_in
 24262  013640  24F3               	addwf	prodl,w,c
 24263  013642  6ED9               	movwf	fsr2l,c
 24264  013644  0E00               	movlw	high _ep_data_in
 24265  013646                     L7:
 24266  013646  20F4               	addwfc	prodh,w,c
 24267  013648  6EDA               	movwf	fsr2h,c
 24268  01364A  70DF               	btg	indf2,0,c
 24269                           
 24270                           ;usb_device.c: 806: }
 24271                           ;usb_device.c: 811: if(endpoint_number == 0)
 24272  01364C  501E               	movf	_endpoint_number,w,c	;volatile
 24273  01364E  A4D8               	btfss	status,2,c
 24274  013650  D003               	goto	i2l9138
 24275                           
 24276                           ;usb_device.c: 812: {
 24277                           ;usb_device.c: 813: USBCtrlEPService();
 24278  013652  EC95  F0A7         	call	_USBCtrlEPService	;wreg free
 24279                           
 24280                           ;usb_device.c: 814: }
 24281  013656  D00E               	goto	i2l9140
 24282  013658                     i2l9138:
 24283                           
 24284                           ;usb_device.c: 815: else
 24285                           ;usb_device.c: 816: {
 24286                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24287  013658  0E00               	movlw	0
 24288  01365A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24289  01365C  0E72               	movlw	114
 24290  01365E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24291  013660  0E2C               	movlw	low _USTATcopy
 24292  013662  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24293  013664  0E00               	movlw	high _USTATcopy
 24294  013666  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24295  013668  0E00               	movlw	0
 24296  01366A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24297  01366C  0E00               	movlw	0
 24298  01366E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24299  013670  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24300  013674                     i2l9140:
 24301  013674  2A4A               	incf	USBDeviceTasks@i,f,c
 24302  013676  D7CA               	goto	i2l9118
 24303  013678                     i2l169:
 24304                           
 24305                           ;usb_device.c: 823: }
 24306                           ;usb_device.c: 824: }
 24307                           ;usb_device.c: 825: }
 24308                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 24309  013678  98A1               	bcf	4001,4,c	;volatile
 24310  01367A  0012               	return		;funcret
 24311  01367C                     __end_of_USBDeviceTasks:
 24312                           	opt stack 0
 24313                           pclatu	equ	0xFFB
 24314                           pclath	equ	0xFFA
 24315                           tblptru	equ	0xFF8
 24316                           tblptrh	equ	0xFF7
 24317                           tblptrl	equ	0xFF6
 24318                           tablat	equ	0xFF5
 24319                           prodh	equ	0xFF4
 24320                           prodl	equ	0xFF3
 24321                           intcon	equ	0xFF2
 24322                           intcon2	equ	0xFF1
 24323                           postinc0	equ	0xFEE
 24324                           fsr0h	equ	0xFEA
 24325                           fsr0l	equ	0xFE9
 24326                           wreg	equ	0xFE8
 24327                           indf1	equ	0xFE7
 24328                           postinc1	equ	0xFE6
 24329                           postdec1	equ	0xFE5
 24330                           fsr1h	equ	0xFE2
 24331                           fsr1l	equ	0xFE1
 24332                           indf2	equ	0xFDF
 24333                           postinc2	equ	0xFDE
 24334                           postdec2	equ	0xFDD
 24335                           plusw2	equ	0xFDB
 24336                           fsr2h	equ	0xFDA
 24337                           fsr2l	equ	0xFD9
 24338                           status	equ	0xFD8
 24339                           
 24340 ;; *************** function i2_USBDeviceInit *****************
 24341 ;; Defined at:
 24342 ;;		line 299 in file "../My_library/usb/usb_device.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;		None
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24347 ;; Return value:  Size  Location     Type
 24348 ;;		None               void
 24349 ;; Registers used:
 24350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/0
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24360 ;;Total ram usage:        1 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:    1
 24363 ;; This function calls:
 24364 ;;		i2_memset
 24365 ;; This function is called by:
 24366 ;;		_USBDeviceTasks
 24367 ;; This function uses a non-reentrant model
 24368 ;;
 24369                           
 24370                           	psect	text104
 24371  01367C                     __ptext104:
 24372                           	opt stack 0
 24373  01367C                     i2_USBDeviceInit:
 24374                           	opt stack 17
 24375                           
 24376                           ;usb_device.c: 301: uint8_t i;
 24377                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 24378                           
 24379                           ;incstack = 0
 24380  01367C  98A0               	bcf	4000,4,c	;volatile
 24381                           
 24382                           ;usb_device.c: 306: {UEIR = 0;};
 24383  01367E  0E00               	movlw	0
 24384  013680  6E63               	movwf	3939,c	;volatile
 24385                           
 24386                           ;usb_device.c: 309: {UIR = 0;};
 24387  013682  0E00               	movlw	0
 24388  013684  6E62               	movwf	3938,c	;volatile
 24389                           
 24390                           ;usb_device.c: 312: UEP0 = 0;
 24391  013686  0E00               	movlw	0
 24392  013688  010F               	movlb	15	; () banked
 24393  01368A  6F26               	movwf	38,b	;volatile
 24394                           
 24395                           ; BSR set to: 15
 24396                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 24397  01368C  0E27               	movlw	39
 24398  01368E  6E2D               	movwf	i2memset@p1,c
 24399  013690  0E0F               	movlw	15
 24400  013692  6E2E               	movwf	i2memset@p1+1,c
 24401  013694  0E00               	movlw	0
 24402  013696  6E30               	movwf	i2memset@c+1,c
 24403  013698  0E00               	movlw	0
 24404  01369A  6E2F               	movwf	i2memset@c,c
 24405  01369C  0E00               	movlw	0
 24406  01369E  6E32               	movwf	i2memset@n+1,c
 24407  0136A0  0E02               	movlw	2
 24408  0136A2  6E31               	movwf	i2memset@n,c
 24409  0136A4  EC46  F0B5         	call	i2_memset	;wreg free
 24410                           
 24411                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24412  0136A8  0E16               	movlw	22
 24413  0136AA  010F               	movlb	15	; () banked
 24414  0136AC  6F39               	movwf	57,b	;volatile
 24415                           
 24416                           ; BSR set to: 15
 24417  0136AE  0E9F               	movlw	159
 24418  0136B0  010F               	movlb	15	; () banked
 24419  0136B2  6F37               	movwf	55,b	;volatile
 24420                           
 24421                           ; BSR set to: 15
 24422  0136B4  0E7B               	movlw	123
 24423  0136B6  010F               	movlb	15	; () banked
 24424  0136B8  6F36               	movwf	54,b	;volatile
 24425                           
 24426                           ; BSR set to: 15
 24427                           ;usb_device.c: 319: ;
 24428                           ;usb_device.c: 322: ;
 24429                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24430  0136BA  0E00               	movlw	0
 24431  0136BC  6E35               	movwf	i2USBDeviceInit@i,c
 24432  0136BE                     i2l8988:
 24433                           
 24434                           ; BSR set to: 15
 24435  0136BE  0E0B               	movlw	11
 24436  0136C0  6435               	cpfsgt	i2USBDeviceInit@i,c
 24437  0136C2  D001               	goto	i2l8992
 24438  0136C4  D00E               	goto	i2l146
 24439  0136C6                     i2l8992:
 24440                           
 24441                           ;usb_device.c: 326: {
 24442                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 24443  0136C6  5035               	movf	i2USBDeviceInit@i,w,c
 24444  0136C8  0D04               	mullw	4
 24445  0136CA  0E00               	movlw	0
 24446  0136CC  24F3               	addwf	prodl,w,c
 24447  0136CE  6ED9               	movwf	fsr2l,c
 24448  0136D0  0E0D               	movlw	13
 24449  0136D2  20F4               	addwfc	prodh,w,c
 24450  0136D4  6EDA               	movwf	fsr2h,c
 24451  0136D6  6ADE               	clrf	postinc2,c
 24452  0136D8  6ADE               	clrf	postinc2,c
 24453  0136DA  6ADE               	clrf	postinc2,c
 24454  0136DC  6ADD               	clrf	postdec2,c
 24455  0136DE  2A35               	incf	i2USBDeviceInit@i,f,c
 24456  0136E0  D7EE               	goto	i2l8988
 24457  0136E2                     i2l146:
 24458                           
 24459                           ;usb_device.c: 328: }
 24460                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 24461  0136E2  8C65               	bsf	3941,6,c	;volatile
 24462                           
 24463                           ;usb_device.c: 334: UADDR = 0x00;
 24464  0136E4  0E00               	movlw	0
 24465  0136E6  010F               	movlb	15	; () banked
 24466  0136E8  6F38               	movwf	56,b	;volatile
 24467                           
 24468                           ; BSR set to: 15
 24469                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 24470  0136EA  9865               	bcf	3941,4,c	;volatile
 24471                           
 24472                           ; BSR set to: 15
 24473                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 24474  0136EC  9C65               	bcf	3941,6,c	;volatile
 24475                           
 24476                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 24477  0136EE  D00C               	goto	i2l9012
 24478  0136F0                     i2l9004:
 24479                           
 24480                           ;usb_device.c: 344: {
 24481                           ;usb_device.c: 345: (UIR &= 0xF7);
 24482  0136F0  9662               	bcf	3938,3,c	;volatile
 24483                           
 24484                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 24485  0136F2  0E00               	movlw	0
 24486  0136F4  0100               	movlb	0	; () banked
 24487  0136F6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24488                           
 24489                           ; BSR set to: 0
 24490                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 24491  0136F8  0E00               	movlw	0
 24492  0136FA  0100               	movlb	0	; () banked
 24493  0136FC  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24494                           
 24495                           ; BSR set to: 0
 24496                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 24497  0136FE  0E00               	movlw	0
 24498  013700  0100               	movlb	0	; () banked
 24499  013702  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24500  013704  0E00               	movlw	0
 24501  013706  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24502  013708                     i2l9012:
 24503  013708  B662               	btfsc	3938,3,c	;volatile
 24504  01370A  D7F2               	goto	i2l9004
 24505                           
 24506                           ;usb_device.c: 350: }
 24507                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 24508  01370C  0E01               	movlw	1
 24509  01370E  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24510                           
 24511                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 24512  013710  0E01               	movlw	1
 24513  013712  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24514                           
 24515                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 24516  013714  0E00               	movlw	0
 24517  013716  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24518                           
 24519                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 24520  013718  0E00               	movlw	0
 24521  01371A  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24522                           
 24523                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 24524  01371C  0E00               	movlw	0
 24525  01371E  0101               	movlb	1	; () banked
 24526  013720  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24527                           
 24528                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 24529  013722  0E00               	movlw	0
 24530  013724  6E35               	movwf	i2USBDeviceInit@i,c
 24531  013726                     i2l9016:
 24532                           
 24533                           ; BSR set to: 1
 24534  013726  0E02               	movlw	2
 24535  013728  6435               	cpfsgt	i2USBDeviceInit@i,c
 24536  01372A  D001               	goto	i2l9020
 24537  01372C  D02E               	goto	i2l9026
 24538  01372E                     i2l9020:
 24539                           
 24540                           ;usb_device.c: 364: {
 24541                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 24542  01372E  5035               	movf	i2USBDeviceInit@i,w,c
 24543  013730  0D02               	mullw	2
 24544  013732  0EF5               	movlw	low _pBDTEntryIn
 24545  013734  24F3               	addwf	prodl,w,c
 24546  013736  6ED9               	movwf	fsr2l,c
 24547  013738  0E00               	movlw	high _pBDTEntryIn
 24548  01373A  20F4               	addwfc	prodh,w,c
 24549  01373C  6EDA               	movwf	fsr2h,c
 24550  01373E  0E00               	movlw	0
 24551  013740  6EDE               	movwf	postinc2,c
 24552  013742  0E00               	movlw	0
 24553  013744  6EDD               	movwf	postdec2,c
 24554                           
 24555                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 24556  013746  5035               	movf	i2USBDeviceInit@i,w,c
 24557  013748  0D02               	mullw	2
 24558  01374A  0E00               	movlw	low _pBDTEntryOut
 24559  01374C  24F3               	addwf	prodl,w,c
 24560  01374E  6ED9               	movwf	fsr2l,c
 24561  013750  0E01               	movlw	high _pBDTEntryOut
 24562  013752  20F4               	addwfc	prodh,w,c
 24563  013754  6EDA               	movwf	fsr2h,c
 24564  013756  0E00               	movlw	0
 24565  013758  6EDE               	movwf	postinc2,c
 24566  01375A  0E00               	movlw	0
 24567  01375C  6EDD               	movwf	postdec2,c
 24568                           
 24569                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 24570  01375E  5035               	movf	i2USBDeviceInit@i,w,c
 24571  013760  0D01               	mullw	1
 24572  013762  0E01               	movlw	low _ep_data_in
 24573  013764  24F3               	addwf	prodl,w,c
 24574  013766  6ED9               	movwf	fsr2l,c
 24575  013768  0E00               	movlw	high _ep_data_in
 24576  01376A  20F4               	addwfc	prodh,w,c
 24577  01376C  6EDA               	movwf	fsr2h,c
 24578  01376E  0E00               	movlw	0
 24579  013770  6EDF               	movwf	indf2,c
 24580                           
 24581                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 24582  013772  5035               	movf	i2USBDeviceInit@i,w,c
 24583  013774  0D01               	mullw	1
 24584  013776  0E04               	movlw	low _ep_data_out
 24585  013778  24F3               	addwf	prodl,w,c
 24586  01377A  6ED9               	movwf	fsr2l,c
 24587  01377C  0E00               	movlw	high _ep_data_out
 24588  01377E  20F4               	addwfc	prodh,w,c
 24589  013780  6EDA               	movwf	fsr2h,c
 24590  013782  0E00               	movlw	0
 24591  013784  6EDF               	movwf	indf2,c
 24592  013786  2A35               	incf	i2USBDeviceInit@i,f,c
 24593  013788  D7CE               	goto	i2l9016
 24594  01378A                     i2l9026:
 24595                           
 24596                           ;usb_device.c: 369: }
 24597                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24598  01378A  0E08               	movlw	8
 24599  01378C  0100               	movlb	0	; () banked
 24600  01378E  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24601  013790  0E0D               	movlw	13
 24602  013792  0100               	movlb	0	; () banked
 24603  013794  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24604                           
 24605                           ; BSR set to: 0
 24606                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 24607  013796  0E16               	movlw	22
 24608  013798  010F               	movlb	15	; () banked
 24609  01379A  6F26               	movwf	38,b	;volatile
 24610                           
 24611                           ; BSR set to: 15
 24612                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24613  01379C  0E0D               	movlw	13
 24614  01379E  010D               	movlb	13	; () banked
 24615  0137A0  6F03               	movwf	3,b	;volatile
 24616  0137A2  0E30               	movlw	48
 24617  0137A4  6F02               	movwf	2,b	;volatile
 24618                           
 24619                           ; BSR set to: 13
 24620                           ;usb_device.c: 377: BDT[0].CNT = 8;
 24621  0137A6  0E08               	movlw	8
 24622  0137A8  010D               	movlb	13	; () banked
 24623  0137AA  6F01               	movwf	1,b	;volatile
 24624                           
 24625                           ; BSR set to: 13
 24626                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 24627  0137AC  0E04               	movlw	4
 24628  0137AE  010D               	movlb	13	; () banked
 24629  0137B0  6F00               	movwf	0,b	;volatile
 24630                           
 24631                           ; BSR set to: 13
 24632                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 24633  0137B2  010D               	movlb	13	; () banked
 24634  0137B4  8F00               	bsf	0,7,b	;volatile
 24635                           
 24636                           ; BSR set to: 13
 24637                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 24638  0137B6  0E00               	movlw	0
 24639  0137B8  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 24640                           
 24641                           ; BSR set to: 13
 24642                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 24643  0137BA  0E00               	movlw	0
 24644  0137BC  6E13               	movwf	_USBDeviceState,c	;volatile
 24645                           
 24646                           ; BSR set to: 13
 24647  0137BE  0012               	return		;funcret
 24648  0137C0                     __end_ofi2_USBDeviceInit:
 24649                           	opt stack 0
 24650                           pclatu	equ	0xFFB
 24651                           pclath	equ	0xFFA
 24652                           tblptru	equ	0xFF8
 24653                           tblptrh	equ	0xFF7
 24654                           tblptrl	equ	0xFF6
 24655                           tablat	equ	0xFF5
 24656                           prodh	equ	0xFF4
 24657                           prodl	equ	0xFF3
 24658                           intcon	equ	0xFF2
 24659                           intcon2	equ	0xFF1
 24660                           postinc0	equ	0xFEE
 24661                           fsr0h	equ	0xFEA
 24662                           fsr0l	equ	0xFE9
 24663                           wreg	equ	0xFE8
 24664                           indf1	equ	0xFE7
 24665                           postinc1	equ	0xFE6
 24666                           postdec1	equ	0xFE5
 24667                           fsr1h	equ	0xFE2
 24668                           fsr1l	equ	0xFE1
 24669                           indf2	equ	0xFDF
 24670                           postinc2	equ	0xFDE
 24671                           postdec2	equ	0xFDD
 24672                           plusw2	equ	0xFDB
 24673                           fsr2h	equ	0xFDA
 24674                           fsr2l	equ	0xFD9
 24675                           status	equ	0xFD8
 24676                           
 24677 ;; *************** function _USBWakeFromSuspend *****************
 24678 ;; Defined at:
 24679 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 24680 ;; Parameters:    Size  Location     Type
 24681 ;;		None
 24682 ;; Auto vars:     Size  Location     Type
 24683 ;;		None
 24684 ;; Return value:  Size  Location     Type
 24685 ;;		None               void
 24686 ;; Registers used:
 24687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24688 ;; Tracked objects:
 24689 ;;		On entry : 0/0
 24690 ;;		On exit  : 0/0
 24691 ;;		Unchanged: 0/0
 24692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24697 ;;Total ram usage:        0 bytes
 24698 ;; Hardware stack levels used:    1
 24699 ;; Hardware stack levels required when called:    5
 24700 ;; This function calls:
 24701 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24702 ;; This function is called by:
 24703 ;;		_USBDeviceTasks
 24704 ;; This function uses a non-reentrant model
 24705 ;;
 24706                           
 24707                           	psect	text105
 24708  01694C                     __ptext105:
 24709                           	opt stack 0
 24710  01694C                     _USBWakeFromSuspend:
 24711                           	opt stack 13
 24712                           
 24713                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 24714                           
 24715                           ; BSR set to: 13
 24716                           ;incstack = 0
 24717  01694C  0E00               	movlw	0
 24718  01694E  0101               	movlb	1	; () banked
 24719  016950  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24720                           
 24721                           ; BSR set to: 1
 24722                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24723  016952  0E00               	movlw	0
 24724  016954  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24725  016956  0E74               	movlw	116
 24726  016958  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24727  01695A  0E00               	movlw	0
 24728  01695C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24729  01695E  0E00               	movlw	0
 24730  016960  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24731  016962  0E00               	movlw	0
 24732  016964  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24733  016966  0E00               	movlw	0
 24734  016968  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24735  01696A  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24736                           
 24737                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 24738  01696E  9265               	bcf	3941,1,c	;volatile
 24739                           
 24740                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 24741  016970  010F               	movlb	15	; () banked
 24742  016972  9536               	bcf	54,2,b	;volatile
 24743                           
 24744                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 24745  016974  D001               	goto	i2l8298
 24746  016976                     i2l8296:
 24747                           
 24748                           ;usb_device.c: 2343: {
 24749                           ;usb_device.c: 2344: (UIR &= 0xFB);
 24750  016976  9462               	bcf	3938,2,c	;volatile
 24751  016978                     i2l8298:
 24752  016978  A462               	btfss	3938,2,c	;volatile
 24753  01697A  0012               	return	
 24754  01697C  D7FC               	goto	i2l8296
 24755  01697E                     __end_of_USBWakeFromSuspend:
 24756                           	opt stack 0
 24757                           pclatu	equ	0xFFB
 24758                           pclath	equ	0xFFA
 24759                           tblptru	equ	0xFF8
 24760                           tblptrh	equ	0xFF7
 24761                           tblptrl	equ	0xFF6
 24762                           tablat	equ	0xFF5
 24763                           prodh	equ	0xFF4
 24764                           prodl	equ	0xFF3
 24765                           intcon	equ	0xFF2
 24766                           intcon2	equ	0xFF1
 24767                           postinc0	equ	0xFEE
 24768                           fsr0h	equ	0xFEA
 24769                           fsr0l	equ	0xFE9
 24770                           wreg	equ	0xFE8
 24771                           indf1	equ	0xFE7
 24772                           postinc1	equ	0xFE6
 24773                           postdec1	equ	0xFE5
 24774                           fsr1h	equ	0xFE2
 24775                           fsr1l	equ	0xFE1
 24776                           indf2	equ	0xFDF
 24777                           postinc2	equ	0xFDE
 24778                           postdec2	equ	0xFDD
 24779                           plusw2	equ	0xFDB
 24780                           fsr2h	equ	0xFDA
 24781                           fsr2l	equ	0xFD9
 24782                           status	equ	0xFD8
 24783                           
 24784 ;; *************** function _USBSuspend *****************
 24785 ;; Defined at:
 24786 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 24787 ;; Parameters:    Size  Location     Type
 24788 ;;		None
 24789 ;; Auto vars:     Size  Location     Type
 24790 ;;		None
 24791 ;; Return value:  Size  Location     Type
 24792 ;;		None               void
 24793 ;; Registers used:
 24794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24795 ;; Tracked objects:
 24796 ;;		On entry : 0/0
 24797 ;;		On exit  : 0/0
 24798 ;;		Unchanged: 0/0
 24799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24804 ;;Total ram usage:        0 bytes
 24805 ;; Hardware stack levels used:    1
 24806 ;; Hardware stack levels required when called:    5
 24807 ;; This function calls:
 24808 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24809 ;; This function is called by:
 24810 ;;		_USBDeviceTasks
 24811 ;; This function uses a non-reentrant model
 24812 ;;
 24813                           
 24814                           	psect	text106
 24815  016A60                     __ptext106:
 24816                           	opt stack 0
 24817  016A60                     _USBSuspend:
 24818                           	opt stack 13
 24819                           
 24820                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 24821                           
 24822                           ;incstack = 0
 24823  016A60  010F               	movlb	15	; () banked
 24824  016A62  8536               	bsf	54,2,b	;volatile
 24825                           
 24826                           ; BSR set to: 15
 24827                           ;usb_device.c: 2272: (UIR &= 0xEF);
 24828  016A64  9862               	bcf	3938,4,c	;volatile
 24829                           
 24830                           ; BSR set to: 15
 24831                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 24832  016A66  8265               	bsf	3941,1,c	;volatile
 24833                           
 24834                           ; BSR set to: 15
 24835                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 24836  016A68  0E01               	movlw	1
 24837  016A6A  0101               	movlb	1	; () banked
 24838  016A6C  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24839                           
 24840                           ; BSR set to: 1
 24841                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24842  016A6E  0E00               	movlw	0
 24843  016A70  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24844  016A72  0E75               	movlw	117
 24845  016A74  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24846  016A76  0E00               	movlw	0
 24847  016A78  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24848  016A7A  0E00               	movlw	0
 24849  016A7C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24850  016A7E  0E00               	movlw	0
 24851  016A80  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24852  016A82  0E00               	movlw	0
 24853  016A84  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24854  016A86  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24855  016A8A  0012               	return		;funcret
 24856  016A8C                     __end_of_USBSuspend:
 24857                           	opt stack 0
 24858                           pclatu	equ	0xFFB
 24859                           pclath	equ	0xFFA
 24860                           tblptru	equ	0xFF8
 24861                           tblptrh	equ	0xFF7
 24862                           tblptrl	equ	0xFF6
 24863                           tablat	equ	0xFF5
 24864                           prodh	equ	0xFF4
 24865                           prodl	equ	0xFF3
 24866                           intcon	equ	0xFF2
 24867                           intcon2	equ	0xFF1
 24868                           postinc0	equ	0xFEE
 24869                           fsr0h	equ	0xFEA
 24870                           fsr0l	equ	0xFE9
 24871                           wreg	equ	0xFE8
 24872                           indf1	equ	0xFE7
 24873                           postinc1	equ	0xFE6
 24874                           postdec1	equ	0xFE5
 24875                           fsr1h	equ	0xFE2
 24876                           fsr1l	equ	0xFE1
 24877                           indf2	equ	0xFDF
 24878                           postinc2	equ	0xFDE
 24879                           postdec2	equ	0xFDD
 24880                           plusw2	equ	0xFDB
 24881                           fsr2h	equ	0xFDA
 24882                           fsr2l	equ	0xFD9
 24883                           status	equ	0xFD8
 24884                           
 24885 ;; *************** function _USBStallHandler *****************
 24886 ;; Defined at:
 24887 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 24888 ;; Parameters:    Size  Location     Type
 24889 ;;		None
 24890 ;; Auto vars:     Size  Location     Type
 24891 ;;		None
 24892 ;; Return value:  Size  Location     Type
 24893 ;;		None               void
 24894 ;; Registers used:
 24895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24896 ;; Tracked objects:
 24897 ;;		On entry : 0/0
 24898 ;;		On exit  : 0/0
 24899 ;;		Unchanged: 0/0
 24900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24905 ;;Total ram usage:        1 bytes
 24906 ;; Hardware stack levels used:    1
 24907 ;; This function calls:
 24908 ;;		Nothing
 24909 ;; This function is called by:
 24910 ;;		_USBDeviceTasks
 24911 ;; This function uses a non-reentrant model
 24912 ;;
 24913                           
 24914                           	psect	text107
 24915  0166C6                     __ptext107:
 24916                           	opt stack 0
 24917  0166C6                     _USBStallHandler:
 24918                           	opt stack 18
 24919                           
 24920                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 24921                           
 24922                           ;incstack = 0
 24923  0166C6  010F               	movlb	15	; () banked
 24924  0166C8  A126               	btfss	38,0,b	;volatile
 24925  0166CA  D01E               	goto	i2l308
 24926                           
 24927                           ; BSR set to: 15
 24928                           ;usb_device.c: 2216: {
 24929                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24930  0166CC  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24931  0166D0  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24932  0166D4  0E80               	movlw	128
 24933  0166D6  18DE               	xorwf	postinc2,w,c
 24934  0166D8  A4D8               	btfss	status,2,c
 24935  0166DA  D014               	goto	i2l8320
 24936                           
 24937                           ; BSR set to: 15
 24938  0166DC  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 24939  0166E0  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24940  0166E4  0E84               	movlw	132
 24941  0166E6  18DE               	xorwf	postinc2,w,c
 24942  0166E8  A4D8               	btfss	status,2,c
 24943  0166EA  D00C               	goto	i2l8320
 24944                           
 24945                           ; BSR set to: 15
 24946                           ;usb_device.c: 2219: {
 24947                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24948  0166EC  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24949  0166F0  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24950  0166F4  0E0C               	movlw	12
 24951  0166F6  6EDF               	movwf	indf2,c
 24952                           
 24953                           ; BSR set to: 15
 24954                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24955  0166F8  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24956  0166FC  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24957  016700  0E00               	movlw	0
 24958  016702  8EDB               	bsf	plusw2,7,c
 24959  016704                     i2l8320:
 24960                           
 24961                           ; BSR set to: 15
 24962                           ;usb_device.c: 2223: }
 24963                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 24964  016704  010F               	movlb	15	; () banked
 24965  016706  9126               	bcf	38,0,b	;volatile
 24966  016708                     i2l308:
 24967                           
 24968                           ; BSR set to: 15
 24969                           ;usb_device.c: 2225: }
 24970                           ;usb_device.c: 2227: (UIR &= 0xDF);
 24971  016708  9A62               	bcf	3938,5,c	;volatile
 24972                           
 24973                           ; BSR set to: 15
 24974  01670A  0012               	return		;funcret
 24975  01670C                     __end_of_USBStallHandler:
 24976                           	opt stack 0
 24977                           pclatu	equ	0xFFB
 24978                           pclath	equ	0xFFA
 24979                           tblptru	equ	0xFF8
 24980                           tblptrh	equ	0xFF7
 24981                           tblptrl	equ	0xFF6
 24982                           tablat	equ	0xFF5
 24983                           prodh	equ	0xFF4
 24984                           prodl	equ	0xFF3
 24985                           intcon	equ	0xFF2
 24986                           intcon2	equ	0xFF1
 24987                           postinc0	equ	0xFEE
 24988                           fsr0h	equ	0xFEA
 24989                           fsr0l	equ	0xFE9
 24990                           wreg	equ	0xFE8
 24991                           indf1	equ	0xFE7
 24992                           postinc1	equ	0xFE6
 24993                           postdec1	equ	0xFE5
 24994                           fsr1h	equ	0xFE2
 24995                           fsr1l	equ	0xFE1
 24996                           indf2	equ	0xFDF
 24997                           postinc2	equ	0xFDE
 24998                           postdec2	equ	0xFDD
 24999                           plusw2	equ	0xFDB
 25000                           fsr2h	equ	0xFDA
 25001                           fsr2l	equ	0xFD9
 25002                           status	equ	0xFD8
 25003                           
 25004 ;; *************** function _USBCtrlEPService *****************
 25005 ;; Defined at:
 25006 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 25007 ;; Parameters:    Size  Location     Type
 25008 ;;		None
 25009 ;; Auto vars:     Size  Location     Type
 25010 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 25011 ;; Return value:  Size  Location     Type
 25012 ;;		None               void
 25013 ;; Registers used:
 25014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25015 ;; Tracked objects:
 25016 ;;		On entry : 0/0
 25017 ;;		On exit  : 0/0
 25018 ;;		Unchanged: 0/0
 25019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25024 ;;Total ram usage:        3 bytes
 25025 ;; Hardware stack levels used:    1
 25026 ;; Hardware stack levels required when called:    8
 25027 ;; This function calls:
 25028 ;;		_USBCtrlTrfInHandler
 25029 ;;		_USBCtrlTrfOutHandler
 25030 ;;		_USBCtrlTrfSetupHandler
 25031 ;; This function is called by:
 25032 ;;		_USBDeviceTasks
 25033 ;; This function uses a non-reentrant model
 25034 ;;
 25035                           
 25036                           	psect	text108
 25037  014F2A                     __ptext108:
 25038                           	opt stack 0
 25039  014F2A                     _USBCtrlEPService:
 25040                           	opt stack 10
 25041                           
 25042                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 25043                           
 25044                           ; BSR set to: 15
 25045                           ;incstack = 0
 25046  014F2A  0E2D               	movlw	45
 25047  014F2C  6E16               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25048                           
 25049                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 25050  014F2E  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25051  014F32  0EFD               	movlw	253
 25052  014F34  1647               	andwf	??_USBCtrlEPService,f,c
 25053  014F36  A4D8               	btfss	status,2,c
 25054  014F38  D057               	goto	i2l8354
 25055                           
 25056                           ;usb_device.c: 2381: {
 25057                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25058  014F3A  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25059  014F3E  90D8               	bcf	status,0,c
 25060  014F40  3247               	rrcf	??_USBCtrlEPService,f,c
 25061  014F42  0E3F               	movlw	63
 25062  014F44  1647               	andwf	??_USBCtrlEPService,f,c
 25063  014F46  5047               	movf	??_USBCtrlEPService,w,c
 25064  014F48  0D04               	mullw	4
 25065  014F4A  0E00               	movlw	0
 25066  014F4C  24F3               	addwf	prodl,w,c
 25067  014F4E  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 25068  014F50  0E0D               	movlw	13
 25069  014F52  20F4               	addwfc	prodh,w,c
 25070  014F54  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25071                           
 25072                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25073  014F56  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25074  014F5A  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25075                           
 25076                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25077  014F5E  0E04               	movlw	4
 25078  014F60  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 25079                           
 25080                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25081  014F62  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25082  014F66  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25083  014F6A  30DF               	rrcf	indf2,w,c
 25084  014F6C  32E8               	rrcf	wreg,f,c
 25085  014F6E  0B0F               	andlw	15
 25086  014F70  0A0D               	xorlw	13
 25087  014F72  A4D8               	btfss	status,2,c
 25088  014F74  D036               	goto	i2l8352
 25089                           
 25090                           ;usb_device.c: 2398: {
 25091                           ;usb_device.c: 2399: unsigned char setup_cnt;
 25092                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25093  014F76  0E00               	movlw	0
 25094  014F78  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 25095  014F7A                     i2l8336:
 25096  014F7A  0E07               	movlw	7
 25097  014F7C  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25098  014F7E  D001               	goto	i2l8340
 25099  014F80  D023               	goto	i2l8348
 25100  014F82                     i2l8340:
 25101                           
 25102                           ;usb_device.c: 2406: {
 25103                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25104  014F82  EE20 F002          	lfsr	2,2
 25105  014F86  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25106  014F88  26D9               	addwf	fsr2l,f,c
 25107  014F8A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25108  014F8C  22DA               	addwfc	fsr2h,f,c
 25109  014F8E  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 25110  014F92  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 25111  014F96  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25112  014F9A  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25113  014F9E  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 25114  014FA0  0D01               	mullw	1
 25115  014FA2  0E30               	movlw	48
 25116  014FA4  24F3               	addwf	prodl,w,c
 25117  014FA6  6EE1               	movwf	fsr1l,c
 25118  014FA8  0E0D               	movlw	13
 25119  014FAA  20F4               	addwfc	prodh,w,c
 25120  014FAC  6EE2               	movwf	fsr1h,c
 25121  014FAE  CFDF FFE7          	movff	indf2,indf1
 25122                           
 25123                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 25124  014FB2  EE20 F002          	lfsr	2,2
 25125  014FB6  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25126  014FB8  26D9               	addwf	fsr2l,f,c
 25127  014FBA  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25128  014FBC  22DA               	addwfc	fsr2h,f,c
 25129  014FBE  2ADE               	incf	postinc2,f,c
 25130  014FC0  0E00               	movlw	0
 25131  014FC2  22DD               	addwfc	postdec2,f,c
 25132  014FC4  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25133  014FC6  D7D9               	goto	i2l8336
 25134  014FC8                     i2l8348:
 25135                           
 25136                           ;usb_device.c: 2409: }
 25137                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25138  014FC8  EE20 F002          	lfsr	2,2
 25139  014FCC  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25140  014FCE  26D9               	addwf	fsr2l,f,c
 25141  014FD0  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25142  014FD2  22DA               	addwfc	fsr2h,f,c
 25143  014FD4  0E30               	movlw	48
 25144  014FD6  6EDE               	movwf	postinc2,c
 25145  014FD8  0E0D               	movlw	13
 25146  014FDA  6EDD               	movwf	postdec2,c
 25147                           
 25148                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 25149  014FDC  EC16  F0AE         	call	_USBCtrlTrfSetupHandler	;wreg free
 25150                           
 25151                           ;usb_device.c: 2414: }
 25152  014FE0  0012               	return	
 25153  014FE2                     i2l8352:
 25154                           
 25155                           ;usb_device.c: 2415: else
 25156                           ;usb_device.c: 2416: {
 25157                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 25158  014FE2  EC68  F0B2         	call	_USBCtrlTrfOutHandler	;wreg free
 25159                           
 25160                           ;usb_device.c: 2419: }
 25161                           ;usb_device.c: 2420: }
 25162  014FE6  0012               	return	
 25163  014FE8                     i2l8354:
 25164                           
 25165                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 25166  014FE8  502C               	movf	_USTATcopy,w,c	;volatile
 25167  014FEA  0BFD               	andlw	253
 25168  014FEC  0A04               	xorlw	4
 25169  014FEE  A4D8               	btfss	status,2,c
 25170  014FF0  0012               	return	
 25171                           
 25172                           ;usb_device.c: 2422: {
 25173                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 25174  014FF2  ECC4  F0A8         	call	_USBCtrlTrfInHandler	;wreg free
 25175  014FF6  0012               	return	
 25176  014FF8                     __end_of_USBCtrlEPService:
 25177                           	opt stack 0
 25178                           pclatu	equ	0xFFB
 25179                           pclath	equ	0xFFA
 25180                           tblptru	equ	0xFF8
 25181                           tblptrh	equ	0xFF7
 25182                           tblptrl	equ	0xFF6
 25183                           tablat	equ	0xFF5
 25184                           prodh	equ	0xFF4
 25185                           prodl	equ	0xFF3
 25186                           intcon	equ	0xFF2
 25187                           intcon2	equ	0xFF1
 25188                           postinc0	equ	0xFEE
 25189                           fsr0h	equ	0xFEA
 25190                           fsr0l	equ	0xFE9
 25191                           wreg	equ	0xFE8
 25192                           indf1	equ	0xFE7
 25193                           postinc1	equ	0xFE6
 25194                           postdec1	equ	0xFE5
 25195                           fsr1h	equ	0xFE2
 25196                           fsr1l	equ	0xFE1
 25197                           indf2	equ	0xFDF
 25198                           postinc2	equ	0xFDE
 25199                           postdec2	equ	0xFDD
 25200                           plusw2	equ	0xFDB
 25201                           fsr2h	equ	0xFDA
 25202                           fsr2l	equ	0xFD9
 25203                           status	equ	0xFD8
 25204                           
 25205 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25206 ;; Defined at:
 25207 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 25208 ;; Parameters:    Size  Location     Type
 25209 ;;		None
 25210 ;; Auto vars:     Size  Location     Type
 25211 ;;		None
 25212 ;; Return value:  Size  Location     Type
 25213 ;;		None               void
 25214 ;; Registers used:
 25215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25216 ;; Tracked objects:
 25217 ;;		On entry : 0/0
 25218 ;;		On exit  : 0/0
 25219 ;;		Unchanged: 0/0
 25220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25225 ;;Total ram usage:        0 bytes
 25226 ;; Hardware stack levels used:    1
 25227 ;; Hardware stack levels required when called:    7
 25228 ;; This function calls:
 25229 ;;		_USBCheckStdRequest
 25230 ;;		_USBCtrlEPServiceComplete
 25231 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25232 ;; This function is called by:
 25233 ;;		_USBCtrlEPService
 25234 ;; This function uses a non-reentrant model
 25235 ;;
 25236                           
 25237                           	psect	text109
 25238  015C2C                     __ptext109:
 25239                           	opt stack 0
 25240  015C2C                     _USBCtrlTrfSetupHandler:
 25241                           	opt stack 10
 25242                           
 25243                           ;usb_device.c: 2475: shortPacketStatus = 0;
 25244                           
 25245                           ;incstack = 0
 25246  015C2C  0E00               	movlw	0
 25247  015C2E  6E21               	movwf	_shortPacketStatus,c	;volatile
 25248                           
 25249                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 25250  015C30  0E00               	movlw	0
 25251  015C32  6E12               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25252                           
 25253                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 25254  015C34  0E00               	movlw	0
 25255  015C36  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25256                           
 25257                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 25258  015C38  0E00               	movlw	0
 25259  015C3A  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25260                           
 25261                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 25262  015C3C  0E00               	movlw	0
 25263  015C3E  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25264                           
 25265                           ;usb_device.c: 2480: controlTransferState = 0;
 25266  015C40  0E00               	movlw	0
 25267  015C42  6E1B               	movwf	_controlTransferState,c	;volatile
 25268                           
 25269                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25270  015C44  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25271  015C48  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25272  015C4C  0E7F               	movlw	127
 25273  015C4E  16DF               	andwf	indf2,f,c
 25274                           
 25275                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25276  015C50  0E04               	movlw	4
 25277  015C52  0100               	movlb	0	; () banked
 25278  015C54  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25279                           
 25280                           ; BSR set to: 0
 25281                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25282  015C56  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25283  015C5A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25284  015C5E  0E7F               	movlw	127
 25285  015C60  16DF               	andwf	indf2,f,c
 25286                           
 25287                           ; BSR set to: 0
 25288                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25289  015C62  0E04               	movlw	4
 25290  015C64  0100               	movlb	0	; () banked
 25291  015C66  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25292                           
 25293                           ; BSR set to: 0
 25294                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25295  015C68  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25296  015C6C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25297  015C70  0E7F               	movlw	127
 25298  015C72  16DF               	andwf	indf2,f,c
 25299                           
 25300                           ; BSR set to: 0
 25301                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 25302  015C74  0E00               	movlw	0
 25303  015C76  0100               	movlb	0	; () banked
 25304  015C78  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25305                           
 25306                           ; BSR set to: 0
 25307                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 25308  015C7A  0E00               	movlw	0
 25309  015C7C  0100               	movlb	0	; () banked
 25310  015C7E  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25311  015C80  0E00               	movlw	0
 25312  015C82  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25313                           
 25314                           ; BSR set to: 0
 25315                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 25316  015C84  0E00               	movlw	0
 25317  015C86  0100               	movlb	0	; () banked
 25318  015C88  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25319                           
 25320                           ; BSR set to: 0
 25321                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 25322  015C8A  0E00               	movlw	0
 25323  015C8C  0100               	movlb	0	; () banked
 25324  015C8E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25325  015C90  0E00               	movlw	0
 25326  015C92  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25327                           
 25328                           ; BSR set to: 0
 25329                           ;usb_device.c: 2504: USBCheckStdRequest();
 25330  015C94  EC23  F0A1         	call	_USBCheckStdRequest	;wreg free
 25331                           
 25332                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25333  015C98  0E00               	movlw	0
 25334  015C9A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25335  015C9C  0E03               	movlw	3
 25336  015C9E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25337  015CA0  0E00               	movlw	0
 25338  015CA2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25339  015CA4  0E00               	movlw	0
 25340  015CA6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25341  015CA8  0E00               	movlw	0
 25342  015CAA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25343  015CAC  0E00               	movlw	0
 25344  015CAE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25345  015CB0  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25346                           
 25347                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 25348  015CB4  EC30  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25349  015CB8  0012               	return		;funcret
 25350  015CBA                     __end_of_USBCtrlTrfSetupHandler:
 25351                           	opt stack 0
 25352                           pclatu	equ	0xFFB
 25353                           pclath	equ	0xFFA
 25354                           tblptru	equ	0xFF8
 25355                           tblptrh	equ	0xFF7
 25356                           tblptrl	equ	0xFF6
 25357                           tablat	equ	0xFF5
 25358                           prodh	equ	0xFF4
 25359                           prodl	equ	0xFF3
 25360                           intcon	equ	0xFF2
 25361                           intcon2	equ	0xFF1
 25362                           postinc0	equ	0xFEE
 25363                           fsr0h	equ	0xFEA
 25364                           fsr0l	equ	0xFE9
 25365                           wreg	equ	0xFE8
 25366                           indf1	equ	0xFE7
 25367                           postinc1	equ	0xFE6
 25368                           postdec1	equ	0xFE5
 25369                           fsr1h	equ	0xFE2
 25370                           fsr1l	equ	0xFE1
 25371                           indf2	equ	0xFDF
 25372                           postinc2	equ	0xFDE
 25373                           postdec2	equ	0xFDD
 25374                           plusw2	equ	0xFDB
 25375                           fsr2h	equ	0xFDA
 25376                           fsr2l	equ	0xFD9
 25377                           status	equ	0xFD8
 25378                           
 25379 ;; *************** function _USBCtrlEPServiceComplete *****************
 25380 ;; Defined at:
 25381 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 25382 ;; Parameters:    Size  Location     Type
 25383 ;;		None
 25384 ;; Auto vars:     Size  Location     Type
 25385 ;;		None
 25386 ;; Return value:  Size  Location     Type
 25387 ;;		None               void
 25388 ;; Registers used:
 25389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25399 ;;Total ram usage:        0 bytes
 25400 ;; Hardware stack levels used:    1
 25401 ;; Hardware stack levels required when called:    2
 25402 ;; This function calls:
 25403 ;;		_USBCtrlEPAllowDataStage
 25404 ;;		_USBCtrlEPAllowStatusStage
 25405 ;; This function is called by:
 25406 ;;		_USBCtrlTrfSetupHandler
 25407 ;; This function uses a non-reentrant model
 25408 ;;
 25409                           
 25410                           	psect	text110
 25411  014060                     __ptext110:
 25412                           	opt stack 0
 25413  014060                     _USBCtrlEPServiceComplete:
 25414                           	opt stack 14
 25415                           
 25416                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 25417                           
 25418                           ;incstack = 0
 25419  014060  9865               	bcf	3941,4,c	;volatile
 25420                           
 25421                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 25422  014062  0100               	movlb	0	; () banked
 25423  014064  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25424  014066  D039               	goto	i2l232
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;usb_device.c: 1630: {
 25428                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 25429  014068  0100               	movlb	0	; () banked
 25430  01406A  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25431  01406C  D00B               	goto	i2l7618
 25432                           
 25433                           ; BSR set to: 0
 25434                           ;usb_device.c: 1632: {
 25435                           ;usb_device.c: 1633: controlTransferState = 2;
 25436  01406E  0E02               	movlw	2
 25437  014070  6E1B               	movwf	_controlTransferState,c	;volatile
 25438                           
 25439                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 25440  014072  5011               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25441  014074  B4D8               	btfsc	status,2,c
 25442                           
 25443                           ; BSR set to: 0
 25444                           ;usb_device.c: 1645: {
 25445                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 25446  014076  EC0D  F0AC         	call	_USBCtrlEPAllowDataStage	;wreg free
 25447                           
 25448                           ;usb_device.c: 1647: }
 25449                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 25450  01407A  0E00               	movlw	0
 25451  01407C  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25452                           
 25453                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 25454  01407E  0E00               	movlw	0
 25455  014080  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25456                           
 25457                           ;usb_device.c: 1653: }
 25458  014082  0012               	return	
 25459  014084                     i2l7618:
 25460                           
 25461                           ;usb_device.c: 1654: else
 25462                           ;usb_device.c: 1655: {
 25463                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 25464  014084  EE20 F001          	lfsr	2,1
 25465  014088  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25466  01408A  26D9               	addwf	fsr2l,f,c
 25467  01408C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25468  01408E  22DA               	addwfc	fsr2h,f,c
 25469  014090  0E08               	movlw	8
 25470  014092  6EDF               	movwf	indf2,c
 25471                           
 25472                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25473  014094  EE20 F002          	lfsr	2,2
 25474  014098  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25475  01409A  26D9               	addwf	fsr2l,f,c
 25476  01409C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25477  01409E  22DA               	addwfc	fsr2h,f,c
 25478  0140A0  0E30               	movlw	48
 25479  0140A2  6EDE               	movwf	postinc2,c
 25480  0140A4  0E0D               	movlw	13
 25481  0140A6  6EDD               	movwf	postdec2,c
 25482                           
 25483                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25484  0140A8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25485  0140AC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25486  0140B0  0E0C               	movlw	12
 25487  0140B2  6EDF               	movwf	indf2,c
 25488                           
 25489                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25490  0140B4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25491  0140B8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25492  0140BC  0E00               	movlw	0
 25493  0140BE  8EDB               	bsf	plusw2,7,c
 25494                           
 25495                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 25496  0140C0  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25497  0140C4  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25498  0140C8  0E04               	movlw	4
 25499  0140CA  6EDF               	movwf	indf2,c
 25500                           
 25501                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25502  0140CC  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25503  0140D0  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25504  0140D4  0E00               	movlw	0
 25505  0140D6  8EDB               	bsf	plusw2,7,c
 25506                           
 25507                           ;usb_device.c: 1666: }
 25508                           ;usb_device.c: 1667: }
 25509  0140D8  0012               	return	
 25510  0140DA                     i2l232:
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;usb_device.c: 1668: else
 25514                           ;usb_device.c: 1669: {
 25515                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 25516  0140DA  010D               	movlb	13	; () banked
 25517  0140DC  AF30               	btfss	48,7,b	;volatile
 25518  0140DE  D010               	goto	i2l7638
 25519                           
 25520                           ; BSR set to: 13
 25521                           ;usb_device.c: 1671: {
 25522                           ;usb_device.c: 1672: controlTransferState = 1;
 25523  0140E0  0E01               	movlw	1
 25524  0140E2  6E1B               	movwf	_controlTransferState,c	;volatile
 25525                           
 25526                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 25527  0140E4  5010               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25528  0140E6  B4D8               	btfsc	status,2,c
 25529                           
 25530                           ; BSR set to: 13
 25531                           ;usb_device.c: 1687: {
 25532                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 25533  0140E8  EC0D  F0AC         	call	_USBCtrlEPAllowDataStage	;wreg free
 25534                           
 25535                           ;usb_device.c: 1689: }
 25536                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 25537  0140EC  0E00               	movlw	0
 25538  0140EE  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25539                           
 25540                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 25541  0140F0  0E00               	movlw	0
 25542  0140F2  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25543                           
 25544                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 25545  0140F4  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25546  0140F6  A4D8               	btfss	status,2,c
 25547  0140F8  0012               	return	
 25548                           
 25549                           ;usb_device.c: 1714: {
 25550                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 25551  0140FA  EC62  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25552                           
 25553                           ;usb_device.c: 1716: }
 25554                           ;usb_device.c: 1717: }
 25555  0140FE  0012               	return	
 25556  014100                     i2l7638:
 25557                           
 25558                           ;usb_device.c: 1718: else
 25559                           ;usb_device.c: 1719: {
 25560                           ;usb_device.c: 1730: controlTransferState = 2;
 25561  014100  0E02               	movlw	2
 25562  014102  6E1B               	movwf	_controlTransferState,c	;volatile
 25563                           
 25564                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 25565  014104  EE20 F001          	lfsr	2,1
 25566  014108  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25567  01410A  26D9               	addwf	fsr2l,f,c
 25568  01410C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25569  01410E  22DA               	addwfc	fsr2h,f,c
 25570  014110  0E08               	movlw	8
 25571  014112  6EDF               	movwf	indf2,c
 25572                           
 25573                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25574  014114  EE20 F002          	lfsr	2,2
 25575  014118  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25576  01411A  26D9               	addwf	fsr2l,f,c
 25577  01411C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25578  01411E  22DA               	addwfc	fsr2h,f,c
 25579  014120  0E30               	movlw	48
 25580  014122  6EDE               	movwf	postinc2,c
 25581  014124  0E0D               	movlw	13
 25582  014126  6EDD               	movwf	postdec2,c
 25583                           
 25584                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25585  014128  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25586  01412C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25587  014130  0E04               	movlw	4
 25588  014132  6EDF               	movwf	indf2,c
 25589                           
 25590                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25591  014134  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25592  014138  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25593  01413C  0E00               	movlw	0
 25594  01413E  8EDB               	bsf	plusw2,7,c
 25595                           
 25596                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 25597  014140  0E00               	movlw	0
 25598  014142  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25599                           
 25600                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 25601  014144  0E00               	movlw	0
 25602  014146  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25603                           
 25604                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 25605  014148  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25606  01414A  A4D8               	btfss	status,2,c
 25607  01414C  0012               	return	
 25608                           
 25609                           ;usb_device.c: 1742: {
 25610                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 25611  01414E  EC62  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25612  014152  0012               	return	
 25613  014154                     __end_of_USBCtrlEPServiceComplete:
 25614                           	opt stack 0
 25615                           pclatu	equ	0xFFB
 25616                           pclath	equ	0xFFA
 25617                           tblptru	equ	0xFF8
 25618                           tblptrh	equ	0xFF7
 25619                           tblptrl	equ	0xFF6
 25620                           tablat	equ	0xFF5
 25621                           prodh	equ	0xFF4
 25622                           prodl	equ	0xFF3
 25623                           intcon	equ	0xFF2
 25624                           intcon2	equ	0xFF1
 25625                           postinc0	equ	0xFEE
 25626                           fsr0h	equ	0xFEA
 25627                           fsr0l	equ	0xFE9
 25628                           wreg	equ	0xFE8
 25629                           indf1	equ	0xFE7
 25630                           postinc1	equ	0xFE6
 25631                           postdec1	equ	0xFE5
 25632                           fsr1h	equ	0xFE2
 25633                           fsr1l	equ	0xFE1
 25634                           indf2	equ	0xFDF
 25635                           postinc2	equ	0xFDE
 25636                           postdec2	equ	0xFDD
 25637                           plusw2	equ	0xFDB
 25638                           fsr2h	equ	0xFDA
 25639                           fsr2l	equ	0xFD9
 25640                           status	equ	0xFD8
 25641                           
 25642 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25643 ;; Defined at:
 25644 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;		None
 25647 ;; Auto vars:     Size  Location     Type
 25648 ;;		None
 25649 ;; Return value:  Size  Location     Type
 25650 ;;		None               void
 25651 ;; Registers used:
 25652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25653 ;; Tracked objects:
 25654 ;;		On entry : 0/0
 25655 ;;		On exit  : 0/0
 25656 ;;		Unchanged: 0/0
 25657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25662 ;;Total ram usage:        0 bytes
 25663 ;; Hardware stack levels used:    1
 25664 ;; Hardware stack levels required when called:    1
 25665 ;; This function calls:
 25666 ;;		_USBCtrlTrfTxService
 25667 ;; This function is called by:
 25668 ;;		_USBCtrlEPServiceComplete
 25669 ;; This function uses a non-reentrant model
 25670 ;;
 25671                           
 25672                           	psect	text111
 25673  01581A                     __ptext111:
 25674                           	opt stack 0
 25675  01581A                     _USBCtrlEPAllowDataStage:
 25676                           	opt stack 14
 25677                           
 25678                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 25679                           
 25680                           ;incstack = 0
 25681  01581A  0E00               	movlw	0
 25682  01581C  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25683                           
 25684                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 25685  01581E  0E00               	movlw	0
 25686  015820  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25687                           
 25688                           ;usb_device.c: 1494: if(controlTransferState == 2)
 25689  015822  0E02               	movlw	2
 25690  015824  181B               	xorwf	_controlTransferState,w,c	;volatile
 25691  015826  A4D8               	btfss	status,2,c
 25692  015828  D01F               	goto	i2l7140
 25693                           
 25694                           ;usb_device.c: 1495: {
 25695                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 25696  01582A  EE20 F001          	lfsr	2,1
 25697  01582E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25698  015830  26D9               	addwf	fsr2l,f,c
 25699  015832  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25700  015834  22DA               	addwfc	fsr2h,f,c
 25701  015836  0E08               	movlw	8
 25702  015838  6EDF               	movwf	indf2,c
 25703                           
 25704                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25705  01583A  EE20 F002          	lfsr	2,2
 25706  01583E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25707  015840  26D9               	addwf	fsr2l,f,c
 25708  015842  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25709  015844  22DA               	addwfc	fsr2h,f,c
 25710  015846  0E38               	movlw	56
 25711  015848  6EDE               	movwf	postinc2,c
 25712  01584A  0E0D               	movlw	13
 25713  01584C  6EDD               	movwf	postdec2,c
 25714                           
 25715                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25716  01584E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25717  015852  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25718  015856  0E48               	movlw	72
 25719  015858  6EDF               	movwf	indf2,c
 25720                           
 25721                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25722  01585A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25723  01585E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25724  015862  0E00               	movlw	0
 25725  015864  8EDB               	bsf	plusw2,7,c
 25726                           
 25727                           ;usb_device.c: 1501: }
 25728  015866  0012               	return	
 25729  015868                     i2l7140:
 25730                           
 25731                           ;usb_device.c: 1502: else
 25732                           ;usb_device.c: 1503: {
 25733                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25734  015868  0100               	movlb	0	; () banked
 25735  01586A  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25736  01586C  010D               	movlb	13	; () banked
 25737  01586E  5D36               	subwf	54,w,b	;volatile
 25738  015870  0100               	movlb	0	; () banked
 25739  015872  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25740  015874  010D               	movlb	13	; () banked
 25741  015876  5937               	subwfb	55,w,b	;volatile
 25742  015878  B0D8               	btfsc	status,0,c
 25743  01587A  D004               	goto	i2l7144
 25744                           
 25745                           ; BSR set to: 13
 25746                           ;usb_device.c: 1507: {
 25747                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 25748  01587C  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 25749  015880  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 25750  015884                     i2l7144:
 25751                           
 25752                           ; BSR set to: 13
 25753                           ;usb_device.c: 1509: }
 25754                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 25755  015884  EC67  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 25756                           
 25757                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25758  015888  0100               	movlb	0	; () banked
 25759  01588A  EE20 F002          	lfsr	2,2
 25760  01588E  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 25761  015890  26D9               	addwf	fsr2l,f,c
 25762  015892  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25763  015894  22DA               	addwfc	fsr2h,f,c
 25764  015896  0E38               	movlw	56
 25765  015898  6EDE               	movwf	postinc2,c
 25766  01589A  0E0D               	movlw	13
 25767  01589C  6EDD               	movwf	postdec2,c
 25768                           
 25769                           ; BSR set to: 0
 25770                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25771  01589E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25772  0158A2  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25773  0158A6  0E48               	movlw	72
 25774  0158A8  6EDF               	movwf	indf2,c
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25778  0158AA  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25779  0158AE  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25780  0158B2  0E00               	movlw	0
 25781  0158B4  8EDB               	bsf	plusw2,7,c
 25782  0158B6  0012               	return	
 25783  0158B8                     __end_of_USBCtrlEPAllowDataStage:
 25784                           	opt stack 0
 25785                           pclatu	equ	0xFFB
 25786                           pclath	equ	0xFFA
 25787                           tblptru	equ	0xFF8
 25788                           tblptrh	equ	0xFF7
 25789                           tblptrl	equ	0xFF6
 25790                           tablat	equ	0xFF5
 25791                           prodh	equ	0xFF4
 25792                           prodl	equ	0xFF3
 25793                           intcon	equ	0xFF2
 25794                           intcon2	equ	0xFF1
 25795                           postinc0	equ	0xFEE
 25796                           fsr0h	equ	0xFEA
 25797                           fsr0l	equ	0xFE9
 25798                           wreg	equ	0xFE8
 25799                           indf1	equ	0xFE7
 25800                           postinc1	equ	0xFE6
 25801                           postdec1	equ	0xFE5
 25802                           fsr1h	equ	0xFE2
 25803                           fsr1l	equ	0xFE1
 25804                           indf2	equ	0xFDF
 25805                           postinc2	equ	0xFDE
 25806                           postdec2	equ	0xFDD
 25807                           plusw2	equ	0xFDB
 25808                           fsr2h	equ	0xFDA
 25809                           fsr2l	equ	0xFD9
 25810                           status	equ	0xFD8
 25811                           
 25812 ;; *************** function _USBCheckStdRequest *****************
 25813 ;; Defined at:
 25814 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 25815 ;; Parameters:    Size  Location     Type
 25816 ;;		None
 25817 ;; Auto vars:     Size  Location     Type
 25818 ;;		None
 25819 ;; Return value:  Size  Location     Type
 25820 ;;		None               void
 25821 ;; Registers used:
 25822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25823 ;; Tracked objects:
 25824 ;;		On entry : 0/0
 25825 ;;		On exit  : 0/0
 25826 ;;		Unchanged: 0/0
 25827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25832 ;;Total ram usage:        0 bytes
 25833 ;; Hardware stack levels used:    1
 25834 ;; Hardware stack levels required when called:    6
 25835 ;; This function calls:
 25836 ;;		_USBStdFeatureReqHandler
 25837 ;;		_USBStdGetDscHandler
 25838 ;;		_USBStdGetStatusHandler
 25839 ;;		_USBStdSetCfgHandler
 25840 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25841 ;; This function is called by:
 25842 ;;		_USBCtrlTrfSetupHandler
 25843 ;; This function uses a non-reentrant model
 25844 ;;
 25845                           
 25846                           	psect	text112
 25847  014246                     __ptext112:
 25848                           	opt stack 0
 25849  014246                     _USBCheckStdRequest:
 25850                           	opt stack 10
 25851                           
 25852                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 25853                           
 25854                           ;incstack = 0
 25855  014246  010D               	movlb	13	; () banked
 25856  014248  3930               	swapf	48,w,b	;volatile
 25857  01424A  32E8               	rrcf	wreg,f,c
 25858  01424C  0B03               	andlw	3
 25859  01424E  0900               	iorlw	0
 25860  014250  A4D8               	btfss	status,2,c
 25861  014252  0012               	return	
 25862  014254  D04F               	goto	i2l7736
 25863  014256                     i2l359:
 25864                           
 25865                           ; BSR set to: 13
 25866                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 25867  014256  0100               	movlb	0	; () banked
 25868  014258  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25869                           
 25870                           ; BSR set to: 0
 25871                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 25872  01425A  0E08               	movlw	8
 25873  01425C  6E13               	movwf	_USBDeviceState,c	;volatile
 25874                           
 25875                           ;usb_device.c: 2700: break;
 25876  01425E  0012               	return	
 25877  014260                     i2l7706:
 25878                           
 25879                           ;usb_device.c: 2702: USBStdGetDscHandler();
 25880  014260  ECF5  F099         	call	_USBStdGetDscHandler	;wreg free
 25881                           
 25882                           ;usb_device.c: 2703: break;
 25883  014264  0012               	return	
 25884  014266                     i2l7708:
 25885                           
 25886                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 25887  014266  EC86  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 25888                           
 25889                           ;usb_device.c: 2706: break;
 25890  01426A  0012               	return	
 25891  01426C                     i2l7710:
 25892                           
 25893                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25894  01426C  0E2B               	movlw	low _USBActiveConfiguration
 25895  01426E  0100               	movlb	0	; () banked
 25896  014270  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25897  014272  0E00               	movlw	high _USBActiveConfiguration
 25898  014274  0100               	movlb	0	; () banked
 25899  014276  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25900                           
 25901                           ; BSR set to: 0
 25902                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25903  014278  0100               	movlb	0	; () banked
 25904  01427A  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25905                           
 25906                           ; BSR set to: 0
 25907                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 25908  01427C  0E01               	movlw	1
 25909  01427E  0100               	movlb	0	; () banked
 25910  014280  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 25914  014282  0100               	movlb	0	; () banked
 25915  014284  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25916                           
 25917                           ;usb_device.c: 2712: break;
 25918  014286  0012               	return	
 25919  014288                     i2l7718:
 25920                           
 25921                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 25922  014288  EC02  F0AB         	call	_USBStdGetStatusHandler	;wreg free
 25923                           
 25924                           ;usb_device.c: 2715: break;
 25925  01428C  0012               	return	
 25926  01428E                     i2l7720:
 25927                           
 25928                           ;usb_device.c: 2717: case 3:
 25929                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 25930  01428E  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 25931                           
 25932                           ;usb_device.c: 2719: break;
 25933  014292  0012               	return	
 25934  014294                     i2l7722:
 25935                           
 25936                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25937  014294  010D               	movlb	13	; () banked
 25938  014296  5134               	movf	52,w,b	;volatile
 25939  014298  0D01               	mullw	1
 25940  01429A  0E90               	movlw	low _USBAlternateInterface
 25941  01429C  24F3               	addwf	prodl,w,c
 25942  01429E  0100               	movlb	0	; () banked
 25943  0142A0  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25944  0142A2  0E01               	movlw	high _USBAlternateInterface
 25945  0142A4  20F4               	addwfc	prodh,w,c
 25946  0142A6  0100               	movlb	0	; () banked
 25947  0142A8  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25948                           
 25949                           ; BSR set to: 0
 25950                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25951  0142AA  0100               	movlb	0	; () banked
 25952  0142AC  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25953                           
 25954                           ; BSR set to: 0
 25955                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 25956  0142AE  0E01               	movlw	1
 25957  0142B0  0100               	movlb	0	; () banked
 25958  0142B2  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25959                           
 25960                           ; BSR set to: 0
 25961                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 25962  0142B4  0100               	movlb	0	; () banked
 25963  0142B6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25964                           
 25965                           ;usb_device.c: 2725: break;
 25966  0142B8  0012               	return	
 25967  0142BA                     i2l368:
 25968                           
 25969                           ; BSR set to: 13
 25970                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 25971  0142BA  0100               	movlb	0	; () banked
 25972  0142BC  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25973                           
 25974                           ; BSR set to: 0
 25975                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25976  0142BE  010D               	movlb	13	; () banked
 25977  0142C0  5134               	movf	52,w,b	;volatile
 25978  0142C2  0D01               	mullw	1
 25979  0142C4  0E90               	movlw	low _USBAlternateInterface
 25980  0142C6  24F3               	addwf	prodl,w,c
 25981  0142C8  6ED9               	movwf	fsr2l,c
 25982  0142CA  0E01               	movlw	high _USBAlternateInterface
 25983  0142CC  20F4               	addwfc	prodh,w,c
 25984  0142CE  6EDA               	movwf	fsr2h,c
 25985  0142D0  CD32 FFDF          	movff	3378,indf2	;volatile
 25986                           
 25987                           ;usb_device.c: 2729: break;
 25988  0142D4  0012               	return	
 25989  0142D6                     i2l7732:
 25990                           
 25991                           ; BSR set to: 13
 25992                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25993  0142D6  0E00               	movlw	0
 25994  0142D8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25995  0142DA  0E02               	movlw	2
 25996  0142DC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25997  0142DE  0E00               	movlw	0
 25998  0142E0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25999  0142E2  0E00               	movlw	0
 26000  0142E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26001  0142E6  0E00               	movlw	0
 26002  0142E8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26003  0142EA  0E00               	movlw	0
 26004  0142EC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26005  0142EE  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26006                           
 26007                           ;usb_device.c: 2736: }
 26008                           
 26009                           ;usb_device.c: 2735: break;
 26010                           
 26011                           ;usb_device.c: 2734: default:
 26012                           
 26013                           ;usb_device.c: 2733: case 12:
 26014                           
 26015                           ;usb_device.c: 2732: break;
 26016  0142F2  0012               	return	
 26017  0142F4                     i2l7736:
 26018  0142F4  010D               	movlb	13	; () banked
 26019  0142F6  5131               	movf	49,w,b	;volatile
 26020                           
 26021                           ; Switch size 1, requested type "space"
 26022                           ; Number of cases is 11, Range of values is 0 to 12
 26023                           ; switch strategies available:
 26024                           ; Name         Instructions Cycles
 26025                           ; simple_byte           34    18 (average)
 26026                           ;	Chosen strategy is simple_byte
 26027  0142F8  0A00               	xorlw	0	; case 0
 26028  0142FA  B4D8               	btfsc	status,2,c
 26029  0142FC  D7C5               	goto	i2l7718
 26030  0142FE  0A01               	xorlw	1	; case 1
 26031  014300  B4D8               	btfsc	status,2,c
 26032  014302  D7C5               	goto	i2l7720
 26033  014304  0A02               	xorlw	2	; case 3
 26034  014306  B4D8               	btfsc	status,2,c
 26035  014308  D7C2               	goto	i2l7720
 26036  01430A  0A06               	xorlw	6	; case 5
 26037  01430C  B4D8               	btfsc	status,2,c
 26038  01430E  D7A3               	goto	i2l359
 26039  014310  0A03               	xorlw	3	; case 6
 26040  014312  B4D8               	btfsc	status,2,c
 26041  014314  D7A5               	goto	i2l7706
 26042  014316  0A01               	xorlw	1	; case 7
 26043  014318  B4D8               	btfsc	status,2,c
 26044  01431A  D7DD               	goto	i2l7732
 26045  01431C  0A0F               	xorlw	15	; case 8
 26046  01431E  B4D8               	btfsc	status,2,c
 26047  014320  D7A5               	goto	i2l7710
 26048  014322  0A01               	xorlw	1	; case 9
 26049  014324  B4D8               	btfsc	status,2,c
 26050  014326  D79F               	goto	i2l7708
 26051  014328  0A03               	xorlw	3	; case 10
 26052  01432A  B4D8               	btfsc	status,2,c
 26053  01432C  D7B3               	goto	i2l7722
 26054  01432E  0A01               	xorlw	1	; case 11
 26055  014330  B4D8               	btfsc	status,2,c
 26056  014332  D7C3               	goto	i2l368
 26057  014334  0A07               	xorlw	7	; case 12
 26058  014336  0012               	return	
 26059  014338                     __end_of_USBCheckStdRequest:
 26060                           	opt stack 0
 26061                           pclatu	equ	0xFFB
 26062                           pclath	equ	0xFFA
 26063                           tblptru	equ	0xFF8
 26064                           tblptrh	equ	0xFF7
 26065                           tblptrl	equ	0xFF6
 26066                           tablat	equ	0xFF5
 26067                           prodh	equ	0xFF4
 26068                           prodl	equ	0xFF3
 26069                           intcon	equ	0xFF2
 26070                           intcon2	equ	0xFF1
 26071                           postinc0	equ	0xFEE
 26072                           fsr0h	equ	0xFEA
 26073                           fsr0l	equ	0xFE9
 26074                           wreg	equ	0xFE8
 26075                           indf1	equ	0xFE7
 26076                           postinc1	equ	0xFE6
 26077                           postdec1	equ	0xFE5
 26078                           fsr1h	equ	0xFE2
 26079                           fsr1l	equ	0xFE1
 26080                           indf2	equ	0xFDF
 26081                           postinc2	equ	0xFDE
 26082                           postdec2	equ	0xFDD
 26083                           plusw2	equ	0xFDB
 26084                           fsr2h	equ	0xFDA
 26085                           fsr2l	equ	0xFD9
 26086                           status	equ	0xFD8
 26087                           
 26088 ;; *************** function _USBStdSetCfgHandler *****************
 26089 ;; Defined at:
 26090 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 26091 ;; Parameters:    Size  Location     Type
 26092 ;;		None
 26093 ;; Auto vars:     Size  Location     Type
 26094 ;;  i               1   20[COMRAM] unsigned char 
 26095 ;; Return value:  Size  Location     Type
 26096 ;;		None               void
 26097 ;; Registers used:
 26098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26099 ;; Tracked objects:
 26100 ;;		On entry : 0/0
 26101 ;;		On exit  : 0/0
 26102 ;;		Unchanged: 0/0
 26103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26108 ;;Total ram usage:        1 bytes
 26109 ;; Hardware stack levels used:    1
 26110 ;; Hardware stack levels required when called:    5
 26111 ;; This function calls:
 26112 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26113 ;;		i2_memset
 26114 ;; This function is called by:
 26115 ;;		_USBCheckStdRequest
 26116 ;; This function uses a non-reentrant model
 26117 ;;
 26118                           
 26119                           	psect	text113
 26120  01450C                     __ptext113:
 26121                           	opt stack 0
 26122  01450C                     _USBStdSetCfgHandler:
 26123                           	opt stack 10
 26124                           
 26125                           ;usb_device.c: 1971: uint8_t i;
 26126                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 26127                           
 26128                           ;incstack = 0
 26129  01450C  0100               	movlb	0	; () banked
 26130  01450E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26131                           
 26132                           ; BSR set to: 0
 26133                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 26134  014510  0E27               	movlw	39
 26135  014512  6E2D               	movwf	i2memset@p1,c
 26136  014514  0E0F               	movlw	15
 26137  014516  6E2E               	movwf	i2memset@p1+1,c
 26138  014518  0E00               	movlw	0
 26139  01451A  6E30               	movwf	i2memset@c+1,c
 26140  01451C  0E00               	movlw	0
 26141  01451E  6E2F               	movwf	i2memset@c,c
 26142  014520  0E00               	movlw	0
 26143  014522  6E32               	movwf	i2memset@n+1,c
 26144  014524  0E02               	movlw	2
 26145  014526  6E31               	movwf	i2memset@n,c
 26146  014528  EC46  F0B5         	call	i2_memset	;wreg free
 26147                           
 26148                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26149  01452C  0E00               	movlw	0
 26150  01452E  6E2D               	movwf	i2memset@p1,c
 26151  014530  0E0D               	movlw	13
 26152  014532  6E2E               	movwf	i2memset@p1+1,c
 26153  014534  0E00               	movlw	0
 26154  014536  6E30               	movwf	i2memset@c+1,c
 26155  014538  0E00               	movlw	0
 26156  01453A  6E2F               	movwf	i2memset@c,c
 26157  01453C  0E00               	movlw	0
 26158  01453E  6E32               	movwf	i2memset@n+1,c
 26159  014540  0E30               	movlw	48
 26160  014542  6E31               	movwf	i2memset@n,c
 26161  014544  EC46  F0B5         	call	i2_memset	;wreg free
 26162                           
 26163                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 26164  014548  8C65               	bsf	3941,6,c	;volatile
 26165                           
 26166                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 26167  01454A  0E00               	movlw	0
 26168  01454C  6E41               	movwf	USBStdSetCfgHandler@i,c
 26169  01454E                     i2l7160:
 26170  01454E  0E02               	movlw	2
 26171  014550  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26172  014552  D001               	goto	i2l7164
 26173  014554  D016               	goto	i2l7170
 26174  014556                     i2l7164:
 26175                           
 26176                           ;usb_device.c: 1989: {
 26177                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 26178  014556  5041               	movf	USBStdSetCfgHandler@i,w,c
 26179  014558  0D01               	mullw	1
 26180  01455A  0E01               	movlw	low _ep_data_in
 26181  01455C  24F3               	addwf	prodl,w,c
 26182  01455E  6ED9               	movwf	fsr2l,c
 26183  014560  0E00               	movlw	high _ep_data_in
 26184  014562  20F4               	addwfc	prodh,w,c
 26185  014564  6EDA               	movwf	fsr2h,c
 26186  014566  0E00               	movlw	0
 26187  014568  6EDF               	movwf	indf2,c
 26188                           
 26189                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 26190  01456A  5041               	movf	USBStdSetCfgHandler@i,w,c
 26191  01456C  0D01               	mullw	1
 26192  01456E  0E04               	movlw	low _ep_data_out
 26193  014570  24F3               	addwf	prodl,w,c
 26194  014572  6ED9               	movwf	fsr2l,c
 26195  014574  0E00               	movlw	high _ep_data_out
 26196  014576  20F4               	addwfc	prodh,w,c
 26197  014578  6EDA               	movwf	fsr2h,c
 26198  01457A  0E00               	movlw	0
 26199  01457C  6EDF               	movwf	indf2,c
 26200  01457E  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26201  014580  D7E6               	goto	i2l7160
 26202  014582                     i2l7170:
 26203                           
 26204                           ;usb_device.c: 1992: }
 26205                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 26206  014582  0E90               	movlw	low _USBAlternateInterface
 26207  014584  6E2D               	movwf	i2memset@p1,c
 26208  014586  0E01               	movlw	high _USBAlternateInterface
 26209  014588  6E2E               	movwf	i2memset@p1+1,c
 26210  01458A  0E00               	movlw	0
 26211  01458C  6E30               	movwf	i2memset@c+1,c
 26212  01458E  0E00               	movlw	0
 26213  014590  6E2F               	movwf	i2memset@c,c
 26214  014592  0E00               	movlw	0
 26215  014594  6E32               	movwf	i2memset@n+1,c
 26216  014596  0E02               	movlw	2
 26217  014598  6E31               	movwf	i2memset@n,c
 26218  01459A  EC46  F0B5         	call	i2_memset	;wreg free
 26219                           
 26220                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 26221  01459E  9C65               	bcf	3941,6,c	;volatile
 26222                           
 26223                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26224  0145A0  0E08               	movlw	8
 26225  0145A2  0100               	movlb	0	; () banked
 26226  0145A4  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26227  0145A6  0E0D               	movlw	13
 26228  0145A8  0100               	movlb	0	; () banked
 26229  0145AA  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26230                           
 26231                           ; BSR set to: 0
 26232                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26233  0145AC  0E00               	movlw	0
 26234  0145AE  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26235  0145B0  0E0D               	movlw	13
 26236  0145B2  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26237                           
 26238                           ; BSR set to: 0
 26239                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26240  0145B4  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26241  0145B8  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26242                           
 26243                           ; BSR set to: 0
 26244                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26245  0145BC  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26246                           
 26247                           ; BSR set to: 0
 26248                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 26249  0145C0  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26250  0145C2  A4D8               	btfss	status,2,c
 26251  0145C4  D003               	goto	i2l7186
 26252                           
 26253                           ; BSR set to: 0
 26254                           ;usb_device.c: 2011: {
 26255                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 26256  0145C6  0E10               	movlw	16
 26257  0145C8  6E13               	movwf	_USBDeviceState,c	;volatile
 26258                           
 26259                           ;usb_device.c: 2014: }
 26260  0145CA  0012               	return	
 26261  0145CC                     i2l7186:
 26262                           
 26263                           ; BSR set to: 0
 26264                           ;usb_device.c: 2015: else
 26265                           ;usb_device.c: 2016: {
 26266                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26267  0145CC  0E00               	movlw	0
 26268  0145CE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26269  0145D0  0E01               	movlw	1
 26270  0145D2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26271  0145D4  0E2B               	movlw	low _USBActiveConfiguration
 26272  0145D6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26273  0145D8  0E00               	movlw	high _USBActiveConfiguration
 26274  0145DA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26275  0145DC  0E00               	movlw	0
 26276  0145DE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26277  0145E0  0E01               	movlw	1
 26278  0145E2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26279  0145E4  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26280                           
 26281                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 26282  0145E8  0E20               	movlw	32
 26283  0145EA  6E13               	movwf	_USBDeviceState,c	;volatile
 26284  0145EC  0012               	return	
 26285  0145EE                     __end_of_USBStdSetCfgHandler:
 26286                           	opt stack 0
 26287                           pclatu	equ	0xFFB
 26288                           pclath	equ	0xFFA
 26289                           tblptru	equ	0xFF8
 26290                           tblptrh	equ	0xFF7
 26291                           tblptrl	equ	0xFF6
 26292                           tablat	equ	0xFF5
 26293                           prodh	equ	0xFF4
 26294                           prodl	equ	0xFF3
 26295                           intcon	equ	0xFF2
 26296                           intcon2	equ	0xFF1
 26297                           postinc0	equ	0xFEE
 26298                           fsr0h	equ	0xFEA
 26299                           fsr0l	equ	0xFE9
 26300                           wreg	equ	0xFE8
 26301                           indf1	equ	0xFE7
 26302                           postinc1	equ	0xFE6
 26303                           postdec1	equ	0xFE5
 26304                           fsr1h	equ	0xFE2
 26305                           fsr1l	equ	0xFE1
 26306                           indf2	equ	0xFDF
 26307                           postinc2	equ	0xFDE
 26308                           postdec2	equ	0xFDD
 26309                           plusw2	equ	0xFDB
 26310                           fsr2h	equ	0xFDA
 26311                           fsr2l	equ	0xFD9
 26312                           status	equ	0xFD8
 26313                           
 26314 ;; *************** function i2_memset *****************
 26315 ;; Defined at:
 26316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26317 ;; Parameters:    Size  Location     Type
 26318 ;;  p1              2    0[COMRAM] PTR void 
 26319 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26320 ;;  c               2    2[COMRAM] int 
 26321 ;;  n               2    4[COMRAM] unsigned int 
 26322 ;; Auto vars:     Size  Location     Type
 26323 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26324 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26325 ;; Return value:  Size  Location     Type
 26326 ;;                  2    0[COMRAM] PTR void 
 26327 ;; Registers used:
 26328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26329 ;; Tracked objects:
 26330 ;;		On entry : 0/0
 26331 ;;		On exit  : 0/0
 26332 ;;		Unchanged: 0/0
 26333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26334 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26337 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26338 ;;Total ram usage:        8 bytes
 26339 ;; Hardware stack levels used:    1
 26340 ;; This function calls:
 26341 ;;		Nothing
 26342 ;; This function is called by:
 26343 ;;		_USBStdSetCfgHandler
 26344 ;;		i2_USBDeviceInit
 26345 ;; This function uses a non-reentrant model
 26346 ;;
 26347                           
 26348                           	psect	text114
 26349  016A8C                     __ptext114:
 26350                           	opt stack 0
 26351  016A8C                     i2_memset:
 26352                           	opt stack 17
 26353                           
 26354                           ;incstack = 0
 26355  016A8C  C02D  F033         	movff	i2memset@p1,i2memset@p
 26356  016A90  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26357  016A94  D008               	goto	i2l7094
 26358  016A96                     i2l7090:
 26359  016A96  C033  FFD9         	movff	i2memset@p,fsr2l
 26360  016A9A  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26361  016A9E  C02F  FFDF         	movff	i2memset@c,indf2
 26362  016AA2  4A33               	infsnz	i2memset@p,f,c
 26363  016AA4  2A34               	incf	i2memset@p+1,f,c
 26364  016AA6                     i2l7094:
 26365  016AA6  0631               	decf	i2memset@n,f,c
 26366  016AA8  A0D8               	btfss	status,0,c
 26367  016AAA  0632               	decf	i2memset@n+1,f,c
 26368  016AAC  2831               	incf	i2memset@n,w,c
 26369  016AAE  E1F3               	bnz	i2l7090
 26370  016AB0  2832               	incf	i2memset@n+1,w,c
 26371  016AB2  B4D8               	btfsc	status,2,c
 26372  016AB4  0012               	return	
 26373  016AB6  D7EF               	goto	i2l7090
 26374  016AB8                     __end_ofi2_memset:
 26375                           	opt stack 0
 26376                           pclatu	equ	0xFFB
 26377                           pclath	equ	0xFFA
 26378                           tblptru	equ	0xFF8
 26379                           tblptrh	equ	0xFF7
 26380                           tblptrl	equ	0xFF6
 26381                           tablat	equ	0xFF5
 26382                           prodh	equ	0xFF4
 26383                           prodl	equ	0xFF3
 26384                           intcon	equ	0xFF2
 26385                           intcon2	equ	0xFF1
 26386                           postinc0	equ	0xFEE
 26387                           fsr0h	equ	0xFEA
 26388                           fsr0l	equ	0xFE9
 26389                           wreg	equ	0xFE8
 26390                           indf1	equ	0xFE7
 26391                           postinc1	equ	0xFE6
 26392                           postdec1	equ	0xFE5
 26393                           fsr1h	equ	0xFE2
 26394                           fsr1l	equ	0xFE1
 26395                           indf2	equ	0xFDF
 26396                           postinc2	equ	0xFDE
 26397                           postdec2	equ	0xFDD
 26398                           plusw2	equ	0xFDB
 26399                           fsr2h	equ	0xFDA
 26400                           fsr2l	equ	0xFD9
 26401                           status	equ	0xFD8
 26402                           
 26403 ;; *************** function _USBStdGetStatusHandler *****************
 26404 ;; Defined at:
 26405 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 26406 ;; Parameters:    Size  Location     Type
 26407 ;;		None
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;  p               2    1[COMRAM] PTR struct __BDT
 26410 ;;		 -> NULL(0), BDT(48), 
 26411 ;; Return value:  Size  Location     Type
 26412 ;;		None               void
 26413 ;; Registers used:
 26414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26415 ;; Tracked objects:
 26416 ;;		On entry : 0/0
 26417 ;;		On exit  : 0/0
 26418 ;;		Unchanged: 0/0
 26419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26424 ;;Total ram usage:        3 bytes
 26425 ;; Hardware stack levels used:    1
 26426 ;; This function calls:
 26427 ;;		Nothing
 26428 ;; This function is called by:
 26429 ;;		_USBCheckStdRequest
 26430 ;; This function uses a non-reentrant model
 26431 ;;
 26432                           
 26433                           	psect	text115
 26434  015604                     __ptext115:
 26435                           	opt stack 0
 26436  015604                     _USBStdGetStatusHandler:
 26437                           	opt stack 15
 26438                           
 26439                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 26440                           
 26441                           ;incstack = 0
 26442  015604  0E00               	movlw	0
 26443  015606  010D               	movlb	13	; () banked
 26444  015608  6F38               	movwf	56,b	;volatile
 26445                           
 26446                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 26447  01560A  0E00               	movlw	0
 26448  01560C  010D               	movlb	13	; () banked
 26449  01560E  6F39               	movwf	57,b	;volatile
 26450                           
 26451                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 26452  015610  D03B               	goto	i2l7242
 26453  015612                     i2l295:
 26454                           
 26455                           ; BSR set to: 13
 26456                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 26457  015612  0100               	movlb	0	; () banked
 26458  015614  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26459                           
 26460                           ;usb_device.c: 2146: }
 26461                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 26462                           
 26463                           ; BSR set to: 13
 26464                           
 26465                           ; BSR set to: 0
 26466                           ;usb_device.c: 2144: {
 26467                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 26468                           
 26469                           ;usb_device.c: 2143: if(0 == 1)
 26470  015616  040F               	decf	_RemoteWakeup,w,c	;volatile
 26471  015618  A4D8               	btfss	status,2,c
 26472  01561A  D042               	goto	i2l298
 26473                           
 26474                           ;usb_device.c: 2149: {
 26475                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 26476  01561C  010D               	movlb	13	; () banked
 26477  01561E  8338               	bsf	56,1,b	;volatile
 26478                           
 26479                           ; BSR set to: 13
 26480                           ;usb_device.c: 2151: }
 26481                           ;usb_device.c: 2152: break;
 26482  015620  D03F               	goto	i2l298
 26483  015622                     i2l299:
 26484                           
 26485                           ; BSR set to: 13
 26486                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 26487  015622  0100               	movlb	0	; () banked
 26488  015624  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26489                           
 26490                           ;usb_device.c: 2155: break;
 26491  015626  D03C               	goto	i2l298
 26492  015628                     i2l300:
 26493                           
 26494                           ; BSR set to: 13
 26495                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 26496  015628  0100               	movlb	0	; () banked
 26497  01562A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26498                           
 26499                           ;usb_device.c: 2161: {
 26500                           ;usb_device.c: 2162: BDT_ENTRY *p;
 26501                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 26502  01562C  010D               	movlb	13	; () banked
 26503  01562E  BF34               	btfsc	52,7,b	;volatile
 26504  015630  D00B               	goto	i2l7232
 26505                           
 26506                           ; BSR set to: 13
 26507                           ;usb_device.c: 2165: {
 26508                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26509  015632  010D               	movlb	13	; () banked
 26510  015634  5134               	movf	52,w,b	;volatile
 26511  015636  0B0F               	andlw	15
 26512  015638  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26513  01563A  502D               	movf	??_USBStdGetStatusHandler,w,c
 26514  01563C  0D02               	mullw	2
 26515  01563E  0E00               	movlw	low _pBDTEntryOut
 26516  015640  24F3               	addwf	prodl,w,c
 26517  015642  6ED9               	movwf	fsr2l,c
 26518  015644  0E01               	movlw	high _pBDTEntryOut
 26519  015646  D00A               	goto	L8
 26520  015648                     i2l7232:
 26521                           
 26522                           ; BSR set to: 13
 26523                           ;usb_device.c: 2168: else
 26524                           ;usb_device.c: 2169: {
 26525                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26526  015648  010D               	movlb	13	; () banked
 26527  01564A  5134               	movf	52,w,b	;volatile
 26528  01564C  0B0F               	andlw	15
 26529  01564E  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26530  015650  502D               	movf	??_USBStdGetStatusHandler,w,c
 26531  015652  0D02               	mullw	2
 26532  015654  0EF5               	movlw	low _pBDTEntryIn
 26533  015656  24F3               	addwf	prodl,w,c
 26534  015658  6ED9               	movwf	fsr2l,c
 26535  01565A  0E00               	movlw	high _pBDTEntryIn
 26536  01565C                     L8:
 26537  01565C  20F4               	addwfc	prodh,w,c
 26538  01565E  6EDA               	movwf	fsr2h,c
 26539  015660  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26540  015664  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26541                           
 26542                           ; BSR set to: 13
 26543                           ;usb_device.c: 2171: }
 26544                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26545                           
 26546                           ; BSR set to: 13
 26547  015668  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26548  01566C  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26549  015670  AEDF               	btfss	indf2,7,c
 26550  015672  D016               	goto	i2l298
 26551                           
 26552                           ; BSR set to: 13
 26553  015674  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26554  015678  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26555  01567C  A4DF               	btfss	indf2,2,c
 26556  01567E  D010               	goto	i2l298
 26557                           
 26558                           ; BSR set to: 13
 26559                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 26560  015680  0E01               	movlw	1
 26561  015682  010D               	movlb	13	; () banked
 26562  015684  6F38               	movwf	56,b	;volatile
 26563                           
 26564                           ; BSR set to: 13
 26565                           ;usb_device.c: 2176: }
 26566                           ;usb_device.c: 2177: }
 26567                           
 26568                           ; BSR set to: 13
 26569                           ;usb_device.c: 2175: break;
 26570  015686  D00C               	goto	i2l298
 26571  015688                     i2l7242:
 26572                           
 26573                           ; BSR set to: 13
 26574  015688  010D               	movlb	13	; () banked
 26575  01568A  5130               	movf	48,w,b	;volatile
 26576  01568C  0B1F               	andlw	31
 26577                           
 26578                           ; Switch size 1, requested type "space"
 26579                           ; Number of cases is 3, Range of values is 0 to 2
 26580                           ; switch strategies available:
 26581                           ; Name         Instructions Cycles
 26582                           ; simple_byte           10     6 (average)
 26583                           ;	Chosen strategy is simple_byte
 26584  01568E  0A00               	xorlw	0	; case 0
 26585  015690  B4D8               	btfsc	status,2,c
 26586  015692  D7BF               	goto	i2l295
 26587  015694  0A01               	xorlw	1	; case 1
 26588  015696  B4D8               	btfsc	status,2,c
 26589  015698  D7C4               	goto	i2l299
 26590  01569A  0A03               	xorlw	3	; case 2
 26591  01569C  B4D8               	btfsc	status,2,c
 26592  01569E  D7C4               	goto	i2l300
 26593  0156A0                     i2l298:
 26594                           
 26595                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 26596  0156A0  0100               	movlb	0	; () banked
 26597  0156A2  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26598  0156A4  0012               	return	
 26599                           
 26600                           ; BSR set to: 0
 26601                           ;usb_device.c: 2180: {
 26602                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26603  0156A6  0E38               	movlw	56
 26604  0156A8  0100               	movlb	0	; () banked
 26605  0156AA  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26606  0156AC  0E0D               	movlw	13
 26607  0156AE  0100               	movlb	0	; () banked
 26608  0156B0  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26609                           
 26610                           ; BSR set to: 0
 26611                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26612  0156B2  0100               	movlb	0	; () banked
 26613  0156B4  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26614                           
 26615                           ; BSR set to: 0
 26616                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 26617  0156B6  0E02               	movlw	2
 26618  0156B8  0100               	movlb	0	; () banked
 26619  0156BA  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26620  0156BC  0012               	return	
 26621  0156BE                     __end_of_USBStdGetStatusHandler:
 26622                           	opt stack 0
 26623                           pclatu	equ	0xFFB
 26624                           pclath	equ	0xFFA
 26625                           tblptru	equ	0xFF8
 26626                           tblptrh	equ	0xFF7
 26627                           tblptrl	equ	0xFF6
 26628                           tablat	equ	0xFF5
 26629                           prodh	equ	0xFF4
 26630                           prodl	equ	0xFF3
 26631                           intcon	equ	0xFF2
 26632                           intcon2	equ	0xFF1
 26633                           postinc0	equ	0xFEE
 26634                           fsr0h	equ	0xFEA
 26635                           fsr0l	equ	0xFE9
 26636                           wreg	equ	0xFE8
 26637                           indf1	equ	0xFE7
 26638                           postinc1	equ	0xFE6
 26639                           postdec1	equ	0xFE5
 26640                           fsr1h	equ	0xFE2
 26641                           fsr1l	equ	0xFE1
 26642                           indf2	equ	0xFDF
 26643                           postinc2	equ	0xFDE
 26644                           postdec2	equ	0xFDD
 26645                           plusw2	equ	0xFDB
 26646                           fsr2h	equ	0xFDA
 26647                           fsr2l	equ	0xFD9
 26648                           status	equ	0xFD8
 26649                           
 26650 ;; *************** function _USBStdGetDscHandler *****************
 26651 ;; Defined at:
 26652 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 26653 ;; Parameters:    Size  Location     Type
 26654 ;;		None
 26655 ;; Auto vars:     Size  Location     Type
 26656 ;;		None
 26657 ;; Return value:  Size  Location     Type
 26658 ;;		None               void
 26659 ;; Registers used:
 26660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26661 ;; Tracked objects:
 26662 ;;		On entry : 0/0
 26663 ;;		On exit  : 0/0
 26664 ;;		Unchanged: 0/0
 26665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26670 ;;Total ram usage:        2 bytes
 26671 ;; Hardware stack levels used:    1
 26672 ;; This function calls:
 26673 ;;		Nothing
 26674 ;; This function is called by:
 26675 ;;		_USBCheckStdRequest
 26676 ;; This function uses a non-reentrant model
 26677 ;;
 26678                           
 26679                           	psect	text116
 26680  0133EA                     __ptext116:
 26681                           	opt stack 0
 26682  0133EA                     _USBStdGetDscHandler:
 26683                           	opt stack 15
 26684                           
 26685                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 26686                           
 26687                           ; BSR set to: 0
 26688                           ;incstack = 0
 26689  0133EA  0E80               	movlw	128
 26690  0133EC  010D               	movlb	13	; () banked
 26691  0133EE  1930               	xorwf	48,w,b	;volatile
 26692  0133F0  A4D8               	btfss	status,2,c
 26693  0133F2  0012               	return	
 26694                           
 26695                           ; BSR set to: 13
 26696                           ;usb_device.c: 2047: {
 26697                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26698  0133F4  0EC0               	movlw	192
 26699  0133F6  0100               	movlb	0	; () banked
 26700  0133F8  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26701                           
 26702                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 26703  0133FA  D092               	goto	i2l7220
 26704  0133FC                     i2l7194:
 26705                           
 26706                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26707  0133FC  0EC0               	movlw	low _device_dsc
 26708  0133FE  0100               	movlb	0	; () banked
 26709  013400  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26710  013402  0EFB               	movlw	high _device_dsc
 26711  013404  0100               	movlb	0	; () banked
 26712  013406  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26713                           
 26714                           ; BSR set to: 0
 26715                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 26716  013408  0E00               	movlw	0
 26717  01340A  0100               	movlb	0	; () banked
 26718  01340C  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26719  01340E  0E12               	movlw	18
 26720  013410  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26721                           
 26722                           ;usb_device.c: 2059: break;
 26723  013412  0012               	return	
 26724  013414                     i2l7198:
 26725                           
 26726                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 26727  013414  010D               	movlb	13	; () banked
 26728  013416  5132               	movf	50,w,b	;volatile
 26729  013418  A4D8               	btfss	status,2,c
 26730  01341A  D049               	goto	i2l7206
 26731                           
 26732                           ; BSR set to: 13
 26733                           ;usb_device.c: 2065: {
 26734                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26735  01341C  010D               	movlb	13	; () banked
 26736  01341E  5132               	movf	50,w,b	;volatile
 26737  013420  0D02               	mullw	2
 26738  013422  0E7F               	movlw	low _USB_CD_Ptr
 26739  013424  24F3               	addwf	prodl,w,c
 26740  013426  6EF6               	movwf	tblptrl,c
 26741  013428  0EFA               	movlw	high _USB_CD_Ptr
 26742  01342A  20F4               	addwfc	prodh,w,c
 26743  01342C  6EF7               	movwf	tblptrh,c
 26744  01342E                     	if	1	;There are 3 active tblptr bytes
 26745  01342E  6AF8               	clrf	tblptru,c
 26746  013430  0E00               	movlw	low (__mediumconst shr (0+16))
 26747  013432  22F8               	addwfc	tblptru,f,c
 26748  013434                     	endif
 26749  013434  0009               	tblrd		*+
 26750  013436  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26751  01343A  000A               	tblrd		*-
 26752  01343C  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26753                           
 26754                           ; BSR set to: 13
 26755                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26756  013440  0E02               	movlw	2
 26757  013442  0100               	movlb	0	; () banked
 26758  013444  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26759  013446  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26760  013448  0E00               	movlw	0
 26761  01344A  0100               	movlb	0	; () banked
 26762  01344C  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26763  01344E  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26764  013450  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26765  013454  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26766  013458  0E00               	movlw	low (__mediumconst shr (0+16))
 26767  01345A  6EF8               	movwf	tblptru,c
 26768  01345C  0E0E               	movlw	(high __ramtop+-1)
 26769  01345E  64F7               	cpfsgt	tblptrh,c
 26770  013460  D003               	bra	i2u639_47
 26771  013462  0008               	tblrd		*
 26772  013464  50F5               	movf	tablat,w,c
 26773  013466  D005               	bra	i2u639_40
 26774  013468                     i2u639_47:
 26775  013468  CFF6 FFE1          	movff	tblptrl,fsr1l
 26776  01346C  CFF7 FFE2          	movff	tblptrh,fsr1h
 26777  013470  50E7               	movf	indf1,w,c
 26778  013472                     i2u639_40:
 26779  013472  0100               	movlb	0	; () banked
 26780  013474  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26781                           
 26782                           ; BSR set to: 0
 26783                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26784  013476  0E03               	movlw	3
 26785  013478  0100               	movlb	0	; () banked
 26786  01347A  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26787  01347C  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26788  01347E  0E00               	movlw	0
 26789  013480  0100               	movlb	0	; () banked
 26790  013482  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26791  013484  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26792  013486  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26793  01348A  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26794  01348E  0E00               	movlw	low (__mediumconst shr (0+16))
 26795  013490  6EF8               	movwf	tblptru,c
 26796  013492  0E0E               	movlw	(high __ramtop+-1)
 26797  013494  64F7               	cpfsgt	tblptrh,c
 26798  013496  D003               	bra	i2u640_47
 26799  013498  0008               	tblrd		*
 26800  01349A  50F5               	movf	tablat,w,c
 26801  01349C  D005               	bra	i2u640_40
 26802  01349E                     i2u640_47:
 26803  01349E  CFF6 FFE1          	movff	tblptrl,fsr1l
 26804  0134A2  CFF7 FFE2          	movff	tblptrh,fsr1h
 26805  0134A6  50E7               	movf	indf1,w,c
 26806  0134A8                     i2u640_40:
 26807  0134A8  0100               	movlb	0	; () banked
 26808  0134AA  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26809                           
 26810                           ;usb_device.c: 2077: }
 26811  0134AC  0012               	return	
 26812  0134AE                     i2l7206:
 26813                           
 26814                           ;usb_device.c: 2078: else
 26815                           ;usb_device.c: 2079: {
 26816                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 26817  0134AE  0E00               	movlw	0
 26818  0134B0  0100               	movlb	0	; () banked
 26819  0134B2  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26820                           
 26821                           ; BSR set to: 0
 26822                           ;usb_device.c: 2081: }
 26823                           ;usb_device.c: 2082: break;
 26824  0134B4  0012               	return	
 26825  0134B6                     i2l7208:
 26826                           
 26827                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 26828  0134B6  0E03               	movlw	3
 26829  0134B8  010D               	movlb	13	; () banked
 26830  0134BA  6132               	cpfslt	50,b	;volatile
 26831  0134BC  D029               	goto	i2l7214
 26832                           
 26833                           ; BSR set to: 13
 26834                           ;usb_device.c: 2088: {
 26835                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26836  0134BE  010D               	movlb	13	; () banked
 26837  0134C0  5132               	movf	50,w,b	;volatile
 26838  0134C2  0D02               	mullw	2
 26839  0134C4  0E79               	movlw	low _USB_SD_Ptr
 26840  0134C6  24F3               	addwf	prodl,w,c
 26841  0134C8  6EF6               	movwf	tblptrl,c
 26842  0134CA  0EFA               	movlw	high _USB_SD_Ptr
 26843  0134CC  20F4               	addwfc	prodh,w,c
 26844  0134CE  6EF7               	movwf	tblptrh,c
 26845  0134D0                     	if	1	;There are 3 active tblptr bytes
 26846  0134D0  6AF8               	clrf	tblptru,c
 26847  0134D2  0E00               	movlw	low (__mediumconst shr (0+16))
 26848  0134D4  22F8               	addwfc	tblptru,f,c
 26849  0134D6                     	endif
 26850  0134D6  0009               	tblrd		*+
 26851  0134D8  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26852  0134DC  000A               	tblrd		*-
 26853  0134DE  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26854                           
 26855                           ; BSR set to: 13
 26856                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26857  0134E2  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 26858  0134E6  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26859  0134EA  0E00               	movlw	low (__mediumconst shr (0+16))
 26860  0134EC  6EF8               	movwf	tblptru,c
 26861  0134EE  0E0E               	movlw	(high __ramtop+-1)
 26862  0134F0  64F7               	cpfsgt	tblptrh,c
 26863  0134F2  D003               	bra	i2u642_47
 26864  0134F4  0008               	tblrd		*
 26865  0134F6  50F5               	movf	tablat,w,c
 26866  0134F8  D005               	bra	i2u642_40
 26867  0134FA                     i2u642_47:
 26868  0134FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 26869  0134FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 26870  013502  50E7               	movf	indf1,w,c
 26871  013504                     i2u642_40:
 26872  013504  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26873  013506  502D               	movf	??_USBStdGetDscHandler,w,c
 26874  013508  0100               	movlb	0	; () banked
 26875  01350A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26876  01350C  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26877                           
 26878                           ;usb_device.c: 2093: }
 26879  01350E  0012               	return	
 26880  013510                     i2l7214:
 26881                           
 26882                           ;usb_device.c: 2103: else
 26883                           ;usb_device.c: 2104: {
 26884                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 26885  013510  0E00               	movlw	0
 26886  013512  0100               	movlb	0	; () banked
 26887  013514  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26888                           
 26889                           ; BSR set to: 0
 26890                           ;usb_device.c: 2106: }
 26891                           ;usb_device.c: 2107: break;
 26892  013516  0012               	return	
 26893  013518                     i2l7216:
 26894                           
 26895                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 26896  013518  0E00               	movlw	0
 26897  01351A  0100               	movlb	0	; () banked
 26898  01351C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26899                           
 26900                           ; BSR set to: 0
 26901                           ;usb_device.c: 2111: }
 26902                           
 26903                           ;usb_device.c: 2110: break;
 26904  01351E  0012               	return	
 26905  013520                     i2l7220:
 26906                           
 26907                           ; BSR set to: 0
 26908  013520  010D               	movlb	13	; () banked
 26909  013522  5133               	movf	51,w,b	;volatile
 26910                           
 26911                           ; Switch size 1, requested type "space"
 26912                           ; Number of cases is 3, Range of values is 1 to 3
 26913                           ; switch strategies available:
 26914                           ; Name         Instructions Cycles
 26915                           ; simple_byte           10     6 (average)
 26916                           ;	Chosen strategy is simple_byte
 26917  013524  0A01               	xorlw	1	; case 1
 26918  013526  B4D8               	btfsc	status,2,c
 26919  013528  D769               	goto	i2l7194
 26920  01352A  0A03               	xorlw	3	; case 2
 26921  01352C  B4D8               	btfsc	status,2,c
 26922  01352E  D772               	goto	i2l7198
 26923  013530  0A01               	xorlw	1	; case 3
 26924  013532  B4D8               	btfsc	status,2,c
 26925  013534  D7C0               	goto	i2l7208
 26926  013536  D7F0               	goto	i2l7216
 26927  013538                     __end_of_USBStdGetDscHandler:
 26928                           	opt stack 0
 26929                           pclatu	equ	0xFFB
 26930                           pclath	equ	0xFFA
 26931                           tblptru	equ	0xFF8
 26932                           tblptrh	equ	0xFF7
 26933                           tblptrl	equ	0xFF6
 26934                           tablat	equ	0xFF5
 26935                           prodh	equ	0xFF4
 26936                           prodl	equ	0xFF3
 26937                           intcon	equ	0xFF2
 26938                           intcon2	equ	0xFF1
 26939                           postinc0	equ	0xFEE
 26940                           fsr0h	equ	0xFEA
 26941                           fsr0l	equ	0xFE9
 26942                           wreg	equ	0xFE8
 26943                           indf1	equ	0xFE7
 26944                           postinc1	equ	0xFE6
 26945                           postdec1	equ	0xFE5
 26946                           fsr1h	equ	0xFE2
 26947                           fsr1l	equ	0xFE1
 26948                           indf2	equ	0xFDF
 26949                           postinc2	equ	0xFDE
 26950                           postdec2	equ	0xFDD
 26951                           plusw2	equ	0xFDB
 26952                           fsr2h	equ	0xFDA
 26953                           fsr2l	equ	0xFD9
 26954                           status	equ	0xFD8
 26955                           
 26956 ;; *************** function _USBStdFeatureReqHandler *****************
 26957 ;; Defined at:
 26958 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 26959 ;; Parameters:    Size  Location     Type
 26960 ;;		None
 26961 ;; Auto vars:     Size  Location     Type
 26962 ;;  p               2   24[COMRAM] PTR struct __BDT
 26963 ;;		 -> NULL(0), BDT(48), 
 26964 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26965 ;;		 -> UEP0(1), 
 26966 ;;  current_ep_d    1   23[COMRAM] struct .
 26967 ;; Return value:  Size  Location     Type
 26968 ;;		None               void
 26969 ;; Registers used:
 26970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26971 ;; Tracked objects:
 26972 ;;		On entry : 0/0
 26973 ;;		On exit  : 0/0
 26974 ;;		Unchanged: 0/0
 26975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26977 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26980 ;;Total ram usage:        6 bytes
 26981 ;; Hardware stack levels used:    1
 26982 ;; Hardware stack levels required when called:    5
 26983 ;; This function calls:
 26984 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26985 ;; This function is called by:
 26986 ;;		_USBCheckStdRequest
 26987 ;; This function uses a non-reentrant model
 26988 ;;
 26989                           
 26990                           	psect	text117
 26991  011E44                     __ptext117:
 26992                           	opt stack 0
 26993  011E44                     _USBStdFeatureReqHandler:
 26994                           	opt stack 10
 26995                           
 26996                           ;usb_device.c: 2760: BDT_ENTRY *p;
 26997                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 26998                           ;usb_device.c: 2765: unsigned char* pUEP;
 26999                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 27000                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 27001                           
 27002                           ;incstack = 0
 27003  011E44  010D               	movlb	13	; () banked
 27004  011E46  0532               	decf	50,w,b	;volatile
 27005  011E48  A4D8               	btfss	status,2,c
 27006  011E4A  D011               	goto	i2l374
 27007                           
 27008                           ; BSR set to: 13
 27009  011E4C  010D               	movlb	13	; () banked
 27010  011E4E  5130               	movf	48,w,b	;volatile
 27011  011E50  0B1F               	andlw	31
 27012  011E52  0900               	iorlw	0
 27013  011E54  A4D8               	btfss	status,2,c
 27014  011E56  D00B               	goto	i2l374
 27015                           
 27016                           ; BSR set to: 13
 27017                           ;usb_device.c: 2805: {
 27018                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 27019  011E58  0100               	movlb	0	; () banked
 27020  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27021                           
 27022                           ; BSR set to: 0
 27023                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 27024  011E5C  0E03               	movlw	3
 27025  011E5E  010D               	movlb	13	; () banked
 27026  011E60  1931               	xorwf	49,w,b	;volatile
 27027  011E62  A4D8               	btfss	status,2,c
 27028  011E64  D002               	goto	i2l7260
 27029                           
 27030                           ; BSR set to: 13
 27031                           ;usb_device.c: 2808: RemoteWakeup = 1;
 27032  011E66  0E01               	movlw	1
 27033  011E68  D001               	goto	L9
 27034  011E6A                     i2l7260:
 27035                           
 27036                           ; BSR set to: 13
 27037                           ;usb_device.c: 2809: else
 27038                           ;usb_device.c: 2810: RemoteWakeup = 0;
 27039  011E6A  0E00               	movlw	0
 27040  011E6C                     L9:
 27041  011E6C  6E0F               	movwf	_RemoteWakeup,c	;volatile
 27042  011E6E                     i2l374:
 27043                           
 27044                           ; BSR set to: 13
 27045                           ;usb_device.c: 2811: }
 27046                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 27047                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 27048                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27049                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 27050  011E6E  010D               	movlb	13	; () banked
 27051  011E70  5132               	movf	50,w,b	;volatile
 27052  011E72  A4D8               	btfss	status,2,c
 27053  011E74  0012               	return	
 27054                           
 27055                           ; BSR set to: 13
 27056  011E76  010D               	movlb	13	; () banked
 27057  011E78  5130               	movf	48,w,b	;volatile
 27058  011E7A  0B1F               	andlw	31
 27059  011E7C  0A02               	xorlw	2
 27060  011E7E  A4D8               	btfss	status,2,c
 27061  011E80  0012               	return	
 27062                           
 27063                           ; BSR set to: 13
 27064  011E82  010D               	movlb	13	; () banked
 27065  011E84  5134               	movf	52,w,b	;volatile
 27066  011E86  0B0F               	andlw	15
 27067  011E88  0900               	iorlw	0
 27068  011E8A  B4D8               	btfsc	status,2,c
 27069  011E8C  0012               	return	
 27070                           
 27071                           ; BSR set to: 13
 27072  011E8E  010D               	movlb	13	; () banked
 27073  011E90  5134               	movf	52,w,b	;volatile
 27074  011E92  0B0F               	andlw	15
 27075  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27076  011E96  0E03               	movlw	3
 27077  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 27078  011E9A  0012               	return	
 27079                           
 27080                           ; BSR set to: 13
 27081  011E9C  0E20               	movlw	32
 27082  011E9E  1813               	xorwf	_USBDeviceState,w,c	;volatile
 27083  011EA0  A4D8               	btfss	status,2,c
 27084  011EA2  0012               	return	
 27085                           
 27086                           ; BSR set to: 13
 27087                           ;usb_device.c: 2818: {
 27088                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 27089  011EA4  0100               	movlb	0	; () banked
 27090  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27091                           
 27092                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 27093  011EA8  010D               	movlb	13	; () banked
 27094  011EAA  BF34               	btfsc	52,7,b	;volatile
 27095  011EAC  D01B               	goto	i2l7274
 27096                           
 27097                           ; BSR set to: 13
 27098                           ;usb_device.c: 2825: {
 27099                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27100  011EAE  010D               	movlb	13	; () banked
 27101  011EB0  5134               	movf	52,w,b	;volatile
 27102  011EB2  0B0F               	andlw	15
 27103  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27104  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27105  011EB8  0D02               	mullw	2
 27106  011EBA  0E00               	movlw	low _pBDTEntryOut
 27107  011EBC  24F3               	addwf	prodl,w,c
 27108  011EBE  6ED9               	movwf	fsr2l,c
 27109  011EC0  0E01               	movlw	high _pBDTEntryOut
 27110  011EC2  20F4               	addwfc	prodh,w,c
 27111  011EC4  6EDA               	movwf	fsr2h,c
 27112  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27113  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27114                           
 27115                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27116  011ECE  010D               	movlb	13	; () banked
 27117  011ED0  5134               	movf	52,w,b	;volatile
 27118  011ED2  0B0F               	andlw	15
 27119  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27120  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27121  011ED8  0D01               	mullw	1
 27122  011EDA  0E04               	movlw	low _ep_data_out
 27123  011EDC  24F3               	addwf	prodl,w,c
 27124  011EDE  6ED9               	movwf	fsr2l,c
 27125  011EE0  0E00               	movlw	high _ep_data_out
 27126  011EE2  D01A               	goto	L10
 27127  011EE4                     i2l7274:
 27128                           
 27129                           ; BSR set to: 13
 27130                           ;usb_device.c: 2829: else
 27131                           ;usb_device.c: 2830: {
 27132                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27133  011EE4  010D               	movlb	13	; () banked
 27134  011EE6  5134               	movf	52,w,b	;volatile
 27135  011EE8  0B0F               	andlw	15
 27136  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27137  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27138  011EEE  0D02               	mullw	2
 27139  011EF0  0EF5               	movlw	low _pBDTEntryIn
 27140  011EF2  24F3               	addwf	prodl,w,c
 27141  011EF4  6ED9               	movwf	fsr2l,c
 27142  011EF6  0E00               	movlw	high _pBDTEntryIn
 27143  011EF8  20F4               	addwfc	prodh,w,c
 27144  011EFA  6EDA               	movwf	fsr2h,c
 27145  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27146  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27147                           
 27148                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27149  011F04  010D               	movlb	13	; () banked
 27150  011F06  5134               	movf	52,w,b	;volatile
 27151  011F08  0B0F               	andlw	15
 27152  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27153  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27154  011F0E  0D01               	mullw	1
 27155  011F10  0E01               	movlw	low _ep_data_in
 27156  011F12  24F3               	addwf	prodl,w,c
 27157  011F14  6ED9               	movwf	fsr2l,c
 27158  011F16  0E00               	movlw	high _ep_data_in
 27159  011F18                     L10:
 27160  011F18  20F4               	addwfc	prodh,w,c
 27161  011F1A  6EDA               	movwf	fsr2h,c
 27162  011F1C  50DF               	movf	indf2,w,c
 27163  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27164                           
 27165                           ; BSR set to: 13
 27166                           ;usb_device.c: 2833: }
 27167                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 27168                           
 27169                           ; BSR set to: 13
 27170  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27171  011F22  D002               	goto	i2l7280
 27172                           
 27173                           ; BSR set to: 13
 27174                           ;usb_device.c: 2840: {
 27175                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27176  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27177                           
 27178                           ;usb_device.c: 2842: }
 27179  011F26  D001               	goto	i2l7282
 27180  011F28                     i2l7280:
 27181                           
 27182                           ; BSR set to: 13
 27183                           ;usb_device.c: 2843: else
 27184                           ;usb_device.c: 2844: {
 27185                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27186  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27187  011F2A                     i2l7282:
 27188                           
 27189                           ; BSR set to: 13
 27190                           ;usb_device.c: 2846: }
 27191                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 27192  011F2A  010D               	movlb	13	; () banked
 27193  011F2C  BF34               	btfsc	52,7,b	;volatile
 27194  011F2E  D00B               	goto	i2l7286
 27195                           
 27196                           ; BSR set to: 13
 27197                           ;usb_device.c: 2852: {
 27198                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27199  011F30  010D               	movlb	13	; () banked
 27200  011F32  5134               	movf	52,w,b	;volatile
 27201  011F34  0B0F               	andlw	15
 27202  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27203  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27204  011F3A  0D02               	mullw	2
 27205  011F3C  0E00               	movlw	low _pBDTEntryOut
 27206  011F3E  24F3               	addwf	prodl,w,c
 27207  011F40  6ED9               	movwf	fsr2l,c
 27208  011F42  0E01               	movlw	high _pBDTEntryOut
 27209  011F44  D00A               	goto	L11
 27210  011F46                     i2l7286:
 27211                           
 27212                           ; BSR set to: 13
 27213                           ;usb_device.c: 2855: else
 27214                           ;usb_device.c: 2856: {
 27215                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27216  011F46  010D               	movlb	13	; () banked
 27217  011F48  5134               	movf	52,w,b	;volatile
 27218  011F4A  0B0F               	andlw	15
 27219  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27220  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27221  011F50  0D02               	mullw	2
 27222  011F52  0EF5               	movlw	low _pBDTEntryIn
 27223  011F54  24F3               	addwf	prodl,w,c
 27224  011F56  6ED9               	movwf	fsr2l,c
 27225  011F58  0E00               	movlw	high _pBDTEntryIn
 27226  011F5A                     L11:
 27227  011F5A  20F4               	addwfc	prodh,w,c
 27228  011F5C  6EDA               	movwf	fsr2h,c
 27229  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27230  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27231                           
 27232                           ; BSR set to: 13
 27233                           ;usb_device.c: 2858: }
 27234                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 27235                           
 27236                           ; BSR set to: 13
 27237  011F66  0E03               	movlw	3
 27238  011F68  010D               	movlb	13	; () banked
 27239  011F6A  1931               	xorwf	49,w,b	;volatile
 27240  011F6C  A4D8               	btfss	status,2,c
 27241  011F6E  D02E               	goto	i2l7302
 27242                           
 27243                           ; BSR set to: 13
 27244                           ;usb_device.c: 2862: {
 27245                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 27246  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27247  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27248  011F78  AEDF               	btfss	indf2,7,c
 27249  011F7A  D01B               	goto	i2l7298
 27250                           
 27251                           ; BSR set to: 13
 27252                           ;usb_device.c: 2864: {
 27253                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 27254  011F7C  010D               	movlb	13	; () banked
 27255  011F7E  BF34               	btfsc	52,7,b	;volatile
 27256  011F80  D00B               	goto	i2l7296
 27257                           
 27258                           ; BSR set to: 13
 27259                           ;usb_device.c: 2868: {
 27260                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27261  011F82  010D               	movlb	13	; () banked
 27262  011F84  5134               	movf	52,w,b	;volatile
 27263  011F86  0B0F               	andlw	15
 27264  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27265  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27266  011F8C  0D01               	mullw	1
 27267  011F8E  0E04               	movlw	low _ep_data_out
 27268  011F90  24F3               	addwf	prodl,w,c
 27269  011F92  6ED9               	movwf	fsr2l,c
 27270  011F94  0E00               	movlw	high _ep_data_out
 27271  011F96  D00A               	goto	L12
 27272  011F98                     i2l7296:
 27273                           
 27274                           ; BSR set to: 13
 27275                           ;usb_device.c: 2871: else
 27276                           ;usb_device.c: 2872: {
 27277                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27278  011F98  010D               	movlb	13	; () banked
 27279  011F9A  5134               	movf	52,w,b	;volatile
 27280  011F9C  0B0F               	andlw	15
 27281  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27282  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27283  011FA2  0D01               	mullw	1
 27284  011FA4  0E01               	movlw	low _ep_data_in
 27285  011FA6  24F3               	addwf	prodl,w,c
 27286  011FA8  6ED9               	movwf	fsr2l,c
 27287  011FAA  0E00               	movlw	high _ep_data_in
 27288  011FAC                     L12:
 27289  011FAC  20F4               	addwfc	prodh,w,c
 27290  011FAE  6EDA               	movwf	fsr2h,c
 27291  011FB0  82DF               	bsf	indf2,1,c
 27292  011FB2                     i2l7298:
 27293                           
 27294                           ; BSR set to: 13
 27295                           ;usb_device.c: 2874: }
 27296                           ;usb_device.c: 2875: }
 27297                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 27298  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27299  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27300  011FBA  0E00               	movlw	0
 27301  011FBC  84DB               	bsf	plusw2,2,c
 27302                           
 27303                           ; BSR set to: 13
 27304                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 27305  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27306  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27307  011FC6  0E00               	movlw	0
 27308  011FC8  8EDB               	bsf	plusw2,7,c
 27309                           
 27310                           ;usb_device.c: 2880: }
 27311  011FCA  0012               	return	
 27312  011FCC                     i2l7302:
 27313                           
 27314                           ; BSR set to: 13
 27315                           ;usb_device.c: 2881: else
 27316                           ;usb_device.c: 2882: {
 27317                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27318  011FCC  0E04               	movlw	4
 27319  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27320                           
 27321                           ; BSR set to: 13
 27322                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 27323  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27324  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27325  011FD8  AEDF               	btfss	indf2,7,c
 27326  011FDA  D01B               	goto	i2l7312
 27327                           
 27328                           ; BSR set to: 13
 27329                           ;usb_device.c: 2889: {
 27330                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 27331  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27332  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27333  011FE4  0E7F               	movlw	127
 27334  011FE6  16DF               	andwf	indf2,f,c
 27335                           
 27336                           ; BSR set to: 13
 27337                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 27338  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27339  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27340  011FF0  0E00               	movlw	0
 27341  011FF2  8CDB               	bsf	plusw2,6,c
 27342                           
 27343                           ; BSR set to: 13
 27344                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27345  011FF4  0E00               	movlw	0
 27346  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27347  011FF8  0E05               	movlw	5
 27348  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27349  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27350  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27351  012004  0E00               	movlw	0
 27352  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27353  012008  0E02               	movlw	2
 27354  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27355  01200C  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27356                           
 27357                           ;usb_device.c: 2895: }
 27358  012010  D006               	goto	i2l7314
 27359  012012                     i2l7312:
 27360                           
 27361                           ;usb_device.c: 2896: else
 27362                           ;usb_device.c: 2897: {
 27363                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 27364  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27365  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27366  01201A  0E00               	movlw	0
 27367  01201C  8CDB               	bsf	plusw2,6,c
 27368  01201E                     i2l7314:
 27369                           
 27370                           ;usb_device.c: 2900: }
 27371                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27372  01201E  0E04               	movlw	4
 27373  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27374                           
 27375                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27376  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27377  012024  D006               	goto	i2l393
 27378  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27379  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27380  01202E  AEDF               	btfss	indf2,7,c
 27381  012030  D030               	goto	i2l7328
 27382  012032                     i2l393:
 27383                           
 27384                           ;usb_device.c: 2911: {
 27385                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 27386  012032  010D               	movlb	13	; () banked
 27387  012034  BF34               	btfsc	52,7,b	;volatile
 27388  012036  D00B               	goto	i2l7322
 27389                           
 27390                           ; BSR set to: 13
 27391                           ;usb_device.c: 2913: {
 27392                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27393  012038  010D               	movlb	13	; () banked
 27394  01203A  5134               	movf	52,w,b	;volatile
 27395  01203C  0B0F               	andlw	15
 27396  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27397  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27398  012042  0D01               	mullw	1
 27399  012044  0E04               	movlw	low _ep_data_out
 27400  012046  24F3               	addwf	prodl,w,c
 27401  012048  6ED9               	movwf	fsr2l,c
 27402  01204A  0E00               	movlw	high _ep_data_out
 27403  01204C  D00A               	goto	L13
 27404  01204E                     i2l7322:
 27405                           
 27406                           ; BSR set to: 13
 27407                           ;usb_device.c: 2916: else
 27408                           ;usb_device.c: 2917: {
 27409                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27410  01204E  010D               	movlb	13	; () banked
 27411  012050  5134               	movf	52,w,b	;volatile
 27412  012052  0B0F               	andlw	15
 27413  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27414  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27415  012058  0D01               	mullw	1
 27416  01205A  0E01               	movlw	low _ep_data_in
 27417  01205C  24F3               	addwf	prodl,w,c
 27418  01205E  6ED9               	movwf	fsr2l,c
 27419  012060  0E00               	movlw	high _ep_data_in
 27420  012062                     L13:
 27421  012062  20F4               	addwfc	prodh,w,c
 27422  012064  6EDA               	movwf	fsr2h,c
 27423  012066  92DF               	bcf	indf2,1,c
 27424                           
 27425                           ; BSR set to: 13
 27426                           ;usb_device.c: 2919: }
 27427                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27428                           
 27429                           ; BSR set to: 13
 27430  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27431  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27432  012070  0E3B               	movlw	59
 27433  012072  16DF               	andwf	indf2,f,c
 27434                           
 27435                           ; BSR set to: 13
 27436                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27437  012074  0E00               	movlw	0
 27438  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27439  012078  0E05               	movlw	5
 27440  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27441  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27442  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27443  012084  0E00               	movlw	0
 27444  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27445  012088  0E02               	movlw	2
 27446  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27447  01208C  EC3A  F0B2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27448                           
 27449                           ;usb_device.c: 2925: }
 27450  012090  D006               	goto	i2l7330
 27451  012092                     i2l7328:
 27452                           
 27453                           ;usb_device.c: 2926: else
 27454                           ;usb_device.c: 2927: {
 27455                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27456  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27457  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27458  01209A  0E3B               	movlw	59
 27459  01209C  16DF               	andwf	indf2,f,c
 27460  01209E                     i2l7330:
 27461                           
 27462                           ;usb_device.c: 2930: }
 27463                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27464  01209E  010D               	movlb	13	; () banked
 27465  0120A0  5134               	movf	52,w,b	;volatile
 27466  0120A2  0B0F               	andlw	15
 27467  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27468  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27469  0120A8  0D01               	mullw	1
 27470  0120AA  0E26               	movlw	38
 27471  0120AC  24F3               	addwf	prodl,w,c
 27472  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27473  0120B0  0E0F               	movlw	15
 27474  0120B2  20F4               	addwfc	prodh,w,c
 27475  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27476                           
 27477                           ; BSR set to: 13
 27478                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 27479  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27480  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27481  0120BE  0EFE               	movlw	254
 27482  0120C0  16DF               	andwf	indf2,f,c
 27483                           
 27484                           ; BSR set to: 13
 27485  0120C2  0012               	return	
 27486  0120C4                     __end_of_USBStdFeatureReqHandler:
 27487                           	opt stack 0
 27488                           pclatu	equ	0xFFB
 27489                           pclath	equ	0xFFA
 27490                           tblptru	equ	0xFF8
 27491                           tblptrh	equ	0xFF7
 27492                           tblptrl	equ	0xFF6
 27493                           tablat	equ	0xFF5
 27494                           prodh	equ	0xFF4
 27495                           prodl	equ	0xFF3
 27496                           intcon	equ	0xFF2
 27497                           intcon2	equ	0xFF1
 27498                           postinc0	equ	0xFEE
 27499                           fsr0h	equ	0xFEA
 27500                           fsr0l	equ	0xFE9
 27501                           wreg	equ	0xFE8
 27502                           indf1	equ	0xFE7
 27503                           postinc1	equ	0xFE6
 27504                           postdec1	equ	0xFE5
 27505                           fsr1h	equ	0xFE2
 27506                           fsr1l	equ	0xFE1
 27507                           indf2	equ	0xFDF
 27508                           postinc2	equ	0xFDE
 27509                           postdec2	equ	0xFDD
 27510                           plusw2	equ	0xFDB
 27511                           fsr2h	equ	0xFDA
 27512                           fsr2l	equ	0xFD9
 27513                           status	equ	0xFD8
 27514                           
 27515 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27516 ;; Defined at:
 27517 ;;		line 119 in file "../My_library/My_usb_cdc.c"
 27518 ;; Parameters:    Size  Location     Type
 27519 ;;  event           2   12[COMRAM] enum E70
 27520 ;;  pdata           2   14[COMRAM] PTR void 
 27521 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27522 ;;  size            2   16[COMRAM] unsigned int 
 27523 ;; Auto vars:     Size  Location     Type
 27524 ;;		None
 27525 ;; Return value:  Size  Location     Type
 27526 ;;                  1    wreg      unsigned char 
 27527 ;; Registers used:
 27528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27529 ;; Tracked objects:
 27530 ;;		On entry : 0/0
 27531 ;;		On exit  : 0/0
 27532 ;;		Unchanged: 0/0
 27533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27534 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27537 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27538 ;;Total ram usage:        8 bytes
 27539 ;; Hardware stack levels used:    1
 27540 ;; Hardware stack levels required when called:    4
 27541 ;; This function calls:
 27542 ;;		_APP_DeviceCDCBasicDemoInitialize
 27543 ;;		_USBCheckCDCRequest
 27544 ;; This function is called by:
 27545 ;;		_USBDeviceTasks
 27546 ;;		_USBStdSetCfgHandler
 27547 ;;		_USBSuspend
 27548 ;;		_USBWakeFromSuspend
 27549 ;;		_USBCtrlTrfSetupHandler
 27550 ;;		_USBCheckStdRequest
 27551 ;;		_USBStdFeatureReqHandler
 27552 ;; This function uses a non-reentrant model
 27553 ;;
 27554                           
 27555                           	psect	text118
 27556  016474                     __ptext118:
 27557                           	opt stack 0
 27558  016474                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27559                           	opt stack 14
 27560                           
 27561                           ;My_usb_cdc.c: 120: switch ((int) event) {
 27562                           
 27563                           ; BSR set to: 13
 27564                           ;incstack = 0
 27565  016474  D006               	goto	i2l6938
 27566  016476                     i2l6932:
 27567                           
 27568                           ;My_usb_cdc.c: 143: APP_DeviceCDCBasicDemoInitialize();
 27569  016476  EC86  F0B5         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 27570                           
 27571                           ;My_usb_cdc.c: 147: break;
 27572                           
 27573                           ;My_usb_cdc.c: 146: case EVENT_SET_DESCRIPTOR:
 27574                           
 27575                           ;My_usb_cdc.c: 144: break;
 27576  01647A  0012               	return	
 27577  01647C                     i2l6934:
 27578                           
 27579                           ;My_usb_cdc.c: 152: USBCheckCDCRequest();
 27580  01647C  EC1D  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27581                           
 27582                           ;My_usb_cdc.c: 163: }
 27583                           
 27584                           ;My_usb_cdc.c: 162: break;
 27585                           
 27586                           ;My_usb_cdc.c: 161: default:
 27587                           
 27588                           ;My_usb_cdc.c: 159: break;
 27589                           
 27590                           ;My_usb_cdc.c: 158: case EVENT_TRANSFER_TERMINATED:
 27591                           
 27592                           ;My_usb_cdc.c: 156: break;
 27593                           
 27594                           ;My_usb_cdc.c: 155: case EVENT_BUS_ERROR:
 27595                           
 27596                           ;My_usb_cdc.c: 153: break;
 27597  016480  0012               	return	
 27598  016482                     i2l6938:
 27599  016482  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27600  016486  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27601                           
 27602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 27603                           ; Switch size 1, requested type "space"
 27604                           ; Number of cases is 2, Range of values is 0 to 127
 27605                           ; switch strategies available:
 27606                           ; Name         Instructions Cycles
 27607                           ; simple_byte            7     4 (average)
 27608                           ;	Chosen strategy is simple_byte
 27609  01648A  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27610  01648C  0A00               	xorlw	0	; case 0
 27611  01648E  B4D8               	btfsc	status,2,c
 27612  016490  D004               	goto	i2l13220
 27613  016492  0A7F               	xorlw	127	; case 127
 27614  016494  A4D8               	btfss	status,2,c
 27615  016496  0012               	return	
 27616  016498  D018               	goto	i2l13222
 27617  01649A                     i2l13220:
 27618                           
 27619                           ; Switch size 1, requested type "space"
 27620                           ; Number of cases is 8, Range of values is 1 to 117
 27621                           ; switch strategies available:
 27622                           ; Name         Instructions Cycles
 27623                           ; simple_byte           25    13 (average)
 27624                           ;	Chosen strategy is simple_byte
 27625  01649A  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27626  01649C  0A01               	xorlw	1	; case 1
 27627  01649E  B4D8               	btfsc	status,2,c
 27628  0164A0  D7EA               	goto	i2l6932
 27629  0164A2  0A03               	xorlw	3	; case 2
 27630  0164A4  B4D8               	btfsc	status,2,c
 27631  0164A6  0012               	return	
 27632  0164A8  0A01               	xorlw	1	; case 3
 27633  0164AA  B4D8               	btfsc	status,2,c
 27634  0164AC  D7E7               	goto	i2l6934
 27635  0164AE  0A06               	xorlw	6	; case 5
 27636  0164B0  B4D8               	btfsc	status,2,c
 27637  0164B2  0012               	return	
 27638  0164B4  0A77               	xorlw	119	; case 114
 27639  0164B6  B4D8               	btfsc	status,2,c
 27640  0164B8  0012               	return	
 27641  0164BA  0A01               	xorlw	1	; case 115
 27642  0164BC  B4D8               	btfsc	status,2,c
 27643  0164BE  0012               	return	
 27644  0164C0  0A07               	xorlw	7	; case 116
 27645  0164C2  B4D8               	btfsc	status,2,c
 27646  0164C4  0012               	return	
 27647  0164C6  0A01               	xorlw	1	; case 117
 27648  0164C8  0012               	return	
 27649  0164CA                     i2l13222:
 27650                           
 27651                           ; Switch size 1, requested type "space"
 27652                           ; Number of cases is 1, Range of values is 255 to 255
 27653                           ; switch strategies available:
 27654                           ; Name         Instructions Cycles
 27655                           ; simple_byte            4     3 (average)
 27656                           ;	Chosen strategy is simple_byte
 27657  0164CA  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27658  0164CC  0AFF               	xorlw	255	; case 255
 27659  0164CE  0012               	return	
 27660  0164D0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27661                           	opt stack 0
 27662                           pclatu	equ	0xFFB
 27663                           pclath	equ	0xFFA
 27664                           tblptru	equ	0xFF8
 27665                           tblptrh	equ	0xFF7
 27666                           tblptrl	equ	0xFF6
 27667                           tablat	equ	0xFF5
 27668                           prodh	equ	0xFF4
 27669                           prodl	equ	0xFF3
 27670                           intcon	equ	0xFF2
 27671                           intcon2	equ	0xFF1
 27672                           postinc0	equ	0xFEE
 27673                           fsr0h	equ	0xFEA
 27674                           fsr0l	equ	0xFE9
 27675                           wreg	equ	0xFE8
 27676                           indf1	equ	0xFE7
 27677                           postinc1	equ	0xFE6
 27678                           postdec1	equ	0xFE5
 27679                           fsr1h	equ	0xFE2
 27680                           fsr1l	equ	0xFE1
 27681                           indf2	equ	0xFDF
 27682                           postinc2	equ	0xFDE
 27683                           postdec2	equ	0xFDD
 27684                           plusw2	equ	0xFDB
 27685                           fsr2h	equ	0xFDA
 27686                           fsr2l	equ	0xFD9
 27687                           status	equ	0xFD8
 27688                           
 27689 ;; *************** function _USBCheckCDCRequest *****************
 27690 ;; Defined at:
 27691 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 27692 ;; Parameters:    Size  Location     Type
 27693 ;;		None
 27694 ;; Auto vars:     Size  Location     Type
 27695 ;;		None
 27696 ;; Return value:  Size  Location     Type
 27697 ;;		None               void
 27698 ;; Registers used:
 27699 ;;		wreg, status,2, status,0
 27700 ;; Tracked objects:
 27701 ;;		On entry : 0/0
 27702 ;;		On exit  : 0/0
 27703 ;;		Unchanged: 0/0
 27704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27709 ;;Total ram usage:        0 bytes
 27710 ;; Hardware stack levels used:    1
 27711 ;; This function calls:
 27712 ;;		Nothing
 27713 ;; This function is called by:
 27714 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27715 ;; This function uses a non-reentrant model
 27716 ;;
 27717                           
 27718                           	psect	text119
 27719  014A3A                     __ptext119:
 27720                           	opt stack 0
 27721  014A3A                     _USBCheckCDCRequest:
 27722                           	opt stack 17
 27723                           
 27724                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 27725                           
 27726                           ;incstack = 0
 27727  014A3A  010D               	movlb	13	; () banked
 27728  014A3C  5130               	movf	48,w,b	;volatile
 27729  014A3E  0B1F               	andlw	31
 27730  014A40  06E8               	decf	wreg,f,c
 27731  014A42  A4D8               	btfss	status,2,c
 27732  014A44  0012               	return	
 27733                           
 27734                           ; BSR set to: 13
 27735                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 27736                           
 27737                           ; BSR set to: 13
 27738                           
 27739                           ; BSR set to: 13
 27740  014A46  010D               	movlb	13	; () banked
 27741  014A48  3930               	swapf	48,w,b	;volatile
 27742  014A4A  32E8               	rrcf	wreg,f,c
 27743  014A4C  0B03               	andlw	3
 27744  014A4E  06E8               	decf	wreg,f,c
 27745  014A50  A4D8               	btfss	status,2,c
 27746  014A52  0012               	return	
 27747                           
 27748                           ; BSR set to: 13
 27749                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 27750                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 27751                           
 27752                           ; BSR set to: 13
 27753                           
 27754                           ; BSR set to: 13
 27755  014A54  010D               	movlb	13	; () banked
 27756  014A56  5134               	movf	52,w,b	;volatile
 27757  014A58  B4D8               	btfsc	status,2,c
 27758  014A5A  D048               	goto	i2l6814
 27759                           
 27760                           ; BSR set to: 13
 27761  014A5C  010D               	movlb	13	; () banked
 27762  014A5E  0534               	decf	52,w,b	;volatile
 27763  014A60  A4D8               	btfss	status,2,c
 27764  014A62  0012               	return	
 27765  014A64  D043               	goto	i2l6814
 27766  014A66                     i2l6790:
 27767                           
 27768                           ; BSR set to: 13
 27769                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27770  014A66  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 27771  014A68  0100               	movlb	0	; () banked
 27772  014A6A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27773  014A6C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27774  014A6E  0100               	movlb	0	; () banked
 27775  014A70  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27776                           
 27777                           ; BSR set to: 0
 27778                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 27779  014A72  0E00               	movlw	0
 27780  014A74  0100               	movlb	0	; () banked
 27781  014A76  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27782  014A78  0E08               	movlw	8
 27783  014A7A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27784                           
 27785                           ; BSR set to: 0
 27786                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27787  014A7C  0100               	movlb	0	; () banked
 27788  014A7E  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27789                           
 27790                           ; BSR set to: 0
 27791                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 27792  014A80  0100               	movlb	0	; () banked
 27793  014A82  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27794                           
 27795                           ;usb_device_cdc.c: 232: break;
 27796  014A84  0012               	return	
 27797  014A86                     i2l6798:
 27798                           
 27799                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27800  014A86  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 27801  014A88  0100               	movlb	0	; () banked
 27802  014A8A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27803  014A8C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27804  014A8E  0100               	movlb	0	; () banked
 27805  014A90  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27806                           
 27807                           ; BSR set to: 0
 27808                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27809  014A92  0100               	movlb	0	; () banked
 27810  014A94  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27811                           
 27812                           ;usb_device_cdc.c: 237: break;
 27813  014A96  0012               	return	
 27814  014A98                     i2l450:
 27815                           
 27816                           ; BSR set to: 13
 27817                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27818  014A98  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 27819  014A9C  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 27820                           
 27821                           ; BSR set to: 13
 27822                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27823  014AA0  0E89               	movlw	low _line_coding
 27824  014AA2  0100               	movlb	0	; () banked
 27825  014AA4  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 27826  014AA6  0E01               	movlw	high _line_coding
 27827  014AA8  0100               	movlb	0	; () banked
 27828  014AAA  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27829                           
 27830                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27831  014AAC  0E00               	movlw	0
 27832  014AAE  0100               	movlb	0	; () banked
 27833  014AB0  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27834  014AB2  0E00               	movlw	0
 27835  014AB4  0100               	movlb	0	; () banked
 27836  014AB6  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27837  014AB8  0E00               	movlw	0
 27838  014ABA  0100               	movlb	0	; () banked
 27839  014ABC  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27840                           
 27841                           ; BSR set to: 0
 27842                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27843  014ABE  0100               	movlb	0	; () banked
 27844  014AC0  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27845                           
 27846                           ;usb_device_cdc.c: 246: break;
 27847  014AC2  0012               	return	
 27848  014AC4                     i2l6806:
 27849                           
 27850                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27851  014AC4  0E89               	movlw	low _line_coding
 27852  014AC6  0100               	movlb	0	; () banked
 27853  014AC8  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27854  014ACA  0E01               	movlw	high _line_coding
 27855  014ACC  0100               	movlb	0	; () banked
 27856  014ACE  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27857                           
 27858                           ; BSR set to: 0
 27859  014AD0  0E00               	movlw	0
 27860  014AD2  0100               	movlb	0	; () banked
 27861  014AD4  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27862  014AD6  0E07               	movlw	7
 27863  014AD8  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27864                           
 27865                           ; BSR set to: 0
 27866  014ADA  0EC1               	movlw	193
 27867  014ADC  0100               	movlb	0	; () banked
 27868  014ADE  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27869                           
 27870                           ;usb_device_cdc.c: 253: break;
 27871  014AE0  0012               	return	
 27872  014AE2                     i2l452:
 27873                           
 27874                           ; BSR set to: 13
 27875                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27876  014AE2  CD32 F11D          	movff	3378,_control_signal_bitmap	;volatile
 27877                           
 27878                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27879  014AE6  0100               	movlb	0	; () banked
 27880  014AE8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27881                           
 27882                           ; BSR set to: 0
 27883                           ;usb_device_cdc.c: 315: }
 27884                           
 27885                           ; BSR set to: 0
 27886                           ;usb_device_cdc.c: 314: break;
 27887                           
 27888                           ;usb_device_cdc.c: 313: default:
 27889                           
 27890                           ;usb_device_cdc.c: 289: break;
 27891  014AEA  0012               	return	
 27892  014AEC                     i2l6814:
 27893  014AEC  010D               	movlb	13	; () banked
 27894  014AEE  5131               	movf	49,w,b	;volatile
 27895                           
 27896                           ; Switch size 1, requested type "space"
 27897                           ; Number of cases is 5, Range of values is 0 to 34
 27898                           ; switch strategies available:
 27899                           ; Name         Instructions Cycles
 27900                           ; simple_byte           16     9 (average)
 27901                           ;	Chosen strategy is simple_byte
 27902  014AF0  0A00               	xorlw	0	; case 0
 27903  014AF2  B4D8               	btfsc	status,2,c
 27904  014AF4  D7B8               	goto	i2l6790
 27905  014AF6  0A01               	xorlw	1	; case 1
 27906  014AF8  B4D8               	btfsc	status,2,c
 27907  014AFA  D7C5               	goto	i2l6798
 27908  014AFC  0A21               	xorlw	33	; case 32
 27909  014AFE  B4D8               	btfsc	status,2,c
 27910  014B00  D7CB               	goto	i2l450
 27911  014B02  0A01               	xorlw	1	; case 33
 27912  014B04  B4D8               	btfsc	status,2,c
 27913  014B06  D7DE               	goto	i2l6806
 27914  014B08  0A03               	xorlw	3	; case 34
 27915  014B0A  A4D8               	btfss	status,2,c
 27916  014B0C  0012               	return	
 27917  014B0E  D7E9               	goto	i2l452
 27918  014B10                     __end_of_USBCheckCDCRequest:
 27919                           	opt stack 0
 27920                           pclatu	equ	0xFFB
 27921                           pclath	equ	0xFFA
 27922                           tblptru	equ	0xFF8
 27923                           tblptrh	equ	0xFF7
 27924                           tblptrl	equ	0xFF6
 27925                           tablat	equ	0xFF5
 27926                           prodh	equ	0xFF4
 27927                           prodl	equ	0xFF3
 27928                           intcon	equ	0xFF2
 27929                           intcon2	equ	0xFF1
 27930                           postinc0	equ	0xFEE
 27931                           fsr0h	equ	0xFEA
 27932                           fsr0l	equ	0xFE9
 27933                           wreg	equ	0xFE8
 27934                           indf1	equ	0xFE7
 27935                           postinc1	equ	0xFE6
 27936                           postdec1	equ	0xFE5
 27937                           fsr1h	equ	0xFE2
 27938                           fsr1l	equ	0xFE1
 27939                           indf2	equ	0xFDF
 27940                           postinc2	equ	0xFDE
 27941                           postdec2	equ	0xFDD
 27942                           plusw2	equ	0xFDB
 27943                           fsr2h	equ	0xFDA
 27944                           fsr2l	equ	0xFD9
 27945                           status	equ	0xFD8
 27946                           
 27947 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 27948 ;; Defined at:
 27949 ;;		line 110 in file "../My_library/My_usb_cdc.c"
 27950 ;; Parameters:    Size  Location     Type
 27951 ;;		None
 27952 ;; Auto vars:     Size  Location     Type
 27953 ;;		None
 27954 ;; Return value:  Size  Location     Type
 27955 ;;		None               void
 27956 ;; Registers used:
 27957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27958 ;; Tracked objects:
 27959 ;;		On entry : 0/0
 27960 ;;		On exit  : 0/0
 27961 ;;		Unchanged: 0/0
 27962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27967 ;;Total ram usage:        0 bytes
 27968 ;; Hardware stack levels used:    1
 27969 ;; Hardware stack levels required when called:    3
 27970 ;; This function calls:
 27971 ;;		_CDCInitEP
 27972 ;; This function is called by:
 27973 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27974 ;; This function uses a non-reentrant model
 27975 ;;
 27976                           
 27977                           	psect	text120
 27978  016B0C                     __ptext120:
 27979                           	opt stack 0
 27980  016B0C                     _APP_DeviceCDCBasicDemoInitialize:
 27981                           	opt stack 14
 27982                           
 27983                           ;My_usb_cdc.c: 111: CDCInitEP();
 27984                           
 27985                           ;incstack = 0
 27986  016B0C  EC46  F0B0         	call	_CDCInitEP	;wreg free
 27987                           
 27988                           ;My_usb_cdc.c: 113: line_coding.bCharFormat = 0;
 27989  016B10  0E00               	movlw	0
 27990  016B12  0101               	movlb	1	; () banked
 27991  016B14  6F8D               	movwf	(_line_coding+4)& (0+255),b
 27992                           
 27993                           ; BSR set to: 1
 27994                           ;My_usb_cdc.c: 114: line_coding.bDataBits = 8;
 27995  016B16  0E08               	movlw	8
 27996  016B18  0101               	movlb	1	; () banked
 27997  016B1A  6F8F               	movwf	(_line_coding+6)& (0+255),b
 27998                           
 27999                           ; BSR set to: 1
 28000                           ;My_usb_cdc.c: 115: line_coding.bParityType = 0;
 28001  016B1C  0E00               	movlw	0
 28002  016B1E  0101               	movlb	1	; () banked
 28003  016B20  6F8E               	movwf	(_line_coding+5)& (0+255),b
 28004                           
 28005                           ; BSR set to: 1
 28006                           ;My_usb_cdc.c: 116: line_coding.dwDTERate = 115200;
 28007  016B22  0E00               	movlw	0
 28008  016B24  0101               	movlb	1	; () banked
 28009  016B26  6F89               	movwf	_line_coding& (0+255),b
 28010  016B28  0EC2               	movlw	194
 28011  016B2A  6F8A               	movwf	(_line_coding+1)& (0+255),b
 28012  016B2C  0E01               	movlw	1
 28013  016B2E  6F8B               	movwf	(_line_coding+2)& (0+255),b
 28014  016B30  0E00               	movlw	0
 28015  016B32  6F8C               	movwf	(_line_coding+3)& (0+255),b
 28016                           
 28017                           ; BSR set to: 1
 28018  016B34  0012               	return		;funcret
 28019  016B36                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 28020                           	opt stack 0
 28021                           pclatu	equ	0xFFB
 28022                           pclath	equ	0xFFA
 28023                           tblptru	equ	0xFF8
 28024                           tblptrh	equ	0xFF7
 28025                           tblptrl	equ	0xFF6
 28026                           tablat	equ	0xFF5
 28027                           prodh	equ	0xFF4
 28028                           prodl	equ	0xFF3
 28029                           intcon	equ	0xFF2
 28030                           intcon2	equ	0xFF1
 28031                           postinc0	equ	0xFEE
 28032                           fsr0h	equ	0xFEA
 28033                           fsr0l	equ	0xFE9
 28034                           wreg	equ	0xFE8
 28035                           indf1	equ	0xFE7
 28036                           postinc1	equ	0xFE6
 28037                           postdec1	equ	0xFE5
 28038                           fsr1h	equ	0xFE2
 28039                           fsr1l	equ	0xFE1
 28040                           indf2	equ	0xFDF
 28041                           postinc2	equ	0xFDE
 28042                           postdec2	equ	0xFDD
 28043                           plusw2	equ	0xFDB
 28044                           fsr2h	equ	0xFDA
 28045                           fsr2l	equ	0xFD9
 28046                           status	equ	0xFD8
 28047                           
 28048 ;; *************** function _CDCInitEP *****************
 28049 ;; Defined at:
 28050 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 28051 ;; Parameters:    Size  Location     Type
 28052 ;;		None
 28053 ;; Auto vars:     Size  Location     Type
 28054 ;;		None
 28055 ;; Return value:  Size  Location     Type
 28056 ;;		None               void
 28057 ;; Registers used:
 28058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28059 ;; Tracked objects:
 28060 ;;		On entry : 0/0
 28061 ;;		On exit  : 0/0
 28062 ;;		Unchanged: 0/0
 28063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28068 ;;Total ram usage:        0 bytes
 28069 ;; Hardware stack levels used:    1
 28070 ;; Hardware stack levels required when called:    2
 28071 ;; This function calls:
 28072 ;;		_USBEnableEndpoint
 28073 ;;		i2_USBTransferOnePacket
 28074 ;; This function is called by:
 28075 ;;		_APP_DeviceCDCBasicDemoInitialize
 28076 ;; This function uses a non-reentrant model
 28077 ;;
 28078                           
 28079                           	psect	text121
 28080  01608C                     __ptext121:
 28081                           	opt stack 0
 28082  01608C                     _CDCInitEP:
 28083                           	opt stack 14
 28084                           
 28085                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 28086                           
 28087                           ; BSR set to: 1
 28088                           ;incstack = 0
 28089  01608C  0E00               	movlw	0
 28090  01608E  0101               	movlb	1	; () banked
 28091  016090  6F89               	movwf	_line_coding& (0+255),b
 28092  016092  0E4B               	movlw	75
 28093  016094  6F8A               	movwf	(_line_coding+1)& (0+255),b
 28094  016096  0E00               	movlw	0
 28095  016098  6F8B               	movwf	(_line_coding+2)& (0+255),b
 28096  01609A  0E00               	movlw	0
 28097  01609C  6F8C               	movwf	(_line_coding+3)& (0+255),b
 28098                           
 28099                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 28100  01609E  0E00               	movlw	0
 28101  0160A0  0101               	movlb	1	; () banked
 28102  0160A2  6F8D               	movwf	(_line_coding+4)& (0+255),b
 28103                           
 28104                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 28105  0160A4  0E00               	movlw	0
 28106  0160A6  0101               	movlb	1	; () banked
 28107  0160A8  6F8E               	movwf	(_line_coding+5)& (0+255),b
 28108                           
 28109                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 28110  0160AA  0E08               	movlw	8
 28111  0160AC  0101               	movlb	1	; () banked
 28112  0160AE  6F8F               	movwf	(_line_coding+6)& (0+255),b
 28113                           
 28114                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 28115  0160B0  0E00               	movlw	0
 28116  0160B2  6E18               	movwf	_cdc_rx_len,c
 28117                           
 28118                           ; BSR set to: 1
 28119                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 28120  0160B4  0E1A               	movlw	26
 28121  0160B6  6E35               	movwf	USBEnableEndpoint@options,c
 28122  0160B8  0E01               	movlw	1
 28123  0160BA  ECC5  F0B3         	call	_USBEnableEndpoint
 28124                           
 28125                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28126  0160BE  0E1E               	movlw	30
 28127  0160C0  6E35               	movwf	USBEnableEndpoint@options,c
 28128  0160C2  0E02               	movlw	2
 28129  0160C4  ECC5  F0B3         	call	_USBEnableEndpoint
 28130                           
 28131                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28132  0160C8  0E00               	movlw	0
 28133  0160CA  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 28134  0160CC  0E00               	movlw	low _cdc_data_rx
 28135  0160CE  6E2E               	movwf	i2USBTransferOnePacket@data,c
 28136  0160D0  0E03               	movlw	high _cdc_data_rx
 28137  0160D2  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 28138  0160D4  0E40               	movlw	64
 28139  0160D6  6E30               	movwf	i2USBTransferOnePacket@len,c
 28140  0160D8  0E02               	movlw	2
 28141  0160DA  EC5F  F0AB         	call	i2_USBTransferOnePacket
 28142  0160DE  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28143  0160E2  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28144                           
 28145                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 28146  0160E6  0E00               	movlw	0
 28147  0160E8  0101               	movlb	1	; () banked
 28148  0160EA  6F0E               	movwf	_CDCDataInHandle& (0+255),b
 28149  0160EC  0E00               	movlw	0
 28150  0160EE  0101               	movlb	1	; () banked
 28151  0160F0  6F0F               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28152                           
 28153                           ; BSR set to: 1
 28154                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 28155  0160F2  0E00               	movlw	0
 28156  0160F4  6E19               	movwf	_cdc_trf_state,c
 28157                           
 28158                           ; BSR set to: 1
 28159  0160F6  0012               	return		;funcret
 28160  0160F8                     __end_of_CDCInitEP:
 28161                           	opt stack 0
 28162                           pclatu	equ	0xFFB
 28163                           pclath	equ	0xFFA
 28164                           tblptru	equ	0xFF8
 28165                           tblptrh	equ	0xFF7
 28166                           tblptrl	equ	0xFF6
 28167                           tablat	equ	0xFF5
 28168                           prodh	equ	0xFF4
 28169                           prodl	equ	0xFF3
 28170                           intcon	equ	0xFF2
 28171                           intcon2	equ	0xFF1
 28172                           postinc0	equ	0xFEE
 28173                           fsr0h	equ	0xFEA
 28174                           fsr0l	equ	0xFE9
 28175                           wreg	equ	0xFE8
 28176                           indf1	equ	0xFE7
 28177                           postinc1	equ	0xFE6
 28178                           postdec1	equ	0xFE5
 28179                           fsr1h	equ	0xFE2
 28180                           fsr1l	equ	0xFE1
 28181                           indf2	equ	0xFDF
 28182                           postinc2	equ	0xFDE
 28183                           postdec2	equ	0xFDD
 28184                           plusw2	equ	0xFDB
 28185                           fsr2h	equ	0xFDA
 28186                           fsr2l	equ	0xFD9
 28187                           status	equ	0xFD8
 28188                           
 28189 ;; *************** function i2_USBTransferOnePacket *****************
 28190 ;; Defined at:
 28191 ;;		line 996 in file "../My_library/usb/usb_device.c"
 28192 ;; Parameters:    Size  Location     Type
 28193 ;;  ep              1    wreg     unsigned char 
 28194 ;;  dir             1    0[COMRAM] unsigned char 
 28195 ;;  data            2    1[COMRAM] PTR unsigned char 
 28196 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28197 ;;  len             1    3[COMRAM] unsigned char 
 28198 ;; Auto vars:     Size  Location     Type
 28199 ;;  ep              1    4[COMRAM] unsigned char 
 28200 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28201 ;;		 -> NULL(0), BDT(48), 
 28202 ;; Return value:  Size  Location     Type
 28203 ;;                  2    0[COMRAM] PTR void 
 28204 ;; Registers used:
 28205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28206 ;; Tracked objects:
 28207 ;;		On entry : 0/0
 28208 ;;		On exit  : 0/0
 28209 ;;		Unchanged: 0/0
 28210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28212 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28214 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;Total ram usage:        7 bytes
 28216 ;; Hardware stack levels used:    1
 28217 ;; This function calls:
 28218 ;;		Nothing
 28219 ;; This function is called by:
 28220 ;;		_CDCInitEP
 28221 ;; This function uses a non-reentrant model
 28222 ;;
 28223                           
 28224                           	psect	text122
 28225  0156BE                     __ptext122:
 28226                           	opt stack 0
 28227  0156BE                     i2_USBTransferOnePacket:
 28228                           	opt stack 15
 28229                           
 28230                           ; BSR set to: 1
 28231                           ;incstack = 0
 28232                           ;i2USBTransferOnePacket@ep stored from wreg
 28233  0156BE  6E31               	movwf	i2USBTransferOnePacket@ep,c
 28234                           
 28235                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 28236                           ;usb_device.c: 1001: if(dir != 0)
 28237  0156C0  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28238  0156C2  B4D8               	btfsc	status,2,c
 28239  0156C4  D007               	goto	i2l6702
 28240                           
 28241                           ;usb_device.c: 1002: {
 28242                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 28243  0156C6  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28244  0156C8  0D02               	mullw	2
 28245  0156CA  0EF5               	movlw	low _pBDTEntryIn
 28246  0156CC  24F3               	addwf	prodl,w,c
 28247  0156CE  6ED9               	movwf	fsr2l,c
 28248  0156D0  0E00               	movlw	high _pBDTEntryIn
 28249  0156D2  D006               	goto	L14
 28250  0156D4                     i2l6702:
 28251                           
 28252                           ;usb_device.c: 1006: else
 28253                           ;usb_device.c: 1007: {
 28254                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 28255  0156D4  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28256  0156D6  0D02               	mullw	2
 28257  0156D8  0E00               	movlw	low _pBDTEntryOut
 28258  0156DA  24F3               	addwf	prodl,w,c
 28259  0156DC  6ED9               	movwf	fsr2l,c
 28260  0156DE  0E01               	movlw	high _pBDTEntryOut
 28261  0156E0                     L14:
 28262  0156E0  20F4               	addwfc	prodh,w,c
 28263  0156E2  6EDA               	movwf	fsr2h,c
 28264  0156E4  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 28265  0156E8  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28266                           
 28267                           ;usb_device.c: 1010: }
 28268                           ;usb_device.c: 1014: if(handle == 0)
 28269  0156EC  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28270  0156EE  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28271  0156F0  A4D8               	btfss	status,2,c
 28272  0156F2  D005               	goto	i2l6710
 28273                           
 28274                           ;usb_device.c: 1015: {
 28275                           ;usb_device.c: 1016: return 0;
 28276  0156F4  0E00               	movlw	0
 28277  0156F6  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28278  0156F8  0E00               	movlw	0
 28279  0156FA  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28280  0156FC  0012               	return	
 28281  0156FE                     i2l6710:
 28282                           
 28283                           ;usb_device.c: 1017: }
 28284                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 28285  0156FE  EE20 F002          	lfsr	2,2
 28286  015702  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28287  015704  26D9               	addwf	fsr2l,f,c
 28288  015706  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28289  015708  22DA               	addwfc	fsr2h,f,c
 28290  01570A  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28291  01570E  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28292                           
 28293                           ;usb_device.c: 1031: handle->CNT = len;
 28294  015712  EE20 F001          	lfsr	2,1
 28295  015716  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28296  015718  26D9               	addwf	fsr2l,f,c
 28297  01571A  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28298  01571C  22DA               	addwfc	fsr2h,f,c
 28299  01571E  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28300                           
 28301                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 28302  015722  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28303  015726  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28304  01572A  0E40               	movlw	64
 28305  01572C  16DF               	andwf	indf2,f,c
 28306                           
 28307                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 28308  01572E  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28309  015732  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28310  015736  0E00               	movlw	0
 28311  015738  86DB               	bsf	plusw2,3,c
 28312                           
 28313                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 28314  01573A  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28315  01573E  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28316  015742  0E00               	movlw	0
 28317  015744  8EDB               	bsf	plusw2,7,c
 28318                           
 28319                           ;usb_device.c: 1037: if(dir != 0)
 28320  015746  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28321  015748  B4D8               	btfsc	status,2,c
 28322  01574A  D007               	goto	i2l6722
 28323                           
 28324                           ;usb_device.c: 1038: {
 28325                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28326  01574C  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28327  01574E  0D02               	mullw	2
 28328  015750  0EF5               	movlw	low _pBDTEntryIn
 28329  015752  24F3               	addwf	prodl,w,c
 28330  015754  6ED9               	movwf	fsr2l,c
 28331  015756  0E00               	movlw	high _pBDTEntryIn
 28332  015758  D006               	goto	L15
 28333  01575A                     i2l6722:
 28334                           
 28335                           ;usb_device.c: 1042: else
 28336                           ;usb_device.c: 1043: {
 28337                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28338  01575A  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28339  01575C  0D02               	mullw	2
 28340  01575E  0E00               	movlw	low _pBDTEntryOut
 28341  015760  24F3               	addwf	prodl,w,c
 28342  015762  6ED9               	movwf	fsr2l,c
 28343  015764  0E01               	movlw	high _pBDTEntryOut
 28344  015766                     L15:
 28345  015766  20F4               	addwfc	prodh,w,c
 28346  015768  6EDA               	movwf	fsr2h,c
 28347  01576A  0E04               	movlw	4
 28348  01576C  1ADF               	xorwf	indf2,f,c
 28349                           
 28350                           ;usb_device.c: 1046: }
 28351                           ;usb_device.c: 1047: return (void*)handle;
 28352  01576E  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28353  015772  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28354  015776  0012               	return	
 28355  015778                     __end_ofi2_USBTransferOnePacket:
 28356                           	opt stack 0
 28357                           pclatu	equ	0xFFB
 28358                           pclath	equ	0xFFA
 28359                           tblptru	equ	0xFF8
 28360                           tblptrh	equ	0xFF7
 28361                           tblptrl	equ	0xFF6
 28362                           tablat	equ	0xFF5
 28363                           prodh	equ	0xFF4
 28364                           prodl	equ	0xFF3
 28365                           intcon	equ	0xFF2
 28366                           intcon2	equ	0xFF1
 28367                           postinc0	equ	0xFEE
 28368                           fsr0h	equ	0xFEA
 28369                           fsr0l	equ	0xFE9
 28370                           wreg	equ	0xFE8
 28371                           indf1	equ	0xFE7
 28372                           postinc1	equ	0xFE6
 28373                           postdec1	equ	0xFE5
 28374                           fsr1h	equ	0xFE2
 28375                           fsr1l	equ	0xFE1
 28376                           indf2	equ	0xFDF
 28377                           postinc2	equ	0xFDE
 28378                           postdec2	equ	0xFDD
 28379                           plusw2	equ	0xFDB
 28380                           fsr2h	equ	0xFDA
 28381                           fsr2l	equ	0xFD9
 28382                           status	equ	0xFD8
 28383                           
 28384 ;; *************** function _USBEnableEndpoint *****************
 28385 ;; Defined at:
 28386 ;;		line 879 in file "../My_library/usb/usb_device.c"
 28387 ;; Parameters:    Size  Location     Type
 28388 ;;  ep              1    wreg     unsigned char 
 28389 ;;  options         1    8[COMRAM] unsigned char 
 28390 ;; Auto vars:     Size  Location     Type
 28391 ;;  ep              1   11[COMRAM] unsigned char 
 28392 ;;  p               2    9[COMRAM] PTR unsigned char 
 28393 ;;		 -> UEP0(1), 
 28394 ;; Return value:  Size  Location     Type
 28395 ;;		None               void
 28396 ;; Registers used:
 28397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28398 ;; Tracked objects:
 28399 ;;		On entry : 0/0
 28400 ;;		On exit  : 0/0
 28401 ;;		Unchanged: 0/0
 28402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28404 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28407 ;;Total ram usage:        4 bytes
 28408 ;; Hardware stack levels used:    1
 28409 ;; Hardware stack levels required when called:    1
 28410 ;; This function calls:
 28411 ;;		_USBConfigureEndpoint
 28412 ;; This function is called by:
 28413 ;;		_CDCInitEP
 28414 ;; This function uses a non-reentrant model
 28415 ;;
 28416                           
 28417                           	psect	text123
 28418  01678A                     __ptext123:
 28419                           	opt stack 0
 28420  01678A                     _USBEnableEndpoint:
 28421                           	opt stack 14
 28422                           
 28423                           ;incstack = 0
 28424                           ;USBEnableEndpoint@ep stored from wreg
 28425  01678A  6E38               	movwf	USBEnableEndpoint@ep,c
 28426                           
 28427                           ;usb_device.c: 881: unsigned char* p;
 28428                           ;usb_device.c: 885: if(options & 0x04)
 28429  01678C  A435               	btfss	USBEnableEndpoint@options,2,c
 28430  01678E  D005               	goto	i2l6690
 28431                           
 28432                           ;usb_device.c: 886: {
 28433                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 28434  016790  0E00               	movlw	0
 28435  016792  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28436  016794  5038               	movf	USBEnableEndpoint@ep,w,c
 28437  016796  ECF6  F0AC         	call	_USBConfigureEndpoint
 28438  01679A                     i2l6690:
 28439                           
 28440                           ;usb_device.c: 888: }
 28441                           ;usb_device.c: 889: if(options & 0x02)
 28442  01679A  A235               	btfss	USBEnableEndpoint@options,1,c
 28443  01679C  D005               	goto	i2l6694
 28444                           
 28445                           ;usb_device.c: 890: {
 28446                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 28447  01679E  0E01               	movlw	1
 28448  0167A0  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28449  0167A2  5038               	movf	USBEnableEndpoint@ep,w,c
 28450  0167A4  ECF6  F0AC         	call	_USBConfigureEndpoint
 28451  0167A8                     i2l6694:
 28452                           
 28453                           ;usb_device.c: 892: }
 28454                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 28455  0167A8  5038               	movf	USBEnableEndpoint@ep,w,c
 28456  0167AA  0D01               	mullw	1
 28457  0167AC  0E26               	movlw	38
 28458  0167AE  24F3               	addwf	prodl,w,c
 28459  0167B0  6E36               	movwf	USBEnableEndpoint@p,c
 28460  0167B2  0E0F               	movlw	15
 28461  0167B4  20F4               	addwfc	prodh,w,c
 28462  0167B6  6E37               	movwf	USBEnableEndpoint@p+1,c
 28463                           
 28464                           ;usb_device.c: 902: *p = options;
 28465  0167B8  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28466  0167BC  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28467  0167C0  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28468  0167C4  0012               	return		;funcret
 28469  0167C6                     __end_of_USBEnableEndpoint:
 28470                           	opt stack 0
 28471                           pclatu	equ	0xFFB
 28472                           pclath	equ	0xFFA
 28473                           tblptru	equ	0xFF8
 28474                           tblptrh	equ	0xFF7
 28475                           tblptrl	equ	0xFF6
 28476                           tablat	equ	0xFF5
 28477                           prodh	equ	0xFF4
 28478                           prodl	equ	0xFF3
 28479                           intcon	equ	0xFF2
 28480                           intcon2	equ	0xFF1
 28481                           postinc0	equ	0xFEE
 28482                           fsr0h	equ	0xFEA
 28483                           fsr0l	equ	0xFE9
 28484                           wreg	equ	0xFE8
 28485                           indf1	equ	0xFE7
 28486                           postinc1	equ	0xFE6
 28487                           postdec1	equ	0xFE5
 28488                           fsr1h	equ	0xFE2
 28489                           fsr1l	equ	0xFE1
 28490                           indf2	equ	0xFDF
 28491                           postinc2	equ	0xFDE
 28492                           postdec2	equ	0xFDD
 28493                           plusw2	equ	0xFDB
 28494                           fsr2h	equ	0xFDA
 28495                           fsr2l	equ	0xFD9
 28496                           status	equ	0xFD8
 28497                           
 28498 ;; *************** function _USBConfigureEndpoint *****************
 28499 ;; Defined at:
 28500 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 28501 ;; Parameters:    Size  Location     Type
 28502 ;;  EPNum           1    wreg     unsigned char 
 28503 ;;  direction       1    0[COMRAM] unsigned char 
 28504 ;; Auto vars:     Size  Location     Type
 28505 ;;  EPNum           1    5[COMRAM] unsigned char 
 28506 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28507 ;;		 -> BDT(48), 
 28508 ;; Return value:  Size  Location     Type
 28509 ;;		None               void
 28510 ;; Registers used:
 28511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28512 ;; Tracked objects:
 28513 ;;		On entry : 0/0
 28514 ;;		On exit  : 0/0
 28515 ;;		Unchanged: 0/0
 28516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28517 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28518 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28521 ;;Total ram usage:        8 bytes
 28522 ;; Hardware stack levels used:    1
 28523 ;; This function calls:
 28524 ;;		Nothing
 28525 ;; This function is called by:
 28526 ;;		_USBEnableEndpoint
 28527 ;; This function uses a non-reentrant model
 28528 ;;
 28529                           
 28530                           	psect	text124
 28531  0159EC                     __ptext124:
 28532                           	opt stack 0
 28533  0159EC                     _USBConfigureEndpoint:
 28534                           	opt stack 14
 28535                           
 28536                           ;incstack = 0
 28537                           ;USBConfigureEndpoint@EPNum stored from wreg
 28538  0159EC  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28539                           
 28540                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 28541                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 28542  0159EE  0E00               	movlw	0
 28543  0159F0  6E33               	movwf	USBConfigureEndpoint@handle,c
 28544  0159F2  0E0D               	movlw	13
 28545  0159F4  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28546                           
 28547                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 28548  0159F6  502D               	movf	USBConfigureEndpoint@direction,w,c
 28549  0159F8  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28550  0159FA  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28551  0159FC  90D8               	bcf	status,0,c
 28552  0159FE  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28553  015A00  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28554  015A02  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28555  015A04  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28556  015A06  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28557  015A08  90D8               	bcf	status,0,c
 28558  015A0A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28559  015A0C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28560  015A0E  90D8               	bcf	status,0,c
 28561  015A10  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28562  015A12  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28563  015A14  502E               	movf	??_USBConfigureEndpoint,w,c
 28564  015A16  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28565  015A18  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28566  015A1A  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28567  015A1C  90D8               	bcf	status,0,c
 28568  015A1E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28569  015A20  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28570  015A22  90D8               	bcf	status,0,c
 28571  015A24  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28572  015A26  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28573  015A28  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28574  015A2A  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28575  015A2C  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28576  015A2E  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28577                           
 28578                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 28579  015A30  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28580  015A34  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28581  015A38  9EDF               	bcf	indf2,7,c
 28582                           
 28583                           ;usb_device.c: 1558: if(direction == 0)
 28584  015A3A  502D               	movf	USBConfigureEndpoint@direction,w,c
 28585  015A3C  A4D8               	btfss	status,2,c
 28586  015A3E  D007               	goto	i2l6680
 28587                           
 28588                           ;usb_device.c: 1559: {
 28589                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 28590  015A40  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28591  015A42  0D02               	mullw	2
 28592  015A44  0E00               	movlw	low _pBDTEntryOut
 28593  015A46  24F3               	addwf	prodl,w,c
 28594  015A48  6ED9               	movwf	fsr2l,c
 28595  015A4A  0E01               	movlw	high _pBDTEntryOut
 28596  015A4C  D006               	goto	L16
 28597  015A4E                     i2l6680:
 28598                           
 28599                           ;usb_device.c: 1562: else
 28600                           ;usb_device.c: 1563: {
 28601                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 28602  015A4E  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28603  015A50  0D02               	mullw	2
 28604  015A52  0EF5               	movlw	low _pBDTEntryIn
 28605  015A54  24F3               	addwf	prodl,w,c
 28606  015A56  6ED9               	movwf	fsr2l,c
 28607  015A58  0E00               	movlw	high _pBDTEntryIn
 28608  015A5A                     L16:
 28609  015A5A  20F4               	addwfc	prodh,w,c
 28610  015A5C  6EDA               	movwf	fsr2h,c
 28611  015A5E  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28612  015A62  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28613                           
 28614                           ;usb_device.c: 1565: }
 28615                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 28616  015A66  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28617  015A6A  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28618  015A6E  9CDF               	bcf	indf2,6,c
 28619                           
 28620                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 28621  015A70  EE20 F004          	lfsr	2,4
 28622  015A74  5033               	movf	USBConfigureEndpoint@handle,w,c
 28623  015A76  26D9               	addwf	fsr2l,f,c
 28624  015A78  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28625  015A7A  22DA               	addwfc	fsr2h,f,c
 28626  015A7C  8CDF               	bsf	indf2,6,c
 28627  015A7E  0012               	return		;funcret
 28628  015A80                     __end_of_USBConfigureEndpoint:
 28629                           	opt stack 0
 28630                           pclatu	equ	0xFFB
 28631                           pclath	equ	0xFFA
 28632                           tblptru	equ	0xFF8
 28633                           tblptrh	equ	0xFF7
 28634                           tblptrl	equ	0xFF6
 28635                           tablat	equ	0xFF5
 28636                           prodh	equ	0xFF4
 28637                           prodl	equ	0xFF3
 28638                           intcon	equ	0xFF2
 28639                           intcon2	equ	0xFF1
 28640                           postinc0	equ	0xFEE
 28641                           fsr0h	equ	0xFEA
 28642                           fsr0l	equ	0xFE9
 28643                           wreg	equ	0xFE8
 28644                           indf1	equ	0xFE7
 28645                           postinc1	equ	0xFE6
 28646                           postdec1	equ	0xFE5
 28647                           fsr1h	equ	0xFE2
 28648                           fsr1l	equ	0xFE1
 28649                           indf2	equ	0xFDF
 28650                           postinc2	equ	0xFDE
 28651                           postdec2	equ	0xFDD
 28652                           plusw2	equ	0xFDB
 28653                           fsr2h	equ	0xFDA
 28654                           fsr2l	equ	0xFD9
 28655                           status	equ	0xFD8
 28656                           
 28657 ;; *************** function _USBCtrlTrfOutHandler *****************
 28658 ;; Defined at:
 28659 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 28660 ;; Parameters:    Size  Location     Type
 28661 ;;		None
 28662 ;; Auto vars:     Size  Location     Type
 28663 ;;		None
 28664 ;; Return value:  Size  Location     Type
 28665 ;;		None               void
 28666 ;; Registers used:
 28667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28668 ;; Tracked objects:
 28669 ;;		On entry : 0/0
 28670 ;;		On exit  : 0/0
 28671 ;;		Unchanged: 0/0
 28672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28677 ;;Total ram usage:        0 bytes
 28678 ;; Hardware stack levels used:    1
 28679 ;; Hardware stack levels required when called:    2
 28680 ;; This function calls:
 28681 ;;		_USBCtrlTrfRxService
 28682 ;; This function is called by:
 28683 ;;		_USBCtrlEPService
 28684 ;; This function uses a non-reentrant model
 28685 ;;
 28686                           
 28687                           	psect	text125
 28688  0164D0                     __ptext125:
 28689                           	opt stack 0
 28690  0164D0                     _USBCtrlTrfOutHandler:
 28691                           	opt stack 15
 28692                           
 28693                           ;usb_device.c: 2544: if(controlTransferState == 2)
 28694                           
 28695                           ;incstack = 0
 28696  0164D0  0E02               	movlw	2
 28697  0164D2  181B               	xorwf	_controlTransferState,w,c	;volatile
 28698  0164D4  A4D8               	btfss	status,2,c
 28699  0164D6  D003               	goto	i2l7838
 28700                           
 28701                           ;usb_device.c: 2545: {
 28702                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 28703  0164D8  ECA8  F09D         	call	_USBCtrlTrfRxService	;wreg free
 28704                           
 28705                           ;usb_device.c: 2547: }
 28706  0164DC  0012               	return	
 28707  0164DE                     i2l7838:
 28708                           
 28709                           ;usb_device.c: 2548: else
 28710                           ;usb_device.c: 2549: {
 28711                           ;usb_device.c: 2552: controlTransferState = 0;
 28712  0164DE  0E00               	movlw	0
 28713  0164E0  6E1B               	movwf	_controlTransferState,c	;volatile
 28714                           
 28715                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 28716  0164E2  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28717  0164E4  A4D8               	btfss	status,2,c
 28718  0164E6  D01F               	goto	i2l7846
 28719                           
 28720                           ;usb_device.c: 2560: {
 28721                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 28722  0164E8  EE20 F001          	lfsr	2,1
 28723  0164EC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28724  0164EE  26D9               	addwf	fsr2l,f,c
 28725  0164F0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28726  0164F2  22DA               	addwfc	fsr2h,f,c
 28727  0164F4  0E08               	movlw	8
 28728  0164F6  6EDF               	movwf	indf2,c
 28729                           
 28730                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28731  0164F8  EE20 F002          	lfsr	2,2
 28732  0164FC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28733  0164FE  26D9               	addwf	fsr2l,f,c
 28734  016500  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28735  016502  22DA               	addwfc	fsr2h,f,c
 28736  016504  0E30               	movlw	48
 28737  016506  6EDE               	movwf	postinc2,c
 28738  016508  0E0D               	movlw	13
 28739  01650A  6EDD               	movwf	postdec2,c
 28740                           
 28741                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28742  01650C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28743  016510  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28744  016514  0E0C               	movlw	12
 28745  016516  6EDF               	movwf	indf2,c
 28746                           
 28747                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28748  016518  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28749  01651C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28750  016520  0E00               	movlw	0
 28751  016522  8EDB               	bsf	plusw2,7,c
 28752                           
 28753                           ;usb_device.c: 2565: }
 28754  016524  0012               	return	
 28755  016526                     i2l7846:
 28756                           
 28757                           ;usb_device.c: 2566: else
 28758                           ;usb_device.c: 2567: {
 28759                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 28760  016526  0E00               	movlw	0
 28761  016528  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28762  01652A  0012               	return	
 28763  01652C                     __end_of_USBCtrlTrfOutHandler:
 28764                           	opt stack 0
 28765                           pclatu	equ	0xFFB
 28766                           pclath	equ	0xFFA
 28767                           tblptru	equ	0xFF8
 28768                           tblptrh	equ	0xFF7
 28769                           tblptrl	equ	0xFF6
 28770                           tablat	equ	0xFF5
 28771                           prodh	equ	0xFF4
 28772                           prodl	equ	0xFF3
 28773                           intcon	equ	0xFF2
 28774                           intcon2	equ	0xFF1
 28775                           postinc0	equ	0xFEE
 28776                           fsr0h	equ	0xFEA
 28777                           fsr0l	equ	0xFE9
 28778                           wreg	equ	0xFE8
 28779                           indf1	equ	0xFE7
 28780                           postinc1	equ	0xFE6
 28781                           postdec1	equ	0xFE5
 28782                           fsr1h	equ	0xFE2
 28783                           fsr1l	equ	0xFE1
 28784                           indf2	equ	0xFDF
 28785                           postinc2	equ	0xFDE
 28786                           postdec2	equ	0xFDD
 28787                           plusw2	equ	0xFDB
 28788                           fsr2h	equ	0xFDA
 28789                           fsr2l	equ	0xFD9
 28790                           status	equ	0xFD8
 28791                           
 28792 ;; *************** function _USBCtrlTrfRxService *****************
 28793 ;; Defined at:
 28794 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 28795 ;; Parameters:    Size  Location     Type
 28796 ;;		None
 28797 ;; Auto vars:     Size  Location     Type
 28798 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28799 ;;  i               1    0[COMRAM] unsigned char 
 28800 ;; Return value:  Size  Location     Type
 28801 ;;		None               void
 28802 ;; Registers used:
 28803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28804 ;; Tracked objects:
 28805 ;;		On entry : 0/0
 28806 ;;		On exit  : 0/0
 28807 ;;		Unchanged: 0/0
 28808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28813 ;;Total ram usage:        2 bytes
 28814 ;; Hardware stack levels used:    1
 28815 ;; Hardware stack levels required when called:    1
 28816 ;; This function calls:
 28817 ;;		_USBCtrlEPAllowStatusStage
 28818 ;; This function is called by:
 28819 ;;		_USBCtrlTrfOutHandler
 28820 ;; This function uses a non-reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text126
 28824  013B50                     __ptext126:
 28825                           	opt stack 0
 28826  013B50                     _USBCtrlTrfRxService:
 28827                           	opt stack 15
 28828                           
 28829                           ;usb_device.c: 1855: uint8_t byteToRead;
 28830                           ;usb_device.c: 1856: uint8_t i;
 28831                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28832                           
 28833                           ;incstack = 0
 28834  013B50  EE20 F001          	lfsr	2,1
 28835  013B54  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28836  013B56  26D9               	addwf	fsr2l,f,c
 28837  013B58  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28838  013B5A  22DA               	addwfc	fsr2h,f,c
 28839  013B5C  50DF               	movf	indf2,w,c
 28840  013B5E  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 28841                           
 28842                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 28843  013B60  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28844  013B62  0100               	movlb	0	; () banked
 28845  013B64  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28846  013B66  0E00               	movlw	0
 28847  013B68  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28848  013B6A  A0D8               	btfss	status,0,c
 28849                           
 28850                           ; BSR set to: 0
 28851                           ;usb_device.c: 1867: {
 28852                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 28853  013B6C  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28854                           
 28855                           ; BSR set to: 0
 28856                           ;usb_device.c: 1869: }
 28857                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 28858                           
 28859                           ; BSR set to: 0
 28860  013B70  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28861  013B72  0100               	movlb	0	; () banked
 28862  013B74  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 28863  013B76  0E00               	movlw	0
 28864  013B78  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 28865                           
 28866                           ; BSR set to: 0
 28867                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 28868  013B7A  0E00               	movlw	0
 28869  013B7C  6E2D               	movwf	USBCtrlTrfRxService@i,c
 28870  013B7E  D012               	goto	i2l7672
 28871  013B80                     i2l7666:
 28872                           
 28873                           ; BSR set to: 0
 28874                           ;usb_device.c: 1876: {
 28875                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28876  013B80  502D               	movf	USBCtrlTrfRxService@i,w,c
 28877  013B82  0D01               	mullw	1
 28878  013B84  0E38               	movlw	56
 28879  013B86  24F3               	addwf	prodl,w,c
 28880  013B88  6ED9               	movwf	fsr2l,c
 28881  013B8A  0E0D               	movlw	13
 28882  013B8C  20F4               	addwfc	prodh,w,c
 28883  013B8E  6EDA               	movwf	fsr2h,c
 28884  013B90  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 28885  013B94  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 28886  013B98  CFDF FFE7          	movff	indf2,indf1
 28887                           
 28888                           ; BSR set to: 0
 28889  013B9C  0100               	movlb	0	; () banked
 28890  013B9E  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 28891  013BA0  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 28892                           
 28893                           ; BSR set to: 0
 28894  013BA2  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 28895  013BA4                     i2l7672:
 28896                           
 28897                           ; BSR set to: 0
 28898  013BA4  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28899  013BA6  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 28900  013BA8  A0D8               	btfss	status,0,c
 28901  013BAA  D7EA               	goto	i2l7666
 28902                           
 28903                           ; BSR set to: 0
 28904                           ;usb_device.c: 1878: }
 28905                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 28906                           
 28907                           ; BSR set to: 0
 28908  013BAC  0100               	movlb	0	; () banked
 28909  013BAE  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28910  013BB0  0100               	movlb	0	; () banked
 28911  013BB2  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28912  013BB4  B4D8               	btfsc	status,2,c
 28913  013BB6  D032               	goto	i2l7688
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;usb_device.c: 1883: {
 28917                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 28918  013BB8  EE20 F001          	lfsr	2,1
 28919  013BBC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28920  013BBE  26D9               	addwf	fsr2l,f,c
 28921  013BC0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28922  013BC2  22DA               	addwfc	fsr2h,f,c
 28923  013BC4  0E08               	movlw	8
 28924  013BC6  6EDF               	movwf	indf2,c
 28925                           
 28926                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28927  013BC8  EE20 F002          	lfsr	2,2
 28928  013BCC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28929  013BCE  26D9               	addwf	fsr2l,f,c
 28930  013BD0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28931  013BD2  22DA               	addwfc	fsr2h,f,c
 28932  013BD4  0E38               	movlw	56
 28933  013BD6  6EDE               	movwf	postinc2,c
 28934  013BD8  0E0D               	movlw	13
 28935  013BDA  6EDD               	movwf	postdec2,c
 28936                           
 28937                           ; BSR set to: 0
 28938                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28939  013BDC  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28940  013BE0  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28941  013BE4  BCDF               	btfsc	indf2,6,c
 28942  013BE6  D00D               	goto	i2l7684
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;usb_device.c: 1887: {
 28946                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28947  013BE8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28948  013BEC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28949  013BF0  0E48               	movlw	72
 28950  013BF2  6EDF               	movwf	indf2,c
 28951                           
 28952                           ; BSR set to: 0
 28953                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28954  013BF4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28955  013BF8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28956  013BFC  0E00               	movlw	0
 28957  013BFE  8EDB               	bsf	plusw2,7,c
 28958                           
 28959                           ;usb_device.c: 1890: }
 28960  013C00  0012               	return	
 28961  013C02                     i2l7684:
 28962                           
 28963                           ; BSR set to: 0
 28964                           ;usb_device.c: 1891: else
 28965                           ;usb_device.c: 1892: {
 28966                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28967  013C02  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28968  013C06  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28969  013C0A  0E08               	movlw	8
 28970  013C0C  6EDF               	movwf	indf2,c
 28971                           
 28972                           ; BSR set to: 0
 28973                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28974  013C0E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28975  013C12  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28976  013C16  0E00               	movlw	0
 28977  013C18  8EDB               	bsf	plusw2,7,c
 28978                           
 28979                           ; BSR set to: 0
 28980                           ;usb_device.c: 1895: }
 28981                           ;usb_device.c: 1896: }
 28982  013C1A  0012               	return	
 28983  013C1C                     i2l7688:
 28984                           
 28985                           ; BSR set to: 0
 28986                           ;usb_device.c: 1897: else
 28987                           ;usb_device.c: 1898: {
 28988                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 28989  013C1C  EE20 F001          	lfsr	2,1
 28990  013C20  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28991  013C22  26D9               	addwf	fsr2l,f,c
 28992  013C24  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28993  013C26  22DA               	addwfc	fsr2h,f,c
 28994  013C28  0E08               	movlw	8
 28995  013C2A  6EDF               	movwf	indf2,c
 28996                           
 28997                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28998  013C2C  EE20 F002          	lfsr	2,2
 28999  013C30  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29000  013C32  26D9               	addwf	fsr2l,f,c
 29001  013C34  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29002  013C36  22DA               	addwfc	fsr2h,f,c
 29003  013C38  0E30               	movlw	48
 29004  013C3A  6EDE               	movwf	postinc2,c
 29005  013C3C  0E0D               	movlw	13
 29006  013C3E  6EDD               	movwf	postdec2,c
 29007                           
 29008                           ; BSR set to: 0
 29009                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29010  013C40  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29011  013C44  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29012  013C48  0E04               	movlw	4
 29013  013C4A  6EDF               	movwf	indf2,c
 29014                           
 29015                           ; BSR set to: 0
 29016                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29017  013C4C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29018  013C50  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29019  013C54  0E00               	movlw	0
 29020  013C56  8EDB               	bsf	plusw2,7,c
 29021                           
 29022                           ; BSR set to: 0
 29023                           ;usb_device.c: 1927: }
 29024                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 29025                           
 29026                           ; BSR set to: 0
 29027                           ;usb_device.c: 1916: {
 29028                           ;usb_device.c: 1922: outPipes[0].pFunc();
 29029  013C58  0100               	movlb	0	; () banked
 29030  013C5A  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29031                           
 29032                           ; BSR set to: 0
 29033                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 29034  013C5C  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29035  013C5E  A4D8               	btfss	status,2,c
 29036  013C60  0012               	return	
 29037                           
 29038                           ; BSR set to: 0
 29039                           ;usb_device.c: 1943: {
 29040                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 29041  013C62  EC62  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29042  013C66  0012               	return	
 29043  013C68                     __end_of_USBCtrlTrfRxService:
 29044                           	opt stack 0
 29045                           pclatu	equ	0xFFB
 29046                           pclath	equ	0xFFA
 29047                           tblptru	equ	0xFF8
 29048                           tblptrh	equ	0xFF7
 29049                           tblptrl	equ	0xFF6
 29050                           tablat	equ	0xFF5
 29051                           prodh	equ	0xFF4
 29052                           prodl	equ	0xFF3
 29053                           intcon	equ	0xFF2
 29054                           intcon2	equ	0xFF1
 29055                           postinc0	equ	0xFEE
 29056                           fsr0h	equ	0xFEA
 29057                           fsr0l	equ	0xFE9
 29058                           wreg	equ	0xFE8
 29059                           indf1	equ	0xFE7
 29060                           postinc1	equ	0xFE6
 29061                           postdec1	equ	0xFE5
 29062                           fsr1h	equ	0xFE2
 29063                           fsr1l	equ	0xFE1
 29064                           indf2	equ	0xFDF
 29065                           postinc2	equ	0xFDE
 29066                           postdec2	equ	0xFDD
 29067                           plusw2	equ	0xFDB
 29068                           fsr2h	equ	0xFDA
 29069                           fsr2l	equ	0xFD9
 29070                           status	equ	0xFD8
 29071                           
 29072 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29073 ;; Defined at:
 29074 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 29075 ;; Parameters:    Size  Location     Type
 29076 ;;		None
 29077 ;; Auto vars:     Size  Location     Type
 29078 ;;		None
 29079 ;; Return value:  Size  Location     Type
 29080 ;;		None               void
 29081 ;; Registers used:
 29082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29083 ;; Tracked objects:
 29084 ;;		On entry : 0/0
 29085 ;;		On exit  : 0/0
 29086 ;;		Unchanged: 0/0
 29087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29092 ;;Total ram usage:        0 bytes
 29093 ;; Hardware stack levels used:    1
 29094 ;; This function calls:
 29095 ;;		Nothing
 29096 ;; This function is called by:
 29097 ;;		_USBDeviceTasks
 29098 ;;		_USBCtrlEPServiceComplete
 29099 ;;		_USBCtrlTrfRxService
 29100 ;; This function uses a non-reentrant model
 29101 ;;
 29102                           
 29103                           	psect	text127
 29104  0150C4                     __ptext127:
 29105                           	opt stack 0
 29106  0150C4                     _USBCtrlEPAllowStatusStage:
 29107                           	opt stack 15
 29108                           
 29109                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 29110                           
 29111                           ;incstack = 0
 29112  0150C4  5014               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29113  0150C6  A4D8               	btfss	status,2,c
 29114  0150C8  0012               	return	
 29115                           
 29116                           ;usb_device.c: 1425: {
 29117                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 29118  0150CA  0E01               	movlw	1
 29119  0150CC  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29120                           
 29121                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 29122  0150CE  5015               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29123  0150D0  A4D8               	btfss	status,2,c
 29124  0150D2  0012               	return	
 29125                           
 29126                           ;usb_device.c: 1428: {
 29127                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 29128  0150D4  0E01               	movlw	1
 29129  0150D6  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29130                           
 29131                           ;usb_device.c: 1433: if(controlTransferState == 2)
 29132  0150D8  0E02               	movlw	2
 29133  0150DA  181B               	xorwf	_controlTransferState,w,c	;volatile
 29134  0150DC  A4D8               	btfss	status,2,c
 29135  0150DE  D016               	goto	i2l7110
 29136                           
 29137                           ;usb_device.c: 1434: {
 29138                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 29139  0150E0  0100               	movlb	0	; () banked
 29140  0150E2  EE20 F001          	lfsr	2,1
 29141  0150E6  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29142  0150E8  26D9               	addwf	fsr2l,f,c
 29143  0150EA  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29144  0150EC  22DA               	addwfc	fsr2h,f,c
 29145  0150EE  0E00               	movlw	0
 29146  0150F0  6EDF               	movwf	indf2,c
 29147                           
 29148                           ; BSR set to: 0
 29149                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29150  0150F2  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29151  0150F6  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29152  0150FA  0E48               	movlw	72
 29153  0150FC  6EDF               	movwf	indf2,c
 29154                           
 29155                           ; BSR set to: 0
 29156                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29157  0150FE  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29158  015102  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29159  015106  0E00               	movlw	0
 29160  015108  8EDB               	bsf	plusw2,7,c
 29161                           
 29162                           ;usb_device.c: 1438: }
 29163  01510A  0012               	return	
 29164  01510C                     i2l7110:
 29165                           
 29166                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 29167  01510C  041B               	decf	_controlTransferState,w,c	;volatile
 29168  01510E  A4D8               	btfss	status,2,c
 29169  015110  0012               	return	
 29170                           
 29171                           ;usb_device.c: 1440: {
 29172                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 29173  015112  0E00               	movlw	0
 29174  015114  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29175                           
 29176                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 29177  015116  EE20 F001          	lfsr	2,1
 29178  01511A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29179  01511C  26D9               	addwf	fsr2l,f,c
 29180  01511E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29181  015120  22DA               	addwfc	fsr2h,f,c
 29182  015122  0E08               	movlw	8
 29183  015124  6EDF               	movwf	indf2,c
 29184                           
 29185                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29186  015126  EE20 F002          	lfsr	2,2
 29187  01512A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29188  01512C  26D9               	addwf	fsr2l,f,c
 29189  01512E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29190  015130  22DA               	addwfc	fsr2h,f,c
 29191  015132  0E30               	movlw	48
 29192  015134  6EDE               	movwf	postinc2,c
 29193  015136  0E0D               	movlw	13
 29194  015138  6EDD               	movwf	postdec2,c
 29195                           
 29196                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29197  01513A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29198  01513E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29199  015142  0E04               	movlw	4
 29200  015144  6EDF               	movwf	indf2,c
 29201                           
 29202                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29203  015146  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29204  01514A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29205  01514E  0E00               	movlw	0
 29206  015150  8EDB               	bsf	plusw2,7,c
 29207                           
 29208                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 29209  015152  0E01               	movlw	1
 29210  015154  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29211                           
 29212                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 29213  015156  EE20 F001          	lfsr	2,1
 29214  01515A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29215  01515C  26D9               	addwf	fsr2l,f,c
 29216  01515E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29217  015160  22DA               	addwfc	fsr2h,f,c
 29218  015162  0E08               	movlw	8
 29219  015164  6EDF               	movwf	indf2,c
 29220                           
 29221                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29222  015166  EE20 F002          	lfsr	2,2
 29223  01516A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29224  01516C  26D9               	addwf	fsr2l,f,c
 29225  01516E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29226  015170  22DA               	addwfc	fsr2h,f,c
 29227  015172  0E30               	movlw	48
 29228  015174  6EDE               	movwf	postinc2,c
 29229  015176  0E0D               	movlw	13
 29230  015178  6EDD               	movwf	postdec2,c
 29231                           
 29232                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29233  01517A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29234  01517E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29235  015182  0E80               	movlw	128
 29236  015184  6EDF               	movwf	indf2,c
 29237  015186  0012               	return	
 29238  015188                     __end_of_USBCtrlEPAllowStatusStage:
 29239                           	opt stack 0
 29240                           pclatu	equ	0xFFB
 29241                           pclath	equ	0xFFA
 29242                           tblptru	equ	0xFF8
 29243                           tblptrh	equ	0xFF7
 29244                           tblptrl	equ	0xFF6
 29245                           tablat	equ	0xFF5
 29246                           prodh	equ	0xFF4
 29247                           prodl	equ	0xFF3
 29248                           intcon	equ	0xFF2
 29249                           intcon2	equ	0xFF1
 29250                           postinc0	equ	0xFEE
 29251                           fsr0h	equ	0xFEA
 29252                           fsr0l	equ	0xFE9
 29253                           wreg	equ	0xFE8
 29254                           indf1	equ	0xFE7
 29255                           postinc1	equ	0xFE6
 29256                           postdec1	equ	0xFE5
 29257                           fsr1h	equ	0xFE2
 29258                           fsr1l	equ	0xFE1
 29259                           indf2	equ	0xFDF
 29260                           postinc2	equ	0xFDE
 29261                           postdec2	equ	0xFDD
 29262                           plusw2	equ	0xFDB
 29263                           fsr2h	equ	0xFDA
 29264                           fsr2l	equ	0xFD9
 29265                           status	equ	0xFD8
 29266                           
 29267 ;; *************** function _USBCtrlTrfInHandler *****************
 29268 ;; Defined at:
 29269 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 29270 ;; Parameters:    Size  Location     Type
 29271 ;;		None
 29272 ;; Auto vars:     Size  Location     Type
 29273 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29274 ;; Return value:  Size  Location     Type
 29275 ;;		None               void
 29276 ;; Registers used:
 29277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29278 ;; Tracked objects:
 29279 ;;		On entry : 0/0
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29287 ;;Total ram usage:        1 bytes
 29288 ;; Hardware stack levels used:    1
 29289 ;; Hardware stack levels required when called:    1
 29290 ;; This function calls:
 29291 ;;		_USBCtrlTrfTxService
 29292 ;; This function is called by:
 29293 ;;		_USBCtrlEPService
 29294 ;; This function uses a non-reentrant model
 29295 ;;
 29296                           
 29297                           	psect	text128
 29298  015188                     __ptext128:
 29299                           	opt stack 0
 29300  015188                     _USBCtrlTrfInHandler:
 29301                           	opt stack 16
 29302                           
 29303                           ;usb_device.c: 2598: uint8_t lastDTS;
 29304                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29305                           
 29306                           ;incstack = 0
 29307  015188  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29308  01518C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29309  015190  0E00               	movlw	0
 29310  015192  BCDF               	btfsc	indf2,6,c
 29311  015194  0E01               	movlw	1
 29312  015196  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29313                           
 29314                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29315  015198  0E04               	movlw	4
 29316  01519A  0100               	movlb	0	; () banked
 29317  01519C  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 29321  01519E  0E08               	movlw	8
 29322  0151A0  1813               	xorwf	_USBDeviceState,w,c	;volatile
 29323  0151A2  A4D8               	btfss	status,2,c
 29324  0151A4  D00D               	goto	i2l7862
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;usb_device.c: 2609: {
 29328                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 29329  0151A6  010D               	movlb	13	; () banked
 29330  0151A8  5132               	movf	50,w,b	;volatile
 29331  0151AA  0B7F               	andlw	127
 29332  0151AC  010F               	movlb	15	; () banked
 29333  0151AE  6F38               	movwf	56,b	;volatile
 29334                           
 29335                           ; BSR set to: 15
 29336                           ;usb_device.c: 2611: if(UADDR != 0u)
 29337  0151B0  010F               	movlb	15	; () banked
 29338  0151B2  5138               	movf	56,w,b	;volatile
 29339  0151B4  B4D8               	btfsc	status,2,c
 29340  0151B6  D002               	goto	i2l7860
 29341                           
 29342                           ; BSR set to: 15
 29343                           ;usb_device.c: 2612: {
 29344                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 29345  0151B8  0E10               	movlw	16
 29346  0151BA  D001               	goto	L17
 29347  0151BC                     i2l7860:
 29348                           
 29349                           ; BSR set to: 15
 29350                           ;usb_device.c: 2615: else
 29351                           ;usb_device.c: 2616: {
 29352                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 29353  0151BC  0E04               	movlw	4
 29354  0151BE                     L17:
 29355  0151BE  6E13               	movwf	_USBDeviceState,c	;volatile
 29356  0151C0                     i2l7862:
 29357                           
 29358                           ;usb_device.c: 2618: }
 29359                           ;usb_device.c: 2619: }
 29360                           ;usb_device.c: 2622: if(controlTransferState == 1)
 29361  0151C0  041B               	decf	_controlTransferState,w,c	;volatile
 29362  0151C2  A4D8               	btfss	status,2,c
 29363  0151C4  D03B               	goto	i2l345
 29364                           
 29365                           ;usb_device.c: 2623: {
 29366                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29367  0151C6  0100               	movlb	0	; () banked
 29368  0151C8  EE20 F002          	lfsr	2,2
 29369  0151CC  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29370  0151CE  26D9               	addwf	fsr2l,f,c
 29371  0151D0  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29372  0151D2  22DA               	addwfc	fsr2h,f,c
 29373  0151D4  0E38               	movlw	56
 29374  0151D6  6EDE               	movwf	postinc2,c
 29375  0151D8  0E0D               	movlw	13
 29376  0151DA  6EDD               	movwf	postdec2,c
 29377                           
 29378                           ; BSR set to: 0
 29379                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 29380  0151DC  EC67  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 29381                           
 29382                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 29383  0151E0  0E02               	movlw	2
 29384  0151E2  1821               	xorwf	_shortPacketStatus,w,c	;volatile
 29385  0151E4  A4D8               	btfss	status,2,c
 29386  0151E6  D00D               	goto	i2l7874
 29387                           
 29388                           ;usb_device.c: 2632: {
 29389                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 29390  0151E8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29391  0151EC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29392  0151F0  0E04               	movlw	4
 29393  0151F2  6EDF               	movwf	indf2,c
 29394                           
 29395                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29396  0151F4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29397  0151F8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29398  0151FC  0E00               	movlw	0
 29399  0151FE  8EDB               	bsf	plusw2,7,c
 29400                           
 29401                           ;usb_device.c: 2637: }
 29402  015200  0012               	return	
 29403  015202                     i2l7874:
 29404                           
 29405                           ;usb_device.c: 2638: else
 29406                           ;usb_device.c: 2639: {
 29407                           ;usb_device.c: 2640: if(lastDTS == 0)
 29408  015202  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29409  015204  A4D8               	btfss	status,2,c
 29410  015206  D00D               	goto	i2l7880
 29411                           
 29412                           ;usb_device.c: 2641: {
 29413                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29414  015208  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29415  01520C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29416  015210  0E48               	movlw	72
 29417  015212  6EDF               	movwf	indf2,c
 29418                           
 29419                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29420  015214  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29421  015218  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29422  01521C  0E00               	movlw	0
 29423  01521E  8EDB               	bsf	plusw2,7,c
 29424                           
 29425                           ;usb_device.c: 2644: }
 29426  015220  0012               	return	
 29427  015222                     i2l7880:
 29428                           
 29429                           ;usb_device.c: 2645: else
 29430                           ;usb_device.c: 2646: {
 29431                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29432  015222  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29433  015226  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29434  01522A  0E08               	movlw	8
 29435  01522C  6EDF               	movwf	indf2,c
 29436                           
 29437                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29438  01522E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29439  015232  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29440  015236  0E00               	movlw	0
 29441  015238  8EDB               	bsf	plusw2,7,c
 29442                           
 29443                           ;usb_device.c: 2649: }
 29444                           ;usb_device.c: 2650: }
 29445                           ;usb_device.c: 2651: }
 29446  01523A  0012               	return	
 29447  01523C                     i2l345:
 29448                           
 29449                           ;usb_device.c: 2652: else
 29450                           ;usb_device.c: 2653: {
 29451                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 29452  01523C  0100               	movlb	0	; () banked
 29453  01523E  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29454  015240  D002               	goto	i2l7886
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;usb_device.c: 2662: }
 29458                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 29459                           
 29460                           ; BSR set to: 0
 29461                           ;usb_device.c: 2660: {
 29462                           ;usb_device.c: 2661: outPipes[0].pFunc();
 29463  015242  0100               	movlb	0	; () banked
 29464  015244  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29465  015246                     i2l7886:
 29466                           
 29467                           ; BSR set to: 0
 29468                           ;usb_device.c: 2664: }
 29469                           ;usb_device.c: 2666: controlTransferState = 0;
 29470  015246  0E00               	movlw	0
 29471  015248  6E1B               	movwf	_controlTransferState,c	;volatile
 29472  01524A  0012               	return	
 29473  01524C                     __end_of_USBCtrlTrfInHandler:
 29474                           	opt stack 0
 29475                           pclatu	equ	0xFFB
 29476                           pclath	equ	0xFFA
 29477                           tblptru	equ	0xFF8
 29478                           tblptrh	equ	0xFF7
 29479                           tblptrl	equ	0xFF6
 29480                           tablat	equ	0xFF5
 29481                           prodh	equ	0xFF4
 29482                           prodl	equ	0xFF3
 29483                           intcon	equ	0xFF2
 29484                           intcon2	equ	0xFF1
 29485                           postinc0	equ	0xFEE
 29486                           fsr0h	equ	0xFEA
 29487                           fsr0l	equ	0xFE9
 29488                           wreg	equ	0xFE8
 29489                           indf1	equ	0xFE7
 29490                           postinc1	equ	0xFE6
 29491                           postdec1	equ	0xFE5
 29492                           fsr1h	equ	0xFE2
 29493                           fsr1l	equ	0xFE1
 29494                           indf2	equ	0xFDF
 29495                           postinc2	equ	0xFDE
 29496                           postdec2	equ	0xFDD
 29497                           plusw2	equ	0xFDB
 29498                           fsr2h	equ	0xFDA
 29499                           fsr2l	equ	0xFD9
 29500                           status	equ	0xFD8
 29501                           
 29502 ;; *************** function _USBCtrlTrfTxService *****************
 29503 ;; Defined at:
 29504 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 29505 ;; Parameters:    Size  Location     Type
 29506 ;;		None
 29507 ;; Auto vars:     Size  Location     Type
 29508 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29509 ;; Return value:  Size  Location     Type
 29510 ;;		None               void
 29511 ;; Registers used:
 29512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29513 ;; Tracked objects:
 29514 ;;		On entry : 0/0
 29515 ;;		On exit  : 0/0
 29516 ;;		Unchanged: 0/0
 29517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29522 ;;Total ram usage:        1 bytes
 29523 ;; Hardware stack levels used:    1
 29524 ;; This function calls:
 29525 ;;		Nothing
 29526 ;; This function is called by:
 29527 ;;		_USBCtrlEPAllowDataStage
 29528 ;;		_USBCtrlTrfInHandler
 29529 ;; This function uses a non-reentrant model
 29530 ;;
 29531                           
 29532                           	psect	text129
 29533  0146CE                     __ptext129:
 29534                           	opt stack 0
 29535  0146CE                     _USBCtrlTrfTxService:
 29536                           	opt stack 14
 29537                           
 29538                           ;usb_device.c: 1774: uint8_t byteToSend;
 29539                           ;usb_device.c: 1778: byteToSend = 8;
 29540                           
 29541                           ;incstack = 0
 29542  0146CE  0E08               	movlw	8
 29543  0146D0  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29544                           
 29545                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 29546  0146D2  0100               	movlb	0	; () banked
 29547  0146D4  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29548  0146D6  E111               	bnz	i2l6962
 29549  0146D8  0E08               	movlw	8
 29550  0146DA  0100               	movlb	0	; () banked
 29551  0146DC  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29552  0146DE  B0D8               	btfsc	status,0,c
 29553  0146E0  D00C               	goto	i2l6962
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;usb_device.c: 1780: {
 29557                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 29558  0146E2  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29559                           
 29560                           ; BSR set to: 0
 29561                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 29562  0146E6  5021               	movf	_shortPacketStatus,w,c	;volatile
 29563  0146E8  A4D8               	btfss	status,2,c
 29564  0146EA  D002               	goto	i2l6958
 29565                           
 29566                           ; BSR set to: 0
 29567                           ;usb_device.c: 1789: {
 29568                           ;usb_device.c: 1790: shortPacketStatus = 1;
 29569  0146EC  0E01               	movlw	1
 29570  0146EE  D004               	goto	L18
 29571  0146F0                     i2l6958:
 29572                           
 29573                           ; BSR set to: 0
 29574                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 29575  0146F0  0421               	decf	_shortPacketStatus,w,c	;volatile
 29576  0146F2  A4D8               	btfss	status,2,c
 29577  0146F4  D002               	goto	i2l6962
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;usb_device.c: 1793: {
 29581                           ;usb_device.c: 1794: shortPacketStatus = 2;
 29582  0146F6  0E02               	movlw	2
 29583  0146F8                     L18:
 29584  0146F8  6E21               	movwf	_shortPacketStatus,c	;volatile
 29585  0146FA                     i2l6962:
 29586                           
 29587                           ; BSR set to: 0
 29588                           ;usb_device.c: 1795: }
 29589                           ;usb_device.c: 1796: }
 29590                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 29591  0146FA  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29592  0146FC  0100               	movlb	0	; () banked
 29593  0146FE  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29594  014700  0E00               	movlw	0
 29595  014702  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29596                           
 29597                           ; BSR set to: 0
 29598                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 29599  014704  0100               	movlb	0	; () banked
 29600  014706  EE20 F001          	lfsr	2,1
 29601  01470A  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29602  01470C  26D9               	addwf	fsr2l,f,c
 29603  01470E  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29604  014710  22DA               	addwfc	fsr2h,f,c
 29605  014712  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 29609  014716  0E38               	movlw	56
 29610  014718  0101               	movlb	1	; () banked
 29611  01471A  6F12               	movwf	_pDst& (0+255),b
 29612  01471C  0E0D               	movlw	13
 29613  01471E  0101               	movlb	1	; () banked
 29614  014720  6F13               	movwf	(_pDst+1)& (0+255),b
 29615                           
 29616                           ; BSR set to: 1
 29617                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29618  014722  0100               	movlb	0	; () banked
 29619  014724  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29620  014726  D01E               	goto	i2l6980
 29621  014728  D03E               	goto	i2l6990
 29622  01472A                     i2l6972:
 29623                           
 29624                           ;usb_device.c: 1813: {
 29625                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 29626  01472A  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29627  01472E  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29628  014732  0E00               	movlw	low (__mediumconst shr (0+16))
 29629  014734  6EF8               	movwf	tblptru,c
 29630  014736  C112  FFD9         	movff	_pDst,fsr2l
 29631  01473A  C113  FFDA         	movff	_pDst+1,fsr2h
 29632  01473E  0E0E               	movlw	(high __ramtop+-1)
 29633  014740  64F7               	cpfsgt	tblptrh,c
 29634  014742  D003               	bra	i2u610_47
 29635  014744  0008               	tblrd		*
 29636  014746  50F5               	movf	tablat,w,c
 29637  014748  D005               	bra	i2u610_40
 29638  01474A                     i2u610_47:
 29639  01474A  CFF6 FFE1          	movff	tblptrl,fsr1l
 29640  01474E  CFF7 FFE2          	movff	tblptrh,fsr1h
 29641  014752  50E7               	movf	indf1,w,c
 29642  014754                     i2u610_40:
 29643  014754  6EDF               	movwf	indf2,c
 29644  014756  0100               	movlb	0	; () banked
 29645  014758  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29646  01475A  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29647                           
 29648                           ; BSR set to: 0
 29649  01475C  0101               	movlb	1	; () banked
 29650  01475E  4B12               	infsnz	_pDst& (0+255),f,b
 29651  014760  2B13               	incf	(_pDst+1)& (0+255),f,b
 29652                           
 29653                           ; BSR set to: 1
 29654                           ;usb_device.c: 1815: byteToSend--;
 29655  014762  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29656  014764                     i2l6980:
 29657  014764  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29658  014766  B4D8               	btfsc	status,2,c
 29659  014768  0012               	return	
 29660  01476A  D7DF               	goto	i2l6972
 29661  01476C                     i2l6982:
 29662                           
 29663                           ;usb_device.c: 1821: {
 29664                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 29665  01476C  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29666  014770  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29667  014774  0E00               	movlw	low (__mediumconst shr (0+16))
 29668  014776  6EF8               	movwf	tblptru,c
 29669  014778  C112  FFD9         	movff	_pDst,fsr2l
 29670  01477C  C113  FFDA         	movff	_pDst+1,fsr2h
 29671  014780  0E0E               	movlw	(high __ramtop+-1)
 29672  014782  64F7               	cpfsgt	tblptrh,c
 29673  014784  D003               	bra	i2u612_47
 29674  014786  0008               	tblrd		*
 29675  014788  50F5               	movf	tablat,w,c
 29676  01478A  D005               	bra	i2u612_40
 29677  01478C                     i2u612_47:
 29678  01478C  CFF6 FFE1          	movff	tblptrl,fsr1l
 29679  014790  CFF7 FFE2          	movff	tblptrh,fsr1h
 29680  014794  50E7               	movf	indf1,w,c
 29681  014796                     i2u612_40:
 29682  014796  6EDF               	movwf	indf2,c
 29683  014798  0100               	movlb	0	; () banked
 29684  01479A  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29685  01479C  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29686                           
 29687                           ; BSR set to: 0
 29688  01479E  0101               	movlb	1	; () banked
 29689  0147A0  4B12               	infsnz	_pDst& (0+255),f,b
 29690  0147A2  2B13               	incf	(_pDst+1)& (0+255),f,b
 29691                           
 29692                           ; BSR set to: 1
 29693                           ;usb_device.c: 1823: byteToSend--;
 29694  0147A4  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29695  0147A6                     i2l6990:
 29696  0147A6  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29697  0147A8  B4D8               	btfsc	status,2,c
 29698  0147AA  0012               	return	
 29699  0147AC  D7DF               	goto	i2l6982
 29700  0147AE                     __end_of_USBCtrlTrfTxService:
 29701                           	opt stack 0
 29702                           pclatu	equ	0xFFB
 29703                           pclath	equ	0xFFA
 29704                           tblptru	equ	0xFF8
 29705                           tblptrh	equ	0xFF7
 29706                           tblptrl	equ	0xFF6
 29707                           tablat	equ	0xFF5
 29708                           prodh	equ	0xFF4
 29709                           prodl	equ	0xFF3
 29710                           intcon	equ	0xFF2
 29711                           intcon2	equ	0xFF1
 29712                           postinc0	equ	0xFEE
 29713                           fsr0h	equ	0xFEA
 29714                           fsr0l	equ	0xFE9
 29715                           wreg	equ	0xFE8
 29716                           indf1	equ	0xFE7
 29717                           postinc1	equ	0xFE6
 29718                           postdec1	equ	0xFE5
 29719                           fsr1h	equ	0xFE2
 29720                           fsr1l	equ	0xFE1
 29721                           indf2	equ	0xFDF
 29722                           postinc2	equ	0xFDE
 29723                           postdec2	equ	0xFDD
 29724                           plusw2	equ	0xFDB
 29725                           fsr2h	equ	0xFDA
 29726                           fsr2l	equ	0xFD9
 29727                           status	equ	0xFD8
 29728                           
 29729 ;; *************** function _LED_indicator *****************
 29730 ;; Defined at:
 29731 ;;		line 22 in file "ChargeStation_task.c"
 29732 ;; Parameters:    Size  Location     Type
 29733 ;;		None
 29734 ;; Auto vars:     Size  Location     Type
 29735 ;;  i               1   11[COMRAM] unsigned char 
 29736 ;; Return value:  Size  Location     Type
 29737 ;;		None               void
 29738 ;; Registers used:
 29739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29740 ;; Tracked objects:
 29741 ;;		On entry : 0/0
 29742 ;;		On exit  : 0/0
 29743 ;;		Unchanged: 0/0
 29744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29747 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29749 ;;Total ram usage:        4 bytes
 29750 ;; Hardware stack levels used:    1
 29751 ;; Hardware stack levels required when called:    1
 29752 ;; This function calls:
 29753 ;;		i2_LED_output
 29754 ;;		i2___awdiv
 29755 ;;		i2___lwdiv
 29756 ;; This function is called by:
 29757 ;;		_ISR
 29758 ;; This function uses a non-reentrant model
 29759 ;;
 29760                           
 29761                           	psect	text130
 29762  013A2A                     __ptext130:
 29763                           	opt stack 0
 29764  013A2A                     _LED_indicator:
 29765                           	opt stack 19
 29766                           
 29767                           ;ChargeStation_task.c: 23: uint8_t i;
 29768                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29769                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29770                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29771                           
 29772                           ;incstack = 0
 29773  013A2A  0E00               	movlw	0
 29774  013A2C  6E38               	movwf	LED_indicator@i,c
 29775  013A2E                     i2l9880:
 29776  013A2E  0E02               	movlw	2
 29777  013A30  6438               	cpfsgt	LED_indicator@i,c
 29778  013A32  D001               	goto	i2l9884
 29779  013A34  0012               	return	
 29780  013A36                     i2l9884:
 29781                           
 29782                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 29783  013A36  5038               	movf	LED_indicator@i,w,c
 29784  013A38  0D17               	mullw	23
 29785  013A3A  0E16               	movlw	22
 29786  013A3C  26F3               	addwf	prodl,f,c
 29787  013A3E  0E00               	movlw	0
 29788  013A40  22F4               	addwfc	prodh,f,c
 29789  013A42  0E2E               	movlw	low _port
 29790  013A44  24F3               	addwf	prodl,w,c
 29791  013A46  6ED9               	movwf	fsr2l,c
 29792  013A48  0E01               	movlw	high _port
 29793  013A4A  20F4               	addwfc	prodh,w,c
 29794  013A4C  6EDA               	movwf	fsr2h,c
 29795  013A4E  0101               	movlb	1	; () banked
 29796  013A50  A2DF               	btfss	indf2,1,c
 29797  013A52  D07C               	goto	i2l9904
 29798                           
 29799                           ; BSR set to: 1
 29800                           ;ChargeStation_task.c: 29: cnt[i]++;
 29801  013A54  5038               	movf	LED_indicator@i,w,c
 29802  013A56  0D01               	mullw	1
 29803  013A58  0E12               	movlw	low LED_indicator@cnt
 29804  013A5A  24F3               	addwf	prodl,w,c
 29805  013A5C  6ED9               	movwf	fsr2l,c
 29806  013A5E  0E02               	movlw	high LED_indicator@cnt
 29807  013A60  20F4               	addwfc	prodh,w,c
 29808  013A62  6EDA               	movwf	fsr2h,c
 29809  013A64  2ADF               	incf	indf2,f,c
 29810                           
 29811                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 29812  013A66  5038               	movf	LED_indicator@i,w,c
 29813  013A68  0D01               	mullw	1
 29814  013A6A  0E12               	movlw	low LED_indicator@cnt
 29815  013A6C  24F3               	addwf	prodl,w,c
 29816  013A6E  6ED9               	movwf	fsr2l,c
 29817  013A70  0E02               	movlw	high LED_indicator@cnt
 29818  013A72  20F4               	addwfc	prodh,w,c
 29819  013A74  6EDA               	movwf	fsr2h,c
 29820  013A76  0102               	movlb	2	; () banked
 29821  013A78  A0DF               	btfss	indf2,0,c
 29822  013A7A  D006               	goto	i2l9890
 29823                           
 29824                           ; BSR set to: 2
 29825                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 29826  013A7C  0E00               	movlw	0
 29827  013A7E  6E2D               	movwf	i2LED_output@value,c
 29828  013A80  5038               	movf	LED_indicator@i,w,c
 29829  013A82  EC18  F0B1         	call	i2_LED_output
 29830                           
 29831                           ;ChargeStation_task.c: 32: } else {
 29832  013A86  D062               	goto	i2l9904
 29833  013A88                     i2l9890:
 29834                           
 29835                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 29836  013A88  5038               	movf	LED_indicator@i,w,c
 29837  013A8A  0D17               	mullw	23
 29838  013A8C  0E06               	movlw	6
 29839  013A8E  26F3               	addwf	prodl,f,c
 29840  013A90  0E00               	movlw	0
 29841  013A92  22F4               	addwfc	prodh,f,c
 29842  013A94  0E2E               	movlw	low _port
 29843  013A96  24F3               	addwf	prodl,w,c
 29844  013A98  6ED9               	movwf	fsr2l,c
 29845  013A9A  0E01               	movlw	high _port
 29846  013A9C  20F4               	addwfc	prodh,w,c
 29847  013A9E  6EDA               	movwf	fsr2h,c
 29848  013AA0  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 29849  013AA4  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 29850  013AA8  0E00               	movlw	0
 29851  013AAA  6E30               	movwf	i2___lwdiv@divisor+1,c
 29852  013AAC  0E64               	movlw	100
 29853  013AAE  6E2F               	movwf	i2___lwdiv@divisor,c
 29854  013AB0  ECEB  F0B2         	call	i2___lwdiv	;wreg free
 29855  013AB4  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 29856  013AB8  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 29857  013ABC  5038               	movf	LED_indicator@i,w,c
 29858  013ABE  0D01               	mullw	1
 29859  013AC0  0E12               	movlw	low LED_indicator@cnt
 29860  013AC2  24F3               	addwf	prodl,w,c
 29861  013AC4  6ED9               	movwf	fsr2l,c
 29862  013AC6  0E02               	movlw	high LED_indicator@cnt
 29863  013AC8  20F4               	addwfc	prodh,w,c
 29864  013ACA  6EDA               	movwf	fsr2h,c
 29865  013ACC  50DF               	movf	indf2,w,c
 29866  013ACE  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 29867  013AD0  5037               	movf	??_LED_indicator+2,w,c
 29868  013AD2  6E2D               	movwf	i2___awdiv@dividend,c
 29869  013AD4  6A2E               	clrf	i2___awdiv@dividend+1,c
 29870  013AD6  0E00               	movlw	0
 29871  013AD8  6E30               	movwf	i2___awdiv@divisor+1,c
 29872  013ADA  0E02               	movlw	2
 29873  013ADC  6E2F               	movwf	i2___awdiv@divisor,c
 29874  013ADE  ECA3  F0AE         	call	i2___awdiv	;wreg free
 29875  013AE2  502D               	movf	?i2___awdiv,w,c
 29876  013AE4  5C35               	subwf	??_LED_indicator,w,c
 29877  013AE6  502E               	movf	?i2___awdiv+1,w,c
 29878  013AE8  5836               	subwfb	??_LED_indicator+1,w,c
 29879  013AEA  A0D8               	btfss	status,0,c
 29880  013AEC  D00C               	goto	i2l9896
 29881                           
 29882                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 29883  013AEE  0E01               	movlw	1
 29884  013AF0  6E2D               	movwf	i2LED_output@value,c
 29885  013AF2  5038               	movf	LED_indicator@i,w,c
 29886  013AF4  EC18  F0B1         	call	i2_LED_output
 29887                           
 29888                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 29889  013AF8  5038               	movf	LED_indicator@i,w,c
 29890  013AFA  0D01               	mullw	1
 29891  013AFC  0E15               	movlw	low LED_indicator@cntf
 29892  013AFE  24F3               	addwf	prodl,w,c
 29893  013B00  6ED9               	movwf	fsr2l,c
 29894  013B02  0E02               	movlw	high LED_indicator@cntf
 29895  013B04  D01F               	goto	L19
 29896  013B06                     i2l9896:
 29897                           
 29898                           ;ChargeStation_task.c: 37: cntf[i]++;
 29899  013B06  5038               	movf	LED_indicator@i,w,c
 29900  013B08  0D01               	mullw	1
 29901  013B0A  0E15               	movlw	low LED_indicator@cntf
 29902  013B0C  24F3               	addwf	prodl,w,c
 29903  013B0E  6ED9               	movwf	fsr2l,c
 29904  013B10  0E02               	movlw	high LED_indicator@cntf
 29905  013B12  20F4               	addwfc	prodh,w,c
 29906  013B14  6EDA               	movwf	fsr2h,c
 29907  013B16  2ADF               	incf	indf2,f,c
 29908                           
 29909                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 29910  013B18  0E00               	movlw	0
 29911  013B1A  6E2D               	movwf	i2LED_output@value,c
 29912  013B1C  5038               	movf	LED_indicator@i,w,c
 29913  013B1E  EC18  F0B1         	call	i2_LED_output
 29914                           
 29915                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 29916  013B22  5038               	movf	LED_indicator@i,w,c
 29917  013B24  0D01               	mullw	1
 29918  013B26  0E15               	movlw	low LED_indicator@cntf
 29919  013B28  24F3               	addwf	prodl,w,c
 29920  013B2A  6ED9               	movwf	fsr2l,c
 29921  013B2C  0E02               	movlw	high LED_indicator@cntf
 29922  013B2E  20F4               	addwfc	prodh,w,c
 29923  013B30  6EDA               	movwf	fsr2h,c
 29924  013B32  0E01               	movlw	1
 29925  013B34  64DF               	cpfsgt	indf2,c
 29926  013B36  D00A               	goto	i2l9904
 29927                           
 29928                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 29929  013B38  5038               	movf	LED_indicator@i,w,c
 29930  013B3A  0D01               	mullw	1
 29931  013B3C  0E12               	movlw	low LED_indicator@cnt
 29932  013B3E  24F3               	addwf	prodl,w,c
 29933  013B40  6ED9               	movwf	fsr2l,c
 29934  013B42  0E02               	movlw	high LED_indicator@cnt
 29935  013B44                     L19:
 29936  013B44  20F4               	addwfc	prodh,w,c
 29937  013B46  6EDA               	movwf	fsr2h,c
 29938  013B48  0E00               	movlw	0
 29939  013B4A  6EDF               	movwf	indf2,c
 29940  013B4C                     i2l9904:
 29941  013B4C  2A38               	incf	LED_indicator@i,f,c
 29942  013B4E  D76F               	goto	i2l9880
 29943  013B50                     __end_of_LED_indicator:
 29944                           	opt stack 0
 29945                           pclatu	equ	0xFFB
 29946                           pclath	equ	0xFFA
 29947                           tblptru	equ	0xFF8
 29948                           tblptrh	equ	0xFF7
 29949                           tblptrl	equ	0xFF6
 29950                           tablat	equ	0xFF5
 29951                           prodh	equ	0xFF4
 29952                           prodl	equ	0xFF3
 29953                           intcon	equ	0xFF2
 29954                           intcon2	equ	0xFF1
 29955                           postinc0	equ	0xFEE
 29956                           fsr0h	equ	0xFEA
 29957                           fsr0l	equ	0xFE9
 29958                           wreg	equ	0xFE8
 29959                           indf1	equ	0xFE7
 29960                           postinc1	equ	0xFE6
 29961                           postdec1	equ	0xFE5
 29962                           fsr1h	equ	0xFE2
 29963                           fsr1l	equ	0xFE1
 29964                           indf2	equ	0xFDF
 29965                           postinc2	equ	0xFDE
 29966                           postdec2	equ	0xFDD
 29967                           plusw2	equ	0xFDB
 29968                           fsr2h	equ	0xFDA
 29969                           fsr2l	equ	0xFD9
 29970                           status	equ	0xFD8
 29971                           
 29972 ;; *************** function i2___lwdiv *****************
 29973 ;; Defined at:
 29974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29975 ;; Parameters:    Size  Location     Type
 29976 ;;  dividend        2    0[COMRAM] unsigned int 
 29977 ;;  divisor         2    2[COMRAM] unsigned int 
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29980 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29981 ;; Return value:  Size  Location     Type
 29982 ;;                  2    0[COMRAM] unsigned int 
 29983 ;; Registers used:
 29984 ;;		wreg, status,2, status,0
 29985 ;; Tracked objects:
 29986 ;;		On entry : 0/0
 29987 ;;		On exit  : 0/0
 29988 ;;		Unchanged: 0/0
 29989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29993 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29994 ;;Total ram usage:        7 bytes
 29995 ;; Hardware stack levels used:    1
 29996 ;; This function calls:
 29997 ;;		Nothing
 29998 ;; This function is called by:
 29999 ;;		_LED_indicator
 30000 ;; This function uses a non-reentrant model
 30001 ;;
 30002                           
 30003                           	psect	text131
 30004  0165D6                     __ptext131:
 30005                           	opt stack 0
 30006  0165D6                     i2___lwdiv:
 30007                           	opt stack 19
 30008                           
 30009                           ;incstack = 0
 30010  0165D6  0E00               	movlw	0
 30011  0165D8  6E32               	movwf	i2___lwdiv@quotient+1,c
 30012  0165DA  0E00               	movlw	0
 30013  0165DC  6E31               	movwf	i2___lwdiv@quotient,c
 30014  0165DE  502F               	movf	i2___lwdiv@divisor,w,c
 30015  0165E0  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 30016  0165E2  B4D8               	btfsc	status,2,c
 30017  0165E4  D01C               	goto	i2l2448
 30018  0165E6  0E01               	movlw	1
 30019  0165E8  6E33               	movwf	i2___lwdiv@counter,c
 30020  0165EA  D004               	goto	i2l9706
 30021  0165EC                     i2l9704:
 30022  0165EC  90D8               	bcf	status,0,c
 30023  0165EE  362F               	rlcf	i2___lwdiv@divisor,f,c
 30024  0165F0  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 30025  0165F2  2A33               	incf	i2___lwdiv@counter,f,c
 30026  0165F4                     i2l9706:
 30027  0165F4  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 30028  0165F6  D7FA               	goto	i2l9704
 30029  0165F8                     i2l9708:
 30030  0165F8  90D8               	bcf	status,0,c
 30031  0165FA  3631               	rlcf	i2___lwdiv@quotient,f,c
 30032  0165FC  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 30033  0165FE  502F               	movf	i2___lwdiv@divisor,w,c
 30034  016600  5C2D               	subwf	i2___lwdiv@dividend,w,c
 30035  016602  5030               	movf	i2___lwdiv@divisor+1,w,c
 30036  016604  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 30037  016606  A0D8               	btfss	status,0,c
 30038  016608  D005               	goto	i2l9716
 30039  01660A  502F               	movf	i2___lwdiv@divisor,w,c
 30040  01660C  5E2D               	subwf	i2___lwdiv@dividend,f,c
 30041  01660E  5030               	movf	i2___lwdiv@divisor+1,w,c
 30042  016610  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 30043  016612  8031               	bsf	i2___lwdiv@quotient,0,c
 30044  016614                     i2l9716:
 30045  016614  90D8               	bcf	status,0,c
 30046  016616  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 30047  016618  322F               	rrcf	i2___lwdiv@divisor,f,c
 30048  01661A  2E33               	decfsz	i2___lwdiv@counter,f,c
 30049  01661C  D7ED               	goto	i2l9708
 30050  01661E                     i2l2448:
 30051  01661E  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 30052  016622  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 30053  016626  0012               	return		;funcret
 30054  016628                     __end_ofi2___lwdiv:
 30055                           	opt stack 0
 30056                           pclatu	equ	0xFFB
 30057                           pclath	equ	0xFFA
 30058                           tblptru	equ	0xFF8
 30059                           tblptrh	equ	0xFF7
 30060                           tblptrl	equ	0xFF6
 30061                           tablat	equ	0xFF5
 30062                           prodh	equ	0xFF4
 30063                           prodl	equ	0xFF3
 30064                           intcon	equ	0xFF2
 30065                           intcon2	equ	0xFF1
 30066                           postinc0	equ	0xFEE
 30067                           fsr0h	equ	0xFEA
 30068                           fsr0l	equ	0xFE9
 30069                           wreg	equ	0xFE8
 30070                           indf1	equ	0xFE7
 30071                           postinc1	equ	0xFE6
 30072                           postdec1	equ	0xFE5
 30073                           fsr1h	equ	0xFE2
 30074                           fsr1l	equ	0xFE1
 30075                           indf2	equ	0xFDF
 30076                           postinc2	equ	0xFDE
 30077                           postdec2	equ	0xFDD
 30078                           plusw2	equ	0xFDB
 30079                           fsr2h	equ	0xFDA
 30080                           fsr2l	equ	0xFD9
 30081                           status	equ	0xFD8
 30082                           
 30083 ;; *************** function i2___awdiv *****************
 30084 ;; Defined at:
 30085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 30086 ;; Parameters:    Size  Location     Type
 30087 ;;  dividend        2    0[COMRAM] int 
 30088 ;;  divisor         2    2[COMRAM] int 
 30089 ;; Auto vars:     Size  Location     Type
 30090 ;;  __awdiv         2    6[COMRAM] int 
 30091 ;;  __awdiv         1    5[COMRAM] unsigned char 
 30092 ;;  __awdiv         1    4[COMRAM] unsigned char 
 30093 ;; Return value:  Size  Location     Type
 30094 ;;                  2    0[COMRAM] int 
 30095 ;; Registers used:
 30096 ;;		wreg, status,2, status,0
 30097 ;; Tracked objects:
 30098 ;;		On entry : 0/0
 30099 ;;		On exit  : 0/0
 30100 ;;		Unchanged: 0/0
 30101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30105 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30106 ;;Total ram usage:        8 bytes
 30107 ;; Hardware stack levels used:    1
 30108 ;; This function calls:
 30109 ;;		Nothing
 30110 ;; This function is called by:
 30111 ;;		_LED_indicator
 30112 ;; This function uses a non-reentrant model
 30113 ;;
 30114                           
 30115                           	psect	text132
 30116  015D46                     __ptext132:
 30117                           	opt stack 0
 30118  015D46                     i2___awdiv:
 30119                           	opt stack 19
 30120                           
 30121                           ;incstack = 0
 30122  015D46  0E00               	movlw	0
 30123  015D48  6E32               	movwf	i2___awdiv@sign,c
 30124  015D4A  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30125  015D4C  D006               	goto	i2l9662
 30126  015D4E  6C2F               	negf	i2___awdiv@divisor,c
 30127  015D50  1E30               	comf	i2___awdiv@divisor+1,f,c
 30128  015D52  B0D8               	btfsc	status,0,c
 30129  015D54  2A30               	incf	i2___awdiv@divisor+1,f,c
 30130  015D56  0E01               	movlw	1
 30131  015D58  6E32               	movwf	i2___awdiv@sign,c
 30132  015D5A                     i2l9662:
 30133  015D5A  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 30134  015D5C  D006               	goto	i2l9668
 30135  015D5E  6C2D               	negf	i2___awdiv@dividend,c
 30136  015D60  1E2E               	comf	i2___awdiv@dividend+1,f,c
 30137  015D62  B0D8               	btfsc	status,0,c
 30138  015D64  2A2E               	incf	i2___awdiv@dividend+1,f,c
 30139  015D66  0E01               	movlw	1
 30140  015D68  1A32               	xorwf	i2___awdiv@sign,f,c
 30141  015D6A                     i2l9668:
 30142  015D6A  0E00               	movlw	0
 30143  015D6C  6E34               	movwf	i2___awdiv@quotient+1,c
 30144  015D6E  0E00               	movlw	0
 30145  015D70  6E33               	movwf	i2___awdiv@quotient,c
 30146  015D72  502F               	movf	i2___awdiv@divisor,w,c
 30147  015D74  1030               	iorwf	i2___awdiv@divisor+1,w,c
 30148  015D76  B4D8               	btfsc	status,2,c
 30149  015D78  D01C               	goto	i2l9690
 30150  015D7A  0E01               	movlw	1
 30151  015D7C  6E31               	movwf	i2___awdiv@counter,c
 30152  015D7E  D004               	goto	i2l9676
 30153  015D80                     i2l9674:
 30154  015D80  90D8               	bcf	status,0,c
 30155  015D82  362F               	rlcf	i2___awdiv@divisor,f,c
 30156  015D84  3630               	rlcf	i2___awdiv@divisor+1,f,c
 30157  015D86  2A31               	incf	i2___awdiv@counter,f,c
 30158  015D88                     i2l9676:
 30159  015D88  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30160  015D8A  D7FA               	goto	i2l9674
 30161  015D8C                     i2l9678:
 30162  015D8C  90D8               	bcf	status,0,c
 30163  015D8E  3633               	rlcf	i2___awdiv@quotient,f,c
 30164  015D90  3634               	rlcf	i2___awdiv@quotient+1,f,c
 30165  015D92  502F               	movf	i2___awdiv@divisor,w,c
 30166  015D94  5C2D               	subwf	i2___awdiv@dividend,w,c
 30167  015D96  5030               	movf	i2___awdiv@divisor+1,w,c
 30168  015D98  582E               	subwfb	i2___awdiv@dividend+1,w,c
 30169  015D9A  A0D8               	btfss	status,0,c
 30170  015D9C  D005               	goto	i2l9686
 30171  015D9E  502F               	movf	i2___awdiv@divisor,w,c
 30172  015DA0  5E2D               	subwf	i2___awdiv@dividend,f,c
 30173  015DA2  5030               	movf	i2___awdiv@divisor+1,w,c
 30174  015DA4  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 30175  015DA6  8033               	bsf	i2___awdiv@quotient,0,c
 30176  015DA8                     i2l9686:
 30177  015DA8  90D8               	bcf	status,0,c
 30178  015DAA  3230               	rrcf	i2___awdiv@divisor+1,f,c
 30179  015DAC  322F               	rrcf	i2___awdiv@divisor,f,c
 30180  015DAE  2E31               	decfsz	i2___awdiv@counter,f,c
 30181  015DB0  D7ED               	goto	i2l9678
 30182  015DB2                     i2l9690:
 30183  015DB2  5032               	movf	i2___awdiv@sign,w,c
 30184  015DB4  B4D8               	btfsc	status,2,c
 30185  015DB6  D004               	goto	i2l9694
 30186  015DB8  6C33               	negf	i2___awdiv@quotient,c
 30187  015DBA  1E34               	comf	i2___awdiv@quotient+1,f,c
 30188  015DBC  B0D8               	btfsc	status,0,c
 30189  015DBE  2A34               	incf	i2___awdiv@quotient+1,f,c
 30190  015DC0                     i2l9694:
 30191  015DC0  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 30192  015DC4  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30193  015DC8  0012               	return	
 30194  015DCA                     __end_ofi2___awdiv:
 30195                           	opt stack 0
 30196                           pclatu	equ	0xFFB
 30197                           pclath	equ	0xFFA
 30198                           tblptru	equ	0xFF8
 30199                           tblptrh	equ	0xFF7
 30200                           tblptrl	equ	0xFF6
 30201                           tablat	equ	0xFF5
 30202                           prodh	equ	0xFF4
 30203                           prodl	equ	0xFF3
 30204                           intcon	equ	0xFF2
 30205                           intcon2	equ	0xFF1
 30206                           postinc0	equ	0xFEE
 30207                           fsr0h	equ	0xFEA
 30208                           fsr0l	equ	0xFE9
 30209                           wreg	equ	0xFE8
 30210                           indf1	equ	0xFE7
 30211                           postinc1	equ	0xFE6
 30212                           postdec1	equ	0xFE5
 30213                           fsr1h	equ	0xFE2
 30214                           fsr1l	equ	0xFE1
 30215                           indf2	equ	0xFDF
 30216                           postinc2	equ	0xFDE
 30217                           postdec2	equ	0xFDD
 30218                           plusw2	equ	0xFDB
 30219                           fsr2h	equ	0xFDA
 30220                           fsr2l	equ	0xFD9
 30221                           status	equ	0xFD8
 30222                           
 30223 ;; *************** function i2_LED_output *****************
 30224 ;; Defined at:
 30225 ;;		line 36 in file "io.c"
 30226 ;; Parameters:    Size  Location     Type
 30227 ;;  b               1    wreg     unsigned char 
 30228 ;;  value           1    0[COMRAM] unsigned char 
 30229 ;; Auto vars:     Size  Location     Type
 30230 ;;  b               1    1[COMRAM] unsigned char 
 30231 ;; Return value:  Size  Location     Type
 30232 ;;		None               void
 30233 ;; Registers used:
 30234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30235 ;; Tracked objects:
 30236 ;;		On entry : 0/0
 30237 ;;		On exit  : 0/0
 30238 ;;		Unchanged: 0/0
 30239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30244 ;;Total ram usage:        2 bytes
 30245 ;; Hardware stack levels used:    1
 30246 ;; This function calls:
 30247 ;;		Nothing
 30248 ;; This function is called by:
 30249 ;;		_LED_indicator
 30250 ;; This function uses a non-reentrant model
 30251 ;;
 30252                           
 30253                           	psect	text133
 30254  016230                     __ptext133:
 30255                           	opt stack 0
 30256  016230                     i2_LED_output:
 30257                           	opt stack 19
 30258                           
 30259                           ;incstack = 0
 30260                           ;i2LED_output@b stored from wreg
 30261  016230  6E2E               	movwf	i2LED_output@b,c
 30262                           
 30263                           ;io.c: 37: port[b].flag.led_flag = value;
 30264  016232  502E               	movf	i2LED_output@b,w,c
 30265  016234  0D17               	mullw	23
 30266  016236  0E16               	movlw	22
 30267  016238  26F3               	addwf	prodl,f,c
 30268  01623A  0E00               	movlw	0
 30269  01623C  22F4               	addwfc	prodh,f,c
 30270  01623E  0E2E               	movlw	low _port
 30271  016240  24F3               	addwf	prodl,w,c
 30272  016242  6ED9               	movwf	fsr2l,c
 30273  016244  0E01               	movlw	high _port
 30274  016246  20F4               	addwfc	prodh,w,c
 30275  016248  6EDA               	movwf	fsr2h,c
 30276  01624A  B02D               	btfsc	i2LED_output@value,0,c
 30277  01624C  D003               	bra	i2u1018_45
 30278  01624E  0101               	movlb	1	; () banked
 30279  016250  96DF               	bcf	indf2,3,c
 30280  016252  D002               	bra	i2u1018_46
 30281  016254                     i2u1018_45:
 30282  016254  0101               	movlb	1	; () banked
 30283  016256  86DF               	bsf	indf2,3,c
 30284  016258                     i2u1018_46:
 30285                           
 30286                           ;io.c: 38: switch (b) {
 30287  016258  D012               	goto	i2l9652
 30288  01625A                     i2l1685:
 30289                           
 30290                           ;io.c: 40: LATB7 = value;
 30291  01625A  A02D               	btfss	i2LED_output@value,0,c
 30292  01625C  D002               	goto	i2u1019_40
 30293  01625E  8E8A               	bsf	3978,7,c	;volatile
 30294  016260  0012               	return	
 30295  016262                     i2u1019_40:
 30296  016262  9E8A               	bcf	3978,7,c	;volatile
 30297                           
 30298                           ;io.c: 41: break;
 30299  016264  0012               	return	
 30300  016266                     i2l1687:
 30301                           
 30302                           ;io.c: 43: LATB6 = value;
 30303  016266  A02D               	btfss	i2LED_output@value,0,c
 30304  016268  D002               	goto	i2u1021_40
 30305  01626A  8C8A               	bsf	3978,6,c	;volatile
 30306  01626C  0012               	return	
 30307  01626E                     i2u1021_40:
 30308  01626E  9C8A               	bcf	3978,6,c	;volatile
 30309                           
 30310                           ;io.c: 44: break;
 30311  016270  0012               	return	
 30312  016272                     i2l1688:
 30313                           
 30314                           ;io.c: 46: LATC2 = value;
 30315  016272  A02D               	btfss	i2LED_output@value,0,c
 30316  016274  D002               	goto	i2u1023_40
 30317  016276  848B               	bsf	3979,2,c	;volatile
 30318  016278  0012               	return	
 30319  01627A                     i2u1023_40:
 30320  01627A  948B               	bcf	3979,2,c	;volatile
 30321                           
 30322                           ;io.c: 48: }
 30323                           
 30324                           ;io.c: 47: break;
 30325  01627C  0012               	return	
 30326  01627E                     i2l9652:
 30327  01627E  502E               	movf	i2LED_output@b,w,c
 30328                           
 30329                           ; Switch size 1, requested type "space"
 30330                           ; Number of cases is 3, Range of values is 0 to 2
 30331                           ; switch strategies available:
 30332                           ; Name         Instructions Cycles
 30333                           ; simple_byte           10     6 (average)
 30334                           ;	Chosen strategy is simple_byte
 30335  016280  0A00               	xorlw	0	; case 0
 30336  016282  B4D8               	btfsc	status,2,c
 30337  016284  D7EA               	goto	i2l1685
 30338  016286  0A01               	xorlw	1	; case 1
 30339  016288  B4D8               	btfsc	status,2,c
 30340  01628A  D7ED               	goto	i2l1687
 30341  01628C  0A03               	xorlw	3	; case 2
 30342  01628E  A4D8               	btfss	status,2,c
 30343  016290  0012               	return	
 30344  016292  D7EF               	goto	i2l1688
 30345  016294                     __end_ofi2_LED_output:
 30346                           	opt stack 0
 30347                           pclatu	equ	0xFFB
 30348                           pclath	equ	0xFFA
 30349                           tblptru	equ	0xFF8
 30350                           tblptrh	equ	0xFF7
 30351                           tblptrl	equ	0xFF6
 30352                           tablat	equ	0xFF5
 30353                           prodh	equ	0xFF4
 30354                           prodl	equ	0xFF3
 30355                           intcon	equ	0xFF2
 30356                           intcon2	equ	0xFF1
 30357                           postinc0	equ	0xFEE
 30358                           fsr0h	equ	0xFEA
 30359                           fsr0l	equ	0xFE9
 30360                           wreg	equ	0xFE8
 30361                           indf1	equ	0xFE7
 30362                           postinc1	equ	0xFE6
 30363                           postdec1	equ	0xFE5
 30364                           fsr1h	equ	0xFE2
 30365                           fsr1l	equ	0xFE1
 30366                           indf2	equ	0xFDF
 30367                           postinc2	equ	0xFDE
 30368                           postdec2	equ	0xFDD
 30369                           plusw2	equ	0xFDB
 30370                           fsr2h	equ	0xFDA
 30371                           fsr2l	equ	0xFD9
 30372                           status	equ	0xFD8
 30373                           pclatu	equ	0xFFB
 30374                           pclath	equ	0xFFA
 30375                           tblptru	equ	0xFF8
 30376                           tblptrh	equ	0xFF7
 30377                           tblptrl	equ	0xFF6
 30378                           tablat	equ	0xFF5
 30379                           prodh	equ	0xFF4
 30380                           prodl	equ	0xFF3
 30381                           intcon	equ	0xFF2
 30382                           intcon2	equ	0xFF1
 30383                           postinc0	equ	0xFEE
 30384                           fsr0h	equ	0xFEA
 30385                           fsr0l	equ	0xFE9
 30386                           wreg	equ	0xFE8
 30387                           indf1	equ	0xFE7
 30388                           postinc1	equ	0xFE6
 30389                           postdec1	equ	0xFE5
 30390                           fsr1h	equ	0xFE2
 30391                           fsr1l	equ	0xFE1
 30392                           indf2	equ	0xFDF
 30393                           postinc2	equ	0xFDE
 30394                           postdec2	equ	0xFDD
 30395                           plusw2	equ	0xFDB
 30396                           fsr2h	equ	0xFDA
 30397                           fsr2l	equ	0xFD9
 30398                           status	equ	0xFD8
 30399                           
 30400                           	psect	rparam
 30401  0000                     pclatu	equ	0xFFB
 30402                           pclath	equ	0xFFA
 30403                           tblptru	equ	0xFF8
 30404                           tblptrh	equ	0xFF7
 30405                           tblptrl	equ	0xFF6
 30406                           tablat	equ	0xFF5
 30407                           prodh	equ	0xFF4
 30408                           prodl	equ	0xFF3
 30409                           intcon	equ	0xFF2
 30410                           intcon2	equ	0xFF1
 30411                           postinc0	equ	0xFEE
 30412                           fsr0h	equ	0xFEA
 30413                           fsr0l	equ	0xFE9
 30414                           wreg	equ	0xFE8
 30415                           indf1	equ	0xFE7
 30416                           postinc1	equ	0xFE6
 30417                           postdec1	equ	0xFE5
 30418                           fsr1h	equ	0xFE2
 30419                           fsr1l	equ	0xFE1
 30420                           indf2	equ	0xFDF
 30421                           postinc2	equ	0xFDE
 30422                           postdec2	equ	0xFDD
 30423                           plusw2	equ	0xFDB
 30424                           fsr2h	equ	0xFDA
 30425                           fsr2l	equ	0xFD9
 30426                           status	equ	0xFD8
 30427                           
 30428                           	psect	temp
 30429  000059                     btemp:
 30430                           	opt stack 0
 30431  000059                     	ds	1
 30432  0000                     int$flags	set	btemp
 30433                           pclatu	equ	0xFFB
 30434                           pclath	equ	0xFFA
 30435                           tblptru	equ	0xFF8
 30436                           tblptrh	equ	0xFF7
 30437                           tblptrl	equ	0xFF6
 30438                           tablat	equ	0xFF5
 30439                           prodh	equ	0xFF4
 30440                           prodl	equ	0xFF3
 30441                           intcon	equ	0xFF2
 30442                           intcon2	equ	0xFF1
 30443                           postinc0	equ	0xFEE
 30444                           fsr0h	equ	0xFEA
 30445                           fsr0l	equ	0xFE9
 30446                           wreg	equ	0xFE8
 30447                           indf1	equ	0xFE7
 30448                           postinc1	equ	0xFE6
 30449                           postdec1	equ	0xFE5
 30450                           fsr1h	equ	0xFE2
 30451                           fsr1l	equ	0xFE1
 30452                           indf2	equ	0xFDF
 30453                           postinc2	equ	0xFDE
 30454                           postdec2	equ	0xFDD
 30455                           plusw2	equ	0xFDB
 30456                           fsr2h	equ	0xFDA
 30457                           fsr2l	equ	0xFD9
 30458                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        5
    BSS         2628
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     231
    BANK2           256      0     206
    BANK3           256      0     256
    BANK4           256      0     200
    BANK5           256      0     250
    BANK6           256    105     105
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_100(CODE[6]), STR_99(CODE[6]), STR_97(CODE[6]), STR_96(CODE[6]), 
		 -> STR_92(CODE[6]), STR_91(CODE[6]), STR_89(CODE[6]), STR_88(CODE[6]), 
		 -> STR_84(CODE[6]), STR_83(CODE[6]), STR_81(CODE[6]), STR_80(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6147(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6130(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6113(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6147(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6130(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6113(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_65(CODE[2]), STR_64(CODE[6]), STR_61(CODE[5]), STR_60(CODE[11]), 
		 -> STR_59(CODE[6]), STR_58(CODE[1]), STR_57(CODE[12]), STR_56(CODE[3]), 
		 -> STR_55(CODE[9]), STR_54(CODE[9]), STR_52(CODE[2]), STR_51(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), data_out@p(CODE[6]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_73(CODE[28]), STR_72(CODE[9]), STR_71(CODE[11]), STR_70(CODE[6]), 
		 -> STR_68(CODE[24]), STR_67(CODE[32]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> display_LCD@str_5594(BANK1[20]), data_out@str(BANK0[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    settings_integrating_reset@strp_6148	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_6147(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_6131	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_6130(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_6114	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_6113(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_117(CODE[1]), STR_115(CODE[15]), STR_113(CODE[16]), STR_111(CODE[17]), 
		 -> STR_109(CODE[16]), STR_107(CODE[17]), STR_105(CODE[17]), STR_103(CODE[1]), 
		 -> settings_integrating_reset@str_6147(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_95(CODE[1]), settings_led_indicator@str_6130(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_87(CODE[1]), settings_auto_stop@str_6113(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_79(CODE[1]), STR_77(CODE[1]), STR_75(CODE[13]), STR_48(CODE[14]), 
		 -> STR_44(CODE[1]), STR_42(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_116(CODE[1]), STR_114(CODE[9]), STR_112(CODE[9]), STR_110(CODE[9]), 
		 -> STR_108(CODE[9]), STR_106(CODE[9]), STR_104(CODE[9]), STR_102(CODE[1]), 
		 -> STR_101(CODE[1]), STR_98(CODE[17]), STR_94(CODE[1]), STR_93(CODE[1]), 
		 -> STR_90(CODE[17]), STR_86(CODE[1]), STR_85(CODE[1]), STR_82(CODE[17]), 
		 -> STR_78(CODE[1]), STR_76(CODE[1]), STR_74(CODE[15]), STR_47(CODE[15]), 
		 -> STR_43(CODE[1]), STR_41(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_5594(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_50(CODE[16]), 
		 -> STR_49(CODE[12]), STR_46(CODE[13]), STR_45(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6147(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6130(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6113(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_69(CODE[2]), data_out@str(BANK0[30]), STR_66(CODE[18]), STR_63(CODE[36]), 
		 -> STR_62(CODE[24]), STR_53(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK1[69]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK3[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_I2C_LCD_SetCursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_CDC_task->_ringbuf_pop
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_terminal_task

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  539522
                          _RTCC_task
                       _USB_CDC_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  220532
                                              0 BANK1      6     2      4
                                              0 BANK6    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  177570
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  126122
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   67977
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   36303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4694
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   13419
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   12264
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  222060
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   71362
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2016
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1951
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   33910
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   12016
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   22424
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                          _RTCC_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3155
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    1614
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   21009
                                             15 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                      _LED_indicator
                        _USB_CDC_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_CDC_ISR                                         0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     5DC      36       45.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100     69      69      18       41.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CE      10       80.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E7       7       90.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5D8       8        0.0%
DATA                 0      0     BB4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 12 20:28:31 2016

              ?_settings_integrating_reset 002D                                 _USB_SD_Ptr FA79  
                             ?_display_LCD 002D                     _settings_led_indicator 2594  
                 __end_of_port_button_task 3288                         __size_of_I2C_Start 0030  
                settings_adjust_time@state 0127                            _ringbuf_put_num 5DCA  
                             ?_display_dec 00AB                            _ringbuf_put_str 61CC  
                             ___awdiv@sign 0065                                         _ms 020E  
                       __size_of_ANALOG_IN 002C                              _USBDeviceInit 3288  
                      ___wmul@multiplicand 0078                         i2___lwdiv@dividend 002D  
                        ??_RTCC_from_epoch 0091                         __size_of_CDCInitEP 006C  
                             __CFG_CP0$OFF 000000                settings_led_indicator@state 012A  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0039       USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                                      l207 68A0                                        l208 689E  
                                      l146 32FE                __end_of_USBStdGetDscHandler 3538  
                                      _ADC 69AE                                        l504 300E  
                                      l530 11E4                                        l531 1208  
                                      l532 122C                                        l509 3060  
                                      l525 1128                                        l526 1150  
                                      l710 6652                                        l527 1176  
                                      l528 119C                                        l529 11C0  
                                      l641 6CF4                                        l705 67DE  
                                      l626 699E                                        l724 69CE  
                                      l735 52A6                                        _BDT 000D00  
                                      l861 4964                                        l774 5DCC  
                                      l855 5548                                        l952 1944  
                                      l937 16A0                                        l874 2D36  
                                      _ISR 1008                                        _UIE 000F36  
                                      _UIR 000F62                                        _OUT 5FAC  
                            ?_get_quot_rem 0079                         caltime_to_epoch@tm 0079  
                               _USBSuspend 6A60                                        _now 0173  
                        _RTCC_from_caltime 6B86                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0041                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 3538  
                               _TXSTA1bits 000FAD                             _USBDeviceState 0013  
               __end_of_settings_auto_stop 2A2A                    _RTCC_adjust_time_cursor 3C68  
                       ?_RTCC_from_caltime 008F                      ??_USBCtrlTrfRxService 002D  
                             _I2C_LCD_Puts 5B9E                   __size_ofi2_USBDeviceInit 0144  
                           ??_getsUSBUSART 006A                                       ?_ADC 0060  
                 USBEnableEndpoint@options 0035                    _RTCC_adjust_time_toggle 674E  
                        ??_I2C_LCD_Command 0064                                       ?_ISR 002D  
                         _terminal_at_hand 6358                                       ?_OUT 0060  
                             _I2C_LCD_init 5A80                                ?_LED_output 0060  
                                     l1506 3230                                       l1522 4EDA  
                                     l1363 3FF4                                       l1099 68D6  
                                     l1523 4EF0                                       l1356 3F72  
                                     l2405 59DA                                       l1517 4E6A  
                                     l1374 6B02                                       l1537 4D7A  
               USBConfigureEndpoint@handle 0033                                       l2198 423C  
                                     l1671 5FEA                                       l2448 5EBA  
                                     l1672 5FF8                                       l2458 634E  
                                     l2395 5536                                       l1908 2552  
                                     l1669 5FDC                                       l1685 5F6A  
                                     l1846 4686                                       l1934 2B70  
                                     l1687 5F78                                       l1847 4626  
                                     l1688 5F86                                       l1864 29E8  
                                     OUT@b 0061                                       l1886 27A6  
                                     l1987 0272                         __CFG_WPFP$PAGE_127 000000  
                                     l8510 1278                                       l8530 1344  
                                     l8522 12F0                                       l8514 12A0  
                                     l8506 1250                                       l8534 136E  
                                     l8526 131A                                       l8518 12C8  
                                     l8538 1396                                       STR_1 FDFC  
                                     STR_2 FF7F                                       STR_4 FFFB  
                                     STR_7 FFFD                                       STR_9 FFF9  
                    ??_USBCtrlTrfTxService 002D                                       _UCFG 000F39  
                                     u8460 1306                                       _UEP0 000F26  
                                     _UEP1 000F27                                       u8470 1330  
                                     u8480 135A                                       u8490 1384  
                                     _UEIE 000F37                                       _UEIR 000F63  
                                     _UCON 000F65                               __CFG_WDTPS$8 000000  
                          _CDCDataInHandle 010E                                display@item 0064  
                      ??_RTCC_from_caltime 0091                                display@str0 0060  
                              display@str1 0062     USBStdFeatureReqHandler@current_ep_data 0044  
                                     _pDst 0112                                       _atoi 4154  
                                     _main 601E                   ??i2_USBTransferOnePacket 0031  
                 button_timer_interrupt@bt 0083                              _software_init 530E  
                                     _port 012E                                       fsr0h 000FEA  
                                     fsr1h 000FE2                         i2___lwdiv@quotient 0031  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 020A  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                           __end_of_I2C_Send 6CFC  
                          _USBDeviceAttach 6872                                       btemp 0059  
                   __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_I2C_Stop 6D3A  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                                       start 10F6  
                         __end_of_ADC_init 6C18                              __CFG_IESO$OFF 000000  
                       __size_of_CTMU_init 0028                 RTCC_adjust_time_dec@i_3847 0097  
                       __size_of_CTMU_read 00C2                 __end_of_USBCheckStdRequest 4338  
                   ??_USBCtrlTrfOutHandler 002F                             terminal_task@i 0668  
                             ___param_bank 000010                  ??_USBStdFeatureReqHandler 0041  
                            _I2C_LCD_Clear 6CB0                            ??_terminal_task 0196  
                          ??_terminal_time 00DA                                      ??_ADC 0062  
                       terminal_task@ascii 0667                                      ADC@ch 0063  
                            ADC_init@p_ref 0060                                      ??_ISR 004B  
                   __size_of_I2C_IdleCheck 001E                                      ??_OUT 0061  
                 ??_USBStdGetStatusHandler 002D                               print_time@tx 00AB  
                        _terminal_data_out 0124                             ?_USBDeviceInit 002D  
                        ??_RTCC_to_caltime 0064                              __CFG_PLLDIV$2 000000  
                             _BAUDCON1bits 000F7E                                      l11002 032A  
                                    l11012 0384                                      l11022 03B4  
                                    l11030 03DC                                      l11014 038E  
                                    l11112 48DE                                      l11104 48AA  
                                    l11032 03E8                                      l11008 034C  
                                    l12000 234A                                      l11210 3CE0  
                                    l11202 3C90                                      l12010 23AC  
                                    l11124 4944                                      l11132 5268  
                                    l11052 04D8                                      l11044 042E  
                                    l12020 23E2                                      l12004 2354  
                                    l11046 043E                                      l11038 040E  
                                    l11054 04EE                                      l11070 63C2  
                                    l11222 3D58                                      l11214 3D08  
                                    l11206 3CB8                                      l11310 1AE8  
                                    l12022 23E8                                      l11136 5272  
                                    l11056 050E                                      l11072 63C8  
                                    l11320 1BA0                                      l11240 1720  
                                    l11232 16C8                                      l12008 2394  
                                    l12016 23BC                                      l11074 63D8  
                                    l11218 3D30                                      l11314 1B54  
                                    l12042 24F6                                      l12050 251E  
                                    l12034 24AC                                      l12026 23F2  
                                    l10612 4838                                      l11164 52C8  
                                    l11500 3324                                      l12108 6654  
                                    l11076 63E4                                      l11420 3814  
                                    l11308 1AE0                                      l11316 1B6C  
                                    l11260 1844                                      l11252 17D6  
                                    l11244 17A4                                      l11236 16F4  
                                    l12044 250E                                      l12052 253C  
                                    l10622 5EFC                                      l11094 6922  
                                    l11190 6850                                      l11406 5F94  
                                    l11414 37E6                                      l11270 18FC  
                                    l12038 24B6                                      l12206 5B54  
                                    l12310 2316                                      l10560 5794  
                                    l10704 4CA0                                      l12240 5A8A  
                                    l10640 5400                                      l12216 6178  
                                    l11504 3344                                      l12080 631C  
                                    l11344 5BFE                                      l11184 6148  
                                    l11424 3840                                      l11264 18B0  
                                    l11248 17CC                                      l11360 639E  
                                    l12304 22B6                                      l10618 5ED6  
                                    l10570 57C4                                      l10730 1BE0  
                                    l11610 304C                                      l11450 5E7C  
                                    l10650 5430                                      l10634 53EA  
                                    l11098 6934                                      l11514 33B4  
                                    l11338 5BCC                                      l11346 5C26  
                                    l11434 38B0                                      l12402 31B2  
                                    l11290 19C4                                      l11282 196C  
                                    l11258 183C                                      l11266 18C8  
                                    l12058 2542                                      l11370 6464  
                                    l12306 22CE                                      l10572 57CA  
                                    l10580 57FC                                      l10564 57A4  
                                    l10724 1BD0                                      l11604 3018  
                                    l12324 6C32                                      l12260 5AF8  
                                    l12252 5AD6                                      l12244 5A94  
                                    l11508 334E                                      l12340 3906  
                                    l12084 6340                                      l12076 630A  
                                    l10820 6206                                      l11188 6844  
                                    l11700 15CC                                      l11428 3870  
                                    l12412 3210                                      l12420 321E  
                                    l11196 6776                                      l12068 2590  
                                    l12172 5DFE                                      l11364 641A  
                                    l10742 1C5E                                      l10726 1BD6  
                                    l11550 4DBA                                      l12190 50BA  
                                    l11446 5E6A                                      l10646 541E  
                                    l10662 546E                                      l12350 3A02  
                                    l12078 6316                                      l11702 15E4  
                                    l11438 38EE                                      l12414 3214  
                                    l12422 3234                                      l11294 1A48  
                                    l11286 1998                                      l12502 2BEC  
                                    l11366 6426                                      l11710 0A28  
                                    l10584 5810                                      l10576 57EE  
                                    l10568 57B8                                      l10736 1C3A  
                                    l11624 3086                                      l11632 30AA  
                                    l11616 3064                                      l11560 4DFE  
                                    l11552 4DC4                                      l10680 54D0  
                                    l11448 5E76                                      l12256 5AE0  
                                    l12248 5AAC                                      l10648 542A  
                                    l11480 32DE                                      l12096 67F6  
                                    l12352 3A24                                      l12336 38FC  
                                    l10816 61CE                                      l10920 0048  
                                    l12520 0522                                      l12416 3218  
                                    l12512 2C10                                      l12440 2A54  
                                    l12168 5DDC                                      l11392 41B4  
                                    l11376 4156                                      l11720 0AC4  
                                    l11712 0A34                                      l13136 6028  
                                    l10746 1CC2                                      l10738 1C3E  
                                    l11650 30F8                                      l11634 30B6  
                                    l11642 30DA                                      l11458 5EAC  
                                    l10666 5482                                      l10658 5460  
                                    l10762 6AD8                                      l10914 002C  
                                    l12362 3E7E                                      l11298 1A70  
                                    l12506 2BFE                                      l12450 2A78  
                                    l12434 2A2C                                      l12178 5E3E  
                                    l11394 41FE                                      l11378 415C  
                                    l11722 0AFC                                      l12282 21DA  
                                    l12266 210C                                      l11652 30FC  
                                    l11644 30E4                                      l11564 4E28  
                                    l10596 43B0                                      l12188 50A4  
                                    l12196 50C0                                      l12700 3FDC  
                                    l10676 54BA                                      l11492 330C  
                                    l11476 32D4                                      l10780 5984  
                                    l10916 003E                                      l10908 000E  
                                    l12428 3282                                      l11900 29D8  
                                    l12460 2A9C                                      l12452 2A7A  
                                    l12516 2C32                                      l11396 4204  
                                    l11388 41A2                                      l11740 0C52  
                                    l11732 0BC4                                      l11716 0A7C  
                                    l12284 21E0                                      l12268 2124  
                                    l12620 0DEC                                      l11654 3120  
                                    l11558 4DF8                                      l10678 54CA  
                                    l10694 6C7C                                      l10934 0100  
                                    l10926 0080                                      l12542 069C  
                                    l12526 055C                                      l12358 3E74  
                                    l12382 62F0                                      l12374 629A  
                                    l11814 465A                                      l11822 4676  
                                    l11910 2A26                                      l12470 2AD0  
                                    l12462 2A9E                                      l12454 2A80  
                                    l11742 0C8A                                      l11726 0B44  
                                    l12294 2276                                      l13174 6080  
                                    l11592 2FE8                                      l11568 4E58  
                                    l11584 6C54                                      l12712 404A  
                                    l10688 5524                                      l10784 59C8  
                                    l10776 596E                                      l10960 01CE  
                                    l10944 0138                                      l10936 0106  
                                    l12544 072A                                      l12560 0992  
                                    l12536 05BE                                      l12368 3F64  
                                    l12392 3134                                      l11832 46CA  
                                    l11808 4640                                      l11920 25A8  
                                    l12472 2AF0                                      l12480 2B50  
                                    l12464 2AA4                                      l11752 0D52  
                                    l11736 0C0A                                      l11728 0B7C  
                                    l12288 220A                                      l12640 0F10  
                                    l12632 0EBE                                      l12624 0E6C  
                                    l12616 0DC2                                      l11594 2FF2  
                                    l10890 2DAC                                      l11762 6A12  
                                    l10778 597E                                      l10962 01E6  
                                    l10954 01B0                                      l10946 0144  
                                    l12546 0772                                      l12562 09A6  
                                    l12378 62A4                                      l11850 2840  
                                    l11842 27FC                                      l11930 2604  
                                    l12474 2B10                                      l12722 4E98  
                                    l11746 0CD2                                      l12650 0F66  
                                    l12642 0F14                                      l12634 0EC2  
                                    l12626 0E70                                      l13178 6088  
                                    l12708 401E                                      l11772 6A1A  
                                    l10956 01BC                                      l10948 014A  
                                    l10972 0236                                      l12580 2EB0  
                                    l12396 3164                                      l12388 312A  
                                    l11852 2858                                      l11940 263A  
                                    l11924 25B2                                      l11916 2596  
                                    l12492 2BC0                                      l12476 2B30  
                                    l12468 2AB0                                      l11748 0D0A  
                                    l11598 3002                                      l10894 2DB4  
                                    l11766 6A16                                      l11758 6A0E  
                                    l11782 6006                                      l10990 02DE  
                                    l11862 288E                                      l11846 2806  
                                    l11838 27EA                                      l11942 2640  
                                    l12494 2BC8                                      l12486 2B84  
                                    l12734 4EC4                                      l12726 4EAE  
                                    l12830 533C                                      l12662 103E  
                                    l10888 2DA8                                      l10968 021E  
                                    l12576 2EA6                                      l12568 09C4  
                                    l11880 2952                                      l11864 2894  
                                    l11960 2710                                      l11928 25EC  
                                    l11936 2614                                      l12752 4F02  
                                    l12728 4EB2                                      l12672 10A2  
                                    l12664 1046                                      l12656 0FEA  
                                    l12648 0F62                                      l12680 10D8  
                                    l12690 3F82                                      l10978 0294  
                                    l11858 2868                                      l11946 264A  
                                    l12498 2BDA                                      l12770 4CE0  
                                    l12834 5346                                      l12658 1014  
                                    l10988 02D8                                      l12588 2F9A  
                                    l11884 298C                                      l11892 29B4  
                                    l11876 2948                                      l11868 289E  
                                    l11964 274A                                      l11972 2772  
                                    l11956 2706                                      l11980 2796  
                                    l12668 1062                                      l11798 45F0  
                                    l11886 29A4                                      l11894 29D2  
                                    l11990 27E4                                      l11966 2762  
                                    l11974 2790                                      l12766 4CD6  
                                    l12846 53C6                                      l12776 4D02  
                                    l12792 4D7E                                      l12698 3FC0  
                                    l12786 4D40                                      l11996 2338  
                              _writeBuffer 03C0                  __end_of_RTCC_from_caltime 6BAC  
                                    ?_atoi 007C                                      ?_main 002D  
                           ??_get_quot_rem 007D                            __end_of___awdiv 548C  
                                    _ADRES 000FC3                                      STR_10 FFE6  
                                    STR_11 FFFB                                      STR_20 FFE3  
                                    STR_12 FFFB                                      STR_13 FFF7  
                                    STR_14 FF8F                                      STR_30 FFD9  
                                    STR_31 FFF3                                      STR_15 FF79  
                                    STR_23 FD98                                      STR_16 FFFD  
                                    STR_32 FFC9                                      STR_40 FF91  
                                    STR_24 FF82                                      STR_41 FFE6  
                                    STR_17 FF80                                      STR_33 FDFF  
                                    STR_25 FF53                                      STR_42 FFE6  
                                    STR_18 FFF9                                      STR_26 FFEF  
                                    STR_34 FFE7                                      STR_50 FEC3  
                                    STR_43 FFE6                                      STR_35 FE4B  
                                    STR_27 FFEE                                      STR_19 FFE3  
                                    STR_51 FFCF                                      STR_44 FFE6  
                                    STR_52 FFF1                                      STR_36 FFDE  
                                    STR_60 FF48                                      STR_28 FF31  
                          __end_of___awmod 581A                                      STR_29 FFE9  
                                    STR_37 FFF5                                      STR_61 FFD4  
                                    STR_45 FE92                                      STR_53 FBE6  
                                    STR_70 FFB7                                      STR_38 FF98  
                                    STR_54 FF67                                      STR_46 FF0C  
                                    STR_62 FE1D                                      STR_39 FFBB  
                                    STR_55 FF70                                      STR_71 FF3D  
                                    STR_47 FEE2                                      STR_63 FDBD  
                                    STR_72 FE44                                      STR_56 FFEB  
                                    STR_64 FFC3                                      STR_80 FFA5  
                                    STR_48 FEF1                                      STR_65 FFDC  
                                    STR_81 FFAB                                      STR_57 FF25  
                                    STR_49 FF19                                      STR_73 FE01  
                                    STR_58 FFE6                                      STR_74 FEE2  
                                    STR_90 FE81                                      STR_82 FE81  
                                    STR_66 FE4D                                      STR_91 FFA5  
                                    STR_83 FFA5                                      STR_59 FFBD  
                                    STR_75 FEFF                                      STR_67 FDE1  
                                    STR_76 FFE6                                      STR_92 FFAB  
                                    STR_84 FFAB                                      STR_68 FE35  
                                    STR_93 FFE6                                      STR_85 FFE6  
                                    STR_77 FFE6                                      STR_69 FDBB  
                                    STR_94 FFE6                                      STR_86 FFE6  
                                    STR_78 FFE6                                      STR_95 FFE6  
                                    STR_87 FFE6                                      STR_79 FFE6  
                                    STR_88 FFA5                                      STR_96 FFB1  
                                    STR_89 FFAB                                      STR_97 FF9F  
                                    STR_98 FE81                                      STR_99 FFB1  
        __size_of_USBCtrlEPServiceComplete 00F4                            __end_of___lldiv 5548  
                                    u12100 640E                                      u11400 47E2  
                                    u12200 5300                                      u11410 47E4  
                                    u12107 6404                                      u11420 4814  
                          ___awdiv@divisor 0062                                      u12205 52F2  
                                    u11440 482A                            __end_of___llmod 59EC  
                   __end_of_USBDeviceTasks 367C                                      u11450 482C  
                                    u11460 4884                                      u11470 4886  
                                    u11438 4818                                      u13310 6002  
                                    u14110 3EA6                                      u12520 5BEE  
                                    u11730 69AA                                      u12530 5C20  
                                    u11900 0210                                      u14140 62CC  
                                    u12700 5F90                                      u13420 2908  
                                    u13270 5FE6                                      u11750 61F8  
                                    _LATB2 007C52                                      u14055 392E  
                                    u12527 5BE4                                      _LATA5 007C4D  
                                    u14400 3DA4                                      u14080 39F2  
                                    u11760 6228                                      _LATC2 007C5A  
                                    _LATA6 007C4E                                      u13265 5FD6  
                                    u12537 5C16                                      _LATA7 007C4F  
                                    u14410 3DE2                                      u13290 5FF4  
                                    u13266 5FDA                                      _LATB6 007C56  
                                    u11907 0206                                      _LATB7 007C57  
                                    u12900 4DAA                                      u14420 3DE4  
                                    u11860 0184                                      u14340 05FE  
                                    u12660 5F74                                      u12740 3862  
                                    u13540 26B4                                      u11757 61EE  
                                    u14430 3E22                                      u14350 0666  
                                    u13438 290C                                      u15207 6CBE  
                                    u11767 621E                                      u14351 0662  
                                    u12655 5F64                                      u14440 3E24  
                                    u14360 0668                                      u12680 5F82  
                                    u12656 5F68                                      u12760 38A4  
                                    u15217 68DC                                      u14450 3E62  
                                    u12770 38D2                  ?_USBCtrlEPServiceComplete 002D  
                                    u15227 5292                                      u11867 017A  
                                    u12747 3858                                      u12908 4DAE  
                                    u14460 3E64                                      u14348 0602  
                                    u15237 529C                                      u14390 3DA2  
                                    u13558 26B8                                      u12767 389A  
                                    u12960 2FD8                                      u15177 5BFA  
                                    u12777 38C8                                      u15187 5A9C  
                                    u13765 6C08                                      u15197 5AE8  
                                    u13766 6C0A                                      u12968 2FDC  
                          __end_of___lwdiv 5EC4                            ringbuf_put@data 006A  
                          __end_of___lwmod 6358                                      i2l300 5628  
                                    i2l232 40DA                                      i2l146 36E2  
                                    i2l170 3614                                      i2l308 6708  
                            __CFG_WDTEN$ON 000000                                      i2l158 3568  
                                    i2l168 3602                                      i2l345 523C  
                                    i2l169 3678                                      i2l450 4A98  
                                    i2l452 4AE2                                      i2l374 1E6E  
                                    i2l295 5612                                      i2l359 4256  
                                    i2l368 42BA                                      i2l393 2032  
                                    i2l298 56A0                                      i2l299 5622  
                                    _UADDR 000F38                            ___awdiv@counter 0064  
                  ST7032_task@st7032_state 0119                            ??_hardware_init 0091  
                                    _TMR1H 000FCF                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F64                     __size_of_ctmu_sampling 0102  
                   __size_of_LED_indicator 0126         __size_of_USBCtrlEPAllowStatusStage 00C4  
                      ___lmul@multiplicand 0071                             __CFG_FCMEN$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 58B8                                      _sd000 FBE2  
                                    _sd001 FB3C                                      _sd002 FB70  
                          __end_of_display 38F6                       caltime_to_epoch@year 007F  
                               i2memset@p1 002D                            __end_of_dpowers FA79  
                          ??_settings_task 0099                            __end_of_isdigit 6AE2  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003A  
                         ringbuf_delete@rb 0060                                      atoi@a 0081  
                                    atoi@s 007C                          __end_of_I2C_Start 69AE  
                RTCC_adjust_time_cursor@tm 0060                               display_dec@s 00AF  
              settings_task@settings_state 012B                                      tablat 000FF5  
                        __end_of_ANALOG_IN 6A34                             ?_software_init 002D  
                                    plusw2 000FDB                          __end_of_CDCInitEP 60F8  
               __size_of_ringbuf_backspace 008E                                      status 000FD8  
                          __end_of_sprintf 051C                      __size_of_I2C_init_old 0012  
                         __end_ofi2_memset 6AB8                         __size_ofi2___awdiv 0084  
                        month_length@month 0066                                CTMU_read@ch 0070  
                      _USB_CDC_buffer_init 6678                    __end_of_ringbuf_put_num 5E4C  
                  __end_of_ringbuf_put_str 6230                         __size_ofi2___lwdiv 0052  
                      terminal_task@i_4539 0666                            putUSBUSART@data 0060  
             __size_of_USBStdSetCfgHandler 00E2                             ?_I2C_LCD_Clear 002D  
                          __initialization 58B8                            terminal_task@rx 0194  
                          terminal_task@tx 0192                            terminal_time@tx 00D2  
                             __end_of_atoi 4246                               __end_of_main 608C  
                    _control_signal_bitmap 011D                           __end_of_Auto_cut 3A2A  
                      ringbuf_init@bufsize 0064                           RTCC_from_RTCC@tm 0086  
                     _settings_adjust_time 45EE                 RTCC_adjust_time_inc@i_3817 0097  
                      __size_of_LED_output 0072                   ctmu_set_ratio@percentage 0083  
                __size_of_USBCtrlEPService 00CE                              print_time@str 00AD  
                RTCC_adjust_time_toggle@tm 0060                                     ??_atoi 007E  
                                   ??_main 00E6                            LED_output@value 0060  
          settings_led_indicator@strp_6131 0091                              __activetblptr 000003  
                          ?_USBDeviceTasks 002D                  ??_RTCC_adjust_time_cursor 0062  
                     ?_USB_CDC_buffer_init 002D                                ?_USBSuspend 002D  
                ??_RTCC_adjust_time_toggle 0062                                     ISR@cnt 0116  
                        __end_of_CTMU_init 6B86                          __end_of_CTMU_read 530E  
                             _cdc_mem_type 0017                               _I2C_init_old 6D10  
                                   _BCL1IF 007D0B                              _I2C_IdleCheck 6C78  
                  __end_of_USBDeviceAttach 68AA                           _CDCDataOutHandle 0007  
                        _getsUSBUSART$1957 006B                           ___llmod@dividend 006D  
                                   STR_100 FF9F                                     STR_101 FFE6  
                                   STR_102 FFE6                                     STR_110 FF5E  
                                   STR_103 FFE6                                     STR_111 FE70  
                        _I2C_LCD_SetCursor 69DC                                     STR_112 FF5E  
                                   STR_104 FF5E                                     STR_113 FEB3  
                                   STR_105 FE5F                                     STR_114 FF5E  
                                   STR_106 FF5E                                     STR_107 FE5F  
                                   STR_115 FED3                                     STR_116 FFE6  
                                   STR_108 FF5E                                     STR_117 FFE6  
                                   STR_109 FEA3                                     STR_118 FF8A  
                                   _EECON2 000FA7                                     _ANCON0 000F48  
                                   _ANCON1 000F49                        display_time_1602@tm 00B3  
                         ___awdiv@dividend 0060                         I2C_LCD_Command@ans 0065  
                          getsUSBUSART@len 0069                      __size_of_CDCTxService 0170  
                                   i2l1800 10BA                                     i2l2448 661E  
                                   i2l1685 625A                                     i2l1687 6266  
                                   i2l1688 6272                                     i2l7110 510C  
                                   i2l7220 3520                                     i2l7140 5868  
                                   i2l7302 1FCC                                     i2l7214 3510  
                                   i2l7206 34AE                                     i2l7312 2012  
                                   i2l7216 3518                                     i2l7208 34B6  
                                   i2l7232 5648                                     i2l7160 454E  
                                   i2l7144 5884                                     i2l7330 209E  
                                   i2l7322 204E                                     i2l7314 201E  
                                   i2l7242 5688                                     i2l7090 6A96  
                                   i2l7170 4582                                     i2l7260 1E6A  
                                   i2l7164 4556                                     i2l9020 372E  
                                   i2l9004 36F0                                     i2l9012 3708  
                                   i2l6710 56FE                                     i2l6702 56D4  
                                   i2l7094 6AA6                                     i2l7328 2092  
                                   i2l7280 1F28                                     i2l8320 6704  
                                   i2l9016 3726                                     i2l9112 35F8  
                                   i2l9104 35D0                                     i2l6722 575A  
                                   i2l7282 1F2A                                     i2l7274 1EE4  
                                   i2l7194 33FC                                     i2l7186 45CC  
                                   i2l9026 378A                                     i2l8340 4F82  
                                   i2l9140 3674                                     i2l9132 363A  
                                   i2l9060 3560                                     i2l9052 3550  
                                   i2l6806 4AC4                                     i2l6814 4AEC  
                                   i2l7286 1F46                                     i2l7198 3414  
                                   i2l7710 426C                                     i2l9118 360C  
                                   i2l6680 5A4E                                     i2l7296 1F98  
                                   i2l7720 428E                                     i2l8336 4F7A  
                                   i2l8352 4FE2                                     i2l6690 679A  
                                   i2l7298 1FB2                                     i2l7722 4294  
                                   i2l7706 4260                                     i2l7618 4084  
                                   i2l8354 4FE8                                     i2l9138 3658  
                                   i2l9082 358E                                     i2l9074 357E  
                                   i2l6932 6476                                     i2l7732 42D6  
                                   i2l7708 4266                                     i2l8348 4FC8  
                                   i2l6694 67A8                                     i2l6790 4A66  
                                   i2l6934 647C                                     i2l7718 4288  
                                   i2l7638 4100                                     i2l7672 3BA4  
                                   i2l7736 42F4                                     i2l8296 6976  
                                   i2l9088 35B4                                     i2l6962 46FA  
                                   i2l7666 3B80                                     i2l6938 6482  
                                   i2l8298 6978                                     i2l9098 35C4  
                                   i2l6972 472A                                     i2l6980 4764  
                                   i2l7860 51BC                                     i2l7684 3C02  
                                   i2l6982 476C                                     i2l6990 47A6  
                                   i2l6958 46F0                                     i2l7862 51C0  
                                   i2l7846 6526                                     i2l7838 64DE  
                                   i2l6798 4A86                                     i2l9704 65EC  
                                   i2l7880 5222                                     i2l7688 3C1C  
                                   i2l9706 65F4                                     i2l7874 5202  
                                   i2l9652 627E                                     i2l9716 6614  
                                   i2l9708 65F8                                     i2l9662 5D5A  
                                   i2l7886 5246                                     i2l9904 3B4C  
                                   i2l9674 5D80                                     i2l9690 5DB2  
                                   i2l9676 5D88                                     i2l9668 5D6A  
                                   i2l9694 5DC0                                     i2l9686 5DA8  
                                   i2l9678 5D8C                                     i2l9880 3A2E  
                                   i2l8992 36C6                                     i2l9890 3A88  
                                   i2l9884 3A36                                     i2l8988 36BE  
                                   i2l9896 3B06                         ?_I2C_LCD_SetCursor 0066  
                                   _RCREG1 000FAF                              CDCTxService@i 006A  
                                   _RTCCAL 000F3E                                     _SPBRG1 000FB0  
                            USB_CDC_task@i 0070                                     _SSP1IF 007CF3  
                           __CFG_WPCFG$OFF 000000                                     _SSPBUF 000FC9  
                                   _TXREG1 000FAE                   i2USBTransferOnePacket@ep 0031  
       settings_integrating_reset@str_6147 007E                          ??i2_USBDeviceInit 0035  
          __size_ofi2_USBTransferOnePacket 00BA                           __end_of_data_out 2FB4  
                           __CFG_WPDIS$OFF 000000                              _ctmu_sampling 3D6C  
                            _LED_indicator 3A2A                         _terminal_task$7033 0664  
                       epoch_to_caltime@tm 0081                                LED_output@b 0061  
                        _shortPacketStatus 0021                        ??_I2C_LCD_SetCursor 0067  
                           __CFG_XINST$OFF 000000                          ?_epoch_to_caltime 0081  
                  __size_of_ctmu_set_ratio 00E6                           ringbuf_put_num@i 0088  
                          USBDeviceTasks@i 004A                      caltime_to_epoch@epoch 0081  
                         ??_integrate_time 0060                USBStdFeatureReqHandler@pUEP 0042  
                       _terminal_time$7034 00DA                   USBTransferOnePacket@data 0061  
               USBCtrlTrfInHandler@lastDTS 002E                            ??_USBDeviceInit 0068  
                             ?_ringbuf_pop 0068                               ?_ringbuf_num 0060  
                             ?_ringbuf_put 0068                      caltime_to_epoch@month 0085  
                         __end_of_bootload 674E                                     ___lmul 5EC4  
                             ?_putUSBUSART 0060                            _caltime_to_RTCC 4964  
                                   ___wmul 68E2                         ??_epoch_to_caltime 0083  
                                ??___awdiv 0064                                  ??___awmod 0064  
             __end_of_RTCC_adjust_time_dec 1BB6                      ?_settings_adjust_time 002D  
             __end_of_RTCC_adjust_time_inc 1912                                     _d_to_x 6B36  
                                ??___lldiv 0068                       __end_of_getsUSBUSART 4E5C  
                     ringbuf_put_num@value 0085                               ?_timer0_init 002D  
                                ??___llmod 0075                          __end_of_RTCC_init 61CC  
                             ?_timer1_init 0060                                  ??___lwdiv 0080  
                        __end_of_RTCC_task 683A                                  ??___lwmod 0064  
                             ?_timer3_init 002D                               ?_normal_task 002D  
                                   _lcd_tx 0023                          _USBEnableEndpoint 678A  
          __size_of_USBStdGetStatusHandler 00BA                                     _ctmu_m 00FC  
                                   _memset 6918                                     clear_0 58C0  
                                   clear_1 58D2                                     clear_2 58DE  
                                   clear_3 58EC                                     clear_4 58FE  
                                   clear_5 590A                                     clear_6 5916  
                                   clear_7 5922                            __CFG_CLKOEC$OFF 000000  
                         ___awdiv@quotient 0066                            ___awmod@divisor 0062  
                     __size_of_display_LCD 04C4                            ___awmod@counter 0064  
                       _ctmu_sampling_flag 011E                                     _x_to_d 6C58  
                       ?_USBEnableEndpoint 0035                 __size_of_RTCC_from_caltime 0026  
                                   _usb_rx 02BE                                     _usb_tx 02C6  
                     __size_of_display_dec 006A                                     _strcat 63B8  
                                   _strcmp 6418                                     _strcpy 683A  
                                ??_display 0064                             i2___awdiv@sign 0032  
                    ??_USB_CDC_buffer_init 0066              __size_of_USBTransferOnePacket 00D8  
                __size_of_caltime_to_epoch 028E                         _terminal_operation 20C4  
                                ??_isdigit 0060                settings_auto_stop@strp_6114 0091  
                        __end_ofi2___awdiv 5DCA                                  ?_I2C_Send 002D  
                             _st7032_state 0123                               _CDCTxService 2FB4  
                                ?_I2C_Stop 002D                          __end_ofi2___lwdiv 6628  
                             __mediumconst FA50                              _cut_time_flag 011F  
                __end_of_I2C_LCD_SetCursor 6A08                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                ?_ADC_init 002D                        ??_USBEnableEndpoint 0036  
                           ?_I2C_IdleCheck 002D                   USB_CDC_buffer_init@rxbuf 0500  
                 USB_CDC_buffer_init@txbuf 0669                                  ??_sprintf 0097  
                      ?_terminal_operation 00DB                              ?i2_LED_output 002D  
                              _CtrlTrfData 000D38                            ??_software_init 0084  
                     _controlTransferState 001B                       __CFG_LS48MHZ$SYS48X8 000000  
                               __accesstop 0060                    __end_of__initialization 5948  
                             ?_USB_CDC_ISR 002D                               __pbssBIGRAMl 0669  
                             ?_USB_CDC_get 002D                               CTMU_read@sum 0071  
                            ?_millis_timer 002D                       __end_of_get_quot_rem 4BE4  
                           ?_ctmu_sampling 002D                             ?_LED_indicator 002D  
                            ___rparam_used 000001                            ??_I2C_LCD_Clear 0066  
                          _RTCC_from_epoch 6C96                   __size_of_USBStallHandler 0046  
                         ?_ringbuf_put_num 0083                           ?_ringbuf_put_str 006F  
                  ?_settings_led_indicator 002D                       __CFG_WPEND$PAGE_WPFP 000000  
                      __size_of_USBSuspend 002C                           LED_indicator@cnt 0212  
                         terminal_task@op0 0242                           terminal_task@op1 025B  
                         terminal_task@op2 0274                           terminal_task@op3 028D  
                         terminal_task@buf 0600                             __pcstackCOMRAM 002D  
                __end_of_USBEnableEndpoint 67C6                              __end_of_sd000 FBE6  
                            __end_of_sd001 FB70                              __end_of_sd002 FBA4  
                         terminal_time@op0 00D4                           terminal_time@op1 00D6  
                         terminal_time@op2 00D8                               __pidataBANK1 6D40  
           settings_led_indicator@str_6130 007B                       ??_terminal_operation 00E5  
                 __end_of_terminal_at_hand 63B8           __size_of_USBCtrlEPAllowDataStage 009E  
            __size_of_USBConfigureEndpoint 0094                          ?_port_button_task 002D  
              __end_of_USBCtrlTrfInHandler 524C                            __CFG_DSWDTPS$G2 000000  
                          _I2C_LCD_Command 68AA                     i2_USBTransferOnePacket 56BE  
                       ??_port_button_task 0066                       terminal_task@command 0181  
                            _I2C_cfct_flag 011B                          _CDCTxService$2005 0068  
                         I2C_LCD_Command@c 0064                                 ??_I2C_Send 0062  
                               ??_I2C_Stop 0062                                 _cdc_notice 0200  
                  __size_of_ringbuf_delete 0026                                  ?i2_memset 002D  
                               _cdc_rx_len 0018                                 _cdc_tx_len 001A  
                               ??_ADC_init 0060                 caltime_to_epoch@month_3637 0080  
                 ??_USBCtrlTrfSetupHandler 0047                             ??i2_LED_output 002E  
                             ??_LED_output 0061                     RTCC_adjust_time_dec@tm 0091  
                         ?_USBDeviceAttach 002D                     _USBStdGetStatusHandler 5604  
                             sprintf@width 00A9                     RTCC_adjust_time_inc@tm 0091  
                               __pbssBANK0 00E6                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                                ?_Auto_cut 002D                             LED_indicator@i 0038  
                           ??_millis_timer 002D                         __size_of_ctmu_task 0014  
                                ISR@cnt_t1 0117   __end_of_APP_DeviceCDCBasicDemoInitialize 6B36  
__size_of_APP_DeviceCDCBasicDemoInitialize 002A         ??_APP_DeviceCDCBasicDemoInitialize 0039  
        ?_APP_DeviceCDCBasicDemoInitialize 002D           _APP_DeviceCDCBasicDemoInitialize 6B0C  
                  __end_of_caltime_to_RTCC 4A3A             __end_of_settings_led_indicator 27E8  
                          _RTCC_to_caltime 5548                         _settings_auto_stop 27E8  
              __size_of_USBWakeFromSuspend 0032                                _pBDTEntryIn 00F5  
         __end_of_USBCtrlEPServiceComplete 4154                __size_of_USBCheckCDCRequest 00D6  
                    __end_of_weekday_3char FBC0                     ??_settings_adjust_time 0099  
                    RTCC_task@prev_halfsec 0118                       USBCtrlTrfRxService@i 002D  
                                  ?___lmul 006D                      settings_auto_stop@str 0067  
                                  ?___wmul 0076                             ST7032_init@buf 0400  
                      ?_settings_auto_stop 002D                                    ?_d_to_x 002D  
                                  ?_memset 0060                       I2C_LCD_SetCursor@col 0069  
                           ___lmul@product 0075                                 _device_dsc FBC0  
                     I2C_LCD_SetCursor@row 0066                         __end_of_LED_output 5FAC  
                         _USBCtrlEPService 4F2A                                    ?_x_to_d 002D  
                             I2C_Send@data 0062                                 _ep_data_in 0001  
                                  ?_strcat 0060                                    ?_strcmp 0060  
                                  ?_strcpy 0060                    settings_auto_stop@state 0128  
              __end_of_USBCtrlTrfRxService 3C68                         _USBCheckStdRequest 4246  
                        _configDescriptor1 FAF9                                    i2l10432 1052  
                                  i2l10442 1074                                    i2l10448 1094  
                                  i2l10458 10B0                                    i2l13220 649A  
                                  i2l13222 64CA                         __CFG_OSC$INTOSCPLL 000000  
                          ??_I2C_IdleCheck 0060                                 ANALOG_IN@b 0060  
                               ??i2_memset 0033                                  ?_data_out 00AB  
              __end_of_USBCtrlTrfTxService 47AE                        _USBStdSetCfgHandler 450C  
               __size_of_I2C_LCD_SetCursor 002C                     I2C_LCD_SetCursor@F8685 01E2  
                                  _SPBRGH1 000F7F                              _I2C_sent_flag 000E  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                     terminal_operation@tx 00DB                                    _RTCVALH 000F3B  
                                  _RTCVALL 000F3A                       ??_settings_auto_stop 0066  
                      ?_USBCheckStdRequest 002D               __size_of_USBStdGetDscHandler 014E  
                                  _UIEbits 000F36                            integrate_time@i 0062  
                  __end_of_RTCC_from_epoch 6CB0                                  ?_bootload 002D  
                     timer1_init@prescaler 0062                       _RTCC_adjust_time_dec 1912  
                                  _UIRbits 000F62                       _RTCC_adjust_time_inc 166E  
                               ??_Auto_cut 007C                           __CFG_CFGPLLEN$ON 000000  
                 ??_button_timer_interrupt 0086                              _cdc_trf_state 0019  
                          ??_ctmu_sampling 0088                            ??_LED_indicator 0035  
                            ?_month_length 0066                        epoch_to_caltime@day 0087  
                      epoch_to_caltime@num 008B                          RTCC_from_epoch@tm 008F  
                                _I2C_Start 697E                                    _pCDCDst 0106  
                                  _pCDCSrc 0109                      __size_of_getsUSBUSART 00D2  
                   display_time_1602@line0 00B5                     display_time_1602@line1 00B7  
                                _ANALOG_IN 6A08                                    __Hparam 0000  
                           _ctmu_set_ratio 4426        settings_integrating_reset@strp_6148 0094  
                     ?_USBStdSetCfgHandler 002D                                  _CDCInitEP 608C  
                                  __Lparam 0000                                 _ctmu_ratio 001C  
                  __end_of_I2C_LCD_Command 68E2                          ringbuf_put_num@rb 0083  
                           display_LCD@str 0192                 __size_of_USBEnableEndpoint 003C  
                        ringbuf_put_str@rb 006F                                 _readBuffer 0380  
                     ??_USBCheckStdRequest 0047              __size_of_USBCtrlTrfOutHandler 005C  
                            ?_ringbuf_init 0060                                    ___awdiv 53CE  
                          __size_of___lmul 0076                                    ___awmod 5778  
                                  ___lldiv 548C                           ??_USBDeviceTasks 004A  
                          __size_of___wmul 0036                                    ___llmod 5952  
                    ringbuf_put_num@digits 0087                                    ___lwdiv 5E4C  
                        ??_USBStallHandler 002D                                    ___lwmod 62F6  
                          __size_of_d_to_x 0028                      __end_of_terminal_task 10F6  
                    __end_of_terminal_time 0D8C                settings_integrating_reset@i 0096  
              settings_integrating_reset@j 0098                       __size_of_ringbuf_pop 00CC  
                     __size_of_ringbuf_num 00EE                       __size_of_ringbuf_put 00D4  
                          __CFG_STVREN$OFF 000000                       __size_of_putUSBUSART 0020  
              epoch_to_caltime@month_cache 01E6                                    __pcinit 58B8  
                       getsUSBUSART@buffer 0067                            __size_of_memset 0034  
                __end_of_configDescriptor1 FB3C                                    __ramtop 0F00  
                     __size_of_timer0_init 003A                       __size_of_timer1_init 0050  
                                  __ptext0 601E                                    __ptext1 0D8C  
                                  __ptext2 20C4                                    __ptext3 09E0  
                                  __ptext4 6358                                    __ptext5 5CBA  
                                  __ptext6 6B86                                    __ptext7 6418  
                                  __ptext8 4154                                    __ptext9 670C  
                                  _inPipes 00EF                       __size_of_timer3_init 002C  
                     __size_of_normal_task 00CE              settings_integrating_reset@str 006A  
                        __end_of_ctmu_task 6D10                            __size_of_x_to_d 0020  
                            I2C_LCD_Puts@s 0064                _USBDeferOUTDataStagePackets 0011  
                        port_button_task@i 0066                                    _display 37C0  
                                _T0CONbits 000FD5                               __size_of_ADC 002E  
                          __size_of_strcat 0060                           _time_change_flag 0022  
                         _caltime_to_epoch 1BB6                            __size_of_strcmp 005C  
                          __size_of_strcpy 0038                               __size_of_ISR 00EE  
                                _T1CONbits 000FCD                               __size_of_OUT 0072  
                                  _dpowers FA51                               ??_USBSuspend 0041  
                  __size_of_RTCC_from_RTCC 001A                                 data_out@tx 00AB  
                                  _isdigit 6AB8                                  _T3CONbits 000F79  
                         ___awmod@dividend 0060                                 ??_data_out 00AD  
                            I2C_LCD_init@i 0068             settings_integrating_reset@strp 0092  
                                _T5CONbits 000F22                      __end_of_hardware_init 6582  
                          i2_USBDeviceInit 367C                           i2USBDeviceInit@i 0035  
                        __end_ofdata_out@p FBE2                                    _uart_rx 02AE  
                                  _uart_tx 02B6                         __end_of_USB_CD_Ptr FA81  
                                  _sprintf 0000            __size_of_USBCtrlTrfSetupHandler 008E  
                  __end_of_RTCC_to_caltime 5604                      ?_RTCC_adjust_time_dec 0091  
                    ?_RTCC_adjust_time_inc 0091                      __size_of_get_quot_rem 00D4  
                     end_of_initialization 5948                               _getsUSBUSART 4D8A  
                               ??_bootload 006A                                  _CTMU_init 6B5E  
                                _CTMU_read 524C                      __end_of_settings_task 2C4A  
                             _CTMUCONHbits 000FB3                         __end_of_USB_SD_Ptr FA7F  
                             _CTMUCONLbits 000FB2                        _pBDTEntryEP0OutNext 000B  
          settings_integrating_reset@state 0129                             ??_month_length 0067  
                           display_dec@dec 00AD                                    memset@c 0062  
                                  memset@n 0064                                    memset@p 0066  
                           display_dec@str 00AB            _dummy_encapsulated_cmd_response 02A6  
                   _terminal_data_out_flag 0125               terminal_operation@percentage 00E5  
                                i2u1021_40 626E                     __end_of_ctmu_set_ratio 450C  
                                i2u1023_40 627A                                  i2u1018_45 6254  
                                i2u1018_46 6258                                  i2u1019_40 6262  
                              sleep_task@i 006A                   ?_USBStdFeatureReqHandler 002D  
                         ?_caltime_to_RTCC 0069                                 ?_I2C_Start 0062  
                    ??_USBStdSetCfgHandler 0041                       __size_of_USB_CDC_ISR 0006  
                          ___lldiv@divisor 0064                                 ?_ANALOG_IN 002D  
                     timer3_init@prescaler 0061                                 ?_CDCInitEP 002D  
                          ___lldiv@counter 006C                       __size_of_USB_CDC_get 002A  
                       __end_of_USBSuspend 6A8C                             ??_ringbuf_init 0066  
                  _USBCtrlEPAllowDataStage 581A                                    postdec1 000FE5  
                                  postdec2 000FDD                                 _sleep_task 4CB8  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                       __end_ofi2_LED_output 6294  
                 _USBCtrlEPServiceComplete 4060                                    strcmp@r 0065  
               _USBStatusStageEnabledFlag1 0014                 _USBStatusStageEnabledFlag2 0015  
                       USBEnableEndpoint@p 0036                           __CFG_DSBOREN$OFF 000000  
                                _RTCC_init 6162                       __end_of_millis_timer 6BF8  
                                _RTCC_task 6800                               _display_char 021A  
                             _display_flag 0120                  epoch_to_caltime@day_cache 0218  
                       ST7032_cursor@F8640 01E4                                 _print_item 001F  
                             _get_quot_rem 4B10                                 _print_time 5CBA  
                               _print_port 00FB                             _ringbuf_delete 6BAC  
             __end_ofdisplay_LCD@port_char FAF9                  __size_of_epoch_to_caltime 01F2  
                         __CFG_CPUDIV$OSC1 000000                         _BothEP0OutUOWNsSet 000D  
                      RTCC_from_caltime@tm 008F                          __size_of_I2C_Send 0018  
                        __size_of_I2C_Stop 000A                                  i2___awdiv 5D46  
                USBConfigureEndpoint@EPNum 0032                          i2___lwdiv@divisor 002F  
                        __size_of_ADC_init 0020                 ?_USBCtrlEPAllowStatusStage 002D  
                            ?_USB_CDC_init 002D                 settings_led_indicator@strp 008F  
                                i2___lwdiv 65D6                              ?_USB_CDC_send 006C  
                            ?_USB_CDC_task 002D                          i2___lwdiv@counter 0033  
                         ?_RTCC_from_epoch 008F                                 ?_CTMU_init 002D  
                               ?_CTMU_read 006D        USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                                _USTATcopy 002C                                  Auto_cut@i 007E  
          __size_of_button_timer_interrupt 02C8                    timer1_init@clock_select 0060  
             __end_of_USBTransferOnePacket 4964                            ?_ctmu_set_ratio 002D  
                         __CFG_IOL1WAY$OFF 000000                         i2___awdiv@dividend 002D  
                        putUSBUSART@length 0062                        __CFG_MSSP7B_EN$MSK7 000000  
                        LED_indicator@cntf 0215                           ?_I2C_LCD_Command 002D  
                           ringbuf_init@rb 0060                     _USBCtrlTrfSetupHandler 5C2C  
                            ??_display_LCD 00BA                __end_of_USB_CDC_buffer_init 66C6  
                           ringbuf_pop@ret 006E                              ??_display_dec 00AF  
                  ?i2_USBTransferOnePacket 002D               ??_settings_integrating_reset 0066  
                    __end_of_USBDeviceInit 33EA                          ?_terminal_at_hand 00CB  
                           __end_of___lmul 5F3A                   ?_RTCC_adjust_time_cursor 0060  
                           __end_of___wmul 6918                             __end_of_d_to_x 6B5E  
                 ?_RTCC_adjust_time_toggle 0060                    __end_ofi2_USBDeviceInit 37C0  
                   __end_of_ringbuf_delete 6BD2                         ??_terminal_at_hand 00D2  
                                i2memset@c 002F                                  i2memset@n 0031  
                                i2memset@p 0033                             __end_of_memset 694C  
                               ?_RTCC_init 002D                                 ?_RTCC_task 002D  
                         __CFG_DSWDTEN$OFF 000000                          _USBBusIsSuspended 011C  
                           __end_of_x_to_d 6C78                             __end_of_strcat 6418  
                    epoch_to_caltime@month 008A                             __end_of_strcmp 6474  
                           __end_of_strcpy 6872                        start_initialization 58B8  
                               CTMU_read@i 0075                           month_length@year 006B  
                  ?_USBStdGetStatusHandler 002D                                __end_of_ADC 69DC  
                       i2___awdiv@quotient 0033                                __end_of_ISR 10F6  
            USBCtrlTrfRxService@byteToRead 002E                                __end_of_OUT 601E  
                            ?_I2C_LCD_Puts 0064                     ??_RTCC_adjust_time_dec 0093  
                   ??_RTCC_adjust_time_inc 0093                              ?_I2C_LCD_init 002D  
                              _cdc_data_rx 0300                             ??_USB_CDC_init 0069  
                              _cdc_data_tx 0340                          __size_ofi2_memset 002C  
                           ??_USB_CDC_send 006E                             ??_USB_CDC_task 006F  
                               ?i2___awdiv 002D               __end_of_USBConfigureEndpoint 5A80  
                         ?_RTCC_to_caltime 0062                  __size_of_port_button_task 0164  
                               ?i2___lwdiv 002D            __end_of_USBStdFeatureReqHandler 20C4  
        __end_of_USBCtrlEPAllowStatusStage 5188                      __end_of_software_init 53CE  
                 __end_of_USBCtrlEPService 4FF8                        settings_auto_stop@i 0093  
                      settings_auto_stop@j 0095                          _integrate_current 3E6E  
                          ___llmod@divisor 0071        __size_of_settings_integrating_reset 025E  
                        __size_of_Auto_cut 0134                                ??_I2C_Start 0063  
                          ___llmod@counter 0075                    settings_led_indicator@i 0093  
                  settings_led_indicator@j 0095                         ?_integrate_current 002D  
                ??_USBCtrlEPAllowDataStage 002E                                ??_ANALOG_IN 0060  
                              ??_CDCInitEP 0039                             USBDeviceInit@i 0068  
                    __end_of_I2C_LCD_Clear 6CCA                     _pBDTEntryEP0OutCurrent 0009  
                             _ctmu_value_m 0110                    USBTransferOnePacket@dir 0060  
                  USBTransferOnePacket@len 0063             __end_ofi2_USBTransferOnePacket 5778  
                         display_LCD@onoff FBD2                 settings_auto_stop@str_6113 007B  
                      ringbuf_put_num@temp 0089               settings_led_indicator@i_6132 0094  
                                 ??___lmul 0075                                ?_sleep_task 002D  
                                 ??___wmul 007A                        _USBStdGetDscHandler 33EA  
                                 ??_d_to_x 0068                        ??_integrate_current 006D  
              __size_of_terminal_operation 0272                          __CFG_ADCSEL$BIT12 000000  
                              __pdataBANK1 01E2                                   ??_memset 0066  
                 __size_of_ringbuf_put_num 0082                   __size_of_ringbuf_put_str 0064  
                   _button_timer_interrupt 10F6                                   ??_x_to_d 0060  
                          ?_ringbuf_delete 0060                                   ??_strcat 0064  
                                 ??_strcmp 0064                                   ??_strcpy 0064  
                     __end_of_month_length 488C                             _RTCC_from_RTCC 6CCA  
                      __end_of_display_LCD 09E0                     _USBActiveConfiguration 002B  
           __end_of_USBStdGetStatusHandler 56BE                                ?_print_time 00AB  
                  __size_of_integrate_time 0062                        __end_of_display_dec 6162  
                              __pbssCOMRAM 0001                        RTCC_to_caltime@dumy 0064  
                            __pcstackBANK0 0060                              __pcstackBANK1 0192  
             __size_of_USBCtrlTrfInHandler 00C4                              __pcstackBANK6 0600  
                           ??_I2C_LCD_Puts 0066                             ??_I2C_LCD_init 0067  
                     __end_of_ringbuf_init 65D6                       ?_USBStdGetDscHandler 002D  
                             _isdigit$6428 0061                          __size_of_data_out 0178  
                __end_of_integrate_current 3F6A                       sleep_task@sleep_flag 012C  
                              ??_CTMU_init 0060                                ??_CTMU_read 006F  
               __end_of_USBWakeFromSuspend 697E                                sprintf@flag 00A7  
                    RTCC_adjust_time_dec@i 0098                          __size_of_bootload 0042  
                              sprintf@prec 009B                            _USBStallHandler 66C6  
                             _pBDTEntryOut 0100                      RTCC_adjust_time_inc@i 0098  
               __end_of_USBCheckCDCRequest 4B10                   __end_of_caltime_to_epoch 1E44  
                          millis_timer@cnt 0114                                  _data_item 001D  
                 __size_of_USBDeviceAttach 0038                      __size_ofi2_LED_output 0064  
                  USB_CDC_get@numBytesRead 006D                           ___lwdiv@dividend 007C  
          __end_of_RTCC_adjust_time_cursor 3D6C                       display_LCD@port_char FA81  
                                __pintcode 1008            __end_of_RTCC_adjust_time_toggle 678A  
                            __pmediumconst FA50                                   ?___awdiv 0060  
                                __ptext101 6BD2                                  __ptext110 4060  
                                __ptext102 6D3A                                  __ptext111 581A  
                                __ptext103 3538                                  __ptext120 6B0C  
                                __ptext112 4246                                  __ptext104 367C  
                                __ptext121 608C                                  __ptext113 450C  
                                __ptext105 694C                                  __ptext130 3A2A  
                                __ptext122 56BE                                  __ptext114 6A8C  
                                __ptext106 6A60                                  __ptext131 65D6  
                                __ptext123 678A                                  __ptext115 5604  
                                __ptext107 66C6                                  __ptext132 5D46  
                                __ptext124 59EC                                  __ptext116 33EA  
                                __ptext108 4F2A                                  __ptext133 6230  
                                __ptext125 64D0                                  __ptext117 1E44  
                                __ptext109 5C2C                                  __ptext126 3B50  
                                __ptext118 6474                                  __ptext127 50C4  
                                __ptext119 4A3A                                  __ptext128 5188  
                                __ptext129 46CE                                   ?___awmod 0060  
                    __size_of_millis_timer 0026                                   ?___lldiv 0060  
                                 ?___llmod 006D                                   ?___lwdiv 007C  
            __size_of_settings_adjust_time 00E0                                   ?___lwmod 0060  
                   settings_auto_stop@strp 008F                     __end_of_RTCC_from_RTCC 6CE4  
                          I2C_LCD_Puts@ans 0067                           ?i2_USBDeviceInit 002D  
                 settings_auto_stop@i_6115 0094                                ??_RTCC_init 0091  
                                 ?_display 0060                                ??_RTCC_task 0088  
                     _USBTransferOnePacket 488C                                I2C_Start@rw 0062  
                                 ?_isdigit 002D                           _epoch_to_caltime 2C4A  
                                 _I2C_Send 6CE4                                   OUT@value 0060  
                                 _I2C_Stop 6D30                       __CFG_RTCOSC$T1OSCREF 000000  
                                 _I2C_busy 011A                           _display_LCD$7035 01CE  
                         _display_LCD$7036 01D2                           _display_LCD$7037 01D6  
                         _display_LCD$7038 01DA                           _display_LCD$7039 01DE  
                                _ctmu_task 6CFC                                   _ADC_init 6BF8  
                    __end_of_I2C_IdleCheck 6C96                                _PADCFG1bits 000F3C  
             __end_of_USBCtrlTrfOutHandler 652C                        ringbuf_backspace@rb 0068  
                            ?_I2C_init_old 002D                      ??_USBStdGetDscHandler 002D  
                              _ep_data_out 0004                           ___lwdiv@quotient 0081  
                    terminal_at_hand@value 00D1                            ST7032_task@wait 010C  
                              ??i2___awdiv 0031                                   ?_sprintf 0083  
             __size_of_USBCtrlTrfRxService 0118                __size_of_settings_auto_stop 0242  
            USBConfigureEndpoint@direction 002D                                ??i2___lwdiv 0031  
                             i2_LED_output 6230                        __size_of_sleep_task 00D2  
                                data_out@i 00CB                                  data_out@p FBDC  
                                d_to_x@dec 0068                                   _CTMUCONH 000FB3  
                                 _CTMUCONL 000FB2                                   _CTMUICON 000FB1  
             __size_of_USBCtrlTrfTxService 00E0                   ringbuf_init@internal_buf 0062  
                           ___wmul@product 007A                 ??_USBCtrlEPServiceComplete 002E  
                    __end_of_ctmu_sampling 3E6E                      __end_of_LED_indicator 3B50  
                             _millis_timer 6BD2                                   _IPR1bits 000F9F  
                                 _IPR2bits 000FA2                                   _PIE1bits 000F9D  
                                 _PIE2bits 000FA0                                   _IPR5bits 000F99  
                                 _PIE5bits 000F91                        __size_of_print_time 008C  
                                 _PIR1bits 000F9E                                   i2u610_40 4754  
                                 i2u610_47 474A                                   _PIR2bits 000FA1  
                                 i2u612_40 4796                                   i2u612_47 478C  
                                 i2u640_40 34A8                                   i2u640_47 349E  
                                 _PIR5bits 000F98                                   i2u642_40 3504  
               epoch_to_caltime@year_cache 0126                                   i2u642_47 34FA  
                                 i2u639_40 3472                                   i2u639_47 3468  
                USBCtrlEPService@setup_cnt 0049                              ??_ringbuf_pop 006A  
                            ??_ringbuf_num 0062                              ??_ringbuf_put 006B  
                                 _RCONbits 000FD0                          _display_time_1602 13BE  
                            ??_putUSBUSART 0063                                   _UEP0bits 000F26  
       __end_of_settings_integrating_reset 2594                 _settings_integrating_reset 2336  
               _USBDeferINDataStagePackets 0010                      terminal_operation@op0 00DD  
                    terminal_operation@op1 00DF                      terminal_operation@op2 00E1  
                    terminal_operation@op3 00E3                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                              ??_timer0_init 0060  
                            ??_timer1_init 0061                __size_of_USBCheckStdRequest 00F2  
                              _display_LCD 051C                              ??_timer3_init 0060  
                            ??_normal_task 00CC                                   _SSP1STAT 000FC7  
                                 _UCONbits 000F65                       __end_of_USB_CDC_init 6D30  
                     __end_of_USB_CDC_send 6C38                       __end_of_USB_CDC_task 4060  
                       ?_display_time_1602 00B3                                _display_dec 60F8  
                     _USBConfigureEndpoint 59EC                            ?_RTCC_from_RTCC 0086  
         __size_of_USBStdFeatureReqHandler 0280                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                          ___wmul@multiplier 0076  
                    ?_USBTransferOnePacket 0060                           __CFG_SOSCSEL$LOW 000000  
                           software_init@i 0084             button_timer_interrupt@sw_value 0085  
                            ?_CDCTxService 002D                        ??_display_time_1602 00B9  
                             _RemoteWakeup 000F                         I2C_LCD_init@i_4452 0069  
                        i2___awdiv@divisor 002F                                   i2_memset 6A8C  
                           ??_I2C_init_old 0060                          i2___awdiv@counter 0031  
                        ??_ringbuf_put_num 0088                                 ?_ctmu_task 002D  
                        ??_ringbuf_put_str 0073                              ringbuf_pop@rb 0068  
                            ringbuf_num@rb 0060                    __end_of_USBStallHandler 670C  
                            I2C_Start@adrs 0063                              ringbuf_put@rb 0068  
                 ??_settings_led_indicator 0066                          ___lmul@multiplier 006D  
                         ??_ctmu_set_ratio 0083                                _INTCON2bits 000FF1  
                         _port_button_task 3124                                  copy_data0 593C  
               __size_of_integrate_current 00FC                ??_USBCtrlEPAllowStatusStage 002D  
              __end_of_USBStdSetCfgHandler 45EE                                   _Auto_cut 38F6  
                     epoch_to_caltime@year 0089              settings_task@item_change_flag 0099  
                            ??_USB_CDC_ISR 004B                     __size_of_terminal_task 036A  
                   __size_of_terminal_time 03AC                              ??_USB_CDC_get 006D  
                       __end_of_device_dsc FBD2                    ?_USBCtrlTrfSetupHandler 002D  
                __end_of_display_time_1602 166E                    USBStdGetStatusHandler@p 002E  
                                 __Hrparam 0000                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 0064                              i2LED_output@b 002E  
                     __end_of_I2C_LCD_Puts 5C2C                                   _SetupPkt 000D30  
                            _weekday_3char FBA4                     __size_of_hardware_init 0056  
                     __end_of_I2C_LCD_init 5B10                      __size_of_month_length 00DE  
                       ringbuf_put_str@str 0071                      ?_USBConfigureEndpoint 002D  
                 __size_of_caltime_to_RTCC 00D6                          ??_USBDeviceAttach 0060  
                         __size_of___awdiv 00BE                           __size_of___awmod 00A2  
                        I2C_IdleCheck@mask 0061                           __size_of___lldiv 00BC  
                         __size_of___llmod 009A                           __size_of___lwdiv 0078  
                         __size_of___lwmod 0062                     __size_of_settings_task 0220  
                      __end_of_ringbuf_pop 50C4                        __end_of_ringbuf_num 4426  
                      __end_of_ringbuf_put 4CB8                        __end_of_putUSBUSART 6C58  
                              _line_coding 0189                             _integrate_flag 0121  
                           ??_CDCTxService 0067                             _integrate_time 6294  
                      __end_of_timer0_init 6800                      __size_of_ringbuf_init 0054  
                      __end_of_timer1_init 6678                           __size_of_display 0136  
                               sprintf@len 00A1                        __end_of_timer3_init 6A60  
                               sprintf@val 00A3                        __end_of_normal_task 4F2A  
                      display_LCD@str_5594 01BA                          i2LED_output@value 002D  
                               strcat@from 0062                                   _data_out 2E3C  
                         __size_of_isdigit 002A                    __size_of_USBDeviceTasks 0144  
                          ___lwdiv@divisor 007E                            ___lwdiv@counter 0080  
                     timer0_init@prescaler 0061                                   __ptext10 5DCA  
                                 __ptext11 6BAC                                   __ptext20 27E8  
                                 __ptext12 5B10                                   __ptext21 45EE  
                                 __ptext13 530E                   __end_ofdisplay_LCD@onoff FBDC  
                                 __ptext30 3E6E                                   __ptext22 674E  
                                 __ptext14 4426                                   __ptext31 051C  
                                 __ptext23 166E                                   __ptext15 4CB8  
                                 __ptext40 6AB8                                   __ptext32 13BE  
                                 __ptext24 1912                                   __ptext16 4E5C  
                                 __ptext41 5952                                   __ptext33 683A  
                                 __ptext25 3C68                                   __ptext17 2A2A  
                                 __ptext50 6A34                                   __ptext42 61CC  
                                 __ptext34 60F8                                   __ptext26 3124  
                                 __ptext18 2594                                   __ptext51 6628  
                                 __ptext43 62F6                                   __ptext35 63B8  
                                 __ptext27 37C0                                   __ptext19 2336  
                                 __ptext60 6C96                                   __ptext52 67C6  
                                 __ptext44 38F6                                   __ptext36 69DC  
                                 __ptext28 5F3A                                   __ptext61 2C4A  
                                 __ptext53 6D22                                   __ptext45 68E2  
                                 __ptext37 5B9E                                   __ptext29 6294  
                                 __ptext70 6D30                                   __ptext62 4B10  
                                 __ptext54 6678                                   __ptext46 5FAC  
                                 __ptext38 2E3C                                   __ptext71 697E  
                                 __ptext63 4964                                   __ptext55 6582  
                                 __ptext47 6A08                                   __ptext39 0000  
                                 __ptext80 524C                                   __ptext72 6CE4  
                                 __ptext64 6B36                                   __ptext56 3288  
                                 __ptext48 69AE                                   __ptext81 548C  
                                 __ptext73 6C78                                   __ptext65 53CE  
                                 __ptext57 6918                                   __ptext49 652C  
                                 __ptext90 2FB4                                   __ptext82 3F6A  
                                 __ptext74 6B5E                                   __ptext66 5A80  
                                 __ptext58 6872                                   __ptext91 488C  
                                 __ptext83 4BE4                                   __ptext75 6BF8  
                                 __ptext67 6D10                                   __ptext59 6162  
                                 __ptext92 6800                                   __ptext84 4FF8  
                                 __ptext76 6CFC                                   __ptext68 6CB0  
                                 __ptext93 6CCA                                   __ptext85 4338  
                                 __ptext77 3D6C                                   __ptext69 68AA  
                                 __ptext94 1BB6                                   __ptext86 6C18  
                                 __ptext78 10F6                                   __ptext95 47AE  
                                 __ptext87 6C38                                   __ptext79 5E4C  
                                 __ptext96 5778                                   __ptext88 6AE2  
                                 __ptext97 5EC4                                   __ptext89 4D8A  
                                 __ptext98 5548                                   __ptext99 6C58  
                             _SSP1CON1bits 000FC6                               _SSP1CON2bits 000FC5  
         __size_of_RTCC_adjust_time_cursor 0104                  __size_of_terminal_at_hand 0060  
         __size_of_RTCC_adjust_time_toggle 003C                                   _bootload 670C  
                         __size_of_sprintf 051C                                 strcpy@from 0062  
                     terminal_at_hand@hand 00CD                              __size_of_atoi 00F2  
           __end_of_USBCtrlTrfSetupHandler 5CBA                              __size_of_main 006E  
                        ?_USBCtrlEPService 002D                                data_out@str 00AD  
                             _month_length 47AE                         ??_USBCtrlEPService 0047  
                 __size_of_RTCC_from_epoch 001A                        _USBCtrlTrfInHandler 5188  
                      __end_of_USB_CDC_ISR 6D40                               ??_sleep_task 006A  
                      __end_of_USB_CDC_get 6B0C                                   _outPipes 00E6  
                         ??_ringbuf_delete 0062                    ?_button_timer_interrupt 0083  
                     _USBCtrlTrfOutHandler 64D0                                   int$flags 0059  
                             _ringbuf_init 6582                                   atoi@sign 0080  
                _USBCtrlEPAllowStatusStage 50C4           settings_integrating_reset@i_6149 0097  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                                 display@i 0065                     ??_USBTransferOnePacket 0064  
                            _terminal_task 0D8C                              _terminal_time 09E0  
                   __end_of_integrate_time 62F6                   __size_of_I2C_LCD_Command 0038  
                _USBDeferStatusStagePacket 0012                               ??_print_time 00AD  
                 CDCTxService@byte_to_send 006B               __size_of_USB_CDC_buffer_init 004E  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002D                                ??_ctmu_task 0088  
            USBCtrlTrfTxService@byteToSend 002D               I2C_LCD_SetCursor@row_offsets 0067  
                          display_dec@edit 00AE                              _hardware_init 652C  
                                 isdigit@c 0062                                   memset@p1 0060  
                         ?_USBStallHandler 002D                   USBStdFeatureReqHandler@p 0045  
                         get_quot_rem@quot 0079                  terminal_task@command_init 012D  
                               _LED_output 5F3A                          RTCC_to_caltime@tm 0062  
          __size_of_settings_led_indicator 0254                         USB_CDC_send@length 006C  
            __size_of_RTCC_adjust_time_dec 02A4              __size_of_RTCC_adjust_time_inc 02A4  
                                 intlevel2 0000                                  sprintf@ap 009F  
                                sprintf@cp 009D                                  sprintf@sp 0083  
                       __end_of_sleep_task 4D8A                     __size_of_USBDeviceInit 0162  
                            _settings_flag 0122                              _settings_item 0020  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 64D0   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003F           ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
          _USER_USB_CALLBACK_EVENT_HANDLER 6474                              _settings_task 2A2A  
                         ___lwmod@dividend 0060               i2USBTransferOnePacket@handle 0032  
                         ___lldiv@dividend 0060                                 _RCSTA1bits 000FAC  
                      terminal_at_hand@max 00D0                        terminal_at_hand@min 00CF  
                        ?_caltime_to_epoch 0079                          _ringbuf_backspace 5B10  
               __size_of_display_time_1602 02B0                   __end_of_epoch_to_caltime 2E3C  
                 __size_of_RTCC_to_caltime 00BC                      __size_of_USB_CDC_init 000E  
                    __size_of_USB_CDC_send 0020                      __size_of_USB_CDC_task 00F6  
                       USB_CDC_task@length 0072                                 _OSCCONbits 000FD3  
           __end_of_button_timer_interrupt 13BE                 __end_of_terminal_operation 2336  
                       __end_of_print_time 5D46                 i2USBTransferOnePacket@data 002E  
                       ??_caltime_to_epoch 007B                         ?_ringbuf_backspace 0068  
                     __end_of_I2C_init_old 6D22                     ??_USBConfigureEndpoint 002E  
                    ?_USBCtrlTrfOutHandler 002D                                _ringbuf_pop 4FF8  
                              _ringbuf_num 4338                                _ringbuf_put 4BE4  
                              _putUSBUSART 6C38                        _USBCtrlTrfRxService 3B50  
                              _timer0_init 67C6                         _USBWakeFromSuspend 694C  
                              _timer1_init 6628                                _timer3_init 6A34  
                              _normal_task 4E5C                             ?_terminal_task 0192  
                           ?_terminal_time 00D2                    _USBStdFeatureReqHandler 1E44  
                       _USBCheckCDCRequest 4A3A                        _USBCtrlTrfTxService 46CE  
                          ?_integrate_time 002D                        ??_ringbuf_backspace 006A  
                          get_quot_rem@div 007B                            get_quot_rem@num 007D  
                               _RTCCFGbits 000F3F                     __size_of_software_init 00C0  
                                 sprintf@c 00A8                                   sprintf@f 0085  
                                 strcat@cp 0064                                   strcat@to 0060  
                      ?_USBWakeFromSuspend 002D                                   strcmp@s1 0060  
                                 strcmp@s2 0062                  settings_led_indicator@str 0067  
                         ___lldiv@quotient 0068                            ___lwmod@divisor 0062  
                        caltime_to_RTCC@tm 0069                          ??_caltime_to_RTCC 006B  
                    ??_USBCtrlTrfInHandler 002E                                   strcpy@cp 0064  
                                 strcpy@to 0060                      _USBAlternateInterface 0190  
                          ___lwmod@counter 0064                         terminal_at_hand@tx 00CB  
                      ?_USBCheckCDCRequest 002D                             ?_hardware_init 002D  
                i2USBTransferOnePacket@dir 002D                  i2USBTransferOnePacket@len 0030  
                      USBEnableEndpoint@ep 0038                            _endpoint_number 001E  
                   __size_of_I2C_LCD_Clear 001A               __end_of_settings_adjust_time 46CE  
                     ?_USBCtrlTrfRxService 002D            epoch_to_caltime@day_since_epoch 0085  
                            ?_getsUSBUSART 0067                               _USB_CDC_init 6D22  
                             _USB_CDC_send 6C18                               _USB_CDC_task 3F6A  
                       integrate_current@i 006F                   ?_USBCtrlEPAllowDataStage 002D  
                           ?_settings_task 002D                       ?_USBCtrlTrfTxService 002D  
                              _USB_CDC_ISR 6D3A                  __end_of_ringbuf_backspace 5B9E  
             _USBStatusStageTimeoutCounter 0016                      __size_of_I2C_LCD_Puts 008E  
                              _USB_CDC_get 6AE2                      __size_of_I2C_LCD_init 0090  
                     ??_USBWakeFromSuspend 0041                 USBTransferOnePacket@handle 0065  
                     __end_of_CDCTxService 3124                       ??_USBCheckCDCRequest 002D  
                               _USB_CD_Ptr FA7F                           ??_RTCC_from_RTCC 0088  
