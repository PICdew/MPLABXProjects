

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 19:14:44 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   154                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   155                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   156                           	dabs	1,0xD00,48,_BDT
   157                           	dabs	1,0xD38,8,_CtrlTrfData
   158                           	dabs	1,0xD30,8,_SetupPkt
   159  0000                     
   160                           	psect	idataBANK1
   161  016CC2                     __pidataBANK1:
   162                           	opt stack 0
   163                           
   164                           ;initializer for I2C_LCD_SetCursor@F8685
   165  016CC2  00                 	db	0
   166  016CC3  40                 	db	64
   167                           
   168                           ;initializer for ST7032_cursor@F8665
   169  016CC4  00                 	db	0
   170  016CC5  40                 	db	64
   171                           
   172                           ;initializer for epoch_to_caltime@month_cache
   173  016CC6  01                 	db	1
   174                           
   175                           	psect	mediumconst
   176  00FA50                     __pmediumconst:
   177                           	opt stack 0
   178  00FA50  00                 	db	0
   179  00FA51                     _dpowers:
   180                           	opt stack 0
   181  00FA51  0001               	dw	1
   182  00FA53  0000               	dw	0
   183  00FA55  000A               	dw	10
   184  00FA57  0000               	dw	0
   185  00FA59  0064               	dw	100
   186  00FA5B  0000               	dw	0
   187  00FA5D  03E8               	dw	1000
   188  00FA5F  0000               	dw	0
   189  00FA61  2710               	dw	10000
   190  00FA63  0000               	dw	0
   191  00FA65  86A0               	dw	34464
   192  00FA67  0001               	dw	1
   193  00FA69  4240               	dw	16960
   194  00FA6B  000F               	dw	15
   195  00FA6D  9680               	dw	38528
   196  00FA6F  0098               	dw	152
   197  00FA71  E100               	dw	57600
   198  00FA73  05F5               	dw	1525
   199  00FA75  CA00               	dw	51712
   200  00FA77  3B9A               	dw	15258
   201  00FA79                     __end_of_dpowers:
   202                           	opt stack 0
   203  00FA79                     _USB_SD_Ptr:
   204                           	opt stack 0
   205  00FA79  E2                 	db	low _sd000
   206  00FA7A  FB                 	db	high _sd000
   207  00FA7B  3C                 	db	low _sd001
   208  00FA7C  FB                 	db	high _sd001
   209  00FA7D  70                 	db	low _sd002
   210  00FA7E  FB                 	db	high _sd002
   211  00FA7F                     __end_of_USB_SD_Ptr:
   212                           	opt stack 0
   213  00FA7F                     _USB_CD_Ptr:
   214                           	opt stack 0
   215  00FA7F  F9                 	db	low _configDescriptor1
   216  00FA80  FA                 	db	high _configDescriptor1
   217  00FA81                     __end_of_USB_CD_Ptr:
   218                           	opt stack 0
   219  00FA81                     display_LCD@port_char:
   220                           	opt stack 0
   221  00FA81  4C                 	db	76
   222  00FA82  45                 	db	69
   223  00FA83  46                 	db	70
   224  00FA84  54                 	db	84
   225  00FA85  20                 	db	32
   226  00FA86  20                 	db	32
   227  00FA87  20                 	db	32
   228  00FA88  50                 	db	80
   229  00FA89  4F                 	db	79
   230  00FA8A  52                 	db	82
   231  00FA8B  54                 	db	84
   232  00FA8C  00                 	db	0
   233  00FA8D  00                 	db	0
   234  00FA8E  00                 	db	0
   235  00FA8F  00                 	db	0
   236  00FA90  00                 	db	0
   237  00FA91  00                 	db	0
   238  00FA92  00                 	db	0
   239  00FA93  00                 	db	0
   240  00FA94  00                 	db	0
   241  00FA95  43                 	db	67
   242  00FA96  45                 	db	69
   243  00FA97  4E                 	db	78
   244  00FA98  54                 	db	84
   245  00FA99  45                 	db	69
   246  00FA9A  52                 	db	82
   247  00FA9B  20                 	db	32
   248  00FA9C  50                 	db	80
   249  00FA9D  4F                 	db	79
   250  00FA9E  52                 	db	82
   251  00FA9F  54                 	db	84
   252  00FAA0  00                 	db	0
   253  00FAA1  00                 	db	0
   254  00FAA2  00                 	db	0
   255  00FAA3  00                 	db	0
   256  00FAA4  00                 	db	0
   257  00FAA5  00                 	db	0
   258  00FAA6  00                 	db	0
   259  00FAA7  00                 	db	0
   260  00FAA8  00                 	db	0
   261  00FAA9  52                 	db	82
   262  00FAAA  49                 	db	73
   263  00FAAB  47                 	db	71
   264  00FAAC  48                 	db	72
   265  00FAAD  54                 	db	84
   266  00FAAE  20                 	db	32
   267  00FAAF  20                 	db	32
   268  00FAB0  50                 	db	80
   269  00FAB1  4F                 	db	79
   270  00FAB2  52                 	db	82
   271  00FAB3  54                 	db	84
   272  00FAB4  00                 	db	0
   273  00FAB5  00                 	db	0
   274  00FAB6  00                 	db	0
   275  00FAB7  00                 	db	0
   276  00FAB8  00                 	db	0
   277  00FAB9  00                 	db	0
   278  00FABA  00                 	db	0
   279  00FABB  00                 	db	0
   280  00FABC  00                 	db	0
   281  00FABD  4C                 	db	76
   282  00FABE  65                 	db	101
   283  00FABF  66                 	db	102
   284  00FAC0  74                 	db	116
   285  00FAC1  20                 	db	32
   286  00FAC2  20                 	db	32
   287  00FAC3  20                 	db	32
   288  00FAC4  50                 	db	80
   289  00FAC5  6F                 	db	111
   290  00FAC6  72                 	db	114
   291  00FAC7  74                 	db	116
   292  00FAC8  00                 	db	0
   293  00FAC9  00                 	db	0
   294  00FACA  00                 	db	0
   295  00FACB  00                 	db	0
   296  00FACC  00                 	db	0
   297  00FACD  00                 	db	0
   298  00FACE  00                 	db	0
   299  00FACF  00                 	db	0
   300  00FAD0  00                 	db	0
   301  00FAD1  43                 	db	67
   302  00FAD2  65                 	db	101
   303  00FAD3  6E                 	db	110
   304  00FAD4  74                 	db	116
   305  00FAD5  65                 	db	101
   306  00FAD6  72                 	db	114
   307  00FAD7  20                 	db	32
   308  00FAD8  50                 	db	80
   309  00FAD9  6F                 	db	111
   310  00FADA  72                 	db	114
   311  00FADB  74                 	db	116
   312  00FADC  00                 	db	0
   313  00FADD  00                 	db	0
   314  00FADE  00                 	db	0
   315  00FADF  00                 	db	0
   316  00FAE0  00                 	db	0
   317  00FAE1  00                 	db	0
   318  00FAE2  00                 	db	0
   319  00FAE3  00                 	db	0
   320  00FAE4  00                 	db	0
   321  00FAE5  52                 	db	82
   322  00FAE6  69                 	db	105
   323  00FAE7  67                 	db	103
   324  00FAE8  68                 	db	104
   325  00FAE9  74                 	db	116
   326  00FAEA  20                 	db	32
   327  00FAEB  20                 	db	32
   328  00FAEC  50                 	db	80
   329  00FAED  6F                 	db	111
   330  00FAEE  72                 	db	114
   331  00FAEF  74                 	db	116
   332  00FAF0  00                 	db	0
   333  00FAF1  00                 	db	0
   334  00FAF2  00                 	db	0
   335  00FAF3  00                 	db	0
   336  00FAF4  00                 	db	0
   337  00FAF5  00                 	db	0
   338  00FAF6  00                 	db	0
   339  00FAF7  00                 	db	0
   340  00FAF8  00                 	db	0
   341  00FAF9                     __end_ofdisplay_LCD@port_char:
   342                           	opt stack 0
   343  00FAF9                     _configDescriptor1:
   344                           	opt stack 0
   345  00FAF9  09                 	db	9
   346  00FAFA  02                 	db	2
   347  00FAFB  43                 	db	67
   348  00FAFC  00                 	db	0
   349  00FAFD  02                 	db	2
   350  00FAFE  01                 	db	1
   351  00FAFF  00                 	db	0
   352  00FB00  C0                 	db	192
   353  00FB01  32                 	db	50
   354  00FB02  09                 	db	9
   355  00FB03  04                 	db	4
   356  00FB04  00                 	db	0
   357  00FB05  00                 	db	0
   358  00FB06  01                 	db	1
   359  00FB07  02                 	db	2
   360  00FB08  02                 	db	2
   361  00FB09  01                 	db	1
   362  00FB0A  00                 	db	0
   363  00FB0B  05                 	db	5
   364  00FB0C  24                 	db	36
   365  00FB0D  00                 	db	0
   366  00FB0E  10                 	db	16
   367  00FB0F  01                 	db	1
   368  00FB10  04                 	db	4
   369  00FB11  24                 	db	36
   370  00FB12  02                 	db	2
   371  00FB13  02                 	db	2
   372  00FB14  05                 	db	5
   373  00FB15  24                 	db	36
   374  00FB16  06                 	db	6
   375  00FB17  00                 	db	0
   376  00FB18  01                 	db	1
   377  00FB19  05                 	db	5
   378  00FB1A  24                 	db	36
   379  00FB1B  01                 	db	1
   380  00FB1C  00                 	db	0
   381  00FB1D  01                 	db	1
   382  00FB1E  07                 	db	7
   383  00FB1F  05                 	db	5
   384  00FB20  81                 	db	129
   385  00FB21  03                 	db	3
   386  00FB22  08                 	db	8
   387  00FB23  00                 	db	0
   388  00FB24  02                 	db	2
   389  00FB25  09                 	db	9
   390  00FB26  04                 	db	4
   391  00FB27  01                 	db	1
   392  00FB28  00                 	db	0
   393  00FB29  02                 	db	2
   394  00FB2A  0A                 	db	10
   395  00FB2B  00                 	db	0
   396  00FB2C  00                 	db	0
   397  00FB2D  00                 	db	0
   398  00FB2E  07                 	db	7
   399  00FB2F  05                 	db	5
   400  00FB30  02                 	db	2
   401  00FB31  02                 	db	2
   402  00FB32  40                 	db	64
   403  00FB33  00                 	db	0
   404  00FB34  00                 	db	0
   405  00FB35  07                 	db	7
   406  00FB36  05                 	db	5
   407  00FB37  82                 	db	130
   408  00FB38  02                 	db	2
   409  00FB39  40                 	db	64
   410  00FB3A  00                 	db	0
   411  00FB3B  00                 	db	0
   412  00FB3C                     __end_of_configDescriptor1:
   413                           	opt stack 0
   414  00FB3C                     _sd001:
   415                           	opt stack 0
   416  00FB3C  34                 	db	52
   417  00FB3D  03                 	db	3
   418  00FB3E  004D               	dw	77
   419  00FB40  0069               	dw	105
   420  00FB42  0063               	dw	99
   421  00FB44  0072               	dw	114
   422  00FB46  006F               	dw	111
   423  00FB48  0063               	dw	99
   424  00FB4A  0068               	dw	104
   425  00FB4C  0069               	dw	105
   426  00FB4E  0070               	dw	112
   427  00FB50  0020               	dw	32
   428  00FB52  0054               	dw	84
   429  00FB54  0065               	dw	101
   430  00FB56  0063               	dw	99
   431  00FB58  0068               	dw	104
   432  00FB5A  006E               	dw	110
   433  00FB5C  006F               	dw	111
   434  00FB5E  006C               	dw	108
   435  00FB60  006F               	dw	111
   436  00FB62  0067               	dw	103
   437  00FB64  0079               	dw	121
   438  00FB66  0020               	dw	32
   439  00FB68  0049               	dw	73
   440  00FB6A  006E               	dw	110
   441  00FB6C  0063               	dw	99
   442  00FB6E  002E               	dw	46
   443  00FB70                     __end_of_sd001:
   444                           	opt stack 0
   445  00FB70                     _sd002:
   446                           	opt stack 0
   447  00FB70  34                 	db	52
   448  00FB71  03                 	db	3
   449  00FB72  0043               	dw	67
   450  00FB74  0044               	dw	68
   451  00FB76  0043               	dw	67
   452  00FB78  0020               	dw	32
   453  00FB7A  0052               	dw	82
   454  00FB7C  0053               	dw	83
   455  00FB7E  002D               	dw	45
   456  00FB80  0032               	dw	50
   457  00FB82  0033               	dw	51
   458  00FB84  0032               	dw	50
   459  00FB86  0020               	dw	32
   460  00FB88  0045               	dw	69
   461  00FB8A  006D               	dw	109
   462  00FB8C  0075               	dw	117
   463  00FB8E  006C               	dw	108
   464  00FB90  0061               	dw	97
   465  00FB92  0074               	dw	116
   466  00FB94  0069               	dw	105
   467  00FB96  006F               	dw	111
   468  00FB98  006E               	dw	110
   469  00FB9A  0020               	dw	32
   470  00FB9C  0044               	dw	68
   471  00FB9E  0065               	dw	101
   472  00FBA0  006D               	dw	109
   473  00FBA2  006F               	dw	111
   474  00FBA4                     __end_of_sd002:
   475                           	opt stack 0
   476  00FBA4                     _weekday_3char:
   477                           	opt stack 0
   478  00FBA4  53                 	db	83
   479  00FBA5  55                 	db	85
   480  00FBA6  4E                 	db	78
   481  00FBA7  00                 	db	0
   482  00FBA8  4D                 	db	77
   483  00FBA9  4F                 	db	79
   484  00FBAA  4E                 	db	78
   485  00FBAB  00                 	db	0
   486  00FBAC  54                 	db	84
   487  00FBAD  55                 	db	85
   488  00FBAE  45                 	db	69
   489  00FBAF  00                 	db	0
   490  00FBB0  57                 	db	87
   491  00FBB1  45                 	db	69
   492  00FBB2  44                 	db	68
   493  00FBB3  00                 	db	0
   494  00FBB4  54                 	db	84
   495  00FBB5  48                 	db	72
   496  00FBB6  55                 	db	85
   497  00FBB7  00                 	db	0
   498  00FBB8  46                 	db	70
   499  00FBB9  52                 	db	82
   500  00FBBA  49                 	db	73
   501  00FBBB  00                 	db	0
   502  00FBBC  53                 	db	83
   503  00FBBD  41                 	db	65
   504  00FBBE  54                 	db	84
   505  00FBBF  00                 	db	0
   506  00FBC0                     __end_of_weekday_3char:
   507                           	opt stack 0
   508  00FBC0                     _device_dsc:
   509                           	opt stack 0
   510  00FBC0  12                 	db	18
   511  00FBC1  01                 	db	1
   512  00FBC2  0200               	dw	512
   513  00FBC4  02                 	db	2
   514  00FBC5  00                 	db	0
   515  00FBC6  00                 	db	0
   516  00FBC7  08                 	db	8
   517  00FBC8  04D8               	dw	1240
   518  00FBCA  000A               	dw	10
   519  00FBCC  0100               	dw	256
   520  00FBCE  01                 	db	1
   521  00FBCF  02                 	db	2
   522  00FBD0  00                 	db	0
   523  00FBD1  01                 	db	1
   524  00FBD2                     __end_of_device_dsc:
   525                           	opt stack 0
   526  00FBD2                     display_LCD@onoff:
   527                           	opt stack 0
   528  00FBD2  20                 	db	32
   529  00FBD3  4F                 	db	79
   530  00FBD4  46                 	db	70
   531  00FBD5  46                 	db	70
   532  00FBD6  00                 	db	0
   533  00FBD7  20                 	db	32
   534  00FBD8  4F                 	db	79
   535  00FBD9  4E                 	db	78
   536  00FBDA  20                 	db	32
   537  00FBDB  00                 	db	0
   538  00FBDC                     __end_ofdisplay_LCD@onoff:
   539                           	opt stack 0
   540  00FBDC                     data_out@p:
   541                           	opt stack 0
   542  00FBDC  4C                 	db	76
   543  00FBDD  00                 	db	0
   544  00FBDE  43                 	db	67
   545  00FBDF  00                 	db	0
   546  00FBE0  52                 	db	82
   547  00FBE1  00                 	db	0
   548  00FBE2                     __end_ofdata_out@p:
   549                           	opt stack 0
   550  00FBE2                     _sd000:
   551                           	opt stack 0
   552  00FBE2  04                 	db	4
   553  00FBE3  03                 	db	3
   554  00FBE4  0409               	dw	1033
   555  00FBE6                     __end_of_sd000:
   556                           	opt stack 0
   557  0000                     _ANCON0	set	3912
   558  0000                     _ANCON1	set	3913
   559  0000                     _PADCFG1bits	set	3900
   560  0000                     _RTCCAL	set	3902
   561  0000                     _RTCCFGbits	set	3903
   562  0000                     _RTCVALH	set	3899
   563  0000                     _RTCVALL	set	3898
   564  0000                     _T5CONbits	set	3874
   565  0000                     _UADDR	set	3896
   566  0000                     _UCFG	set	3897
   567  0000                     _UEIE	set	3895
   568  0000                     _UEP0bits	set	3878
   569  0000                     _UIE	set	3894
   570  0000                     _UIEbits	set	3894
   571  0000                     _UEP0	set	3878
   572  0000                     _UEP1	set	3879
   573  0000                     _ADRES	set	4035
   574  0000                     _ADCON0bits	set	4034
   575  0000                     _ADCON1bits	set	4033
   576  0000                     _BAUDCON1bits	set	3966
   577  0000                     _CTMUCONH	set	4019
   578  0000                     _CTMUCONHbits	set	4019
   579  0000                     _CTMUCONL	set	4018
   580  0000                     _CTMUCONLbits	set	4018
   581  0000                     _CTMUICON	set	4017
   582  0000                     _EECON2	set	4007
   583  0000                     _INTCON2bits	set	4081
   584  0000                     _INTCONbits	set	4082
   585  0000                     _IPR1bits	set	3999
   586  0000                     _IPR2bits	set	4002
   587  0000                     _IPR5bits	set	3993
   588  0000                     _OSCCONbits	set	4051
   589  0000                     _OSCTUNEbits	set	3995
   590  0000                     _PIE1bits	set	3997
   591  0000                     _PIE2bits	set	4000
   592  0000                     _PIE5bits	set	3985
   593  0000                     _PIR1bits	set	3998
   594  0000                     _PIR2bits	set	4001
   595  0000                     _PIR5bits	set	3992
   596  0000                     _RCONbits	set	4048
   597  0000                     _RCREG1	set	4015
   598  0000                     _RCSTA1bits	set	4012
   599  0000                     _SPBRG1	set	4016
   600  0000                     _SPBRGH1	set	3967
   601  0000                     _SSP1ADD	set	4040
   602  0000                     _SSP1BUF	set	4041
   603  0000                     _SSP1CON1	set	4038
   604  0000                     _SSP1CON1bits	set	4038
   605  0000                     _SSP1CON2	set	4037
   606  0000                     _SSP1CON2bits	set	4037
   607  0000                     _SSP1STAT	set	4039
   608  0000                     _SSP1STATbits	set	4039
   609  0000                     _SSPBUF	set	4041
   610  0000                     _T0CONbits	set	4053
   611  0000                     _T1CONbits	set	4045
   612  0000                     _T3CONbits	set	3961
   613  0000                     _TMR1H	set	4047
   614  0000                     _TRISA	set	3986
   615  0000                     _TRISB	set	3987
   616  0000                     _TRISC	set	3988
   617  0000                     _TXREG1	set	4014
   618  0000                     _TXSTA1bits	set	4013
   619  0000                     _UCON	set	3941
   620  0000                     _UCONbits	set	3941
   621  0000                     _UEIR	set	3939
   622  0000                     _UIR	set	3938
   623  0000                     _UIRbits	set	3938
   624  0000                     _USTAT	set	3940
   625  0000                     _BCL1IF	set	32011
   626  0000                     _LATA5	set	31821
   627  0000                     _LATA6	set	31822
   628  0000                     _LATA7	set	31823
   629  0000                     _LATB2	set	31826
   630  0000                     _LATB6	set	31830
   631  0000                     _LATB7	set	31831
   632  0000                     _LATC2	set	31834
   633  0000                     _SSP1IF	set	31987
   634  00FBE6                     STR_53:
   635  00FBE6  09                 	db	9
   636  00FBE7  2A                 	db	42
   637  00FBE8  2A                 	db	42
   638  00FBE9  2A                 	db	42
   639  00FBEA  2A                 	db	42
   640  00FBEB  2A                 	db	42
   641  00FBEC  2A                 	db	42
   642  00FBED  2A                 	db	42
   643  00FBEE  2A                 	db	42
   644  00FBEF  2A                 	db	42
   645  00FBF0  2A                 	db	42
   646  00FBF1  2A                 	db	42
   647  00FBF2  2A                 	db	42
   648  00FBF3  2A                 	db	42
   649  00FBF4  2A                 	db	42
   650  00FBF5  2A                 	db	42
   651  00FBF6  2A                 	db	42
   652  00FBF7  2A                 	db	42
   653  00FBF8  2A                 	db	42
   654  00FBF9  2A                 	db	42
   655  00FBFA  2A                 	db	42
   656  00FBFB  2A                 	db	42
   657  00FBFC  2A                 	db	42
   658  00FBFD  2A                 	db	42
   659  00FBFE  2A                 	db	42
   660  00FBFF  2A                 	db	42
   661  00FC00  2A                 	db	42
   662  00FC01  2A                 	db	42
   663  00FC02  2A                 	db	42
   664  00FC03  2A                 	db	42
   665  00FC04  0A                 	db	10
   666  00FC05  09                 	db	9
   667  00FC06  2A                 	db	42
   668  00FC07  2A                 	db	42
   669  00FC08  2A                 	db	42
   670  00FC09  2A                 	db	42
   671  00FC0A  20                 	db	32
   672  00FC0B  43                 	db	67	;'C'
   673  00FC0C  68                 	db	104	;'h'
   674  00FC0D  61                 	db	97	;'a'
   675  00FC0E  72                 	db	114	;'r'
   676  00FC0F  67                 	db	103	;'g'
   677  00FC10  65                 	db	101	;'e'
   678  00FC11  20                 	db	32
   679  00FC12  53                 	db	83	;'S'
   680  00FC13  74                 	db	116	;'t'
   681  00FC14  61                 	db	97	;'a'
   682  00FC15  74                 	db	116	;'t'
   683  00FC16  69                 	db	105	;'i'
   684  00FC17  6F                 	db	111	;'o'
   685  00FC18  6E                 	db	110	;'n'
   686  00FC19  20                 	db	32
   687  00FC1A  36                 	db	54	;'6'
   688  00FC1B  2E                 	db	46
   689  00FC1C  31                 	db	49	;'1'
   690  00FC1D  32                 	db	50	;'2'
   691  00FC1E  20                 	db	32
   692  00FC1F  2A                 	db	42
   693  00FC20  2A                 	db	42
   694  00FC21  2A                 	db	42
   695  00FC22  2A                 	db	42
   696  00FC23  0A                 	db	10
   697  00FC24  09                 	db	9
   698  00FC25  2A                 	db	42
   699  00FC26  2A                 	db	42
   700  00FC27  2A                 	db	42
   701  00FC28  2A                 	db	42
   702  00FC29  20                 	db	32
   703  00FC2A  4D                 	db	77	;'M'
   704  00FC2B  61                 	db	97	;'a'
   705  00FC2C  64                 	db	100	;'d'
   706  00FC2D  65                 	db	101	;'e'
   707  00FC2E  20                 	db	32
   708  00FC2F  62                 	db	98	;'b'
   709  00FC30  79                 	db	121	;'y'
   710  00FC31  20                 	db	32
   711  00FC32  40                 	db	64	;'@'
   712  00FC33  52                 	db	82	;'R'
   713  00FC34  79                 	db	121	;'y'
   714  00FC35  6F                 	db	111	;'o'
   715  00FC36  6B                 	db	107	;'k'
   716  00FC37  65                 	db	101	;'e'
   717  00FC38  72                 	db	114	;'r'
   718  00FC39  69                 	db	105	;'i'
   719  00FC3A  31                 	db	49	;'1'
   720  00FC3B  34                 	db	52	;'4'
   721  00FC3C  20                 	db	32
   722  00FC3D  20                 	db	32
   723  00FC3E  2A                 	db	42
   724  00FC3F  2A                 	db	42
   725  00FC40  2A                 	db	42
   726  00FC41  2A                 	db	42
   727  00FC42  0A                 	db	10
   728  00FC43  09                 	db	9
   729  00FC44  2A                 	db	42
   730  00FC45  2A                 	db	42
   731  00FC46  2A                 	db	42
   732  00FC47  2A                 	db	42
   733  00FC48  2A                 	db	42
   734  00FC49  2A                 	db	42
   735  00FC4A  2A                 	db	42
   736  00FC4B  2A                 	db	42
   737  00FC4C  2A                 	db	42
   738  00FC4D  2A                 	db	42
   739  00FC4E  2A                 	db	42
   740  00FC4F  2A                 	db	42
   741  00FC50  2A                 	db	42
   742  00FC51  2A                 	db	42
   743  00FC52  2A                 	db	42
   744  00FC53  2A                 	db	42
   745  00FC54  2A                 	db	42
   746  00FC55  2A                 	db	42
   747  00FC56  2A                 	db	42
   748  00FC57  2A                 	db	42
   749  00FC58  2A                 	db	42
   750  00FC59  2A                 	db	42
   751  00FC5A  2A                 	db	42
   752  00FC5B  2A                 	db	42
   753  00FC5C  2A                 	db	42
   754  00FC5D  2A                 	db	42
   755  00FC5E  2A                 	db	42
   756  00FC5F  2A                 	db	42
   757  00FC60  2A                 	db	42
   758  00FC61  0A                 	db	10
   759  00FC62  0A                 	db	10
   760  00FC63  09                 	db	9
   761  00FC64  70                 	db	112	;'p'
   762  00FC65  72                 	db	114	;'r'
   763  00FC66  69                 	db	105	;'i'
   764  00FC67  6E                 	db	110	;'n'
   765  00FC68  74                 	db	116	;'t'
   766  00FC69  5F                 	db	95	;'_'
   767  00FC6A  74                 	db	116	;'t'
   768  00FC6B  69                 	db	105	;'i'
   769  00FC6C  6D                 	db	109	;'m'
   770  00FC6D  65                 	db	101	;'e'
   771  00FC6E  28                 	db	40
   772  00FC6F  74                 	db	116	;'t'
   773  00FC70  29                 	db	41
   774  00FC71  0A                 	db	10
   775  00FC72  09                 	db	9
   776  00FC73  61                 	db	97	;'a'
   777  00FC74  64                 	db	100	;'d'
   778  00FC75  6A                 	db	106	;'j'
   779  00FC76  75                 	db	117	;'u'
   780  00FC77  73                 	db	115	;'s'
   781  00FC78  74                 	db	116	;'t'
   782  00FC79  5F                 	db	95	;'_'
   783  00FC7A  74                 	db	116	;'t'
   784  00FC7B  69                 	db	105	;'i'
   785  00FC7C  6D                 	db	109	;'m'
   786  00FC7D  65                 	db	101	;'e'
   787  00FC7E  28                 	db	40
   788  00FC7F  61                 	db	97	;'a'
   789  00FC80  74                 	db	116	;'t'
   790  00FC81  29                 	db	41
   791  00FC82  20                 	db	32
   792  00FC83  5B                 	db	91	;'['
   793  00FC84  68                 	db	104	;'h'
   794  00FC85  61                 	db	97	;'a'
   795  00FC86  6E                 	db	110	;'n'
   796  00FC87  64                 	db	100	;'d'
   797  00FC88  3A                 	db	58	;':'
   798  00FC89  79                 	db	121	;'y'
   799  00FC8A  2C                 	db	44
   800  00FC8B  4D                 	db	77	;'M'
   801  00FC8C  2C                 	db	44
   802  00FC8D  64                 	db	100	;'d'
   803  00FC8E  2C                 	db	44
   804  00FC8F  68                 	db	104	;'h'
   805  00FC90  2C                 	db	44
   806  00FC91  6D                 	db	109	;'m'
   807  00FC92  2C                 	db	44
   808  00FC93  73                 	db	115	;'s'
   809  00FC94  5D                 	db	93	;']'
   810  00FC95  20                 	db	32
   811  00FC96  5B                 	db	91	;'['
   812  00FC97  76                 	db	118	;'v'
   813  00FC98  61                 	db	97	;'a'
   814  00FC99  6C                 	db	108	;'l'
   815  00FC9A  75                 	db	117	;'u'
   816  00FC9B  65                 	db	101	;'e'
   817  00FC9C  28                 	db	40
   818  00FC9D  64                 	db	100	;'d'
   819  00FC9E  65                 	db	101	;'e'
   820  00FC9F  63                 	db	99	;'c'
   821  00FCA0  69                 	db	105	;'i'
   822  00FCA1  6D                 	db	109	;'m'
   823  00FCA2  61                 	db	97	;'a'
   824  00FCA3  6C                 	db	108	;'l'
   825  00FCA4  29                 	db	41
   826  00FCA5  5D                 	db	93	;']'
   827  00FCA6  0A                 	db	10
   828  00FCA7  09                 	db	9
   829  00FCA8  73                 	db	115	;'s'
   830  00FCA9  65                 	db	101	;'e'
   831  00FCAA  74                 	db	116	;'t'
   832  00FCAB  74                 	db	116	;'t'
   833  00FCAC  69                 	db	105	;'i'
   834  00FCAD  6E                 	db	110	;'n'
   835  00FCAE  67                 	db	103	;'g'
   836  00FCAF  73                 	db	115	;'s'
   837  00FCB0  28                 	db	40
   838  00FCB1  73                 	db	115	;'s'
   839  00FCB2  65                 	db	101	;'e'
   840  00FCB3  74                 	db	116	;'t'
   841  00FCB4  29                 	db	41
   842  00FCB5  20                 	db	32
   843  00FCB6  5B                 	db	91	;'['
   844  00FCB7  70                 	db	112	;'p'
   845  00FCB8  6F                 	db	111	;'o'
   846  00FCB9  72                 	db	114	;'r'
   847  00FCBA  74                 	db	116	;'t'
   848  00FCBB  3A                 	db	58	;':'
   849  00FCBC  6C                 	db	108	;'l'
   850  00FCBD  65                 	db	101	;'e'
   851  00FCBE  66                 	db	102	;'f'
   852  00FCBF  74                 	db	116	;'t'
   853  00FCC0  28                 	db	40
   854  00FCC1  6C                 	db	108	;'l'
   855  00FCC2  29                 	db	41
   856  00FCC3  2C                 	db	44
   857  00FCC4  63                 	db	99	;'c'
   858  00FCC5  65                 	db	101	;'e'
   859  00FCC6  6E                 	db	110	;'n'
   860  00FCC7  74                 	db	116	;'t'
   861  00FCC8  65                 	db	101	;'e'
   862  00FCC9  72                 	db	114	;'r'
   863  00FCCA  28                 	db	40
   864  00FCCB  63                 	db	99	;'c'
   865  00FCCC  29                 	db	41
   866  00FCCD  2C                 	db	44
   867  00FCCE  72                 	db	114	;'r'
   868  00FCCF  69                 	db	105	;'i'
   869  00FCD0  67                 	db	103	;'g'
   870  00FCD1  68                 	db	104	;'h'
   871  00FCD2  74                 	db	116	;'t'
   872  00FCD3  28                 	db	40
   873  00FCD4  72                 	db	114	;'r'
   874  00FCD5  29                 	db	41
   875  00FCD6  5D                 	db	93	;']'
   876  00FCD7  0A                 	db	10
   877  00FCD8  09                 	db	9
   878  00FCD9  09                 	db	9
   879  00FCDA  5B                 	db	91	;'['
   880  00FCDB  61                 	db	97	;'a'
   881  00FCDC  75                 	db	117	;'u'
   882  00FCDD  74                 	db	116	;'t'
   883  00FCDE  6F                 	db	111	;'o'
   884  00FCDF  5F                 	db	95	;'_'
   885  00FCE0  73                 	db	115	;'s'
   886  00FCE1  74                 	db	116	;'t'
   887  00FCE2  6F                 	db	111	;'o'
   888  00FCE3  70                 	db	112	;'p'
   889  00FCE4  28                 	db	40
   890  00FCE5  61                 	db	97	;'a'
   891  00FCE6  73                 	db	115	;'s'
   892  00FCE7  29                 	db	41
   893  00FCE8  2C                 	db	44
   894  00FCE9  61                 	db	97	;'a'
   895  00FCEA  6C                 	db	108	;'l'
   896  00FCEB  77                 	db	119	;'w'
   897  00FCEC  61                 	db	97	;'a'
   898  00FCED  79                 	db	121	;'y'
   899  00FCEE  73                 	db	115	;'s'
   900  00FCEF  5F                 	db	95	;'_'
   901  00FCF0  6F                 	db	111	;'o'
   902  00FCF1  6E                 	db	110	;'n'
   903  00FCF2  28                 	db	40
   904  00FCF3  61                 	db	97	;'a'
   905  00FCF4  6F                 	db	111	;'o'
   906  00FCF5  29                 	db	41
   907  00FCF6  2C                 	db	44
   908  00FCF7  69                 	db	105	;'i'
   909  00FCF8  6E                 	db	110	;'n'
   910  00FCF9  74                 	db	116	;'t'
   911  00FCFA  65                 	db	101	;'e'
   912  00FCFB  67                 	db	103	;'g'
   913  00FCFC  72                 	db	114	;'r'
   914  00FCFD  61                 	db	97	;'a'
   915  00FCFE  74                 	db	116	;'t'
   916  00FCFF  69                 	db	105	;'i'
   917  00FD00  6E                 	db	110	;'n'
   918  00FD01  67                 	db	103	;'g'
   919  00FD02  5F                 	db	95	;'_'
   920  00FD03  72                 	db	114	;'r'
   921  00FD04  65                 	db	101	;'e'
   922  00FD05  73                 	db	115	;'s'
   923  00FD06  65                 	db	101	;'e'
   924  00FD07  74                 	db	116	;'t'
   925  00FD08  28                 	db	40
   926  00FD09  69                 	db	105	;'i'
   927  00FD0A  72                 	db	114	;'r'
   928  00FD0B  29                 	db	41
   929  00FD0C  5D                 	db	93	;']'
   930  00FD0D  0A                 	db	10
   931  00FD0E  09                 	db	9
   932  00FD0F  6F                 	db	111	;'o'
   933  00FD10  75                 	db	117	;'u'
   934  00FD11  74                 	db	116	;'t'
   935  00FD12  70                 	db	112	;'p'
   936  00FD13  75                 	db	117	;'u'
   937  00FD14  74                 	db	116	;'t'
   938  00FD15  5F                 	db	95	;'_'
   939  00FD16  64                 	db	100	;'d'
   940  00FD17  61                 	db	97	;'a'
   941  00FD18  74                 	db	116	;'t'
   942  00FD19  61                 	db	97	;'a'
   943  00FD1A  28                 	db	40
   944  00FD1B  6F                 	db	111	;'o'
   945  00FD1C  64                 	db	100	;'d'
   946  00FD1D  29                 	db	41
   947  00FD1E  20                 	db	32
   948  00FD1F  3C                 	db	60	;'<'
   949  00FD20  2D                 	db	45
   950  00FD21  20                 	db	32
   951  00FD22  73                 	db	115	;'s'
   952  00FD23  74                 	db	116	;'t'
   953  00FD24  6F                 	db	111	;'o'
   954  00FD25  70                 	db	112	;'p'
   955  00FD26  70                 	db	112	;'p'
   956  00FD27  65                 	db	101	;'e'
   957  00FD28  64                 	db	100	;'d'
   958  00FD29  20                 	db	32
   959  00FD2A  62                 	db	98	;'b'
   960  00FD2B  79                 	db	121	;'y'
   961  00FD2C  20                 	db	32
   962  00FD2D  70                 	db	112	;'p'
   963  00FD2E  72                 	db	114	;'r'
   964  00FD2F  65                 	db	101	;'e'
   965  00FD30  73                 	db	115	;'s'
   966  00FD31  73                 	db	115	;'s'
   967  00FD32  69                 	db	105	;'i'
   968  00FD33  6E                 	db	110	;'n'
   969  00FD34  67                 	db	103	;'g'
   970  00FD35  20                 	db	32
   971  00FD36  74                 	db	116	;'t'
   972  00FD37  68                 	db	104	;'h'
   973  00FD38  65                 	db	101	;'e'
   974  00FD39  20                 	db	32
   975  00FD3A  45                 	db	69	;'E'
   976  00FD3B  6E                 	db	110	;'n'
   977  00FD3C  74                 	db	116	;'t'
   978  00FD3D  65                 	db	101	;'e'
   979  00FD3E  72                 	db	114	;'r'
   980  00FD3F  20                 	db	32
   981  00FD40  6B                 	db	107	;'k'
   982  00FD41  65                 	db	101	;'e'
   983  00FD42  79                 	db	121	;'y'
   984  00FD43  0A                 	db	10
   985  00FD44  09                 	db	9
   986  00FD45  74                 	db	116	;'t'
   987  00FD46  6F                 	db	111	;'o'
   988  00FD47  75                 	db	117	;'u'
   989  00FD48  63                 	db	99	;'c'
   990  00FD49  68                 	db	104	;'h'
   991  00FD4A  20                 	db	32
   992  00FD4B  5B                 	db	91	;'['
   993  00FD4C  72                 	db	114	;'r'
   994  00FD4D  65                 	db	101	;'e'
   995  00FD4E  73                 	db	115	;'s'
   996  00FD4F  65                 	db	101	;'e'
   997  00FD50  74                 	db	116	;'t'
   998  00FD51  28                 	db	40
   999  00FD52  72                 	db	114	;'r'
  1000  00FD53  29                 	db	41
  1001  00FD54  2C                 	db	44
  1002  00FD55  69                 	db	105	;'i'
  1003  00FD56  6E                 	db	110	;'n'
  1004  00FD57  69                 	db	105	;'i'
  1005  00FD58  74                 	db	116	;'t'
  1006  00FD59  69                 	db	105	;'i'
  1007  00FD5A  61                 	db	97	;'a'
  1008  00FD5B  6C                 	db	108	;'l'
  1009  00FD5C  69                 	db	105	;'i'
  1010  00FD5D  7A                 	db	122	;'z'
  1011  00FD5E  65                 	db	101	;'e'
  1012  00FD5F  28                 	db	40
  1013  00FD60  69                 	db	105	;'i'
  1014  00FD61  6E                 	db	110	;'n'
  1015  00FD62  69                 	db	105	;'i'
  1016  00FD63  74                 	db	116	;'t'
  1017  00FD64  29                 	db	41
  1018  00FD65  5D                 	db	93	;']'
  1019  00FD66  20                 	db	32
  1020  00FD67  5B                 	db	91	;'['
  1021  00FD68  76                 	db	118	;'v'
  1022  00FD69  61                 	db	97	;'a'
  1023  00FD6A  6C                 	db	108	;'l'
  1024  00FD6B  75                 	db	117	;'u'
  1025  00FD6C  65                 	db	101	;'e'
  1026  00FD6D  28                 	db	40
  1027  00FD6E  25                 	db	37
  1028  00FD6F  29                 	db	41
  1029  00FD70  5D                 	db	93	;']'
  1030  00FD71  0A                 	db	10
  1031  00FD72  0A                 	db	10
  1032  00FD73  09                 	db	9
  1033  00FD74  66                 	db	102	;'f'
  1034  00FD75  6F                 	db	111	;'o'
  1035  00FD76  72                 	db	114	;'r'
  1036  00FD77  20                 	db	32
  1037  00FD78  44                 	db	68	;'D'
  1038  00FD79  65                 	db	101	;'e'
  1039  00FD7A  76                 	db	118	;'v'
  1040  00FD7B  65                 	db	101	;'e'
  1041  00FD7C  6C                 	db	108	;'l'
  1042  00FD7D  6F                 	db	111	;'o'
  1043  00FD7E  70                 	db	112	;'p'
  1044  00FD7F  70                 	db	112	;'p'
  1045  00FD80  65                 	db	101	;'e'
  1046  00FD81  72                 	db	114	;'r'
  1047  00FD82  0A                 	db	10
  1048  00FD83  09                 	db	9
  1049  00FD84  52                 	db	82	;'R'
  1050  00FD85  45                 	db	69	;'E'
  1051  00FD86  53                 	db	83	;'S'
  1052  00FD87  45                 	db	69	;'E'
  1053  00FD88  54                 	db	84	;'T'
  1054  00FD89  28                 	db	40
  1055  00FD8A  29                 	db	41
  1056  00FD8B  3B                 	db	59	;';'
  1057  00FD8C  0A                 	db	10
  1058  00FD8D  09                 	db	9
  1059  00FD8E  62                 	db	98	;'b'
  1060  00FD8F  6F                 	db	111	;'o'
  1061  00FD90  6F                 	db	111	;'o'
  1062  00FD91  74                 	db	116	;'t'
  1063  00FD92  6C                 	db	108	;'l'
  1064  00FD93  6F                 	db	111	;'o'
  1065  00FD94  61                 	db	97	;'a'
  1066  00FD95  64                 	db	100	;'d'
  1067  00FD96  0A                 	db	10
  1068  00FD97  00                 	db	0
  1069  00FD98                     STR_23:
  1070  00FD98  09                 	db	9
  1071  00FD99  32                 	db	50	;'2'
  1072  00FD9A  30                 	db	48	;'0'
  1073  00FD9B  25                 	db	37
  1074  00FD9C  30                 	db	48	;'0'
  1075  00FD9D  32                 	db	50	;'2'
  1076  00FD9E  64                 	db	100	;'d'
  1077  00FD9F  2F                 	db	47
  1078  00FDA0  25                 	db	37
  1079  00FDA1  30                 	db	48	;'0'
  1080  00FDA2  32                 	db	50	;'2'
  1081  00FDA3  64                 	db	100	;'d'
  1082  00FDA4  2F                 	db	47
  1083  00FDA5  25                 	db	37
  1084  00FDA6  30                 	db	48	;'0'
  1085  00FDA7  32                 	db	50	;'2'
  1086  00FDA8  64                 	db	100	;'d'
  1087  00FDA9  28                 	db	40
  1088  00FDAA  25                 	db	37
  1089  00FDAB  73                 	db	115	;'s'
  1090  00FDAC  29                 	db	41
  1091  00FDAD  25                 	db	37
  1092  00FDAE  30                 	db	48	;'0'
  1093  00FDAF  32                 	db	50	;'2'
  1094  00FDB0  64                 	db	100	;'d'
  1095  00FDB1  3A                 	db	58	;':'
  1096  00FDB2  25                 	db	37
  1097  00FDB3  30                 	db	48	;'0'
  1098  00FDB4  32                 	db	50	;'2'
  1099  00FDB5  64                 	db	100	;'d'
  1100  00FDB6  2D                 	db	45
  1101  00FDB7  25                 	db	37
  1102  00FDB8  30                 	db	48	;'0'
  1103  00FDB9  32                 	db	50	;'2'
  1104  00FDBA  64                 	db	100	;'d'
  1105  00FDBB  0A                 	db	10
  1106  00FDBC  00                 	db	0
  1107  00FDBD                     STR_63:
  1108  00FDBD  09                 	db	9
  1109  00FDBE  69                 	db	105	;'i'
  1110  00FDBF  6E                 	db	110	;'n'
  1111  00FDC0  76                 	db	118	;'v'
  1112  00FDC1  61                 	db	97	;'a'
  1113  00FDC2  6C                 	db	108	;'l'
  1114  00FDC3  69                 	db	105	;'i'
  1115  00FDC4  64                 	db	100	;'d'
  1116  00FDC5  20                 	db	32
  1117  00FDC6  64                 	db	100	;'d'
  1118  00FDC7  61                 	db	97	;'a'
  1119  00FDC8  74                 	db	116	;'t'
  1120  00FDC9  61                 	db	97	;'a'
  1121  00FDCA  0A                 	db	10
  1122  00FDCB  09                 	db	9
  1123  00FDCC  69                 	db	105	;'i'
  1124  00FDCD  6E                 	db	110	;'n'
  1125  00FDCE  69                 	db	105	;'i'
  1126  00FDCF  74                 	db	116	;'t'
  1127  00FDD0  69                 	db	105	;'i'
  1128  00FDD1  61                 	db	97	;'a'
  1129  00FDD2  6C                 	db	108	;'l'
  1130  00FDD3  69                 	db	105	;'i'
  1131  00FDD4  7A                 	db	122	;'z'
  1132  00FDD5  69                 	db	105	;'i'
  1133  00FDD6  6E                 	db	110	;'n'
  1134  00FDD7  67                 	db	103	;'g'
  1135  00FDD8  20                 	db	32
  1136  00FDD9  66                 	db	102	;'f'
  1137  00FDDA  61                 	db	97	;'a'
  1138  00FDDB  69                 	db	105	;'i'
  1139  00FDDC  6C                 	db	108	;'l'
  1140  00FDDD  65                 	db	101	;'e'
  1141  00FDDE  64                 	db	100	;'d'
  1142  00FDDF  0A                 	db	10
  1143  00FDE0  00                 	db	0
  1144  00FDE1                     STR_67:
  1145  00FDE1  32                 	db	50	;'2'
  1146  00FDE2  30                 	db	48	;'0'
  1147  00FDE3  25                 	db	37
  1148  00FDE4  30                 	db	48	;'0'
  1149  00FDE5  32                 	db	50	;'2'
  1150  00FDE6  64                 	db	100	;'d'
  1151  00FDE7  2F                 	db	47
  1152  00FDE8  25                 	db	37
  1153  00FDE9  30                 	db	48	;'0'
  1154  00FDEA  32                 	db	50	;'2'
  1155  00FDEB  64                 	db	100	;'d'
  1156  00FDEC  2F                 	db	47
  1157  00FDED  25                 	db	37
  1158  00FDEE  30                 	db	48	;'0'
  1159  00FDEF  32                 	db	50	;'2'
  1160  00FDF0  64                 	db	100	;'d'
  1161  00FDF1  2D                 	db	45
  1162  00FDF2  25                 	db	37
  1163  00FDF3  30                 	db	48	;'0'
  1164  00FDF4  32                 	db	50	;'2'
  1165  00FDF5  64                 	db	100	;'d'
  1166  00FDF6  3A                 	db	58	;':'
  1167  00FDF7  25                 	db	37
  1168  00FDF8  30                 	db	48	;'0'
  1169  00FDF9  32                 	db	50	;'2'
  1170  00FDFA  64                 	db	100	;'d'
  1171  00FDFB  2D                 	db	45
  1172  00FDFC  25                 	db	37
  1173  00FDFD  30                 	db	48	;'0'
  1174  00FDFE  32                 	db	50	;'2'
  1175  00FDFF  64                 	db	100	;'d'
  1176  00FE00  00                 	db	0
  1177  00FE01                     STR_73:
  1178  00FE01  25                 	db	37
  1179  00FE02  30                 	db	48	;'0'
  1180  00FE03  32                 	db	50	;'2'
  1181  00FE04  6C                 	db	108	;'l'
  1182  00FE05  64                 	db	100	;'d'
  1183  00FE06  64                 	db	100	;'d'
  1184  00FE07  20                 	db	32
  1185  00FE08  25                 	db	37
  1186  00FE09  30                 	db	48	;'0'
  1187  00FE0A  32                 	db	50	;'2'
  1188  00FE0B  6C                 	db	108	;'l'
  1189  00FE0C  64                 	db	100	;'d'
  1190  00FE0D  68                 	db	104	;'h'
  1191  00FE0E  20                 	db	32
  1192  00FE0F  25                 	db	37
  1193  00FE10  30                 	db	48	;'0'
  1194  00FE11  32                 	db	50	;'2'
  1195  00FE12  6C                 	db	108	;'l'
  1196  00FE13  64                 	db	100	;'d'
  1197  00FE14  6D                 	db	109	;'m'
  1198  00FE15  20                 	db	32
  1199  00FE16  25                 	db	37
  1200  00FE17  30                 	db	48	;'0'
  1201  00FE18  32                 	db	50	;'2'
  1202  00FE19  6C                 	db	108	;'l'
  1203  00FE1A  64                 	db	100	;'d'
  1204  00FE1B  73                 	db	115	;'s'
  1205  00FE1C  00                 	db	0
  1206  00FE1D                     STR_62:
  1207  00FE1D  09                 	db	9
  1208  00FE1E  69                 	db	105	;'i'
  1209  00FE1F  6E                 	db	110	;'n'
  1210  00FE20  69                 	db	105	;'i'
  1211  00FE21  74                 	db	116	;'t'
  1212  00FE22  69                 	db	105	;'i'
  1213  00FE23  61                 	db	97	;'a'
  1214  00FE24  6C                 	db	108	;'l'
  1215  00FE25  69                 	db	105	;'i'
  1216  00FE26  7A                 	db	122	;'z'
  1217  00FE27  69                 	db	105	;'i'
  1218  00FE28  6E                 	db	110	;'n'
  1219  00FE29  67                 	db	103	;'g'
  1220  00FE2A  20                 	db	32
  1221  00FE2B  63                 	db	99	;'c'
  1222  00FE2C  6F                 	db	111	;'o'
  1223  00FE2D  6D                 	db	109	;'m'
  1224  00FE2E  70                 	db	112	;'p'
  1225  00FE2F  6C                 	db	108	;'l'
  1226  00FE30  65                 	db	101	;'e'
  1227  00FE31  74                 	db	116	;'t'
  1228  00FE32  65                 	db	101	;'e'
  1229  00FE33  0A                 	db	10
  1230  00FE34  00                 	db	0
  1231  00FE35                     STR_68:
  1232  00FE35  20                 	db	32
  1233  00FE36  25                 	db	37
  1234  00FE37  73                 	db	115	;'s'
  1235  00FE38  3A                 	db	58	;':'
  1236  00FE39  25                 	db	37
  1237  00FE3A  30                 	db	48	;'0'
  1238  00FE3B  31                 	db	49	;'1'
  1239  00FE3C  64                 	db	100	;'d'
  1240  00FE3D  2E                 	db	46
  1241  00FE3E  25                 	db	37
  1242  00FE3F  30                 	db	48	;'0'
  1243  00FE40  33                 	db	51	;'3'
  1244  00FE41  64                 	db	100	;'d'
  1245  00FE42  41                 	db	65	;'A'
  1246  00FE43  2C                 	db	44
  1247  00FE44  25                 	db	37
  1248  00FE45  30                 	db	48	;'0'
  1249  00FE46  36                 	db	54	;'6'
  1250  00FE47  6C                 	db	108	;'l'
  1251  00FE48  64                 	db	100	;'d'
  1252  00FE49  6D                 	db	109	;'m'
  1253  00FE4A  41                 	db	65	;'A'
  1254  00FE4B  68                 	db	104	;'h'
  1255  00FE4C  00                 	db	0
  1256  00FE4D                     STR_66:
  1257  00FE4D  09                 	db	9
  1258  00FE4E  73                 	db	115	;'s'
  1259  00FE4F  65                 	db	101	;'e'
  1260  00FE50  74                 	db	116	;'t'
  1261  00FE51  69                 	db	105	;'i'
  1262  00FE52  6E                 	db	110	;'n'
  1263  00FE53  67                 	db	103	;'g'
  1264  00FE54  20                 	db	32
  1265  00FE55  63                 	db	99	;'c'
  1266  00FE56  6F                 	db	111	;'o'
  1267  00FE57  6D                 	db	109	;'m'
  1268  00FE58  70                 	db	112	;'p'
  1269  00FE59  6C                 	db	108	;'l'
  1270  00FE5A  65                 	db	101	;'e'
  1271  00FE5B  74                 	db	116	;'t'
  1272  00FE5C  65                 	db	101	;'e'
  1273  00FE5D  0A                 	db	10
  1274  00FE5E  00                 	db	0
  1275  00FE5F                     STR_105:
  1276  00FE5F  3C                 	db	60	;'<'
  1277  00FE60  2D                 	db	45
  1278  00FE61  20                 	db	32
  1279  00FE62  20                 	db	32
  1280  00FE63  20                 	db	32
  1281  00FE64  53                 	db	83	;'S'
  1282  00FE65  65                 	db	101	;'e'
  1283  00FE66  6C                 	db	108	;'l'
  1284  00FE67  65                 	db	101	;'e'
  1285  00FE68  63                 	db	99	;'c'
  1286  00FE69  74                 	db	116	;'t'
  1287  00FE6A  20                 	db	32
  1288  00FE6B  20                 	db	32
  1289  00FE6C  20                 	db	32
  1290  00FE6D  2D                 	db	45
  1291  00FE6E  3E                 	db	62	;'>'
  1292  00FE6F  00                 	db	0
  1293  00FE70                     STR_111:
  1294  00FE70  54                 	db	84	;'T'
  1295  00FE71  6F                 	db	111	;'o'
  1296  00FE72  67                 	db	103	;'g'
  1297  00FE73  67                 	db	103	;'g'
  1298  00FE74  6C                 	db	108	;'l'
  1299  00FE75  65                 	db	101	;'e'
  1300  00FE76  20                 	db	32
  1301  00FE77  41                 	db	65	;'A'
  1302  00FE78  75                 	db	117	;'u'
  1303  00FE79  74                 	db	116	;'t'
  1304  00FE7A  6F                 	db	111	;'o'
  1305  00FE7B  20                 	db	32
  1306  00FE7C  53                 	db	83	;'S'
  1307  00FE7D  74                 	db	116	;'t'
  1308  00FE7E  6F                 	db	111	;'o'
  1309  00FE7F  70                 	db	112	;'p'
  1310  00FE80  00                 	db	0
  1311  00FE81                     STR_82:
  1312  00FE81  4C                 	db	76	;'L'
  1313  00FE82  65                 	db	101	;'e'
  1314  00FE83  66                 	db	102	;'f'
  1315  00FE84  74                 	db	116	;'t'
  1316  00FE85  20                 	db	32
  1317  00FE86  43                 	db	67	;'C'
  1318  00FE87  65                 	db	101	;'e'
  1319  00FE88  6E                 	db	110	;'n'
  1320  00FE89  74                 	db	116	;'t'
  1321  00FE8A  72                 	db	114	;'r'
  1322  00FE8B  20                 	db	32
  1323  00FE8C  52                 	db	82	;'R'
  1324  00FE8D  69                 	db	105	;'i'
  1325  00FE8E  67                 	db	103	;'g'
  1326  00FE8F  68                 	db	104	;'h'
  1327  00FE90  74                 	db	116	;'t'
  1328  00FE91  00                 	db	0
  1329  00FE92                     STR_45:
  1330  00FE92  43                 	db	67	;'C'
  1331  00FE93  68                 	db	104	;'h'
  1332  00FE94  61                 	db	97	;'a'
  1333  00FE95  72                 	db	114	;'r'
  1334  00FE96  67                 	db	103	;'g'
  1335  00FE97  65                 	db	101	;'e'
  1336  00FE98  20                 	db	32
  1337  00FE99  53                 	db	83	;'S'
  1338  00FE9A  74                 	db	116	;'t'
  1339  00FE9B  61                 	db	97	;'a'
  1340  00FE9C  74                 	db	116	;'t'
  1341  00FE9D  69                 	db	105	;'i'
  1342  00FE9E  6F                 	db	111	;'o'
  1343  00FE9F  6E                 	db	110	;'n'
  1344  00FEA0  20                 	db	32
  1345  00FEA1  36                 	db	54	;'6'
  1346  00FEA2  00                 	db	0
  1347  00FEA3                     STR_109:
  1348  00FEA3  41                 	db	65	;'A'
  1349  00FEA4  64                 	db	100	;'d'
  1350  00FEA5  6A                 	db	106	;'j'
  1351  00FEA6  75                 	db	117	;'u'
  1352  00FEA7  73                 	db	115	;'s'
  1353  00FEA8  74                 	db	116	;'t'
  1354  00FEA9  20                 	db	32
  1355  00FEAA  74                 	db	116	;'t'
  1356  00FEAB  68                 	db	104	;'h'
  1357  00FEAC  65                 	db	101	;'e'
  1358  00FEAD  20                 	db	32
  1359  00FEAE  54                 	db	84	;'T'
  1360  00FEAF  69                 	db	105	;'i'
  1361  00FEB0  6D                 	db	109	;'m'
  1362  00FEB1  65                 	db	101	;'e'
  1363  00FEB2  00                 	db	0
  1364  00FEB3                     STR_113:
  1365  00FEB3  54                 	db	84	;'T'
  1366  00FEB4  6F                 	db	111	;'o'
  1367  00FEB5  67                 	db	103	;'g'
  1368  00FEB6  67                 	db	103	;'g'
  1369  00FEB7  6C                 	db	108	;'l'
  1370  00FEB8  65                 	db	101	;'e'
  1371  00FEB9  20                 	db	32
  1372  00FEBA  4C                 	db	76	;'L'
  1373  00FEBB  45                 	db	69	;'E'
  1374  00FEBC  44                 	db	68	;'D'
  1375  00FEBD  20                 	db	32
  1376  00FEBE  4C                 	db	76	;'L'
  1377  00FEBF  61                 	db	97	;'a'
  1378  00FEC0  6D                 	db	109	;'m'
  1379  00FEC1  70                 	db	112	;'p'
  1380  00FEC2  00                 	db	0
  1381  00FEC3                     STR_50:
  1382  00FEC3  42                 	db	66	;'B'
  1383  00FEC4  6F                 	db	111	;'o'
  1384  00FEC5  6F                 	db	111	;'o'
  1385  00FEC6  74                 	db	116	;'t'
  1386  00FEC7  6C                 	db	108	;'l'
  1387  00FEC8  6F                 	db	111	;'o'
  1388  00FEC9  61                 	db	97	;'a'
  1389  00FECA  64                 	db	100	;'d'
  1390  00FECB  65                 	db	101	;'e'
  1391  00FECC  72                 	db	114	;'r'
  1392  00FECD  20                 	db	32
  1393  00FECE  6D                 	db	109	;'m'
  1394  00FECF  6F                 	db	111	;'o'
  1395  00FED0  64                 	db	100	;'d'
  1396  00FED1  65                 	db	101	;'e'
  1397  00FED2  00                 	db	0
  1398  00FED3                     STR_115:
  1399  00FED3  49                 	db	73	;'I'
  1400  00FED4  6E                 	db	110	;'n'
  1401  00FED5  74                 	db	116	;'t'
  1402  00FED6  65                 	db	101	;'e'
  1403  00FED7  67                 	db	103	;'g'
  1404  00FED8  72                 	db	114	;'r'
  1405  00FED9  61                 	db	97	;'a'
  1406  00FEDA  74                 	db	116	;'t'
  1407  00FEDB  20                 	db	32
  1408  00FEDC  52                 	db	82	;'R'
  1409  00FEDD  65                 	db	101	;'e'
  1410  00FEDE  73                 	db	115	;'s'
  1411  00FEDF  65                 	db	101	;'e'
  1412  00FEE0  74                 	db	116	;'t'
  1413  00FEE1  00                 	db	0
  1414  00FEE2                     STR_47:
  1415  00FEE2  43                 	db	67	;'C'
  1416  00FEE3  68                 	db	104	;'h'
  1417  00FEE4  61                 	db	97	;'a'
  1418  00FEE5  72                 	db	114	;'r'
  1419  00FEE6  67                 	db	103	;'g'
  1420  00FEE7  65                 	db	101	;'e'
  1421  00FEE8  20                 	db	32
  1422  00FEE9  53                 	db	83	;'S'
  1423  00FEEA  74                 	db	116	;'t'
  1424  00FEEB  61                 	db	97	;'a'
  1425  00FEEC  74                 	db	116	;'t'
  1426  00FEED  69                 	db	105	;'i'
  1427  00FEEE  6F                 	db	111	;'o'
  1428  00FEEF  6E                 	db	110	;'n'
  1429  00FEF0  00                 	db	0
  1430  00FEF1                     STR_48:
  1431  00FEF1  57                 	db	87	;'W'
  1432  00FEF2  65                 	db	101	;'e'
  1433  00FEF3  6C                 	db	108	;'l'
  1434  00FEF4  63                 	db	99	;'c'
  1435  00FEF5  6F                 	db	111	;'o'
  1436  00FEF6  6D                 	db	109	;'m'
  1437  00FEF7  65                 	db	101	;'e'
  1438  00FEF8  20                 	db	32
  1439  00FEF9  62                 	db	98	;'b'
  1440  00FEFA  61                 	db	97	;'a'
  1441  00FEFB  63                 	db	99	;'c'
  1442  00FEFC  6B                 	db	107	;'k'
  1443  00FEFD  21                 	db	33
  1444  00FEFE  00                 	db	0
  1445  00FEFF                     STR_75:
  1446  00FEFF  4D                 	db	77	;'M'
  1447  00FF00  61                 	db	97	;'a'
  1448  00FF01  64                 	db	100	;'d'
  1449  00FF02  65                 	db	101	;'e'
  1450  00FF03  20                 	db	32
  1451  00FF04  62                 	db	98	;'b'
  1452  00FF05  79                 	db	121	;'y'
  1453  00FF06  20                 	db	32
  1454  00FF07  4B                 	db	75	;'K'
  1455  00FF08  45                 	db	69	;'E'
  1456  00FF09  52                 	db	82	;'R'
  1457  00FF0A  49                 	db	73	;'I'
  1458  00FF0B  00                 	db	0
  1459  00FF0C                     STR_46:
  1460  00FF0C  53                 	db	83	;'S'
  1461  00FF0D  4C                 	db	76	;'L'
  1462  00FF0E  45                 	db	69	;'E'
  1463  00FF0F  45                 	db	69	;'E'
  1464  00FF10  50                 	db	80	;'P'
  1465  00FF11  49                 	db	73	;'I'
  1466  00FF12  4E                 	db	78	;'N'
  1467  00FF13  47                 	db	71	;'G'
  1468  00FF14  20                 	db	32
  1469  00FF15  4E                 	db	78	;'N'
  1470  00FF16  4F                 	db	79	;'O'
  1471  00FF17  57                 	db	87	;'W'
  1472  00FF18  00                 	db	0
  1473  00FF19                     STR_49:
  1474  00FF19  50                 	db	80	;'P'
  1475  00FF1A  49                 	db	73	;'I'
  1476  00FF1B  43                 	db	67	;'C'
  1477  00FF1C  31                 	db	49	;'1'
  1478  00FF1D  38                 	db	56	;'8'
  1479  00FF1E  46                 	db	70	;'F'
  1480  00FF1F  32                 	db	50	;'2'
  1481  00FF20  37                 	db	55	;'7'
  1482  00FF21  4A                 	db	74	;'J'
  1483  00FF22  35                 	db	53	;'5'
  1484  00FF23  33                 	db	51	;'3'
  1485  00FF24  00                 	db	0
  1486  00FF25                     STR_57:
  1487  00FF25  6F                 	db	111	;'o'
  1488  00FF26  75                 	db	117	;'u'
  1489  00FF27  74                 	db	116	;'t'
  1490  00FF28  70                 	db	112	;'p'
  1491  00FF29  75                 	db	117	;'u'
  1492  00FF2A  74                 	db	116	;'t'
  1493  00FF2B  5F                 	db	95	;'_'
  1494  00FF2C  64                 	db	100	;'d'
  1495  00FF2D  61                 	db	97	;'a'
  1496  00FF2E  74                 	db	116	;'t'
  1497  00FF2F  61                 	db	97	;'a'
  1498  00FF30  00                 	db	0
  1499  00FF31                     STR_28:
  1500  00FF31  61                 	db	97	;'a'
  1501  00FF32  64                 	db	100	;'d'
  1502  00FF33  6A                 	db	106	;'j'
  1503  00FF34  75                 	db	117	;'u'
  1504  00FF35  73                 	db	115	;'s'
  1505  00FF36  74                 	db	116	;'t'
  1506  00FF37  5F                 	db	95	;'_'
  1507  00FF38  74                 	db	116	;'t'
  1508  00FF39  69                 	db	105	;'i'
  1509  00FF3A  6D                 	db	109	;'m'
  1510  00FF3B  65                 	db	101	;'e'
  1511  00FF3C  00                 	db	0
  1512  00FF3D                     STR_71:
  1513  00FF3D  25                 	db	37
  1514  00FF3E  30                 	db	48	;'0'
  1515  00FF3F  31                 	db	49	;'1'
  1516  00FF40  64                 	db	100	;'d'
  1517  00FF41  2E                 	db	46
  1518  00FF42  25                 	db	37
  1519  00FF43  30                 	db	48	;'0'
  1520  00FF44  33                 	db	51	;'3'
  1521  00FF45  64                 	db	100	;'d'
  1522  00FF46  41                 	db	65	;'A'
  1523  00FF47  00                 	db	0
  1524  00FF48                     STR_60:
  1525  00FF48  69                 	db	105	;'i'
  1526  00FF49  6E                 	db	110	;'n'
  1527  00FF4A  69                 	db	105	;'i'
  1528  00FF4B  74                 	db	116	;'t'
  1529  00FF4C  69                 	db	105	;'i'
  1530  00FF4D  61                 	db	97	;'a'
  1531  00FF4E  6C                 	db	108	;'l'
  1532  00FF4F  69                 	db	105	;'i'
  1533  00FF50  7A                 	db	122	;'z'
  1534  00FF51  65                 	db	101	;'e'
  1535  00FF52  00                 	db	0
  1536  00FF53                     STR_25:
  1537  00FF53  70                 	db	112	;'p'
  1538  00FF54  72                 	db	114	;'r'
  1539  00FF55  69                 	db	105	;'i'
  1540  00FF56  6E                 	db	110	;'n'
  1541  00FF57  74                 	db	116	;'t'
  1542  00FF58  5F                 	db	95	;'_'
  1543  00FF59  74                 	db	116	;'t'
  1544  00FF5A  69                 	db	105	;'i'
  1545  00FF5B  6D                 	db	109	;'m'
  1546  00FF5C  65                 	db	101	;'e'
  1547  00FF5D  00                 	db	0
  1548  00FF5E                     STR_104:
  1549  00FF5E  53                 	db	83	;'S'
  1550  00FF5F  65                 	db	101	;'e'
  1551  00FF60  74                 	db	116	;'t'
  1552  00FF61  74                 	db	116	;'t'
  1553  00FF62  69                 	db	105	;'i'
  1554  00FF63  6E                 	db	110	;'n'
  1555  00FF64  67                 	db	103	;'g'
  1556  00FF65  73                 	db	115	;'s'
  1557  00FF66  00                 	db	0
  1558  00FF67                     STR_54:
  1559  00FF67  52                 	db	82	;'R'
  1560  00FF68  45                 	db	69	;'E'
  1561  00FF69  53                 	db	83	;'S'
  1562  00FF6A  45                 	db	69	;'E'
  1563  00FF6B  54                 	db	84	;'T'
  1564  00FF6C  28                 	db	40
  1565  00FF6D  29                 	db	41
  1566  00FF6E  3B                 	db	59	;';'
  1567  00FF6F  00                 	db	0
  1568  00FF70                     STR_55:
  1569  00FF70  62                 	db	98	;'b'
  1570  00FF71  6F                 	db	111	;'o'
  1571  00FF72  6F                 	db	111	;'o'
  1572  00FF73  74                 	db	116	;'t'
  1573  00FF74  6C                 	db	108	;'l'
  1574  00FF75  6F                 	db	111	;'o'
  1575  00FF76  61                 	db	97	;'a'
  1576  00FF77  64                 	db	100	;'d'
  1577  00FF78  00                 	db	0
  1578  00FF79                     STR_15:
  1579  00FF79  20                 	db	32
  1580  00FF7A  20                 	db	32
  1581  00FF7B  20                 	db	32
  1582  00FF7C  20                 	db	32
  1583  00FF7D  20                 	db	32
  1584  00FF7E  20                 	db	32
  1585  00FF7F  20                 	db	32
  1586  00FF80  20                 	db	32
  1587  00FF81  00                 	db	0
  1588  00FF82                     STR_24:
  1589  00FF82  09                 	db	9
  1590  00FF83  65                 	db	101	;'e'
  1591  00FF84  72                 	db	114	;'r'
  1592  00FF85  72                 	db	114	;'r'
  1593  00FF86  6F                 	db	111	;'o'
  1594  00FF87  72                 	db	114	;'r'
  1595  00FF88  0A                 	db	10
  1596  00FF89  00                 	db	0
  1597  00FF8A                     STR_118:
  1598  00FF8A  28                 	db	40
  1599  00FF8B  6E                 	db	110	;'n'
  1600  00FF8C  75                 	db	117	;'u'
  1601  00FF8D  6C                 	db	108	;'l'
  1602  00FF8E  6C                 	db	108	;'l'
  1603  00FF8F  29                 	db	41
  1604  00FF90  00                 	db	0
  1605  00FF91                     STR_40:
  1606  00FF91  73                 	db	115	;'s'
  1607  00FF92  65                 	db	101	;'e'
  1608  00FF93  63                 	db	99	;'c'
  1609  00FF94  6F                 	db	111	;'o'
  1610  00FF95  6E                 	db	110	;'n'
  1611  00FF96  64                 	db	100	;'d'
  1612  00FF97  00                 	db	0
  1613  00FF98                     STR_38:
  1614  00FF98  6D                 	db	109	;'m'
  1615  00FF99  69                 	db	105	;'i'
  1616  00FF9A  6E                 	db	110	;'n'
  1617  00FF9B  75                 	db	117	;'u'
  1618  00FF9C  74                 	db	116	;'t'
  1619  00FF9D  65                 	db	101	;'e'
  1620  00FF9E  00                 	db	0
  1621  00FF9F                     STR_97:
  1622  00FF9F  20                 	db	32
  1623  00FFA0  20                 	db	32
  1624  00FFA1  30                 	db	48	;'0'
  1625  00FFA2  20                 	db	32
  1626  00FFA3  20                 	db	32
  1627  00FFA4  00                 	db	0
  1628  00FFA5                     STR_80:
  1629  00FFA5  20                 	db	32
  1630  00FFA6  4F                 	db	79	;'O'
  1631  00FFA7  4E                 	db	78	;'N'
  1632  00FFA8  20                 	db	32
  1633  00FFA9  20                 	db	32
  1634  00FFAA  00                 	db	0
  1635  00FFAB                     STR_81:
  1636  00FFAB  20                 	db	32
  1637  00FFAC  4F                 	db	79	;'O'
  1638  00FFAD  46                 	db	70	;'F'
  1639  00FFAE  46                 	db	70	;'F'
  1640  00FFAF  20                 	db	32
  1641  00FFB0  00                 	db	0
  1642  00FFB1                     STR_96:
  1643  00FFB1  20                 	db	32
  1644  00FFB2  79                 	db	121	;'y'
  1645  00FFB3  65                 	db	101	;'e'
  1646  00FFB4  74                 	db	116	;'t'
  1647  00FFB5  20                 	db	32
  1648  00FFB6  00                 	db	0
  1649  00FFB7                     STR_70:
  1650  00FFB7  25                 	db	37
  1651  00FFB8  73                 	db	115	;'s'
  1652  00FFB9  20                 	db	32
  1653  00FFBA  25                 	db	37
  1654  00FFBB  73                 	db	115	;'s'
  1655  00FFBC  00                 	db	0
  1656  00FFBD                     STR_59:
  1657  00FFBD  74                 	db	116	;'t'
  1658  00FFBE  6F                 	db	111	;'o'
  1659  00FFBF  75                 	db	117	;'u'
  1660  00FFC0  63                 	db	99	;'c'
  1661  00FFC1  68                 	db	104	;'h'
  1662  00FFC2  00                 	db	0
  1663  00FFC3                     STR_64:
  1664  00FFC3  72                 	db	114	;'r'
  1665  00FFC4  65                 	db	101	;'e'
  1666  00FFC5  73                 	db	115	;'s'
  1667  00FFC6  65                 	db	101	;'e'
  1668  00FFC7  74                 	db	116	;'t'
  1669  00FFC8  00                 	db	0
  1670  00FFC9                     STR_32:
  1671  00FFC9  6D                 	db	109	;'m'
  1672  00FFCA  6F                 	db	111	;'o'
  1673  00FFCB  6E                 	db	110	;'n'
  1674  00FFCC  74                 	db	116	;'t'
  1675  00FFCD  68                 	db	104	;'h'
  1676  00FFCE  00                 	db	0
  1677  00FFCF                     STR_51:
  1678  00FFCF  68                 	db	104	;'h'
  1679  00FFD0  65                 	db	101	;'e'
  1680  00FFD1  6C                 	db	108	;'l'
  1681  00FFD2  70                 	db	112	;'p'
  1682  00FFD3  00                 	db	0
  1683  00FFD4                     STR_61:
  1684  00FFD4  69                 	db	105	;'i'
  1685  00FFD5  6E                 	db	110	;'n'
  1686  00FFD6  69                 	db	105	;'i'
  1687  00FFD7  74                 	db	116	;'t'
  1688  00FFD8  00                 	db	0
  1689  00FFD9                     STR_30:
  1690  00FFD9  79                 	db	121	;'y'
  1691  00FFDA  65                 	db	101	;'e'
  1692  00FFDB  61                 	db	97	;'a'
  1693  00FFDC  72                 	db	114	;'r'
  1694  00FFDD  00                 	db	0
  1695  00FFDE                     STR_36:
  1696  00FFDE  68                 	db	104	;'h'
  1697  00FFDF  6F                 	db	111	;'o'
  1698  00FFE0  75                 	db	117	;'u'
  1699  00FFE1  72                 	db	114	;'r'
  1700  00FFE2  00                 	db	0
  1701  00FFE3                     STR_19:
  1702  00FFE3  08                 	db	8
  1703  00FFE4  20                 	db	32
  1704  00FFE5  08                 	db	8
  1705  00FFE6  00                 	db	0
  1706  00FFE7                     STR_34:
  1707  00FFE7  64                 	db	100	;'d'
  1708  00FFE8  61                 	db	97	;'a'
  1709  00FFE9  79                 	db	121	;'y'
  1710  00FFEA  00                 	db	0
  1711  00FFEB                     STR_56:
  1712  00FFEB  6F                 	db	111	;'o'
  1713  00FFEC  64                 	db	100	;'d'
  1714  00FFED  00                 	db	0
  1715  00FFEE                     STR_27:
  1716  00FFEE  61                 	db	97	;'a'
  1717  00FFEF  74                 	db	116	;'t'
  1718  00FFF0  00                 	db	0
  1719  00FFF1                     STR_52:
  1720  00FFF1  3F                 	db	63	;'?'
  1721  00FFF2  00                 	db	0
  1722  00FFF3                     STR_31:
  1723  00FFF3  4D                 	db	77	;'M'
  1724  00FFF4  00                 	db	0
  1725  00FFF5                     STR_37:
  1726  00FFF5  6D                 	db	109	;'m'
  1727  00FFF6  00                 	db	0
  1728  00FFF7                     STR_13:
  1729  00FFF7  28                 	db	40
  1730  00FFF8  00                 	db	0
  1731  00FFF9                     STR_9:
  1732  00FFF9  2D                 	db	45
  1733  00FFFA  00                 	db	0
  1734  00FFFB                     STR_4:
  1735  00FFFB  2F                 	db	47
  1736  00FFFC  00                 	db	0
  1737  00FFFD                     STR_7:
  1738  00FFFD  3A                 	db	58	;':'
  1739  00FFFE  00                 	db	0
  1740  0000                     
  1741                           ; #config settings
  1742  00FFFF  00                 	db	0	; dummy byte at the end
  1743  0000                     
  1744                           	psect	cinit
  1745  015CE6                     __pcinit:
  1746                           	opt stack 0
  1747  015CE6                     start_initialization:
  1748                           	opt stack 0
  1749  015CE6                     __initialization:
  1750                           	opt stack 0
  1751                           
  1752                           ; Clear objects allocated to BIGRAMl (1800 bytes)
  1753  015CE6  EE05  F069         	lfsr	0,__pbssBIGRAMl
  1754  015CEA  EE17 F008          	lfsr	1,1800
  1755  015CEE                     clear_0:
  1756  015CEE  6AEE               	clrf	postinc0,c
  1757  015CF0  50E5               	movf	postdec1,w,c
  1758  015CF2  50E1               	movf	fsr1l,w,c
  1759  015CF4  E1FC               	bnz	clear_0
  1760  015CF6  50E2               	movf	fsr1h,w,c
  1761  015CF8  E1FA               	bnz	clear_0
  1762                           
  1763                           ; Clear objects allocated to BANK4 (200 bytes)
  1764  015CFA  EE04  F000         	lfsr	0,__pbssBANK4
  1765  015CFE  0EC8               	movlw	200
  1766  015D00                     clear_1:
  1767  015D00  6AEE               	clrf	postinc0,c
  1768  015D02  06E8               	decf	wreg,f,c
  1769  015D04  E1FD               	bnz	clear_1
  1770                           
  1771                           ; Clear objects allocated to BANK3 (228 bytes)
  1772  015D06  EE03  F000         	lfsr	0,__pbssBANK3
  1773  015D0A  0EE4               	movlw	228
  1774  015D0C                     clear_2:
  1775  015D0C  6AEE               	clrf	postinc0,c
  1776  015D0E  06E8               	decf	wreg,f,c
  1777  015D10  E1FD               	bnz	clear_2
  1778                           
  1779                           ; Clear objects allocated to BANK2 (208 bytes)
  1780  015D12  EE02  F000         	lfsr	0,__pbssBANK2
  1781  015D16  0ED0               	movlw	208
  1782  015D18                     clear_3:
  1783  015D18  6AEE               	clrf	postinc0,c
  1784  015D1A  06E8               	decf	wreg,f,c
  1785  015D1C  E1FD               	bnz	clear_3
  1786                           
  1787                           ; Clear objects allocated to BANK1 (146 bytes)
  1788  015D1E  EE01  F000         	lfsr	0,__pbssBANK1
  1789  015D22  0E92               	movlw	146
  1790  015D24                     clear_4:
  1791  015D24  6AEE               	clrf	postinc0,c
  1792  015D26  06E8               	decf	wreg,f,c
  1793  015D28  E1FD               	bnz	clear_4
  1794                           
  1795                           ; Clear objects allocated to BANK0 (26 bytes)
  1796  015D2A  EE00  F0E6         	lfsr	0,__pbssBANK0
  1797  015D2E  0E1A               	movlw	26
  1798  015D30                     clear_5:
  1799  015D30  6AEE               	clrf	postinc0,c
  1800  015D32  06E8               	decf	wreg,f,c
  1801  015D34  E1FD               	bnz	clear_5
  1802                           
  1803                           ; Clear objects allocated to COMRAM (44 bytes)
  1804  015D36  EE00  F001         	lfsr	0,__pbssCOMRAM
  1805  015D3A  0E2C               	movlw	44
  1806  015D3C                     clear_6:
  1807  015D3C  6AEE               	clrf	postinc0,c
  1808  015D3E  06E8               	decf	wreg,f,c
  1809  015D40  E1FD               	bnz	clear_6
  1810                           
  1811                           ; Initialize objects allocated to BANK1 (5 bytes)
  1812                           ; load TBLPTR registers with __pidataBANK1
  1813  015D42  0EC2               	movlw	low __pidataBANK1
  1814  015D44  6EF6               	movwf	tblptrl,c
  1815  015D46  0E6C               	movlw	high __pidataBANK1
  1816  015D48  6EF7               	movwf	tblptrh,c
  1817  015D4A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1818  015D4C  6EF8               	movwf	tblptru,c
  1819  015D4E  EE01  F0E2         	lfsr	0,__pdataBANK1
  1820  015D52  EE10 F005          	lfsr	1,5
  1821  015D56                     copy_data0:
  1822  015D56  0009               	tblrd		*+
  1823  015D58  CFF5 FFEE          	movff	tablat,postinc0
  1824  015D5C  50E5               	movf	postdec1,w,c
  1825  015D5E  50E1               	movf	fsr1l,w,c
  1826  015D60  E1FA               	bnz	copy_data0
  1827  015D62                     end_of_initialization:
  1828                           	opt stack 0
  1829  015D62                     __end_of__initialization:
  1830                           	opt stack 0
  1831  015D62  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1832  015D64  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1833  015D66  0100               	movlb	0
  1834  015D68  EF22  F0B0         	goto	_main	;jump to C main() function
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           postdec1	equ	0xFE5
  1842                           fsr1h	equ	0xFE2
  1843                           fsr1l	equ	0xFE1
  1844                           
  1845                           	psect	bssCOMRAM
  1846  000001                     __pbssCOMRAM:
  1847                           	opt stack 0
  1848  000001                     _ep_data_in:
  1849                           	opt stack 0
  1850  000001                     	ds	3
  1851  000004                     _ep_data_out:
  1852                           	opt stack 0
  1853  000004                     	ds	3
  1854  000007                     _CDCDataOutHandle:
  1855                           	opt stack 0
  1856  000007                     	ds	2
  1857  000009                     _pBDTEntryEP0OutCurrent:
  1858                           	opt stack 0
  1859  000009                     	ds	2
  1860  00000B                     _pBDTEntryEP0OutNext:
  1861                           	opt stack 0
  1862  00000B                     	ds	2
  1863  00000D                     _BothEP0OutUOWNsSet:
  1864                           	opt stack 0
  1865  00000D                     	ds	1
  1866  00000E                     _I2C_sent_flag:
  1867                           	opt stack 0
  1868  00000E                     	ds	1
  1869  00000F                     _RemoteWakeup:
  1870                           	opt stack 0
  1871  00000F                     	ds	1
  1872  000010                     _USBDeferINDataStagePackets:
  1873                           	opt stack 0
  1874  000010                     	ds	1
  1875  000011                     _USBDeferOUTDataStagePackets:
  1876                           	opt stack 0
  1877  000011                     	ds	1
  1878  000012                     _USBDeferStatusStagePacket:
  1879                           	opt stack 0
  1880  000012                     	ds	1
  1881  000013                     _USBDeviceState:
  1882                           	opt stack 0
  1883  000013                     	ds	1
  1884  000014                     _USBStatusStageEnabledFlag1:
  1885                           	opt stack 0
  1886  000014                     	ds	1
  1887  000015                     _USBStatusStageEnabledFlag2:
  1888                           	opt stack 0
  1889  000015                     	ds	1
  1890  000016                     _USBStatusStageTimeoutCounter:
  1891                           	opt stack 0
  1892  000016                     	ds	1
  1893  000017                     _cdc_mem_type:
  1894                           	opt stack 0
  1895  000017                     	ds	1
  1896  000018                     _cdc_rx_len:
  1897                           	opt stack 0
  1898  000018                     	ds	1
  1899  000019                     _cdc_trf_state:
  1900                           	opt stack 0
  1901  000019                     	ds	1
  1902  00001A                     _cdc_tx_len:
  1903                           	opt stack 0
  1904  00001A                     	ds	1
  1905  00001B                     _controlTransferState:
  1906                           	opt stack 0
  1907  00001B                     	ds	1
  1908  00001C                     _ctmu_ratio:
  1909                           	opt stack 0
  1910  00001C                     	ds	1
  1911  00001D                     _data_item:
  1912                           	opt stack 0
  1913  00001D                     	ds	1
  1914  00001E                     _endpoint_number:
  1915                           	opt stack 0
  1916  00001E                     	ds	1
  1917  00001F                     _print_item:
  1918                           	opt stack 0
  1919  00001F                     	ds	1
  1920  000020                     _settings_item:
  1921                           	opt stack 0
  1922  000020                     	ds	1
  1923  000021                     _shortPacketStatus:
  1924                           	opt stack 0
  1925  000021                     	ds	1
  1926  000022                     _time_change_flag:
  1927                           	opt stack 0
  1928  000022                     	ds	1
  1929  000023                     _lcd_tx:
  1930                           	opt stack 0
  1931  000023                     	ds	8
  1932  00002B                     _USBActiveConfiguration:
  1933                           	opt stack 0
  1934  00002B                     	ds	1
  1935  00002C                     _USTATcopy:
  1936                           	opt stack 0
  1937  00002C                     	ds	1
  1938                           tblptru	equ	0xFF8
  1939                           tblptrh	equ	0xFF7
  1940                           tblptrl	equ	0xFF6
  1941                           tablat	equ	0xFF5
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1h	equ	0xFE2
  1946                           fsr1l	equ	0xFE1
  1947                           
  1948                           	psect	bssBANK0
  1949  0000E6                     __pbssBANK0:
  1950                           	opt stack 0
  1951  0000E6                     _outPipes:
  1952                           	opt stack 0
  1953  0000E6                     	ds	9
  1954  0000EF                     _inPipes:
  1955                           	opt stack 0
  1956  0000EF                     	ds	6
  1957  0000F5                     _pBDTEntryIn:
  1958                           	opt stack 0
  1959  0000F5                     	ds	6
  1960  0000FB                     _print_port:
  1961                           	opt stack 0
  1962  0000FB                     	ds	1
  1963  0000FC                     _ctmu_m:
  1964                           	opt stack 0
  1965  0000FC                     	ds	4
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1h	equ	0xFE2
  1974                           fsr1l	equ	0xFE1
  1975                           
  1976                           	psect	bssBANK1
  1977  000100                     __pbssBANK1:
  1978                           	opt stack 0
  1979  000100                     _pBDTEntryOut:
  1980                           	opt stack 0
  1981  000100                     	ds	6
  1982  000106                     LED_indicator@cnt:
  1983                           	opt stack 0
  1984  000106                     	ds	3
  1985  000109                     _pCDCDst:
  1986                           	opt stack 0
  1987  000109                     	ds	3
  1988  00010C                     _pCDCSrc:
  1989                           	opt stack 0
  1990  00010C                     	ds	3
  1991  00010F                     ST7032_task@wait:
  1992                           	opt stack 0
  1993  00010F                     	ds	2
  1994  000111                     USBCBSendResume@delay_count:
  1995                           	opt stack 0
  1996  000111                     	ds	2
  1997  000113                     _CDCDataInHandle:
  1998                           	opt stack 0
  1999  000113                     	ds	2
  2000  000115                     _ctmu_value_m:
  2001                           	opt stack 0
  2002  000115                     	ds	2
  2003  000117                     _pDst:
  2004                           	opt stack 0
  2005  000117                     	ds	2
  2006  000119                     epoch_to_caltime@day_cache:
  2007                           	opt stack 0
  2008  000119                     	ds	2
  2009  00011B                     millis_timer@cnt:
  2010                           	opt stack 0
  2011  00011B                     	ds	2
  2012  00011D                     ISR@cnt:
  2013                           	opt stack 0
  2014  00011D                     	ds	1
  2015  00011E                     ISR@cnt_t1:
  2016                           	opt stack 0
  2017  00011E                     	ds	1
  2018  00011F                     RTCC_task@prev_halfsec:
  2019                           	opt stack 0
  2020  00011F                     	ds	1
  2021  000120                     ST7032_task@st7032_state:
  2022                           	opt stack 0
  2023  000120                     	ds	1
  2024  000121                     _I2C_busy:
  2025                           	opt stack 0
  2026  000121                     	ds	1
  2027  000122                     _I2C_cfct_flag:
  2028                           	opt stack 0
  2029  000122                     	ds	1
  2030  000123                     _USBBusIsSuspended:
  2031                           	opt stack 0
  2032  000123                     	ds	1
  2033  000124                     _control_signal_bitmap:
  2034                           	opt stack 0
  2035  000124                     	ds	1
  2036  000125                     _ctmu_sampling_flag:
  2037                           	opt stack 0
  2038  000125                     	ds	1
  2039  000126                     _cut_time_flag:
  2040                           	opt stack 0
  2041  000126                     	ds	1
  2042  000127                     _display_flag:
  2043                           	opt stack 0
  2044  000127                     	ds	1
  2045  000128                     _integrate_flag:
  2046                           	opt stack 0
  2047  000128                     	ds	1
  2048  000129                     _settings_flag:
  2049                           	opt stack 0
  2050  000129                     	ds	1
  2051  00012A                     _st7032_state:
  2052                           	opt stack 0
  2053  00012A                     	ds	1
  2054  00012B                     _terminal_data_out:
  2055                           	opt stack 0
  2056  00012B                     	ds	1
  2057  00012C                     _terminal_data_out_flag:
  2058                           	opt stack 0
  2059  00012C                     	ds	1
  2060  00012D                     epoch_to_caltime@year_cache:
  2061                           	opt stack 0
  2062  00012D                     	ds	1
  2063  00012E                     settings_adjust_time@state:
  2064                           	opt stack 0
  2065  00012E                     	ds	1
  2066  00012F                     settings_auto_stop@state:
  2067                           	opt stack 0
  2068  00012F                     	ds	1
  2069  000130                     settings_integrating_reset@state:
  2070                           	opt stack 0
  2071  000130                     	ds	1
  2072  000131                     settings_led_indicator@state:
  2073                           	opt stack 0
  2074  000131                     	ds	1
  2075  000132                     settings_task@settings_state:
  2076                           	opt stack 0
  2077  000132                     	ds	1
  2078  000133                     sleep_task@sleep_flag:
  2079                           	opt stack 0
  2080  000133                     	ds	1
  2081  000134                     terminal_task@command_init:
  2082                           	opt stack 0
  2083  000134                     	ds	1
  2084  000135                     _port:
  2085                           	opt stack 0
  2086  000135                     	ds	69
  2087  00017A                     _now:
  2088                           	opt stack 0
  2089  00017A                     	ds	14
  2090  000188                     terminal_task@command:
  2091                           	opt stack 0
  2092  000188                     	ds	8
  2093  000190                     _USBAlternateInterface:
  2094                           	opt stack 0
  2095  000190                     	ds	2
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           postdec1	equ	0xFE5
  2103                           fsr1h	equ	0xFE2
  2104                           fsr1l	equ	0xFE1
  2105                           
  2106                           	psect	dataBANK1
  2107  0001E2                     __pdataBANK1:
  2108                           	opt stack 0
  2109  0001E2                     I2C_LCD_SetCursor@F8685:
  2110                           	opt stack 0
  2111  0001E2                     	ds	2
  2112  0001E4                     ST7032_cursor@F8665:
  2113                           	opt stack 0
  2114  0001E4                     	ds	2
  2115  0001E6                     epoch_to_caltime@month_cache:
  2116                           	opt stack 0
  2117  0001E6                     	ds	1
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           postdec1	equ	0xFE5
  2125                           fsr1h	equ	0xFE2
  2126                           fsr1l	equ	0xFE1
  2127                           
  2128                           	psect	bssBANK2
  2129  000200                     __pbssBANK2:
  2130                           	opt stack 0
  2131  000200                     _cdc_notice:
  2132                           	opt stack 0
  2133  000200                     	ds	10
  2134  00020A                     _BaudRateGen:
  2135                           	opt stack 0
  2136  00020A                     	ds	4
  2137  00020E                     _ms:
  2138                           	opt stack 0
  2139  00020E                     	ds	4
  2140  000212                     LED_indicator@cntf:
  2141                           	opt stack 0
  2142  000212                     	ds	3
  2143  000215                     _display_char:
  2144                           	opt stack 0
  2145  000215                     	ds	40
  2146  00023D                     terminal_task@op0:
  2147                           	opt stack 0
  2148  00023D                     	ds	25
  2149  000256                     terminal_task@op1:
  2150                           	opt stack 0
  2151  000256                     	ds	25
  2152  00026F                     terminal_task@op2:
  2153                           	opt stack 0
  2154  00026F                     	ds	25
  2155  000288                     terminal_task@op3:
  2156                           	opt stack 0
  2157  000288                     	ds	25
  2158  0002A1                     _dummy_encapsulated_cmd_response:
  2159                           	opt stack 0
  2160  0002A1                     	ds	8
  2161  0002A9                     _uart_rx:
  2162                           	opt stack 0
  2163  0002A9                     	ds	8
  2164  0002B1                     _uart_tx:
  2165                           	opt stack 0
  2166  0002B1                     	ds	8
  2167  0002B9                     _usb_rx:
  2168                           	opt stack 0
  2169  0002B9                     	ds	8
  2170  0002C1                     _usb_tx:
  2171                           	opt stack 0
  2172  0002C1                     	ds	8
  2173  0002C9                     _line_coding:
  2174                           	opt stack 0
  2175  0002C9                     	ds	7
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           postdec1	equ	0xFE5
  2183                           fsr1h	equ	0xFE2
  2184                           fsr1l	equ	0xFE1
  2185                           
  2186                           	psect	bssBANK3
  2187  000300                     __pbssBANK3:
  2188                           	opt stack 0
  2189  000300                     hardware_init@usbrx:
  2190                           	opt stack 0
  2191  000300                     	ds	100
  2192  000364                     _cdc_data_rx:
  2193                           	opt stack 0
  2194  000364                     	ds	64
  2195  0003A4                     _cdc_data_tx:
  2196                           	opt stack 0
  2197  0003A4                     	ds	64
  2198                           tblptru	equ	0xFF8
  2199                           tblptrh	equ	0xFF7
  2200                           tblptrl	equ	0xFF6
  2201                           tablat	equ	0xFF5
  2202                           postinc0	equ	0xFEE
  2203                           wreg	equ	0xFE8
  2204                           postdec1	equ	0xFE5
  2205                           fsr1h	equ	0xFE2
  2206                           fsr1l	equ	0xFE1
  2207                           
  2208                           	psect	bssBANK4
  2209  000400                     __pbssBANK4:
  2210                           	opt stack 0
  2211  000400                     ST7032_init@buf:
  2212                           	opt stack 0
  2213  000400                     	ds	200
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           postinc0	equ	0xFEE
  2219                           wreg	equ	0xFE8
  2220                           postdec1	equ	0xFE5
  2221                           fsr1h	equ	0xFE2
  2222                           fsr1l	equ	0xFE1
  2223                           
  2224                           	psect	bssBIGRAMl
  2225  000569                     __pbssBIGRAMl:
  2226                           	opt stack 0
  2227  000569                     hardware_init@usbtx:
  2228                           	opt stack 0
  2229  000569                     	ds	1800
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           postdec1	equ	0xFE5
  2237                           fsr1h	equ	0xFE2
  2238                           fsr1l	equ	0xFE1
  2239                           
  2240                           	psect	cstackBANK5
  2241  000500                     __pcstackBANK5:
  2242                           	opt stack 0
  2243  000500                     terminal_task@buf:
  2244                           	opt stack 0
  2245                           
  2246                           ; 100 bytes @ 0x0
  2247  000500                     	ds	100
  2248  000564                     _terminal_task$7032:
  2249                           	opt stack 0
  2250                           
  2251                           ; 2 bytes @ 0x64
  2252  000564                     	ds	2
  2253  000566                     terminal_task@i_4539:
  2254                           	opt stack 0
  2255                           
  2256                           ; 1 bytes @ 0x66
  2257  000566                     	ds	1
  2258  000567                     terminal_task@ascii:
  2259                           	opt stack 0
  2260                           
  2261                           ; 1 bytes @ 0x67
  2262  000567                     	ds	1
  2263  000568                     terminal_task@i:
  2264                           	opt stack 0
  2265                           
  2266                           ; 1 bytes @ 0x68
  2267  000568                     	ds	1
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postdec1	equ	0xFE5
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           
  2278                           	psect	cstackBANK1
  2279  000192                     __pcstackBANK1:
  2280                           	opt stack 0
  2281  000192                     terminal_task@tx:
  2282                           	opt stack 0
  2283  000192                     display_LCD@str:
  2284                           	opt stack 0
  2285                           
  2286                           ; 40 bytes @ 0x0
  2287  000192                     	ds	2
  2288  000194                     terminal_task@rx:
  2289                           	opt stack 0
  2290                           
  2291                           ; 2 bytes @ 0x2
  2292  000194                     	ds	2
  2293  000196                     ??_terminal_task:
  2294                           
  2295                           ; 0 bytes @ 0x4
  2296  000196                     	ds	36
  2297  0001BA                     display_LCD@str_5583:
  2298                           	opt stack 0
  2299                           
  2300                           ; 20 bytes @ 0x28
  2301  0001BA                     	ds	20
  2302  0001CE                     _display_LCD$7034:
  2303                           	opt stack 0
  2304                           
  2305                           ; 4 bytes @ 0x3C
  2306  0001CE                     	ds	4
  2307  0001D2                     _display_LCD$7035:
  2308                           	opt stack 0
  2309                           
  2310                           ; 4 bytes @ 0x40
  2311  0001D2                     	ds	4
  2312  0001D6                     _display_LCD$7036:
  2313                           	opt stack 0
  2314                           
  2315                           ; 4 bytes @ 0x44
  2316  0001D6                     	ds	4
  2317  0001DA                     _display_LCD$7037:
  2318                           	opt stack 0
  2319                           
  2320                           ; 4 bytes @ 0x48
  2321  0001DA                     	ds	4
  2322  0001DE                     _display_LCD$7038:
  2323                           	opt stack 0
  2324                           
  2325                           ; 4 bytes @ 0x4C
  2326  0001DE                     	ds	4
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1h	equ	0xFE2
  2335                           fsr1l	equ	0xFE1
  2336                           
  2337                           	psect	cstackBANK0
  2338  000060                     __pcstackBANK0:
  2339                           	opt stack 0
  2340  000060                     ??_isdigit:
  2341  000060                     ??_I2C_IdleCheck:
  2342  000060                     ??_timer0_init:
  2343  000060                     ??_timer3_init:
  2344  000060                     ??_x_to_d:
  2345  000060                     ?_strcmp:
  2346                           	opt stack 0
  2347  000060                     ?_USBTransferOnePacket:
  2348                           	opt stack 0
  2349  000060                     ?_ADC:
  2350                           	opt stack 0
  2351  000060                     ?_ringbuf_num:
  2352                           	opt stack 0
  2353  000060                     ?___awdiv:
  2354                           	opt stack 0
  2355  000060                     ?___awmod:
  2356                           	opt stack 0
  2357  000060                     ?___lwmod:
  2358                           	opt stack 0
  2359  000060                     ?___lldiv:
  2360                           	opt stack 0
  2361  000060                     USBTransferOnePacket@dir:
  2362                           	opt stack 0
  2363  000060                     timer1_init@clock_select:
  2364                           	opt stack 0
  2365  000060                     ADC_init@p_ref:
  2366                           	opt stack 0
  2367  000060                     _is_usb_available$5114:
  2368                           	opt stack 0
  2369  000060                     OUT@value:
  2370                           	opt stack 0
  2371  000060                     ANALOG_IN@b:
  2372                           	opt stack 0
  2373  000060                     LED_output@value:
  2374                           	opt stack 0
  2375  000060                     putUSBUSART@data:
  2376                           	opt stack 0
  2377  000060                     ringbuf_init@rb:
  2378                           	opt stack 0
  2379  000060                     ringbuf_num@rb:
  2380                           	opt stack 0
  2381  000060                     ringbuf_delete@rb:
  2382                           	opt stack 0
  2383  000060                     RTCC_adjust_time_toggle@tm:
  2384                           	opt stack 0
  2385  000060                     RTCC_adjust_time_cursor@tm:
  2386                           	opt stack 0
  2387  000060                     display@str0:
  2388                           	opt stack 0
  2389  000060                     ___awdiv@dividend:
  2390                           	opt stack 0
  2391  000060                     ___awmod@dividend:
  2392                           	opt stack 0
  2393  000060                     ___lwmod@dividend:
  2394                           	opt stack 0
  2395  000060                     memset@p1:
  2396                           	opt stack 0
  2397  000060                     strcat@to:
  2398                           	opt stack 0
  2399  000060                     strcmp@s1:
  2400                           	opt stack 0
  2401  000060                     strcpy@to:
  2402                           	opt stack 0
  2403  000060                     ___lldiv@dividend:
  2404                           	opt stack 0
  2405                           
  2406                           ; 4 bytes @ 0x0
  2407  000060                     	ds	1
  2408  000061                     ??_timer1_init:
  2409  000061                     I2C_IdleCheck@mask:
  2410                           	opt stack 0
  2411  000061                     timer0_init@prescaler:
  2412                           	opt stack 0
  2413  000061                     timer3_init@prescaler:
  2414                           	opt stack 0
  2415  000061                     x_to_d@hex:
  2416                           	opt stack 0
  2417  000061                     OUT@b:
  2418                           	opt stack 0
  2419  000061                     LED_output@b:
  2420                           	opt stack 0
  2421  000061                     _isdigit$6420:
  2422                           	opt stack 0
  2423  000061                     USBTransferOnePacket@data:
  2424                           	opt stack 0
  2425                           
  2426                           ; 2 bytes @ 0x1
  2427  000061                     	ds	1
  2428  000062                     ??_ADC:
  2429  000062                     ??_ringbuf_num:
  2430  000062                     putUSBUSART@length:
  2431                           	opt stack 0
  2432  000062                     I2C_Start@rw:
  2433                           	opt stack 0
  2434  000062                     I2C_Send@data:
  2435                           	opt stack 0
  2436  000062                     timer1_init@prescaler:
  2437                           	opt stack 0
  2438  000062                     integrate_time@i:
  2439                           	opt stack 0
  2440  000062                     isdigit@c:
  2441                           	opt stack 0
  2442  000062                     ringbuf_init@internal_buf:
  2443                           	opt stack 0
  2444  000062                     RTCC_to_caltime@tm:
  2445                           	opt stack 0
  2446  000062                     display@str1:
  2447                           	opt stack 0
  2448  000062                     ___awdiv@divisor:
  2449                           	opt stack 0
  2450  000062                     ___awmod@divisor:
  2451                           	opt stack 0
  2452  000062                     ___lwmod@divisor:
  2453                           	opt stack 0
  2454  000062                     memset@c:
  2455                           	opt stack 0
  2456  000062                     strcat@from:
  2457                           	opt stack 0
  2458  000062                     strcmp@s2:
  2459                           	opt stack 0
  2460  000062                     strcpy@from:
  2461                           	opt stack 0
  2462                           
  2463                           ; 2 bytes @ 0x2
  2464  000062                     	ds	1
  2465  000063                     USBTransferOnePacket@len:
  2466                           	opt stack 0
  2467  000063                     I2C_Start@adrs:
  2468                           	opt stack 0
  2469  000063                     ADC@ch:
  2470                           	opt stack 0
  2471                           
  2472                           ; 1 bytes @ 0x3
  2473  000063                     	ds	1
  2474  000064                     ??_strcmp:
  2475  000064                     USBTransferOnePacket@ep:
  2476                           	opt stack 0
  2477  000064                     RTCC_to_caltime@dumy:
  2478                           	opt stack 0
  2479  000064                     I2C_LCD_Command@c:
  2480                           	opt stack 0
  2481  000064                     display@item:
  2482                           	opt stack 0
  2483  000064                     ___awdiv@counter:
  2484                           	opt stack 0
  2485  000064                     ___awmod@counter:
  2486                           	opt stack 0
  2487  000064                     ___lwmod@counter:
  2488                           	opt stack 0
  2489  000064                     ringbuf_init@bufsize:
  2490                           	opt stack 0
  2491  000064                     I2C_LCD_Puts@s:
  2492                           	opt stack 0
  2493  000064                     memset@n:
  2494                           	opt stack 0
  2495  000064                     strcat@cp:
  2496                           	opt stack 0
  2497  000064                     strcpy@cp:
  2498                           	opt stack 0
  2499  000064                     ___lldiv@divisor:
  2500                           	opt stack 0
  2501                           
  2502                           ; 4 bytes @ 0x4
  2503  000064                     	ds	1
  2504  000065                     I2C_LCD_Command@ans:
  2505                           	opt stack 0
  2506  000065                     display@i:
  2507                           	opt stack 0
  2508  000065                     ___awdiv@sign:
  2509                           	opt stack 0
  2510  000065                     ___awmod@sign:
  2511                           	opt stack 0
  2512  000065                     strcmp@r:
  2513                           	opt stack 0
  2514  000065                     USBTransferOnePacket@handle:
  2515                           	opt stack 0
  2516                           
  2517                           ; 2 bytes @ 0x5
  2518  000065                     	ds	1
  2519  000066                     ??_I2C_LCD_Clear:
  2520  000066                     ??_I2C_LCD_Puts:
  2521  000066                     ??_settings_auto_stop:
  2522  000066                     ??_settings_led_indicator:
  2523  000066                     month_length@month:
  2524                           	opt stack 0
  2525  000066                     I2C_LCD_SetCursor@row:
  2526                           	opt stack 0
  2527  000066                     port_button_task@i:
  2528                           	opt stack 0
  2529  000066                     ___awdiv@quotient:
  2530                           	opt stack 0
  2531  000066                     memset@p:
  2532                           	opt stack 0
  2533                           
  2534                           ; 2 bytes @ 0x6
  2535  000066                     	ds	1
  2536  000067                     ??_CDCTxService:
  2537  000067                     ??_month_length:
  2538  000067                     ??_I2C_LCD_init:
  2539  000067                     getsUSBUSART@buffer:
  2540                           	opt stack 0
  2541  000067                     I2C_LCD_SetCursor@row_offsets:
  2542                           	opt stack 0
  2543  000067                     I2C_LCD_Puts@ans:
  2544                           	opt stack 0
  2545  000067                     settings_auto_stop@str:
  2546                           	opt stack 0
  2547  000067                     settings_led_indicator@str:
  2548                           	opt stack 0
  2549                           
  2550                           ; 20 bytes @ 0x7
  2551  000067                     	ds	1
  2552  000068                     USBDeviceInit@i:
  2553                           	opt stack 0
  2554  000068                     d_to_x@dec:
  2555                           	opt stack 0
  2556  000068                     I2C_LCD_init@i:
  2557                           	opt stack 0
  2558  000068                     _CDCTxService$2005:
  2559                           	opt stack 0
  2560  000068                     ringbuf_put@rb:
  2561                           	opt stack 0
  2562  000068                     ringbuf_pop@rb:
  2563                           	opt stack 0
  2564  000068                     ringbuf_backspace@rb:
  2565                           	opt stack 0
  2566  000068                     ___lldiv@quotient:
  2567                           	opt stack 0
  2568                           
  2569                           ; 4 bytes @ 0x8
  2570  000068                     	ds	1
  2571  000069                     getsUSBUSART@len:
  2572                           	opt stack 0
  2573  000069                     I2C_LCD_SetCursor@col:
  2574                           	opt stack 0
  2575  000069                     I2C_LCD_init@i_4452:
  2576                           	opt stack 0
  2577  000069                     caltime_to_RTCC@tm:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0x9
  2581  000069                     	ds	1
  2582  00006A                     ??_getsUSBUSART:
  2583  00006A                     ??_ringbuf_pop:
  2584  00006A                     ??_ringbuf_backspace:
  2585  00006A                     CDCTxService@i:
  2586                           	opt stack 0
  2587  00006A                     ringbuf_put@asciicode:
  2588                           	opt stack 0
  2589  00006A                     sleep_task@i:
  2590                           	opt stack 0
  2591  00006A                     settings_integrating_reset@str:
  2592                           	opt stack 0
  2593                           
  2594                           ; 20 bytes @ 0xA
  2595  00006A                     	ds	1
  2596  00006B                     ??_ringbuf_put:
  2597  00006B                     CDCTxService@byte_to_send:
  2598                           	opt stack 0
  2599  00006B                     month_length@year:
  2600                           	opt stack 0
  2601  00006B                     _getsUSBUSART$1957:
  2602                           	opt stack 0
  2603                           
  2604                           ; 2 bytes @ 0xB
  2605  00006B                     	ds	1
  2606  00006C                     ___lldiv@counter:
  2607                           	opt stack 0
  2608  00006C                     put_string_usb@s:
  2609                           	opt stack 0
  2610                           
  2611                           ; 2 bytes @ 0xC
  2612  00006C                     	ds	1
  2613  00006D                     ??_integrate_current:
  2614  00006D                     ?_CTMU_read:
  2615                           	opt stack 0
  2616  00006D                     ?_get_string_usb:
  2617                           	opt stack 0
  2618  00006D                     ?___lmul:
  2619                           	opt stack 0
  2620  00006D                     ?___llmod:
  2621                           	opt stack 0
  2622  00006D                     get_string_usb@s:
  2623                           	opt stack 0
  2624  00006D                     ___lmul@multiplier:
  2625                           	opt stack 0
  2626  00006D                     ___llmod@dividend:
  2627                           	opt stack 0
  2628                           
  2629                           ; 4 bytes @ 0xD
  2630  00006D                     	ds	1
  2631  00006E                     ringbuf_pop@ret:
  2632                           	opt stack 0
  2633  00006E                     put_string_usb@len:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0xE
  2637  00006E                     	ds	1
  2638  00006F                     ??_CTMU_read:
  2639  00006F                     integrate_current@i:
  2640                           	opt stack 0
  2641  00006F                     ringbuf_put_str@rb:
  2642                           	opt stack 0
  2643  00006F                     get_string_usb@len:
  2644                           	opt stack 0
  2645                           
  2646                           ; 2 bytes @ 0xF
  2647  00006F                     	ds	1
  2648  000070                     CTMU_read@ch:
  2649                           	opt stack 0
  2650                           
  2651                           ; 1 bytes @ 0x10
  2652  000070                     	ds	1
  2653  000071                     ??_get_string_usb:
  2654  000071                     ringbuf_put_str@str:
  2655                           	opt stack 0
  2656  000071                     CTMU_read@sum:
  2657                           	opt stack 0
  2658  000071                     ___lmul@multiplicand:
  2659                           	opt stack 0
  2660  000071                     ___llmod@divisor:
  2661                           	opt stack 0
  2662                           
  2663                           ; 4 bytes @ 0x11
  2664  000071                     	ds	1
  2665  000072                     get_string_usb@rx_len:
  2666                           	opt stack 0
  2667                           
  2668                           ; 2 bytes @ 0x12
  2669  000072                     	ds	1
  2670  000073                     
  2671                           ; 0 bytes @ 0x13
  2672  000073                     	ds	1
  2673  000074                     USB_task@rx_len:
  2674                           	opt stack 0
  2675                           
  2676                           ; 2 bytes @ 0x14
  2677  000074                     	ds	1
  2678  000075                     CTMU_read@i:
  2679                           	opt stack 0
  2680  000075                     ___llmod@counter:
  2681                           	opt stack 0
  2682  000075                     ___lmul@product:
  2683                           	opt stack 0
  2684                           
  2685                           ; 4 bytes @ 0x15
  2686  000075                     	ds	1
  2687  000076                     ?___wmul:
  2688                           	opt stack 0
  2689  000076                     USB_task@data:
  2690                           	opt stack 0
  2691  000076                     ___wmul@multiplier:
  2692                           	opt stack 0
  2693                           
  2694                           ; 2 bytes @ 0x16
  2695  000076                     	ds	2
  2696  000078                     ___wmul@multiplicand:
  2697                           	opt stack 0
  2698                           
  2699                           ; 2 bytes @ 0x18
  2700  000078                     	ds	1
  2701  000079                     ?_get_quot_rem:
  2702                           	opt stack 0
  2703  000079                     get_quot_rem@quot:
  2704                           	opt stack 0
  2705  000079                     caltime_to_epoch@tm:
  2706                           	opt stack 0
  2707                           
  2708                           ; 2 bytes @ 0x19
  2709  000079                     	ds	1
  2710  00007A                     ___wmul@product:
  2711                           	opt stack 0
  2712                           
  2713                           ; 2 bytes @ 0x1A
  2714  00007A                     	ds	1
  2715  00007B                     ??_caltime_to_epoch:
  2716  00007B                     get_quot_rem@div:
  2717                           	opt stack 0
  2718  00007B                     settings_auto_stop@str_6105:
  2719                           	opt stack 0
  2720  00007B                     settings_led_indicator@str_6122:
  2721                           	opt stack 0
  2722                           
  2723                           ; 20 bytes @ 0x1B
  2724  00007B                     	ds	1
  2725  00007C                     ??_Auto_cut:
  2726  00007C                     ?_atoi:
  2727                           	opt stack 0
  2728  00007C                     ?___lwdiv:
  2729                           	opt stack 0
  2730  00007C                     atoi@s:
  2731                           	opt stack 0
  2732  00007C                     ___lwdiv@dividend:
  2733                           	opt stack 0
  2734                           
  2735                           ; 2 bytes @ 0x1C
  2736  00007C                     	ds	1
  2737  00007D                     get_quot_rem@num:
  2738                           	opt stack 0
  2739                           
  2740                           ; 4 bytes @ 0x1D
  2741  00007D                     	ds	1
  2742  00007E                     ??_atoi:
  2743  00007E                     Auto_cut@i:
  2744                           	opt stack 0
  2745  00007E                     ___lwdiv@divisor:
  2746                           	opt stack 0
  2747  00007E                     settings_integrating_reset@str_6139:
  2748                           	opt stack 0
  2749                           
  2750                           ; 20 bytes @ 0x1E
  2751  00007E                     	ds	1
  2752  00007F                     caltime_to_epoch@year:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0x1F
  2756  00007F                     	ds	1
  2757  000080                     caltime_to_epoch@month_3637:
  2758                           	opt stack 0
  2759  000080                     atoi@sign:
  2760                           	opt stack 0
  2761  000080                     ___lwdiv@counter:
  2762                           	opt stack 0
  2763                           
  2764                           ; 1 bytes @ 0x20
  2765  000080                     	ds	1
  2766  000081                     epoch_to_caltime@tm:
  2767                           	opt stack 0
  2768  000081                     atoi@a:
  2769                           	opt stack 0
  2770  000081                     ___lwdiv@quotient:
  2771                           	opt stack 0
  2772  000081                     caltime_to_epoch@epoch:
  2773                           	opt stack 0
  2774                           
  2775                           ; 4 bytes @ 0x21
  2776  000081                     	ds	2
  2777  000083                     ??_epoch_to_caltime:
  2778  000083                     ?_sprintf:
  2779                           	opt stack 0
  2780  000083                     ctmu_set_ratio@percentage:
  2781                           	opt stack 0
  2782  000083                     button_timer_interrupt@bt:
  2783                           	opt stack 0
  2784  000083                     ringbuf_put_num@rb:
  2785                           	opt stack 0
  2786  000083                     sprintf@sp:
  2787                           	opt stack 0
  2788                           
  2789                           ; 2 bytes @ 0x23
  2790  000083                     	ds	1
  2791  000084                     software_init@i:
  2792                           	opt stack 0
  2793                           
  2794                           ; 1 bytes @ 0x24
  2795  000084                     	ds	1
  2796  000085                     button_timer_interrupt@sw_value:
  2797                           	opt stack 0
  2798  000085                     caltime_to_epoch@month:
  2799                           	opt stack 0
  2800  000085                     ringbuf_put_num@value:
  2801                           	opt stack 0
  2802  000085                     epoch_to_caltime@day_since_epoch:
  2803                           	opt stack 0
  2804  000085                     sprintf@f:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x25
  2808  000085                     	ds	1
  2809  000086                     RTCC_from_RTCC@tm:
  2810                           	opt stack 0
  2811                           
  2812                           ; 2 bytes @ 0x26
  2813  000086                     	ds	1
  2814  000087                     ringbuf_put_num@digits:
  2815                           	opt stack 0
  2816  000087                     epoch_to_caltime@day:
  2817                           	opt stack 0
  2818                           
  2819                           ; 2 bytes @ 0x27
  2820  000087                     	ds	1
  2821  000088                     ringbuf_put_num@i:
  2822                           	opt stack 0
  2823                           
  2824                           ; 1 bytes @ 0x28
  2825  000088                     	ds	1
  2826  000089                     epoch_to_caltime@year:
  2827                           	opt stack 0
  2828  000089                     ringbuf_put_num@temp:
  2829                           	opt stack 0
  2830                           
  2831                           ; 2 bytes @ 0x29
  2832  000089                     	ds	1
  2833  00008A                     epoch_to_caltime@month:
  2834                           	opt stack 0
  2835                           
  2836                           ; 1 bytes @ 0x2A
  2837  00008A                     	ds	1
  2838  00008B                     epoch_to_caltime@num:
  2839                           	opt stack 0
  2840                           
  2841                           ; 4 bytes @ 0x2B
  2842  00008B                     	ds	4
  2843  00008F                     RTCC_from_caltime@tm:
  2844                           	opt stack 0
  2845  00008F                     RTCC_from_epoch@tm:
  2846                           	opt stack 0
  2847  00008F                     settings_auto_stop@strp:
  2848                           	opt stack 0
  2849  00008F                     settings_led_indicator@strp:
  2850                           	opt stack 0
  2851                           
  2852                           ; 2 bytes @ 0x2F
  2853  00008F                     	ds	2
  2854  000091                     RTCC_adjust_time_inc@tm:
  2855                           	opt stack 0
  2856  000091                     RTCC_adjust_time_dec@tm:
  2857                           	opt stack 0
  2858  000091                     settings_auto_stop@strp_6106:
  2859                           	opt stack 0
  2860  000091                     settings_led_indicator@strp_6123:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0x31
  2864  000091                     	ds	1
  2865  000092                     settings_integrating_reset@strp:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x32
  2869  000092                     	ds	1
  2870  000093                     ??_RTCC_adjust_time_inc:
  2871  000093                     ??_RTCC_adjust_time_dec:
  2872  000093                     settings_auto_stop@i:
  2873                           	opt stack 0
  2874  000093                     settings_led_indicator@i:
  2875                           	opt stack 0
  2876                           
  2877                           ; 1 bytes @ 0x33
  2878  000093                     	ds	1
  2879  000094                     settings_auto_stop@i_6107:
  2880                           	opt stack 0
  2881  000094                     settings_led_indicator@i_6124:
  2882                           	opt stack 0
  2883  000094                     settings_integrating_reset@strp_6140:
  2884                           	opt stack 0
  2885                           
  2886                           ; 2 bytes @ 0x34
  2887  000094                     	ds	1
  2888  000095                     settings_auto_stop@j:
  2889                           	opt stack 0
  2890  000095                     settings_led_indicator@j:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x35
  2894  000095                     	ds	1
  2895  000096                     settings_integrating_reset@i:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0x36
  2899  000096                     	ds	1
  2900  000097                     ??_sprintf:
  2901  000097                     RTCC_adjust_time_inc@i_3817:
  2902                           	opt stack 0
  2903  000097                     RTCC_adjust_time_dec@i_3847:
  2904                           	opt stack 0
  2905  000097                     settings_integrating_reset@i_6141:
  2906                           	opt stack 0
  2907                           
  2908                           ; 1 bytes @ 0x37
  2909  000097                     	ds	1
  2910  000098                     RTCC_adjust_time_inc@i:
  2911                           	opt stack 0
  2912  000098                     RTCC_adjust_time_dec@i:
  2913                           	opt stack 0
  2914  000098                     settings_integrating_reset@j:
  2915                           	opt stack 0
  2916                           
  2917                           ; 1 bytes @ 0x38
  2918  000098                     	ds	1
  2919  000099                     settings_task@item_change_flag:
  2920                           	opt stack 0
  2921                           
  2922                           ; 1 bytes @ 0x39
  2923  000099                     	ds	2
  2924  00009B                     sprintf@prec:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x3B
  2928  00009B                     	ds	2
  2929  00009D                     sprintf@cp:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x3D
  2933  00009D                     	ds	2
  2934  00009F                     sprintf@ap:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x3F
  2938  00009F                     	ds	2
  2939  0000A1                     sprintf@len:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x41
  2943  0000A1                     	ds	2
  2944  0000A3                     sprintf@val:
  2945                           	opt stack 0
  2946                           
  2947                           ; 4 bytes @ 0x43
  2948  0000A3                     	ds	4
  2949  0000A7                     sprintf@flag:
  2950                           	opt stack 0
  2951                           
  2952                           ; 1 bytes @ 0x47
  2953  0000A7                     	ds	1
  2954  0000A8                     sprintf@c:
  2955                           	opt stack 0
  2956                           
  2957                           ; 1 bytes @ 0x48
  2958  0000A8                     	ds	1
  2959  0000A9                     sprintf@width:
  2960                           	opt stack 0
  2961                           
  2962                           ; 2 bytes @ 0x49
  2963  0000A9                     	ds	2
  2964  0000AB                     display_dec@str:
  2965                           	opt stack 0
  2966  0000AB                     print_time@tx:
  2967                           	opt stack 0
  2968  0000AB                     data_out@tx:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x4B
  2972  0000AB                     	ds	2
  2973  0000AD                     display_dec@dec:
  2974                           	opt stack 0
  2975  0000AD                     print_time@str:
  2976                           	opt stack 0
  2977  0000AD                     data_out@str:
  2978                           	opt stack 0
  2979                           
  2980                           ; 30 bytes @ 0x4D
  2981  0000AD                     	ds	1
  2982  0000AE                     display_dec@edit:
  2983                           	opt stack 0
  2984                           
  2985                           ; 1 bytes @ 0x4E
  2986  0000AE                     	ds	1
  2987  0000AF                     display_dec@s:
  2988                           	opt stack 0
  2989                           
  2990                           ; 4 bytes @ 0x4F
  2991  0000AF                     	ds	4
  2992  0000B3                     display_time_1602@tm:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x53
  2996  0000B3                     	ds	2
  2997  0000B5                     display_time_1602@line0:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x55
  3001  0000B5                     	ds	2
  3002  0000B7                     display_time_1602@line1:
  3003                           	opt stack 0
  3004                           
  3005                           ; 2 bytes @ 0x57
  3006  0000B7                     	ds	2
  3007  0000B9                     ??_display_time_1602:
  3008                           
  3009                           ; 0 bytes @ 0x59
  3010  0000B9                     	ds	1
  3011  0000BA                     ??_display_LCD:
  3012                           
  3013                           ; 0 bytes @ 0x5A
  3014  0000BA                     	ds	17
  3015  0000CB                     data_out@i:
  3016                           	opt stack 0
  3017  0000CB                     terminal_at_hand@tx:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x6B
  3021  0000CB                     	ds	1
  3022  0000CC                     
  3023                           ; 0 bytes @ 0x6C
  3024  0000CC                     	ds	1
  3025  0000CD                     terminal_at_hand@hand:
  3026                           	opt stack 0
  3027                           
  3028                           ; 2 bytes @ 0x6D
  3029  0000CD                     	ds	2
  3030  0000CF                     terminal_at_hand@min:
  3031                           	opt stack 0
  3032                           
  3033                           ; 1 bytes @ 0x6F
  3034  0000CF                     	ds	1
  3035  0000D0                     terminal_at_hand@max:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x70
  3039  0000D0                     	ds	1
  3040  0000D1                     terminal_at_hand@value:
  3041                           	opt stack 0
  3042                           
  3043                           ; 1 bytes @ 0x71
  3044  0000D1                     	ds	1
  3045  0000D2                     terminal_time@tx:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x72
  3049  0000D2                     	ds	2
  3050  0000D4                     terminal_time@op0:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0x74
  3054  0000D4                     	ds	2
  3055  0000D6                     terminal_time@op1:
  3056                           	opt stack 0
  3057                           
  3058                           ; 2 bytes @ 0x76
  3059  0000D6                     	ds	2
  3060  0000D8                     terminal_time@op2:
  3061                           	opt stack 0
  3062                           
  3063                           ; 2 bytes @ 0x78
  3064  0000D8                     	ds	2
  3065  0000DA                     _terminal_time$7033:
  3066                           	opt stack 0
  3067                           
  3068                           ; 1 bytes @ 0x7A
  3069  0000DA                     	ds	1
  3070  0000DB                     terminal_operation@tx:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x7B
  3074  0000DB                     	ds	2
  3075  0000DD                     terminal_operation@op0:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0x7D
  3079  0000DD                     	ds	2
  3080  0000DF                     terminal_operation@op1:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x7F
  3084  0000DF                     	ds	2
  3085  0000E1                     terminal_operation@op2:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x81
  3089  0000E1                     	ds	2
  3090  0000E3                     terminal_operation@op3:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x83
  3094  0000E3                     	ds	2
  3095  0000E5                     terminal_operation@percentage:
  3096                           	opt stack 0
  3097                           
  3098                           ; 1 bytes @ 0x85
  3099  0000E5                     	ds	1
  3100  0000E6                     tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           postinc0	equ	0xFEE
  3105                           wreg	equ	0xFE8
  3106                           postdec1	equ	0xFE5
  3107                           fsr1h	equ	0xFE2
  3108                           fsr1l	equ	0xFE1
  3109                           
  3110                           ; 0 bytes @ 0x86
  3111                           
  3112                           	psect	cstackCOMRAM
  3113  00002D                     __pcstackCOMRAM:
  3114                           	opt stack 0
  3115  00002D                     ??_USBStdGetDscHandler:
  3116  00002D                     ??_USBStdGetStatusHandler:
  3117  00002D                     ?i2_USBTransferOnePacket:
  3118                           	opt stack 0
  3119  00002D                     ?i2___awdiv:
  3120                           	opt stack 0
  3121  00002D                     ?i2___lwdiv:
  3122                           	opt stack 0
  3123  00002D                     USBConfigureEndpoint@direction:
  3124                           	opt stack 0
  3125  00002D                     USBCtrlTrfTxService@byteToSend:
  3126                           	opt stack 0
  3127  00002D                     USBCtrlTrfRxService@i:
  3128                           	opt stack 0
  3129  00002D                     i2USBTransferOnePacket@dir:
  3130                           	opt stack 0
  3131  00002D                     i2LED_output@value:
  3132                           	opt stack 0
  3133  00002D                     i2___awdiv@dividend:
  3134                           	opt stack 0
  3135  00002D                     i2___lwdiv@dividend:
  3136                           	opt stack 0
  3137  00002D                     i2memset@p1:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x0
  3141  00002D                     	ds	1
  3142  00002E                     ??_USBConfigureEndpoint:
  3143  00002E                     USBCtrlTrfRxService@byteToRead:
  3144                           	opt stack 0
  3145  00002E                     USBCtrlTrfInHandler@lastDTS:
  3146                           	opt stack 0
  3147  00002E                     i2LED_output@b:
  3148                           	opt stack 0
  3149  00002E                     USBStdGetStatusHandler@p:
  3150                           	opt stack 0
  3151  00002E                     i2USBTransferOnePacket@data:
  3152                           	opt stack 0
  3153                           
  3154                           ; 2 bytes @ 0x1
  3155  00002E                     	ds	1
  3156  00002F                     i2___awdiv@divisor:
  3157                           	opt stack 0
  3158  00002F                     i2___lwdiv@divisor:
  3159                           	opt stack 0
  3160  00002F                     i2memset@c:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x2
  3164  00002F                     	ds	1
  3165  000030                     i2USBTransferOnePacket@len:
  3166                           	opt stack 0
  3167                           
  3168                           ; 1 bytes @ 0x3
  3169  000030                     	ds	1
  3170  000031                     i2USBTransferOnePacket@ep:
  3171                           	opt stack 0
  3172  000031                     i2___awdiv@counter:
  3173                           	opt stack 0
  3174  000031                     i2___lwdiv@quotient:
  3175                           	opt stack 0
  3176  000031                     i2memset@n:
  3177                           	opt stack 0
  3178                           
  3179                           ; 2 bytes @ 0x4
  3180  000031                     	ds	1
  3181  000032                     USBConfigureEndpoint@EPNum:
  3182                           	opt stack 0
  3183  000032                     i2___awdiv@sign:
  3184                           	opt stack 0
  3185  000032                     i2USBTransferOnePacket@handle:
  3186                           	opt stack 0
  3187                           
  3188                           ; 2 bytes @ 0x5
  3189  000032                     	ds	1
  3190  000033                     i2___lwdiv@counter:
  3191                           	opt stack 0
  3192  000033                     USBConfigureEndpoint@handle:
  3193                           	opt stack 0
  3194  000033                     i2___awdiv@quotient:
  3195                           	opt stack 0
  3196  000033                     i2memset@p:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x6
  3200  000033                     	ds	2
  3201  000035                     ??_LED_indicator:
  3202  000035                     USBEnableEndpoint@options:
  3203                           	opt stack 0
  3204  000035                     i2USBDeviceInit@i:
  3205                           	opt stack 0
  3206                           
  3207                           ; 1 bytes @ 0x8
  3208  000035                     	ds	1
  3209  000036                     USBEnableEndpoint@p:
  3210                           	opt stack 0
  3211                           
  3212                           ; 2 bytes @ 0x9
  3213  000036                     	ds	2
  3214  000038                     USBEnableEndpoint@ep:
  3215                           	opt stack 0
  3216  000038                     LED_indicator@i:
  3217                           	opt stack 0
  3218                           
  3219                           ; 1 bytes @ 0xB
  3220  000038                     	ds	1
  3221  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0xC
  3225  000039                     	ds	2
  3226  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0xE
  3230  00003B                     	ds	2
  3231  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0x10
  3235  00003D                     	ds	2
  3236  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3237                           
  3238                           ; 0 bytes @ 0x12
  3239  00003F                     	ds	2
  3240  000041                     ??_USBStdFeatureReqHandler:
  3241  000041                     USBStdSetCfgHandler@i:
  3242                           	opt stack 0
  3243                           
  3244                           ; 1 bytes @ 0x14
  3245  000041                     	ds	1
  3246  000042                     USBStdFeatureReqHandler@pUEP:
  3247                           	opt stack 0
  3248                           
  3249                           ; 2 bytes @ 0x15
  3250  000042                     	ds	2
  3251  000044                     USBStdFeatureReqHandler@current_ep_data:
  3252                           	opt stack 0
  3253                           
  3254                           ; 1 bytes @ 0x17
  3255  000044                     	ds	1
  3256  000045                     USBStdFeatureReqHandler@p:
  3257                           	opt stack 0
  3258                           
  3259                           ; 2 bytes @ 0x18
  3260  000045                     	ds	2
  3261  000047                     ??_USBCtrlEPService:
  3262  000047                     
  3263                           ; 0 bytes @ 0x1A
  3264  000047                     	ds	2
  3265  000049                     USBCtrlEPService@setup_cnt:
  3266                           	opt stack 0
  3267                           
  3268                           ; 1 bytes @ 0x1C
  3269  000049                     	ds	1
  3270  00004A                     USBDeviceTasks@i:
  3271                           	opt stack 0
  3272                           
  3273                           ; 1 bytes @ 0x1D
  3274  00004A                     	ds	1
  3275  00004B                     ??_ISR:
  3276                           
  3277                           ; 0 bytes @ 0x1E
  3278  00004B                     	ds	14
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           
  3289 ;;
  3290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3291 ;;
  3292 ;; *************** function _main *****************
  3293 ;; Defined at:
  3294 ;;		line 129 in file "main.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2  1795[None  ] int 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels required when called:   20
  3314 ;; This function calls:
  3315 ;;		_RTCC_task
  3316 ;;		_USB_task
  3317 ;;		_bootload
  3318 ;;		_ctmu_task
  3319 ;;		_hardware_init
  3320 ;;		_normal_task
  3321 ;;		_sleep_task
  3322 ;;		_software_init
  3323 ;;		_terminal_task
  3324 ;; This function is called by:
  3325 ;;		Startup code after reset
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text0
  3330  016044                     __ptext0:
  3331                           	opt stack 0
  3332  016044                     _main:
  3333                           	opt stack 11
  3334                           
  3335                           ;main.c: 131: hardware_init();
  3336                           
  3337                           ;incstack = 0
  3338  016044  EC41  F0AB         	call	_hardware_init	;wreg free
  3339                           
  3340                           ;main.c: 133: software_init();
  3341  016048  EC0C  F0A9         	call	_software_init	;wreg free
  3342  01604C  D030               	goto	l13129
  3343  01604E                     l13087:
  3344                           
  3345                           ;main.c: 139: INTCONbits.GIE = 0;
  3346  01604E  9EF2               	bcf	intcon,7,c	;volatile
  3347                           
  3348                           ;main.c: 140: RTCC_task();
  3349  016050  ECB9  F0B3         	call	_RTCC_task	;wreg free
  3350                           
  3351                           ;main.c: 141: INTCONbits.GIE = 1;
  3352  016054  8EF2               	bsf	intcon,7,c	;volatile
  3353                           
  3354                           ;main.c: 142: INTCONbits.GIE = 0;
  3355  016056  9EF2               	bcf	intcon,7,c	;volatile
  3356                           
  3357                           ;main.c: 143: USB_task();
  3358  016058  EC9F  F0AD         	call	_USB_task	;wreg free
  3359                           
  3360                           ;main.c: 144: INTCONbits.GIE = 1;
  3361  01605C  8EF2               	bsf	intcon,7,c	;volatile
  3362                           
  3363                           ;main.c: 145: INTCONbits.GIE = 0;
  3364  01605E  9EF2               	bcf	intcon,7,c	;volatile
  3365                           
  3366                           ;main.c: 146: terminal_task(&usb_tx, &usb_rx);
  3367  016060  0EC1               	movlw	low _usb_tx
  3368  016062  0101               	movlb	1	; () banked
  3369  016064  6F92               	movwf	terminal_task@tx& (0+255),b
  3370  016066  0E02               	movlw	high _usb_tx
  3371  016068  0101               	movlb	1	; () banked
  3372  01606A  6F93               	movwf	(terminal_task@tx+1)& (0+255),b
  3373  01606C  0EB9               	movlw	low _usb_rx
  3374  01606E  0101               	movlb	1	; () banked
  3375  016070  6F94               	movwf	terminal_task@rx& (0+255),b
  3376  016072  0E02               	movlw	high _usb_rx
  3377  016074  0101               	movlb	1	; () banked
  3378  016076  6F95               	movwf	(terminal_task@rx+1)& (0+255),b
  3379  016078  ECC6  F086         	call	_terminal_task	;wreg free
  3380                           
  3381                           ;main.c: 147: INTCONbits.GIE = 1;
  3382  01607C  8EF2               	bsf	intcon,7,c	;volatile
  3383                           
  3384                           ;main.c: 148: INTCONbits.GIE = 0;
  3385  01607E  9EF2               	bcf	intcon,7,c	;volatile
  3386                           
  3387                           ;main.c: 149: normal_task();
  3388  016080  ECB3  F0A6         	call	_normal_task	;wreg free
  3389                           
  3390                           ;main.c: 150: INTCONbits.GIE = 1;
  3391  016084  8EF2               	bsf	intcon,7,c	;volatile
  3392                           
  3393                           ;main.c: 152: INTCONbits.GIE = 0;
  3394  016086  9EF2               	bcf	intcon,7,c	;volatile
  3395                           
  3396                           ;main.c: 153: ctmu_task();
  3397  016088  EC46  F0B6         	call	_ctmu_task	;wreg free
  3398                           
  3399                           ;main.c: 154: if (ctmu_m.flag.pressing &&
  3400                           ;main.c: 155: port[0].ctmu.flag.pressing &&
  3401                           ;main.c: 156: port[1].ctmu.flag.pressing &&
  3402                           ;main.c: 157: port[2].ctmu.flag.pressing) {
  3403  01608C  0100               	movlb	0	; () banked
  3404  01608E  A1FF               	btfss	(_ctmu_m+3)& (0+255),0,b
  3405  016090  D00A               	goto	l13125
  3406                           
  3407                           ; BSR set to: 0
  3408  016092  0101               	movlb	1	; () banked
  3409  016094  A138               	btfss	(_port+3)& (0+255),0,b
  3410  016096  D007               	goto	l13125
  3411                           
  3412                           ; BSR set to: 1
  3413  016098  0101               	movlb	1	; () banked
  3414  01609A  A14F               	btfss	(_port+26)& (0+255),0,b
  3415  01609C  D004               	goto	l13125
  3416                           
  3417                           ; BSR set to: 1
  3418  01609E  0101               	movlb	1	; () banked
  3419  0160A0  B166               	btfsc	(_port+49)& (0+255),0,b
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;main.c: 158: bootload();
  3423  0160A2  EC3F  F0B3         	call	_bootload	;wreg free
  3424  0160A6                     l13125:
  3425                           
  3426                           ;main.c: 159: }
  3427                           ;main.c: 160: INTCONbits.GIE = 1;
  3428  0160A6  8EF2               	bsf	intcon,7,c	;volatile
  3429                           
  3430                           ;main.c: 162: INTCONbits.GIE = 0;
  3431  0160A8  9EF2               	bcf	intcon,7,c	;volatile
  3432                           
  3433                           ;main.c: 163: sleep_task();
  3434  0160AA  ECE1  F0A5         	call	_sleep_task	;wreg free
  3435  0160AE                     l13129:
  3436                           
  3437                           ;main.c: 164: INTCONbits.GIE = 1;
  3438  0160AE  8EF2               	bsf	intcon,7,c	;volatile
  3439  0160B0  D7CE               	goto	l13087
  3440  0160B2                     __end_of_main:
  3441                           	opt stack 0
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           intcon	equ	0xFF2
  3447                           postinc0	equ	0xFEE
  3448                           wreg	equ	0xFE8
  3449                           postdec1	equ	0xFE5
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           
  3453 ;; *************** function _terminal_task *****************
  3454 ;; Defined at:
  3455 ;;		line 8 in file "../My_library/My_terminal.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3458 ;;		 -> usb_tx(8), 
  3459 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3460 ;;		 -> usb_rx(8), 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  i               1  102[BANK5 ] unsigned char 
  3463 ;;  i               1  104[BANK5 ] unsigned char 
  3464 ;;  ascii           1  103[BANK5 ] unsigned char 
  3465 ;;  buf           100    0[BANK5 ] unsigned char [100]
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3475 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Totals:         0       0       6       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  3479 ;;Total ram usage:      111 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:   19
  3482 ;; This function calls:
  3483 ;;		_ringbuf_backspace
  3484 ;;		_ringbuf_delete
  3485 ;;		_ringbuf_init
  3486 ;;		_ringbuf_num
  3487 ;;		_ringbuf_pop
  3488 ;;		_ringbuf_put
  3489 ;;		_ringbuf_put_num
  3490 ;;		_ringbuf_put_str
  3491 ;;		_terminal_operation
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text1
  3498  010D8C                     __ptext1:
  3499                           	opt stack 0
  3500  010D8C                     _terminal_task:
  3501                           	opt stack 11
  3502                           
  3503                           ;My_terminal.c: 9: static ringbuf_t command;
  3504                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3505                           ;My_terminal.c: 11: if (command_init == 0) {
  3506                           
  3507                           ;incstack = 0
  3508  010D8C  0101               	movlb	1	; () banked
  3509  010D8E  5134               	movf	terminal_task@command_init& (0+255),w,b
  3510  010D90  0101               	movlb	1	; () banked
  3511  010D92  A4D8               	btfss	status,2,c
  3512  010D94  D016               	goto	l12585
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;My_terminal.c: 12: command_init = 1;
  3516  010D96  0E01               	movlw	1
  3517  010D98  0101               	movlb	1	; () banked
  3518  010D9A  6F34               	movwf	terminal_task@command_init& (0+255),b
  3519                           
  3520                           ; BSR set to: 1
  3521                           ;My_terminal.c: 13: char buf[100];
  3522                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3523  010D9C  0E88               	movlw	low terminal_task@command
  3524  010D9E  0100               	movlb	0	; () banked
  3525  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3526  010DA2  0E01               	movlw	high terminal_task@command
  3527  010DA4  0100               	movlb	0	; () banked
  3528  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3529  010DA8  0E00               	movlw	low terminal_task@buf
  3530  010DAA  0100               	movlb	0	; () banked
  3531  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3532  010DAE  0E05               	movlw	high terminal_task@buf
  3533  010DB0  0100               	movlb	0	; () banked
  3534  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3535  010DB4  0E00               	movlw	0
  3536  010DB6  0100               	movlb	0	; () banked
  3537  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3538  010DBA  0E64               	movlw	100
  3539  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3540  010DBE  EC7B  F0B2         	call	_ringbuf_init	;wreg free
  3541  010DC2                     l12585:
  3542                           
  3543                           ;My_terminal.c: 15: }
  3544                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3545  010DC2  C194  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3546  010DC6  C195  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3547  010DCA  EC21  F0A1         	call	_ringbuf_num	;wreg free
  3548  010DCE  0100               	movlb	0	; () banked
  3549  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3550  010DD2  0100               	movlb	0	; () banked
  3551  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3552  010DD6  B4D8               	btfsc	status,2,c
  3553  010DD8  0012               	return	
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3557  010DDA  C194  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3558  010DDE  C195  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3559  010DE2  EC81  F0A7         	call	_ringbuf_pop	;wreg free
  3560  010DE6  0105               	movlb	5	; () banked
  3561  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3562                           
  3563                           ;My_terminal.c: 18: switch (ascii) {
  3564  010DEA  D176               	goto	l12649
  3565  010DEC                     l12589:
  3566                           
  3567                           ; BSR set to: 5
  3568                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3569  010DEC  0E88               	movlw	low terminal_task@command
  3570  010DEE  0100               	movlb	0	; () banked
  3571  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3572  010DF2  0E01               	movlw	high terminal_task@command
  3573  010DF4  0100               	movlb	0	; () banked
  3574  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3575  010DF8  0E00               	movlw	0
  3576  010DFA  0100               	movlb	0	; () banked
  3577  010DFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3578  010DFE  EC77  F0A5         	call	_ringbuf_put	;wreg free
  3579                           
  3580                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3581  010E02  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3582  010E06  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3583  010E0A  0E09               	movlw	9
  3584  010E0C  0100               	movlb	0	; () banked
  3585  010E0E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3586  010E10  EC77  F0A5         	call	_ringbuf_put	;wreg free
  3587                           
  3588                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3589  010E14  0E88               	movlw	low terminal_task@command
  3590  010E16  0100               	movlb	0	; () banked
  3591  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3592  010E1A  0E01               	movlw	high terminal_task@command
  3593  010E1C  0100               	movlb	0	; () banked
  3594  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3595  010E20  EC21  F0A1         	call	_ringbuf_num	;wreg free
  3596  010E24  0EFF               	movlw	255
  3597  010E26  0100               	movlb	0	; () banked
  3598  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3599  010E2A  0105               	movlb	5	; () banked
  3600  010E2C  6F64               	movwf	_terminal_task$7032& (0+255),b
  3601  010E2E  0EFF               	movlw	255
  3602  010E30  0100               	movlb	0	; () banked
  3603  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3604  010E34  0105               	movlb	5	; () banked
  3605  010E36  6F65               	movwf	(_terminal_task$7032+1)& (0+255),b
  3606                           
  3607                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3608  010E38  C192  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3609  010E3C  C193  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3610  010E40  C564  F085         	movff	_terminal_task$7032,ringbuf_put_num@value
  3611  010E44  C565  F086         	movff	_terminal_task$7032+1,ringbuf_put_num@value+1
  3612  010E48  0E02               	movlw	2
  3613  010E4A  0100               	movlb	0	; () banked
  3614  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3615  010E4E  ECF8  F0AE         	call	_ringbuf_put_num	;wreg free
  3616                           
  3617                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3618  010E52  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3619  010E56  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3620  010E5A  0E0A               	movlw	10
  3621  010E5C  0100               	movlb	0	; () banked
  3622  010E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3623  010E60  EC77  F0A5         	call	_ringbuf_put	;wreg free
  3624                           
  3625                           ;My_terminal.c: 24: static char op0[25];
  3626                           ;My_terminal.c: 25: static char op1[25];
  3627                           ;My_terminal.c: 26: static char op2[25];
  3628                           ;My_terminal.c: 27: static char op3[25];
  3629                           ;My_terminal.c: 28: uint8_t i;
  3630                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3631  010E64  0E00               	movlw	0
  3632  010E66  0105               	movlb	5	; () banked
  3633  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3634  010E6A  D002               	goto	l12595
  3635  010E6C                     l12593:
  3636                           
  3637                           ; BSR set to: 5
  3638  010E6C  0105               	movlb	5	; () banked
  3639  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3640  010E70                     l12595:
  3641                           
  3642                           ; BSR set to: 5
  3643  010E70  0E88               	movlw	low terminal_task@command
  3644  010E72  0100               	movlb	0	; () banked
  3645  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3646  010E76  0E01               	movlw	high terminal_task@command
  3647  010E78  0100               	movlb	0	; () banked
  3648  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3649  010E7C  EC81  F0A7         	call	_ringbuf_pop	;wreg free
  3650  010E80  0101               	movlb	1	; () banked
  3651  010E82  6F96               	movwf	??_terminal_task& (0+255),b
  3652  010E84  0105               	movlb	5	; () banked
  3653  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3654  010E88  0D01               	mullw	1
  3655  010E8A  0E3D               	movlw	low terminal_task@op0
  3656  010E8C  24F3               	addwf	prodl,w,c
  3657  010E8E  6ED9               	movwf	fsr2l,c
  3658  010E90  0E02               	movlw	high terminal_task@op0
  3659  010E92  20F4               	addwfc	prodh,w,c
  3660  010E94  6EDA               	movwf	fsr2h,c
  3661  010E96  C196  FFDF         	movff	??_terminal_task,indf2
  3662  010E9A  50DF               	movf	indf2,w,c
  3663  010E9C  A4D8               	btfss	status,2,c
  3664  010E9E  D7E6               	goto	l12593
  3665                           
  3666                           ; BSR set to: 5
  3667                           ;My_terminal.c: 30: op0[i] = '\0';
  3668                           
  3669                           ; BSR set to: 5
  3670  010EA0  0105               	movlb	5	; () banked
  3671  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3672  010EA4  0D01               	mullw	1
  3673  010EA6  0E3D               	movlw	low terminal_task@op0
  3674  010EA8  24F3               	addwf	prodl,w,c
  3675  010EAA  6ED9               	movwf	fsr2l,c
  3676  010EAC  0E02               	movlw	high terminal_task@op0
  3677  010EAE  20F4               	addwfc	prodh,w,c
  3678  010EB0  6EDA               	movwf	fsr2h,c
  3679  010EB2  0E00               	movlw	0
  3680  010EB4  6EDF               	movwf	indf2,c
  3681                           
  3682                           ; BSR set to: 5
  3683                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3684  010EB6  0E00               	movlw	0
  3685  010EB8  0105               	movlb	5	; () banked
  3686  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3687  010EBC  D002               	goto	l12603
  3688  010EBE                     l12601:
  3689                           
  3690                           ; BSR set to: 5
  3691  010EBE  0105               	movlb	5	; () banked
  3692  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3693  010EC2                     l12603:
  3694                           
  3695                           ; BSR set to: 5
  3696  010EC2  0E88               	movlw	low terminal_task@command
  3697  010EC4  0100               	movlb	0	; () banked
  3698  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3699  010EC8  0E01               	movlw	high terminal_task@command
  3700  010ECA  0100               	movlb	0	; () banked
  3701  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3702  010ECE  EC81  F0A7         	call	_ringbuf_pop	;wreg free
  3703  010ED2  0101               	movlb	1	; () banked
  3704  010ED4  6F96               	movwf	??_terminal_task& (0+255),b
  3705  010ED6  0105               	movlb	5	; () banked
  3706  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3707  010EDA  0D01               	mullw	1
  3708  010EDC  0E56               	movlw	low terminal_task@op1
  3709  010EDE  24F3               	addwf	prodl,w,c
  3710  010EE0  6ED9               	movwf	fsr2l,c
  3711  010EE2  0E02               	movlw	high terminal_task@op1
  3712  010EE4  20F4               	addwfc	prodh,w,c
  3713  010EE6  6EDA               	movwf	fsr2h,c
  3714  010EE8  C196  FFDF         	movff	??_terminal_task,indf2
  3715  010EEC  50DF               	movf	indf2,w,c
  3716  010EEE  A4D8               	btfss	status,2,c
  3717  010EF0  D7E6               	goto	l12601
  3718                           
  3719                           ; BSR set to: 5
  3720                           ;My_terminal.c: 32: op1[i] = '\0';
  3721                           
  3722                           ; BSR set to: 5
  3723  010EF2  0105               	movlb	5	; () banked
  3724  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3725  010EF6  0D01               	mullw	1
  3726  010EF8  0E56               	movlw	low terminal_task@op1
  3727  010EFA  24F3               	addwf	prodl,w,c
  3728  010EFC  6ED9               	movwf	fsr2l,c
  3729  010EFE  0E02               	movlw	high terminal_task@op1
  3730  010F00  20F4               	addwfc	prodh,w,c
  3731  010F02  6EDA               	movwf	fsr2h,c
  3732  010F04  0E00               	movlw	0
  3733  010F06  6EDF               	movwf	indf2,c
  3734                           
  3735                           ; BSR set to: 5
  3736                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3737  010F08  0E00               	movlw	0
  3738  010F0A  0105               	movlb	5	; () banked
  3739  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3740  010F0E  D002               	goto	l12611
  3741  010F10                     l12609:
  3742                           
  3743                           ; BSR set to: 5
  3744  010F10  0105               	movlb	5	; () banked
  3745  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3746  010F14                     l12611:
  3747                           
  3748                           ; BSR set to: 5
  3749  010F14  0E88               	movlw	low terminal_task@command
  3750  010F16  0100               	movlb	0	; () banked
  3751  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3752  010F1A  0E01               	movlw	high terminal_task@command
  3753  010F1C  0100               	movlb	0	; () banked
  3754  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3755  010F20  EC81  F0A7         	call	_ringbuf_pop	;wreg free
  3756  010F24  0101               	movlb	1	; () banked
  3757  010F26  6F96               	movwf	??_terminal_task& (0+255),b
  3758  010F28  0105               	movlb	5	; () banked
  3759  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3760  010F2C  0D01               	mullw	1
  3761  010F2E  0E6F               	movlw	low terminal_task@op2
  3762  010F30  24F3               	addwf	prodl,w,c
  3763  010F32  6ED9               	movwf	fsr2l,c
  3764  010F34  0E02               	movlw	high terminal_task@op2
  3765  010F36  20F4               	addwfc	prodh,w,c
  3766  010F38  6EDA               	movwf	fsr2h,c
  3767  010F3A  C196  FFDF         	movff	??_terminal_task,indf2
  3768  010F3E  50DF               	movf	indf2,w,c
  3769  010F40  A4D8               	btfss	status,2,c
  3770  010F42  D7E6               	goto	l12609
  3771                           
  3772                           ; BSR set to: 5
  3773                           ;My_terminal.c: 34: op2[i] = '\0';
  3774                           
  3775                           ; BSR set to: 5
  3776  010F44  0105               	movlb	5	; () banked
  3777  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3778  010F48  0D01               	mullw	1
  3779  010F4A  0E6F               	movlw	low terminal_task@op2
  3780  010F4C  24F3               	addwf	prodl,w,c
  3781  010F4E  6ED9               	movwf	fsr2l,c
  3782  010F50  0E02               	movlw	high terminal_task@op2
  3783  010F52  20F4               	addwfc	prodh,w,c
  3784  010F54  6EDA               	movwf	fsr2h,c
  3785  010F56  0E00               	movlw	0
  3786  010F58  6EDF               	movwf	indf2,c
  3787                           
  3788                           ; BSR set to: 5
  3789                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3790  010F5A  0E00               	movlw	0
  3791  010F5C  0105               	movlb	5	; () banked
  3792  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3793  010F60  D002               	goto	l12619
  3794  010F62                     l12617:
  3795                           
  3796                           ; BSR set to: 5
  3797  010F62  0105               	movlb	5	; () banked
  3798  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3799  010F66                     l12619:
  3800                           
  3801                           ; BSR set to: 5
  3802  010F66  0E88               	movlw	low terminal_task@command
  3803  010F68  0100               	movlb	0	; () banked
  3804  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3805  010F6C  0E01               	movlw	high terminal_task@command
  3806  010F6E  0100               	movlb	0	; () banked
  3807  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3808  010F72  EC81  F0A7         	call	_ringbuf_pop	;wreg free
  3809  010F76  0101               	movlb	1	; () banked
  3810  010F78  6F96               	movwf	??_terminal_task& (0+255),b
  3811  010F7A  0105               	movlb	5	; () banked
  3812  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3813  010F7E  0D01               	mullw	1
  3814  010F80  0E88               	movlw	low terminal_task@op3
  3815  010F82  24F3               	addwf	prodl,w,c
  3816  010F84  6ED9               	movwf	fsr2l,c
  3817  010F86  0E02               	movlw	high terminal_task@op3
  3818  010F88  20F4               	addwfc	prodh,w,c
  3819  010F8A  6EDA               	movwf	fsr2h,c
  3820  010F8C  C196  FFDF         	movff	??_terminal_task,indf2
  3821  010F90  50DF               	movf	indf2,w,c
  3822  010F92  A4D8               	btfss	status,2,c
  3823  010F94  D7E6               	goto	l12617
  3824                           
  3825                           ; BSR set to: 5
  3826                           ;My_terminal.c: 36: op3[i] = '\0';
  3827                           
  3828                           ; BSR set to: 5
  3829  010F96  0105               	movlb	5	; () banked
  3830  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3831  010F9A  0D01               	mullw	1
  3832  010F9C  0E88               	movlw	low terminal_task@op3
  3833  010F9E  24F3               	addwf	prodl,w,c
  3834  010FA0  6ED9               	movwf	fsr2l,c
  3835  010FA2  0E02               	movlw	high terminal_task@op3
  3836  010FA4  20F4               	addwfc	prodh,w,c
  3837  010FA6  6EDA               	movwf	fsr2h,c
  3838  010FA8  0E00               	movlw	0
  3839  010FAA  6EDF               	movwf	indf2,c
  3840                           
  3841                           ; BSR set to: 5
  3842                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3843  010FAC  C192  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3844  010FB0  C193  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3845  010FB4  0E3D               	movlw	low terminal_task@op0
  3846  010FB6  0100               	movlb	0	; () banked
  3847  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3848  010FBA  0E02               	movlw	high terminal_task@op0
  3849  010FBC  0100               	movlb	0	; () banked
  3850  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3851  010FC0  0E56               	movlw	low terminal_task@op1
  3852  010FC2  0100               	movlb	0	; () banked
  3853  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3854  010FC6  0E02               	movlw	high terminal_task@op1
  3855  010FC8  0100               	movlb	0	; () banked
  3856  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3857  010FCC  0E6F               	movlw	low terminal_task@op2
  3858  010FCE  0100               	movlb	0	; () banked
  3859  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3860  010FD2  0E02               	movlw	high terminal_task@op2
  3861  010FD4  0100               	movlb	0	; () banked
  3862  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3863  010FD8  0E88               	movlw	low terminal_task@op3
  3864  010FDA  0100               	movlb	0	; () banked
  3865  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3866  010FDE  0E02               	movlw	high terminal_task@op3
  3867  010FE0  0100               	movlb	0	; () banked
  3868  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3869  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3870                           
  3871                           ;My_terminal.c: 38: break;
  3872  010FE8  0012               	return	
  3873  010FEA                     l12625:
  3874                           
  3875                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3876  010FEA  0E88               	movlw	low terminal_task@command
  3877  010FEC  0100               	movlb	0	; () banked
  3878  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3879  010FF0  0E01               	movlw	high terminal_task@command
  3880  010FF2  0100               	movlb	0	; () banked
  3881  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3882  010FF6  0E00               	movlw	0
  3883  010FF8  0100               	movlb	0	; () banked
  3884  010FFA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3885  010FFC  EC77  F0A5         	call	_ringbuf_put	;wreg free
  3886                           
  3887                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3888  011000  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3889  011004  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3890  011008  0E20               	movlw	32
  3891  01100A  0100               	movlb	0	; () banked
  3892  01100C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3893  01100E  EC77  F0A5         	call	_ringbuf_put	;wreg free
  3894                           
  3895                           ;My_terminal.c: 42: break;
  3896  011012  0012               	return	
  3897  011014                     l12627:
  3898                           
  3899                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3900  011014  0E88               	movlw	low terminal_task@command
  3901  011016  0100               	movlb	0	; () banked
  3902  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3903  01101A  0E01               	movlw	high terminal_task@command
  3904  01101C  0100               	movlb	0	; () banked
  3905  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3906  011020  EC11  F0AD         	call	_ringbuf_backspace	;wreg free
  3907                           
  3908                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3909  011024  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3910  011028  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3911  01102C  0EE3               	movlw	low STR_19
  3912  01102E  0100               	movlb	0	; () banked
  3913  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3914  011032  0EFF               	movlw	high STR_19
  3915  011034  0100               	movlb	0	; () banked
  3916  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3917  011038  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  3918                           
  3919                           ;My_terminal.c: 46: break;
  3920  01103C  0012               	return	
  3921  01103E                     l12631:
  3922                           
  3923                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3924  01103E  0E00               	movlw	0
  3925  011040  0105               	movlb	5	; () banked
  3926  011042  6F66               	movwf	terminal_task@i_4539& (0+255),b
  3927  011044  D00E               	goto	l12637
  3928  011046                     l12633:
  3929  011046  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3930  01104A  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3931  01104E  0EE3               	movlw	low STR_19
  3932  011050  0100               	movlb	0	; () banked
  3933  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3934  011054  0EFF               	movlw	high STR_19
  3935  011056  0100               	movlb	0	; () banked
  3936  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3937  01105A  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  3938  01105E  0105               	movlb	5	; () banked
  3939  011060  2B66               	incf	terminal_task@i_4539& (0+255),f,b
  3940  011062                     l12637:
  3941                           
  3942                           ; BSR set to: 5
  3943  011062  0E88               	movlw	low terminal_task@command
  3944  011064  0100               	movlb	0	; () banked
  3945  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3946  011068  0E01               	movlw	high terminal_task@command
  3947  01106A  0100               	movlb	0	; () banked
  3948  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3949  01106E  EC21  F0A1         	call	_ringbuf_num	;wreg free
  3950  011072  0105               	movlb	5	; () banked
  3951  011074  5166               	movf	terminal_task@i_4539& (0+255),w,b
  3952  011076  0101               	movlb	1	; () banked
  3953  011078  6F96               	movwf	??_terminal_task& (0+255),b
  3954  01107A  6B97               	clrf	(??_terminal_task+1)& (0+255),b
  3955  01107C  0100               	movlb	0	; () banked
  3956  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3957  011080  0101               	movlb	1	; () banked
  3958  011082  5D96               	subwf	??_terminal_task& (0+255),w,b
  3959  011084  0100               	movlb	0	; () banked
  3960  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3961  011088  0101               	movlb	1	; () banked
  3962  01108A  5997               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3963  01108C  A0D8               	btfss	status,0,c
  3964  01108E  D7DB               	goto	l12633
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3968                           
  3969                           ; BSR set to: 1
  3970  011090  0E88               	movlw	low terminal_task@command
  3971  011092  0100               	movlb	0	; () banked
  3972  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3973  011096  0E01               	movlw	high terminal_task@command
  3974  011098  0100               	movlb	0	; () banked
  3975  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3976  01109C  EC92  F0B5         	call	_ringbuf_delete	;wreg free
  3977                           
  3978                           ;My_terminal.c: 50: break;
  3979  0110A0  0012               	return	
  3980  0110A2                     l12641:
  3981                           
  3982                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3983  0110A2  0E1F               	movlw	31
  3984  0110A4  0105               	movlb	5	; () banked
  3985  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  3986  0110A8  0012               	return	
  3987                           
  3988                           ; BSR set to: 5
  3989  0110AA  0E7F               	movlw	127
  3990  0110AC  0105               	movlb	5	; () banked
  3991  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  3992  0110B0  0012               	return	
  3993                           
  3994                           ; BSR set to: 5
  3995                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3996  0110B2  0E88               	movlw	low terminal_task@command
  3997  0110B4  0100               	movlb	0	; () banked
  3998  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3999  0110B8  0E01               	movlw	high terminal_task@command
  4000  0110BA  0100               	movlb	0	; () banked
  4001  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4002  0110BE  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  4003  0110C2  EC77  F0A5         	call	_ringbuf_put	;wreg free
  4004                           
  4005                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  4006  0110C6  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4007  0110CA  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4008  0110CE  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  4009  0110D2  EC77  F0A5         	call	_ringbuf_put	;wreg free
  4010                           
  4011                           ;My_terminal.c: 57: }
  4012                           
  4013                           ;My_terminal.c: 55: }
  4014                           ;My_terminal.c: 56: break;
  4015  0110D6  0012               	return	
  4016  0110D8                     l12649:
  4017  0110D8  0105               	movlb	5	; () banked
  4018  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  4019                           
  4020                           ; Switch size 1, requested type "space"
  4021                           ; Number of cases is 4, Range of values is 8 to 127
  4022                           ; switch strategies available:
  4023                           ; Name         Instructions Cycles
  4024                           ; simple_byte           13     7 (average)
  4025                           ;	Chosen strategy is simple_byte
  4026  0110DC  0A08               	xorlw	8	; case 8
  4027  0110DE  B4D8               	btfsc	status,2,c
  4028  0110E0  D799               	goto	l12627
  4029  0110E2  0A05               	xorlw	5	; case 13
  4030  0110E4  B4D8               	btfsc	status,2,c
  4031  0110E6  D682               	goto	l12589
  4032  0110E8  0A2D               	xorlw	45	; case 32
  4033  0110EA  B4D8               	btfsc	status,2,c
  4034  0110EC  D77E               	goto	l12625
  4035  0110EE  0A5F               	xorlw	95	; case 127
  4036  0110F0  B4D8               	btfsc	status,2,c
  4037  0110F2  D7A5               	goto	l12631
  4038  0110F4  D7D6               	goto	l12641
  4039  0110F6                     __end_of_terminal_task:
  4040                           	opt stack 0
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           intcon	equ	0xFF2
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           postdec1	equ	0xFE5
  4051                           fsr1h	equ	0xFE2
  4052                           fsr1l	equ	0xFE1
  4053                           indf2	equ	0xFDF
  4054                           fsr2h	equ	0xFDA
  4055                           fsr2l	equ	0xFD9
  4056                           status	equ	0xFD8
  4057                           
  4058 ;; *************** function _terminal_operation *****************
  4059 ;; Defined at:
  4060 ;;		line 200 in file "ChargeStation_task.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4063 ;;		 -> usb_tx(8), 
  4064 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4065 ;;		 -> terminal_task@op0(25), 
  4066 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4067 ;;		 -> terminal_task@op1(25), 
  4068 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4069 ;;		 -> terminal_task@op2(25), 
  4070 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4071 ;;		 -> terminal_task@op3(25), 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  percentage      1  133[BANK0 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4083 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;Total ram usage:       11 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:   18
  4090 ;; This function calls:
  4091 ;;		_atoi
  4092 ;;		_bootload
  4093 ;;		_ctmu_set_ratio
  4094 ;;		_ringbuf_put_str
  4095 ;;		_strcmp
  4096 ;;		_terminal_time
  4097 ;; This function is called by:
  4098 ;;		_terminal_task
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text2
  4103  0120C4                     __ptext2:
  4104                           	opt stack 0
  4105  0120C4                     _terminal_operation:
  4106                           	opt stack 11
  4107                           
  4108                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4109                           
  4110                           ;incstack = 0
  4111  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4112  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4113  0120CC  0ECF               	movlw	low STR_51
  4114  0120CE  0100               	movlb	0	; () banked
  4115  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4116  0120D2  0EFF               	movlw	high STR_51
  4117  0120D4  0100               	movlb	0	; () banked
  4118  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4119  0120D8  EC1F  F0B2         	call	_strcmp	;wreg free
  4120  0120DC  0100               	movlb	0	; () banked
  4121  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4122  0120E0  0100               	movlb	0	; () banked
  4123  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4124  0120E4  B4D8               	btfsc	status,2,c
  4125  0120E6  D012               	goto	l12219
  4126                           
  4127                           ; BSR set to: 0
  4128  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4129  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4130  0120F0  0EF1               	movlw	low STR_52
  4131  0120F2  0100               	movlb	0	; () banked
  4132  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4133  0120F6  0EFF               	movlw	high STR_52
  4134  0120F8  0100               	movlb	0	; () banked
  4135  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4136  0120FC  EC1F  F0B2         	call	_strcmp	;wreg free
  4137  012100  0100               	movlb	0	; () banked
  4138  012102  5160               	movf	?_strcmp& (0+255),w,b
  4139  012104  0100               	movlb	0	; () banked
  4140  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4141  012108  A4D8               	btfss	status,2,c
  4142  01210A  D00C               	goto	l12221
  4143  01210C                     l12219:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4147                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4148                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4149                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4150                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4151                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4152                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4153                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4154  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4155  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4156  012114  0EE6               	movlw	low STR_53
  4157  012116  0100               	movlb	0	; () banked
  4158  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4159  01211A  0EFB               	movlw	high STR_53
  4160  01211C  0100               	movlb	0	; () banked
  4161  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4162  012120  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  4163  012124                     l12221:
  4164                           
  4165                           ;ChargeStation_task.c: 216: }
  4166                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4167  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4168  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4169  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4170  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4171  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4172  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4173  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4174  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4175  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4176                           
  4177                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4178  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4179  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4180  012150  0E67               	movlw	low STR_54
  4181  012152  0100               	movlb	0	; () banked
  4182  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4183  012156  0EFF               	movlw	high STR_54
  4184  012158  0100               	movlb	0	; () banked
  4185  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4186  01215C  EC1F  F0B2         	call	_strcmp	;wreg free
  4187  012160  0100               	movlb	0	; () banked
  4188  012162  5160               	movf	?_strcmp& (0+255),w,b
  4189  012164  0100               	movlb	0	; () banked
  4190  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4191  012168  B4D8               	btfsc	status,2,c
  4192                           
  4193                           ; BSR set to: 0
  4194  01216A  00FF               	reset		;# 
  4195                           
  4196                           ;ChargeStation_task.c: 220: }
  4197                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4198  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4199  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4200  012174  0E70               	movlw	low STR_55
  4201  012176  0100               	movlb	0	; () banked
  4202  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4203  01217A  0EFF               	movlw	high STR_55
  4204  01217C  0100               	movlb	0	; () banked
  4205  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4206  012180  EC1F  F0B2         	call	_strcmp	;wreg free
  4207  012184  0100               	movlb	0	; () banked
  4208  012186  5160               	movf	?_strcmp& (0+255),w,b
  4209  012188  0100               	movlb	0	; () banked
  4210  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4211  01218C  B4D8               	btfsc	status,2,c
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;ChargeStation_task.c: 222: bootload();
  4215  01218E  EC3F  F0B3         	call	_bootload	;wreg free
  4216                           
  4217                           ;ChargeStation_task.c: 223: }
  4218                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4219  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4220  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4221  01219A  0EEB               	movlw	low STR_56
  4222  01219C  0100               	movlb	0	; () banked
  4223  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4224  0121A0  0EFF               	movlw	high STR_56
  4225  0121A2  0100               	movlb	0	; () banked
  4226  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4227  0121A6  EC1F  F0B2         	call	_strcmp	;wreg free
  4228  0121AA  0100               	movlb	0	; () banked
  4229  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4230  0121AE  0100               	movlb	0	; () banked
  4231  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4232  0121B2  B4D8               	btfsc	status,2,c
  4233  0121B4  D012               	goto	l12235
  4234                           
  4235                           ; BSR set to: 0
  4236  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4237  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4238  0121BE  0E25               	movlw	low STR_57
  4239  0121C0  0100               	movlb	0	; () banked
  4240  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4241  0121C4  0EFF               	movlw	high STR_57
  4242  0121C6  0100               	movlb	0	; () banked
  4243  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4244  0121CA  EC1F  F0B2         	call	_strcmp	;wreg free
  4245  0121CE  0100               	movlb	0	; () banked
  4246  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4247  0121D2  0100               	movlb	0	; () banked
  4248  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4249  0121D6  A4D8               	btfss	status,2,c
  4250  0121D8  D003               	goto	l12237
  4251  0121DA                     l12235:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4255  0121DA  0E01               	movlw	1
  4256  0121DC  0101               	movlb	1	; () banked
  4257  0121DE  6F2B               	movwf	_terminal_data_out& (0+255),b
  4258  0121E0                     l12237:
  4259                           
  4260                           ;ChargeStation_task.c: 226: }
  4261                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4262  0121E0  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4263  0121E4  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4264  0121E8  0EE6               	movlw	low (STR_19+3)
  4265  0121EA  0100               	movlb	0	; () banked
  4266  0121EC  6F62               	movwf	strcmp@s2& (0+255),b
  4267  0121EE  0EFF               	movlw	high (STR_19+3)
  4268  0121F0  0100               	movlb	0	; () banked
  4269  0121F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4270  0121F4  EC1F  F0B2         	call	_strcmp	;wreg free
  4271  0121F8  0100               	movlb	0	; () banked
  4272  0121FA  5160               	movf	?_strcmp& (0+255),w,b
  4273  0121FC  0100               	movlb	0	; () banked
  4274  0121FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4275  012200  A4D8               	btfss	status,2,c
  4276  012202  D003               	goto	l12241
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4280  012204  0E00               	movlw	0
  4281  012206  0101               	movlb	1	; () banked
  4282  012208  6F2B               	movwf	_terminal_data_out& (0+255),b
  4283  01220A                     l12241:
  4284                           
  4285                           ;ChargeStation_task.c: 229: }
  4286                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4287  01220A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4288  01220E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4289  012212  0EBD               	movlw	low STR_59
  4290  012214  0100               	movlb	0	; () banked
  4291  012216  6F62               	movwf	strcmp@s2& (0+255),b
  4292  012218  0EFF               	movlw	high STR_59
  4293  01221A  0100               	movlb	0	; () banked
  4294  01221C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4295  01221E  EC1F  F0B2         	call	_strcmp	;wreg free
  4296  012222  0100               	movlb	0	; () banked
  4297  012224  5160               	movf	?_strcmp& (0+255),w,b
  4298  012226  0100               	movlb	0	; () banked
  4299  012228  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4300  01222A  A4D8               	btfss	status,2,c
  4301  01222C  0012               	return	
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4305  01222E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4306  012232  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4307  012236  0E48               	movlw	low STR_60
  4308  012238  0100               	movlb	0	; () banked
  4309  01223A  6F62               	movwf	strcmp@s2& (0+255),b
  4310  01223C  0EFF               	movlw	high STR_60
  4311  01223E  0100               	movlb	0	; () banked
  4312  012240  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4313  012242  EC1F  F0B2         	call	_strcmp	;wreg free
  4314  012246  0100               	movlb	0	; () banked
  4315  012248  5160               	movf	?_strcmp& (0+255),w,b
  4316  01224A  0100               	movlb	0	; () banked
  4317  01224C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4318  01224E  B4D8               	btfsc	status,2,c
  4319  012250  D012               	goto	l12247
  4320                           
  4321                           ; BSR set to: 0
  4322  012252  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4323  012256  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4324  01225A  0ED4               	movlw	low STR_61
  4325  01225C  0100               	movlb	0	; () banked
  4326  01225E  6F62               	movwf	strcmp@s2& (0+255),b
  4327  012260  0EFF               	movlw	high STR_61
  4328  012262  0100               	movlb	0	; () banked
  4329  012264  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4330  012266  EC1F  F0B2         	call	_strcmp	;wreg free
  4331  01226A  0100               	movlb	0	; () banked
  4332  01226C  5160               	movf	?_strcmp& (0+255),w,b
  4333  01226E  0100               	movlb	0	; () banked
  4334  012270  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4335  012272  A4D8               	btfss	status,2,c
  4336  012274  D02C               	goto	l12259
  4337  012276                     l12247:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4341  012276  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4342  01227A  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4343  01227E  EC2F  F0A0         	call	_atoi	;wreg free
  4344  012282  0100               	movlb	0	; () banked
  4345  012284  517C               	movf	?_atoi& (0+255),w,b
  4346  012286  0100               	movlb	0	; () banked
  4347  012288  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4351  01228A  0E65               	movlw	101
  4352  01228C  0100               	movlb	0	; () banked
  4353  01228E  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4354  012290  D012               	goto	l12257
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4358  012292  C0E5  F01C         	movff	terminal_operation@percentage,_ctmu_ratio
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4362  012296  501C               	movf	_ctmu_ratio,w,c
  4363  012298  EC98  F0A1         	call	_ctmu_set_ratio
  4364                           
  4365                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4366  01229C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4367  0122A0  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4368  0122A4  0E1D               	movlw	low STR_62
  4369  0122A6  0100               	movlb	0	; () banked
  4370  0122A8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4371  0122AA  0EFE               	movlw	high STR_62
  4372  0122AC  0100               	movlb	0	; () banked
  4373  0122AE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4374  0122B0  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  4375                           
  4376                           ;ChargeStation_task.c: 237: } else {
  4377  0122B4  D00C               	goto	l12259
  4378  0122B6                     l12257:
  4379                           
  4380                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4381  0122B6  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4382  0122BA  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4383  0122BE  0EBD               	movlw	low STR_63
  4384  0122C0  0100               	movlb	0	; () banked
  4385  0122C2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4386  0122C4  0EFD               	movlw	high STR_63
  4387  0122C6  0100               	movlb	0	; () banked
  4388  0122C8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4389  0122CA  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  4390  0122CE                     l12259:
  4391                           
  4392                           ;ChargeStation_task.c: 239: }
  4393                           ;ChargeStation_task.c: 240: }
  4394                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4395  0122CE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4396  0122D2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4397  0122D6  0EC3               	movlw	low STR_64
  4398  0122D8  0100               	movlb	0	; () banked
  4399  0122DA  6F62               	movwf	strcmp@s2& (0+255),b
  4400  0122DC  0EFF               	movlw	high STR_64
  4401  0122DE  0100               	movlb	0	; () banked
  4402  0122E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4403  0122E2  EC1F  F0B2         	call	_strcmp	;wreg free
  4404  0122E6  0100               	movlb	0	; () banked
  4405  0122E8  5160               	movf	?_strcmp& (0+255),w,b
  4406  0122EA  0100               	movlb	0	; () banked
  4407  0122EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4408  0122EE  B4D8               	btfsc	status,2,c
  4409  0122F0  D012               	goto	l12263
  4410                           
  4411                           ; BSR set to: 0
  4412  0122F2  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4413  0122F6  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4414  0122FA  0EDC               	movlw	low (STR_30+3)
  4415  0122FC  0100               	movlb	0	; () banked
  4416  0122FE  6F62               	movwf	strcmp@s2& (0+255),b
  4417  012300  0EFF               	movlw	high (STR_30+3)
  4418  012302  0100               	movlb	0	; () banked
  4419  012304  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4420  012306  EC1F  F0B2         	call	_strcmp	;wreg free
  4421  01230A  0100               	movlb	0	; () banked
  4422  01230C  5160               	movf	?_strcmp& (0+255),w,b
  4423  01230E  0100               	movlb	0	; () banked
  4424  012310  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4425  012312  A4D8               	btfss	status,2,c
  4426  012314  0012               	return	
  4427  012316                     l12263:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4431  012316  501C               	movf	_ctmu_ratio,w,c
  4432  012318  EC98  F0A1         	call	_ctmu_set_ratio
  4433                           
  4434                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4435  01231C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4436  012320  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4437  012324  0E4D               	movlw	low STR_66
  4438  012326  0100               	movlb	0	; () banked
  4439  012328  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4440  01232A  0EFE               	movlw	high STR_66
  4441  01232C  0100               	movlb	0	; () banked
  4442  01232E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4443  012330  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  4444  012334  0012               	return	
  4445  012336                     __end_of_terminal_operation:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           prodh	equ	0xFF4
  4452                           prodl	equ	0xFF3
  4453                           intcon	equ	0xFF2
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           postdec1	equ	0xFE5
  4457                           fsr1h	equ	0xFE2
  4458                           fsr1l	equ	0xFE1
  4459                           indf2	equ	0xFDF
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _terminal_time *****************
  4465 ;; Defined at:
  4466 ;;		line 93 in file "../My_library/My_terminal.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4469 ;;		 -> usb_tx(8), 
  4470 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4471 ;;		 -> terminal_task@op0(25), 
  4472 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4473 ;;		 -> terminal_task@op1(25), 
  4474 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4475 ;;		 -> terminal_task@op2(25), 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;		None               void
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;Total ram usage:        9 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:   17
  4494 ;; This function calls:
  4495 ;;		_atoi
  4496 ;;		_month_length
  4497 ;;		_print_time
  4498 ;;		_strcmp
  4499 ;;		_terminal_at_hand
  4500 ;; This function is called by:
  4501 ;;		_terminal_operation
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text3
  4506  0109E0                     __ptext3:
  4507                           	opt stack 0
  4508  0109E0                     _terminal_time:
  4509                           	opt stack 11
  4510                           
  4511                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4512                           
  4513                           ;incstack = 0
  4514  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4515  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4516  0109E8  0E53               	movlw	low STR_25
  4517  0109EA  0100               	movlb	0	; () banked
  4518  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4519  0109EE  0EFF               	movlw	high STR_25
  4520  0109F0  0100               	movlb	0	; () banked
  4521  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4522  0109F4  EC1F  F0B2         	call	_strcmp	;wreg free
  4523  0109F8  0100               	movlb	0	; () banked
  4524  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4525  0109FC  0100               	movlb	0	; () banked
  4526  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4527  010A00  B4D8               	btfsc	status,2,c
  4528  010A02  D012               	goto	l11647
  4529                           
  4530                           ; BSR set to: 0
  4531  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4532  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4533  010A0C  0EEF               	movlw	low (STR_27+1)
  4534  010A0E  0100               	movlb	0	; () banked
  4535  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4536  010A12  0EFF               	movlw	high (STR_27+1)
  4537  010A14  0100               	movlb	0	; () banked
  4538  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4539  010A18  EC1F  F0B2         	call	_strcmp	;wreg free
  4540  010A1C  0100               	movlb	0	; () banked
  4541  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4542  010A20  0100               	movlb	0	; () banked
  4543  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4544  010A24  A4D8               	btfss	status,2,c
  4545  010A26  D006               	goto	l11649
  4546  010A28                     l11647:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;My_terminal.c: 95: print_time(tx);
  4550  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4551  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4552  010A30  EC2D  F0AE         	call	_print_time	;wreg free
  4553  010A34                     l11649:
  4554                           
  4555                           ;My_terminal.c: 96: }
  4556                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4557  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4558  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4559  010A3C  0EEE               	movlw	low STR_27
  4560  010A3E  0100               	movlb	0	; () banked
  4561  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4562  010A42  0EFF               	movlw	high STR_27
  4563  010A44  0100               	movlb	0	; () banked
  4564  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4565  010A48  EC1F  F0B2         	call	_strcmp	;wreg free
  4566  010A4C  0100               	movlb	0	; () banked
  4567  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4568  010A50  0100               	movlb	0	; () banked
  4569  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4570  010A54  B4D8               	btfsc	status,2,c
  4571  010A56  D012               	goto	l11653
  4572                           
  4573                           ; BSR set to: 0
  4574  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4575  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4576  010A60  0E31               	movlw	low STR_28
  4577  010A62  0100               	movlb	0	; () banked
  4578  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4579  010A66  0EFF               	movlw	high STR_28
  4580  010A68  0100               	movlb	0	; () banked
  4581  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4582  010A6C  EC1F  F0B2         	call	_strcmp	;wreg free
  4583  010A70  0100               	movlb	0	; () banked
  4584  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4585  010A74  0100               	movlb	0	; () banked
  4586  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4587  010A78  A4D8               	btfss	status,2,c
  4588  010A7A  0012               	return	
  4589  010A7C                     l11653:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4593  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4594  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4595  010A84  0EE9               	movlw	low (STR_34+2)
  4596  010A86  0100               	movlb	0	; () banked
  4597  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4598  010A8A  0EFF               	movlw	high (STR_34+2)
  4599  010A8C  0100               	movlb	0	; () banked
  4600  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4601  010A90  EC1F  F0B2         	call	_strcmp	;wreg free
  4602  010A94  0100               	movlb	0	; () banked
  4603  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4604  010A98  0100               	movlb	0	; () banked
  4605  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4606  010A9C  B4D8               	btfsc	status,2,c
  4607  010A9E  D012               	goto	l11657
  4608                           
  4609                           ; BSR set to: 0
  4610  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4611  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4612  010AA8  0ED9               	movlw	low STR_30
  4613  010AAA  0100               	movlb	0	; () banked
  4614  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4615  010AAE  0EFF               	movlw	high STR_30
  4616  010AB0  0100               	movlb	0	; () banked
  4617  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4618  010AB4  EC1F  F0B2         	call	_strcmp	;wreg free
  4619  010AB8  0100               	movlb	0	; () banked
  4620  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4621  010ABC  0100               	movlb	0	; () banked
  4622  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4623  010AC0  A4D8               	btfss	status,2,c
  4624  010AC2  D01C               	goto	l11659
  4625  010AC4                     l11657:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4629  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4630  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4631  010ACC  0E84               	movlw	low (_now+10)
  4632  010ACE  0100               	movlb	0	; () banked
  4633  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4634  010AD2  0E01               	movlw	high (_now+10)
  4635  010AD4  0100               	movlb	0	; () banked
  4636  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4637  010AD8  0E00               	movlw	0
  4638  010ADA  0100               	movlb	0	; () banked
  4639  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4640  010ADE  0E63               	movlw	99
  4641  010AE0  0100               	movlb	0	; () banked
  4642  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4643  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4644  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4645  010AEC  EC2F  F0A0         	call	_atoi	;wreg free
  4646  010AF0  0100               	movlb	0	; () banked
  4647  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4648  010AF4  0100               	movlb	0	; () banked
  4649  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4650  010AF8  ECBF  F0B1         	call	_terminal_at_hand	;wreg free
  4651  010AFC                     l11659:
  4652                           
  4653                           ;My_terminal.c: 100: }
  4654                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4655  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4656  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4657  010B04  0EF3               	movlw	low STR_31
  4658  010B06  0100               	movlb	0	; () banked
  4659  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4660  010B0A  0EFF               	movlw	high STR_31
  4661  010B0C  0100               	movlb	0	; () banked
  4662  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4663  010B10  EC1F  F0B2         	call	_strcmp	;wreg free
  4664  010B14  0100               	movlb	0	; () banked
  4665  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4666  010B18  0100               	movlb	0	; () banked
  4667  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4668  010B1C  B4D8               	btfsc	status,2,c
  4669  010B1E  D012               	goto	l11663
  4670                           
  4671                           ; BSR set to: 0
  4672  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4673  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4674  010B28  0EC9               	movlw	low STR_32
  4675  010B2A  0100               	movlb	0	; () banked
  4676  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4677  010B2E  0EFF               	movlw	high STR_32
  4678  010B30  0100               	movlb	0	; () banked
  4679  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4680  010B34  EC1F  F0B2         	call	_strcmp	;wreg free
  4681  010B38  0100               	movlb	0	; () banked
  4682  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4683  010B3C  0100               	movlb	0	; () banked
  4684  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4685  010B40  A4D8               	btfss	status,2,c
  4686  010B42  D01C               	goto	l11665
  4687  010B44                     l11663:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4691  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4692  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4693  010B4C  0E83               	movlw	low (_now+9)
  4694  010B4E  0100               	movlb	0	; () banked
  4695  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4696  010B52  0E01               	movlw	high (_now+9)
  4697  010B54  0100               	movlb	0	; () banked
  4698  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4699  010B58  0E01               	movlw	1
  4700  010B5A  0100               	movlb	0	; () banked
  4701  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4702  010B5E  0E0C               	movlw	12
  4703  010B60  0100               	movlb	0	; () banked
  4704  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4705  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4706  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4707  010B6C  EC2F  F0A0         	call	_atoi	;wreg free
  4708  010B70  0100               	movlb	0	; () banked
  4709  010B72  517C               	movf	?_atoi& (0+255),w,b
  4710  010B74  0100               	movlb	0	; () banked
  4711  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4712  010B78  ECBF  F0B1         	call	_terminal_at_hand	;wreg free
  4713  010B7C                     l11665:
  4714                           
  4715                           ;My_terminal.c: 103: }
  4716                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4717  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4718  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4719  010B84  0EFF               	movlw	low (STR_67+30)
  4720  010B86  0100               	movlb	0	; () banked
  4721  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4722  010B8A  0EFD               	movlw	high (STR_67+30)
  4723  010B8C  0100               	movlb	0	; () banked
  4724  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4725  010B90  EC1F  F0B2         	call	_strcmp	;wreg free
  4726  010B94  0100               	movlb	0	; () banked
  4727  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4728  010B98  0100               	movlb	0	; () banked
  4729  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4730  010B9C  B4D8               	btfsc	status,2,c
  4731  010B9E  D012               	goto	l11669
  4732                           
  4733                           ; BSR set to: 0
  4734  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4735  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4736  010BA8  0EE7               	movlw	low STR_34
  4737  010BAA  0100               	movlb	0	; () banked
  4738  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4739  010BAE  0EFF               	movlw	high STR_34
  4740  010BB0  0100               	movlb	0	; () banked
  4741  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4742  010BB4  EC1F  F0B2         	call	_strcmp	;wreg free
  4743  010BB8  0100               	movlb	0	; () banked
  4744  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4745  010BBC  0100               	movlb	0	; () banked
  4746  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4747  010BC0  A4D8               	btfss	status,2,c
  4748  010BC2  D023               	goto	l11673
  4749  010BC4                     l11669:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4753  010BC4  C183  F066         	movff	_now+9,month_length@month
  4754  010BC8  0101               	movlb	1	; () banked
  4755  010BCA  5184               	movf	(_now+10)& (0+255),w,b
  4756  010BCC  EC5C  F0A3         	call	_month_length
  4757  010BD0  0100               	movlb	0	; () banked
  4758  010BD2  6FDA               	movwf	_terminal_time$7033& (0+255),b
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4762  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4763  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4764  010BDC  0E82               	movlw	low (_now+8)
  4765  010BDE  0100               	movlb	0	; () banked
  4766  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4767  010BE2  0E01               	movlw	high (_now+8)
  4768  010BE4  0100               	movlb	0	; () banked
  4769  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4770  010BE8  0E01               	movlw	1
  4771  010BEA  0100               	movlb	0	; () banked
  4772  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4773  010BEE  C0DA  F0D0         	movff	_terminal_time$7033,terminal_at_hand@max
  4774  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4775  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4776  010BFA  EC2F  F0A0         	call	_atoi	;wreg free
  4777  010BFE  0100               	movlb	0	; () banked
  4778  010C00  517C               	movf	?_atoi& (0+255),w,b
  4779  010C02  0100               	movlb	0	; () banked
  4780  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4781  010C06  ECBF  F0B1         	call	_terminal_at_hand	;wreg free
  4782  010C0A                     l11673:
  4783                           
  4784                           ;My_terminal.c: 106: }
  4785                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4786  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4787  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4788  010C12  0E4B               	movlw	low (STR_68+22)
  4789  010C14  0100               	movlb	0	; () banked
  4790  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4791  010C18  0EFE               	movlw	high (STR_68+22)
  4792  010C1A  0100               	movlb	0	; () banked
  4793  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4794  010C1E  EC1F  F0B2         	call	_strcmp	;wreg free
  4795  010C22  0100               	movlb	0	; () banked
  4796  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4797  010C26  0100               	movlb	0	; () banked
  4798  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4799  010C2A  B4D8               	btfsc	status,2,c
  4800  010C2C  D012               	goto	l11677
  4801                           
  4802                           ; BSR set to: 0
  4803  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4804  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4805  010C36  0EDE               	movlw	low STR_36
  4806  010C38  0100               	movlb	0	; () banked
  4807  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4808  010C3C  0EFF               	movlw	high STR_36
  4809  010C3E  0100               	movlb	0	; () banked
  4810  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4811  010C42  EC1F  F0B2         	call	_strcmp	;wreg free
  4812  010C46  0100               	movlb	0	; () banked
  4813  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4814  010C4A  0100               	movlb	0	; () banked
  4815  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4816  010C4E  A4D8               	btfss	status,2,c
  4817  010C50  D01C               	goto	l11679
  4818  010C52                     l11677:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4822  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4823  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4824  010C5A  0E80               	movlw	low (_now+6)
  4825  010C5C  0100               	movlb	0	; () banked
  4826  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4827  010C60  0E01               	movlw	high (_now+6)
  4828  010C62  0100               	movlb	0	; () banked
  4829  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4830  010C66  0E00               	movlw	0
  4831  010C68  0100               	movlb	0	; () banked
  4832  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4833  010C6C  0E17               	movlw	23
  4834  010C6E  0100               	movlb	0	; () banked
  4835  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4836  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4837  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4838  010C7A  EC2F  F0A0         	call	_atoi	;wreg free
  4839  010C7E  0100               	movlb	0	; () banked
  4840  010C80  517C               	movf	?_atoi& (0+255),w,b
  4841  010C82  0100               	movlb	0	; () banked
  4842  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4843  010C86  ECBF  F0B1         	call	_terminal_at_hand	;wreg free
  4844  010C8A                     l11679:
  4845                           
  4846                           ;My_terminal.c: 109: }
  4847                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4848  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4849  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4850  010C92  0EF5               	movlw	low STR_37
  4851  010C94  0100               	movlb	0	; () banked
  4852  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4853  010C98  0EFF               	movlw	high STR_37
  4854  010C9A  0100               	movlb	0	; () banked
  4855  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4856  010C9E  EC1F  F0B2         	call	_strcmp	;wreg free
  4857  010CA2  0100               	movlb	0	; () banked
  4858  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4859  010CA6  0100               	movlb	0	; () banked
  4860  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4861  010CAA  B4D8               	btfsc	status,2,c
  4862  010CAC  D012               	goto	l11683
  4863                           
  4864                           ; BSR set to: 0
  4865  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4866  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4867  010CB6  0E98               	movlw	low STR_38
  4868  010CB8  0100               	movlb	0	; () banked
  4869  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4870  010CBC  0EFF               	movlw	high STR_38
  4871  010CBE  0100               	movlb	0	; () banked
  4872  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4873  010CC2  EC1F  F0B2         	call	_strcmp	;wreg free
  4874  010CC6  0100               	movlb	0	; () banked
  4875  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4876  010CCA  0100               	movlb	0	; () banked
  4877  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4878  010CCE  A4D8               	btfss	status,2,c
  4879  010CD0  D01C               	goto	l11685
  4880  010CD2                     l11683:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4884  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4885  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4886  010CDA  0E7F               	movlw	low (_now+5)
  4887  010CDC  0100               	movlb	0	; () banked
  4888  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4889  010CE0  0E01               	movlw	high (_now+5)
  4890  010CE2  0100               	movlb	0	; () banked
  4891  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4892  010CE6  0E00               	movlw	0
  4893  010CE8  0100               	movlb	0	; () banked
  4894  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4895  010CEC  0E3B               	movlw	59
  4896  010CEE  0100               	movlb	0	; () banked
  4897  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4898  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4899  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4900  010CFA  EC2F  F0A0         	call	_atoi	;wreg free
  4901  010CFE  0100               	movlb	0	; () banked
  4902  010D00  517C               	movf	?_atoi& (0+255),w,b
  4903  010D02  0100               	movlb	0	; () banked
  4904  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4905  010D06  ECBF  F0B1         	call	_terminal_at_hand	;wreg free
  4906  010D0A                     l11685:
  4907                           
  4908                           ;My_terminal.c: 112: }
  4909                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4910  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4911  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4912  010D12  0EBB               	movlw	low (STR_70+4)
  4913  010D14  0100               	movlb	0	; () banked
  4914  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4915  010D18  0EFF               	movlw	high (STR_70+4)
  4916  010D1A  0100               	movlb	0	; () banked
  4917  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4918  010D1E  EC1F  F0B2         	call	_strcmp	;wreg free
  4919  010D22  0100               	movlb	0	; () banked
  4920  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4921  010D26  0100               	movlb	0	; () banked
  4922  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4923  010D2A  B4D8               	btfsc	status,2,c
  4924  010D2C  D012               	goto	l11689
  4925                           
  4926                           ; BSR set to: 0
  4927  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4928  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4929  010D36  0E91               	movlw	low STR_40
  4930  010D38  0100               	movlb	0	; () banked
  4931  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4932  010D3C  0EFF               	movlw	high STR_40
  4933  010D3E  0100               	movlb	0	; () banked
  4934  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4935  010D42  EC1F  F0B2         	call	_strcmp	;wreg free
  4936  010D46  0100               	movlb	0	; () banked
  4937  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4938  010D4A  0100               	movlb	0	; () banked
  4939  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4940  010D4E  A4D8               	btfss	status,2,c
  4941  010D50  0012               	return	
  4942  010D52                     l11689:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4946  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4947  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4948  010D5A  0E7E               	movlw	low (_now+4)
  4949  010D5C  0100               	movlb	0	; () banked
  4950  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4951  010D60  0E01               	movlw	high (_now+4)
  4952  010D62  0100               	movlb	0	; () banked
  4953  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4954  010D66  0E00               	movlw	0
  4955  010D68  0100               	movlb	0	; () banked
  4956  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4957  010D6C  0E3B               	movlw	59
  4958  010D6E  0100               	movlb	0	; () banked
  4959  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4960  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4961  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4962  010D7A  EC2F  F0A0         	call	_atoi	;wreg free
  4963  010D7E  0100               	movlb	0	; () banked
  4964  010D80  517C               	movf	?_atoi& (0+255),w,b
  4965  010D82  0100               	movlb	0	; () banked
  4966  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4967  010D86  ECBF  F0B1         	call	_terminal_at_hand	;wreg free
  4968  010D8A  0012               	return	
  4969  010D8C                     __end_of_terminal_time:
  4970                           	opt stack 0
  4971                           tblptru	equ	0xFF8
  4972                           tblptrh	equ	0xFF7
  4973                           tblptrl	equ	0xFF6
  4974                           tablat	equ	0xFF5
  4975                           prodh	equ	0xFF4
  4976                           prodl	equ	0xFF3
  4977                           intcon	equ	0xFF2
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           postdec1	equ	0xFE5
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           indf2	equ	0xFDF
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _terminal_at_hand *****************
  4989 ;; Defined at:
  4990 ;;		line 82 in file "../My_library/My_terminal.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4993 ;;		 -> usb_tx(8), 
  4994 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  4995 ;;		 -> now(14), 
  4996 ;;  min             1  111[BANK0 ] unsigned char 
  4997 ;;  max             1  112[BANK0 ] unsigned char 
  4998 ;;  value           1  113[BANK0 ] unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5010 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5014 ;;Total ram usage:        7 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:   16
  5017 ;; This function calls:
  5018 ;;		_RTCC_from_caltime
  5019 ;;		_print_time
  5020 ;;		_ringbuf_put_str
  5021 ;; This function is called by:
  5022 ;;		_terminal_time
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text4
  5027  01637E                     __ptext4:
  5028                           	opt stack 0
  5029  01637E                     _terminal_at_hand:
  5030                           	opt stack 11
  5031                           
  5032                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  5033                           
  5034                           ;incstack = 0
  5035  01637E  0100               	movlb	0	; () banked
  5036  016380  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  5037  016382  0100               	movlb	0	; () banked
  5038  016384  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  5039  016386  A0D8               	btfss	status,0,c
  5040  016388  D01D               	goto	l11297
  5041                           
  5042                           ; BSR set to: 0
  5043  01638A  0100               	movlb	0	; () banked
  5044  01638C  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  5045  01638E  0100               	movlb	0	; () banked
  5046  016390  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  5047  016392  A0D8               	btfss	status,0,c
  5048  016394  D017               	goto	l11297
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;My_terminal.c: 84: *hand = value;
  5052  016396  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  5053  01639A  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  5054  01639E  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  5058  0163A2  0E7A               	movlw	low _now
  5059  0163A4  0100               	movlb	0	; () banked
  5060  0163A6  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5061  0163A8  0E01               	movlw	high _now
  5062  0163AA  0100               	movlb	0	; () banked
  5063  0163AC  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5064  0163AE  EC7F  F0B5         	call	_RTCC_from_caltime	;wreg free
  5065                           
  5066                           ;My_terminal.c: 86: time_change_flag = 1;
  5067  0163B2  0E01               	movlw	1
  5068  0163B4  6E22               	movwf	_time_change_flag,c
  5069                           
  5070                           ;My_terminal.c: 87: print_time(tx);
  5071  0163B6  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5072  0163BA  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5073  0163BE  EC2D  F0AE         	call	_print_time	;wreg free
  5074                           
  5075                           ;My_terminal.c: 88: } else {
  5076  0163C2  0012               	return	
  5077  0163C4                     l11297:
  5078                           
  5079                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5080  0163C4  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5081  0163C8  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5082  0163CC  0E82               	movlw	low STR_24
  5083  0163CE  0100               	movlb	0	; () banked
  5084  0163D0  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5085  0163D2  0EFF               	movlw	high STR_24
  5086  0163D4  0100               	movlb	0	; () banked
  5087  0163D6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5088  0163D8  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  5089  0163DC  0012               	return	
  5090  0163DE                     __end_of_terminal_at_hand:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           intcon	equ	0xFF2
  5099                           postinc0	equ	0xFEE
  5100                           wreg	equ	0xFE8
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8
  5108                           
  5109 ;; *************** function _print_time *****************
  5110 ;; Defined at:
  5111 ;;		line 68 in file "../My_library/My_terminal.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5114 ;;		 -> usb_tx(8), 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  str            30   77[BANK0 ] unsigned char [30]
  5117 ;; Return value:  Size  Location     Type
  5118 ;;		None               void
  5119 ;; Registers used:
  5120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5129 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;Total ram usage:       32 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:   15
  5133 ;; This function calls:
  5134 ;;		_RTCC_from_RTCC
  5135 ;;		_ringbuf_put_str
  5136 ;;		_sprintf
  5137 ;; This function is called by:
  5138 ;;		_terminal_at_hand
  5139 ;;		_terminal_time
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text5
  5144  015C5A                     __ptext5:
  5145                           	opt stack 0
  5146  015C5A                     _print_time:
  5147                           	opt stack 11
  5148                           
  5149                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5150                           
  5151                           ;incstack = 0
  5152  015C5A  0E7A               	movlw	low _now
  5153  015C5C  0100               	movlb	0	; () banked
  5154  015C5E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5155  015C60  0E01               	movlw	high _now
  5156  015C62  0100               	movlb	0	; () banked
  5157  015C64  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5158  015C66  EC2D  F0B6         	call	_RTCC_from_RTCC	;wreg free
  5159                           
  5160                           ;My_terminal.c: 70: char str[30];
  5161                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5162                           ;My_terminal.c: 72: now.YY,
  5163                           ;My_terminal.c: 73: now.MM,
  5164                           ;My_terminal.c: 74: now.DD,
  5165                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5166                           ;My_terminal.c: 76: now.hh,
  5167                           ;My_terminal.c: 77: now.mm,
  5168                           ;My_terminal.c: 78: now.ss);
  5169  015C6A  0EAD               	movlw	low print_time@str
  5170  015C6C  0100               	movlb	0	; () banked
  5171  015C6E  6F83               	movwf	sprintf@sp& (0+255),b
  5172  015C70  0E00               	movlw	high print_time@str
  5173  015C72  0100               	movlb	0	; () banked
  5174  015C74  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5175  015C76  0E98               	movlw	low STR_23
  5176  015C78  0100               	movlb	0	; () banked
  5177  015C7A  6F85               	movwf	sprintf@f& (0+255),b
  5178  015C7C  0EFD               	movlw	high STR_23
  5179  015C7E  0100               	movlb	0	; () banked
  5180  015C80  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5181  015C82  C184  F087         	movff	_now+10,?_sprintf+4
  5182  015C86  0100               	movlb	0	; () banked
  5183  015C88  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5184  015C8A  C183  F089         	movff	_now+9,?_sprintf+6
  5185  015C8E  0100               	movlb	0	; () banked
  5186  015C90  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5187  015C92  C182  F08B         	movff	_now+8,?_sprintf+8
  5188  015C96  0100               	movlb	0	; () banked
  5189  015C98  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5190  015C9A  0101               	movlb	1	; () banked
  5191  015C9C  5181               	movf	(_now+7)& (0+255),w,b
  5192  015C9E  0D04               	mullw	4
  5193  015CA0  0EA4               	movlw	low _weekday_3char
  5194  015CA2  24F3               	addwf	prodl,w,c
  5195  015CA4  0100               	movlb	0	; () banked
  5196  015CA6  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5197  015CA8  0EFB               	movlw	high _weekday_3char
  5198  015CAA  20F4               	addwfc	prodh,w,c
  5199  015CAC  0100               	movlb	0	; () banked
  5200  015CAE  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5201  015CB0  C180  F08F         	movff	_now+6,?_sprintf+12
  5202  015CB4  0100               	movlb	0	; () banked
  5203  015CB6  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5204  015CB8  C17F  F091         	movff	_now+5,?_sprintf+14
  5205  015CBC  0100               	movlb	0	; () banked
  5206  015CBE  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5207  015CC0  C17E  F093         	movff	_now+4,?_sprintf+16
  5208  015CC4  0100               	movlb	0	; () banked
  5209  015CC6  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5210  015CC8  EC00  F080         	call	_sprintf	;wreg free
  5211                           
  5212                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5213  015CCC  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5214  015CD0  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5215  015CD4  0EAD               	movlw	low print_time@str
  5216  015CD6  0100               	movlb	0	; () banked
  5217  015CD8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5218  015CDA  0E00               	movlw	high print_time@str
  5219  015CDC  0100               	movlb	0	; () banked
  5220  015CDE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5221  015CE0  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
  5222  015CE4  0012               	return		;funcret
  5223  015CE6                     __end_of_print_time:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           intcon	equ	0xFF2
  5232                           postinc0	equ	0xFEE
  5233                           wreg	equ	0xFE8
  5234                           postdec1	equ	0xFE5
  5235                           fsr1h	equ	0xFE2
  5236                           fsr1l	equ	0xFE1
  5237                           indf2	equ	0xFDF
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _RTCC_from_caltime *****************
  5243 ;; Defined at:
  5244 ;;		line 204 in file "../My_library/My_RTCC.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  tm              2   47[BANK0 ] PTR struct .
  5247 ;;		 -> now(14), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;		None               void
  5252 ;; Registers used:
  5253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5259 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;Total ram usage:        2 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:   14
  5266 ;; This function calls:
  5267 ;;		_caltime_to_RTCC
  5268 ;;		_caltime_to_epoch
  5269 ;;		_epoch_to_caltime
  5270 ;; This function is called by:
  5271 ;;		_terminal_at_hand
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text6
  5276  016AFE                     __ptext6:
  5277                           	opt stack 0
  5278  016AFE                     _RTCC_from_caltime:
  5279                           	opt stack 12
  5280                           
  5281                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5282                           
  5283                           ;incstack = 0
  5284  016AFE  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5285  016B02  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5286  016B06  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5287                           
  5288                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5289  016B0A  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5290  016B0E  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5291  016B12  EC25  F096         	call	_epoch_to_caltime	;wreg free
  5292                           
  5293                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5294  016B16  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5295  016B1A  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5296  016B1E  EC37  F0A4         	call	_caltime_to_RTCC	;wreg free
  5297  016B22  0012               	return		;funcret
  5298  016B24                     __end_of_RTCC_from_caltime:
  5299                           	opt stack 0
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodh	equ	0xFF4
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           postinc0	equ	0xFEE
  5308                           wreg	equ	0xFE8
  5309                           postdec1	equ	0xFE5
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           indf2	equ	0xFDF
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _strcmp *****************
  5318 ;; Defined at:
  5319 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5322 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5323 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5324 ;;		 -> STR_65(2), STR_64(6), STR_61(5), STR_60(11), 
  5325 ;;		 -> STR_59(6), STR_58(1), STR_57(12), STR_56(3), 
  5326 ;;		 -> STR_55(9), STR_54(9), STR_52(2), STR_51(5), 
  5327 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5328 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5329 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5330 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  r               1    5[BANK0 ] char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  2    0[BANK0 ] int 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5342 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5345 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5346 ;;Total ram usage:        6 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:   11
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_terminal_time
  5353 ;;		_terminal_operation
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text7
  5358  01643E                     __ptext7:
  5359                           	opt stack 0
  5360  01643E                     _strcmp:
  5361                           	opt stack 16
  5362                           
  5363                           ;incstack = 0
  5364  01643E  D006               	goto	l11303
  5365  016440                     l11301:
  5366  016440  0100               	movlb	0	; () banked
  5367  016442  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5368  016444  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5369  016446  0100               	movlb	0	; () banked
  5370  016448  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5371  01644A  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5372  01644C                     l11303:
  5373  01644C  C060  FFD9         	movff	strcmp@s1,fsr2l
  5374  016450  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5375  016454  50DF               	movf	indf2,w,c
  5376  016456  0100               	movlb	0	; () banked
  5377  016458  6F64               	movwf	??_strcmp& (0+255),b
  5378  01645A  C062  FFF6         	movff	strcmp@s2,tblptrl
  5379  01645E  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5380  016462                     	if	0	;tblptru may be non-zero
  5381  016462                     	endif
  5382  016462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5383  016462  0E00               	movlw	low (__mediumconst shr (0+16))
  5384  016464  6EF8               	movwf	tblptru,c
  5385  016466                     	endif
  5386  016466  0008               	tblrd		*
  5387  016468  50F5               	movf	tablat,w,c
  5388  01646A  0800               	sublw	0
  5389  01646C  0100               	movlb	0	; () banked
  5390  01646E  2564               	addwf	??_strcmp& (0+255),w,b
  5391  016470  0100               	movlb	0	; () banked
  5392  016472  6F65               	movwf	strcmp@r& (0+255),b
  5393  016474  0100               	movlb	0	; () banked
  5394  016476  5165               	movf	strcmp@r& (0+255),w,b
  5395  016478  A4D8               	btfss	status,2,c
  5396  01647A  D007               	goto	l11307
  5397                           
  5398                           ; BSR set to: 0
  5399  01647C  C060  FFD9         	movff	strcmp@s1,fsr2l
  5400  016480  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5401  016484  50DF               	movf	indf2,w,c
  5402  016486  A4D8               	btfss	status,2,c
  5403  016488  D7DB               	goto	l11301
  5404  01648A                     l11307:
  5405                           
  5406                           ; BSR set to: 0
  5407  01648A  0100               	movlb	0	; () banked
  5408  01648C  5165               	movf	strcmp@r& (0+255),w,b
  5409  01648E  0100               	movlb	0	; () banked
  5410  016490  6F60               	movwf	?_strcmp& (0+255),b
  5411  016492  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5412  016494  BF60               	btfsc	?_strcmp& (0+255),7,b
  5413  016496  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5414  016498  0012               	return	
  5415  01649A                     __end_of_strcmp:
  5416                           	opt stack 0
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           postdec1	equ	0xFE5
  5427                           fsr1h	equ	0xFE2
  5428                           fsr1l	equ	0xFE1
  5429                           indf2	equ	0xFDF
  5430                           fsr2h	equ	0xFDA
  5431                           fsr2l	equ	0xFD9
  5432                           status	equ	0xFD8
  5433                           
  5434 ;; *************** function _atoi *****************
  5435 ;; Defined at:
  5436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5439 ;;		 -> terminal_task@op2(25), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  a               2   33[BANK0 ] int 
  5442 ;;  sign            1   32[BANK0 ] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  2   28[BANK0 ] int 
  5445 ;; Registers used:
  5446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5453 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5455 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;Total ram usage:        7 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:   12
  5459 ;; This function calls:
  5460 ;;		___wmul
  5461 ;;		_isdigit
  5462 ;; This function is called by:
  5463 ;;		_terminal_time
  5464 ;;		_terminal_operation
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text8
  5469  01405E                     __ptext8:
  5470                           	opt stack 0
  5471  01405E                     _atoi:
  5472                           	opt stack 15
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;incstack = 0
  5476  01405E  D003               	goto	l11315
  5477  014060                     l11313:
  5478  014060  0100               	movlb	0	; () banked
  5479  014062  4B7C               	infsnz	atoi@s& (0+255),f,b
  5480  014064  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5481  014066                     l11315:
  5482  014066  C07C  FFD9         	movff	atoi@s,fsr2l
  5483  01406A  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5484  01406E  0E20               	movlw	32
  5485  014070  18DE               	xorwf	postinc2,w,c
  5486  014072  B4D8               	btfsc	status,2,c
  5487  014074  D7F5               	goto	l11313
  5488  014076  C07C  FFD9         	movff	atoi@s,fsr2l
  5489  01407A  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5490  01407E  0E09               	movlw	9
  5491  014080  18DE               	xorwf	postinc2,w,c
  5492  014082  B4D8               	btfsc	status,2,c
  5493  014084  D7ED               	goto	l11313
  5494  014086  0E00               	movlw	0
  5495  014088  0100               	movlb	0	; () banked
  5496  01408A  6F82               	movwf	(atoi@a+1)& (0+255),b
  5497  01408C  0E00               	movlw	0
  5498  01408E  6F81               	movwf	atoi@a& (0+255),b
  5499  014090  0E00               	movlw	0
  5500  014092  0100               	movlb	0	; () banked
  5501  014094  6F80               	movwf	atoi@sign& (0+255),b
  5502                           
  5503                           ; BSR set to: 0
  5504  014096  C07C  FFD9         	movff	atoi@s,fsr2l
  5505  01409A  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5506  01409E  0E2D               	movlw	45
  5507  0140A0  18DE               	xorwf	postinc2,w,c
  5508  0140A2  A4D8               	btfss	status,2,c
  5509  0140A4  D003               	goto	l11325
  5510                           
  5511                           ; BSR set to: 0
  5512  0140A6  0100               	movlb	0	; () banked
  5513  0140A8  2B80               	incf	atoi@sign& (0+255),f,b
  5514  0140AA  D02E               	goto	l11331
  5515  0140AC                     l11325:
  5516                           
  5517                           ; BSR set to: 0
  5518  0140AC  C07C  FFD9         	movff	atoi@s,fsr2l
  5519  0140B0  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5520  0140B4  0E2B               	movlw	43
  5521  0140B6  18DE               	xorwf	postinc2,w,c
  5522  0140B8  A4D8               	btfss	status,2,c
  5523  0140BA  D029               	goto	l11333
  5524  0140BC  D025               	goto	l11331
  5525  0140BE                     l11329:
  5526  0140BE  C081  F076         	movff	atoi@a,___wmul@multiplier
  5527  0140C2  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5528  0140C6  0E00               	movlw	0
  5529  0140C8  0100               	movlb	0	; () banked
  5530  0140CA  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5531  0140CC  0E0A               	movlw	10
  5532  0140CE  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5533  0140D0  EC2A  F0B4         	call	___wmul	;wreg free
  5534  0140D4  C07C  FFD9         	movff	atoi@s,fsr2l
  5535  0140D8  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5536  0140DC  50DF               	movf	indf2,w,c
  5537  0140DE  0100               	movlb	0	; () banked
  5538  0140E0  6F7E               	movwf	??_atoi& (0+255),b
  5539  0140E2  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5540  0140E4  0100               	movlb	0	; () banked
  5541  0140E6  5176               	movf	?___wmul& (0+255),w,b
  5542  0140E8  0100               	movlb	0	; () banked
  5543  0140EA  277E               	addwf	??_atoi& (0+255),f,b
  5544  0140EC  0100               	movlb	0	; () banked
  5545  0140EE  5177               	movf	(?___wmul+1)& (0+255),w,b
  5546  0140F0  0100               	movlb	0	; () banked
  5547  0140F2  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5548  0140F4  0ED0               	movlw	208
  5549  0140F6  0100               	movlb	0	; () banked
  5550  0140F8  257E               	addwf	??_atoi& (0+255),w,b
  5551  0140FA  0100               	movlb	0	; () banked
  5552  0140FC  6F81               	movwf	atoi@a& (0+255),b
  5553  0140FE  0EFF               	movlw	255
  5554  014100  0100               	movlb	0	; () banked
  5555  014102  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5556  014104  0100               	movlb	0	; () banked
  5557  014106  6F82               	movwf	(atoi@a+1)& (0+255),b
  5558  014108                     l11331:
  5559                           
  5560                           ; BSR set to: 0
  5561  014108  0100               	movlb	0	; () banked
  5562  01410A  4B7C               	infsnz	atoi@s& (0+255),f,b
  5563  01410C  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5564  01410E                     l11333:
  5565                           
  5566                           ; BSR set to: 0
  5567  01410E  C07C  FFD9         	movff	atoi@s,fsr2l
  5568  014112  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5569  014116  50DF               	movf	indf2,w,c
  5570  014118  EC42  F0B5         	call	_isdigit
  5571  01411C  B0D8               	btfsc	status,0,c
  5572  01411E  D7CF               	goto	l11329
  5573  014120  0100               	movlb	0	; () banked
  5574  014122  5180               	movf	atoi@sign& (0+255),w,b
  5575  014124  0100               	movlb	0	; () banked
  5576  014126  B4D8               	btfsc	status,2,c
  5577  014128  D00E               	goto	l2183
  5578                           
  5579                           ; BSR set to: 0
  5580  01412A  C081  F07E         	movff	atoi@a,??_atoi
  5581  01412E  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5582  014132  0100               	movlb	0	; () banked
  5583  014134  1F7E               	comf	??_atoi& (0+255),f,b
  5584  014136  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5585  014138  4B7E               	infsnz	??_atoi& (0+255),f,b
  5586  01413A  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5587  01413C  C07E  F07C         	movff	??_atoi,?_atoi
  5588  014140  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5589  014144  0012               	return	
  5590  014146                     l2183:
  5591                           
  5592                           ; BSR set to: 0
  5593  014146  C081  F07C         	movff	atoi@a,?_atoi
  5594  01414A  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5595                           
  5596                           ; BSR set to: 0
  5597  01414E  0012               	return		;funcret
  5598  014150                     __end_of_atoi:
  5599                           	opt stack 0
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           prodh	equ	0xFF4
  5605                           prodl	equ	0xFF3
  5606                           intcon	equ	0xFF2
  5607                           postinc0	equ	0xFEE
  5608                           wreg	equ	0xFE8
  5609                           postdec1	equ	0xFE5
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _bootload *****************
  5619 ;; Defined at:
  5620 ;;		line 191 in file "ChargeStation_task.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;		None               void
  5627 ;; Registers used:
  5628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:   15
  5641 ;; This function calls:
  5642 ;;		_I2C_LCD_Clear
  5643 ;;		_I2C_LCD_Puts
  5644 ;;		_I2C_LCD_SetCursor
  5645 ;; This function is called by:
  5646 ;;		_terminal_operation
  5647 ;;		_main
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text9
  5652  01667E                     __ptext9:
  5653                           	opt stack 0
  5654  01667E                     _bootload:
  5655                           	opt stack 13
  5656                           
  5657                           ;ChargeStation_task.c: 192: I2C_LCD_Clear();
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;incstack = 0
  5661  01667E  EC20  F0B6         	call	_I2C_LCD_Clear	;wreg free
  5662                           
  5663                           ;ChargeStation_task.c: 193: I2C_LCD_SetCursor(0, 0);
  5664  016682  0E00               	movlw	0
  5665  016684  0100               	movlb	0	; () banked
  5666  016686  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5667  016688  0E00               	movlw	0
  5668  01668A  ECBE  F0B4         	call	_I2C_LCD_SetCursor
  5669                           
  5670                           ;ChargeStation_task.c: 194: I2C_LCD_Puts("PIC18F27J53");
  5671  01668E  0E19               	movlw	low STR_49
  5672  016690  0100               	movlb	0	; () banked
  5673  016692  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5674  016694  0EFF               	movlw	high STR_49
  5675  016696  0100               	movlb	0	; () banked
  5676  016698  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5677  01669A  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5678                           
  5679                           ;ChargeStation_task.c: 195: I2C_LCD_SetCursor(0, 1);
  5680  01669E  0E01               	movlw	1
  5681  0166A0  0100               	movlb	0	; () banked
  5682  0166A2  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5683  0166A4  0E00               	movlw	0
  5684  0166A6  ECBE  F0B4         	call	_I2C_LCD_SetCursor
  5685                           
  5686                           ;ChargeStation_task.c: 196: I2C_LCD_Puts("Bootloader mode");
  5687  0166AA  0EC3               	movlw	low STR_50
  5688  0166AC  0100               	movlb	0	; () banked
  5689  0166AE  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5690  0166B0  0EFE               	movlw	high STR_50
  5691  0166B2  0100               	movlb	0	; () banked
  5692  0166B4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5693  0166B6  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5694  0166BA  EF0E F000          	goto	28	;# 
  5695  0166BE  0012               	return		;funcret
  5696  0166C0                     __end_of_bootload:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           postdec1	equ	0xFE5
  5708                           fsr1h	equ	0xFE2
  5709                           fsr1l	equ	0xFE1
  5710                           indf2	equ	0xFDF
  5711                           postinc2	equ	0xFDE
  5712                           fsr2h	equ	0xFDA
  5713                           fsr2l	equ	0xFD9
  5714                           status	equ	0xFD8
  5715                           
  5716 ;; *************** function _ringbuf_put_num *****************
  5717 ;; Defined at:
  5718 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5721 ;;		 -> usb_tx(8), 
  5722 ;;  value           2   37[BANK0 ] const unsigned int 
  5723 ;;  digits          1   39[BANK0 ] unsigned char 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  i               1   40[BANK0 ] unsigned char 
  5726 ;;  temp            2   41[BANK0 ] unsigned int 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;		None               void
  5729 ;; Registers used:
  5730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5736 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;Total ram usage:        8 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:   13
  5743 ;; This function calls:
  5744 ;;		___lwdiv
  5745 ;;		___lwmod
  5746 ;;		_ringbuf_put
  5747 ;; This function is called by:
  5748 ;;		_terminal_task
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text10
  5753  015DF0                     __ptext10:
  5754                           	opt stack 0
  5755  015DF0                     _ringbuf_put_num:
  5756                           	opt stack 16
  5757                           
  5758                           ;My_ringbuf.c: 29: while (digits--) {
  5759                           
  5760                           ;incstack = 0
  5761  015DF0  D039               	goto	l12131
  5762  015DF2                     l774:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5766  015DF2  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5767  015DF6  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5771  015DFA  0E00               	movlw	0
  5772  015DFC  0100               	movlb	0	; () banked
  5773  015DFE  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5774  015E00  D011               	goto	l12125
  5775  015E02                     l12121:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;My_ringbuf.c: 32: temp /= 10;
  5779  015E02  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5780  015E06  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5781  015E0A  0E00               	movlw	0
  5782  015E0C  0100               	movlb	0	; () banked
  5783  015E0E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5784  015E10  0E0A               	movlw	10
  5785  015E12  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5786  015E14  EC39  F0AF         	call	___lwdiv	;wreg free
  5787  015E18  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5788  015E1C  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5789  015E20  0100               	movlb	0	; () banked
  5790  015E22  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5791  015E24                     l12125:
  5792                           
  5793                           ; BSR set to: 0
  5794  015E24  0100               	movlb	0	; () banked
  5795  015E26  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5796  015E28  0100               	movlb	0	; () banked
  5797  015E2A  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5798  015E2C  A0D8               	btfss	status,0,c
  5799  015E2E  D7E9               	goto	l12121
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;My_ringbuf.c: 33: }
  5803                           ;My_ringbuf.c: 34: temp %= 10;
  5804                           
  5805                           ; BSR set to: 0
  5806  015E30  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5807  015E34  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5808  015E38  0E00               	movlw	0
  5809  015E3A  0100               	movlb	0	; () banked
  5810  015E3C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5811  015E3E  0E0A               	movlw	10
  5812  015E40  6F62               	movwf	___lwmod@divisor& (0+255),b
  5813  015E42  EC8E  F0B1         	call	___lwmod	;wreg free
  5814  015E46  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5815  015E4A  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5816                           
  5817                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5818  015E4E  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5819  015E52  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5820  015E56  0100               	movlb	0	; () banked
  5821  015E58  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5822  015E5A  0F30               	addlw	48
  5823  015E5C  0100               	movlb	0	; () banked
  5824  015E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5825  015E60  EC77  F0A5         	call	_ringbuf_put	;wreg free
  5826  015E64                     l12131:
  5827  015E64  0100               	movlb	0	; () banked
  5828  015E66  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5829  015E68  0100               	movlb	0	; () banked
  5830  015E6A  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5831  015E6C  B4D8               	btfsc	status,2,c
  5832  015E6E  0012               	return	
  5833  015E70  D7C0               	goto	l774
  5834  015E72                     __end_of_ringbuf_put_num:
  5835                           	opt stack 0
  5836                           tblptru	equ	0xFF8
  5837                           tblptrh	equ	0xFF7
  5838                           tblptrl	equ	0xFF6
  5839                           tablat	equ	0xFF5
  5840                           prodh	equ	0xFF4
  5841                           prodl	equ	0xFF3
  5842                           intcon	equ	0xFF2
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           postdec1	equ	0xFE5
  5846                           fsr1h	equ	0xFE2
  5847                           fsr1l	equ	0xFE1
  5848                           indf2	equ	0xFDF
  5849                           postinc2	equ	0xFDE
  5850                           fsr2h	equ	0xFDA
  5851                           fsr2l	equ	0xFD9
  5852                           status	equ	0xFD8
  5853                           
  5854 ;; *************** function _ringbuf_delete *****************
  5855 ;; Defined at:
  5856 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5859 ;;		 -> terminal_task@command(8), 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;		None               void
  5864 ;; Registers used:
  5865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;Total ram usage:        2 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:   11
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_terminal_task
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text11
  5886  016B24                     __ptext11:
  5887                           	opt stack 0
  5888  016B24                     _ringbuf_delete:
  5889                           	opt stack 18
  5890                           
  5891                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;incstack = 0
  5895  016B24  0100               	movlb	0	; () banked
  5896  016B26  EE20 F006          	lfsr	2,6
  5897  016B2A  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5898  016B2C  26D9               	addwf	fsr2l,f,c
  5899  016B2E  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5900  016B30  22DA               	addwfc	fsr2h,f,c
  5901  016B32  0100               	movlb	0	; () banked
  5902  016B34  EE10 F004          	lfsr	1,4
  5903  016B38  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5904  016B3A  26E1               	addwf	fsr1l,f,c
  5905  016B3C  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5906  016B3E  22E2               	addwfc	fsr1h,f,c
  5907  016B40  CFDE FFE6          	movff	postinc2,postinc1
  5908  016B44  CFDD FFE5          	movff	postdec2,postdec1
  5909                           
  5910                           ; BSR set to: 0
  5911  016B48  0012               	return		;funcret
  5912  016B4A                     __end_of_ringbuf_delete:
  5913                           	opt stack 0
  5914                           tblptru	equ	0xFF8
  5915                           tblptrh	equ	0xFF7
  5916                           tblptrl	equ	0xFF6
  5917                           tablat	equ	0xFF5
  5918                           prodh	equ	0xFF4
  5919                           prodl	equ	0xFF3
  5920                           intcon	equ	0xFF2
  5921                           postinc0	equ	0xFEE
  5922                           wreg	equ	0xFE8
  5923                           postinc1	equ	0xFE6
  5924                           postdec1	equ	0xFE5
  5925                           fsr1h	equ	0xFE2
  5926                           fsr1l	equ	0xFE1
  5927                           indf2	equ	0xFDF
  5928                           postinc2	equ	0xFDE
  5929                           postdec2	equ	0xFDD
  5930                           fsr2h	equ	0xFDA
  5931                           fsr2l	equ	0xFD9
  5932                           status	equ	0xFD8
  5933                           
  5934 ;; *************** function _ringbuf_backspace *****************
  5935 ;; Defined at:
  5936 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5939 ;;		 -> terminal_task@command(8), 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;		None               void
  5944 ;; Registers used:
  5945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5954 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;Total ram usage:        6 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:   12
  5958 ;; This function calls:
  5959 ;;		_ringbuf_num
  5960 ;; This function is called by:
  5961 ;;		_terminal_task
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text12
  5966  015A22                     __ptext12:
  5967                           	opt stack 0
  5968  015A22                     _ringbuf_backspace:
  5969                           	opt stack 17
  5970                           
  5971                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;incstack = 0
  5975  015A22  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5976  015A26  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5977  015A2A  EC21  F0A1         	call	_ringbuf_num	;wreg free
  5978  015A2E  0100               	movlb	0	; () banked
  5979  015A30  5160               	movf	?_ringbuf_num& (0+255),w,b
  5980  015A32  0100               	movlb	0	; () banked
  5981  015A34  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5982  015A36  B4D8               	btfsc	status,2,c
  5983  015A38  0012               	return	
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5987  015A3A  0100               	movlb	0	; () banked
  5988  015A3C  EE20 F004          	lfsr	2,4
  5989  015A40  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5990  015A42  26D9               	addwf	fsr2l,f,c
  5991  015A44  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5992  015A46  22DA               	addwfc	fsr2h,f,c
  5993  015A48  50DE               	movf	postinc2,w,c
  5994  015A4A  10DE               	iorwf	postinc2,w,c
  5995  015A4C  B4D8               	btfsc	status,2,c
  5996  015A4E  D00B               	goto	l12159
  5997                           
  5998                           ; BSR set to: 0
  5999  015A50  0100               	movlb	0	; () banked
  6000  015A52  EE20 F004          	lfsr	2,4
  6001  015A56  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6002  015A58  26D9               	addwf	fsr2l,f,c
  6003  015A5A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6004  015A5C  22DA               	addwfc	fsr2h,f,c
  6005  015A5E  06DE               	decf	postinc2,f,c
  6006  015A60  0E00               	movlw	0
  6007  015A62  5ADD               	subwfb	postdec2,f,c
  6008  015A64  0012               	return	
  6009  015A66                     l12159:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6013  015A66  0EFF               	movlw	255
  6014  015A68  0100               	movlb	0	; () banked
  6015  015A6A  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6016  015A6C  0EFF               	movlw	255
  6017  015A6E  0100               	movlb	0	; () banked
  6018  015A70  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6019  015A72  0100               	movlb	0	; () banked
  6020  015A74  EE20 F002          	lfsr	2,2
  6021  015A78  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6022  015A7A  26D9               	addwf	fsr2l,f,c
  6023  015A7C  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6024  015A7E  22DA               	addwfc	fsr2h,f,c
  6025  015A80  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6026  015A84  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6027  015A88  0100               	movlb	0	; () banked
  6028  015A8A  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6029  015A8C  0100               	movlb	0	; () banked
  6030  015A8E  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6031  015A90  0100               	movlb	0	; () banked
  6032  015A92  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6033  015A94  0100               	movlb	0	; () banked
  6034  015A96  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6035  015A98  0100               	movlb	0	; () banked
  6036  015A9A  EE20 F004          	lfsr	2,4
  6037  015A9E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6038  015AA0  26D9               	addwf	fsr2l,f,c
  6039  015AA2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6040  015AA4  22DA               	addwfc	fsr2h,f,c
  6041  015AA6  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6042  015AAA  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6043                           
  6044                           ; BSR set to: 0
  6045  015AAE  0012               	return	
  6046  015AB0                     __end_of_ringbuf_backspace:
  6047                           	opt stack 0
  6048                           tblptru	equ	0xFF8
  6049                           tblptrh	equ	0xFF7
  6050                           tblptrl	equ	0xFF6
  6051                           tablat	equ	0xFF5
  6052                           prodh	equ	0xFF4
  6053                           prodl	equ	0xFF3
  6054                           intcon	equ	0xFF2
  6055                           postinc0	equ	0xFEE
  6056                           wreg	equ	0xFE8
  6057                           postinc1	equ	0xFE6
  6058                           postdec1	equ	0xFE5
  6059                           fsr1h	equ	0xFE2
  6060                           fsr1l	equ	0xFE1
  6061                           indf2	equ	0xFDF
  6062                           postinc2	equ	0xFDE
  6063                           postdec2	equ	0xFDD
  6064                           fsr2h	equ	0xFDA
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8
  6067                           
  6068 ;; *************** function _software_init *****************
  6069 ;; Defined at:
  6070 ;;		line 108 in file "main.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  i               1   36[BANK0 ] unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;		None               void
  6077 ;; Registers used:
  6078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;Total ram usage:        1 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:   14
  6091 ;; This function calls:
  6092 ;;		_LED_output
  6093 ;;		_OUT
  6094 ;;		_ctmu_set_ratio
  6095 ;;		_display
  6096 ;; This function is called by:
  6097 ;;		_main
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text13
  6102  015218                     __ptext13:
  6103                           	opt stack 0
  6104  015218                     _software_init:
  6105                           	opt stack 16
  6106                           
  6107                           ;main.c: 110: ctmu_ratio = 90;
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;incstack = 0
  6111  015218  0E5A               	movlw	90
  6112  01521A  6E1C               	movwf	_ctmu_ratio,c
  6113                           
  6114                           ;main.c: 111: ctmu_set_ratio(ctmu_ratio);
  6115  01521C  501C               	movf	_ctmu_ratio,w,c
  6116  01521E  EC98  F0A1         	call	_ctmu_set_ratio
  6117                           
  6118                           ;main.c: 114: display(LOGO, "Charge Station", "Made by KERI");
  6119  015222  0EE2               	movlw	low STR_47
  6120  015224  0100               	movlb	0	; () banked
  6121  015226  6F60               	movwf	display@str0& (0+255),b
  6122  015228  0EFE               	movlw	high STR_47
  6123  01522A  0100               	movlb	0	; () banked
  6124  01522C  6F61               	movwf	(display@str0+1)& (0+255),b
  6125  01522E  0EFF               	movlw	low STR_75
  6126  015230  0100               	movlb	0	; () banked
  6127  015232  6F62               	movwf	display@str1& (0+255),b
  6128  015234  0EFE               	movlw	high STR_75
  6129  015236  0100               	movlb	0	; () banked
  6130  015238  6F63               	movwf	(display@str1+1)& (0+255),b
  6131  01523A  0E00               	movlw	0
  6132  01523C  ECE0  F09B         	call	_display
  6133                           
  6134                           ;main.c: 117: for (uint8_t i = 0; i < 3; i++) {
  6135  015240  0E00               	movlw	0
  6136  015242  0100               	movlb	0	; () banked
  6137  015244  6F84               	movwf	software_init@i& (0+255),b
  6138  015246                     l12781:
  6139                           
  6140                           ; BSR set to: 0
  6141  015246  0E02               	movlw	2
  6142  015248  0100               	movlb	0	; () banked
  6143  01524A  6584               	cpfsgt	software_init@i& (0+255),b
  6144  01524C  D001               	goto	l12785
  6145  01524E  D040               	goto	l12797
  6146  015250                     l12785:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;main.c: 118: OUT(i, 0);
  6150  015250  0E00               	movlw	0
  6151  015252  0100               	movlb	0	; () banked
  6152  015254  6F60               	movwf	OUT@value& (0+255),b
  6153  015256  0100               	movlb	0	; () banked
  6154  015258  5184               	movf	software_init@i& (0+255),w,b
  6155  01525A  ECE9  F0AF         	call	_OUT
  6156                           
  6157                           ;main.c: 119: LED_output(i, 0);
  6158  01525E  0E00               	movlw	0
  6159  015260  0100               	movlb	0	; () banked
  6160  015262  6F60               	movwf	LED_output@value& (0+255),b
  6161  015264  0100               	movlb	0	; () banked
  6162  015266  5184               	movf	software_init@i& (0+255),w,b
  6163  015268  ECB0  F0AF         	call	_LED_output
  6164                           
  6165                           ;main.c: 120: port[i].cut_cnt = 0;
  6166  01526C  0100               	movlb	0	; () banked
  6167  01526E  5184               	movf	software_init@i& (0+255),w,b
  6168  015270  0D17               	mullw	23
  6169  015272  0E14               	movlw	20
  6170  015274  26F3               	addwf	prodl,f,c
  6171  015276  0E00               	movlw	0
  6172  015278  22F4               	addwfc	prodh,f,c
  6173  01527A  0E35               	movlw	low _port
  6174  01527C  24F3               	addwf	prodl,w,c
  6175  01527E  6ED9               	movwf	fsr2l,c
  6176  015280  0E01               	movlw	high _port
  6177  015282  20F4               	addwfc	prodh,w,c
  6178  015284  6EDA               	movwf	fsr2h,c
  6179  015286  0E00               	movlw	0
  6180  015288  6EDE               	movwf	postinc2,c
  6181  01528A  0E00               	movlw	0
  6182  01528C  6EDD               	movwf	postdec2,c
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;main.c: 121: port[i].flag.auto_cut_ON = 1;
  6186  01528E  0100               	movlb	0	; () banked
  6187  015290  5184               	movf	software_init@i& (0+255),w,b
  6188  015292  0D17               	mullw	23
  6189  015294  0E16               	movlw	22
  6190  015296  26F3               	addwf	prodl,f,c
  6191  015298  0E00               	movlw	0
  6192  01529A  22F4               	addwfc	prodh,f,c
  6193  01529C  0E35               	movlw	low _port
  6194  01529E  24F3               	addwf	prodl,w,c
  6195  0152A0  6ED9               	movwf	fsr2l,c
  6196  0152A2  0E01               	movlw	high _port
  6197  0152A4  20F4               	addwfc	prodh,w,c
  6198  0152A6  6EDA               	movwf	fsr2h,c
  6199  0152A8  0101               	movlb	1	; () banked
  6200  0152AA  80DF               	bsf	indf2,0,c
  6201                           
  6202                           ; BSR set to: 1
  6203                           ;main.c: 122: port[i].flag.led_indicator_ON = 1;
  6204  0152AC  0100               	movlb	0	; () banked
  6205  0152AE  5184               	movf	software_init@i& (0+255),w,b
  6206  0152B0  0D17               	mullw	23
  6207  0152B2  0E16               	movlw	22
  6208  0152B4  26F3               	addwf	prodl,f,c
  6209  0152B6  0E00               	movlw	0
  6210  0152B8  22F4               	addwfc	prodh,f,c
  6211  0152BA  0E35               	movlw	low _port
  6212  0152BC  24F3               	addwf	prodl,w,c
  6213  0152BE  6ED9               	movwf	fsr2l,c
  6214  0152C0  0E01               	movlw	high _port
  6215  0152C2  20F4               	addwfc	prodh,w,c
  6216  0152C4  6EDA               	movwf	fsr2h,c
  6217  0152C6  0101               	movlb	1	; () banked
  6218  0152C8  82DF               	bsf	indf2,1,c
  6219                           
  6220                           ; BSR set to: 1
  6221  0152CA  0100               	movlb	0	; () banked
  6222  0152CC  2B84               	incf	software_init@i& (0+255),f,b
  6223  0152CE  D7BB               	goto	l12781
  6224  0152D0                     l12797:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;main.c: 123: }
  6228                           ;main.c: 126: settings_flag = 0;
  6229  0152D0  0E00               	movlw	0
  6230  0152D2  0101               	movlb	1	; () banked
  6231  0152D4  6F29               	movwf	_settings_flag& (0+255),b
  6232                           
  6233                           ; BSR set to: 1
  6234  0152D6  0012               	return		;funcret
  6235  0152D8                     __end_of_software_init:
  6236                           	opt stack 0
  6237                           tblptru	equ	0xFF8
  6238                           tblptrh	equ	0xFF7
  6239                           tblptrl	equ	0xFF6
  6240                           tablat	equ	0xFF5
  6241                           prodh	equ	0xFF4
  6242                           prodl	equ	0xFF3
  6243                           intcon	equ	0xFF2
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           postinc1	equ	0xFE6
  6247                           postdec1	equ	0xFE5
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function _ctmu_set_ratio *****************
  6258 ;; Defined at:
  6259 ;;		line 14 in file "ctmu.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  percentage      1    wreg     unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  percentage      1   35[BANK0 ] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;		None               void
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6277 ;;Total ram usage:        1 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:   13
  6280 ;; This function calls:
  6281 ;;		_CTMU_read
  6282 ;;		___lwdiv
  6283 ;;		___wmul
  6284 ;; This function is called by:
  6285 ;;		_terminal_operation
  6286 ;;		_software_init
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text14
  6291  014330                     __ptext14:
  6292                           	opt stack 0
  6293  014330                     _ctmu_set_ratio:
  6294                           	opt stack 15
  6295                           
  6296                           ; BSR set to: 1
  6297                           ;incstack = 0
  6298                           ;ctmu_set_ratio@percentage stored from wreg
  6299  014330  0100               	movlb	0	; () banked
  6300  014332  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6301                           
  6302                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6303  014334  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6304  014338  0100               	movlb	0	; () banked
  6305  01433A  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6306  01433C  0E00               	movlw	0
  6307  01433E  ECAB  F0A8         	call	_CTMU_read
  6308  014342  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6309  014346  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6310  01434A  EC2A  F0B4         	call	___wmul	;wreg free
  6311  01434E  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6312  014352  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6313  014356  0E00               	movlw	0
  6314  014358  0100               	movlb	0	; () banked
  6315  01435A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6316  01435C  0E64               	movlw	100
  6317  01435E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6318  014360  EC39  F0AF         	call	___lwdiv	;wreg free
  6319  014364  C07C  F139         	movff	?___lwdiv,_port+4
  6320  014368  C07D  F13A         	movff	?___lwdiv+1,_port+5
  6321                           
  6322                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6323  01436C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6324  014370  0100               	movlb	0	; () banked
  6325  014372  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6326  014374  0E01               	movlw	1
  6327  014376  ECAB  F0A8         	call	_CTMU_read
  6328  01437A  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6329  01437E  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6330  014382  EC2A  F0B4         	call	___wmul	;wreg free
  6331  014386  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6332  01438A  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6333  01438E  0E00               	movlw	0
  6334  014390  0100               	movlb	0	; () banked
  6335  014392  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6336  014394  0E64               	movlw	100
  6337  014396  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6338  014398  EC39  F0AF         	call	___lwdiv	;wreg free
  6339  01439C  C07C  F150         	movff	?___lwdiv,_port+27
  6340  0143A0  C07D  F151         	movff	?___lwdiv+1,_port+28
  6341                           
  6342                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6343  0143A4  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6344  0143A8  0100               	movlb	0	; () banked
  6345  0143AA  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6346  0143AC  0E02               	movlw	2
  6347  0143AE  ECAB  F0A8         	call	_CTMU_read
  6348  0143B2  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6349  0143B6  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6350  0143BA  EC2A  F0B4         	call	___wmul	;wreg free
  6351  0143BE  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6352  0143C2  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6353  0143C6  0E00               	movlw	0
  6354  0143C8  0100               	movlb	0	; () banked
  6355  0143CA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6356  0143CC  0E64               	movlw	100
  6357  0143CE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6358  0143D0  EC39  F0AF         	call	___lwdiv	;wreg free
  6359  0143D4  C07C  F167         	movff	?___lwdiv,_port+50
  6360  0143D8  C07D  F168         	movff	?___lwdiv+1,_port+51
  6361                           
  6362                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6363  0143DC  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6364  0143E0  0100               	movlb	0	; () banked
  6365  0143E2  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6366  0143E4  0E03               	movlw	3
  6367  0143E6  ECAB  F0A8         	call	_CTMU_read
  6368  0143EA  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6369  0143EE  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6370  0143F2  EC2A  F0B4         	call	___wmul	;wreg free
  6371  0143F6  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6372  0143FA  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6373  0143FE  0E00               	movlw	0
  6374  014400  0100               	movlb	0	; () banked
  6375  014402  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6376  014404  0E64               	movlw	100
  6377  014406  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6378  014408  EC39  F0AF         	call	___lwdiv	;wreg free
  6379  01440C  C07C  F115         	movff	?___lwdiv,_ctmu_value_m
  6380  014410  C07D  F116         	movff	?___lwdiv+1,_ctmu_value_m+1
  6381  014414  0012               	return		;funcret
  6382  014416                     __end_of_ctmu_set_ratio:
  6383                           	opt stack 0
  6384                           tblptru	equ	0xFF8
  6385                           tblptrh	equ	0xFF7
  6386                           tblptrl	equ	0xFF6
  6387                           tablat	equ	0xFF5
  6388                           prodh	equ	0xFF4
  6389                           prodl	equ	0xFF3
  6390                           intcon	equ	0xFF2
  6391                           postinc0	equ	0xFEE
  6392                           wreg	equ	0xFE8
  6393                           postinc1	equ	0xFE6
  6394                           postdec1	equ	0xFE5
  6395                           fsr1h	equ	0xFE2
  6396                           fsr1l	equ	0xFE1
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _sleep_task *****************
  6405 ;; Defined at:
  6406 ;;		line 164 in file "ChargeStation_task.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  i               1   10[BANK0 ] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:   15
  6427 ;; This function calls:
  6428 ;;		_ADC
  6429 ;;		_I2C_LCD_Clear
  6430 ;;		_I2C_LCD_Puts
  6431 ;;		_I2C_LCD_SetCursor
  6432 ;;		_LED_output
  6433 ;;		_OUT
  6434 ;;		_display
  6435 ;; This function is called by:
  6436 ;;		_main
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text15
  6441  014BC2                     __ptext15:
  6442                           	opt stack 0
  6443  014BC2                     _sleep_task:
  6444                           	opt stack 15
  6445                           
  6446                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6447                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6448                           
  6449                           ;incstack = 0
  6450  014BC2  0E0C               	movlw	12
  6451  014BC4  EC90  F0B4         	call	_ADC
  6452  014BC8  0E08               	movlw	8
  6453  014BCA  0100               	movlb	0	; () banked
  6454  014BCC  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6455  014BCE  B0D8               	btfsc	status,0,c
  6456  014BD0  D05B               	goto	l12739
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6460  014BD2  0E01               	movlw	1
  6461  014BD4  0101               	movlb	1	; () banked
  6462  014BD6  6F33               	movwf	sleep_task@sleep_flag& (0+255),b
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6466  014BD8  9EF2               	bcf	intcon,7,c	;volatile
  6467                           
  6468                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6469  014BDA  0E00               	movlw	0
  6470  014BDC  0100               	movlb	0	; () banked
  6471  014BDE  6F6A               	movwf	sleep_task@i& (0+255),b
  6472  014BE0                     l12713:
  6473                           
  6474                           ; BSR set to: 0
  6475  014BE0  0E02               	movlw	2
  6476  014BE2  0100               	movlb	0	; () banked
  6477  014BE4  656A               	cpfsgt	sleep_task@i& (0+255),b
  6478  014BE6  D001               	goto	l12717
  6479  014BE8  D011               	goto	l12723
  6480  014BEA                     l12717:
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6484  014BEA  0E00               	movlw	0
  6485  014BEC  0100               	movlb	0	; () banked
  6486  014BEE  6F60               	movwf	OUT@value& (0+255),b
  6487  014BF0  0100               	movlb	0	; () banked
  6488  014BF2  516A               	movf	sleep_task@i& (0+255),w,b
  6489  014BF4  ECE9  F0AF         	call	_OUT
  6490                           
  6491                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6492  014BF8  0E00               	movlw	0
  6493  014BFA  0100               	movlb	0	; () banked
  6494  014BFC  6F60               	movwf	LED_output@value& (0+255),b
  6495  014BFE  0100               	movlb	0	; () banked
  6496  014C00  516A               	movf	sleep_task@i& (0+255),w,b
  6497  014C02  ECB0  F0AF         	call	_LED_output
  6498  014C06  0100               	movlb	0	; () banked
  6499  014C08  2B6A               	incf	sleep_task@i& (0+255),f,b
  6500  014C0A  D7EA               	goto	l12713
  6501  014C0C                     l12723:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;ChargeStation_task.c: 172: }
  6505                           ;ChargeStation_task.c: 173: I2C_LCD_Clear();
  6506  014C0C  EC20  F0B6         	call	_I2C_LCD_Clear	;wreg free
  6507                           
  6508                           ;ChargeStation_task.c: 174: I2C_LCD_SetCursor(0, 0);
  6509  014C10  0E00               	movlw	0
  6510  014C12  0100               	movlb	0	; () banked
  6511  014C14  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6512  014C16  0E00               	movlw	0
  6513  014C18  ECBE  F0B4         	call	_I2C_LCD_SetCursor
  6514                           
  6515                           ;ChargeStation_task.c: 175: I2C_LCD_Puts("Charge Station 6");
  6516  014C1C  0E92               	movlw	low STR_45
  6517  014C1E  0100               	movlb	0	; () banked
  6518  014C20  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6519  014C22  0EFE               	movlw	high STR_45
  6520  014C24  0100               	movlb	0	; () banked
  6521  014C26  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6522  014C28  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6523                           
  6524                           ;ChargeStation_task.c: 176: I2C_LCD_SetCursor(0, 1);
  6525  014C2C  0E01               	movlw	1
  6526  014C2E  0100               	movlb	0	; () banked
  6527  014C30  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6528  014C32  0E00               	movlw	0
  6529  014C34  ECBE  F0B4         	call	_I2C_LCD_SetCursor
  6530                           
  6531                           ;ChargeStation_task.c: 177: I2C_LCD_Puts("SLEEPING NOW");
  6532  014C38  0E0C               	movlw	low STR_46
  6533  014C3A  0100               	movlb	0	; () banked
  6534  014C3C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6535  014C3E  0EFF               	movlw	high STR_46
  6536  014C40  0100               	movlb	0	; () banked
  6537  014C42  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6538  014C44  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6539                           
  6540                           ;ChargeStation_task.c: 178: }
  6541                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6542  014C48  D01F               	goto	l12739
  6543  014C4A                     l12733:
  6544                           
  6545                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6546  014C4A  0E0C               	movlw	12
  6547  014C4C  EC90  F0B4         	call	_ADC
  6548  014C50  0100               	movlb	0	; () banked
  6549  014C52  0560               	decf	?_ADC& (0+255),w,b
  6550  014C54  0E08               	movlw	8
  6551  014C56  0100               	movlb	0	; () banked
  6552  014C58  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6553  014C5A  A0D8               	btfss	status,0,c
  6554  014C5C  D013               	goto	l1516
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6558  014C5E  0E00               	movlw	0
  6559  014C60  0101               	movlb	1	; () banked
  6560  014C62  6F33               	movwf	sleep_task@sleep_flag& (0+255),b
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6564  014C64  0EE2               	movlw	low STR_47
  6565  014C66  0100               	movlb	0	; () banked
  6566  014C68  6F60               	movwf	display@str0& (0+255),b
  6567  014C6A  0EFE               	movlw	high STR_47
  6568  014C6C  0100               	movlb	0	; () banked
  6569  014C6E  6F61               	movwf	(display@str0+1)& (0+255),b
  6570  014C70  0EF1               	movlw	low STR_48
  6571  014C72  0100               	movlb	0	; () banked
  6572  014C74  6F62               	movwf	display@str1& (0+255),b
  6573  014C76  0EFE               	movlw	high STR_48
  6574  014C78  0100               	movlb	0	; () banked
  6575  014C7A  6F63               	movwf	(display@str1+1)& (0+255),b
  6576  014C7C  0E00               	movlw	0
  6577  014C7E  ECE0  F09B         	call	_display
  6578                           
  6579                           ;ChargeStation_task.c: 183: break;
  6580  014C82  0012               	return	
  6581  014C84                     l1516:
  6582                           
  6583                           ; BSR set to: 0
  6584  014C84  0003               	sleep		;# 
  6585                           
  6586                           ;ChargeStation_task.c: 186: __nop();
  6587  014C86  F000               	nop	
  6588  014C88                     l12739:
  6589  014C88  0101               	movlb	1	; () banked
  6590  014C8A  5133               	movf	sleep_task@sleep_flag& (0+255),w,b
  6591  014C8C  0101               	movlb	1	; () banked
  6592  014C8E  B4D8               	btfsc	status,2,c
  6593  014C90  0012               	return	
  6594  014C92  D7DB               	goto	l12733
  6595  014C94                     __end_of_sleep_task:
  6596                           	opt stack 0
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           prodh	equ	0xFF4
  6602                           prodl	equ	0xFF3
  6603                           intcon	equ	0xFF2
  6604                           postinc0	equ	0xFEE
  6605                           wreg	equ	0xFE8
  6606                           postinc1	equ	0xFE6
  6607                           postdec1	equ	0xFE5
  6608                           fsr1h	equ	0xFE2
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _normal_task *****************
  6618 ;; Defined at:
  6619 ;;		line 121 in file "ChargeStation_task.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;		None               void
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:   18
  6640 ;; This function calls:
  6641 ;;		_Auto_cut
  6642 ;;		_data_out
  6643 ;;		_display
  6644 ;;		_display_LCD
  6645 ;;		_integrate_current
  6646 ;;		_integrate_time
  6647 ;;		_port_button_task
  6648 ;;		_settings_task
  6649 ;; This function is called by:
  6650 ;;		_main
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text16
  6655  014D66                     __ptext16:
  6656                           	opt stack 0
  6657  014D66                     _normal_task:
  6658                           	opt stack 12
  6659                           
  6660                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6661                           
  6662                           ;incstack = 0
  6663  014D66  0101               	movlb	1	; () banked
  6664  014D68  5129               	movf	_settings_flag& (0+255),w,b
  6665  014D6A  B4D8               	btfsc	status,2,c
  6666  014D6C  D003               	goto	l1496
  6667                           
  6668                           ; BSR set to: 1
  6669                           ;ChargeStation_task.c: 124: settings_task();
  6670  014D6E  EC15  F095         	call	_settings_task	;wreg free
  6671                           
  6672                           ;ChargeStation_task.c: 125: } else {
  6673  014D72  D024               	goto	l12675
  6674  014D74                     l1496:
  6675                           
  6676                           ; BSR set to: 1
  6677                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6678  014D74  0100               	movlb	0	; () banked
  6679  014D76  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  6680  014D78  D014               	goto	l12669
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6684  014D7A  0E00               	movlw	0
  6685  014D7C  0100               	movlb	0	; () banked
  6686  014D7E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6687  014D80  0E00               	movlw	0
  6688  014D82  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6692  014D84  0EE6               	movlw	low (STR_19+3)
  6693  014D86  0100               	movlb	0	; () banked
  6694  014D88  6F60               	movwf	display@str0& (0+255),b
  6695  014D8A  0EFF               	movlw	high (STR_19+3)
  6696  014D8C  0100               	movlb	0	; () banked
  6697  014D8E  6F61               	movwf	(display@str0+1)& (0+255),b
  6698  014D90  0EE6               	movlw	low (STR_19+3)
  6699  014D92  0100               	movlb	0	; () banked
  6700  014D94  6F62               	movwf	display@str1& (0+255),b
  6701  014D96  0EFF               	movlw	high (STR_19+3)
  6702  014D98  0100               	movlb	0	; () banked
  6703  014D9A  6F63               	movwf	(display@str1+1)& (0+255),b
  6704  014D9C  0E01               	movlw	1
  6705  014D9E  ECE0  F09B         	call	_display
  6706  014DA2                     l12669:
  6707                           
  6708                           ;ChargeStation_task.c: 129: }
  6709                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6710  014DA2  0100               	movlb	0	; () banked
  6711  014DA4  A5FF               	btfss	(_ctmu_m+3)& (0+255),2,b
  6712  014DA6  D008               	goto	l12673
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6716  014DA8  0E00               	movlw	0
  6717  014DAA  0100               	movlb	0	; () banked
  6718  014DAC  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6719  014DAE  0E00               	movlw	0
  6720  014DB0  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6721                           
  6722                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6723  014DB2  0E01               	movlw	1
  6724  014DB4  0101               	movlb	1	; () banked
  6725  014DB6  6F29               	movwf	_settings_flag& (0+255),b
  6726  014DB8                     l12673:
  6727                           
  6728                           ;ChargeStation_task.c: 133: }
  6729                           ;ChargeStation_task.c: 134: port_button_task();
  6730  014DB8  EC92  F098         	call	_port_button_task	;wreg free
  6731  014DBC                     l12675:
  6732                           
  6733                           ;ChargeStation_task.c: 135: }
  6734                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6735  014DBC  0101               	movlb	1	; () banked
  6736  014DBE  5126               	movf	_cut_time_flag& (0+255),w,b
  6737  014DC0  B4D8               	btfsc	status,2,c
  6738  014DC2  D005               	goto	l12681
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6742  014DC4  0E00               	movlw	0
  6743  014DC6  0101               	movlb	1	; () banked
  6744  014DC8  6F26               	movwf	_cut_time_flag& (0+255),b
  6745                           
  6746                           ; BSR set to: 1
  6747                           ;ChargeStation_task.c: 139: Auto_cut();
  6748  014DCA  EC7B  F09C         	call	_Auto_cut	;wreg free
  6749  014DCE                     l12681:
  6750                           
  6751                           ;ChargeStation_task.c: 140: }
  6752                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6753  014DCE  0101               	movlb	1	; () banked
  6754  014DD0  5128               	movf	_integrate_flag& (0+255),w,b
  6755  014DD2  B4D8               	btfsc	status,2,c
  6756  014DD4  D007               	goto	l1501
  6757                           
  6758                           ; BSR set to: 1
  6759                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6760  014DD6  0E00               	movlw	0
  6761  014DD8  0101               	movlb	1	; () banked
  6762  014DDA  6F28               	movwf	_integrate_flag& (0+255),b
  6763                           
  6764                           ; BSR set to: 1
  6765                           ;ChargeStation_task.c: 144: integrate_current();
  6766  014DDC  EC37  F09F         	call	_integrate_current	;wreg free
  6767                           
  6768                           ;ChargeStation_task.c: 145: integrate_time();
  6769  014DE0  EC5D  F0B1         	call	_integrate_time	;wreg free
  6770  014DE4                     l1501:
  6771                           
  6772                           ;ChargeStation_task.c: 146: }
  6773                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6774  014DE4  5022               	movf	_time_change_flag,w,c
  6775  014DE6  B4D8               	btfsc	status,2,c
  6776  014DE8  D008               	goto	l1502
  6777                           
  6778                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6779  014DEA  0E00               	movlw	0
  6780  014DEC  6E22               	movwf	_time_change_flag,c
  6781                           
  6782                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6783  014DEE  041F               	decf	_print_item,w,c
  6784  014DF0  A4D8               	btfss	status,2,c
  6785  014DF2  D003               	goto	l1502
  6786  014DF4  0E01               	movlw	1
  6787  014DF6  0101               	movlb	1	; () banked
  6788  014DF8  6F27               	movwf	_display_flag& (0+255),b
  6789  014DFA                     l1502:
  6790                           
  6791                           ;ChargeStation_task.c: 151: }
  6792                           ;ChargeStation_task.c: 153: if (display_flag) {
  6793  014DFA  0101               	movlb	1	; () banked
  6794  014DFC  5127               	movf	_display_flag& (0+255),w,b
  6795  014DFE  B4D8               	btfsc	status,2,c
  6796  014E00  D005               	goto	l12699
  6797                           
  6798                           ; BSR set to: 1
  6799                           ;ChargeStation_task.c: 154: display_flag = 0;
  6800  014E02  0E00               	movlw	0
  6801  014E04  0101               	movlb	1	; () banked
  6802  014E06  6F27               	movwf	_display_flag& (0+255),b
  6803                           
  6804                           ; BSR set to: 1
  6805                           ;ChargeStation_task.c: 155: display_LCD();
  6806  014E08  EC8E  F082         	call	_display_LCD	;wreg free
  6807  014E0C                     l12699:
  6808                           
  6809                           ;ChargeStation_task.c: 156: }
  6810                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6811  014E0C  0101               	movlb	1	; () banked
  6812  014E0E  512B               	movf	_terminal_data_out& (0+255),w,b
  6813  014E10  B4D8               	btfsc	status,2,c
  6814  014E12  0012               	return	
  6815                           
  6816                           ; BSR set to: 1
  6817  014E14  0101               	movlb	1	; () banked
  6818  014E16  512C               	movf	_terminal_data_out_flag& (0+255),w,b
  6819  014E18  B4D8               	btfsc	status,2,c
  6820  014E1A  0012               	return	
  6821                           
  6822                           ; BSR set to: 1
  6823                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6824  014E1C  0E00               	movlw	0
  6825  014E1E  0101               	movlb	1	; () banked
  6826  014E20  6F2C               	movwf	_terminal_data_out_flag& (0+255),b
  6827                           
  6828                           ; BSR set to: 1
  6829                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6830  014E22  0EC1               	movlw	low _usb_tx
  6831  014E24  0100               	movlb	0	; () banked
  6832  014E26  6FAB               	movwf	data_out@tx& (0+255),b
  6833  014E28  0E02               	movlw	high _usb_tx
  6834  014E2A  0100               	movlb	0	; () banked
  6835  014E2C  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6836  014E2E  EC1E  F097         	call	_data_out	;wreg free
  6837  014E32  0012               	return	
  6838  014E34                     __end_of_normal_task:
  6839                           	opt stack 0
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           intcon	equ	0xFF2
  6847                           postinc0	equ	0xFEE
  6848                           wreg	equ	0xFE8
  6849                           postinc1	equ	0xFE6
  6850                           postdec1	equ	0xFE5
  6851                           fsr1h	equ	0xFE2
  6852                           fsr1l	equ	0xFE1
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _settings_task *****************
  6861 ;; Defined at:
  6862 ;;		line 193 in file "settings.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;Total ram usage:        1 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:   17
  6883 ;; This function calls:
  6884 ;;		_display
  6885 ;;		_settings_adjust_time
  6886 ;;		_settings_auto_stop
  6887 ;;		_settings_integrating_reset
  6888 ;;		_settings_led_indicator
  6889 ;; This function is called by:
  6890 ;;		_normal_task
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text17
  6895  012A2A                     __ptext17:
  6896                           	opt stack 0
  6897  012A2A                     _settings_task:
  6898                           	opt stack 12
  6899                           
  6900                           ;settings.c: 194: static uint8_t settings_state = 0;
  6901                           ;settings.c: 195: switch (settings_state) {
  6902                           
  6903                           ;incstack = 0
  6904  012A2A  D103               	goto	l12485
  6905  012A2C                     l12403:
  6906                           
  6907                           ;settings.c: 197: settings_item = SELECT;
  6908  012A2C  0E00               	movlw	0
  6909  012A2E  6E20               	movwf	_settings_item,c
  6910                           
  6911                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6912  012A30  0E5E               	movlw	low STR_104
  6913  012A32  0100               	movlb	0	; () banked
  6914  012A34  6F60               	movwf	display@str0& (0+255),b
  6915  012A36  0EFF               	movlw	high STR_104
  6916  012A38  0100               	movlb	0	; () banked
  6917  012A3A  6F61               	movwf	(display@str0+1)& (0+255),b
  6918  012A3C  0E5F               	movlw	low STR_105
  6919  012A3E  0100               	movlb	0	; () banked
  6920  012A40  6F62               	movwf	display@str1& (0+255),b
  6921  012A42  0EFE               	movlw	high STR_105
  6922  012A44  0100               	movlb	0	; () banked
  6923  012A46  6F63               	movwf	(display@str1+1)& (0+255),b
  6924  012A48  0E03               	movlw	3
  6925  012A4A  ECE0  F09B         	call	_display
  6926                           
  6927                           ;settings.c: 199: settings_state += 1;
  6928  012A4E  0101               	movlb	1	; () banked
  6929  012A50  2B32               	incf	settings_task@settings_state& (0+255),f,b
  6930                           
  6931                           ;settings.c: 200: break;
  6932  012A52  0012               	return	
  6933  012A54                     l12409:
  6934                           
  6935                           ; BSR set to: 1
  6936                           ;settings.c: 202: {
  6937                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6938  012A54  0E00               	movlw	0
  6939  012A56  0100               	movlb	0	; () banked
  6940  012A58  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6944  012A5A  0101               	movlb	1	; () banked
  6945  012A5C  A165               	btfss	(_port+48)& (0+255),0,b
  6946  012A5E  D010               	goto	l12423
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6950  012A60  0E00               	movlw	0
  6951  012A62  0101               	movlb	1	; () banked
  6952  012A64  6F66               	movwf	(_port+49)& (0+255),b
  6953  012A66  0E00               	movlw	0
  6954  012A68  6F65               	movwf	(_port+48)& (0+255),b
  6955                           
  6956                           ; BSR set to: 1
  6957                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6958  012A6A  0E04               	movlw	4
  6959  012A6C  1820               	xorwf	_settings_item,w,c
  6960  012A6E  A4D8               	btfss	status,2,c
  6961  012A70  D003               	goto	l12419
  6962                           
  6963                           ; BSR set to: 1
  6964  012A72  0E00               	movlw	0
  6965  012A74  6E20               	movwf	_settings_item,c
  6966  012A76  D001               	goto	l12421
  6967  012A78                     l12419:
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;settings.c: 207: else settings_item++;
  6971  012A78  2A20               	incf	_settings_item,f,c
  6972  012A7A                     l12421:
  6973                           
  6974                           ; BSR set to: 1
  6975                           ;settings.c: 208: item_change_flag = 1;
  6976  012A7A  0E01               	movlw	1
  6977  012A7C  0100               	movlb	0	; () banked
  6978  012A7E  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6979  012A80                     l12423:
  6980                           
  6981                           ;settings.c: 209: }
  6982                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6983  012A80  0101               	movlb	1	; () banked
  6984  012A82  A137               	btfss	(_port+2)& (0+255),0,b
  6985  012A84  D00F               	goto	l12433
  6986                           
  6987                           ; BSR set to: 1
  6988                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6989  012A86  0E00               	movlw	0
  6990  012A88  0101               	movlb	1	; () banked
  6991  012A8A  6F38               	movwf	(_port+3)& (0+255),b
  6992  012A8C  0E00               	movlw	0
  6993  012A8E  6F37               	movwf	(_port+2)& (0+255),b
  6994                           
  6995                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6996  012A90  5020               	movf	_settings_item,w,c
  6997  012A92  A4D8               	btfss	status,2,c
  6998  012A94  D003               	goto	l12429
  6999                           
  7000                           ; BSR set to: 1
  7001  012A96  0E04               	movlw	4
  7002  012A98  6E20               	movwf	_settings_item,c
  7003  012A9A  D001               	goto	l12431
  7004  012A9C                     l12429:
  7005                           
  7006                           ; BSR set to: 1
  7007                           ;settings.c: 213: else settings_item--;
  7008  012A9C  0620               	decf	_settings_item,f,c
  7009  012A9E                     l12431:
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;settings.c: 214: item_change_flag = 1;
  7013  012A9E  0E01               	movlw	1
  7014  012AA0  0100               	movlb	0	; () banked
  7015  012AA2  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7016  012AA4                     l12433:
  7017                           
  7018                           ;settings.c: 215: }
  7019                           ;settings.c: 216: if (item_change_flag) {
  7020  012AA4  0100               	movlb	0	; () banked
  7021  012AA6  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  7022  012AA8  0100               	movlb	0	; () banked
  7023  012AAA  A4D8               	btfss	status,2,c
  7024  012AAC  D051               	goto	l12449
  7025  012AAE  D060               	goto	l1919
  7026  012AB0                     l12437:
  7027                           
  7028                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  7029  012AB0  0E5E               	movlw	low STR_104
  7030  012AB2  0100               	movlb	0	; () banked
  7031  012AB4  6F60               	movwf	display@str0& (0+255),b
  7032  012AB6  0EFF               	movlw	high STR_104
  7033  012AB8  0100               	movlb	0	; () banked
  7034  012ABA  6F61               	movwf	(display@str0+1)& (0+255),b
  7035  012ABC  0E5F               	movlw	low STR_105
  7036  012ABE  0100               	movlb	0	; () banked
  7037  012AC0  6F62               	movwf	display@str1& (0+255),b
  7038  012AC2  0EFE               	movlw	high STR_105
  7039  012AC4  0100               	movlb	0	; () banked
  7040  012AC6  6F63               	movwf	(display@str1+1)& (0+255),b
  7041  012AC8  0E03               	movlw	3
  7042  012ACA  ECE0  F09B         	call	_display
  7043                           
  7044                           ;settings.c: 220: break;
  7045  012ACE  D050               	goto	l1919
  7046  012AD0                     l12439:
  7047                           
  7048                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7049  012AD0  0E5E               	movlw	low STR_104
  7050  012AD2  0100               	movlb	0	; () banked
  7051  012AD4  6F60               	movwf	display@str0& (0+255),b
  7052  012AD6  0EFF               	movlw	high STR_104
  7053  012AD8  0100               	movlb	0	; () banked
  7054  012ADA  6F61               	movwf	(display@str0+1)& (0+255),b
  7055  012ADC  0EA3               	movlw	low STR_109
  7056  012ADE  0100               	movlb	0	; () banked
  7057  012AE0  6F62               	movwf	display@str1& (0+255),b
  7058  012AE2  0EFE               	movlw	high STR_109
  7059  012AE4  0100               	movlb	0	; () banked
  7060  012AE6  6F63               	movwf	(display@str1+1)& (0+255),b
  7061  012AE8  0E03               	movlw	3
  7062  012AEA  ECE0  F09B         	call	_display
  7063                           
  7064                           ;settings.c: 223: break;
  7065  012AEE  D040               	goto	l1919
  7066  012AF0                     l12441:
  7067                           
  7068                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7069  012AF0  0E5E               	movlw	low STR_104
  7070  012AF2  0100               	movlb	0	; () banked
  7071  012AF4  6F60               	movwf	display@str0& (0+255),b
  7072  012AF6  0EFF               	movlw	high STR_104
  7073  012AF8  0100               	movlb	0	; () banked
  7074  012AFA  6F61               	movwf	(display@str0+1)& (0+255),b
  7075  012AFC  0E70               	movlw	low STR_111
  7076  012AFE  0100               	movlb	0	; () banked
  7077  012B00  6F62               	movwf	display@str1& (0+255),b
  7078  012B02  0EFE               	movlw	high STR_111
  7079  012B04  0100               	movlb	0	; () banked
  7080  012B06  6F63               	movwf	(display@str1+1)& (0+255),b
  7081  012B08  0E03               	movlw	3
  7082  012B0A  ECE0  F09B         	call	_display
  7083                           
  7084                           ;settings.c: 226: break;
  7085  012B0E  D030               	goto	l1919
  7086  012B10                     l12443:
  7087                           
  7088                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7089  012B10  0E5E               	movlw	low STR_104
  7090  012B12  0100               	movlb	0	; () banked
  7091  012B14  6F60               	movwf	display@str0& (0+255),b
  7092  012B16  0EFF               	movlw	high STR_104
  7093  012B18  0100               	movlb	0	; () banked
  7094  012B1A  6F61               	movwf	(display@str0+1)& (0+255),b
  7095  012B1C  0EB3               	movlw	low STR_113
  7096  012B1E  0100               	movlb	0	; () banked
  7097  012B20  6F62               	movwf	display@str1& (0+255),b
  7098  012B22  0EFE               	movlw	high STR_113
  7099  012B24  0100               	movlb	0	; () banked
  7100  012B26  6F63               	movwf	(display@str1+1)& (0+255),b
  7101  012B28  0E03               	movlw	3
  7102  012B2A  ECE0  F09B         	call	_display
  7103                           
  7104                           ;settings.c: 229: break;
  7105  012B2E  D020               	goto	l1919
  7106  012B30                     l12445:
  7107                           
  7108                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7109  012B30  0E5E               	movlw	low STR_104
  7110  012B32  0100               	movlb	0	; () banked
  7111  012B34  6F60               	movwf	display@str0& (0+255),b
  7112  012B36  0EFF               	movlw	high STR_104
  7113  012B38  0100               	movlb	0	; () banked
  7114  012B3A  6F61               	movwf	(display@str0+1)& (0+255),b
  7115  012B3C  0ED3               	movlw	low STR_115
  7116  012B3E  0100               	movlb	0	; () banked
  7117  012B40  6F62               	movwf	display@str1& (0+255),b
  7118  012B42  0EFE               	movlw	high STR_115
  7119  012B44  0100               	movlb	0	; () banked
  7120  012B46  6F63               	movwf	(display@str1+1)& (0+255),b
  7121  012B48  0E03               	movlw	3
  7122  012B4A  ECE0  F09B         	call	_display
  7123                           
  7124                           ;settings.c: 233: }
  7125                           
  7126                           ;settings.c: 232: break;
  7127  012B4E  D010               	goto	l1919
  7128  012B50                     l12449:
  7129  012B50  5020               	movf	_settings_item,w,c
  7130                           
  7131                           ; Switch size 1, requested type "space"
  7132                           ; Number of cases is 5, Range of values is 0 to 4
  7133                           ; switch strategies available:
  7134                           ; Name         Instructions Cycles
  7135                           ; simple_byte           16     9 (average)
  7136                           ;	Chosen strategy is simple_byte
  7137  012B52  0A00               	xorlw	0	; case 0
  7138  012B54  B4D8               	btfsc	status,2,c
  7139  012B56  D7AC               	goto	l12437
  7140  012B58  0A01               	xorlw	1	; case 1
  7141  012B5A  B4D8               	btfsc	status,2,c
  7142  012B5C  D7B9               	goto	l12439
  7143  012B5E  0A03               	xorlw	3	; case 2
  7144  012B60  B4D8               	btfsc	status,2,c
  7145  012B62  D7C6               	goto	l12441
  7146  012B64  0A01               	xorlw	1	; case 3
  7147  012B66  B4D8               	btfsc	status,2,c
  7148  012B68  D7D3               	goto	l12443
  7149  012B6A  0A07               	xorlw	7	; case 4
  7150  012B6C  B4D8               	btfsc	status,2,c
  7151  012B6E  D7E0               	goto	l12445
  7152  012B70                     l1919:
  7153                           
  7154                           ;settings.c: 234: }
  7155                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7156  012B70  0101               	movlb	1	; () banked
  7157  012B72  A14E               	btfss	(_port+25)& (0+255),0,b
  7158  012B74  D007               	goto	l12455
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7162  012B76  0E00               	movlw	0
  7163  012B78  0101               	movlb	1	; () banked
  7164  012B7A  6F4F               	movwf	(_port+26)& (0+255),b
  7165  012B7C  0E00               	movlw	0
  7166  012B7E  6F4E               	movwf	(_port+25)& (0+255),b
  7167                           
  7168                           ; BSR set to: 1
  7169                           ;settings.c: 237: settings_state += 1;
  7170  012B80  0101               	movlb	1	; () banked
  7171  012B82  2B32               	incf	settings_task@settings_state& (0+255),f,b
  7172  012B84                     l12455:
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;settings.c: 238: }
  7176                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7177  012B84  0100               	movlb	0	; () banked
  7178  012B86  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7179  012B88  0012               	return	
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;settings.c: 240: ctmu_m.flags = 0;
  7183  012B8A  0E00               	movlw	0
  7184  012B8C  0100               	movlb	0	; () banked
  7185  012B8E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7186  012B90  0E00               	movlw	0
  7187  012B92  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7188                           
  7189                           ;settings.c: 241: settings_state = 0;
  7190  012B94  0E00               	movlw	0
  7191  012B96  0101               	movlb	1	; () banked
  7192  012B98  6F32               	movwf	settings_task@settings_state& (0+255),b
  7193                           
  7194                           ;settings.c: 242: settings_flag = 0;
  7195  012B9A  0E00               	movlw	0
  7196  012B9C  0101               	movlb	1	; () banked
  7197  012B9E  6F29               	movwf	_settings_flag& (0+255),b
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7201  012BA0  0EE6               	movlw	low (STR_19+3)
  7202  012BA2  0100               	movlb	0	; () banked
  7203  012BA4  6F60               	movwf	display@str0& (0+255),b
  7204  012BA6  0EFF               	movlw	high (STR_19+3)
  7205  012BA8  0100               	movlb	0	; () banked
  7206  012BAA  6F61               	movwf	(display@str0+1)& (0+255),b
  7207  012BAC  0EE6               	movlw	low (STR_19+3)
  7208  012BAE  0100               	movlb	0	; () banked
  7209  012BB0  6F62               	movwf	display@str1& (0+255),b
  7210  012BB2  0EFF               	movlw	high (STR_19+3)
  7211  012BB4  0100               	movlb	0	; () banked
  7212  012BB6  6F63               	movwf	(display@str1+1)& (0+255),b
  7213  012BB8  0E01               	movlw	1
  7214  012BBA  ECE0  F09B         	call	_display
  7215                           
  7216                           ;settings.c: 244: }
  7217                           ;settings.c: 245: }
  7218                           ;settings.c: 246: break;
  7219  012BBE  0012               	return	
  7220  012BC0                     l12461:
  7221                           
  7222                           ;settings.c: 250: settings_state = 1;
  7223  012BC0  0E01               	movlw	1
  7224  012BC2  0101               	movlb	1	; () banked
  7225  012BC4  6F32               	movwf	settings_task@settings_state& (0+255),b
  7226                           
  7227                           ;settings.c: 251: break;
  7228  012BC6  0012               	return	
  7229  012BC8                     l12463:
  7230                           
  7231                           ;settings.c: 253: if (settings_adjust_time()) {
  7232  012BC8  EC7C  F0A2         	call	_settings_adjust_time	;wreg free
  7233  012BCC  0900               	iorlw	0
  7234  012BCE  B4D8               	btfsc	status,2,c
  7235  012BD0  0012               	return	
  7236                           
  7237                           ;settings.c: 254: settings_state = 0;
  7238  012BD2  0E00               	movlw	0
  7239  012BD4  0101               	movlb	1	; () banked
  7240  012BD6  6F32               	movwf	settings_task@settings_state& (0+255),b
  7241                           
  7242                           ; BSR set to: 1
  7243                           ;settings.c: 255: }
  7244                           ;settings.c: 256: break;
  7245  012BD8  0012               	return	
  7246  012BDA                     l12467:
  7247                           
  7248                           ;settings.c: 258: if (settings_auto_stop()) {
  7249  012BDA  ECF4  F093         	call	_settings_auto_stop	;wreg free
  7250  012BDE  0900               	iorlw	0
  7251  012BE0  B4D8               	btfsc	status,2,c
  7252  012BE2  0012               	return	
  7253                           
  7254                           ;settings.c: 259: settings_state = 0;
  7255  012BE4  0E00               	movlw	0
  7256  012BE6  0101               	movlb	1	; () banked
  7257  012BE8  6F32               	movwf	settings_task@settings_state& (0+255),b
  7258                           
  7259                           ; BSR set to: 1
  7260                           ;settings.c: 260: }
  7261                           ;settings.c: 261: break;
  7262  012BEA  0012               	return	
  7263  012BEC                     l12471:
  7264                           
  7265                           ;settings.c: 263: if (settings_led_indicator()) {
  7266  012BEC  ECCA  F092         	call	_settings_led_indicator	;wreg free
  7267  012BF0  0900               	iorlw	0
  7268  012BF2  B4D8               	btfsc	status,2,c
  7269  012BF4  0012               	return	
  7270                           
  7271                           ;settings.c: 264: settings_state = 0;
  7272  012BF6  0E00               	movlw	0
  7273  012BF8  0101               	movlb	1	; () banked
  7274  012BFA  6F32               	movwf	settings_task@settings_state& (0+255),b
  7275                           
  7276                           ; BSR set to: 1
  7277                           ;settings.c: 265: }
  7278                           ;settings.c: 266: break;
  7279  012BFC  0012               	return	
  7280  012BFE                     l12475:
  7281                           
  7282                           ;settings.c: 268: if (settings_integrating_reset()) {
  7283  012BFE  EC9B  F091         	call	_settings_integrating_reset	;wreg free
  7284  012C02  0900               	iorlw	0
  7285  012C04  B4D8               	btfsc	status,2,c
  7286  012C06  0012               	return	
  7287                           
  7288                           ;settings.c: 269: settings_state = 0;
  7289  012C08  0E00               	movlw	0
  7290  012C0A  0101               	movlb	1	; () banked
  7291  012C0C  6F32               	movwf	settings_task@settings_state& (0+255),b
  7292                           
  7293                           ; BSR set to: 1
  7294                           ;settings.c: 274: }
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;settings.c: 273: break;
  7298                           
  7299                           ;settings.c: 272: default:
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;settings.c: 270: }
  7303                           ;settings.c: 271: break;
  7304  012C0E  0012               	return	
  7305  012C10                     l12481:
  7306  012C10  5020               	movf	_settings_item,w,c
  7307                           
  7308                           ; Switch size 1, requested type "space"
  7309                           ; Number of cases is 5, Range of values is 0 to 4
  7310                           ; switch strategies available:
  7311                           ; Name         Instructions Cycles
  7312                           ; simple_byte           16     9 (average)
  7313                           ;	Chosen strategy is simple_byte
  7314  012C12  0A00               	xorlw	0	; case 0
  7315  012C14  B4D8               	btfsc	status,2,c
  7316  012C16  D7D4               	goto	l12461
  7317  012C18  0A01               	xorlw	1	; case 1
  7318  012C1A  B4D8               	btfsc	status,2,c
  7319  012C1C  D7D5               	goto	l12463
  7320  012C1E  0A03               	xorlw	3	; case 2
  7321  012C20  B4D8               	btfsc	status,2,c
  7322  012C22  D7DB               	goto	l12467
  7323  012C24  0A01               	xorlw	1	; case 3
  7324  012C26  B4D8               	btfsc	status,2,c
  7325  012C28  D7E1               	goto	l12471
  7326  012C2A  0A07               	xorlw	7	; case 4
  7327  012C2C  A4D8               	btfss	status,2,c
  7328                           
  7329                           ;settings.c: 276: }
  7330                           
  7331                           ;settings.c: 275: break;
  7332  012C2E  0012               	return	
  7333  012C30  D7E6               	goto	l12475
  7334  012C32                     l12485:
  7335  012C32  0101               	movlb	1	; () banked
  7336  012C34  5132               	movf	settings_task@settings_state& (0+255),w,b
  7337                           
  7338                           ; Switch size 1, requested type "space"
  7339                           ; Number of cases is 3, Range of values is 0 to 2
  7340                           ; switch strategies available:
  7341                           ; Name         Instructions Cycles
  7342                           ; simple_byte           10     6 (average)
  7343                           ;	Chosen strategy is simple_byte
  7344  012C36  0A00               	xorlw	0	; case 0
  7345  012C38  B4D8               	btfsc	status,2,c
  7346  012C3A  D6F8               	goto	l12403
  7347  012C3C  0A01               	xorlw	1	; case 1
  7348  012C3E  B4D8               	btfsc	status,2,c
  7349  012C40  D709               	goto	l12409
  7350  012C42  0A03               	xorlw	3	; case 2
  7351  012C44  A4D8               	btfss	status,2,c
  7352  012C46  0012               	return	
  7353  012C48  D7E3               	goto	l12481
  7354  012C4A                     __end_of_settings_task:
  7355                           	opt stack 0
  7356                           tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           postinc0	equ	0xFEE
  7364                           wreg	equ	0xFE8
  7365                           postinc1	equ	0xFE6
  7366                           postdec1	equ	0xFE5
  7367                           fsr1h	equ	0xFE2
  7368                           fsr1l	equ	0xFE1
  7369                           indf2	equ	0xFDF
  7370                           postinc2	equ	0xFDE
  7371                           postdec2	equ	0xFDD
  7372                           fsr2h	equ	0xFDA
  7373                           fsr2l	equ	0xFD9
  7374                           status	equ	0xFD8
  7375                           
  7376 ;; *************** function _settings_led_indicator *****************
  7377 ;; Defined at:
  7378 ;;		line 96 in file "settings.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  i               1   52[BANK0 ] unsigned char 
  7383 ;;  str            20   27[BANK0 ] unsigned char [20]
  7384 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7385 ;;		 -> settings_led_indicator@str_6122(20), 
  7386 ;;  i               1   51[BANK0 ] unsigned char 
  7387 ;;  j               1   53[BANK0 ] unsigned char 
  7388 ;;  str            20    7[BANK0 ] unsigned char [20]
  7389 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7390 ;;		 -> settings_led_indicator@str(20), 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      unsigned char 
  7393 ;; Registers used:
  7394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7402 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7403 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7404 ;;Total ram usage:       48 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:   12
  7407 ;; This function calls:
  7408 ;;		_LED_output
  7409 ;;		_display
  7410 ;;		_strcpy
  7411 ;; This function is called by:
  7412 ;;		_settings_task
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text18
  7417  012594                     __ptext18:
  7418                           	opt stack 0
  7419  012594                     _settings_led_indicator:
  7420                           	opt stack 16
  7421                           
  7422                           ;settings.c: 97: static uint8_t state = 0;
  7423                           ;settings.c: 98: switch (state) {
  7424                           
  7425                           ;incstack = 0
  7426  012594  D100               	goto	l11925
  7427  012596                     l11861:
  7428                           
  7429                           ;settings.c: 100: {
  7430                           ;settings.c: 101: char str[20];
  7431                           ;settings.c: 102: char *strp;
  7432                           ;settings.c: 103: strp = str;
  7433  012596  0E67               	movlw	low settings_led_indicator@str
  7434  012598  0100               	movlb	0	; () banked
  7435  01259A  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7436  01259C  0E00               	movlw	high settings_led_indicator@str
  7437  01259E  0100               	movlb	0	; () banked
  7438  0125A0  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7442  0125A2  0E00               	movlw	0
  7443  0125A4  0100               	movlb	0	; () banked
  7444  0125A6  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7445  0125A8                     l11865:
  7446                           
  7447                           ; BSR set to: 0
  7448  0125A8  0E02               	movlw	2
  7449  0125AA  0100               	movlb	0	; () banked
  7450  0125AC  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7451  0125AE  D001               	goto	l11869
  7452  0125B0  D031               	goto	l11881
  7453  0125B2                     l11869:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7457  0125B2  0100               	movlb	0	; () banked
  7458  0125B4  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7459  0125B6  0D17               	mullw	23
  7460  0125B8  0E16               	movlw	22
  7461  0125BA  26F3               	addwf	prodl,f,c
  7462  0125BC  0E00               	movlw	0
  7463  0125BE  22F4               	addwfc	prodh,f,c
  7464  0125C0  0E35               	movlw	low _port
  7465  0125C2  24F3               	addwf	prodl,w,c
  7466  0125C4  6ED9               	movwf	fsr2l,c
  7467  0125C6  0E01               	movlw	high _port
  7468  0125C8  20F4               	addwfc	prodh,w,c
  7469  0125CA  6EDA               	movwf	fsr2h,c
  7470  0125CC  0101               	movlb	1	; () banked
  7471  0125CE  A2DF               	btfss	indf2,1,c
  7472  0125D0  D00D               	goto	l11873
  7473                           
  7474                           ; BSR set to: 1
  7475  0125D2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7476  0125D6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7477  0125DA  0EA5               	movlw	low STR_80
  7478  0125DC  0100               	movlb	0	; () banked
  7479  0125DE  6F62               	movwf	strcpy@from& (0+255),b
  7480  0125E0  0EFF               	movlw	high STR_80
  7481  0125E2  0100               	movlb	0	; () banked
  7482  0125E4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7483  0125E6  ECD6  F0B3         	call	_strcpy	;wreg free
  7484  0125EA  D00C               	goto	l11875
  7485  0125EC                     l11873:
  7486                           
  7487                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7488  0125EC  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7489  0125F0  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7490  0125F4  0EAB               	movlw	low STR_81
  7491  0125F6  0100               	movlb	0	; () banked
  7492  0125F8  6F62               	movwf	strcpy@from& (0+255),b
  7493  0125FA  0EFF               	movlw	high STR_81
  7494  0125FC  0100               	movlb	0	; () banked
  7495  0125FE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7496  012600  ECD6  F0B3         	call	_strcpy	;wreg free
  7497  012604                     l11875:
  7498                           
  7499                           ;settings.c: 107: strp += 5;
  7500  012604  0E05               	movlw	5
  7501  012606  0100               	movlb	0	; () banked
  7502  012608  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7503  01260A  0E00               	movlw	0
  7504  01260C  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7505                           
  7506                           ; BSR set to: 0
  7507  01260E  0100               	movlb	0	; () banked
  7508  012610  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7509  012612  D7CA               	goto	l11865
  7510  012614                     l11881:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;settings.c: 108: }
  7514                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7515  012614  0E81               	movlw	low STR_82
  7516  012616  0100               	movlb	0	; () banked
  7517  012618  6F60               	movwf	display@str0& (0+255),b
  7518  01261A  0EFE               	movlw	high STR_82
  7519  01261C  0100               	movlb	0	; () banked
  7520  01261E  6F61               	movwf	(display@str0+1)& (0+255),b
  7521  012620  0E67               	movlw	low settings_led_indicator@str
  7522  012622  0100               	movlb	0	; () banked
  7523  012624  6F62               	movwf	display@str1& (0+255),b
  7524  012626  0E00               	movlw	high settings_led_indicator@str
  7525  012628  0100               	movlb	0	; () banked
  7526  01262A  6F63               	movwf	(display@str1+1)& (0+255),b
  7527  01262C  0E03               	movlw	3
  7528  01262E  ECE0  F09B         	call	_display
  7529                           
  7530                           ;settings.c: 110: state = 1;
  7531  012632  0E01               	movlw	1
  7532  012634  0101               	movlb	1	; () banked
  7533  012636  6F31               	movwf	settings_led_indicator@state& (0+255),b
  7534                           
  7535                           ;settings.c: 111: }
  7536                           ;settings.c: 112: break;
  7537  012638  D0B6               	goto	l1871
  7538  01263A                     l11885:
  7539                           
  7540                           ; BSR set to: 1
  7541                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7542  01263A  0E00               	movlw	0
  7543  01263C  0100               	movlb	0	; () banked
  7544  01263E  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7545  012640                     l11887:
  7546                           
  7547                           ; BSR set to: 0
  7548  012640  0E02               	movlw	2
  7549  012642  0100               	movlb	0	; () banked
  7550  012644  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7551  012646  D001               	goto	l11891
  7552  012648  D0AE               	goto	l1871
  7553  01264A                     l11891:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7557  01264A  0100               	movlb	0	; () banked
  7558  01264C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7559  01264E  0D17               	mullw	23
  7560  012650  0E02               	movlw	2
  7561  012652  26F3               	addwf	prodl,f,c
  7562  012654  0E00               	movlw	0
  7563  012656  22F4               	addwfc	prodh,f,c
  7564  012658  0E35               	movlw	low _port
  7565  01265A  24F3               	addwf	prodl,w,c
  7566  01265C  6ED9               	movwf	fsr2l,c
  7567  01265E  0E01               	movlw	high _port
  7568  012660  20F4               	addwfc	prodh,w,c
  7569  012662  6EDA               	movwf	fsr2h,c
  7570  012664  0101               	movlb	1	; () banked
  7571  012666  A0DF               	btfss	indf2,0,c
  7572  012668  D093               	goto	l11919
  7573                           
  7574                           ; BSR set to: 1
  7575                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7576  01266A  0100               	movlb	0	; () banked
  7577  01266C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7578  01266E  0D17               	mullw	23
  7579  012670  0E02               	movlw	2
  7580  012672  26F3               	addwf	prodl,f,c
  7581  012674  0E00               	movlw	0
  7582  012676  22F4               	addwfc	prodh,f,c
  7583  012678  0E35               	movlw	low _port
  7584  01267A  24F3               	addwf	prodl,w,c
  7585  01267C  6ED9               	movwf	fsr2l,c
  7586  01267E  0E01               	movlw	high _port
  7587  012680  20F4               	addwfc	prodh,w,c
  7588  012682  6EDA               	movwf	fsr2h,c
  7589  012684  0E00               	movlw	0
  7590  012686  6EDE               	movwf	postinc2,c
  7591  012688  0E00               	movlw	0
  7592  01268A  6EDD               	movwf	postdec2,c
  7593                           
  7594                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7595  01268C  0100               	movlb	0	; () banked
  7596  01268E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7597  012690  0D17               	mullw	23
  7598  012692  0E16               	movlw	22
  7599  012694  26F3               	addwf	prodl,f,c
  7600  012696  0E00               	movlw	0
  7601  012698  22F4               	addwfc	prodh,f,c
  7602  01269A  0E35               	movlw	low _port
  7603  01269C  24F3               	addwf	prodl,w,c
  7604  01269E  6ED9               	movwf	fsr2l,c
  7605  0126A0  0E01               	movlw	high _port
  7606  0126A2  20F4               	addwfc	prodh,w,c
  7607  0126A4  6EDA               	movwf	fsr2h,c
  7608  0126A6  0101               	movlb	1	; () banked
  7609  0126A8  B2DF               	btfsc	indf2,1,c
  7610  0126AA  D004               	goto	u13560
  7611  0126AC  0100               	movlb	0	; () banked
  7612  0126AE  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7613  0126B0  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7614  0126B2  D002               	goto	u13578
  7615  0126B4                     u13560:
  7616  0126B4  0100               	movlb	0	; () banked
  7617  0126B6  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7618  0126B8                     u13578:
  7619  0126B8  0100               	movlb	0	; () banked
  7620  0126BA  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7621  0126BC  0D17               	mullw	23
  7622  0126BE  0E16               	movlw	22
  7623  0126C0  26F3               	addwf	prodl,f,c
  7624  0126C2  0E00               	movlw	0
  7625  0126C4  22F4               	addwfc	prodh,f,c
  7626  0126C6  0E35               	movlw	low _port
  7627  0126C8  24F3               	addwf	prodl,w,c
  7628  0126CA  6ED9               	movwf	fsr2l,c
  7629  0126CC  0E01               	movlw	high _port
  7630  0126CE  20F4               	addwfc	prodh,w,c
  7631  0126D0  6EDA               	movwf	fsr2h,c
  7632  0126D2  0100               	movlb	0	; () banked
  7633  0126D4  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7634  0126D6  0101               	movlb	1	; () banked
  7635  0126D8  50DF               	movf	223,w,c
  7636  0126DA  0100               	movlb	0	; () banked
  7637  0126DC  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7638  0126DE  0BFD               	andlw	-3
  7639  0126E0  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7640  0126E2  0101               	movlb	1	; () banked
  7641  0126E4  6EDF               	movwf	223,c
  7642                           
  7643                           ; BSR set to: 1
  7644                           ;settings.c: 118: LED_output(j, 0);
  7645  0126E6  0E00               	movlw	0
  7646  0126E8  0100               	movlb	0	; () banked
  7647  0126EA  6F60               	movwf	LED_output@value& (0+255),b
  7648  0126EC  0100               	movlb	0	; () banked
  7649  0126EE  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7650  0126F0  ECB0  F0AF         	call	_LED_output
  7651                           
  7652                           ;settings.c: 119: char str[20];
  7653                           ;settings.c: 120: char *strp;
  7654                           ;settings.c: 121: strp = str;
  7655  0126F4  0E7B               	movlw	low settings_led_indicator@str_6122
  7656  0126F6  0100               	movlb	0	; () banked
  7657  0126F8  6F91               	movwf	settings_led_indicator@strp_6123& (0+255),b
  7658  0126FA  0E00               	movlw	high settings_led_indicator@str_6122
  7659  0126FC  0100               	movlb	0	; () banked
  7660  0126FE  6F92               	movwf	(settings_led_indicator@strp_6123+1)& (0+255),b
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7664  012700  0E00               	movlw	0
  7665  012702  0100               	movlb	0	; () banked
  7666  012704  6F94               	movwf	settings_led_indicator@i_6124& (0+255),b
  7667  012706                     l11901:
  7668                           
  7669                           ; BSR set to: 0
  7670  012706  0E02               	movlw	2
  7671  012708  0100               	movlb	0	; () banked
  7672  01270A  6594               	cpfsgt	settings_led_indicator@i_6124& (0+255),b
  7673  01270C  D001               	goto	l11905
  7674  01270E  D031               	goto	l11917
  7675  012710                     l11905:
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7679  012710  0100               	movlb	0	; () banked
  7680  012712  5194               	movf	settings_led_indicator@i_6124& (0+255),w,b
  7681  012714  0D17               	mullw	23
  7682  012716  0E16               	movlw	22
  7683  012718  26F3               	addwf	prodl,f,c
  7684  01271A  0E00               	movlw	0
  7685  01271C  22F4               	addwfc	prodh,f,c
  7686  01271E  0E35               	movlw	low _port
  7687  012720  24F3               	addwf	prodl,w,c
  7688  012722  6ED9               	movwf	fsr2l,c
  7689  012724  0E01               	movlw	high _port
  7690  012726  20F4               	addwfc	prodh,w,c
  7691  012728  6EDA               	movwf	fsr2h,c
  7692  01272A  0101               	movlb	1	; () banked
  7693  01272C  A2DF               	btfss	indf2,1,c
  7694  01272E  D00D               	goto	l11909
  7695                           
  7696                           ; BSR set to: 1
  7697  012730  C091  F060         	movff	settings_led_indicator@strp_6123,strcpy@to
  7698  012734  C092  F061         	movff	settings_led_indicator@strp_6123+1,strcpy@to+1
  7699  012738  0EA5               	movlw	low STR_80
  7700  01273A  0100               	movlb	0	; () banked
  7701  01273C  6F62               	movwf	strcpy@from& (0+255),b
  7702  01273E  0EFF               	movlw	high STR_80
  7703  012740  0100               	movlb	0	; () banked
  7704  012742  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7705  012744  ECD6  F0B3         	call	_strcpy	;wreg free
  7706  012748  D00C               	goto	l11911
  7707  01274A                     l11909:
  7708                           
  7709                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7710  01274A  C091  F060         	movff	settings_led_indicator@strp_6123,strcpy@to
  7711  01274E  C092  F061         	movff	settings_led_indicator@strp_6123+1,strcpy@to+1
  7712  012752  0EAB               	movlw	low STR_81
  7713  012754  0100               	movlb	0	; () banked
  7714  012756  6F62               	movwf	strcpy@from& (0+255),b
  7715  012758  0EFF               	movlw	high STR_81
  7716  01275A  0100               	movlb	0	; () banked
  7717  01275C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7718  01275E  ECD6  F0B3         	call	_strcpy	;wreg free
  7719  012762                     l11911:
  7720                           
  7721                           ;settings.c: 125: strp += 5;
  7722  012762  0E05               	movlw	5
  7723  012764  0100               	movlb	0	; () banked
  7724  012766  2791               	addwf	settings_led_indicator@strp_6123& (0+255),f,b
  7725  012768  0E00               	movlw	0
  7726  01276A  2392               	addwfc	(settings_led_indicator@strp_6123+1)& (0+255),f,b
  7727                           
  7728                           ; BSR set to: 0
  7729  01276C  0100               	movlb	0	; () banked
  7730  01276E  2B94               	incf	settings_led_indicator@i_6124& (0+255),f,b
  7731  012770  D7CA               	goto	l11901
  7732  012772                     l11917:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;settings.c: 126: }
  7736                           ;settings.c: 127: display(SETTINGS, "", str);
  7737  012772  0EE6               	movlw	low (STR_19+3)
  7738  012774  0100               	movlb	0	; () banked
  7739  012776  6F60               	movwf	display@str0& (0+255),b
  7740  012778  0EFF               	movlw	high (STR_19+3)
  7741  01277A  0100               	movlb	0	; () banked
  7742  01277C  6F61               	movwf	(display@str0+1)& (0+255),b
  7743  01277E  0E7B               	movlw	low settings_led_indicator@str_6122
  7744  012780  0100               	movlb	0	; () banked
  7745  012782  6F62               	movwf	display@str1& (0+255),b
  7746  012784  0E00               	movlw	high settings_led_indicator@str_6122
  7747  012786  0100               	movlb	0	; () banked
  7748  012788  6F63               	movwf	(display@str1+1)& (0+255),b
  7749  01278A  0E03               	movlw	3
  7750  01278C  ECE0  F09B         	call	_display
  7751  012790                     l11919:
  7752  012790  0100               	movlb	0	; () banked
  7753  012792  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7754  012794  D755               	goto	l11887
  7755  012796                     l11925:
  7756  012796  0101               	movlb	1	; () banked
  7757  012798  5131               	movf	settings_led_indicator@state& (0+255),w,b
  7758                           
  7759                           ; Switch size 1, requested type "space"
  7760                           ; Number of cases is 2, Range of values is 0 to 1
  7761                           ; switch strategies available:
  7762                           ; Name         Instructions Cycles
  7763                           ; simple_byte            7     4 (average)
  7764                           ;	Chosen strategy is simple_byte
  7765  01279A  0A00               	xorlw	0	; case 0
  7766  01279C  B4D8               	btfsc	status,2,c
  7767  01279E  D6FB               	goto	l11861
  7768  0127A0  0A01               	xorlw	1	; case 1
  7769  0127A2  B4D8               	btfsc	status,2,c
  7770  0127A4  D74A               	goto	l11885
  7771  0127A6                     l1871:
  7772                           
  7773                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7774  0127A6  0100               	movlb	0	; () banked
  7775  0127A8  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7776  0127AA  D01C               	goto	l11935
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;settings.c: 135: ctmu_m.flags = 0;
  7780  0127AC  0E00               	movlw	0
  7781  0127AE  0100               	movlb	0	; () banked
  7782  0127B0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7783  0127B2  0E00               	movlw	0
  7784  0127B4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7785                           
  7786                           ;settings.c: 136: state = 0;
  7787  0127B6  0E00               	movlw	0
  7788  0127B8  0101               	movlb	1	; () banked
  7789  0127BA  6F31               	movwf	settings_led_indicator@state& (0+255),b
  7790                           
  7791                           ;settings.c: 137: settings_flag = 0;
  7792  0127BC  0E00               	movlw	0
  7793  0127BE  0101               	movlb	1	; () banked
  7794  0127C0  6F29               	movwf	_settings_flag& (0+255),b
  7795                           
  7796                           ; BSR set to: 1
  7797                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7798  0127C2  0EE6               	movlw	low (STR_19+3)
  7799  0127C4  0100               	movlb	0	; () banked
  7800  0127C6  6F60               	movwf	display@str0& (0+255),b
  7801  0127C8  0EFF               	movlw	high (STR_19+3)
  7802  0127CA  0100               	movlb	0	; () banked
  7803  0127CC  6F61               	movwf	(display@str0+1)& (0+255),b
  7804  0127CE  0EE6               	movlw	low (STR_19+3)
  7805  0127D0  0100               	movlb	0	; () banked
  7806  0127D2  6F62               	movwf	display@str1& (0+255),b
  7807  0127D4  0EFF               	movlw	high (STR_19+3)
  7808  0127D6  0100               	movlb	0	; () banked
  7809  0127D8  6F63               	movwf	(display@str1+1)& (0+255),b
  7810  0127DA  0E01               	movlw	1
  7811  0127DC  ECE0  F09B         	call	_display
  7812                           
  7813                           ;settings.c: 139: return 1;
  7814  0127E0  0E01               	movlw	1
  7815  0127E2  0012               	return	
  7816  0127E4                     l11935:
  7817                           
  7818                           ;settings.c: 140: }
  7819                           ;settings.c: 141: return 0;
  7820  0127E4  0E00               	movlw	0
  7821  0127E6  0012               	return	
  7822  0127E8                     __end_of_settings_led_indicator:
  7823                           	opt stack 0
  7824                           tblptru	equ	0xFF8
  7825                           tblptrh	equ	0xFF7
  7826                           tblptrl	equ	0xFF6
  7827                           tablat	equ	0xFF5
  7828                           prodh	equ	0xFF4
  7829                           prodl	equ	0xFF3
  7830                           intcon	equ	0xFF2
  7831                           postinc0	equ	0xFEE
  7832                           wreg	equ	0xFE8
  7833                           postinc1	equ	0xFE6
  7834                           postdec1	equ	0xFE5
  7835                           fsr1h	equ	0xFE2
  7836                           fsr1l	equ	0xFE1
  7837                           indf2	equ	0xFDF
  7838                           postinc2	equ	0xFDE
  7839                           postdec2	equ	0xFDD
  7840                           fsr2h	equ	0xFDA
  7841                           fsr2l	equ	0xFD9
  7842                           status	equ	0xFD8
  7843                           
  7844 ;; *************** function _settings_integrating_reset *****************
  7845 ;; Defined at:
  7846 ;;		line 144 in file "settings.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  i               1   55[BANK0 ] unsigned char 
  7851 ;;  str            20   30[BANK0 ] unsigned char [20]
  7852 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7853 ;;		 -> settings_integrating_reset@str_6139(20), 
  7854 ;;  i               1   54[BANK0 ] unsigned char 
  7855 ;;  j               1   56[BANK0 ] unsigned char 
  7856 ;;  str            20   10[BANK0 ] unsigned char [20]
  7857 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7858 ;;		 -> settings_integrating_reset@str(20), 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      unsigned char 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;Total ram usage:       51 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:   12
  7875 ;; This function calls:
  7876 ;;		_display
  7877 ;;		_strcpy
  7878 ;; This function is called by:
  7879 ;;		_settings_task
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text19
  7884  012336                     __ptext19:
  7885                           	opt stack 0
  7886  012336                     _settings_integrating_reset:
  7887                           	opt stack 16
  7888                           
  7889                           ;settings.c: 145: static uint8_t state = 0;
  7890                           ;settings.c: 146: switch (state) {
  7891                           
  7892                           ;incstack = 0
  7893  012336  D105               	goto	l12003
  7894  012338                     l11941:
  7895                           
  7896                           ;settings.c: 148: {
  7897                           ;settings.c: 149: char str[20];
  7898                           ;settings.c: 150: char *strp;
  7899                           ;settings.c: 151: strp = str;
  7900  012338  0E6A               	movlw	low settings_integrating_reset@str
  7901  01233A  0100               	movlb	0	; () banked
  7902  01233C  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7903  01233E  0E00               	movlw	high settings_integrating_reset@str
  7904  012340  0100               	movlb	0	; () banked
  7905  012342  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7909  012344  0E00               	movlw	0
  7910  012346  0100               	movlb	0	; () banked
  7911  012348  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7912  01234A                     l11945:
  7913                           
  7914                           ; BSR set to: 0
  7915  01234A  0E02               	movlw	2
  7916  01234C  0100               	movlb	0	; () banked
  7917  01234E  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7918  012350  D001               	goto	l11949
  7919  012352  D034               	goto	l11961
  7920  012354                     l11949:
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7924  012354  0100               	movlb	0	; () banked
  7925  012356  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7926  012358  0D17               	mullw	23
  7927  01235A  0E0C               	movlw	12
  7928  01235C  26F3               	addwf	prodl,f,c
  7929  01235E  0E00               	movlw	0
  7930  012360  22F4               	addwfc	prodh,f,c
  7931  012362  0E35               	movlw	low _port
  7932  012364  24F3               	addwf	prodl,w,c
  7933  012366  6ED9               	movwf	fsr2l,c
  7934  012368  0E01               	movlw	high _port
  7935  01236A  20F4               	addwfc	prodh,w,c
  7936  01236C  6EDA               	movwf	fsr2h,c
  7937  01236E  50DE               	movf	postinc2,w,c
  7938  012370  10DE               	iorwf	postinc2,w,c
  7939  012372  10DE               	iorwf	postinc2,w,c
  7940  012374  10DE               	iorwf	postinc2,w,c
  7941  012376  B4D8               	btfsc	status,2,c
  7942  012378  D00D               	goto	l11953
  7943                           
  7944                           ; BSR set to: 0
  7945  01237A  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7946  01237E  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7947  012382  0EB1               	movlw	low STR_96
  7948  012384  0100               	movlb	0	; () banked
  7949  012386  6F62               	movwf	strcpy@from& (0+255),b
  7950  012388  0EFF               	movlw	high STR_96
  7951  01238A  0100               	movlb	0	; () banked
  7952  01238C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7953  01238E  ECD6  F0B3         	call	_strcpy	;wreg free
  7954  012392  D00C               	goto	l11955
  7955  012394                     l11953:
  7956                           
  7957                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7958  012394  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7959  012398  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7960  01239C  0E9F               	movlw	low STR_97
  7961  01239E  0100               	movlb	0	; () banked
  7962  0123A0  6F62               	movwf	strcpy@from& (0+255),b
  7963  0123A2  0EFF               	movlw	high STR_97
  7964  0123A4  0100               	movlb	0	; () banked
  7965  0123A6  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7966  0123A8  ECD6  F0B3         	call	_strcpy	;wreg free
  7967  0123AC                     l11955:
  7968                           
  7969                           ;settings.c: 155: strp += 5;
  7970  0123AC  0E05               	movlw	5
  7971  0123AE  0100               	movlb	0	; () banked
  7972  0123B0  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7973  0123B2  0E00               	movlw	0
  7974  0123B4  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7975                           
  7976                           ; BSR set to: 0
  7977  0123B6  0100               	movlb	0	; () banked
  7978  0123B8  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7979  0123BA  D7C7               	goto	l11945
  7980  0123BC                     l11961:
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;settings.c: 156: }
  7984                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7985  0123BC  0E81               	movlw	low STR_82
  7986  0123BE  0100               	movlb	0	; () banked
  7987  0123C0  6F60               	movwf	display@str0& (0+255),b
  7988  0123C2  0EFE               	movlw	high STR_82
  7989  0123C4  0100               	movlb	0	; () banked
  7990  0123C6  6F61               	movwf	(display@str0+1)& (0+255),b
  7991  0123C8  0E6A               	movlw	low settings_integrating_reset@str
  7992  0123CA  0100               	movlb	0	; () banked
  7993  0123CC  6F62               	movwf	display@str1& (0+255),b
  7994  0123CE  0E00               	movlw	high settings_integrating_reset@str
  7995  0123D0  0100               	movlb	0	; () banked
  7996  0123D2  6F63               	movwf	(display@str1+1)& (0+255),b
  7997  0123D4  0E03               	movlw	3
  7998  0123D6  ECE0  F09B         	call	_display
  7999                           
  8000                           ;settings.c: 158: state = 1;
  8001  0123DA  0E01               	movlw	1
  8002  0123DC  0101               	movlb	1	; () banked
  8003  0123DE  6F30               	movwf	settings_integrating_reset@state& (0+255),b
  8004                           
  8005                           ;settings.c: 159: }
  8006                           ;settings.c: 160: break;
  8007  0123E0  D0B8               	goto	l1893
  8008  0123E2                     l11965:
  8009                           
  8010                           ; BSR set to: 1
  8011                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  8012  0123E2  0E00               	movlw	0
  8013  0123E4  0100               	movlb	0	; () banked
  8014  0123E6  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  8015  0123E8                     l11967:
  8016                           
  8017                           ; BSR set to: 0
  8018  0123E8  0E02               	movlw	2
  8019  0123EA  0100               	movlb	0	; () banked
  8020  0123EC  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  8021  0123EE  D001               	goto	l11971
  8022  0123F0  D0B0               	goto	l1893
  8023  0123F2                     l11971:
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  8027  0123F2  0100               	movlb	0	; () banked
  8028  0123F4  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8029  0123F6  0D17               	mullw	23
  8030  0123F8  0E02               	movlw	2
  8031  0123FA  26F3               	addwf	prodl,f,c
  8032  0123FC  0E00               	movlw	0
  8033  0123FE  22F4               	addwfc	prodh,f,c
  8034  012400  0E35               	movlw	low _port
  8035  012402  24F3               	addwf	prodl,w,c
  8036  012404  6ED9               	movwf	fsr2l,c
  8037  012406  0E01               	movlw	high _port
  8038  012408  20F4               	addwfc	prodh,w,c
  8039  01240A  6EDA               	movwf	fsr2h,c
  8040  01240C  0101               	movlb	1	; () banked
  8041  01240E  A0DF               	btfss	indf2,0,c
  8042  012410  D095               	goto	l11997
  8043                           
  8044                           ; BSR set to: 1
  8045                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8046  012412  0100               	movlb	0	; () banked
  8047  012414  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8048  012416  0D17               	mullw	23
  8049  012418  0E02               	movlw	2
  8050  01241A  26F3               	addwf	prodl,f,c
  8051  01241C  0E00               	movlw	0
  8052  01241E  22F4               	addwfc	prodh,f,c
  8053  012420  0E35               	movlw	low _port
  8054  012422  24F3               	addwf	prodl,w,c
  8055  012424  6ED9               	movwf	fsr2l,c
  8056  012426  0E01               	movlw	high _port
  8057  012428  20F4               	addwfc	prodh,w,c
  8058  01242A  6EDA               	movwf	fsr2h,c
  8059  01242C  0E00               	movlw	0
  8060  01242E  6EDE               	movwf	postinc2,c
  8061  012430  0E00               	movlw	0
  8062  012432  6EDD               	movwf	postdec2,c
  8063                           
  8064                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8065  012434  0100               	movlb	0	; () banked
  8066  012436  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8067  012438  0D17               	mullw	23
  8068  01243A  0E08               	movlw	8
  8069  01243C  26F3               	addwf	prodl,f,c
  8070  01243E  0E00               	movlw	0
  8071  012440  22F4               	addwfc	prodh,f,c
  8072  012442  0E35               	movlw	low _port
  8073  012444  24F3               	addwf	prodl,w,c
  8074  012446  6ED9               	movwf	fsr2l,c
  8075  012448  0E01               	movlw	high _port
  8076  01244A  20F4               	addwfc	prodh,w,c
  8077  01244C  6EDA               	movwf	fsr2h,c
  8078  01244E  6ADE               	clrf	postinc2,c
  8079  012450  6ADE               	clrf	postinc2,c
  8080  012452  6ADE               	clrf	postinc2,c
  8081  012454  6ADD               	clrf	postdec2,c
  8082                           
  8083                           ;settings.c: 166: port[j].integrated_current = 0;
  8084  012456  0100               	movlb	0	; () banked
  8085  012458  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8086  01245A  0D17               	mullw	23
  8087  01245C  0E0C               	movlw	12
  8088  01245E  26F3               	addwf	prodl,f,c
  8089  012460  0E00               	movlw	0
  8090  012462  22F4               	addwfc	prodh,f,c
  8091  012464  0E35               	movlw	low _port
  8092  012466  24F3               	addwf	prodl,w,c
  8093  012468  6ED9               	movwf	fsr2l,c
  8094  01246A  0E01               	movlw	high _port
  8095  01246C  20F4               	addwfc	prodh,w,c
  8096  01246E  6EDA               	movwf	fsr2h,c
  8097  012470  6ADE               	clrf	postinc2,c
  8098  012472  6ADE               	clrf	postinc2,c
  8099  012474  6ADE               	clrf	postinc2,c
  8100  012476  6ADD               	clrf	postdec2,c
  8101                           
  8102                           ;settings.c: 167: port[j].integrated_time = 0;
  8103  012478  0100               	movlb	0	; () banked
  8104  01247A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8105  01247C  0D17               	mullw	23
  8106  01247E  0E10               	movlw	16
  8107  012480  26F3               	addwf	prodl,f,c
  8108  012482  0E00               	movlw	0
  8109  012484  22F4               	addwfc	prodh,f,c
  8110  012486  0E35               	movlw	low _port
  8111  012488  24F3               	addwf	prodl,w,c
  8112  01248A  6ED9               	movwf	fsr2l,c
  8113  01248C  0E01               	movlw	high _port
  8114  01248E  20F4               	addwfc	prodh,w,c
  8115  012490  6EDA               	movwf	fsr2h,c
  8116  012492  6ADE               	clrf	postinc2,c
  8117  012494  6ADE               	clrf	postinc2,c
  8118  012496  6ADE               	clrf	postinc2,c
  8119  012498  6ADD               	clrf	postdec2,c
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;settings.c: 168: char str[20];
  8123                           ;settings.c: 169: char *strp;
  8124                           ;settings.c: 170: strp = str;
  8125  01249A  0E7E               	movlw	low settings_integrating_reset@str_6139
  8126  01249C  0100               	movlb	0	; () banked
  8127  01249E  6F94               	movwf	settings_integrating_reset@strp_6140& (0+255),b
  8128  0124A0  0E00               	movlw	high settings_integrating_reset@str_6139
  8129  0124A2  0100               	movlb	0	; () banked
  8130  0124A4  6F95               	movwf	(settings_integrating_reset@strp_6140+1)& (0+255),b
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8134  0124A6  0E00               	movlw	0
  8135  0124A8  0100               	movlb	0	; () banked
  8136  0124AA  6F97               	movwf	settings_integrating_reset@i_6141& (0+255),b
  8137  0124AC                     l11979:
  8138                           
  8139                           ; BSR set to: 0
  8140  0124AC  0E02               	movlw	2
  8141  0124AE  0100               	movlb	0	; () banked
  8142  0124B0  6597               	cpfsgt	settings_integrating_reset@i_6141& (0+255),b
  8143  0124B2  D001               	goto	l11983
  8144  0124B4  D034               	goto	l11995
  8145  0124B6                     l11983:
  8146                           
  8147                           ; BSR set to: 0
  8148                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8149  0124B6  0100               	movlb	0	; () banked
  8150  0124B8  5197               	movf	settings_integrating_reset@i_6141& (0+255),w,b
  8151  0124BA  0D17               	mullw	23
  8152  0124BC  0E0C               	movlw	12
  8153  0124BE  26F3               	addwf	prodl,f,c
  8154  0124C0  0E00               	movlw	0
  8155  0124C2  22F4               	addwfc	prodh,f,c
  8156  0124C4  0E35               	movlw	low _port
  8157  0124C6  24F3               	addwf	prodl,w,c
  8158  0124C8  6ED9               	movwf	fsr2l,c
  8159  0124CA  0E01               	movlw	high _port
  8160  0124CC  20F4               	addwfc	prodh,w,c
  8161  0124CE  6EDA               	movwf	fsr2h,c
  8162  0124D0  50DE               	movf	postinc2,w,c
  8163  0124D2  10DE               	iorwf	postinc2,w,c
  8164  0124D4  10DE               	iorwf	postinc2,w,c
  8165  0124D6  10DE               	iorwf	postinc2,w,c
  8166  0124D8  B4D8               	btfsc	status,2,c
  8167  0124DA  D00D               	goto	l11987
  8168                           
  8169                           ; BSR set to: 0
  8170  0124DC  C094  F060         	movff	settings_integrating_reset@strp_6140,strcpy@to
  8171  0124E0  C095  F061         	movff	settings_integrating_reset@strp_6140+1,strcpy@to+1
  8172  0124E4  0EB1               	movlw	low STR_96
  8173  0124E6  0100               	movlb	0	; () banked
  8174  0124E8  6F62               	movwf	strcpy@from& (0+255),b
  8175  0124EA  0EFF               	movlw	high STR_96
  8176  0124EC  0100               	movlb	0	; () banked
  8177  0124EE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8178  0124F0  ECD6  F0B3         	call	_strcpy	;wreg free
  8179  0124F4  D00C               	goto	l11989
  8180  0124F6                     l11987:
  8181                           
  8182                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8183  0124F6  C094  F060         	movff	settings_integrating_reset@strp_6140,strcpy@to
  8184  0124FA  C095  F061         	movff	settings_integrating_reset@strp_6140+1,strcpy@to+1
  8185  0124FE  0E9F               	movlw	low STR_97
  8186  012500  0100               	movlb	0	; () banked
  8187  012502  6F62               	movwf	strcpy@from& (0+255),b
  8188  012504  0EFF               	movlw	high STR_97
  8189  012506  0100               	movlb	0	; () banked
  8190  012508  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8191  01250A  ECD6  F0B3         	call	_strcpy	;wreg free
  8192  01250E                     l11989:
  8193                           
  8194                           ;settings.c: 174: strp += 5;
  8195  01250E  0E05               	movlw	5
  8196  012510  0100               	movlb	0	; () banked
  8197  012512  2794               	addwf	settings_integrating_reset@strp_6140& (0+255),f,b
  8198  012514  0E00               	movlw	0
  8199  012516  2395               	addwfc	(settings_integrating_reset@strp_6140+1)& (0+255),f,b
  8200                           
  8201                           ; BSR set to: 0
  8202  012518  0100               	movlb	0	; () banked
  8203  01251A  2B97               	incf	settings_integrating_reset@i_6141& (0+255),f,b
  8204  01251C  D7C7               	goto	l11979
  8205  01251E                     l11995:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;settings.c: 175: }
  8209                           ;settings.c: 176: display(SETTINGS, "", str);
  8210  01251E  0EE6               	movlw	low (STR_19+3)
  8211  012520  0100               	movlb	0	; () banked
  8212  012522  6F60               	movwf	display@str0& (0+255),b
  8213  012524  0EFF               	movlw	high (STR_19+3)
  8214  012526  0100               	movlb	0	; () banked
  8215  012528  6F61               	movwf	(display@str0+1)& (0+255),b
  8216  01252A  0E7E               	movlw	low settings_integrating_reset@str_6139
  8217  01252C  0100               	movlb	0	; () banked
  8218  01252E  6F62               	movwf	display@str1& (0+255),b
  8219  012530  0E00               	movlw	high settings_integrating_reset@str_6139
  8220  012532  0100               	movlb	0	; () banked
  8221  012534  6F63               	movwf	(display@str1+1)& (0+255),b
  8222  012536  0E03               	movlw	3
  8223  012538  ECE0  F09B         	call	_display
  8224  01253C                     l11997:
  8225  01253C  0100               	movlb	0	; () banked
  8226  01253E  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8227  012540  D753               	goto	l11967
  8228  012542                     l12003:
  8229  012542  0101               	movlb	1	; () banked
  8230  012544  5130               	movf	settings_integrating_reset@state& (0+255),w,b
  8231                           
  8232                           ; Switch size 1, requested type "space"
  8233                           ; Number of cases is 2, Range of values is 0 to 1
  8234                           ; switch strategies available:
  8235                           ; Name         Instructions Cycles
  8236                           ; simple_byte            7     4 (average)
  8237                           ;	Chosen strategy is simple_byte
  8238  012546  0A00               	xorlw	0	; case 0
  8239  012548  B4D8               	btfsc	status,2,c
  8240  01254A  D6F6               	goto	l11941
  8241  01254C  0A01               	xorlw	1	; case 1
  8242  01254E  B4D8               	btfsc	status,2,c
  8243  012550  D748               	goto	l11965
  8244  012552                     l1893:
  8245                           
  8246                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8247  012552  0100               	movlb	0	; () banked
  8248  012554  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8249  012556  D01C               	goto	l12013
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;settings.c: 184: ctmu_m.flags = 0;
  8253  012558  0E00               	movlw	0
  8254  01255A  0100               	movlb	0	; () banked
  8255  01255C  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8256  01255E  0E00               	movlw	0
  8257  012560  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8258                           
  8259                           ;settings.c: 185: state = 0;
  8260  012562  0E00               	movlw	0
  8261  012564  0101               	movlb	1	; () banked
  8262  012566  6F30               	movwf	settings_integrating_reset@state& (0+255),b
  8263                           
  8264                           ;settings.c: 186: settings_flag = 0;
  8265  012568  0E00               	movlw	0
  8266  01256A  0101               	movlb	1	; () banked
  8267  01256C  6F29               	movwf	_settings_flag& (0+255),b
  8268                           
  8269                           ; BSR set to: 1
  8270                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8271  01256E  0EE6               	movlw	low (STR_19+3)
  8272  012570  0100               	movlb	0	; () banked
  8273  012572  6F60               	movwf	display@str0& (0+255),b
  8274  012574  0EFF               	movlw	high (STR_19+3)
  8275  012576  0100               	movlb	0	; () banked
  8276  012578  6F61               	movwf	(display@str0+1)& (0+255),b
  8277  01257A  0EE6               	movlw	low (STR_19+3)
  8278  01257C  0100               	movlb	0	; () banked
  8279  01257E  6F62               	movwf	display@str1& (0+255),b
  8280  012580  0EFF               	movlw	high (STR_19+3)
  8281  012582  0100               	movlb	0	; () banked
  8282  012584  6F63               	movwf	(display@str1+1)& (0+255),b
  8283  012586  0E01               	movlw	1
  8284  012588  ECE0  F09B         	call	_display
  8285                           
  8286                           ;settings.c: 188: return 1;
  8287  01258C  0E01               	movlw	1
  8288  01258E  0012               	return	
  8289  012590                     l12013:
  8290                           
  8291                           ;settings.c: 189: }
  8292                           ;settings.c: 190: return 0;
  8293  012590  0E00               	movlw	0
  8294  012592  0012               	return	
  8295  012594                     __end_of_settings_integrating_reset:
  8296                           	opt stack 0
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           intcon	equ	0xFF2
  8304                           postinc0	equ	0xFEE
  8305                           wreg	equ	0xFE8
  8306                           postinc1	equ	0xFE6
  8307                           postdec1	equ	0xFE5
  8308                           fsr1h	equ	0xFE2
  8309                           fsr1l	equ	0xFE1
  8310                           indf2	equ	0xFDF
  8311                           postinc2	equ	0xFDE
  8312                           postdec2	equ	0xFDD
  8313                           fsr2h	equ	0xFDA
  8314                           fsr2l	equ	0xFD9
  8315                           status	equ	0xFD8
  8316                           
  8317 ;; *************** function _settings_auto_stop *****************
  8318 ;; Defined at:
  8319 ;;		line 49 in file "settings.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  i               1   52[BANK0 ] unsigned char 
  8324 ;;  str            20   27[BANK0 ] unsigned char [20]
  8325 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8326 ;;		 -> settings_auto_stop@str_6105(20), 
  8327 ;;  i               1   51[BANK0 ] unsigned char 
  8328 ;;  j               1   53[BANK0 ] unsigned char 
  8329 ;;  str            20    7[BANK0 ] unsigned char [20]
  8330 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8331 ;;		 -> settings_auto_stop@str(20), 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      unsigned char 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8342 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;Total ram usage:       48 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:   12
  8348 ;; This function calls:
  8349 ;;		_display
  8350 ;;		_strcpy
  8351 ;; This function is called by:
  8352 ;;		_settings_task
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text20
  8357  0127E8                     __ptext20:
  8358                           	opt stack 0
  8359  0127E8                     _settings_auto_stop:
  8360                           	opt stack 16
  8361                           
  8362                           ;settings.c: 50: static uint8_t state = 0;
  8363                           ;settings.c: 51: switch (state) {
  8364                           
  8365                           ;incstack = 0
  8366  0127E8  D0F7               	goto	l11845
  8367  0127EA                     l11783:
  8368                           
  8369                           ;settings.c: 53: {
  8370                           ;settings.c: 54: char str[20];
  8371                           ;settings.c: 55: char *strp;
  8372                           ;settings.c: 56: strp = str;
  8373  0127EA  0E67               	movlw	low settings_auto_stop@str
  8374  0127EC  0100               	movlb	0	; () banked
  8375  0127EE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8376  0127F0  0E00               	movlw	high settings_auto_stop@str
  8377  0127F2  0100               	movlb	0	; () banked
  8378  0127F4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8382  0127F6  0E00               	movlw	0
  8383  0127F8  0100               	movlb	0	; () banked
  8384  0127FA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8385  0127FC                     l11787:
  8386                           
  8387                           ; BSR set to: 0
  8388  0127FC  0E02               	movlw	2
  8389  0127FE  0100               	movlb	0	; () banked
  8390  012800  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8391  012802  D001               	goto	l11791
  8392  012804  D031               	goto	l11803
  8393  012806                     l11791:
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8397  012806  0100               	movlb	0	; () banked
  8398  012808  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8399  01280A  0D17               	mullw	23
  8400  01280C  0E16               	movlw	22
  8401  01280E  26F3               	addwf	prodl,f,c
  8402  012810  0E00               	movlw	0
  8403  012812  22F4               	addwfc	prodh,f,c
  8404  012814  0E35               	movlw	low _port
  8405  012816  24F3               	addwf	prodl,w,c
  8406  012818  6ED9               	movwf	fsr2l,c
  8407  01281A  0E01               	movlw	high _port
  8408  01281C  20F4               	addwfc	prodh,w,c
  8409  01281E  6EDA               	movwf	fsr2h,c
  8410  012820  0101               	movlb	1	; () banked
  8411  012822  A0DF               	btfss	indf2,0,c
  8412  012824  D00D               	goto	l11795
  8413                           
  8414                           ; BSR set to: 1
  8415  012826  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8416  01282A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8417  01282E  0EA5               	movlw	low STR_80
  8418  012830  0100               	movlb	0	; () banked
  8419  012832  6F62               	movwf	strcpy@from& (0+255),b
  8420  012834  0EFF               	movlw	high STR_80
  8421  012836  0100               	movlb	0	; () banked
  8422  012838  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8423  01283A  ECD6  F0B3         	call	_strcpy	;wreg free
  8424  01283E  D00C               	goto	l11797
  8425  012840                     l11795:
  8426                           
  8427                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8428  012840  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8429  012844  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8430  012848  0EAB               	movlw	low STR_81
  8431  01284A  0100               	movlb	0	; () banked
  8432  01284C  6F62               	movwf	strcpy@from& (0+255),b
  8433  01284E  0EFF               	movlw	high STR_81
  8434  012850  0100               	movlb	0	; () banked
  8435  012852  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8436  012854  ECD6  F0B3         	call	_strcpy	;wreg free
  8437  012858                     l11797:
  8438                           
  8439                           ;settings.c: 60: strp += 5;
  8440  012858  0E05               	movlw	5
  8441  01285A  0100               	movlb	0	; () banked
  8442  01285C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8443  01285E  0E00               	movlw	0
  8444  012860  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8445                           
  8446                           ; BSR set to: 0
  8447  012862  0100               	movlb	0	; () banked
  8448  012864  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8449  012866  D7CA               	goto	l11787
  8450  012868                     l11803:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;settings.c: 61: }
  8454                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8455  012868  0E81               	movlw	low STR_82
  8456  01286A  0100               	movlb	0	; () banked
  8457  01286C  6F60               	movwf	display@str0& (0+255),b
  8458  01286E  0EFE               	movlw	high STR_82
  8459  012870  0100               	movlb	0	; () banked
  8460  012872  6F61               	movwf	(display@str0+1)& (0+255),b
  8461  012874  0E67               	movlw	low settings_auto_stop@str
  8462  012876  0100               	movlb	0	; () banked
  8463  012878  6F62               	movwf	display@str1& (0+255),b
  8464  01287A  0E00               	movlw	high settings_auto_stop@str
  8465  01287C  0100               	movlb	0	; () banked
  8466  01287E  6F63               	movwf	(display@str1+1)& (0+255),b
  8467  012880  0E03               	movlw	3
  8468  012882  ECE0  F09B         	call	_display
  8469                           
  8470                           ;settings.c: 63: state = 1;
  8471  012886  0E01               	movlw	1
  8472  012888  0101               	movlb	1	; () banked
  8473  01288A  6F2F               	movwf	settings_auto_stop@state& (0+255),b
  8474                           
  8475                           ;settings.c: 64: }
  8476                           ;settings.c: 65: break;
  8477  01288C  D0AD               	goto	l1849
  8478  01288E                     l11807:
  8479                           
  8480                           ; BSR set to: 1
  8481                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8482  01288E  0E00               	movlw	0
  8483  012890  0100               	movlb	0	; () banked
  8484  012892  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8485  012894                     l11809:
  8486                           
  8487                           ; BSR set to: 0
  8488  012894  0E02               	movlw	2
  8489  012896  0100               	movlb	0	; () banked
  8490  012898  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8491  01289A  D001               	goto	l11813
  8492  01289C  D0A5               	goto	l1849
  8493  01289E                     l11813:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8497  01289E  0100               	movlb	0	; () banked
  8498  0128A0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8499  0128A2  0D17               	mullw	23
  8500  0128A4  0E02               	movlw	2
  8501  0128A6  26F3               	addwf	prodl,f,c
  8502  0128A8  0E00               	movlw	0
  8503  0128AA  22F4               	addwfc	prodh,f,c
  8504  0128AC  0E35               	movlw	low _port
  8505  0128AE  24F3               	addwf	prodl,w,c
  8506  0128B0  6ED9               	movwf	fsr2l,c
  8507  0128B2  0E01               	movlw	high _port
  8508  0128B4  20F4               	addwfc	prodh,w,c
  8509  0128B6  6EDA               	movwf	fsr2h,c
  8510  0128B8  0101               	movlb	1	; () banked
  8511  0128BA  A0DF               	btfss	indf2,0,c
  8512  0128BC  D08A               	goto	l11839
  8513                           
  8514                           ; BSR set to: 1
  8515                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8516  0128BE  0100               	movlb	0	; () banked
  8517  0128C0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8518  0128C2  0D17               	mullw	23
  8519  0128C4  0E02               	movlw	2
  8520  0128C6  26F3               	addwf	prodl,f,c
  8521  0128C8  0E00               	movlw	0
  8522  0128CA  22F4               	addwfc	prodh,f,c
  8523  0128CC  0E35               	movlw	low _port
  8524  0128CE  24F3               	addwf	prodl,w,c
  8525  0128D0  6ED9               	movwf	fsr2l,c
  8526  0128D2  0E01               	movlw	high _port
  8527  0128D4  20F4               	addwfc	prodh,w,c
  8528  0128D6  6EDA               	movwf	fsr2h,c
  8529  0128D8  0E00               	movlw	0
  8530  0128DA  6EDE               	movwf	postinc2,c
  8531  0128DC  0E00               	movlw	0
  8532  0128DE  6EDD               	movwf	postdec2,c
  8533                           
  8534                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8535  0128E0  0100               	movlb	0	; () banked
  8536  0128E2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8537  0128E4  0D17               	mullw	23
  8538  0128E6  0E16               	movlw	22
  8539  0128E8  26F3               	addwf	prodl,f,c
  8540  0128EA  0E00               	movlw	0
  8541  0128EC  22F4               	addwfc	prodh,f,c
  8542  0128EE  0E35               	movlw	low _port
  8543  0128F0  24F3               	addwf	prodl,w,c
  8544  0128F2  6ED9               	movwf	fsr2l,c
  8545  0128F4  0E01               	movlw	high _port
  8546  0128F6  20F4               	addwfc	prodh,w,c
  8547  0128F8  6EDA               	movwf	fsr2h,c
  8548  0128FA  0101               	movlb	1	; () banked
  8549  0128FC  B0DF               	btfsc	indf2,0,c
  8550  0128FE  D004               	goto	u13440
  8551  012900  0100               	movlb	0	; () banked
  8552  012902  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8553  012904  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8554  012906  D002               	goto	u13458
  8555  012908                     u13440:
  8556  012908  0100               	movlb	0	; () banked
  8557  01290A  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8558  01290C                     u13458:
  8559  01290C  0100               	movlb	0	; () banked
  8560  01290E  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8561  012910  0D17               	mullw	23
  8562  012912  0E16               	movlw	22
  8563  012914  26F3               	addwf	prodl,f,c
  8564  012916  0E00               	movlw	0
  8565  012918  22F4               	addwfc	prodh,f,c
  8566  01291A  0E35               	movlw	low _port
  8567  01291C  24F3               	addwf	prodl,w,c
  8568  01291E  6ED9               	movwf	fsr2l,c
  8569  012920  0E01               	movlw	high _port
  8570  012922  20F4               	addwfc	prodh,w,c
  8571  012924  6EDA               	movwf	fsr2h,c
  8572  012926  0101               	movlb	1	; () banked
  8573  012928  50DF               	movf	223,w,c
  8574  01292A  0100               	movlb	0	; () banked
  8575  01292C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8576  01292E  0BFE               	andlw	-2
  8577  012930  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8578  012932  0101               	movlb	1	; () banked
  8579  012934  6EDF               	movwf	223,c
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;settings.c: 71: char str[20];
  8583                           ;settings.c: 72: char *strp;
  8584                           ;settings.c: 73: strp = str;
  8585  012936  0E7B               	movlw	low settings_auto_stop@str_6105
  8586  012938  0100               	movlb	0	; () banked
  8587  01293A  6F91               	movwf	settings_auto_stop@strp_6106& (0+255),b
  8588  01293C  0E00               	movlw	high settings_auto_stop@str_6105
  8589  01293E  0100               	movlb	0	; () banked
  8590  012940  6F92               	movwf	(settings_auto_stop@strp_6106+1)& (0+255),b
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8594  012942  0E00               	movlw	0
  8595  012944  0100               	movlb	0	; () banked
  8596  012946  6F94               	movwf	settings_auto_stop@i_6107& (0+255),b
  8597  012948                     l11821:
  8598                           
  8599                           ; BSR set to: 0
  8600  012948  0E02               	movlw	2
  8601  01294A  0100               	movlb	0	; () banked
  8602  01294C  6594               	cpfsgt	settings_auto_stop@i_6107& (0+255),b
  8603  01294E  D001               	goto	l11825
  8604  012950  D031               	goto	l11837
  8605  012952                     l11825:
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8609  012952  0100               	movlb	0	; () banked
  8610  012954  5194               	movf	settings_auto_stop@i_6107& (0+255),w,b
  8611  012956  0D17               	mullw	23
  8612  012958  0E16               	movlw	22
  8613  01295A  26F3               	addwf	prodl,f,c
  8614  01295C  0E00               	movlw	0
  8615  01295E  22F4               	addwfc	prodh,f,c
  8616  012960  0E35               	movlw	low _port
  8617  012962  24F3               	addwf	prodl,w,c
  8618  012964  6ED9               	movwf	fsr2l,c
  8619  012966  0E01               	movlw	high _port
  8620  012968  20F4               	addwfc	prodh,w,c
  8621  01296A  6EDA               	movwf	fsr2h,c
  8622  01296C  0101               	movlb	1	; () banked
  8623  01296E  A0DF               	btfss	indf2,0,c
  8624  012970  D00D               	goto	l11829
  8625                           
  8626                           ; BSR set to: 1
  8627  012972  C091  F060         	movff	settings_auto_stop@strp_6106,strcpy@to
  8628  012976  C092  F061         	movff	settings_auto_stop@strp_6106+1,strcpy@to+1
  8629  01297A  0EA5               	movlw	low STR_80
  8630  01297C  0100               	movlb	0	; () banked
  8631  01297E  6F62               	movwf	strcpy@from& (0+255),b
  8632  012980  0EFF               	movlw	high STR_80
  8633  012982  0100               	movlb	0	; () banked
  8634  012984  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8635  012986  ECD6  F0B3         	call	_strcpy	;wreg free
  8636  01298A  D00C               	goto	l11831
  8637  01298C                     l11829:
  8638                           
  8639                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8640  01298C  C091  F060         	movff	settings_auto_stop@strp_6106,strcpy@to
  8641  012990  C092  F061         	movff	settings_auto_stop@strp_6106+1,strcpy@to+1
  8642  012994  0EAB               	movlw	low STR_81
  8643  012996  0100               	movlb	0	; () banked
  8644  012998  6F62               	movwf	strcpy@from& (0+255),b
  8645  01299A  0EFF               	movlw	high STR_81
  8646  01299C  0100               	movlb	0	; () banked
  8647  01299E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8648  0129A0  ECD6  F0B3         	call	_strcpy	;wreg free
  8649  0129A4                     l11831:
  8650                           
  8651                           ;settings.c: 77: strp += 5;
  8652  0129A4  0E05               	movlw	5
  8653  0129A6  0100               	movlb	0	; () banked
  8654  0129A8  2791               	addwf	settings_auto_stop@strp_6106& (0+255),f,b
  8655  0129AA  0E00               	movlw	0
  8656  0129AC  2392               	addwfc	(settings_auto_stop@strp_6106+1)& (0+255),f,b
  8657                           
  8658                           ; BSR set to: 0
  8659  0129AE  0100               	movlb	0	; () banked
  8660  0129B0  2B94               	incf	settings_auto_stop@i_6107& (0+255),f,b
  8661  0129B2  D7CA               	goto	l11821
  8662  0129B4                     l11837:
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;settings.c: 78: }
  8666                           ;settings.c: 79: display(SETTINGS, "", str);
  8667  0129B4  0EE6               	movlw	low (STR_19+3)
  8668  0129B6  0100               	movlb	0	; () banked
  8669  0129B8  6F60               	movwf	display@str0& (0+255),b
  8670  0129BA  0EFF               	movlw	high (STR_19+3)
  8671  0129BC  0100               	movlb	0	; () banked
  8672  0129BE  6F61               	movwf	(display@str0+1)& (0+255),b
  8673  0129C0  0E7B               	movlw	low settings_auto_stop@str_6105
  8674  0129C2  0100               	movlb	0	; () banked
  8675  0129C4  6F62               	movwf	display@str1& (0+255),b
  8676  0129C6  0E00               	movlw	high settings_auto_stop@str_6105
  8677  0129C8  0100               	movlb	0	; () banked
  8678  0129CA  6F63               	movwf	(display@str1+1)& (0+255),b
  8679  0129CC  0E03               	movlw	3
  8680  0129CE  ECE0  F09B         	call	_display
  8681  0129D2                     l11839:
  8682  0129D2  0100               	movlb	0	; () banked
  8683  0129D4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8684  0129D6  D75E               	goto	l11809
  8685  0129D8                     l11845:
  8686  0129D8  0101               	movlb	1	; () banked
  8687  0129DA  512F               	movf	settings_auto_stop@state& (0+255),w,b
  8688                           
  8689                           ; Switch size 1, requested type "space"
  8690                           ; Number of cases is 2, Range of values is 0 to 1
  8691                           ; switch strategies available:
  8692                           ; Name         Instructions Cycles
  8693                           ; simple_byte            7     4 (average)
  8694                           ;	Chosen strategy is simple_byte
  8695  0129DC  0A00               	xorlw	0	; case 0
  8696  0129DE  B4D8               	btfsc	status,2,c
  8697  0129E0  D704               	goto	l11783
  8698  0129E2  0A01               	xorlw	1	; case 1
  8699  0129E4  B4D8               	btfsc	status,2,c
  8700  0129E6  D753               	goto	l11807
  8701  0129E8                     l1849:
  8702                           
  8703                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8704  0129E8  0100               	movlb	0	; () banked
  8705  0129EA  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8706  0129EC  D01C               	goto	l11855
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;settings.c: 87: ctmu_m.flags = 0;
  8710  0129EE  0E00               	movlw	0
  8711  0129F0  0100               	movlb	0	; () banked
  8712  0129F2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8713  0129F4  0E00               	movlw	0
  8714  0129F6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8715                           
  8716                           ;settings.c: 88: state = 0;
  8717  0129F8  0E00               	movlw	0
  8718  0129FA  0101               	movlb	1	; () banked
  8719  0129FC  6F2F               	movwf	settings_auto_stop@state& (0+255),b
  8720                           
  8721                           ;settings.c: 89: settings_flag = 0;
  8722  0129FE  0E00               	movlw	0
  8723  012A00  0101               	movlb	1	; () banked
  8724  012A02  6F29               	movwf	_settings_flag& (0+255),b
  8725                           
  8726                           ; BSR set to: 1
  8727                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8728  012A04  0EE6               	movlw	low (STR_19+3)
  8729  012A06  0100               	movlb	0	; () banked
  8730  012A08  6F60               	movwf	display@str0& (0+255),b
  8731  012A0A  0EFF               	movlw	high (STR_19+3)
  8732  012A0C  0100               	movlb	0	; () banked
  8733  012A0E  6F61               	movwf	(display@str0+1)& (0+255),b
  8734  012A10  0EE6               	movlw	low (STR_19+3)
  8735  012A12  0100               	movlb	0	; () banked
  8736  012A14  6F62               	movwf	display@str1& (0+255),b
  8737  012A16  0EFF               	movlw	high (STR_19+3)
  8738  012A18  0100               	movlb	0	; () banked
  8739  012A1A  6F63               	movwf	(display@str1+1)& (0+255),b
  8740  012A1C  0E01               	movlw	1
  8741  012A1E  ECE0  F09B         	call	_display
  8742                           
  8743                           ;settings.c: 91: return 1;
  8744  012A22  0E01               	movlw	1
  8745  012A24  0012               	return	
  8746  012A26                     l11855:
  8747                           
  8748                           ;settings.c: 92: }
  8749                           ;settings.c: 93: return 0;
  8750  012A26  0E00               	movlw	0
  8751  012A28  0012               	return	
  8752  012A2A                     __end_of_settings_auto_stop:
  8753                           	opt stack 0
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodh	equ	0xFF4
  8759                           prodl	equ	0xFF3
  8760                           intcon	equ	0xFF2
  8761                           postinc0	equ	0xFEE
  8762                           wreg	equ	0xFE8
  8763                           postinc1	equ	0xFE6
  8764                           postdec1	equ	0xFE5
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           indf2	equ	0xFDF
  8768                           postinc2	equ	0xFDE
  8769                           postdec2	equ	0xFDD
  8770                           fsr2h	equ	0xFDA
  8771                           fsr2l	equ	0xFD9
  8772                           status	equ	0xFD8
  8773                           
  8774 ;; *************** function _settings_adjust_time *****************
  8775 ;; Defined at:
  8776 ;;		line 13 in file "settings.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      unsigned char 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:   16
  8797 ;; This function calls:
  8798 ;;		_RTCC_adjust_time_cursor
  8799 ;;		_RTCC_adjust_time_dec
  8800 ;;		_RTCC_adjust_time_inc
  8801 ;;		_RTCC_adjust_time_toggle
  8802 ;;		_display
  8803 ;; This function is called by:
  8804 ;;		_settings_task
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text21
  8809  0144F8                     __ptext21:
  8810                           	opt stack 0
  8811  0144F8                     _settings_adjust_time:
  8812                           	opt stack 12
  8813                           
  8814                           ;settings.c: 14: static uint8_t state = 0;
  8815                           ;settings.c: 15: switch (state) {
  8816                           
  8817                           ;incstack = 0
  8818  0144F8  D043               	goto	l11767
  8819  0144FA                     l11743:
  8820                           
  8821                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8822  0144FA  0EE6               	movlw	low (STR_19+3)
  8823  0144FC  0100               	movlb	0	; () banked
  8824  0144FE  6F60               	movwf	display@str0& (0+255),b
  8825  014500  0EFF               	movlw	high (STR_19+3)
  8826  014502  0100               	movlb	0	; () banked
  8827  014504  6F61               	movwf	(display@str0+1)& (0+255),b
  8828  014506  0EE6               	movlw	low (STR_19+3)
  8829  014508  0100               	movlb	0	; () banked
  8830  01450A  6F62               	movwf	display@str1& (0+255),b
  8831  01450C  0EFF               	movlw	high (STR_19+3)
  8832  01450E  0100               	movlb	0	; () banked
  8833  014510  6F63               	movwf	(display@str1+1)& (0+255),b
  8834  014512  0E01               	movlw	1
  8835  014514  ECE0  F09B         	call	_display
  8836                           
  8837                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8838  014518  0E7A               	movlw	low _now
  8839  01451A  0100               	movlb	0	; () banked
  8840  01451C  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8841  01451E  0E01               	movlw	high _now
  8842  014520  0100               	movlb	0	; () banked
  8843  014522  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8844  014524  EC60  F0B3         	call	_RTCC_adjust_time_toggle	;wreg free
  8845                           
  8846                           ;settings.c: 19: state = 1;
  8847  014528  0E01               	movlw	1
  8848  01452A  0101               	movlb	1	; () banked
  8849  01452C  6F2E               	movwf	settings_adjust_time@state& (0+255),b
  8850                           
  8851                           ;settings.c: 20: break;
  8852  01452E  D030               	goto	l1831
  8853  014530                     l1832:
  8854                           
  8855                           ; BSR set to: 1
  8856                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8857  014530  0101               	movlb	1	; () banked
  8858  014532  A14E               	btfss	(_port+25)& (0+255),0,b
  8859  014534  D00A               	goto	l11753
  8860                           
  8861                           ; BSR set to: 1
  8862                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8863  014536  0101               	movlb	1	; () banked
  8864  014538  914E               	bcf	(_port+25)& (0+255),0,b
  8865                           
  8866                           ; BSR set to: 1
  8867                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8868  01453A  0E7A               	movlw	low _now
  8869  01453C  0100               	movlb	0	; () banked
  8870  01453E  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8871  014540  0E01               	movlw	high _now
  8872  014542  0100               	movlb	0	; () banked
  8873  014544  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8874  014546  EC34  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8875  01454A                     l11753:
  8876                           
  8877                           ;settings.c: 25: }
  8878                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8879  01454A  0101               	movlb	1	; () banked
  8880  01454C  A165               	btfss	(_port+48)& (0+255),0,b
  8881  01454E  D00A               	goto	l11759
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8885  014550  0101               	movlb	1	; () banked
  8886  014552  9165               	bcf	(_port+48)& (0+255),0,b
  8887                           
  8888                           ; BSR set to: 1
  8889                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8890  014554  0E7A               	movlw	low _now
  8891  014556  0100               	movlb	0	; () banked
  8892  014558  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8893  01455A  0E01               	movlw	high _now
  8894  01455C  0100               	movlb	0	; () banked
  8895  01455E  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8896  014560  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8897  014564                     l11759:
  8898                           
  8899                           ;settings.c: 29: }
  8900                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8901  014564  0101               	movlb	1	; () banked
  8902  014566  A137               	btfss	(_port+2)& (0+255),0,b
  8903  014568  D013               	goto	l1831
  8904                           
  8905                           ; BSR set to: 1
  8906                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8907  01456A  0101               	movlb	1	; () banked
  8908  01456C  9137               	bcf	(_port+2)& (0+255),0,b
  8909                           
  8910                           ; BSR set to: 1
  8911                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8912  01456E  0E7A               	movlw	low _now
  8913  014570  0100               	movlb	0	; () banked
  8914  014572  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8915  014574  0E01               	movlw	high _now
  8916  014576  0100               	movlb	0	; () banked
  8917  014578  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8918  01457A  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8919                           
  8920                           ;settings.c: 37: }
  8921                           
  8922                           ;settings.c: 36: break;
  8923                           
  8924                           ;settings.c: 35: default:
  8925                           
  8926                           ;settings.c: 33: }
  8927                           ;settings.c: 34: break;
  8928  01457E  D008               	goto	l1831
  8929  014580                     l11767:
  8930  014580  0101               	movlb	1	; () banked
  8931  014582  512E               	movf	settings_adjust_time@state& (0+255),w,b
  8932                           
  8933                           ; Switch size 1, requested type "space"
  8934                           ; Number of cases is 2, Range of values is 0 to 1
  8935                           ; switch strategies available:
  8936                           ; Name         Instructions Cycles
  8937                           ; simple_byte            7     4 (average)
  8938                           ;	Chosen strategy is simple_byte
  8939  014584  0A00               	xorlw	0	; case 0
  8940  014586  B4D8               	btfsc	status,2,c
  8941  014588  D7B8               	goto	l11743
  8942  01458A  0A01               	xorlw	1	; case 1
  8943  01458C  B4D8               	btfsc	status,2,c
  8944  01458E  D7D0               	goto	l1832
  8945  014590                     l1831:
  8946                           
  8947                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8948  014590  0100               	movlb	0	; () banked
  8949  014592  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8950  014594  D01F               	goto	l11777
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;settings.c: 39: ctmu_m.flags = 0;
  8954  014596  0E00               	movlw	0
  8955  014598  0100               	movlb	0	; () banked
  8956  01459A  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8957  01459C  0E00               	movlw	0
  8958  01459E  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8959                           
  8960                           ;settings.c: 40: now.edit.flags = 0;
  8961  0145A0  0E00               	movlw	0
  8962  0145A2  0101               	movlb	1	; () banked
  8963  0145A4  6F87               	movwf	(_now+13)& (0+255),b
  8964                           
  8965                           ;settings.c: 41: state = 0;
  8966  0145A6  0E00               	movlw	0
  8967  0145A8  0101               	movlb	1	; () banked
  8968  0145AA  6F2E               	movwf	settings_adjust_time@state& (0+255),b
  8969                           
  8970                           ;settings.c: 42: settings_flag = 0;
  8971  0145AC  0E00               	movlw	0
  8972  0145AE  0101               	movlb	1	; () banked
  8973  0145B0  6F29               	movwf	_settings_flag& (0+255),b
  8974                           
  8975                           ; BSR set to: 1
  8976                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8977  0145B2  0EE6               	movlw	low (STR_19+3)
  8978  0145B4  0100               	movlb	0	; () banked
  8979  0145B6  6F60               	movwf	display@str0& (0+255),b
  8980  0145B8  0EFF               	movlw	high (STR_19+3)
  8981  0145BA  0100               	movlb	0	; () banked
  8982  0145BC  6F61               	movwf	(display@str0+1)& (0+255),b
  8983  0145BE  0EE6               	movlw	low (STR_19+3)
  8984  0145C0  0100               	movlb	0	; () banked
  8985  0145C2  6F62               	movwf	display@str1& (0+255),b
  8986  0145C4  0EFF               	movlw	high (STR_19+3)
  8987  0145C6  0100               	movlb	0	; () banked
  8988  0145C8  6F63               	movwf	(display@str1+1)& (0+255),b
  8989  0145CA  0E01               	movlw	1
  8990  0145CC  ECE0  F09B         	call	_display
  8991                           
  8992                           ;settings.c: 44: return 1;
  8993  0145D0  0E01               	movlw	1
  8994  0145D2  0012               	return	
  8995  0145D4                     l11777:
  8996                           
  8997                           ;settings.c: 45: }
  8998                           ;settings.c: 46: return 0;
  8999  0145D4  0E00               	movlw	0
  9000  0145D6  0012               	return	
  9001  0145D8                     __end_of_settings_adjust_time:
  9002                           	opt stack 0
  9003                           tblptru	equ	0xFF8
  9004                           tblptrh	equ	0xFF7
  9005                           tblptrl	equ	0xFF6
  9006                           tablat	equ	0xFF5
  9007                           prodh	equ	0xFF4
  9008                           prodl	equ	0xFF3
  9009                           intcon	equ	0xFF2
  9010                           postinc0	equ	0xFEE
  9011                           wreg	equ	0xFE8
  9012                           postinc1	equ	0xFE6
  9013                           postdec1	equ	0xFE5
  9014                           fsr1h	equ	0xFE2
  9015                           fsr1l	equ	0xFE1
  9016                           indf2	equ	0xFDF
  9017                           postinc2	equ	0xFDE
  9018                           postdec2	equ	0xFDD
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function _RTCC_adjust_time_toggle *****************
  9024 ;; Defined at:
  9025 ;;		line 268 in file "../My_library/My_RTCC.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  tm              2    0[BANK0 ] PTR struct .
  9028 ;;		 -> now(14), 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;		None               void
  9033 ;; Registers used:
  9034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;Total ram usage:        2 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:   11
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_settings_adjust_time
  9051 ;;		_RTCC_adjust_time_button
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text22
  9056  0166C0                     __ptext22:
  9057                           	opt stack 0
  9058  0166C0                     _RTCC_adjust_time_toggle:
  9059                           	opt stack 16
  9060                           
  9061                           ;My_RTCC.c: 269: if (tm->edit.flags) {
  9062                           
  9063                           ;incstack = 0
  9064  0166C0  0100               	movlb	0	; () banked
  9065  0166C2  EE20 F00D          	lfsr	2,13
  9066  0166C6  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9067  0166C8  26D9               	addwf	fsr2l,f,c
  9068  0166CA  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9069  0166CC  22DA               	addwfc	fsr2h,f,c
  9070  0166CE  50DF               	movf	indf2,w,c
  9071  0166D0  B4D8               	btfsc	status,2,c
  9072  0166D2  D00A               	goto	l11133
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;My_RTCC.c: 270: tm->edit.flags = 0;
  9076  0166D4  0100               	movlb	0	; () banked
  9077  0166D6  EE20 F00D          	lfsr	2,13
  9078  0166DA  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9079  0166DC  26D9               	addwf	fsr2l,f,c
  9080  0166DE  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9081  0166E0  22DA               	addwfc	fsr2h,f,c
  9082  0166E2  0E00               	movlw	0
  9083  0166E4  6EDF               	movwf	indf2,c
  9084                           
  9085                           ;My_RTCC.c: 271: } else {
  9086  0166E6  0012               	return	
  9087  0166E8                     l11133:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;My_RTCC.c: 272: tm->edit.flag.ss = 1;
  9091  0166E8  0100               	movlb	0	; () banked
  9092  0166EA  EE20 F00D          	lfsr	2,13
  9093  0166EE  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9094  0166F0  26D9               	addwf	fsr2l,f,c
  9095  0166F2  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9096  0166F4  22DA               	addwfc	fsr2h,f,c
  9097  0166F6  0100               	movlb	0	; () banked
  9098  0166F8  80DF               	bsf	indf2,0,c
  9099  0166FA  0012               	return	
  9100  0166FC                     __end_of_RTCC_adjust_time_toggle:
  9101                           	opt stack 0
  9102                           tblptru	equ	0xFF8
  9103                           tblptrh	equ	0xFF7
  9104                           tblptrl	equ	0xFF6
  9105                           tablat	equ	0xFF5
  9106                           prodh	equ	0xFF4
  9107                           prodl	equ	0xFF3
  9108                           intcon	equ	0xFF2
  9109                           postinc0	equ	0xFEE
  9110                           wreg	equ	0xFE8
  9111                           postinc1	equ	0xFE6
  9112                           postdec1	equ	0xFE5
  9113                           fsr1h	equ	0xFE2
  9114                           fsr1l	equ	0xFE1
  9115                           indf2	equ	0xFDF
  9116                           postinc2	equ	0xFDE
  9117                           postdec2	equ	0xFDD
  9118                           fsr2h	equ	0xFDA
  9119                           fsr2l	equ	0xFD9
  9120                           status	equ	0xFD8
  9121                           
  9122 ;; *************** function _RTCC_adjust_time_inc *****************
  9123 ;; Defined at:
  9124 ;;		line 286 in file "../My_library/My_RTCC.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  tm              2   49[BANK0 ] PTR struct .
  9127 ;;		 -> now(14), 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;  i               1   55[BANK0 ] unsigned char 
  9130 ;;  i               1   56[BANK0 ] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;		None               void
  9133 ;; Registers used:
  9134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9143 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9144 ;;Total ram usage:        8 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:   15
  9147 ;; This function calls:
  9148 ;;		_RTCC_from_RTCC
  9149 ;;		_RTCC_from_epoch
  9150 ;;		___lmul
  9151 ;;		_month_length
  9152 ;; This function is called by:
  9153 ;;		_settings_adjust_time
  9154 ;;		_RTCC_adjust_time_button
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text23
  9159  01166E                     __ptext23:
  9160                           	opt stack 0
  9161  01166E                     _RTCC_adjust_time_inc:
  9162                           	opt stack 12
  9163                           
  9164                           ;My_RTCC.c: 287: RTCC_from_RTCC(tm);
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;incstack = 0
  9168  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9169  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9170  011676  EC2D  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9171                           
  9172                           ;My_RTCC.c: 288: if (tm->edit.flag.ss) tm->epoch += 1;
  9173  01167A  0100               	movlb	0	; () banked
  9174  01167C  EE20 F00D          	lfsr	2,13
  9175  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9176  011682  26D9               	addwf	fsr2l,f,c
  9177  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9178  011686  22DA               	addwfc	fsr2h,f,c
  9179  011688  0100               	movlb	0	; () banked
  9180  01168A  A0DF               	btfss	indf2,0,c
  9181  01168C  D009               	goto	l937
  9182                           
  9183                           ; BSR set to: 0
  9184  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9185  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9186  011696  2ADE               	incf	postinc2,f,c
  9187  011698  0E00               	movlw	0
  9188  01169A  22DE               	addwfc	postinc2,f,c
  9189  01169C  22DE               	addwfc	postinc2,f,c
  9190  01169E  22DE               	addwfc	postinc2,f,c
  9191  0116A0                     l937:
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;My_RTCC.c: 289: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9195  0116A0  0100               	movlb	0	; () banked
  9196  0116A2  EE20 F00D          	lfsr	2,13
  9197  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9198  0116A8  26D9               	addwf	fsr2l,f,c
  9199  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9200  0116AC  22DA               	addwfc	fsr2h,f,c
  9201  0116AE  0100               	movlb	0	; () banked
  9202  0116B0  A2DF               	btfss	indf2,1,c
  9203  0116B2  D00A               	goto	l11169
  9204                           
  9205                           ; BSR set to: 0
  9206  0116B4  0E3C               	movlw	60
  9207  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9208  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9209  0116BE  26DE               	addwf	postinc2,f,c
  9210  0116C0  0E00               	movlw	0
  9211  0116C2  22DE               	addwfc	postinc2,f,c
  9212  0116C4  22DE               	addwfc	postinc2,f,c
  9213  0116C6  22DE               	addwfc	postinc2,f,c
  9214  0116C8                     l11169:
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;My_RTCC.c: 290: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9218  0116C8  0100               	movlb	0	; () banked
  9219  0116CA  EE20 F00D          	lfsr	2,13
  9220  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9221  0116D0  26D9               	addwf	fsr2l,f,c
  9222  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9223  0116D4  22DA               	addwfc	fsr2h,f,c
  9224  0116D6  0100               	movlb	0	; () banked
  9225  0116D8  A4DF               	btfss	indf2,2,c
  9226  0116DA  D00C               	goto	l11173
  9227                           
  9228                           ; BSR set to: 0
  9229  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9230  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9231  0116E4  0E10               	movlw	16
  9232  0116E6  26DE               	addwf	postinc2,f,c
  9233  0116E8  0E0E               	movlw	14
  9234  0116EA  22DE               	addwfc	postinc2,f,c
  9235  0116EC  0E00               	movlw	0
  9236  0116EE  22DE               	addwfc	postinc2,f,c
  9237  0116F0  0E00               	movlw	0
  9238  0116F2  22DE               	addwfc	postinc2,f,c
  9239  0116F4                     l11173:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;My_RTCC.c: 291: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9243  0116F4  0100               	movlb	0	; () banked
  9244  0116F6  EE20 F00D          	lfsr	2,13
  9245  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9246  0116FC  26D9               	addwf	fsr2l,f,c
  9247  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9248  011700  22DA               	addwfc	fsr2h,f,c
  9249  011702  0100               	movlb	0	; () banked
  9250  011704  A6DF               	btfss	indf2,3,c
  9251  011706  D00C               	goto	l11177
  9252                           
  9253                           ; BSR set to: 0
  9254  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9255  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9256  011710  0E80               	movlw	128
  9257  011712  26DE               	addwf	postinc2,f,c
  9258  011714  0E51               	movlw	81
  9259  011716  22DE               	addwfc	postinc2,f,c
  9260  011718  0E01               	movlw	1
  9261  01171A  22DE               	addwfc	postinc2,f,c
  9262  01171C  0E00               	movlw	0
  9263  01171E  22DE               	addwfc	postinc2,f,c
  9264  011720                     l11177:
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;My_RTCC.c: 292: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9268  011720  0100               	movlb	0	; () banked
  9269  011722  EE20 F00D          	lfsr	2,13
  9270  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9271  011728  26D9               	addwf	fsr2l,f,c
  9272  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9273  01172C  22DA               	addwfc	fsr2h,f,c
  9274  01172E  0100               	movlb	0	; () banked
  9275  011730  A8DF               	btfss	indf2,4,c
  9276  011732  D038               	goto	l11181
  9277                           
  9278                           ; BSR set to: 0
  9279  011734  0100               	movlb	0	; () banked
  9280  011736  EE20 F009          	lfsr	2,9
  9281  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9282  01173C  26D9               	addwf	fsr2l,f,c
  9283  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9284  011740  22DA               	addwfc	fsr2h,f,c
  9285  011742  50DF               	movf	indf2,w,c
  9286  011744  0100               	movlb	0	; () banked
  9287  011746  6F66               	movwf	month_length@month& (0+255),b
  9288  011748  0100               	movlb	0	; () banked
  9289  01174A  EE20 F00A          	lfsr	2,10
  9290  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9291  011750  26D9               	addwf	fsr2l,f,c
  9292  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9293  011754  22DA               	addwfc	fsr2h,f,c
  9294  011756  50DF               	movf	indf2,w,c
  9295  011758  EC5C  F0A3         	call	_month_length
  9296  01175C  0100               	movlb	0	; () banked
  9297  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9298  011760  0100               	movlb	0	; () banked
  9299  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9300  011764  0100               	movlb	0	; () banked
  9301  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9302  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9303  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9304  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9305  01176E  0E80               	movlw	128
  9306  011770  0100               	movlb	0	; () banked
  9307  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9308  011774  0E51               	movlw	81
  9309  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9310  011778  0E01               	movlw	1
  9311  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9312  01177C  0E00               	movlw	0
  9313  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9314  011780  EC75  F0AF         	call	___lmul	;wreg free
  9315  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9316  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9317  01178C  0100               	movlb	0	; () banked
  9318  01178E  516D               	movf	?___lmul& (0+255),w,b
  9319  011790  26DE               	addwf	postinc2,f,c
  9320  011792  0100               	movlb	0	; () banked
  9321  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9322  011796  22DE               	addwfc	postinc2,f,c
  9323  011798  0100               	movlb	0	; () banked
  9324  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9325  01179C  22DE               	addwfc	postinc2,f,c
  9326  01179E  0100               	movlb	0	; () banked
  9327  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9328  0117A2  22DE               	addwfc	postinc2,f,c
  9329  0117A4                     l11181:
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;My_RTCC.c: 293: if (tm->edit.flag.YY) {
  9333  0117A4  0100               	movlb	0	; () banked
  9334  0117A6  EE20 F00D          	lfsr	2,13
  9335  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9336  0117AC  26D9               	addwf	fsr2l,f,c
  9337  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9338  0117B0  22DA               	addwfc	fsr2h,f,c
  9339  0117B2  0100               	movlb	0	; () banked
  9340  0117B4  AADF               	btfss	indf2,5,c
  9341  0117B6  D088               	goto	l11203
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;My_RTCC.c: 294: for (uint8_t i = tm->MM; i <= 12; i++) {
  9345  0117B8  0100               	movlb	0	; () banked
  9346  0117BA  EE20 F009          	lfsr	2,9
  9347  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9348  0117C0  26D9               	addwf	fsr2l,f,c
  9349  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9350  0117C4  22DA               	addwfc	fsr2h,f,c
  9351  0117C6  50DF               	movf	indf2,w,c
  9352  0117C8  0100               	movlb	0	; () banked
  9353  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9354  0117CC                     l11185:
  9355                           
  9356                           ; BSR set to: 0
  9357  0117CC  0E0C               	movlw	12
  9358  0117CE  0100               	movlb	0	; () banked
  9359  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9360  0117D2  D001               	goto	l11189
  9361  0117D4  D033               	goto	l11195
  9362  0117D6                     l11189:
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;My_RTCC.c: 295: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9366  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9367  0117DA  0100               	movlb	0	; () banked
  9368  0117DC  EE20 F00A          	lfsr	2,10
  9369  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9370  0117E2  26D9               	addwf	fsr2l,f,c
  9371  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9372  0117E6  22DA               	addwfc	fsr2h,f,c
  9373  0117E8  50DF               	movf	indf2,w,c
  9374  0117EA  EC5C  F0A3         	call	_month_length
  9375  0117EE  0100               	movlb	0	; () banked
  9376  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9377  0117F2  0100               	movlb	0	; () banked
  9378  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9379  0117F6  0100               	movlb	0	; () banked
  9380  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9381  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9382  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9383  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9384  011800  0E80               	movlw	128
  9385  011802  0100               	movlb	0	; () banked
  9386  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9387  011806  0E51               	movlw	81
  9388  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9389  01180A  0E01               	movlw	1
  9390  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9391  01180E  0E00               	movlw	0
  9392  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9393  011812  EC75  F0AF         	call	___lmul	;wreg free
  9394  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9395  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9396  01181E  0100               	movlb	0	; () banked
  9397  011820  516D               	movf	?___lmul& (0+255),w,b
  9398  011822  26DE               	addwf	postinc2,f,c
  9399  011824  0100               	movlb	0	; () banked
  9400  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9401  011828  22DE               	addwfc	postinc2,f,c
  9402  01182A  0100               	movlb	0	; () banked
  9403  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9404  01182E  22DE               	addwfc	postinc2,f,c
  9405  011830  0100               	movlb	0	; () banked
  9406  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9407  011834  22DE               	addwfc	postinc2,f,c
  9408                           
  9409                           ; BSR set to: 0
  9410  011836  0100               	movlb	0	; () banked
  9411  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9412  01183A  D7C8               	goto	l11185
  9413  01183C                     l11195:
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;My_RTCC.c: 296: }
  9417                           ;My_RTCC.c: 297: for (uint8_t i = 1; i < tm->MM; i++) {
  9418  01183C  0E01               	movlw	1
  9419  01183E  0100               	movlb	0	; () banked
  9420  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3817& (0+255),b
  9421  011842  D036               	goto	l11201
  9422  011844                     l11197:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;My_RTCC.c: 298: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9426  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3817,month_length@month
  9427  011848  0100               	movlb	0	; () banked
  9428  01184A  EE20 F00A          	lfsr	2,10
  9429  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9430  011850  26D9               	addwf	fsr2l,f,c
  9431  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9432  011854  22DA               	addwfc	fsr2h,f,c
  9433  011856  50DF               	movf	indf2,w,c
  9434  011858  0100               	movlb	0	; () banked
  9435  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9436  01185C  0100               	movlb	0	; () banked
  9437  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9438  011860  EC5C  F0A3         	call	_month_length
  9439  011864  0100               	movlb	0	; () banked
  9440  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9441  011868  0100               	movlb	0	; () banked
  9442  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9443  01186C  0100               	movlb	0	; () banked
  9444  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9445  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9446  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9447  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9448  011876  0E80               	movlw	128
  9449  011878  0100               	movlb	0	; () banked
  9450  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9451  01187C  0E51               	movlw	81
  9452  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9453  011880  0E01               	movlw	1
  9454  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9455  011884  0E00               	movlw	0
  9456  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9457  011888  EC75  F0AF         	call	___lmul	;wreg free
  9458  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9459  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9460  011894  0100               	movlb	0	; () banked
  9461  011896  516D               	movf	?___lmul& (0+255),w,b
  9462  011898  26DE               	addwf	postinc2,f,c
  9463  01189A  0100               	movlb	0	; () banked
  9464  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9465  01189E  22DE               	addwfc	postinc2,f,c
  9466  0118A0  0100               	movlb	0	; () banked
  9467  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9468  0118A4  22DE               	addwfc	postinc2,f,c
  9469  0118A6  0100               	movlb	0	; () banked
  9470  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9471  0118AA  22DE               	addwfc	postinc2,f,c
  9472                           
  9473                           ; BSR set to: 0
  9474  0118AC  0100               	movlb	0	; () banked
  9475  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3817& (0+255),f,b
  9476  0118B0                     l11201:
  9477                           
  9478                           ; BSR set to: 0
  9479  0118B0  0100               	movlb	0	; () banked
  9480  0118B2  EE20 F009          	lfsr	2,9
  9481  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9482  0118B8  26D9               	addwf	fsr2l,f,c
  9483  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9484  0118BC  22DA               	addwfc	fsr2h,f,c
  9485  0118BE  50DE               	movf	postinc2,w,c
  9486  0118C0  0100               	movlb	0	; () banked
  9487  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3817& (0+255),w,b
  9488  0118C4  A0D8               	btfss	status,0,c
  9489  0118C6  D7BE               	goto	l11197
  9490  0118C8                     l11203:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;My_RTCC.c: 299: }
  9494                           ;My_RTCC.c: 300: }
  9495                           ;My_RTCC.c: 302: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9496  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9497  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9498  0118D0  0E80               	movlw	128
  9499  0118D2  5CDE               	subwf	postinc2,w,c
  9500  0118D4  0E13               	movlw	19
  9501  0118D6  58DE               	subwfb	postinc2,w,c
  9502  0118D8  0E19               	movlw	25
  9503  0118DA  58DE               	subwfb	postinc2,w,c
  9504  0118DC  0EBC               	movlw	188
  9505  0118DE  58DE               	subwfb	postinc2,w,c
  9506  0118E0  A0D8               	btfss	status,0,c
  9507  0118E2  D00C               	goto	l11207
  9508                           
  9509                           ; BSR set to: 0
  9510  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9511  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9512  0118EC  0E80               	movlw	128
  9513  0118EE  5EDE               	subwf	postinc2,f,c
  9514  0118F0  0E13               	movlw	19
  9515  0118F2  5ADE               	subwfb	postinc2,f,c
  9516  0118F4  0E19               	movlw	25
  9517  0118F6  5ADE               	subwfb	postinc2,f,c
  9518  0118F8  0EBC               	movlw	188
  9519  0118FA  5ADE               	subwfb	postinc2,f,c
  9520  0118FC                     l11207:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;My_RTCC.c: 303: RTCC_from_epoch(&now);
  9524  0118FC  0E7A               	movlw	low _now
  9525  0118FE  0100               	movlb	0	; () banked
  9526  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9527  011902  0E01               	movlw	high _now
  9528  011904  0100               	movlb	0	; () banked
  9529  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9530  011908  EC13  F0B6         	call	_RTCC_from_epoch	;wreg free
  9531                           
  9532                           ;My_RTCC.c: 304: time_change_flag = 1;
  9533  01190C  0E01               	movlw	1
  9534  01190E  6E22               	movwf	_time_change_flag,c
  9535  011910  0012               	return		;funcret
  9536  011912                     __end_of_RTCC_adjust_time_inc:
  9537                           	opt stack 0
  9538                           tblptru	equ	0xFF8
  9539                           tblptrh	equ	0xFF7
  9540                           tblptrl	equ	0xFF6
  9541                           tablat	equ	0xFF5
  9542                           prodh	equ	0xFF4
  9543                           prodl	equ	0xFF3
  9544                           intcon	equ	0xFF2
  9545                           postinc0	equ	0xFEE
  9546                           wreg	equ	0xFE8
  9547                           postinc1	equ	0xFE6
  9548                           postdec1	equ	0xFE5
  9549                           fsr1h	equ	0xFE2
  9550                           fsr1l	equ	0xFE1
  9551                           indf2	equ	0xFDF
  9552                           postinc2	equ	0xFDE
  9553                           postdec2	equ	0xFDD
  9554                           fsr2h	equ	0xFDA
  9555                           fsr2l	equ	0xFD9
  9556                           status	equ	0xFD8
  9557                           
  9558 ;; *************** function _RTCC_adjust_time_dec *****************
  9559 ;; Defined at:
  9560 ;;		line 307 in file "../My_library/My_RTCC.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  tm              2   49[BANK0 ] PTR struct .
  9563 ;;		 -> now(14), 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  i               1   55[BANK0 ] unsigned char 
  9566 ;;  i               1   56[BANK0 ] unsigned char 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;		None               void
  9569 ;; Registers used:
  9570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9579 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9580 ;;Total ram usage:        8 bytes
  9581 ;; Hardware stack levels used:    1
  9582 ;; Hardware stack levels required when called:   15
  9583 ;; This function calls:
  9584 ;;		_RTCC_from_RTCC
  9585 ;;		_RTCC_from_epoch
  9586 ;;		___lmul
  9587 ;;		_month_length
  9588 ;; This function is called by:
  9589 ;;		_settings_adjust_time
  9590 ;;		_RTCC_adjust_time_button
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text24
  9595  011912                     __ptext24:
  9596                           	opt stack 0
  9597  011912                     _RTCC_adjust_time_dec:
  9598                           	opt stack 12
  9599                           
  9600                           ;My_RTCC.c: 308: RTCC_from_RTCC(tm);
  9601                           
  9602                           ;incstack = 0
  9603  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9604  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9605  01191A  EC2D  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9606                           
  9607                           ;My_RTCC.c: 309: if (tm->edit.flag.ss) tm->epoch -= 1;
  9608  01191E  0100               	movlb	0	; () banked
  9609  011920  EE20 F00D          	lfsr	2,13
  9610  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9611  011926  26D9               	addwf	fsr2l,f,c
  9612  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9613  01192A  22DA               	addwfc	fsr2h,f,c
  9614  01192C  0100               	movlb	0	; () banked
  9615  01192E  A0DF               	btfss	indf2,0,c
  9616  011930  D009               	goto	l952
  9617                           
  9618                           ; BSR set to: 0
  9619  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9620  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9621  01193A  06DE               	decf	postinc2,f,c
  9622  01193C  0E00               	movlw	0
  9623  01193E  5ADE               	subwfb	postinc2,f,c
  9624  011940  5ADE               	subwfb	postinc2,f,c
  9625  011942  5ADE               	subwfb	postinc2,f,c
  9626  011944                     l952:
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;My_RTCC.c: 310: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9630  011944  0100               	movlb	0	; () banked
  9631  011946  EE20 F00D          	lfsr	2,13
  9632  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9633  01194C  26D9               	addwf	fsr2l,f,c
  9634  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9635  011950  22DA               	addwfc	fsr2h,f,c
  9636  011952  0100               	movlb	0	; () banked
  9637  011954  A2DF               	btfss	indf2,1,c
  9638  011956  D00A               	goto	l11219
  9639                           
  9640                           ; BSR set to: 0
  9641  011958  0E3C               	movlw	60
  9642  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9643  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9644  011962  5EDE               	subwf	postinc2,f,c
  9645  011964  0E00               	movlw	0
  9646  011966  5ADE               	subwfb	postinc2,f,c
  9647  011968  5ADE               	subwfb	postinc2,f,c
  9648  01196A  5ADE               	subwfb	postinc2,f,c
  9649  01196C                     l11219:
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;My_RTCC.c: 311: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9653  01196C  0100               	movlb	0	; () banked
  9654  01196E  EE20 F00D          	lfsr	2,13
  9655  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9656  011974  26D9               	addwf	fsr2l,f,c
  9657  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9658  011978  22DA               	addwfc	fsr2h,f,c
  9659  01197A  0100               	movlb	0	; () banked
  9660  01197C  A4DF               	btfss	indf2,2,c
  9661  01197E  D00C               	goto	l11223
  9662                           
  9663                           ; BSR set to: 0
  9664  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9665  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9666  011988  0E10               	movlw	16
  9667  01198A  5EDE               	subwf	postinc2,f,c
  9668  01198C  0E0E               	movlw	14
  9669  01198E  5ADE               	subwfb	postinc2,f,c
  9670  011990  0E00               	movlw	0
  9671  011992  5ADE               	subwfb	postinc2,f,c
  9672  011994  0E00               	movlw	0
  9673  011996  5ADE               	subwfb	postinc2,f,c
  9674  011998                     l11223:
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;My_RTCC.c: 312: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9678  011998  0100               	movlb	0	; () banked
  9679  01199A  EE20 F00D          	lfsr	2,13
  9680  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9681  0119A0  26D9               	addwf	fsr2l,f,c
  9682  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9683  0119A4  22DA               	addwfc	fsr2h,f,c
  9684  0119A6  0100               	movlb	0	; () banked
  9685  0119A8  A6DF               	btfss	indf2,3,c
  9686  0119AA  D00C               	goto	l11227
  9687                           
  9688                           ; BSR set to: 0
  9689  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9690  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9691  0119B4  0E80               	movlw	128
  9692  0119B6  5EDE               	subwf	postinc2,f,c
  9693  0119B8  0E51               	movlw	81
  9694  0119BA  5ADE               	subwfb	postinc2,f,c
  9695  0119BC  0E01               	movlw	1
  9696  0119BE  5ADE               	subwfb	postinc2,f,c
  9697  0119C0  0E00               	movlw	0
  9698  0119C2  5ADE               	subwfb	postinc2,f,c
  9699  0119C4                     l11227:
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;My_RTCC.c: 313: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9703  0119C4  0100               	movlb	0	; () banked
  9704  0119C6  EE20 F00D          	lfsr	2,13
  9705  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9706  0119CC  26D9               	addwf	fsr2l,f,c
  9707  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9708  0119D0  22DA               	addwfc	fsr2h,f,c
  9709  0119D2  0100               	movlb	0	; () banked
  9710  0119D4  A8DF               	btfss	indf2,4,c
  9711  0119D6  D038               	goto	l11231
  9712                           
  9713                           ; BSR set to: 0
  9714  0119D8  0100               	movlb	0	; () banked
  9715  0119DA  EE20 F009          	lfsr	2,9
  9716  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9717  0119E0  26D9               	addwf	fsr2l,f,c
  9718  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9719  0119E4  22DA               	addwfc	fsr2h,f,c
  9720  0119E6  50DF               	movf	indf2,w,c
  9721  0119E8  0100               	movlb	0	; () banked
  9722  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9723  0119EC  0100               	movlb	0	; () banked
  9724  0119EE  EE20 F00A          	lfsr	2,10
  9725  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9726  0119F4  26D9               	addwf	fsr2l,f,c
  9727  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9728  0119F8  22DA               	addwfc	fsr2h,f,c
  9729  0119FA  50DF               	movf	indf2,w,c
  9730  0119FC  EC5C  F0A3         	call	_month_length
  9731  011A00  0100               	movlb	0	; () banked
  9732  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9733  011A04  0100               	movlb	0	; () banked
  9734  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9735  011A08  0100               	movlb	0	; () banked
  9736  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9737  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9738  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9739  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9740  011A12  0E80               	movlw	128
  9741  011A14  0100               	movlb	0	; () banked
  9742  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9743  011A18  0E51               	movlw	81
  9744  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9745  011A1C  0E01               	movlw	1
  9746  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9747  011A20  0E00               	movlw	0
  9748  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9749  011A24  EC75  F0AF         	call	___lmul	;wreg free
  9750  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9751  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9752  011A30  0100               	movlb	0	; () banked
  9753  011A32  516D               	movf	?___lmul& (0+255),w,b
  9754  011A34  5EDE               	subwf	postinc2,f,c
  9755  011A36  0100               	movlb	0	; () banked
  9756  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9757  011A3A  5ADE               	subwfb	postinc2,f,c
  9758  011A3C  0100               	movlb	0	; () banked
  9759  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9760  011A40  5ADE               	subwfb	postinc2,f,c
  9761  011A42  0100               	movlb	0	; () banked
  9762  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9763  011A46  5ADE               	subwfb	postinc2,f,c
  9764  011A48                     l11231:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;My_RTCC.c: 314: if (tm->edit.flag.YY) {
  9768  011A48  0100               	movlb	0	; () banked
  9769  011A4A  EE20 F00D          	lfsr	2,13
  9770  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9771  011A50  26D9               	addwf	fsr2l,f,c
  9772  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9773  011A54  22DA               	addwfc	fsr2h,f,c
  9774  011A56  0100               	movlb	0	; () banked
  9775  011A58  AADF               	btfss	indf2,5,c
  9776  011A5A  D088               	goto	l11253
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;My_RTCC.c: 315: for (uint8_t i = tm->MM; i >= 1; i--) {
  9780  011A5C  0100               	movlb	0	; () banked
  9781  011A5E  EE20 F009          	lfsr	2,9
  9782  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9783  011A64  26D9               	addwf	fsr2l,f,c
  9784  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9785  011A68  22DA               	addwfc	fsr2h,f,c
  9786  011A6A  50DF               	movf	indf2,w,c
  9787  011A6C  0100               	movlb	0	; () banked
  9788  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9789  011A70                     l11235:
  9790                           
  9791                           ; BSR set to: 0
  9792  011A70  0100               	movlb	0	; () banked
  9793  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9794  011A74  0100               	movlb	0	; () banked
  9795  011A76  B4D8               	btfsc	status,2,c
  9796  011A78  D033               	goto	l11245
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;My_RTCC.c: 316: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9800                           
  9801                           ; BSR set to: 0
  9802                           
  9803                           ; BSR set to: 0
  9804  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9805  011A7E  0100               	movlb	0	; () banked
  9806  011A80  EE20 F00A          	lfsr	2,10
  9807  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9808  011A86  26D9               	addwf	fsr2l,f,c
  9809  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9810  011A8A  22DA               	addwfc	fsr2h,f,c
  9811  011A8C  50DF               	movf	indf2,w,c
  9812  011A8E  EC5C  F0A3         	call	_month_length
  9813  011A92  0100               	movlb	0	; () banked
  9814  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9815  011A96  0100               	movlb	0	; () banked
  9816  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9817  011A9A  0100               	movlb	0	; () banked
  9818  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9819  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9820  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9821  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9822  011AA4  0E80               	movlw	128
  9823  011AA6  0100               	movlb	0	; () banked
  9824  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9825  011AAA  0E51               	movlw	81
  9826  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9827  011AAE  0E01               	movlw	1
  9828  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9829  011AB2  0E00               	movlw	0
  9830  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9831  011AB6  EC75  F0AF         	call	___lmul	;wreg free
  9832  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9833  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9834  011AC2  0100               	movlb	0	; () banked
  9835  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9836  011AC6  5EDE               	subwf	postinc2,f,c
  9837  011AC8  0100               	movlb	0	; () banked
  9838  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9839  011ACC  5ADE               	subwfb	postinc2,f,c
  9840  011ACE  0100               	movlb	0	; () banked
  9841  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9842  011AD2  5ADE               	subwfb	postinc2,f,c
  9843  011AD4  0100               	movlb	0	; () banked
  9844  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9845  011AD8  5ADE               	subwfb	postinc2,f,c
  9846                           
  9847                           ; BSR set to: 0
  9848  011ADA  0100               	movlb	0	; () banked
  9849  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9850  011ADE  D7C8               	goto	l11235
  9851  011AE0                     l11245:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;My_RTCC.c: 317: }
  9855                           ;My_RTCC.c: 318: for (uint8_t i = 12; i > tm->MM; i--) {
  9856  011AE0  0E0C               	movlw	12
  9857  011AE2  0100               	movlb	0	; () banked
  9858  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_3847& (0+255),b
  9859  011AE6  D036               	goto	l11251
  9860  011AE8                     l11247:
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;My_RTCC.c: 319: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9864  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_3847,month_length@month
  9865  011AEC  0100               	movlb	0	; () banked
  9866  011AEE  EE20 F00A          	lfsr	2,10
  9867  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9868  011AF4  26D9               	addwf	fsr2l,f,c
  9869  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9870  011AF8  22DA               	addwfc	fsr2h,f,c
  9871  011AFA  50DF               	movf	indf2,w,c
  9872  011AFC  0100               	movlb	0	; () banked
  9873  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9874  011B00  0100               	movlb	0	; () banked
  9875  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9876  011B04  EC5C  F0A3         	call	_month_length
  9877  011B08  0100               	movlb	0	; () banked
  9878  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9879  011B0C  0100               	movlb	0	; () banked
  9880  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9881  011B10  0100               	movlb	0	; () banked
  9882  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9883  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9884  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9885  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9886  011B1A  0E80               	movlw	128
  9887  011B1C  0100               	movlb	0	; () banked
  9888  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9889  011B20  0E51               	movlw	81
  9890  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9891  011B24  0E01               	movlw	1
  9892  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9893  011B28  0E00               	movlw	0
  9894  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9895  011B2C  EC75  F0AF         	call	___lmul	;wreg free
  9896  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9897  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9898  011B38  0100               	movlb	0	; () banked
  9899  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9900  011B3C  5EDE               	subwf	postinc2,f,c
  9901  011B3E  0100               	movlb	0	; () banked
  9902  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9903  011B42  5ADE               	subwfb	postinc2,f,c
  9904  011B44  0100               	movlb	0	; () banked
  9905  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9906  011B48  5ADE               	subwfb	postinc2,f,c
  9907  011B4A  0100               	movlb	0	; () banked
  9908  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9909  011B4E  5ADE               	subwfb	postinc2,f,c
  9910                           
  9911                           ; BSR set to: 0
  9912  011B50  0100               	movlb	0	; () banked
  9913  011B52  0797               	decf	RTCC_adjust_time_dec@i_3847& (0+255),f,b
  9914  011B54                     l11251:
  9915                           
  9916                           ; BSR set to: 0
  9917  011B54  0100               	movlb	0	; () banked
  9918  011B56  EE20 F009          	lfsr	2,9
  9919  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9920  011B5C  26D9               	addwf	fsr2l,f,c
  9921  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9922  011B60  22DA               	addwfc	fsr2h,f,c
  9923  011B62  0100               	movlb	0	; () banked
  9924  011B64  5197               	movf	RTCC_adjust_time_dec@i_3847& (0+255),w,b
  9925  011B66  5CDE               	subwf	postinc2,w,c
  9926  011B68  A0D8               	btfss	status,0,c
  9927  011B6A  D7BE               	goto	l11247
  9928  011B6C                     l11253:
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;My_RTCC.c: 320: }
  9932                           ;My_RTCC.c: 321: }
  9933                           ;My_RTCC.c: 323: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9934  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9935  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9936  011B74  0E80               	movlw	128
  9937  011B76  5CDE               	subwf	postinc2,w,c
  9938  011B78  0E13               	movlw	19
  9939  011B7A  58DE               	subwfb	postinc2,w,c
  9940  011B7C  0E19               	movlw	25
  9941  011B7E  58DE               	subwfb	postinc2,w,c
  9942  011B80  0EBC               	movlw	188
  9943  011B82  58DE               	subwfb	postinc2,w,c
  9944  011B84  A0D8               	btfss	status,0,c
  9945  011B86  D00C               	goto	l11257
  9946                           
  9947                           ; BSR set to: 0
  9948  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9949  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9950  011B90  0E80               	movlw	128
  9951  011B92  26DE               	addwf	postinc2,f,c
  9952  011B94  0E13               	movlw	19
  9953  011B96  22DE               	addwfc	postinc2,f,c
  9954  011B98  0E19               	movlw	25
  9955  011B9A  22DE               	addwfc	postinc2,f,c
  9956  011B9C  0EBC               	movlw	188
  9957  011B9E  22DE               	addwfc	postinc2,f,c
  9958  011BA0                     l11257:
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;My_RTCC.c: 324: RTCC_from_epoch(&now);
  9962  011BA0  0E7A               	movlw	low _now
  9963  011BA2  0100               	movlb	0	; () banked
  9964  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9965  011BA6  0E01               	movlw	high _now
  9966  011BA8  0100               	movlb	0	; () banked
  9967  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9968  011BAC  EC13  F0B6         	call	_RTCC_from_epoch	;wreg free
  9969                           
  9970                           ;My_RTCC.c: 325: time_change_flag = 1;
  9971  011BB0  0E01               	movlw	1
  9972  011BB2  6E22               	movwf	_time_change_flag,c
  9973  011BB4  0012               	return		;funcret
  9974  011BB6                     __end_of_RTCC_adjust_time_dec:
  9975                           	opt stack 0
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodh	equ	0xFF4
  9981                           prodl	equ	0xFF3
  9982                           intcon	equ	0xFF2
  9983                           postinc0	equ	0xFEE
  9984                           wreg	equ	0xFE8
  9985                           postinc1	equ	0xFE6
  9986                           postdec1	equ	0xFE5
  9987                           fsr1h	equ	0xFE2
  9988                           fsr1l	equ	0xFE1
  9989                           indf2	equ	0xFDF
  9990                           postinc2	equ	0xFDE
  9991                           postdec2	equ	0xFDD
  9992                           fsr2h	equ	0xFDA
  9993                           fsr2l	equ	0xFD9
  9994                           status	equ	0xFD8
  9995                           
  9996 ;; *************** function _RTCC_adjust_time_cursor *****************
  9997 ;; Defined at:
  9998 ;;		line 276 in file "../My_library/My_RTCC.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;  tm              2    0[BANK0 ] PTR struct .
 10001 ;;		 -> now(14), 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;		None
 10004 ;; Return value:  Size  Location     Type
 10005 ;;		None               void
 10006 ;; Registers used:
 10007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10016 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;Total ram usage:        2 bytes
 10018 ;; Hardware stack levels used:    1
 10019 ;; Hardware stack levels required when called:   11
 10020 ;; This function calls:
 10021 ;;		Nothing
 10022 ;; This function is called by:
 10023 ;;		_settings_adjust_time
 10024 ;;		_RTCC_adjust_time_button
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text25
 10029  013C68                     __ptext25:
 10030                           	opt stack 0
 10031  013C68                     _RTCC_adjust_time_cursor:
 10032                           	opt stack 16
 10033                           
 10034                           ;My_RTCC.c: 277: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 10035                           
 10036                           ;incstack = 0
 10037  013C68  0100               	movlb	0	; () banked
 10038  013C6A  EE20 F00D          	lfsr	2,13
 10039  013C6E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10040  013C70  26D9               	addwf	fsr2l,f,c
 10041  013C72  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10042  013C74  22DA               	addwfc	fsr2h,f,c
 10043  013C76  0100               	movlb	0	; () banked
 10044  013C78  A0DF               	btfss	indf2,0,c
 10045  013C7A  D00A               	goto	l11139
 10046                           
 10047                           ; BSR set to: 0
 10048  013C7C  0100               	movlb	0	; () banked
 10049  013C7E  EE20 F00D          	lfsr	2,13
 10050  013C82  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10051  013C84  26D9               	addwf	fsr2l,f,c
 10052  013C86  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10053  013C88  22DA               	addwfc	fsr2h,f,c
 10054  013C8A  0E02               	movlw	2
 10055  013C8C  6EDF               	movwf	indf2,c
 10056  013C8E  0012               	return	
 10057  013C90                     l11139:
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;My_RTCC.c: 278: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 10061  013C90  0100               	movlb	0	; () banked
 10062  013C92  EE20 F00D          	lfsr	2,13
 10063  013C96  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10064  013C98  26D9               	addwf	fsr2l,f,c
 10065  013C9A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10066  013C9C  22DA               	addwfc	fsr2h,f,c
 10067  013C9E  0100               	movlb	0	; () banked
 10068  013CA0  A2DF               	btfss	indf2,1,c
 10069  013CA2  D00A               	goto	l11143
 10070                           
 10071                           ; BSR set to: 0
 10072  013CA4  0100               	movlb	0	; () banked
 10073  013CA6  EE20 F00D          	lfsr	2,13
 10074  013CAA  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10075  013CAC  26D9               	addwf	fsr2l,f,c
 10076  013CAE  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10077  013CB0  22DA               	addwfc	fsr2h,f,c
 10078  013CB2  0E04               	movlw	4
 10079  013CB4  6EDF               	movwf	indf2,c
 10080  013CB6  0012               	return	
 10081  013CB8                     l11143:
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;My_RTCC.c: 279: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 10085  013CB8  0100               	movlb	0	; () banked
 10086  013CBA  EE20 F00D          	lfsr	2,13
 10087  013CBE  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10088  013CC0  26D9               	addwf	fsr2l,f,c
 10089  013CC2  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10090  013CC4  22DA               	addwfc	fsr2h,f,c
 10091  013CC6  0100               	movlb	0	; () banked
 10092  013CC8  A4DF               	btfss	indf2,2,c
 10093  013CCA  D00A               	goto	l11147
 10094                           
 10095                           ; BSR set to: 0
 10096  013CCC  0100               	movlb	0	; () banked
 10097  013CCE  EE20 F00D          	lfsr	2,13
 10098  013CD2  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10099  013CD4  26D9               	addwf	fsr2l,f,c
 10100  013CD6  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10101  013CD8  22DA               	addwfc	fsr2h,f,c
 10102  013CDA  0E08               	movlw	8
 10103  013CDC  6EDF               	movwf	indf2,c
 10104  013CDE  0012               	return	
 10105  013CE0                     l11147:
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;My_RTCC.c: 280: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10109  013CE0  0100               	movlb	0	; () banked
 10110  013CE2  EE20 F00D          	lfsr	2,13
 10111  013CE6  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10112  013CE8  26D9               	addwf	fsr2l,f,c
 10113  013CEA  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10114  013CEC  22DA               	addwfc	fsr2h,f,c
 10115  013CEE  0100               	movlb	0	; () banked
 10116  013CF0  A6DF               	btfss	indf2,3,c
 10117  013CF2  D00A               	goto	l11151
 10118                           
 10119                           ; BSR set to: 0
 10120  013CF4  0100               	movlb	0	; () banked
 10121  013CF6  EE20 F00D          	lfsr	2,13
 10122  013CFA  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10123  013CFC  26D9               	addwf	fsr2l,f,c
 10124  013CFE  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10125  013D00  22DA               	addwfc	fsr2h,f,c
 10126  013D02  0E10               	movlw	16
 10127  013D04  6EDF               	movwf	indf2,c
 10128  013D06  0012               	return	
 10129  013D08                     l11151:
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;My_RTCC.c: 281: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10133  013D08  0100               	movlb	0	; () banked
 10134  013D0A  EE20 F00D          	lfsr	2,13
 10135  013D0E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10136  013D10  26D9               	addwf	fsr2l,f,c
 10137  013D12  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10138  013D14  22DA               	addwfc	fsr2h,f,c
 10139  013D16  0100               	movlb	0	; () banked
 10140  013D18  A8DF               	btfss	indf2,4,c
 10141  013D1A  D00A               	goto	l11155
 10142                           
 10143                           ; BSR set to: 0
 10144  013D1C  0100               	movlb	0	; () banked
 10145  013D1E  EE20 F00D          	lfsr	2,13
 10146  013D22  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10147  013D24  26D9               	addwf	fsr2l,f,c
 10148  013D26  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10149  013D28  22DA               	addwfc	fsr2h,f,c
 10150  013D2A  0E20               	movlw	32
 10151  013D2C  6EDF               	movwf	indf2,c
 10152  013D2E  0012               	return	
 10153  013D30                     l11155:
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;My_RTCC.c: 282: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10157  013D30  0100               	movlb	0	; () banked
 10158  013D32  EE20 F00D          	lfsr	2,13
 10159  013D36  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10160  013D38  26D9               	addwf	fsr2l,f,c
 10161  013D3A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10162  013D3C  22DA               	addwfc	fsr2h,f,c
 10163  013D3E  0100               	movlb	0	; () banked
 10164  013D40  AADF               	btfss	indf2,5,c
 10165  013D42  D00A               	goto	l11159
 10166                           
 10167                           ; BSR set to: 0
 10168  013D44  0100               	movlb	0	; () banked
 10169  013D46  EE20 F00D          	lfsr	2,13
 10170  013D4A  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10171  013D4C  26D9               	addwf	fsr2l,f,c
 10172  013D4E  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10173  013D50  22DA               	addwfc	fsr2h,f,c
 10174  013D52  0E01               	movlw	1
 10175  013D54  6EDF               	movwf	indf2,c
 10176  013D56  0012               	return	
 10177  013D58                     l11159:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;My_RTCC.c: 283: else tm->edit.flags = 0x00;
 10181  013D58  0100               	movlb	0	; () banked
 10182  013D5A  EE20 F00D          	lfsr	2,13
 10183  013D5E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10184  013D60  26D9               	addwf	fsr2l,f,c
 10185  013D62  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10186  013D64  22DA               	addwfc	fsr2h,f,c
 10187  013D66  0E00               	movlw	0
 10188  013D68  6EDF               	movwf	indf2,c
 10189                           
 10190                           ; BSR set to: 0
 10191                           
 10192                           ; BSR set to: 0
 10193                           
 10194                           ; BSR set to: 0
 10195                           
 10196                           ; BSR set to: 0
 10197                           
 10198                           ; BSR set to: 0
 10199  013D6A  0012               	return	
 10200  013D6C                     __end_of_RTCC_adjust_time_cursor:
 10201                           	opt stack 0
 10202                           tblptru	equ	0xFF8
 10203                           tblptrh	equ	0xFF7
 10204                           tblptrl	equ	0xFF6
 10205                           tablat	equ	0xFF5
 10206                           prodh	equ	0xFF4
 10207                           prodl	equ	0xFF3
 10208                           intcon	equ	0xFF2
 10209                           postinc0	equ	0xFEE
 10210                           wreg	equ	0xFE8
 10211                           postinc1	equ	0xFE6
 10212                           postdec1	equ	0xFE5
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           fsr2h	equ	0xFDA
 10219                           fsr2l	equ	0xFD9
 10220                           status	equ	0xFD8
 10221                           
 10222 ;; *************** function _port_button_task *****************
 10223 ;; Defined at:
 10224 ;;		line 82 in file "ChargeStation_task.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;  i               1    6[BANK0 ] unsigned char 
 10229 ;; Return value:  Size  Location     Type
 10230 ;;		None               void
 10231 ;; Registers used:
 10232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;Total ram usage:        1 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   12
 10245 ;; This function calls:
 10246 ;;		_LED_output
 10247 ;;		_OUT
 10248 ;;		_display
 10249 ;; This function is called by:
 10250 ;;		_normal_task
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text26
 10255  013124                     __ptext26:
 10256                           	opt stack 0
 10257  013124                     _port_button_task:
 10258                           	opt stack 17
 10259                           
 10260                           ;ChargeStation_task.c: 83: uint8_t i;
 10261                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;incstack = 0
 10265  013124  0E00               	movlw	0
 10266  013126  0100               	movlb	0	; () banked
 10267  013128  6F66               	movwf	port_button_task@i& (0+255),b
 10268  01312A                     l12357:
 10269                           
 10270                           ; BSR set to: 0
 10271  01312A  0E02               	movlw	2
 10272  01312C  0100               	movlb	0	; () banked
 10273  01312E  6566               	cpfsgt	port_button_task@i& (0+255),b
 10274  013130  D001               	goto	l12361
 10275  013132  0012               	return	
 10276  013134                     l12361:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10280  013134  0100               	movlb	0	; () banked
 10281  013136  5166               	movf	port_button_task@i& (0+255),w,b
 10282  013138  0D17               	mullw	23
 10283  01313A  0E03               	movlw	3
 10284  01313C  26F3               	addwf	prodl,f,c
 10285  01313E  0E00               	movlw	0
 10286  013140  22F4               	addwfc	prodh,f,c
 10287  013142  0E35               	movlw	low _port
 10288  013144  24F3               	addwf	prodl,w,c
 10289  013146  6ED9               	movwf	fsr2l,c
 10290  013148  0E01               	movlw	high _port
 10291  01314A  20F4               	addwfc	prodh,w,c
 10292  01314C  6EDA               	movwf	fsr2h,c
 10293  01314E  0101               	movlb	1	; () banked
 10294  013150  A0DF               	btfss	indf2,0,c
 10295  013152  D008               	goto	l12365
 10296                           
 10297                           ; BSR set to: 1
 10298                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10299  013154  0E01               	movlw	1
 10300  013156  0100               	movlb	0	; () banked
 10301  013158  6F60               	movwf	LED_output@value& (0+255),b
 10302  01315A  0100               	movlb	0	; () banked
 10303  01315C  5166               	movf	port_button_task@i& (0+255),w,b
 10304  01315E  ECB0  F0AF         	call	_LED_output
 10305                           
 10306                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10307  013162  D027               	goto	l12371
 10308  013164                     l12365:
 10309  013164  0100               	movlb	0	; () banked
 10310  013166  5166               	movf	port_button_task@i& (0+255),w,b
 10311  013168  0D17               	mullw	23
 10312  01316A  0E16               	movlw	22
 10313  01316C  26F3               	addwf	prodl,f,c
 10314  01316E  0E00               	movlw	0
 10315  013170  22F4               	addwfc	prodh,f,c
 10316  013172  0E35               	movlw	low _port
 10317  013174  24F3               	addwf	prodl,w,c
 10318  013176  6ED9               	movwf	fsr2l,c
 10319  013178  0E01               	movlw	high _port
 10320  01317A  20F4               	addwfc	prodh,w,c
 10321  01317C  6EDA               	movwf	fsr2h,c
 10322  01317E  0101               	movlb	1	; () banked
 10323  013180  B2DF               	btfsc	indf2,1,c
 10324  013182  D017               	goto	l12371
 10325                           
 10326                           ; BSR set to: 1
 10327  013184  0100               	movlb	0	; () banked
 10328  013186  5166               	movf	port_button_task@i& (0+255),w,b
 10329  013188  0D17               	mullw	23
 10330  01318A  0E16               	movlw	22
 10331  01318C  26F3               	addwf	prodl,f,c
 10332  01318E  0E00               	movlw	0
 10333  013190  22F4               	addwfc	prodh,f,c
 10334  013192  0E35               	movlw	low _port
 10335  013194  24F3               	addwf	prodl,w,c
 10336  013196  6ED9               	movwf	fsr2l,c
 10337  013198  0E01               	movlw	high _port
 10338  01319A  20F4               	addwfc	prodh,w,c
 10339  01319C  6EDA               	movwf	fsr2h,c
 10340  01319E  0101               	movlb	1	; () banked
 10341  0131A0  A6DF               	btfss	indf2,3,c
 10342  0131A2  D007               	goto	l12371
 10343                           
 10344                           ; BSR set to: 1
 10345                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10346  0131A4  0E00               	movlw	0
 10347  0131A6  0100               	movlb	0	; () banked
 10348  0131A8  6F60               	movwf	LED_output@value& (0+255),b
 10349  0131AA  0100               	movlb	0	; () banked
 10350  0131AC  5166               	movf	port_button_task@i& (0+255),w,b
 10351  0131AE  ECB0  F0AF         	call	_LED_output
 10352  0131B2                     l12371:
 10353                           
 10354                           ;ChargeStation_task.c: 90: }
 10355                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10356  0131B2  0100               	movlb	0	; () banked
 10357  0131B4  5166               	movf	port_button_task@i& (0+255),w,b
 10358  0131B6  0D17               	mullw	23
 10359  0131B8  0E02               	movlw	2
 10360  0131BA  26F3               	addwf	prodl,f,c
 10361  0131BC  0E00               	movlw	0
 10362  0131BE  22F4               	addwfc	prodh,f,c
 10363  0131C0  0E35               	movlw	low _port
 10364  0131C2  24F3               	addwf	prodl,w,c
 10365  0131C4  6ED9               	movwf	fsr2l,c
 10366  0131C6  0E01               	movlw	high _port
 10367  0131C8  20F4               	addwfc	prodh,w,c
 10368  0131CA  6EDA               	movwf	fsr2h,c
 10369  0131CC  0101               	movlb	1	; () banked
 10370  0131CE  A0DF               	btfss	indf2,0,c
 10371  0131D0  D058               	goto	l12397
 10372                           
 10373                           ; BSR set to: 1
 10374                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10375  0131D2  0100               	movlb	0	; () banked
 10376  0131D4  5166               	movf	port_button_task@i& (0+255),w,b
 10377  0131D6  0D17               	mullw	23
 10378  0131D8  0E02               	movlw	2
 10379  0131DA  26F3               	addwf	prodl,f,c
 10380  0131DC  0E00               	movlw	0
 10381  0131DE  22F4               	addwfc	prodh,f,c
 10382  0131E0  0E35               	movlw	low _port
 10383  0131E2  24F3               	addwf	prodl,w,c
 10384  0131E4  6ED9               	movwf	fsr2l,c
 10385  0131E6  0E01               	movlw	high _port
 10386  0131E8  20F4               	addwfc	prodh,w,c
 10387  0131EA  6EDA               	movwf	fsr2h,c
 10388  0131EC  0E00               	movlw	0
 10389  0131EE  6EDE               	movwf	postinc2,c
 10390  0131F0  0E00               	movlw	0
 10391  0131F2  6EDD               	movwf	postdec2,c
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10395  0131F4  0E00               	movlw	0
 10396  0131F6  0100               	movlb	0	; () banked
 10397  0131F8  6F60               	movwf	LED_output@value& (0+255),b
 10398  0131FA  0100               	movlb	0	; () banked
 10399  0131FC  5166               	movf	port_button_task@i& (0+255),w,b
 10400  0131FE  ECB0  F0AF         	call	_LED_output
 10401                           
 10402                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10403  013202  0100               	movlb	0	; () banked
 10404  013204  5166               	movf	port_button_task@i& (0+255),w,b
 10405  013206  0100               	movlb	0	; () banked
 10406  013208  19FB               	xorwf	_print_port& (0+255),w,b
 10407  01320A  B4D8               	btfsc	status,2,c
 10408  01320C  D008               	goto	l12389
 10409  01320E  D010               	goto	l1485
 10410  013210                     l12381:
 10411                           
 10412                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10413  013210  0E01               	movlw	1
 10414  013212  D003               	goto	L2
 10415  013214                     l12383:
 10416                           
 10417                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10418  013214  0E02               	movlw	2
 10419  013216  D001               	goto	L2
 10420  013218                     l12385:
 10421                           
 10422                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10423  013218  0E00               	movlw	0
 10424  01321A                     L2:
 10425  01321A  6E1D               	movwf	_data_item,c
 10426                           
 10427                           ;ChargeStation_task.c: 109: }
 10428                           
 10429                           ;ChargeStation_task.c: 108: break;
 10430  01321C  D00B               	goto	l12391
 10431  01321E                     l12389:
 10432  01321E  501D               	movf	_data_item,w,c
 10433                           
 10434                           ; Switch size 1, requested type "space"
 10435                           ; Number of cases is 3, Range of values is 0 to 2
 10436                           ; switch strategies available:
 10437                           ; Name         Instructions Cycles
 10438                           ; simple_byte           10     6 (average)
 10439                           ;	Chosen strategy is simple_byte
 10440  013220  0A00               	xorlw	0	; case 0
 10441  013222  B4D8               	btfsc	status,2,c
 10442  013224  D7F5               	goto	l12381
 10443  013226  0A01               	xorlw	1	; case 1
 10444  013228  B4D8               	btfsc	status,2,c
 10445  01322A  D7F4               	goto	l12383
 10446  01322C  0A03               	xorlw	3	; case 2
 10447  01322E  D7F4               	goto	l12385
 10448  013230                     l1485:
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;ChargeStation_task.c: 111: print_port = i;
 10452  013230  C066  F0FB         	movff	port_button_task@i,_print_port
 10453  013234                     l12391:
 10454                           
 10455                           ;ChargeStation_task.c: 112: }
 10456                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10457  013234  0EE6               	movlw	low (STR_19+3)
 10458  013236  0100               	movlb	0	; () banked
 10459  013238  6F60               	movwf	display@str0& (0+255),b
 10460  01323A  0EFF               	movlw	high (STR_19+3)
 10461  01323C  0100               	movlb	0	; () banked
 10462  01323E  6F61               	movwf	(display@str0+1)& (0+255),b
 10463  013240  0EE6               	movlw	low (STR_19+3)
 10464  013242  0100               	movlb	0	; () banked
 10465  013244  6F62               	movwf	display@str1& (0+255),b
 10466  013246  0EFF               	movlw	high (STR_19+3)
 10467  013248  0100               	movlb	0	; () banked
 10468  01324A  6F63               	movwf	(display@str1+1)& (0+255),b
 10469  01324C  0E02               	movlw	2
 10470  01324E  ECE0  F09B         	call	_display
 10471                           
 10472                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10473  013252  0E01               	movlw	1
 10474  013254  0100               	movlb	0	; () banked
 10475  013256  6F60               	movwf	OUT@value& (0+255),b
 10476  013258  0100               	movlb	0	; () banked
 10477  01325A  5166               	movf	port_button_task@i& (0+255),w,b
 10478  01325C  ECE9  F0AF         	call	_OUT
 10479                           
 10480                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10481  013260  0100               	movlb	0	; () banked
 10482  013262  5166               	movf	port_button_task@i& (0+255),w,b
 10483  013264  0D17               	mullw	23
 10484  013266  0E14               	movlw	20
 10485  013268  26F3               	addwf	prodl,f,c
 10486  01326A  0E00               	movlw	0
 10487  01326C  22F4               	addwfc	prodh,f,c
 10488  01326E  0E35               	movlw	low _port
 10489  013270  24F3               	addwf	prodl,w,c
 10490  013272  6ED9               	movwf	fsr2l,c
 10491  013274  0E01               	movlw	high _port
 10492  013276  20F4               	addwfc	prodh,w,c
 10493  013278  6EDA               	movwf	fsr2h,c
 10494  01327A  0E00               	movlw	0
 10495  01327C  6EDE               	movwf	postinc2,c
 10496  01327E  0E00               	movlw	0
 10497  013280  6EDD               	movwf	postdec2,c
 10498  013282                     l12397:
 10499  013282  0100               	movlb	0	; () banked
 10500  013284  2B66               	incf	port_button_task@i& (0+255),f,b
 10501  013286  D751               	goto	l12357
 10502  013288                     __end_of_port_button_task:
 10503                           	opt stack 0
 10504                           tblptru	equ	0xFF8
 10505                           tblptrh	equ	0xFF7
 10506                           tblptrl	equ	0xFF6
 10507                           tablat	equ	0xFF5
 10508                           prodh	equ	0xFF4
 10509                           prodl	equ	0xFF3
 10510                           intcon	equ	0xFF2
 10511                           postinc0	equ	0xFEE
 10512                           wreg	equ	0xFE8
 10513                           postinc1	equ	0xFE6
 10514                           postdec1	equ	0xFE5
 10515                           fsr1h	equ	0xFE2
 10516                           fsr1l	equ	0xFE1
 10517                           indf2	equ	0xFDF
 10518                           postinc2	equ	0xFDE
 10519                           postdec2	equ	0xFDD
 10520                           fsr2h	equ	0xFDA
 10521                           fsr2l	equ	0xFD9
 10522                           status	equ	0xFD8
 10523                           
 10524 ;; *************** function _display *****************
 10525 ;; Defined at:
 10526 ;;		line 15 in file "LCD_print.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  item            1    wreg     enum E8527
 10529 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10530 ;;		 -> STR_116(1), STR_114(9), STR_112(9), STR_110(9), 
 10531 ;;		 -> STR_108(9), STR_106(9), STR_104(9), STR_102(1), 
 10532 ;;		 -> STR_101(1), STR_98(17), STR_94(1), STR_93(1), 
 10533 ;;		 -> STR_90(17), STR_86(1), STR_85(1), STR_82(17), 
 10534 ;;		 -> STR_78(1), STR_76(1), STR_74(15), STR_47(15), 
 10535 ;;		 -> STR_43(1), STR_41(1), 
 10536 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10537 ;;		 -> STR_117(1), STR_115(15), STR_113(16), STR_111(17), 
 10538 ;;		 -> STR_109(16), STR_107(17), STR_105(17), STR_103(1), 
 10539 ;;		 -> settings_integrating_reset@str_6139(20), settings_integrating_reset@str(20), STR_95(1), settings_led_indicator@s
      +tr_6122(20), 
 10540 ;;		 -> settings_led_indicator@str(20), STR_87(1), settings_auto_stop@str_6105(20), settings_auto_stop@str(20), 
 10541 ;;		 -> STR_79(1), STR_77(1), STR_75(13), STR_48(14), 
 10542 ;;		 -> STR_44(1), STR_42(1), 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;  item            1    4[BANK0 ] enum E8527
 10545 ;;  i               1    5[BANK0 ] unsigned char 
 10546 ;; Return value:  Size  Location     Type
 10547 ;;		None               void
 10548 ;; Registers used:
 10549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10558 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10559 ;;Total ram usage:        6 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:   11
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_port_button_task
 10566 ;;		_normal_task
 10567 ;;		_sleep_task
 10568 ;;		_software_init
 10569 ;;		_settings_adjust_time
 10570 ;;		_settings_auto_stop
 10571 ;;		_settings_led_indicator
 10572 ;;		_settings_integrating_reset
 10573 ;;		_settings_task
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text27
 10578  0137C0                     __ptext27:
 10579                           	opt stack 0
 10580  0137C0                     _display:
 10581                           	opt stack 18
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;incstack = 0
 10585                           ;display@item stored from wreg
 10586  0137C0  0100               	movlb	0	; () banked
 10587  0137C2  6F64               	movwf	display@item& (0+255),b
 10588                           
 10589                           ;LCD_print.c: 16: print_item = item;
 10590  0137C4  C064  F01F         	movff	display@item,_print_item
 10591                           
 10592                           ;LCD_print.c: 17: uint8_t i;
 10593                           ;LCD_print.c: 18: if (*str0) {
 10594  0137C8  C060  FFF6         	movff	display@str0,tblptrl
 10595  0137CC  C061  FFF7         	movff	display@str0+1,tblptrh
 10596  0137D0                     	if	0	;tblptru may be non-zero
 10597  0137D0                     	endif
 10598  0137D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10599  0137D0  0E00               	movlw	low (__mediumconst shr (0+16))
 10600  0137D2  6EF8               	movwf	tblptru,c
 10601  0137D4                     	endif
 10602  0137D4  0008               	tblrd		*
 10603  0137D6  50F5               	movf	tablat,w,c
 10604  0137D8  0900               	iorlw	0
 10605  0137DA  B4D8               	btfsc	status,2,c
 10606  0137DC  D031               	goto	l11361
 10607                           
 10608                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10609  0137DE  0E00               	movlw	0
 10610  0137E0  0100               	movlb	0	; () banked
 10611  0137E2  6F65               	movwf	display@i& (0+255),b
 10612  0137E4  D017               	goto	l11357
 10613  0137E6                     l11351:
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10617  0137E6  C060  FFF6         	movff	display@str0,tblptrl
 10618  0137EA  C061  FFF7         	movff	display@str0+1,tblptrh
 10619  0137EE                     	if	0	;tblptru may be non-zero
 10620  0137EE                     	endif
 10621  0137EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10622  0137EE  0E00               	movlw	low (__mediumconst shr (0+16))
 10623  0137F0  6EF8               	movwf	tblptru,c
 10624  0137F2                     	endif
 10625  0137F2  0100               	movlb	0	; () banked
 10626  0137F4  5165               	movf	display@i& (0+255),w,b
 10627  0137F6  0D01               	mullw	1
 10628  0137F8  0E15               	movlw	low _display_char
 10629  0137FA  24F3               	addwf	prodl,w,c
 10630  0137FC  6ED9               	movwf	fsr2l,c
 10631  0137FE  0E02               	movlw	high _display_char
 10632  013800  20F4               	addwfc	prodh,w,c
 10633  013802  6EDA               	movwf	fsr2h,c
 10634  013804  0008               	tblrd		*
 10635  013806  CFF5 FFDF          	movff	tablat,indf2
 10636                           
 10637                           ; BSR set to: 0
 10638  01380A  0100               	movlb	0	; () banked
 10639  01380C  4B60               	infsnz	display@str0& (0+255),f,b
 10640  01380E  2B61               	incf	(display@str0+1)& (0+255),f,b
 10641                           
 10642                           ; BSR set to: 0
 10643  013810  0100               	movlb	0	; () banked
 10644  013812  2B65               	incf	display@i& (0+255),f,b
 10645  013814                     l11357:
 10646                           
 10647                           ; BSR set to: 0
 10648  013814  C060  FFF6         	movff	display@str0,tblptrl
 10649  013818  C061  FFF7         	movff	display@str0+1,tblptrh
 10650  01381C                     	if	0	;tblptru may be non-zero
 10651  01381C                     	endif
 10652  01381C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10653  01381C  0E00               	movlw	low (__mediumconst shr (0+16))
 10654  01381E  6EF8               	movwf	tblptru,c
 10655  013820                     	endif
 10656  013820  0008               	tblrd		*
 10657  013822  50F5               	movf	tablat,w,c
 10658  013824  0900               	iorlw	0
 10659  013826  A4D8               	btfss	status,2,c
 10660  013828  D7DE               	goto	l11351
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;LCD_print.c: 21: }
 10664                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10665                           
 10666                           ; BSR set to: 0
 10667  01382A  0100               	movlb	0	; () banked
 10668  01382C  5165               	movf	display@i& (0+255),w,b
 10669  01382E  0D01               	mullw	1
 10670  013830  0E15               	movlw	low _display_char
 10671  013832  24F3               	addwf	prodl,w,c
 10672  013834  6ED9               	movwf	fsr2l,c
 10673  013836  0E02               	movlw	high _display_char
 10674  013838  20F4               	addwfc	prodh,w,c
 10675  01383A  6EDA               	movwf	fsr2h,c
 10676  01383C  0E00               	movlw	0
 10677  01383E  6EDF               	movwf	indf2,c
 10678  013840                     l11361:
 10679                           
 10680                           ;LCD_print.c: 23: }
 10681                           ;LCD_print.c: 24: if (*str1) {
 10682  013840  C062  FFF6         	movff	display@str1,tblptrl
 10683  013844  C063  FFF7         	movff	display@str1+1,tblptrh
 10684  013848  0E00               	movlw	low (__mediumconst shr (0+16))
 10685  01384A  6EF8               	movwf	tblptru,c
 10686  01384C  0E0E               	movlw	(high __ramtop+-1)
 10687  01384E  64F7               	cpfsgt	tblptrh,c
 10688  013850  D003               	bra	u12747
 10689  013852  0008               	tblrd		*
 10690  013854  50F5               	movf	tablat,w,c
 10691  013856  D005               	bra	u12740
 10692  013858                     u12747:
 10693  013858  CFF6 FFE1          	movff	tblptrl,fsr1l
 10694  01385C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10695  013860  50E7               	movf	indf1,w,c
 10696  013862                     u12740:
 10697  013862  0900               	iorlw	0
 10698  013864  B4D8               	btfsc	status,2,c
 10699  013866  D043               	goto	l11375
 10700                           
 10701                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10702  013868  0E00               	movlw	0
 10703  01386A  0100               	movlb	0	; () banked
 10704  01386C  6F65               	movwf	display@i& (0+255),b
 10705  01386E  D020               	goto	l11371
 10706  013870                     l11365:
 10707                           
 10708                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10709  013870  C062  FFF6         	movff	display@str1,tblptrl
 10710  013874  C063  FFF7         	movff	display@str1+1,tblptrh
 10711  013878  0E00               	movlw	low (__mediumconst shr (0+16))
 10712  01387A  6EF8               	movwf	tblptru,c
 10713  01387C  0100               	movlb	0	; () banked
 10714  01387E  5165               	movf	display@i& (0+255),w,b
 10715  013880  0D01               	mullw	1
 10716  013882  0E29               	movlw	low (_display_char+20)
 10717  013884  24F3               	addwf	prodl,w,c
 10718  013886  6ED9               	movwf	fsr2l,c
 10719  013888  0E02               	movlw	high (_display_char+20)
 10720  01388A  20F4               	addwfc	prodh,w,c
 10721  01388C  6EDA               	movwf	fsr2h,c
 10722  01388E  0E0E               	movlw	(high __ramtop+-1)
 10723  013890  64F7               	cpfsgt	tblptrh,c
 10724  013892  D003               	bra	u12767
 10725  013894  0008               	tblrd		*
 10726  013896  50F5               	movf	tablat,w,c
 10727  013898  D005               	bra	u12760
 10728  01389A                     u12767:
 10729  01389A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10730  01389E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10731  0138A2  50E7               	movf	indf1,w,c
 10732  0138A4                     u12760:
 10733  0138A4  6EDF               	movwf	indf2,c
 10734  0138A6  0100               	movlb	0	; () banked
 10735  0138A8  4B62               	infsnz	display@str1& (0+255),f,b
 10736  0138AA  2B63               	incf	(display@str1+1)& (0+255),f,b
 10737                           
 10738                           ; BSR set to: 0
 10739  0138AC  0100               	movlb	0	; () banked
 10740  0138AE  2B65               	incf	display@i& (0+255),f,b
 10741  0138B0                     l11371:
 10742                           
 10743                           ; BSR set to: 0
 10744  0138B0  C062  FFF6         	movff	display@str1,tblptrl
 10745  0138B4  C063  FFF7         	movff	display@str1+1,tblptrh
 10746  0138B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10747  0138BA  6EF8               	movwf	tblptru,c
 10748  0138BC  0E0E               	movlw	(high __ramtop+-1)
 10749  0138BE  64F7               	cpfsgt	tblptrh,c
 10750  0138C0  D003               	bra	u12777
 10751  0138C2  0008               	tblrd		*
 10752  0138C4  50F5               	movf	tablat,w,c
 10753  0138C6  D005               	bra	u12770
 10754  0138C8                     u12777:
 10755  0138C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10756  0138CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10757  0138D0  50E7               	movf	indf1,w,c
 10758  0138D2                     u12770:
 10759  0138D2  0900               	iorlw	0
 10760  0138D4  A4D8               	btfss	status,2,c
 10761  0138D6  D7CC               	goto	l11365
 10762                           
 10763                           ;LCD_print.c: 27: }
 10764                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10765  0138D8  0100               	movlb	0	; () banked
 10766  0138DA  5165               	movf	display@i& (0+255),w,b
 10767  0138DC  0D01               	mullw	1
 10768  0138DE  0E29               	movlw	low (_display_char+20)
 10769  0138E0  24F3               	addwf	prodl,w,c
 10770  0138E2  6ED9               	movwf	fsr2l,c
 10771  0138E4  0E02               	movlw	high (_display_char+20)
 10772  0138E6  20F4               	addwfc	prodh,w,c
 10773  0138E8  6EDA               	movwf	fsr2h,c
 10774  0138EA  0E00               	movlw	0
 10775  0138EC  6EDF               	movwf	indf2,c
 10776  0138EE                     l11375:
 10777                           
 10778                           ;LCD_print.c: 29: }
 10779                           ;LCD_print.c: 30: display_flag = 1;
 10780  0138EE  0E01               	movlw	1
 10781  0138F0  0101               	movlb	1	; () banked
 10782  0138F2  6F27               	movwf	_display_flag& (0+255),b
 10783                           
 10784                           ; BSR set to: 1
 10785  0138F4  0012               	return		;funcret
 10786  0138F6                     __end_of_display:
 10787                           	opt stack 0
 10788                           tblptru	equ	0xFF8
 10789                           tblptrh	equ	0xFF7
 10790                           tblptrl	equ	0xFF6
 10791                           tablat	equ	0xFF5
 10792                           prodh	equ	0xFF4
 10793                           prodl	equ	0xFF3
 10794                           intcon	equ	0xFF2
 10795                           postinc0	equ	0xFEE
 10796                           wreg	equ	0xFE8
 10797                           indf1	equ	0xFE7
 10798                           postinc1	equ	0xFE6
 10799                           postdec1	equ	0xFE5
 10800                           fsr1h	equ	0xFE2
 10801                           fsr1l	equ	0xFE1
 10802                           indf2	equ	0xFDF
 10803                           postinc2	equ	0xFDE
 10804                           postdec2	equ	0xFDD
 10805                           fsr2h	equ	0xFDA
 10806                           fsr2l	equ	0xFD9
 10807                           status	equ	0xFD8
 10808                           
 10809 ;; *************** function _LED_output *****************
 10810 ;; Defined at:
 10811 ;;		line 36 in file "io.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;  b               1    wreg     unsigned char 
 10814 ;;  value           1    0[BANK0 ] unsigned char 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;  b               1    1[BANK0 ] unsigned char 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;		None               void
 10819 ;; Registers used:
 10820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10826 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10830 ;;Total ram usage:        2 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:   11
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_port_button_task
 10837 ;;		_sleep_task
 10838 ;;		_software_init
 10839 ;;		_settings_led_indicator
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           	psect	text28
 10844  015F60                     __ptext28:
 10845                           	opt stack 0
 10846  015F60                     _LED_output:
 10847                           	opt stack 18
 10848                           
 10849                           ; BSR set to: 1
 10850                           ;incstack = 0
 10851                           ;LED_output@b stored from wreg
 10852  015F60  0100               	movlb	0	; () banked
 10853  015F62  6F61               	movwf	LED_output@b& (0+255),b
 10854                           
 10855                           ;io.c: 37: port[b].flag.led_flag = value;
 10856  015F64  0100               	movlb	0	; () banked
 10857  015F66  5161               	movf	LED_output@b& (0+255),w,b
 10858  015F68  0D17               	mullw	23
 10859  015F6A  0E16               	movlw	22
 10860  015F6C  26F3               	addwf	prodl,f,c
 10861  015F6E  0E00               	movlw	0
 10862  015F70  22F4               	addwfc	prodh,f,c
 10863  015F72  0E35               	movlw	low _port
 10864  015F74  24F3               	addwf	prodl,w,c
 10865  015F76  6ED9               	movwf	fsr2l,c
 10866  015F78  0E01               	movlw	high _port
 10867  015F7A  20F4               	addwfc	prodh,w,c
 10868  015F7C  6EDA               	movwf	fsr2h,c
 10869  015F7E  0100               	movlb	0	; () banked
 10870  015F80  B160               	btfsc	LED_output@value& (0+255),0,b
 10871  015F82  D003               	bra	u12655
 10872  015F84  0101               	movlb	1	; () banked
 10873  015F86  96DF               	bcf	indf2,3,c
 10874  015F88  D002               	bra	u12656
 10875  015F8A                     u12655:
 10876  015F8A  0101               	movlb	1	; () banked
 10877  015F8C  86DF               	bsf	indf2,3,c
 10878  015F8E                     u12656:
 10879                           
 10880                           ;io.c: 38: switch (b) {
 10881  015F8E  D015               	goto	l11343
 10882  015F90                     l1664:
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;io.c: 40: LATB7 = value;
 10886  015F90  0100               	movlb	0	; () banked
 10887  015F92  A160               	btfss	LED_output@value& (0+255),0,b
 10888  015F94  D002               	goto	u12660
 10889  015F96  8E8A               	bsf	3978,7,c	;volatile
 10890  015F98  0012               	return	
 10891  015F9A                     u12660:
 10892  015F9A  9E8A               	bcf	3978,7,c	;volatile
 10893                           
 10894                           ;io.c: 41: break;
 10895  015F9C  0012               	return	
 10896  015F9E                     l1666:
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;io.c: 43: LATB6 = value;
 10900  015F9E  0100               	movlb	0	; () banked
 10901  015FA0  A160               	btfss	LED_output@value& (0+255),0,b
 10902  015FA2  D002               	goto	u12680
 10903  015FA4  8C8A               	bsf	3978,6,c	;volatile
 10904  015FA6  0012               	return	
 10905  015FA8                     u12680:
 10906  015FA8  9C8A               	bcf	3978,6,c	;volatile
 10907                           
 10908                           ;io.c: 44: break;
 10909  015FAA  0012               	return	
 10910  015FAC                     l1667:
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;io.c: 46: LATC2 = value;
 10914  015FAC  0100               	movlb	0	; () banked
 10915  015FAE  A160               	btfss	LED_output@value& (0+255),0,b
 10916  015FB0  D002               	goto	u12700
 10917  015FB2  848B               	bsf	3979,2,c	;volatile
 10918  015FB4  0012               	return	
 10919  015FB6                     u12700:
 10920  015FB6  948B               	bcf	3979,2,c	;volatile
 10921                           
 10922                           ;io.c: 48: }
 10923                           
 10924                           ;io.c: 47: break;
 10925  015FB8  0012               	return	
 10926  015FBA                     l11343:
 10927  015FBA  0100               	movlb	0	; () banked
 10928  015FBC  5161               	movf	LED_output@b& (0+255),w,b
 10929                           
 10930                           ; Switch size 1, requested type "space"
 10931                           ; Number of cases is 3, Range of values is 0 to 2
 10932                           ; switch strategies available:
 10933                           ; Name         Instructions Cycles
 10934                           ; simple_byte           10     6 (average)
 10935                           ;	Chosen strategy is simple_byte
 10936  015FBE  0A00               	xorlw	0	; case 0
 10937  015FC0  B4D8               	btfsc	status,2,c
 10938  015FC2  D7E6               	goto	l1664
 10939  015FC4  0A01               	xorlw	1	; case 1
 10940  015FC6  B4D8               	btfsc	status,2,c
 10941  015FC8  D7EA               	goto	l1666
 10942  015FCA  0A03               	xorlw	3	; case 2
 10943  015FCC  A4D8               	btfss	status,2,c
 10944  015FCE  0012               	return	
 10945  015FD0  D7ED               	goto	l1667
 10946  015FD2                     __end_of_LED_output:
 10947                           	opt stack 0
 10948                           tblptru	equ	0xFF8
 10949                           tblptrh	equ	0xFF7
 10950                           tblptrl	equ	0xFF6
 10951                           tablat	equ	0xFF5
 10952                           prodh	equ	0xFF4
 10953                           prodl	equ	0xFF3
 10954                           intcon	equ	0xFF2
 10955                           postinc0	equ	0xFEE
 10956                           wreg	equ	0xFE8
 10957                           indf1	equ	0xFE7
 10958                           postinc1	equ	0xFE6
 10959                           postdec1	equ	0xFE5
 10960                           fsr1h	equ	0xFE2
 10961                           fsr1l	equ	0xFE1
 10962                           indf2	equ	0xFDF
 10963                           postinc2	equ	0xFDE
 10964                           postdec2	equ	0xFDD
 10965                           fsr2h	equ	0xFDA
 10966                           fsr2l	equ	0xFD9
 10967                           status	equ	0xFD8
 10968                           
 10969 ;; *************** function _integrate_time *****************
 10970 ;; Defined at:
 10971 ;;		line 76 in file "ChargeStation_task.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;		None
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  i               1    2[BANK0 ] unsigned char 
 10976 ;; Return value:  Size  Location     Type
 10977 ;;		None               void
 10978 ;; Registers used:
 10979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10989 ;;Total ram usage:        3 bytes
 10990 ;; Hardware stack levels used:    1
 10991 ;; Hardware stack levels required when called:   11
 10992 ;; This function calls:
 10993 ;;		Nothing
 10994 ;; This function is called by:
 10995 ;;		_normal_task
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text29
 11000  0162BA                     __ptext29:
 11001                           	opt stack 0
 11002  0162BA                     _integrate_time:
 11003                           	opt stack 18
 11004                           
 11005                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 11006                           
 11007                           ;incstack = 0
 11008  0162BA  0E00               	movlw	0
 11009  0162BC  0100               	movlb	0	; () banked
 11010  0162BE  6F62               	movwf	integrate_time@i& (0+255),b
 11011  0162C0                     l12343:
 11012                           
 11013                           ; BSR set to: 0
 11014  0162C0  0E02               	movlw	2
 11015  0162C2  0100               	movlb	0	; () banked
 11016  0162C4  6562               	cpfsgt	integrate_time@i& (0+255),b
 11017  0162C6  D001               	goto	l12347
 11018  0162C8  0012               	return	
 11019  0162CA                     l12347:
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 11023  0162CA  0100               	movlb	0	; () banked
 11024  0162CC  5162               	movf	integrate_time@i& (0+255),w,b
 11025  0162CE  0D17               	mullw	23
 11026  0162D0  0E06               	movlw	6
 11027  0162D2  26F3               	addwf	prodl,f,c
 11028  0162D4  0E00               	movlw	0
 11029  0162D6  22F4               	addwfc	prodh,f,c
 11030  0162D8  0E35               	movlw	low _port
 11031  0162DA  24F3               	addwf	prodl,w,c
 11032  0162DC  6ED9               	movwf	fsr2l,c
 11033  0162DE  0E01               	movlw	high _port
 11034  0162E0  20F4               	addwfc	prodh,w,c
 11035  0162E2  6EDA               	movwf	fsr2h,c
 11036  0162E4  0E01               	movlw	1
 11037  0162E6  50DB               	movf	plusw2,w,c
 11038  0162E8  E104               	bnz	u14180
 11039  0162EA  0E65               	movlw	101
 11040  0162EC  5CDE               	subwf	postinc2,w,c
 11041  0162EE  A0D8               	btfss	status,0,c
 11042  0162F0  D012               	goto	l12351
 11043  0162F2                     u14180:
 11044                           
 11045                           ; BSR set to: 0
 11046  0162F2  0100               	movlb	0	; () banked
 11047  0162F4  5162               	movf	integrate_time@i& (0+255),w,b
 11048  0162F6  0D17               	mullw	23
 11049  0162F8  0E10               	movlw	16
 11050  0162FA  26F3               	addwf	prodl,f,c
 11051  0162FC  0E00               	movlw	0
 11052  0162FE  22F4               	addwfc	prodh,f,c
 11053  016300  0E35               	movlw	low _port
 11054  016302  24F3               	addwf	prodl,w,c
 11055  016304  6ED9               	movwf	fsr2l,c
 11056  016306  0E01               	movlw	high _port
 11057  016308  20F4               	addwfc	prodh,w,c
 11058  01630A  6EDA               	movwf	fsr2h,c
 11059  01630C  2ADE               	incf	postinc2,f,c
 11060  01630E  0E00               	movlw	0
 11061  016310  22DE               	addwfc	postinc2,f,c
 11062  016312  22DE               	addwfc	postinc2,f,c
 11063  016314  22DE               	addwfc	postinc2,f,c
 11064  016316                     l12351:
 11065                           
 11066                           ; BSR set to: 0
 11067  016316  0100               	movlb	0	; () banked
 11068  016318  2B62               	incf	integrate_time@i& (0+255),f,b
 11069  01631A  D7D2               	goto	l12343
 11070  01631C                     __end_of_integrate_time:
 11071                           	opt stack 0
 11072                           tblptru	equ	0xFF8
 11073                           tblptrh	equ	0xFF7
 11074                           tblptrl	equ	0xFF6
 11075                           tablat	equ	0xFF5
 11076                           prodh	equ	0xFF4
 11077                           prodl	equ	0xFF3
 11078                           intcon	equ	0xFF2
 11079                           postinc0	equ	0xFEE
 11080                           wreg	equ	0xFE8
 11081                           indf1	equ	0xFE7
 11082                           postinc1	equ	0xFE6
 11083                           postdec1	equ	0xFE5
 11084                           fsr1h	equ	0xFE2
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           postdec2	equ	0xFDD
 11089                           plusw2	equ	0xFDB
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function _integrate_current *****************
 11095 ;; Defined at:
 11096 ;;		line 67 in file "ChargeStation_task.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;		None
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  i               1   15[BANK0 ] unsigned char 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;		None               void
 11103 ;; Registers used:
 11104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11113 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11114 ;;Total ram usage:        3 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:   12
 11117 ;; This function calls:
 11118 ;;		___lldiv
 11119 ;; This function is called by:
 11120 ;;		_normal_task
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text30
 11125  013E6E                     __ptext30:
 11126                           	opt stack 0
 11127  013E6E                     _integrate_current:
 11128                           	opt stack 17
 11129                           
 11130                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11131                           
 11132                           ; BSR set to: 0
 11133                           ;incstack = 0
 11134  013E6E  0E00               	movlw	0
 11135  013E70  0100               	movlb	0	; () banked
 11136  013E72  6F6F               	movwf	integrate_current@i& (0+255),b
 11137  013E74                     l12327:
 11138                           
 11139                           ; BSR set to: 0
 11140  013E74  0E02               	movlw	2
 11141  013E76  0100               	movlb	0	; () banked
 11142  013E78  656F               	cpfsgt	integrate_current@i& (0+255),b
 11143  013E7A  D001               	goto	l12331
 11144  013E7C  0012               	return	
 11145  013E7E                     l12331:
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11149  013E7E  0100               	movlb	0	; () banked
 11150  013E80  516F               	movf	integrate_current@i& (0+255),w,b
 11151  013E82  0D17               	mullw	23
 11152  013E84  0E06               	movlw	6
 11153  013E86  26F3               	addwf	prodl,f,c
 11154  013E88  0E00               	movlw	0
 11155  013E8A  22F4               	addwfc	prodh,f,c
 11156  013E8C  0E35               	movlw	low _port
 11157  013E8E  24F3               	addwf	prodl,w,c
 11158  013E90  6ED9               	movwf	fsr2l,c
 11159  013E92  0E01               	movlw	high _port
 11160  013E94  20F4               	addwfc	prodh,w,c
 11161  013E96  6EDA               	movwf	fsr2h,c
 11162  013E98  0E01               	movlw	1
 11163  013E9A  50DB               	movf	plusw2,w,c
 11164  013E9C  E104               	bnz	u14150
 11165  013E9E  0E65               	movlw	101
 11166  013EA0  5CDE               	subwf	postinc2,w,c
 11167  013EA2  A0D8               	btfss	status,0,c
 11168  013EA4  D05F               	goto	l12337
 11169  013EA6                     u14150:
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11173  013EA6  0100               	movlb	0	; () banked
 11174  013EA8  516F               	movf	integrate_current@i& (0+255),w,b
 11175  013EAA  0D17               	mullw	23
 11176  013EAC  0E06               	movlw	6
 11177  013EAE  26F3               	addwf	prodl,f,c
 11178  013EB0  0E00               	movlw	0
 11179  013EB2  22F4               	addwfc	prodh,f,c
 11180  013EB4  0E35               	movlw	low _port
 11181  013EB6  24F3               	addwf	prodl,w,c
 11182  013EB8  6ED9               	movwf	fsr2l,c
 11183  013EBA  0E01               	movlw	high _port
 11184  013EBC  20F4               	addwfc	prodh,w,c
 11185  013EBE  6EDA               	movwf	fsr2h,c
 11186  013EC0  CFDE F06D          	movff	postinc2,??_integrate_current
 11187  013EC4  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11188  013EC8  0100               	movlb	0	; () banked
 11189  013ECA  516F               	movf	integrate_current@i& (0+255),w,b
 11190  013ECC  0D17               	mullw	23
 11191  013ECE  0E08               	movlw	8
 11192  013ED0  26F3               	addwf	prodl,f,c
 11193  013ED2  0E00               	movlw	0
 11194  013ED4  22F4               	addwfc	prodh,f,c
 11195  013ED6  0E35               	movlw	low _port
 11196  013ED8  24F3               	addwf	prodl,w,c
 11197  013EDA  6ED9               	movwf	fsr2l,c
 11198  013EDC  0E01               	movlw	high _port
 11199  013EDE  20F4               	addwfc	prodh,w,c
 11200  013EE0  6EDA               	movwf	fsr2h,c
 11201  013EE2  0100               	movlb	0	; () banked
 11202  013EE4  516D               	movf	??_integrate_current& (0+255),w,b
 11203  013EE6  26DE               	addwf	postinc2,f,c
 11204  013EE8  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11205  013EEA  22DE               	addwfc	postinc2,f,c
 11206  013EEC  0E00               	movlw	0
 11207  013EEE  22DE               	addwfc	postinc2,f,c
 11208  013EF0  22DE               	addwfc	postinc2,f,c
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11212  013EF2  0100               	movlb	0	; () banked
 11213  013EF4  516F               	movf	integrate_current@i& (0+255),w,b
 11214  013EF6  0D17               	mullw	23
 11215  013EF8  0E08               	movlw	8
 11216  013EFA  26F3               	addwf	prodl,f,c
 11217  013EFC  0E00               	movlw	0
 11218  013EFE  22F4               	addwfc	prodh,f,c
 11219  013F00  0E35               	movlw	low _port
 11220  013F02  24F3               	addwf	prodl,w,c
 11221  013F04  6ED9               	movwf	fsr2l,c
 11222  013F06  0E01               	movlw	high _port
 11223  013F08  20F4               	addwfc	prodh,w,c
 11224  013F0A  6EDA               	movwf	fsr2h,c
 11225  013F0C  CFDE F060          	movff	postinc2,___lldiv@dividend
 11226  013F10  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11227  013F14  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11228  013F18  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11229  013F1C  0E10               	movlw	16
 11230  013F1E  0100               	movlb	0	; () banked
 11231  013F20  6F64               	movwf	___lldiv@divisor& (0+255),b
 11232  013F22  0E0E               	movlw	14
 11233  013F24  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11234  013F26  0E00               	movlw	0
 11235  013F28  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11236  013F2A  0E00               	movlw	0
 11237  013F2C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11238  013F2E  ECCB  F0A9         	call	___lldiv	;wreg free
 11239  013F32  0100               	movlb	0	; () banked
 11240  013F34  516F               	movf	integrate_current@i& (0+255),w,b
 11241  013F36  0D17               	mullw	23
 11242  013F38  0E0C               	movlw	12
 11243  013F3A  26F3               	addwf	prodl,f,c
 11244  013F3C  0E00               	movlw	0
 11245  013F3E  22F4               	addwfc	prodh,f,c
 11246  013F40  0E35               	movlw	low _port
 11247  013F42  24F3               	addwf	prodl,w,c
 11248  013F44  6ED9               	movwf	fsr2l,c
 11249  013F46  0E01               	movlw	high _port
 11250  013F48  20F4               	addwfc	prodh,w,c
 11251  013F4A  6EDA               	movwf	fsr2h,c
 11252  013F4C  0100               	movlb	0	; () banked
 11253  013F4E  C060  FFDE         	movff	?___lldiv,postinc2
 11254  013F52  0100               	movlb	0	; () banked
 11255  013F54  C061  FFDE         	movff	?___lldiv+1,postinc2
 11256  013F58  0100               	movlb	0	; () banked
 11257  013F5A  C062  FFDE         	movff	?___lldiv+2,postinc2
 11258  013F5E  0100               	movlb	0	; () banked
 11259  013F60  C063  FFDE         	movff	?___lldiv+3,postinc2
 11260  013F64                     l12337:
 11261                           
 11262                           ; BSR set to: 0
 11263  013F64  0100               	movlb	0	; () banked
 11264  013F66  2B6F               	incf	integrate_current@i& (0+255),f,b
 11265  013F68  D785               	goto	l12327
 11266  013F6A                     __end_of_integrate_current:
 11267                           	opt stack 0
 11268                           tblptru	equ	0xFF8
 11269                           tblptrh	equ	0xFF7
 11270                           tblptrl	equ	0xFF6
 11271                           tablat	equ	0xFF5
 11272                           prodh	equ	0xFF4
 11273                           prodl	equ	0xFF3
 11274                           intcon	equ	0xFF2
 11275                           postinc0	equ	0xFEE
 11276                           wreg	equ	0xFE8
 11277                           indf1	equ	0xFE7
 11278                           postinc1	equ	0xFE6
 11279                           postdec1	equ	0xFE5
 11280                           fsr1h	equ	0xFE2
 11281                           fsr1l	equ	0xFE1
 11282                           indf2	equ	0xFDF
 11283                           postinc2	equ	0xFDE
 11284                           postdec2	equ	0xFDD
 11285                           plusw2	equ	0xFDB
 11286                           fsr2h	equ	0xFDA
 11287                           fsr2l	equ	0xFD9
 11288                           status	equ	0xFD8
 11289                           
 11290 ;; *************** function _display_LCD *****************
 11291 ;; Defined at:
 11292 ;;		line 33 in file "LCD_print.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;		None
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;  str            20   40[BANK1 ] unsigned char [20]
 11297 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11298 ;; Return value:  Size  Location     Type
 11299 ;;		None               void
 11300 ;; Registers used:
 11301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11308 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;Total ram usage:       85 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:   16
 11314 ;; This function calls:
 11315 ;;		_I2C_LCD_Clear
 11316 ;;		_I2C_LCD_Puts
 11317 ;;		_I2C_LCD_SetCursor
 11318 ;;		___lldiv
 11319 ;;		___llmod
 11320 ;;		___lwdiv
 11321 ;;		___lwmod
 11322 ;;		_display_time_1602
 11323 ;;		_sprintf
 11324 ;; This function is called by:
 11325 ;;		_normal_task
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329                           	psect	text31
 11330  01051C                     __ptext31:
 11331                           	opt stack 0
 11332  01051C                     _display_LCD:
 11333                           	opt stack 13
 11334                           
 11335                           ;LCD_print.c: 34: I2C_LCD_Clear();
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;incstack = 0
 11339  01051C  EC20  F0B6         	call	_I2C_LCD_Clear	;wreg free
 11340                           
 11341                           ;LCD_print.c: 35: switch (print_item) {
 11342  010520  D251               	goto	l12537
 11343  010522                     l12489:
 11344                           
 11345                           ;LCD_print.c: 37: case SETTINGS:
 11346                           ;LCD_print.c: 38: I2C_LCD_SetCursor(0, 0);
 11347  010522  0E00               	movlw	0
 11348  010524  0100               	movlb	0	; () banked
 11349  010526  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11350  010528  0E00               	movlw	0
 11351  01052A  ECBE  F0B4         	call	_I2C_LCD_SetCursor
 11352                           
 11353                           ;LCD_print.c: 39: I2C_LCD_Puts(display_char[0]);
 11354  01052E  0E15               	movlw	low _display_char
 11355  010530  0100               	movlb	0	; () banked
 11356  010532  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11357  010534  0E02               	movlw	high _display_char
 11358  010536  0100               	movlb	0	; () banked
 11359  010538  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11360  01053A  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11361                           
 11362                           ;LCD_print.c: 40: I2C_LCD_SetCursor(0, 1);
 11363  01053E  0E01               	movlw	1
 11364  010540  0100               	movlb	0	; () banked
 11365  010542  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11366  010544  0E00               	movlw	0
 11367  010546  ECBE  F0B4         	call	_I2C_LCD_SetCursor
 11368                           
 11369                           ;LCD_print.c: 41: I2C_LCD_Puts(display_char[1]);
 11370  01054A  0E29               	movlw	low (_display_char+20)
 11371  01054C  0100               	movlb	0	; () banked
 11372  01054E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11373  010550  0E02               	movlw	high (_display_char+20)
 11374  010552  0100               	movlb	0	; () banked
 11375  010554  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11376  010556  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11377                           
 11378                           ;LCD_print.c: 42: break;
 11379  01055A  0012               	return	
 11380  01055C                     l12495:
 11381                           
 11382                           ;LCD_print.c: 44: {
 11383                           ;LCD_print.c: 45: char str[2][20];
 11384                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11385  01055C  0E7A               	movlw	low _now
 11386  01055E  0100               	movlb	0	; () banked
 11387  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11388  010562  0E01               	movlw	high _now
 11389  010564  0100               	movlb	0	; () banked
 11390  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11391  010568  0E92               	movlw	low display_LCD@str
 11392  01056A  0100               	movlb	0	; () banked
 11393  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11394  01056E  0E01               	movlw	high display_LCD@str
 11395  010570  0100               	movlb	0	; () banked
 11396  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11397  010574  0EA6               	movlw	low (display_LCD@str+20)
 11398  010576  0100               	movlb	0	; () banked
 11399  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11400  01057A  0E01               	movlw	high (display_LCD@str+20)
 11401  01057C  0100               	movlb	0	; () banked
 11402  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11403  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 11404                           
 11405                           ;LCD_print.c: 47: I2C_LCD_SetCursor(0, 0);
 11406  010584  0E00               	movlw	0
 11407  010586  0100               	movlb	0	; () banked
 11408  010588  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11409  01058A  0E00               	movlw	0
 11410  01058C  ECBE  F0B4         	call	_I2C_LCD_SetCursor
 11411                           
 11412                           ;LCD_print.c: 48: I2C_LCD_Puts(str[0]);
 11413  010590  0E92               	movlw	low display_LCD@str
 11414  010592  0100               	movlb	0	; () banked
 11415  010594  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11416  010596  0E01               	movlw	high display_LCD@str
 11417  010598  0100               	movlb	0	; () banked
 11418  01059A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11419  01059C  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11420                           
 11421                           ;LCD_print.c: 49: I2C_LCD_SetCursor(0, 1);
 11422  0105A0  0E01               	movlw	1
 11423  0105A2  0100               	movlb	0	; () banked
 11424  0105A4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11425  0105A6  0E00               	movlw	0
 11426  0105A8  ECBE  F0B4         	call	_I2C_LCD_SetCursor
 11427                           
 11428                           ;LCD_print.c: 50: I2C_LCD_Puts(str[1]);
 11429  0105AC  0EA6               	movlw	low (display_LCD@str+20)
 11430  0105AE  0100               	movlb	0	; () banked
 11431  0105B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11432  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11433  0105B4  0100               	movlb	0	; () banked
 11434  0105B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11435  0105B8  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11436                           
 11437                           ;LCD_print.c: 51: }
 11438                           ;LCD_print.c: 52: break;
 11439  0105BC  0012               	return	
 11440  0105BE                     l12505:
 11441                           
 11442                           ;LCD_print.c: 54: {
 11443                           ;LCD_print.c: 55: char str[20];
 11444                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11445                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11446                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11447                           ;LCD_print.c: 59: };
 11448                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11449                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11450                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11451  0105BE  0EBA               	movlw	low display_LCD@str_5583
 11452  0105C0  0100               	movlb	0	; () banked
 11453  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11454  0105C4  0E01               	movlw	high display_LCD@str_5583
 11455  0105C6  0100               	movlb	0	; () banked
 11456  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11457  0105CA  0EB7               	movlw	low STR_70
 11458  0105CC  0100               	movlb	0	; () banked
 11459  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11460  0105D0  0EFF               	movlw	high STR_70
 11461  0105D2  0100               	movlb	0	; () banked
 11462  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11463  0105D6  0100               	movlb	0	; () banked
 11464  0105D8  51FB               	movf	_print_port& (0+255),w,b
 11465  0105DA  0D17               	mullw	23
 11466  0105DC  0E16               	movlw	22
 11467  0105DE  26F3               	addwf	prodl,f,c
 11468  0105E0  0E00               	movlw	0
 11469  0105E2  22F4               	addwfc	prodh,f,c
 11470  0105E4  0E35               	movlw	low _port
 11471  0105E6  24F3               	addwf	prodl,w,c
 11472  0105E8  6ED9               	movwf	fsr2l,c
 11473  0105EA  0E01               	movlw	high _port
 11474  0105EC  20F4               	addwfc	prodh,w,c
 11475  0105EE  6EDA               	movwf	fsr2h,c
 11476  0105F0  0101               	movlb	1	; () banked
 11477  0105F2  A0DF               	btfss	indf2,0,c
 11478  0105F4  D004               	goto	u14380
 11479  0105F6  0100               	movlb	0	; () banked
 11480  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11481  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11482  0105FC  D002               	goto	u14388
 11483  0105FE                     u14380:
 11484  0105FE  0100               	movlb	0	; () banked
 11485  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11486  010602                     u14388:
 11487  010602  0100               	movlb	0	; () banked
 11488  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11489  010606  0D3C               	mullw	60
 11490  010608  0E81               	movlw	low display_LCD@port_char
 11491  01060A  0100               	movlb	0	; () banked
 11492  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11493  01060E  0EFA               	movlw	high display_LCD@port_char
 11494  010610  0100               	movlb	0	; () banked
 11495  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11496  010614  50F3               	movf	prodl,w,c
 11497  010616  0100               	movlb	0	; () banked
 11498  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11499  01061A  50F4               	movf	prodh,w,c
 11500  01061C  0100               	movlb	0	; () banked
 11501  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11502  010620  0100               	movlb	0	; () banked
 11503  010622  51FB               	movf	_print_port& (0+255),w,b
 11504  010624  0D14               	mullw	20
 11505  010626  50F3               	movf	prodl,w,c
 11506  010628  0100               	movlb	0	; () banked
 11507  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11508  01062C  0100               	movlb	0	; () banked
 11509  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11510  010630  50F4               	movf	prodh,w,c
 11511  010632  0100               	movlb	0	; () banked
 11512  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11513  010636  0100               	movlb	0	; () banked
 11514  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11515  01063A  0100               	movlb	0	; () banked
 11516  01063C  51FB               	movf	_print_port& (0+255),w,b
 11517  01063E  0D17               	mullw	23
 11518  010640  0E06               	movlw	6
 11519  010642  26F3               	addwf	prodl,f,c
 11520  010644  0E00               	movlw	0
 11521  010646  22F4               	addwfc	prodh,f,c
 11522  010648  0E35               	movlw	low _port
 11523  01064A  24F3               	addwf	prodl,w,c
 11524  01064C  6ED9               	movwf	fsr2l,c
 11525  01064E  0E01               	movlw	high _port
 11526  010650  20F4               	addwfc	prodh,w,c
 11527  010652  6EDA               	movwf	fsr2h,c
 11528  010654  0E01               	movlw	1
 11529  010656  50DB               	movf	plusw2,w,c
 11530  010658  E104               	bnz	u14391
 11531  01065A  0E65               	movlw	101
 11532  01065C  5CDE               	subwf	postinc2,w,c
 11533  01065E  A0D8               	btfss	status,0,c
 11534  010660  D002               	goto	u14390
 11535  010662                     u14391:
 11536  010662  0E01               	movlw	1
 11537  010664  D001               	goto	u14400
 11538  010666                     u14390:
 11539  010666  0E00               	movlw	0
 11540  010668                     u14400:
 11541  010668  0D05               	mullw	5
 11542  01066A  0ED2               	movlw	low display_LCD@onoff
 11543  01066C  24F3               	addwf	prodl,w,c
 11544  01066E  0100               	movlb	0	; () banked
 11545  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11546  010672  0EFB               	movlw	high display_LCD@onoff
 11547  010674  20F4               	addwfc	prodh,w,c
 11548  010676  0100               	movlb	0	; () banked
 11549  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11550  01067A  EC00  F080         	call	_sprintf	;wreg free
 11551                           
 11552                           ;LCD_print.c: 63: I2C_LCD_SetCursor(0, 0);
 11553  01067E  0E00               	movlw	0
 11554  010680  0100               	movlb	0	; () banked
 11555  010682  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11556  010684  0E00               	movlw	0
 11557  010686  ECBE  F0B4         	call	_I2C_LCD_SetCursor
 11558                           
 11559                           ;LCD_print.c: 64: I2C_LCD_Puts(str);
 11560  01068A  0EBA               	movlw	low display_LCD@str_5583
 11561  01068C  0100               	movlb	0	; () banked
 11562  01068E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11563  010690  0E01               	movlw	high display_LCD@str_5583
 11564  010692  0100               	movlb	0	; () banked
 11565  010694  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11566  010696  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11567                           
 11568                           ;LCD_print.c: 65: switch (data_item) {
 11569  01069A  D17B               	goto	l12529
 11570  01069C                     l12511:
 11571                           
 11572                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11573  01069C  0EBA               	movlw	low display_LCD@str_5583
 11574  01069E  0100               	movlb	0	; () banked
 11575  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11576  0106A2  0E01               	movlw	high display_LCD@str_5583
 11577  0106A4  0100               	movlb	0	; () banked
 11578  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11579  0106A8  0E3D               	movlw	low STR_71
 11580  0106AA  0100               	movlb	0	; () banked
 11581  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11582  0106AE  0EFF               	movlw	high STR_71
 11583  0106B0  0100               	movlb	0	; () banked
 11584  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11585  0106B4  0100               	movlb	0	; () banked
 11586  0106B6  51FB               	movf	_print_port& (0+255),w,b
 11587  0106B8  0D17               	mullw	23
 11588  0106BA  0E06               	movlw	6
 11589  0106BC  26F3               	addwf	prodl,f,c
 11590  0106BE  0E00               	movlw	0
 11591  0106C0  22F4               	addwfc	prodh,f,c
 11592  0106C2  0E35               	movlw	low _port
 11593  0106C4  24F3               	addwf	prodl,w,c
 11594  0106C6  6ED9               	movwf	fsr2l,c
 11595  0106C8  0E01               	movlw	high _port
 11596  0106CA  20F4               	addwfc	prodh,w,c
 11597  0106CC  6EDA               	movwf	fsr2h,c
 11598  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11599  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11600  0106D6  0E03               	movlw	3
 11601  0106D8  0100               	movlb	0	; () banked
 11602  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11603  0106DC  0EE8               	movlw	232
 11604  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11605  0106E0  EC39  F0AF         	call	___lwdiv	;wreg free
 11606  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11607  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11608  0106EC  0100               	movlb	0	; () banked
 11609  0106EE  51FB               	movf	_print_port& (0+255),w,b
 11610  0106F0  0D17               	mullw	23
 11611  0106F2  0E06               	movlw	6
 11612  0106F4  26F3               	addwf	prodl,f,c
 11613  0106F6  0E00               	movlw	0
 11614  0106F8  22F4               	addwfc	prodh,f,c
 11615  0106FA  0E35               	movlw	low _port
 11616  0106FC  24F3               	addwf	prodl,w,c
 11617  0106FE  6ED9               	movwf	fsr2l,c
 11618  010700  0E01               	movlw	high _port
 11619  010702  20F4               	addwfc	prodh,w,c
 11620  010704  6EDA               	movwf	fsr2h,c
 11621  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11622  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11623  01070E  0E03               	movlw	3
 11624  010710  0100               	movlb	0	; () banked
 11625  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11626  010714  0EE8               	movlw	232
 11627  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11628  010718  EC8E  F0B1         	call	___lwmod	;wreg free
 11629  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11630  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11631  010724  EC00  F080         	call	_sprintf	;wreg free
 11632                           
 11633                           ;LCD_print.c: 68: break;
 11634  010728  D13E               	goto	l12531
 11635  01072A                     l12513:
 11636                           
 11637                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11638  01072A  0EBA               	movlw	low display_LCD@str_5583
 11639  01072C  0100               	movlb	0	; () banked
 11640  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11641  010730  0E01               	movlw	high display_LCD@str_5583
 11642  010732  0100               	movlb	0	; () banked
 11643  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11644  010736  0E44               	movlw	low (STR_68+15)
 11645  010738  0100               	movlb	0	; () banked
 11646  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11647  01073C  0EFE               	movlw	high (STR_68+15)
 11648  01073E  0100               	movlb	0	; () banked
 11649  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11650  010742  0100               	movlb	0	; () banked
 11651  010744  51FB               	movf	_print_port& (0+255),w,b
 11652  010746  0D17               	mullw	23
 11653  010748  0E0C               	movlw	12
 11654  01074A  26F3               	addwf	prodl,f,c
 11655  01074C  0E00               	movlw	0
 11656  01074E  22F4               	addwfc	prodh,f,c
 11657  010750  0E35               	movlw	low _port
 11658  010752  24F3               	addwf	prodl,w,c
 11659  010754  6ED9               	movwf	fsr2l,c
 11660  010756  0E01               	movlw	high _port
 11661  010758  20F4               	addwfc	prodh,w,c
 11662  01075A  6EDA               	movwf	fsr2h,c
 11663  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11664  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11665  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11666  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11667  01076C  EC00  F080         	call	_sprintf	;wreg free
 11668                           
 11669                           ;LCD_print.c: 71: break;
 11670  010770  D11A               	goto	l12531
 11671  010772                     l12515:
 11672                           
 11673                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11674                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11675                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11676                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11677                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11678  010772  0E10               	movlw	16
 11679  010774  0100               	movlb	0	; () banked
 11680  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11681  010778  0E0E               	movlw	14
 11682  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11683  01077C  0E00               	movlw	0
 11684  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11685  010780  0E00               	movlw	0
 11686  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11687  010784  0100               	movlb	0	; () banked
 11688  010786  51FB               	movf	_print_port& (0+255),w,b
 11689  010788  0D17               	mullw	23
 11690  01078A  0E10               	movlw	16
 11691  01078C  26F3               	addwf	prodl,f,c
 11692  01078E  0E00               	movlw	0
 11693  010790  22F4               	addwfc	prodh,f,c
 11694  010792  0E35               	movlw	low _port
 11695  010794  24F3               	addwf	prodl,w,c
 11696  010796  6ED9               	movwf	fsr2l,c
 11697  010798  0E01               	movlw	high _port
 11698  01079A  20F4               	addwfc	prodh,w,c
 11699  01079C  6EDA               	movwf	fsr2h,c
 11700  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11701  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11702  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11703  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11704  0107AE  ECCB  F0A9         	call	___lldiv	;wreg free
 11705  0107B2  C060  F1CE         	movff	?___lldiv,_display_LCD$7034
 11706  0107B6  C061  F1CF         	movff	?___lldiv+1,_display_LCD$7034+1
 11707  0107BA  C062  F1D0         	movff	?___lldiv+2,_display_LCD$7034+2
 11708  0107BE  C063  F1D1         	movff	?___lldiv+3,_display_LCD$7034+3
 11709                           
 11710                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11711                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11712                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11713                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11714                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11715  0107C2  C1CE  F060         	movff	_display_LCD$7034,___lldiv@dividend
 11716  0107C6  C1CF  F061         	movff	_display_LCD$7034+1,___lldiv@dividend+1
 11717  0107CA  C1D0  F062         	movff	_display_LCD$7034+2,___lldiv@dividend+2
 11718  0107CE  C1D1  F063         	movff	_display_LCD$7034+3,___lldiv@dividend+3
 11719  0107D2  0E18               	movlw	24
 11720  0107D4  0100               	movlb	0	; () banked
 11721  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11722  0107D8  0E00               	movlw	0
 11723  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11724  0107DC  0E00               	movlw	0
 11725  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11726  0107E0  0E00               	movlw	0
 11727  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11728  0107E4  ECCB  F0A9         	call	___lldiv	;wreg free
 11729  0107E8  C060  F1D2         	movff	?___lldiv,_display_LCD$7035
 11730  0107EC  C061  F1D3         	movff	?___lldiv+1,_display_LCD$7035+1
 11731  0107F0  C062  F1D4         	movff	?___lldiv+2,_display_LCD$7035+2
 11732  0107F4  C063  F1D5         	movff	?___lldiv+3,_display_LCD$7035+3
 11733                           
 11734                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11735                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11736                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11737                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11738                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11739  0107F8  0E10               	movlw	16
 11740  0107FA  0100               	movlb	0	; () banked
 11741  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11742  0107FE  0E0E               	movlw	14
 11743  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11744  010802  0E00               	movlw	0
 11745  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11746  010806  0E00               	movlw	0
 11747  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11748  01080A  0100               	movlb	0	; () banked
 11749  01080C  51FB               	movf	_print_port& (0+255),w,b
 11750  01080E  0D17               	mullw	23
 11751  010810  0E10               	movlw	16
 11752  010812  26F3               	addwf	prodl,f,c
 11753  010814  0E00               	movlw	0
 11754  010816  22F4               	addwfc	prodh,f,c
 11755  010818  0E35               	movlw	low _port
 11756  01081A  24F3               	addwf	prodl,w,c
 11757  01081C  6ED9               	movwf	fsr2l,c
 11758  01081E  0E01               	movlw	high _port
 11759  010820  20F4               	addwfc	prodh,w,c
 11760  010822  6EDA               	movwf	fsr2h,c
 11761  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11762  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11763  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11764  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11765  010834  ECCB  F0A9         	call	___lldiv	;wreg free
 11766  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11767  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11768  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11769  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11770  010848  0E18               	movlw	24
 11771  01084A  0100               	movlb	0	; () banked
 11772  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11773  01084E  0E00               	movlw	0
 11774  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11775  010852  0E00               	movlw	0
 11776  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11777  010856  0E00               	movlw	0
 11778  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11779  01085A  EC32  F0AC         	call	___llmod	;wreg free
 11780  01085E  C06D  F1D6         	movff	?___llmod,_display_LCD$7036
 11781  010862  C06E  F1D7         	movff	?___llmod+1,_display_LCD$7036+1
 11782  010866  C06F  F1D8         	movff	?___llmod+2,_display_LCD$7036+2
 11783  01086A  C070  F1D9         	movff	?___llmod+3,_display_LCD$7036+3
 11784                           
 11785                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11786                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11787                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11788                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11789                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11790  01086E  0E3C               	movlw	60
 11791  010870  0100               	movlb	0	; () banked
 11792  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11793  010874  0E00               	movlw	0
 11794  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11795  010878  0E00               	movlw	0
 11796  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11797  01087C  0E00               	movlw	0
 11798  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11799  010880  0100               	movlb	0	; () banked
 11800  010882  51FB               	movf	_print_port& (0+255),w,b
 11801  010884  0D17               	mullw	23
 11802  010886  0E10               	movlw	16
 11803  010888  26F3               	addwf	prodl,f,c
 11804  01088A  0E00               	movlw	0
 11805  01088C  22F4               	addwfc	prodh,f,c
 11806  01088E  0E35               	movlw	low _port
 11807  010890  24F3               	addwf	prodl,w,c
 11808  010892  6ED9               	movwf	fsr2l,c
 11809  010894  0E01               	movlw	high _port
 11810  010896  20F4               	addwfc	prodh,w,c
 11811  010898  6EDA               	movwf	fsr2h,c
 11812  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11813  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11814  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11815  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11816  0108AA  ECCB  F0A9         	call	___lldiv	;wreg free
 11817  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11818  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11819  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11820  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11821  0108BE  0E3C               	movlw	60
 11822  0108C0  0100               	movlb	0	; () banked
 11823  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11824  0108C4  0E00               	movlw	0
 11825  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11826  0108C8  0E00               	movlw	0
 11827  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11828  0108CC  0E00               	movlw	0
 11829  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11830  0108D0  EC32  F0AC         	call	___llmod	;wreg free
 11831  0108D4  C06D  F1DA         	movff	?___llmod,_display_LCD$7037
 11832  0108D8  C06E  F1DB         	movff	?___llmod+1,_display_LCD$7037+1
 11833  0108DC  C06F  F1DC         	movff	?___llmod+2,_display_LCD$7037+2
 11834  0108E0  C070  F1DD         	movff	?___llmod+3,_display_LCD$7037+3
 11835                           
 11836                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11837                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11838                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11839                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11840                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11841  0108E4  0100               	movlb	0	; () banked
 11842  0108E6  51FB               	movf	_print_port& (0+255),w,b
 11843  0108E8  0D17               	mullw	23
 11844  0108EA  0E10               	movlw	16
 11845  0108EC  26F3               	addwf	prodl,f,c
 11846  0108EE  0E00               	movlw	0
 11847  0108F0  22F4               	addwfc	prodh,f,c
 11848  0108F2  0E35               	movlw	low _port
 11849  0108F4  24F3               	addwf	prodl,w,c
 11850  0108F6  6ED9               	movwf	fsr2l,c
 11851  0108F8  0E01               	movlw	high _port
 11852  0108FA  20F4               	addwfc	prodh,w,c
 11853  0108FC  6EDA               	movwf	fsr2h,c
 11854  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11855  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11856  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11857  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11858  01090E  0E3C               	movlw	60
 11859  010910  0100               	movlb	0	; () banked
 11860  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11861  010914  0E00               	movlw	0
 11862  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11863  010918  0E00               	movlw	0
 11864  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11865  01091C  0E00               	movlw	0
 11866  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11867  010920  EC32  F0AC         	call	___llmod	;wreg free
 11868  010924  C06D  F1DE         	movff	?___llmod,_display_LCD$7038
 11869  010928  C06E  F1DF         	movff	?___llmod+1,_display_LCD$7038+1
 11870  01092C  C06F  F1E0         	movff	?___llmod+2,_display_LCD$7038+2
 11871  010930  C070  F1E1         	movff	?___llmod+3,_display_LCD$7038+3
 11872                           
 11873                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11874                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11875                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11876                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11877                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11878  010934  0EBA               	movlw	low display_LCD@str_5583
 11879  010936  0100               	movlb	0	; () banked
 11880  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11881  01093A  0E01               	movlw	high display_LCD@str_5583
 11882  01093C  0100               	movlb	0	; () banked
 11883  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11884  010940  0E01               	movlw	low STR_73
 11885  010942  0100               	movlb	0	; () banked
 11886  010944  6F85               	movwf	sprintf@f& (0+255),b
 11887  010946  0EFE               	movlw	high STR_73
 11888  010948  0100               	movlb	0	; () banked
 11889  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11890  01094C  C1D2  F087         	movff	_display_LCD$7035,?_sprintf+4
 11891  010950  C1D3  F088         	movff	_display_LCD$7035+1,?_sprintf+5
 11892  010954  C1D4  F089         	movff	_display_LCD$7035+2,?_sprintf+6
 11893  010958  C1D5  F08A         	movff	_display_LCD$7035+3,?_sprintf+7
 11894  01095C  C1D6  F08B         	movff	_display_LCD$7036,?_sprintf+8
 11895  010960  C1D7  F08C         	movff	_display_LCD$7036+1,?_sprintf+9
 11896  010964  C1D8  F08D         	movff	_display_LCD$7036+2,?_sprintf+10
 11897  010968  C1D9  F08E         	movff	_display_LCD$7036+3,?_sprintf+11
 11898  01096C  C1DA  F08F         	movff	_display_LCD$7037,?_sprintf+12
 11899  010970  C1DB  F090         	movff	_display_LCD$7037+1,?_sprintf+13
 11900  010974  C1DC  F091         	movff	_display_LCD$7037+2,?_sprintf+14
 11901  010978  C1DD  F092         	movff	_display_LCD$7037+3,?_sprintf+15
 11902  01097C  C1DE  F093         	movff	_display_LCD$7038,?_sprintf+16
 11903  010980  C1DF  F094         	movff	_display_LCD$7038+1,?_sprintf+17
 11904  010984  C1E0  F095         	movff	_display_LCD$7038+2,?_sprintf+18
 11905  010988  C1E1  F096         	movff	_display_LCD$7038+3,?_sprintf+19
 11906  01098C  EC00  F080         	call	_sprintf	;wreg free
 11907                           
 11908                           ;LCD_print.c: 79: }
 11909                           
 11910                           ;LCD_print.c: 78: break;
 11911  010990  D00A               	goto	l12531
 11912  010992                     l12529:
 11913  010992  501D               	movf	_data_item,w,c
 11914                           
 11915                           ; Switch size 1, requested type "space"
 11916                           ; Number of cases is 3, Range of values is 0 to 2
 11917                           ; switch strategies available:
 11918                           ; Name         Instructions Cycles
 11919                           ; simple_byte           10     6 (average)
 11920                           ;	Chosen strategy is simple_byte
 11921  010994  0A00               	xorlw	0	; case 0
 11922  010996  B4D8               	btfsc	status,2,c
 11923  010998  D681               	goto	l12511
 11924  01099A  0A01               	xorlw	1	; case 1
 11925  01099C  B4D8               	btfsc	status,2,c
 11926  01099E  D6C5               	goto	l12513
 11927  0109A0  0A03               	xorlw	3	; case 2
 11928  0109A2  B4D8               	btfsc	status,2,c
 11929  0109A4  D6E6               	goto	l12515
 11930  0109A6                     l12531:
 11931                           
 11932                           ;LCD_print.c: 80: I2C_LCD_SetCursor(0, 1);
 11933  0109A6  0E01               	movlw	1
 11934  0109A8  0100               	movlb	0	; () banked
 11935  0109AA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 11936  0109AC  0E00               	movlw	0
 11937  0109AE  ECBE  F0B4         	call	_I2C_LCD_SetCursor
 11938                           
 11939                           ;LCD_print.c: 81: I2C_LCD_Puts(str);
 11940  0109B2  0EBA               	movlw	low display_LCD@str_5583
 11941  0109B4  0100               	movlb	0	; () banked
 11942  0109B6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 11943  0109B8  0E01               	movlw	high display_LCD@str_5583
 11944  0109BA  0100               	movlb	0	; () banked
 11945  0109BC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 11946  0109BE  EC58  F0AD         	call	_I2C_LCD_Puts	;wreg free
 11947                           
 11948                           ;LCD_print.c: 84: }
 11949                           
 11950                           ;LCD_print.c: 82: }
 11951                           ;LCD_print.c: 83: break;
 11952  0109C2  0012               	return	
 11953  0109C4                     l12537:
 11954  0109C4  501F               	movf	_print_item,w,c
 11955                           
 11956                           ; Switch size 1, requested type "space"
 11957                           ; Number of cases is 4, Range of values is 0 to 3
 11958                           ; switch strategies available:
 11959                           ; Name         Instructions Cycles
 11960                           ; simple_byte           13     7 (average)
 11961                           ;	Chosen strategy is simple_byte
 11962  0109C6  0A00               	xorlw	0	; case 0
 11963  0109C8  B4D8               	btfsc	status,2,c
 11964  0109CA  D5AB               	goto	l12489
 11965  0109CC  0A01               	xorlw	1	; case 1
 11966  0109CE  B4D8               	btfsc	status,2,c
 11967  0109D0  D5C5               	goto	l12495
 11968  0109D2  0A03               	xorlw	3	; case 2
 11969  0109D4  B4D8               	btfsc	status,2,c
 11970  0109D6  D5F3               	goto	l12505
 11971  0109D8  0A01               	xorlw	1	; case 3
 11972  0109DA  A4D8               	btfss	status,2,c
 11973  0109DC  0012               	return	
 11974  0109DE  D5A1               	goto	l12489
 11975  0109E0                     __end_of_display_LCD:
 11976                           	opt stack 0
 11977                           tblptru	equ	0xFF8
 11978                           tblptrh	equ	0xFF7
 11979                           tblptrl	equ	0xFF6
 11980                           tablat	equ	0xFF5
 11981                           prodh	equ	0xFF4
 11982                           prodl	equ	0xFF3
 11983                           intcon	equ	0xFF2
 11984                           postinc0	equ	0xFEE
 11985                           wreg	equ	0xFE8
 11986                           indf1	equ	0xFE7
 11987                           postinc1	equ	0xFE6
 11988                           postdec1	equ	0xFE5
 11989                           fsr1h	equ	0xFE2
 11990                           fsr1l	equ	0xFE1
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           plusw2	equ	0xFDB
 11995                           fsr2h	equ	0xFDA
 11996                           fsr2l	equ	0xFD9
 11997                           status	equ	0xFD8
 11998                           
 11999 ;; *************** function _display_time_1602 *****************
 12000 ;; Defined at:
 12001 ;;		line 243 in file "../My_library/My_RTCC.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;  tm              2   83[BANK0 ] PTR struct .
 12004 ;;		 -> now(14), 
 12005 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 12006 ;;		 -> display_LCD@str(40), 
 12007 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 12008 ;;		 -> display_LCD@str(40), 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;		None
 12011 ;; Return value:  Size  Location     Type
 12012 ;;		None               void
 12013 ;; Registers used:
 12014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12020 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12023 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12024 ;;Total ram usage:        7 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:   15
 12027 ;; This function calls:
 12028 ;;		_RTCC_from_RTCC
 12029 ;;		_display_dec
 12030 ;;		_strcat
 12031 ;;		_strcpy
 12032 ;; This function is called by:
 12033 ;;		_display_LCD
 12034 ;; This function uses a non-reentrant model
 12035 ;;
 12036                           
 12037                           	psect	text32
 12038  0113BE                     __ptext32:
 12039                           	opt stack 0
 12040  0113BE                     _display_time_1602:
 12041                           	opt stack 13
 12042                           
 12043                           ;My_RTCC.c: 244: RTCC_from_RTCC(&now);
 12044                           
 12045                           ;incstack = 0
 12046  0113BE  0E7A               	movlw	low _now
 12047  0113C0  0100               	movlb	0	; () banked
 12048  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12049  0113C4  0E01               	movlw	high _now
 12050  0113C6  0100               	movlb	0	; () banked
 12051  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12052  0113CA  EC2D  F0B6         	call	_RTCC_from_RTCC	;wreg free
 12053                           
 12054                           ;My_RTCC.c: 246: strcpy(line0, "");
 12055  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 12056  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 12057  0113D6  0EE6               	movlw	low (STR_19+3)
 12058  0113D8  0100               	movlb	0	; () banked
 12059  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 12060  0113DC  0EFF               	movlw	high (STR_19+3)
 12061  0113DE  0100               	movlb	0	; () banked
 12062  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12063  0113E2  ECD6  F0B3         	call	_strcpy	;wreg free
 12064                           
 12065                           ;My_RTCC.c: 247: display_dec(line0, 20, tm->edit.flag.YY);
 12066  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12067  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12068  0113EE  0E14               	movlw	20
 12069  0113F0  0100               	movlb	0	; () banked
 12070  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 12071  0113F4  0100               	movlb	0	; () banked
 12072  0113F6  EE20 F00D          	lfsr	2,13
 12073  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12074  0113FC  26D9               	addwf	fsr2l,f,c
 12075  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12076  011400  22DA               	addwfc	fsr2h,f,c
 12077  011402  0E00               	movlw	0
 12078  011404  BADF               	btfsc	indf2,5,c
 12079  011406  0E01               	movlw	1
 12080  011408  0100               	movlb	0	; () banked
 12081  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 12082  01140C  EC8F  F0B0         	call	_display_dec	;wreg free
 12083                           
 12084                           ;My_RTCC.c: 248: display_dec(line0, tm->YY, tm->edit.flag.YY);
 12085  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12086  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12087  011418  0100               	movlb	0	; () banked
 12088  01141A  EE20 F00A          	lfsr	2,10
 12089  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12090  011420  26D9               	addwf	fsr2l,f,c
 12091  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12092  011424  22DA               	addwfc	fsr2h,f,c
 12093  011426  50DF               	movf	indf2,w,c
 12094  011428  0100               	movlb	0	; () banked
 12095  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 12096  01142C  0100               	movlb	0	; () banked
 12097  01142E  EE20 F00D          	lfsr	2,13
 12098  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12099  011434  26D9               	addwf	fsr2l,f,c
 12100  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12101  011438  22DA               	addwfc	fsr2h,f,c
 12102  01143A  0E00               	movlw	0
 12103  01143C  BADF               	btfsc	indf2,5,c
 12104  01143E  0E01               	movlw	1
 12105  011440  0100               	movlb	0	; () banked
 12106  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 12107  011444  EC8F  F0B0         	call	_display_dec	;wreg free
 12108                           
 12109                           ;My_RTCC.c: 249: strcat(line0, "/");
 12110  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12111  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12112  011450  0EFB               	movlw	low STR_4
 12113  011452  0100               	movlb	0	; () banked
 12114  011454  6F62               	movwf	strcat@from& (0+255),b
 12115  011456  0EFF               	movlw	high STR_4
 12116  011458  0100               	movlb	0	; () banked
 12117  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12118  01145C  ECEF  F0B1         	call	_strcat	;wreg free
 12119                           
 12120                           ;My_RTCC.c: 250: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12121  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12122  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12123  011468  0100               	movlb	0	; () banked
 12124  01146A  EE20 F009          	lfsr	2,9
 12125  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12126  011470  26D9               	addwf	fsr2l,f,c
 12127  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12128  011474  22DA               	addwfc	fsr2h,f,c
 12129  011476  50DF               	movf	indf2,w,c
 12130  011478  0100               	movlb	0	; () banked
 12131  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 12132  01147C  0100               	movlb	0	; () banked
 12133  01147E  EE20 F00D          	lfsr	2,13
 12134  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12135  011484  26D9               	addwf	fsr2l,f,c
 12136  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12137  011488  22DA               	addwfc	fsr2h,f,c
 12138  01148A  0E00               	movlw	0
 12139  01148C  B8DF               	btfsc	indf2,4,c
 12140  01148E  0E01               	movlw	1
 12141  011490  0100               	movlb	0	; () banked
 12142  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 12143  011494  EC8F  F0B0         	call	_display_dec	;wreg free
 12144                           
 12145                           ;My_RTCC.c: 251: strcat(line0, "/");
 12146  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12147  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12148  0114A0  0EFB               	movlw	low STR_4
 12149  0114A2  0100               	movlb	0	; () banked
 12150  0114A4  6F62               	movwf	strcat@from& (0+255),b
 12151  0114A6  0EFF               	movlw	high STR_4
 12152  0114A8  0100               	movlb	0	; () banked
 12153  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12154  0114AC  ECEF  F0B1         	call	_strcat	;wreg free
 12155                           
 12156                           ;My_RTCC.c: 252: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12157  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12158  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12159  0114B8  0100               	movlb	0	; () banked
 12160  0114BA  EE20 F008          	lfsr	2,8
 12161  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12162  0114C0  26D9               	addwf	fsr2l,f,c
 12163  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12164  0114C4  22DA               	addwfc	fsr2h,f,c
 12165  0114C6  50DF               	movf	indf2,w,c
 12166  0114C8  0100               	movlb	0	; () banked
 12167  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 12168  0114CC  0100               	movlb	0	; () banked
 12169  0114CE  EE20 F00D          	lfsr	2,13
 12170  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12171  0114D4  26D9               	addwf	fsr2l,f,c
 12172  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12173  0114D8  22DA               	addwfc	fsr2h,f,c
 12174  0114DA  0E00               	movlw	0
 12175  0114DC  B6DF               	btfsc	indf2,3,c
 12176  0114DE  0E01               	movlw	1
 12177  0114E0  0100               	movlb	0	; () banked
 12178  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 12179  0114E4  EC8F  F0B0         	call	_display_dec	;wreg free
 12180                           
 12181                           ;My_RTCC.c: 253: strcat(line0, "(");
 12182  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12183  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12184  0114F0  0EF7               	movlw	low STR_13
 12185  0114F2  0100               	movlb	0	; () banked
 12186  0114F4  6F62               	movwf	strcat@from& (0+255),b
 12187  0114F6  0EFF               	movlw	high STR_13
 12188  0114F8  0100               	movlb	0	; () banked
 12189  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12190  0114FC  ECEF  F0B1         	call	_strcat	;wreg free
 12191                           
 12192                           ;My_RTCC.c: 254: strcat(line0, weekday_3char[tm->EE]);
 12193  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12194  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12195  011508  0100               	movlb	0	; () banked
 12196  01150A  EE20 F007          	lfsr	2,7
 12197  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12198  011510  26D9               	addwf	fsr2l,f,c
 12199  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12200  011514  22DA               	addwfc	fsr2h,f,c
 12201  011516  50DF               	movf	indf2,w,c
 12202  011518  0100               	movlb	0	; () banked
 12203  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 12204  01151C  0100               	movlb	0	; () banked
 12205  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 12206  011520  0D04               	mullw	4
 12207  011522  0EA4               	movlw	low _weekday_3char
 12208  011524  24F3               	addwf	prodl,w,c
 12209  011526  0100               	movlb	0	; () banked
 12210  011528  6F62               	movwf	strcat@from& (0+255),b
 12211  01152A  0EFB               	movlw	high _weekday_3char
 12212  01152C  20F4               	addwfc	prodh,w,c
 12213  01152E  0100               	movlb	0	; () banked
 12214  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 12215  011532  ECEF  F0B1         	call	_strcat	;wreg free
 12216                           
 12217                           ;My_RTCC.c: 255: strcat(line0, ")");
 12218  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12219  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12220  01153E  0E8F               	movlw	low (STR_118+5)
 12221  011540  0100               	movlb	0	; () banked
 12222  011542  6F62               	movwf	strcat@from& (0+255),b
 12223  011544  0EFF               	movlw	high (STR_118+5)
 12224  011546  0100               	movlb	0	; () banked
 12225  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 12226  01154A  ECEF  F0B1         	call	_strcat	;wreg free
 12227                           
 12228                           ;My_RTCC.c: 257: strcpy(line1, "        ");
 12229  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12230  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12231  011556  0E79               	movlw	low STR_15
 12232  011558  0100               	movlb	0	; () banked
 12233  01155A  6F62               	movwf	strcpy@from& (0+255),b
 12234  01155C  0EFF               	movlw	high STR_15
 12235  01155E  0100               	movlb	0	; () banked
 12236  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12237  011562  ECD6  F0B3         	call	_strcpy	;wreg free
 12238                           
 12239                           ;My_RTCC.c: 258: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12240  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12241  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12242  01156E  0100               	movlb	0	; () banked
 12243  011570  EE20 F006          	lfsr	2,6
 12244  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12245  011576  26D9               	addwf	fsr2l,f,c
 12246  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12247  01157A  22DA               	addwfc	fsr2h,f,c
 12248  01157C  50DF               	movf	indf2,w,c
 12249  01157E  0100               	movlb	0	; () banked
 12250  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 12251  011582  0100               	movlb	0	; () banked
 12252  011584  EE20 F00D          	lfsr	2,13
 12253  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12254  01158A  26D9               	addwf	fsr2l,f,c
 12255  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12256  01158E  22DA               	addwfc	fsr2h,f,c
 12257  011590  0E00               	movlw	0
 12258  011592  B4DF               	btfsc	indf2,2,c
 12259  011594  0E01               	movlw	1
 12260  011596  0100               	movlb	0	; () banked
 12261  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 12262  01159A  EC8F  F0B0         	call	_display_dec	;wreg free
 12263                           
 12264                           ;My_RTCC.c: 259: if (tm->colon) strcat(line1, ":");
 12265  01159E  0100               	movlb	0	; () banked
 12266  0115A0  EE20 F00B          	lfsr	2,11
 12267  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12268  0115A6  26D9               	addwf	fsr2l,f,c
 12269  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12270  0115AA  22DA               	addwfc	fsr2h,f,c
 12271  0115AC  50DF               	movf	indf2,w,c
 12272  0115AE  B4D8               	btfsc	status,2,c
 12273  0115B0  D00D               	goto	l11637
 12274                           
 12275                           ; BSR set to: 0
 12276  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12277  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12278  0115BA  0EFD               	movlw	low STR_7
 12279  0115BC  0100               	movlb	0	; () banked
 12280  0115BE  6F62               	movwf	strcat@from& (0+255),b
 12281  0115C0  0EFF               	movlw	high STR_7
 12282  0115C2  0100               	movlb	0	; () banked
 12283  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12284  0115C6  ECEF  F0B1         	call	_strcat	;wreg free
 12285  0115CA  D00C               	goto	l11639
 12286  0115CC                     l11637:
 12287                           
 12288                           ;My_RTCC.c: 260: else strcat(line1, " ");
 12289  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12290  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12291  0115D4  0E80               	movlw	low (STR_15+7)
 12292  0115D6  0100               	movlb	0	; () banked
 12293  0115D8  6F62               	movwf	strcat@from& (0+255),b
 12294  0115DA  0EFF               	movlw	high (STR_15+7)
 12295  0115DC  0100               	movlb	0	; () banked
 12296  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12297  0115E0  ECEF  F0B1         	call	_strcat	;wreg free
 12298  0115E4                     l11639:
 12299                           
 12300                           ;My_RTCC.c: 261: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12301  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12302  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12303  0115EC  0100               	movlb	0	; () banked
 12304  0115EE  EE20 F005          	lfsr	2,5
 12305  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12306  0115F4  26D9               	addwf	fsr2l,f,c
 12307  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12308  0115F8  22DA               	addwfc	fsr2h,f,c
 12309  0115FA  50DF               	movf	indf2,w,c
 12310  0115FC  0100               	movlb	0	; () banked
 12311  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 12312  011600  0100               	movlb	0	; () banked
 12313  011602  EE20 F00D          	lfsr	2,13
 12314  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12315  011608  26D9               	addwf	fsr2l,f,c
 12316  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12317  01160C  22DA               	addwfc	fsr2h,f,c
 12318  01160E  0E00               	movlw	0
 12319  011610  B2DF               	btfsc	indf2,1,c
 12320  011612  0E01               	movlw	1
 12321  011614  0100               	movlb	0	; () banked
 12322  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 12323  011618  EC8F  F0B0         	call	_display_dec	;wreg free
 12324                           
 12325                           ;My_RTCC.c: 262: strcat(line1, "-");
 12326  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12327  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12328  011624  0EF9               	movlw	low STR_9
 12329  011626  0100               	movlb	0	; () banked
 12330  011628  6F62               	movwf	strcat@from& (0+255),b
 12331  01162A  0EFF               	movlw	high STR_9
 12332  01162C  0100               	movlb	0	; () banked
 12333  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12334  011630  ECEF  F0B1         	call	_strcat	;wreg free
 12335                           
 12336                           ;My_RTCC.c: 263: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12337  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12338  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12339  01163C  0100               	movlb	0	; () banked
 12340  01163E  EE20 F004          	lfsr	2,4
 12341  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12342  011644  26D9               	addwf	fsr2l,f,c
 12343  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12344  011648  22DA               	addwfc	fsr2h,f,c
 12345  01164A  50DF               	movf	indf2,w,c
 12346  01164C  0100               	movlb	0	; () banked
 12347  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 12348  011650  0100               	movlb	0	; () banked
 12349  011652  EE20 F00D          	lfsr	2,13
 12350  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12351  011658  26D9               	addwf	fsr2l,f,c
 12352  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12353  01165C  22DA               	addwfc	fsr2h,f,c
 12354  01165E  0E00               	movlw	0
 12355  011660  B0DF               	btfsc	indf2,0,c
 12356  011662  0E01               	movlw	1
 12357  011664  0100               	movlb	0	; () banked
 12358  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 12359  011668  EC8F  F0B0         	call	_display_dec	;wreg free
 12360  01166C  0012               	return		;funcret
 12361  01166E                     __end_of_display_time_1602:
 12362                           	opt stack 0
 12363                           tblptru	equ	0xFF8
 12364                           tblptrh	equ	0xFF7
 12365                           tblptrl	equ	0xFF6
 12366                           tablat	equ	0xFF5
 12367                           prodh	equ	0xFF4
 12368                           prodl	equ	0xFF3
 12369                           intcon	equ	0xFF2
 12370                           postinc0	equ	0xFEE
 12371                           wreg	equ	0xFE8
 12372                           indf1	equ	0xFE7
 12373                           postinc1	equ	0xFE6
 12374                           postdec1	equ	0xFE5
 12375                           fsr1h	equ	0xFE2
 12376                           fsr1l	equ	0xFE1
 12377                           indf2	equ	0xFDF
 12378                           postinc2	equ	0xFDE
 12379                           postdec2	equ	0xFDD
 12380                           plusw2	equ	0xFDB
 12381                           fsr2h	equ	0xFDA
 12382                           fsr2l	equ	0xFD9
 12383                           status	equ	0xFD8
 12384                           
 12385 ;; *************** function _strcpy *****************
 12386 ;; Defined at:
 12387 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12390 ;;		 -> settings_integrating_reset@str_6139(20), settings_integrating_reset@str(20), settings_led_indicator@str_6122(20)
      +, settings_led_indicator@str(20), 
 12391 ;;		 -> settings_auto_stop@str_6105(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12392 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12393 ;;		 -> STR_100(6), STR_99(6), STR_97(6), STR_96(6), 
 12394 ;;		 -> STR_92(6), STR_91(6), STR_89(6), STR_88(6), 
 12395 ;;		 -> STR_84(6), STR_83(6), STR_81(6), STR_80(6), 
 12396 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12399 ;;		 -> settings_integrating_reset@str_6139(20), settings_integrating_reset@str(20), settings_led_indicator@str_6122(20)
      +, settings_led_indicator@str(20), 
 12400 ;;		 -> settings_auto_stop@str_6105(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  2    0[BANK0 ] PTR unsigned char 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12413 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12414 ;;Total ram usage:        6 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:   11
 12417 ;; This function calls:
 12418 ;;		Nothing
 12419 ;; This function is called by:
 12420 ;;		_display_time_1602
 12421 ;;		_settings_auto_stop
 12422 ;;		_settings_led_indicator
 12423 ;;		_settings_integrating_reset
 12424 ;;		_display_time_0802
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text33
 12429  0167AC                     __ptext33:
 12430                           	opt stack 0
 12431  0167AC                     _strcpy:
 12432                           	opt stack 16
 12433                           
 12434                           ;incstack = 0
 12435  0167AC  C060  F064         	movff	strcpy@to,strcpy@cp
 12436  0167B0  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12437  0167B4  D006               	goto	l11127
 12438  0167B6                     l11125:
 12439  0167B6  0100               	movlb	0	; () banked
 12440  0167B8  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12441  0167BA  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12442  0167BC  0100               	movlb	0	; () banked
 12443  0167BE  4B62               	infsnz	strcpy@from& (0+255),f,b
 12444  0167C0  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12445  0167C2                     l11127:
 12446  0167C2  C062  FFF6         	movff	strcpy@from,tblptrl
 12447  0167C6  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12448  0167CA                     	if	0	;tblptru may be non-zero
 12449  0167CA                     	endif
 12450  0167CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12451  0167CA  0E00               	movlw	low (__mediumconst shr (0+16))
 12452  0167CC  6EF8               	movwf	tblptru,c
 12453  0167CE                     	endif
 12454  0167CE  C064  FFD9         	movff	strcpy@cp,fsr2l
 12455  0167D2  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12456  0167D6  0008               	tblrd		*
 12457  0167D8  CFF5 FFDF          	movff	tablat,indf2
 12458  0167DC  50DF               	movf	indf2,w,c
 12459  0167DE  B4D8               	btfsc	status,2,c
 12460  0167E0  0012               	return	
 12461  0167E2  D7E9               	goto	l11125
 12462  0167E4                     __end_of_strcpy:
 12463                           	opt stack 0
 12464                           tblptru	equ	0xFF8
 12465                           tblptrh	equ	0xFF7
 12466                           tblptrl	equ	0xFF6
 12467                           tablat	equ	0xFF5
 12468                           prodh	equ	0xFF4
 12469                           prodl	equ	0xFF3
 12470                           intcon	equ	0xFF2
 12471                           postinc0	equ	0xFEE
 12472                           wreg	equ	0xFE8
 12473                           indf1	equ	0xFE7
 12474                           postinc1	equ	0xFE6
 12475                           postdec1	equ	0xFE5
 12476                           fsr1h	equ	0xFE2
 12477                           fsr1l	equ	0xFE1
 12478                           indf2	equ	0xFDF
 12479                           postinc2	equ	0xFDE
 12480                           postdec2	equ	0xFDD
 12481                           plusw2	equ	0xFDB
 12482                           fsr2h	equ	0xFDA
 12483                           fsr2l	equ	0xFD9
 12484                           status	equ	0xFD8
 12485                           
 12486 ;; *************** function _display_dec *****************
 12487 ;; Defined at:
 12488 ;;		line 217 in file "../My_library/My_RTCC.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12491 ;;		 -> display_LCD@str(40), 
 12492 ;;  dec             1   77[BANK0 ] unsigned char 
 12493 ;;  edit            1   78[BANK0 ] unsigned char 
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;  s               4   79[BANK0 ] unsigned char [4]
 12496 ;; Return value:  Size  Location     Type
 12497 ;;		None               void
 12498 ;; Registers used:
 12499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12506 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12508 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12509 ;;Total ram usage:        8 bytes
 12510 ;; Hardware stack levels used:    1
 12511 ;; Hardware stack levels required when called:   13
 12512 ;; This function calls:
 12513 ;;		_sprintf
 12514 ;;		_strcat
 12515 ;; This function is called by:
 12516 ;;		_display_time_1602
 12517 ;;		_display_time_0802
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           	psect	text34
 12522  01611E                     __ptext34:
 12523                           	opt stack 0
 12524  01611E                     _display_dec:
 12525                           	opt stack 14
 12526                           
 12527                           ;My_RTCC.c: 218: char s[4];
 12528                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
 12529                           
 12530                           ;incstack = 0
 12531  01611E  0EAF               	movlw	low display_dec@s
 12532  016120  0100               	movlb	0	; () banked
 12533  016122  6F83               	movwf	sprintf@sp& (0+255),b
 12534  016124  0E00               	movlw	high display_dec@s
 12535  016126  0100               	movlb	0	; () banked
 12536  016128  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12537  01612A  0EFC               	movlw	low (STR_67+27)
 12538  01612C  0100               	movlb	0	; () banked
 12539  01612E  6F85               	movwf	sprintf@f& (0+255),b
 12540  016130  0EFD               	movlw	high (STR_67+27)
 12541  016132  0100               	movlb	0	; () banked
 12542  016134  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12543  016136  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12544  01613A  0100               	movlb	0	; () banked
 12545  01613C  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12546  01613E  EC00  F080         	call	_sprintf	;wreg free
 12547                           
 12548                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
 12549  016142  0100               	movlb	0	; () banked
 12550  016144  51AE               	movf	display_dec@edit& (0+255),w,b
 12551  016146  0100               	movlb	0	; () banked
 12552  016148  B4D8               	btfsc	status,2,c
 12553  01614A  D011               	goto	l11121
 12554                           
 12555                           ; BSR set to: 0
 12556  01614C  0101               	movlb	1	; () banked
 12557  01614E  5186               	movf	(_now+12)& (0+255),w,b
 12558  016150  B4D8               	btfsc	status,2,c
 12559  016152  D00D               	goto	l11121
 12560                           
 12561                           ; BSR set to: 1
 12562  016154  C0AB  F060         	movff	display_dec@str,strcat@to
 12563  016158  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12564  01615C  0E7F               	movlw	low (STR_15+6)
 12565  01615E  0100               	movlb	0	; () banked
 12566  016160  6F62               	movwf	strcat@from& (0+255),b
 12567  016162  0EFF               	movlw	high (STR_15+6)
 12568  016164  0100               	movlb	0	; () banked
 12569  016166  6F63               	movwf	(strcat@from+1)& (0+255),b
 12570  016168  ECEF  F0B1         	call	_strcat	;wreg free
 12571  01616C  0012               	return	
 12572  01616E                     l11121:
 12573                           
 12574                           ;My_RTCC.c: 221: else strcat(str, s);
 12575  01616E  C0AB  F060         	movff	display_dec@str,strcat@to
 12576  016172  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12577  016176  0EAF               	movlw	low display_dec@s
 12578  016178  0100               	movlb	0	; () banked
 12579  01617A  6F62               	movwf	strcat@from& (0+255),b
 12580  01617C  0E00               	movlw	high display_dec@s
 12581  01617E  0100               	movlb	0	; () banked
 12582  016180  6F63               	movwf	(strcat@from+1)& (0+255),b
 12583  016182  ECEF  F0B1         	call	_strcat	;wreg free
 12584  016186  0012               	return	
 12585  016188                     __end_of_display_dec:
 12586                           	opt stack 0
 12587                           tblptru	equ	0xFF8
 12588                           tblptrh	equ	0xFF7
 12589                           tblptrl	equ	0xFF6
 12590                           tablat	equ	0xFF5
 12591                           prodh	equ	0xFF4
 12592                           prodl	equ	0xFF3
 12593                           intcon	equ	0xFF2
 12594                           postinc0	equ	0xFEE
 12595                           wreg	equ	0xFE8
 12596                           indf1	equ	0xFE7
 12597                           postinc1	equ	0xFE6
 12598                           postdec1	equ	0xFE5
 12599                           fsr1h	equ	0xFE2
 12600                           fsr1l	equ	0xFE1
 12601                           indf2	equ	0xFDF
 12602                           postinc2	equ	0xFDE
 12603                           postdec2	equ	0xFDD
 12604                           plusw2	equ	0xFDB
 12605                           fsr2h	equ	0xFDA
 12606                           fsr2l	equ	0xFD9
 12607                           status	equ	0xFD8
 12608                           
 12609 ;; *************** function _strcat *****************
 12610 ;; Defined at:
 12611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 12612 ;; Parameters:    Size  Location     Type
 12613 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12614 ;;		 -> display_LCD@str(40), 
 12615 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12616 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 12617 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 12618 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 12619 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12622 ;;		 -> display_LCD@str(40), 
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  2    0[BANK0 ] PTR unsigned char 
 12625 ;; Registers used:
 12626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12633 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12635 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12636 ;;Total ram usage:        6 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; Hardware stack levels required when called:   11
 12639 ;; This function calls:
 12640 ;;		Nothing
 12641 ;; This function is called by:
 12642 ;;		_display_dec
 12643 ;;		_display_time_1602
 12644 ;;		_display_time_0802
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text35
 12649  0163DE                     __ptext35:
 12650                           	opt stack 0
 12651  0163DE                     _strcat:
 12652                           	opt stack 16
 12653                           
 12654                           ;incstack = 0
 12655  0163DE  C060  F064         	movff	strcat@to,strcat@cp
 12656  0163E2  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12657  0163E6  D003               	goto	l11017
 12658  0163E8                     l11015:
 12659  0163E8  0100               	movlb	0	; () banked
 12660  0163EA  4B64               	infsnz	strcat@cp& (0+255),f,b
 12661  0163EC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12662  0163EE                     l11017:
 12663  0163EE  C064  FFD9         	movff	strcat@cp,fsr2l
 12664  0163F2  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12665  0163F6  50DF               	movf	indf2,w,c
 12666  0163F8  B4D8               	btfsc	status,2,c
 12667  0163FA  D007               	goto	l11021
 12668  0163FC  D7F5               	goto	l11015
 12669  0163FE                     l11019:
 12670  0163FE  0100               	movlb	0	; () banked
 12671  016400  4B64               	infsnz	strcat@cp& (0+255),f,b
 12672  016402  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12673  016404  0100               	movlb	0	; () banked
 12674  016406  4B62               	infsnz	strcat@from& (0+255),f,b
 12675  016408  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12676  01640A                     l11021:
 12677  01640A  C062  FFF6         	movff	strcat@from,tblptrl
 12678  01640E  C063  FFF7         	movff	strcat@from+1,tblptrh
 12679  016412  0E00               	movlw	low (__mediumconst shr (0+16))
 12680  016414  6EF8               	movwf	tblptru,c
 12681  016416  C064  FFD9         	movff	strcat@cp,fsr2l
 12682  01641A  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12683  01641E  0E0E               	movlw	(high __ramtop+-1)
 12684  016420  64F7               	cpfsgt	tblptrh,c
 12685  016422  D003               	bra	u12107
 12686  016424  0008               	tblrd		*
 12687  016426  50F5               	movf	tablat,w,c
 12688  016428  D005               	bra	u12100
 12689  01642A                     u12107:
 12690  01642A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12691  01642E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12692  016432  50E7               	movf	indf1,w,c
 12693  016434                     u12100:
 12694  016434  6EDF               	movwf	indf2,c
 12695  016436  50DF               	movf	indf2,w,c
 12696  016438  B4D8               	btfsc	status,2,c
 12697  01643A  0012               	return	
 12698  01643C  D7E0               	goto	l11019
 12699  01643E                     __end_of_strcat:
 12700                           	opt stack 0
 12701                           tblptru	equ	0xFF8
 12702                           tblptrh	equ	0xFF7
 12703                           tblptrl	equ	0xFF6
 12704                           tablat	equ	0xFF5
 12705                           prodh	equ	0xFF4
 12706                           prodl	equ	0xFF3
 12707                           intcon	equ	0xFF2
 12708                           postinc0	equ	0xFEE
 12709                           wreg	equ	0xFE8
 12710                           indf1	equ	0xFE7
 12711                           postinc1	equ	0xFE6
 12712                           postdec1	equ	0xFE5
 12713                           fsr1h	equ	0xFE2
 12714                           fsr1l	equ	0xFE1
 12715                           indf2	equ	0xFDF
 12716                           postinc2	equ	0xFDE
 12717                           postdec2	equ	0xFDD
 12718                           plusw2	equ	0xFDB
 12719                           fsr2h	equ	0xFDA
 12720                           fsr2l	equ	0xFD9
 12721                           status	equ	0xFD8
 12722                           
 12723 ;; *************** function _I2C_LCD_SetCursor *****************
 12724 ;; Defined at:
 12725 ;;		line 159 in file "../My_library/My_ST7032.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  col             1    wreg     unsigned char 
 12728 ;;  row             1    6[BANK0 ] unsigned char 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;  col             1    9[BANK0 ] unsigned char 
 12731 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 12732 ;; Return value:  Size  Location     Type
 12733 ;;		None               void
 12734 ;; Registers used:
 12735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12741 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12742 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12744 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12745 ;;Total ram usage:        4 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:   14
 12748 ;; This function calls:
 12749 ;;		_I2C_LCD_Command
 12750 ;; This function is called by:
 12751 ;;		_sleep_task
 12752 ;;		_bootload
 12753 ;;		_display_LCD
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757                           	psect	text36
 12758  01697C                     __ptext36:
 12759                           	opt stack 0
 12760  01697C                     _I2C_LCD_SetCursor:
 12761                           	opt stack 13
 12762                           
 12763                           ;incstack = 0
 12764                           ;I2C_LCD_SetCursor@col stored from wreg
 12765  01697C  0100               	movlb	0	; () banked
 12766  01697E  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 12767                           
 12768                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 12769  016980  C1E2  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 12770  016984  C1E3  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 12771                           
 12772                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 12773  016988  0100               	movlb	0	; () banked
 12774  01698A  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 12775  01698C  0D01               	mullw	1
 12776  01698E  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 12777  016990  24F3               	addwf	prodl,w,c
 12778  016992  6ED9               	movwf	fsr2l,c
 12779  016994  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 12780  016996  20F4               	addwfc	prodh,w,c
 12781  016998  6EDA               	movwf	fsr2h,c
 12782  01699A  50DF               	movf	indf2,w,c
 12783  01699C  0100               	movlb	0	; () banked
 12784  01699E  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 12785  0169A0  0980               	iorlw	128
 12786  0169A2  EC0E  F0B4         	call	_I2C_LCD_Command
 12787  0169A6  0012               	return		;funcret
 12788  0169A8                     __end_of_I2C_LCD_SetCursor:
 12789                           	opt stack 0
 12790                           tblptru	equ	0xFF8
 12791                           tblptrh	equ	0xFF7
 12792                           tblptrl	equ	0xFF6
 12793                           tablat	equ	0xFF5
 12794                           prodh	equ	0xFF4
 12795                           prodl	equ	0xFF3
 12796                           intcon	equ	0xFF2
 12797                           postinc0	equ	0xFEE
 12798                           wreg	equ	0xFE8
 12799                           indf1	equ	0xFE7
 12800                           postinc1	equ	0xFE6
 12801                           postdec1	equ	0xFE5
 12802                           fsr1h	equ	0xFE2
 12803                           fsr1l	equ	0xFE1
 12804                           indf2	equ	0xFDF
 12805                           postinc2	equ	0xFDE
 12806                           postdec2	equ	0xFDD
 12807                           plusw2	equ	0xFDB
 12808                           fsr2h	equ	0xFDA
 12809                           fsr2l	equ	0xFD9
 12810                           status	equ	0xFD8
 12811                           
 12812 ;; *************** function _I2C_LCD_Puts *****************
 12813 ;; Defined at:
 12814 ;;		line 178 in file "../My_library/My_ST7032.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 12817 ;;		 -> display_LCD@str_5583(20), display_LCD@str(40), display_char(40), STR_50(16), 
 12818 ;;		 -> STR_49(12), STR_46(13), STR_45(17), 
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;  ans             2    7[BANK0 ] int 
 12821 ;; Return value:  Size  Location     Type
 12822 ;;		None               void
 12823 ;; Registers used:
 12824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/0
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12833 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12834 ;;Total ram usage:        5 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; Hardware stack levels required when called:   13
 12837 ;; This function calls:
 12838 ;;		_I2C_Send
 12839 ;;		_I2C_Start
 12840 ;;		_I2C_Stop
 12841 ;; This function is called by:
 12842 ;;		_sleep_task
 12843 ;;		_bootload
 12844 ;;		_display_LCD
 12845 ;; This function uses a non-reentrant model
 12846 ;;
 12847                           
 12848                           	psect	text37
 12849  015AB0                     __ptext37:
 12850                           	opt stack 0
 12851  015AB0                     _I2C_LCD_Puts:
 12852                           	opt stack 14
 12853                           
 12854                           ;My_ST7032.c: 179: int ans;
 12855                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 12856                           
 12857                           ;incstack = 0
 12858  015AB0  0E00               	movlw	0
 12859  015AB2  0100               	movlb	0	; () banked
 12860  015AB4  6F62               	movwf	I2C_Start@rw& (0+255),b
 12861  015AB6  0E3E               	movlw	62
 12862  015AB8  EC78  F0B4         	call	_I2C_Start
 12863  015ABC  0100               	movlb	0	; () banked
 12864  015ABE  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 12865  015AC0  0100               	movlb	0	; () banked
 12866  015AC2  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 12867  015AC4  0100               	movlb	0	; () banked
 12868  015AC6  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 12869  015AC8  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;My_ST7032.c: 182: if (ans == 0) {
 12873  015ACA  0100               	movlb	0	; () banked
 12874  015ACC  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 12875  015ACE  0100               	movlb	0	; () banked
 12876  015AD0  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 12877  015AD2  A4D8               	btfss	status,2,c
 12878  015AD4  D031               	goto	l11283
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 12882  015AD6  0E40               	movlw	64
 12883  015AD8  EC3A  F0B6         	call	_I2C_Send
 12884                           
 12885                           ;My_ST7032.c: 184: while (*s) {
 12886  015ADC  D019               	goto	l11281
 12887  015ADE                     l11275:
 12888                           
 12889                           ;My_ST7032.c: 185: I2C_Send(*s++);
 12890  015ADE  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 12891  015AE2  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 12892  015AE6  0E00               	movlw	low (__mediumconst shr (0+16))
 12893  015AE8  6EF8               	movwf	tblptru,c
 12894  015AEA  0E0E               	movlw	(high __ramtop+-1)
 12895  015AEC  64F7               	cpfsgt	tblptrh,c
 12896  015AEE  D003               	bra	u12527
 12897  015AF0  0008               	tblrd		*
 12898  015AF2  50F5               	movf	tablat,w,c
 12899  015AF4  D005               	bra	u12520
 12900  015AF6                     u12527:
 12901  015AF6  CFF6 FFE1          	movff	tblptrl,fsr1l
 12902  015AFA  CFF7 FFE2          	movff	tblptrh,fsr1h
 12903  015AFE  50E7               	movf	indf1,w,c
 12904  015B00                     u12520:
 12905  015B00  EC3A  F0B6         	call	_I2C_Send
 12906  015B04  0100               	movlb	0	; () banked
 12907  015B06  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 12908  015B08  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 12912  015B0A  0E68               	movlw	104
 12913  015B0C                     u15167:
 12914  015B0C  2EE8               	decfsz	wreg,f,c
 12915  015B0E  D7FE               	goto	u15167
 12916  015B10                     l11281:
 12917  015B10  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 12918  015B14  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 12919  015B18  0E00               	movlw	low (__mediumconst shr (0+16))
 12920  015B1A  6EF8               	movwf	tblptru,c
 12921  015B1C  0E0E               	movlw	(high __ramtop+-1)
 12922  015B1E  64F7               	cpfsgt	tblptrh,c
 12923  015B20  D003               	bra	u12537
 12924  015B22  0008               	tblrd		*
 12925  015B24  50F5               	movf	tablat,w,c
 12926  015B26  D005               	bra	u12530
 12927  015B28                     u12537:
 12928  015B28  CFF6 FFE1          	movff	tblptrl,fsr1l
 12929  015B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
 12930  015B30  50E7               	movf	indf1,w,c
 12931  015B32                     u12530:
 12932  015B32  0900               	iorlw	0
 12933  015B34  A4D8               	btfss	status,2,c
 12934  015B36  D7D3               	goto	l11275
 12935  015B38                     l11283:
 12936                           
 12937                           ;My_ST7032.c: 187: }
 12938                           ;My_ST7032.c: 188: }
 12939                           ;My_ST7032.c: 189: I2C_Stop();
 12940  015B38  EC59  F0B6         	call	_I2C_Stop	;wreg free
 12941  015B3C  0012               	return		;funcret
 12942  015B3E                     __end_of_I2C_LCD_Puts:
 12943                           	opt stack 0
 12944                           tblptru	equ	0xFF8
 12945                           tblptrh	equ	0xFF7
 12946                           tblptrl	equ	0xFF6
 12947                           tablat	equ	0xFF5
 12948                           prodh	equ	0xFF4
 12949                           prodl	equ	0xFF3
 12950                           intcon	equ	0xFF2
 12951                           postinc0	equ	0xFEE
 12952                           wreg	equ	0xFE8
 12953                           indf1	equ	0xFE7
 12954                           postinc1	equ	0xFE6
 12955                           postdec1	equ	0xFE5
 12956                           fsr1h	equ	0xFE2
 12957                           fsr1l	equ	0xFE1
 12958                           indf2	equ	0xFDF
 12959                           postinc2	equ	0xFDE
 12960                           postdec2	equ	0xFDD
 12961                           plusw2	equ	0xFDB
 12962                           fsr2h	equ	0xFDA
 12963                           fsr2l	equ	0xFD9
 12964                           status	equ	0xFD8
 12965                           
 12966 ;; *************** function _data_out *****************
 12967 ;; Defined at:
 12968 ;;		line 248 in file "ChargeStation_task.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 12971 ;;		 -> usb_tx(8), 
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;  i               1  107[BANK0 ] unsigned char 
 12974 ;;  str            30   77[BANK0 ] unsigned char [30]
 12975 ;; Return value:  Size  Location     Type
 12976 ;;		None               void
 12977 ;; Registers used:
 12978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12979 ;; Tracked objects:
 12980 ;;		On entry : 0/0
 12981 ;;		On exit  : 0/0
 12982 ;;		Unchanged: 0/0
 12983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12985 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12987 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12988 ;;Total ram usage:       33 bytes
 12989 ;; Hardware stack levels used:    1
 12990 ;; Hardware stack levels required when called:   14
 12991 ;; This function calls:
 12992 ;;		___lwdiv
 12993 ;;		___lwmod
 12994 ;;		_ringbuf_put_str
 12995 ;;		_sprintf
 12996 ;; This function is called by:
 12997 ;;		_normal_task
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           	psect	text38
 13002  012E3C                     __ptext38:
 13003                           	opt stack 0
 13004  012E3C                     _data_out:
 13005                           	opt stack 15
 13006                           
 13007                           ;ChargeStation_task.c: 249: char str[30];
 13008                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 13009                           ;ChargeStation_task.c: 251: now.YY,
 13010                           ;ChargeStation_task.c: 252: now.MM,
 13011                           ;ChargeStation_task.c: 253: now.DD,
 13012                           ;ChargeStation_task.c: 254: now.hh,
 13013                           ;ChargeStation_task.c: 255: now.mm,
 13014                           ;ChargeStation_task.c: 256: now.ss
 13015                           ;ChargeStation_task.c: 257: );
 13016                           
 13017                           ;incstack = 0
 13018  012E3C  0EAD               	movlw	low data_out@str
 13019  012E3E  0100               	movlb	0	; () banked
 13020  012E40  6F83               	movwf	sprintf@sp& (0+255),b
 13021  012E42  0E00               	movlw	high data_out@str
 13022  012E44  0100               	movlb	0	; () banked
 13023  012E46  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13024  012E48  0EE1               	movlw	low STR_67
 13025  012E4A  0100               	movlb	0	; () banked
 13026  012E4C  6F85               	movwf	sprintf@f& (0+255),b
 13027  012E4E  0EFD               	movlw	high STR_67
 13028  012E50  0100               	movlb	0	; () banked
 13029  012E52  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13030  012E54  C184  F087         	movff	_now+10,?_sprintf+4
 13031  012E58  0100               	movlb	0	; () banked
 13032  012E5A  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13033  012E5C  C183  F089         	movff	_now+9,?_sprintf+6
 13034  012E60  0100               	movlb	0	; () banked
 13035  012E62  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13036  012E64  C182  F08B         	movff	_now+8,?_sprintf+8
 13037  012E68  0100               	movlb	0	; () banked
 13038  012E6A  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13039  012E6C  C180  F08D         	movff	_now+6,?_sprintf+10
 13040  012E70  0100               	movlb	0	; () banked
 13041  012E72  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 13042  012E74  C17F  F08F         	movff	_now+5,?_sprintf+12
 13043  012E78  0100               	movlb	0	; () banked
 13044  012E7A  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13045  012E7C  C17E  F091         	movff	_now+4,?_sprintf+14
 13046  012E80  0100               	movlb	0	; () banked
 13047  012E82  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13048  012E84  EC00  F080         	call	_sprintf	;wreg free
 13049                           
 13050                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 13051  012E88  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13052  012E8C  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13053  012E90  0EAD               	movlw	low data_out@str
 13054  012E92  0100               	movlb	0	; () banked
 13055  012E94  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13056  012E96  0E00               	movlw	high data_out@str
 13057  012E98  0100               	movlb	0	; () banked
 13058  012E9A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13059  012E9C  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
 13060                           
 13061                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 13062  012EA0  0E00               	movlw	0
 13063  012EA2  0100               	movlb	0	; () banked
 13064  012EA4  6FCB               	movwf	data_out@i& (0+255),b
 13065  012EA6                     l12545:
 13066                           
 13067                           ; BSR set to: 0
 13068  012EA6  0E02               	movlw	2
 13069  012EA8  0100               	movlb	0	; () banked
 13070  012EAA  65CB               	cpfsgt	data_out@i& (0+255),b
 13071  012EAC  D001               	goto	l12549
 13072  012EAE  D075               	goto	l12557
 13073  012EB0                     l12549:
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 13077                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 13078                           ;ChargeStation_task.c: 262: p[i],
 13079                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 13080                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 13081                           ;ChargeStation_task.c: 265: port[i].integrated_current
 13082                           ;ChargeStation_task.c: 266: );
 13083  012EB0  0EAD               	movlw	low data_out@str
 13084  012EB2  0100               	movlb	0	; () banked
 13085  012EB4  6F83               	movwf	sprintf@sp& (0+255),b
 13086  012EB6  0E00               	movlw	high data_out@str
 13087  012EB8  0100               	movlb	0	; () banked
 13088  012EBA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13089  012EBC  0E35               	movlw	low STR_68
 13090  012EBE  0100               	movlb	0	; () banked
 13091  012EC0  6F85               	movwf	sprintf@f& (0+255),b
 13092  012EC2  0EFE               	movlw	high STR_68
 13093  012EC4  0100               	movlb	0	; () banked
 13094  012EC6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13095  012EC8  0100               	movlb	0	; () banked
 13096  012ECA  51CB               	movf	data_out@i& (0+255),w,b
 13097  012ECC  0D02               	mullw	2
 13098  012ECE  0EDC               	movlw	low data_out@p
 13099  012ED0  24F3               	addwf	prodl,w,c
 13100  012ED2  0100               	movlb	0	; () banked
 13101  012ED4  6F87               	movwf	(?_sprintf+4)& (0+255),b
 13102  012ED6  0EFB               	movlw	high data_out@p
 13103  012ED8  20F4               	addwfc	prodh,w,c
 13104  012EDA  0100               	movlb	0	; () banked
 13105  012EDC  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13106  012EDE  0100               	movlb	0	; () banked
 13107  012EE0  51CB               	movf	data_out@i& (0+255),w,b
 13108  012EE2  0D17               	mullw	23
 13109  012EE4  0E06               	movlw	6
 13110  012EE6  26F3               	addwf	prodl,f,c
 13111  012EE8  0E00               	movlw	0
 13112  012EEA  22F4               	addwfc	prodh,f,c
 13113  012EEC  0E35               	movlw	low _port
 13114  012EEE  24F3               	addwf	prodl,w,c
 13115  012EF0  6ED9               	movwf	fsr2l,c
 13116  012EF2  0E01               	movlw	high _port
 13117  012EF4  20F4               	addwfc	prodh,w,c
 13118  012EF6  6EDA               	movwf	fsr2h,c
 13119  012EF8  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13120  012EFC  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13121  012F00  0E03               	movlw	3
 13122  012F02  0100               	movlb	0	; () banked
 13123  012F04  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13124  012F06  0EE8               	movlw	232
 13125  012F08  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13126  012F0A  EC39  F0AF         	call	___lwdiv	;wreg free
 13127  012F0E  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13128  012F12  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13129  012F16  0100               	movlb	0	; () banked
 13130  012F18  51CB               	movf	data_out@i& (0+255),w,b
 13131  012F1A  0D17               	mullw	23
 13132  012F1C  0E06               	movlw	6
 13133  012F1E  26F3               	addwf	prodl,f,c
 13134  012F20  0E00               	movlw	0
 13135  012F22  22F4               	addwfc	prodh,f,c
 13136  012F24  0E35               	movlw	low _port
 13137  012F26  24F3               	addwf	prodl,w,c
 13138  012F28  6ED9               	movwf	fsr2l,c
 13139  012F2A  0E01               	movlw	high _port
 13140  012F2C  20F4               	addwfc	prodh,w,c
 13141  012F2E  6EDA               	movwf	fsr2h,c
 13142  012F30  CFDE F060          	movff	postinc2,___lwmod@dividend
 13143  012F34  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13144  012F38  0E03               	movlw	3
 13145  012F3A  0100               	movlb	0	; () banked
 13146  012F3C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13147  012F3E  0EE8               	movlw	232
 13148  012F40  6F62               	movwf	___lwmod@divisor& (0+255),b
 13149  012F42  EC8E  F0B1         	call	___lwmod	;wreg free
 13150  012F46  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13151  012F4A  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13152  012F4E  0100               	movlb	0	; () banked
 13153  012F50  51CB               	movf	data_out@i& (0+255),w,b
 13154  012F52  0D17               	mullw	23
 13155  012F54  0E0C               	movlw	12
 13156  012F56  26F3               	addwf	prodl,f,c
 13157  012F58  0E00               	movlw	0
 13158  012F5A  22F4               	addwfc	prodh,f,c
 13159  012F5C  0E35               	movlw	low _port
 13160  012F5E  24F3               	addwf	prodl,w,c
 13161  012F60  6ED9               	movwf	fsr2l,c
 13162  012F62  0E01               	movlw	high _port
 13163  012F64  20F4               	addwfc	prodh,w,c
 13164  012F66  6EDA               	movwf	fsr2h,c
 13165  012F68  CFDE F08D          	movff	postinc2,?_sprintf+10
 13166  012F6C  CFDE F08E          	movff	postinc2,?_sprintf+11
 13167  012F70  CFDE F08F          	movff	postinc2,?_sprintf+12
 13168  012F74  CFDE F090          	movff	postinc2,?_sprintf+13
 13169  012F78  EC00  F080         	call	_sprintf	;wreg free
 13170                           
 13171                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13172  012F7C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13173  012F80  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13174  012F84  0EAD               	movlw	low data_out@str
 13175  012F86  0100               	movlb	0	; () banked
 13176  012F88  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13177  012F8A  0E00               	movlw	high data_out@str
 13178  012F8C  0100               	movlb	0	; () banked
 13179  012F8E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13180  012F90  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
 13181  012F94  0100               	movlb	0	; () banked
 13182  012F96  2BCB               	incf	data_out@i& (0+255),f,b
 13183  012F98  D786               	goto	l12545
 13184  012F9A                     l12557:
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;ChargeStation_task.c: 268: }
 13188                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13189  012F9A  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13190  012F9E  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13191  012FA2  0EBB               	movlw	low (STR_23+35)
 13192  012FA4  0100               	movlb	0	; () banked
 13193  012FA6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13194  012FA8  0EFD               	movlw	high (STR_23+35)
 13195  012FAA  0100               	movlb	0	; () banked
 13196  012FAC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13197  012FAE  ECF9  F0B0         	call	_ringbuf_put_str	;wreg free
 13198  012FB2  0012               	return		;funcret
 13199  012FB4                     __end_of_data_out:
 13200                           	opt stack 0
 13201                           tblptru	equ	0xFF8
 13202                           tblptrh	equ	0xFF7
 13203                           tblptrl	equ	0xFF6
 13204                           tablat	equ	0xFF5
 13205                           prodh	equ	0xFF4
 13206                           prodl	equ	0xFF3
 13207                           intcon	equ	0xFF2
 13208                           postinc0	equ	0xFEE
 13209                           wreg	equ	0xFE8
 13210                           indf1	equ	0xFE7
 13211                           postinc1	equ	0xFE6
 13212                           postdec1	equ	0xFE5
 13213                           fsr1h	equ	0xFE2
 13214                           fsr1l	equ	0xFE1
 13215                           indf2	equ	0xFDF
 13216                           postinc2	equ	0xFDE
 13217                           postdec2	equ	0xFDD
 13218                           plusw2	equ	0xFDB
 13219                           fsr2h	equ	0xFDA
 13220                           fsr2l	equ	0xFD9
 13221                           status	equ	0xFD8
 13222                           
 13223 ;; *************** function _sprintf *****************
 13224 ;; Defined at:
 13225 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13228 ;;		 -> display_LCD@str_5583(20), data_out@str(30), print_time@str(30), print_time_dec@str(10), 
 13229 ;;		 -> display_dec@s(4), 
 13230 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13231 ;;		 -> STR_73(28), STR_72(9), STR_71(11), STR_70(6), 
 13232 ;;		 -> STR_68(24), STR_67(32), STR_23(37), STR_21(5), 
 13233 ;;		 -> STR_1(5), 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;  val             4   67[BANK0 ] unsigned long 
 13236 ;;  tmpval          4    0        struct .
 13237 ;;  width           2   73[BANK0 ] int 
 13238 ;;  len             2   65[BANK0 ] unsigned int 
 13239 ;;  ap              2   63[BANK0 ] PTR void [1]
 13240 ;;		 -> ?_sprintf(2), 
 13241 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13242 ;;		 -> STR_118(7), display_LCD@onoff(10), display_LCD@port_char(120), data_out@p(6), 
 13243 ;;		 -> sp__ADC(2), weekday_3char(28), 
 13244 ;;  prec            2   59[BANK0 ] int 
 13245 ;;  c               1   72[BANK0 ] char 
 13246 ;;  flag            1   71[BANK0 ] unsigned char 
 13247 ;; Return value:  Size  Location     Type
 13248 ;;                  2   35[BANK0 ] int 
 13249 ;; Registers used:
 13250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13256 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13257 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13259 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13260 ;;Total ram usage:       40 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:   12
 13263 ;; This function calls:
 13264 ;;		___lldiv
 13265 ;;		___llmod
 13266 ;;		___wmul
 13267 ;;		_isdigit
 13268 ;; This function is called by:
 13269 ;;		_display_dec
 13270 ;;		_print_time
 13271 ;;		_data_out
 13272 ;;		_display_LCD
 13273 ;;		_print_time_dec
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           	psect	text39
 13278  010000                     __ptext39:
 13279                           	opt stack 0
 13280  010000                     _sprintf:
 13281                           	opt stack 13
 13282                           
 13283                           ;doprnt.c: 494: va_list ap;
 13284                           ;doprnt.c: 499: signed char c;
 13285                           ;doprnt.c: 501: int width;
 13286                           ;doprnt.c: 504: int prec;
 13287                           ;doprnt.c: 508: unsigned char flag;
 13288                           ;doprnt.c: 523: union {
 13289                           ;doprnt.c: 524: unsigned long vd;
 13290                           ;doprnt.c: 525: double integ;
 13291                           ;doprnt.c: 526: } tmpval;
 13292                           ;doprnt.c: 528: unsigned long val;
 13293                           ;doprnt.c: 529: unsigned len;
 13294                           ;doprnt.c: 530: const char * cp;
 13295                           ;doprnt.c: 533: *ap = __va_start();
 13296                           
 13297                           ;incstack = 0
 13298  010000  0E87               	movlw	low (?_sprintf+4)
 13299  010002  0100               	movlb	0	; () banked
 13300  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13301  010006  0E00               	movlw	high (?_sprintf+4)
 13302  010008  0100               	movlb	0	; () banked
 13303  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13304                           
 13305                           ;doprnt.c: 536: while(c = *f++) {
 13306  01000C  D270               	goto	l10999
 13307  01000E                     l10853:
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;doprnt.c: 538: if(c != '%')
 13311  01000E  0E25               	movlw	37
 13312  010010  0100               	movlb	0	; () banked
 13313  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13314  010014  B4D8               	btfsc	status,2,c
 13315  010016  D00A               	goto	l10859
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;doprnt.c: 540: {
 13319                           ;doprnt.c: 541: ((*sp++ = (c)));
 13320  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13321  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13322  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13323                           
 13324                           ; BSR set to: 0
 13325  010024  0100               	movlb	0	; () banked
 13326  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13327  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13328                           
 13329                           ;doprnt.c: 542: continue;
 13330  01002A  D261               	goto	l10999
 13331  01002C                     l10859:
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;doprnt.c: 543: }
 13335                           ;doprnt.c: 546: width = 0;
 13336  01002C  0E00               	movlw	0
 13337  01002E  0100               	movlb	0	; () banked
 13338  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13339  010032  0E00               	movlw	0
 13340  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13341                           
 13342                           ;doprnt.c: 548: flag = 0;
 13343  010036  0E00               	movlw	0
 13344  010038  0100               	movlb	0	; () banked
 13345  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;doprnt.c: 551: switch(*f) {
 13349                           
 13350                           ;doprnt.c: 550: for(;;) {
 13351  01003C  D005               	goto	l10865
 13352  01003E                     l10861:
 13353                           
 13354                           ;doprnt.c: 580: flag |= 0x04;
 13355  01003E  0100               	movlb	0	; () banked
 13356  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13357                           
 13358                           ;doprnt.c: 581: f++;
 13359  010042  0100               	movlb	0	; () banked
 13360  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13361  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13362  010048                     l10865:
 13363  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13364  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13365  010050                     	if	0	;tblptru may be non-zero
 13366  010050                     	endif
 13367  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13368  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13369  010052  6EF8               	movwf	tblptru,c
 13370  010054                     	endif
 13371  010054  0008               	tblrd		*
 13372  010056  50F5               	movf	tablat,w,c
 13373                           
 13374                           ; Switch size 1, requested type "space"
 13375                           ; Number of cases is 1, Range of values is 48 to 48
 13376                           ; switch strategies available:
 13377                           ; Name         Instructions Cycles
 13378                           ; simple_byte            4     3 (average)
 13379                           ;	Chosen strategy is simple_byte
 13380  010058  0A30               	xorlw	48	; case 48
 13381  01005A  B4D8               	btfsc	status,2,c
 13382  01005C  D7F0               	goto	l10861
 13383                           
 13384                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13385                           
 13386                           ;doprnt.c: 586: }
 13387                           
 13388                           ;doprnt.c: 585: break;
 13389  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13390  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13391  010066                     	if	0	;tblptru may be non-zero
 13392  010066                     	endif
 13393  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13394  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13395  010068  6EF8               	movwf	tblptru,c
 13396  01006A                     	endif
 13397  01006A  0008               	tblrd		*
 13398  01006C  50F5               	movf	tablat,w,c
 13399  01006E  EC42  F0B5         	call	_isdigit
 13400  010072  A0D8               	btfss	status,0,c
 13401  010074  D0E0               	goto	l10917
 13402                           
 13403                           ;doprnt.c: 598: width = 0;
 13404  010076  0E00               	movlw	0
 13405  010078  0100               	movlb	0	; () banked
 13406  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13407  01007C  0E00               	movlw	0
 13408  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13409  010080                     l10871:
 13410                           
 13411                           ;doprnt.c: 600: width *= 10;
 13412  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13413  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13414  010088  0E00               	movlw	0
 13415  01008A  0100               	movlb	0	; () banked
 13416  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13417  01008E  0E0A               	movlw	10
 13418  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13419  010092  EC2A  F0B4         	call	___wmul	;wreg free
 13420  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13421  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13422                           
 13423                           ;doprnt.c: 601: width += *f++ - '0';
 13424  01009E  0ED0               	movlw	208
 13425  0100A0  0100               	movlb	0	; () banked
 13426  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13427  0100A4  0EFF               	movlw	255
 13428  0100A6  0100               	movlb	0	; () banked
 13429  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13430  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13431  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13432  0100B2                     	if	0	;tblptru may be non-zero
 13433  0100B2                     	endif
 13434  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13435  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13436  0100B4  6EF8               	movwf	tblptru,c
 13437  0100B6                     	endif
 13438  0100B6  0008               	tblrd		*
 13439  0100B8  50F5               	movf	tablat,w,c
 13440  0100BA  0100               	movlb	0	; () banked
 13441  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13442  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13443  0100C0  0100               	movlb	0	; () banked
 13444  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13445  0100C4  0100               	movlb	0	; () banked
 13446  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13447  0100C8  0100               	movlb	0	; () banked
 13448  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13449  0100CC  0100               	movlb	0	; () banked
 13450  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13451  0100D0  0100               	movlb	0	; () banked
 13452  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13453  0100D4  0100               	movlb	0	; () banked
 13454  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13455  0100D8  0100               	movlb	0	; () banked
 13456  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13457  0100DC  0100               	movlb	0	; () banked
 13458  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13459                           
 13460                           ; BSR set to: 0
 13461  0100E0  0100               	movlb	0	; () banked
 13462  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13463  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13467  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13468  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13469  0100EE                     	if	0	;tblptru may be non-zero
 13470  0100EE                     	endif
 13471  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13472  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13473  0100F0  6EF8               	movwf	tblptru,c
 13474  0100F2                     	endif
 13475  0100F2  0008               	tblrd		*
 13476  0100F4  50F5               	movf	tablat,w,c
 13477  0100F6  EC42  F0B5         	call	_isdigit
 13478  0100FA  A0D8               	btfss	status,0,c
 13479  0100FC  D09C               	goto	l10917
 13480  0100FE  D7C0               	goto	l10871
 13481  010100                     l10879:
 13482                           
 13483                           ;doprnt.c: 643: flag |= 0x10;
 13484  010100  0100               	movlb	0	; () banked
 13485  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13486                           
 13487                           ;doprnt.c: 644: goto loop;
 13488  010104  D098               	goto	l10917
 13489  010106                     l10881:
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13493  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13494  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13495  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13496  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13497                           
 13498                           ; BSR set to: 0
 13499  010116  0E02               	movlw	2
 13500  010118  0100               	movlb	0	; () banked
 13501  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13502  01011C  0E00               	movlw	0
 13503  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;doprnt.c: 740: if(!cp)
 13507  010120  0100               	movlb	0	; () banked
 13508  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13509  010124  0100               	movlb	0	; () banked
 13510  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13511  010128  A4D8               	btfss	status,2,c
 13512  01012A  D006               	goto	l10889
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;doprnt.c: 741: cp = "(null)";
 13516  01012C  0E8A               	movlw	low STR_118
 13517  01012E  0100               	movlb	0	; () banked
 13518  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13519  010132  0EFF               	movlw	high STR_118
 13520  010134  0100               	movlb	0	; () banked
 13521  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13522  010138                     l10889:
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;doprnt.c: 745: len = 0;
 13526  010138  0E00               	movlw	0
 13527  01013A  0100               	movlb	0	; () banked
 13528  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13529  01013E  0E00               	movlw	0
 13530  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13531                           
 13532                           ;doprnt.c: 746: while(cp[len])
 13533  010142  D003               	goto	l10893
 13534  010144                     l10891:
 13535                           
 13536                           ;doprnt.c: 747: len++;
 13537  010144  0100               	movlb	0	; () banked
 13538  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13539  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13540  01014A                     l10893:
 13541                           
 13542                           ; BSR set to: 0
 13543  01014A  0100               	movlb	0	; () banked
 13544  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13545  01014E  0100               	movlb	0	; () banked
 13546  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13547  010152  0100               	movlb	0	; () banked
 13548  010154  6F97               	movwf	??_sprintf& (0+255),b
 13549  010156  0100               	movlb	0	; () banked
 13550  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13551  01015A  0100               	movlb	0	; () banked
 13552  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13553  01015E  0100               	movlb	0	; () banked
 13554  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13555  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13556  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13557  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13558  01016C  6EF8               	movwf	tblptru,c
 13559  01016E  0E0E               	movlw	(high __ramtop+-1)
 13560  010170  64F7               	cpfsgt	tblptrh,c
 13561  010172  D003               	bra	u11867
 13562  010174  0008               	tblrd		*
 13563  010176  50F5               	movf	tablat,w,c
 13564  010178  D005               	bra	u11860
 13565  01017A                     u11867:
 13566  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13567  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13568  010182  50E7               	movf	indf1,w,c
 13569  010184                     u11860:
 13570  010184  0900               	iorlw	0
 13571  010186  A4D8               	btfss	status,2,c
 13572  010188  D7DD               	goto	l10891
 13573                           
 13574                           ;doprnt.c: 757: if(width > len)
 13575  01018A  0100               	movlb	0	; () banked
 13576  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13577  01018E  0100               	movlb	0	; () banked
 13578  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13579  010192  0100               	movlb	0	; () banked
 13580  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13581  010196  0100               	movlb	0	; () banked
 13582  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13583  01019A  B0D8               	btfsc	status,0,c
 13584  01019C  D009               	goto	l10899
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;doprnt.c: 758: width -= len;
 13588  01019E  0100               	movlb	0	; () banked
 13589  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13590  0101A2  0100               	movlb	0	; () banked
 13591  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13592  0101A6  0100               	movlb	0	; () banked
 13593  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13594  0101AA  0100               	movlb	0	; () banked
 13595  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13596  0101AE  D00F               	goto	l10905
 13597  0101B0                     l10899:
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;doprnt.c: 759: else
 13601                           ;doprnt.c: 760: width = 0;
 13602  0101B0  0E00               	movlw	0
 13603  0101B2  0100               	movlb	0	; () banked
 13604  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13605  0101B6  0E00               	movlw	0
 13606  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;doprnt.c: 764: while(width--)
 13610  0101BA  D009               	goto	l10905
 13611  0101BC                     l10901:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13615  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13616  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13617  0101C4  0E20               	movlw	32
 13618  0101C6  6EDF               	movwf	indf2,c
 13619                           
 13620                           ; BSR set to: 0
 13621  0101C8  0100               	movlb	0	; () banked
 13622  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13623  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13624  0101CE                     l10905:
 13625                           
 13626                           ; BSR set to: 0
 13627  0101CE  0100               	movlb	0	; () banked
 13628  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13629  0101D2  A0D8               	btfss	status,0,c
 13630  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13631  0101D6  0100               	movlb	0	; () banked
 13632  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13633  0101DA  E1F0               	bnz	l10901
 13634  0101DC  0100               	movlb	0	; () banked
 13635  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13636  0101E0  B4D8               	btfsc	status,2,c
 13637  0101E2  D01D               	goto	l10913
 13638  0101E4  D7EB               	goto	l10901
 13639  0101E6                     l10907:
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13643  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13644  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13645  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13646  0101F0  6EF8               	movwf	tblptru,c
 13647  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13648  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13649  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13650  0101FC  64F7               	cpfsgt	tblptrh,c
 13651  0101FE  D003               	bra	u11907
 13652  010200  0008               	tblrd		*
 13653  010202  50F5               	movf	tablat,w,c
 13654  010204  D005               	bra	u11900
 13655  010206                     u11907:
 13656  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 13657  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13658  01020E  50E7               	movf	indf1,w,c
 13659  010210                     u11900:
 13660  010210  6EDF               	movwf	indf2,c
 13661  010212  0100               	movlb	0	; () banked
 13662  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13663  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13664                           
 13665                           ; BSR set to: 0
 13666  010218  0100               	movlb	0	; () banked
 13667  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13668  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13669  01021E                     l10913:
 13670                           
 13671                           ; BSR set to: 0
 13672  01021E  0100               	movlb	0	; () banked
 13673  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13674  010222  A0D8               	btfss	status,0,c
 13675  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13676  010226  0100               	movlb	0	; () banked
 13677  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13678  01022A  E1DD               	bnz	l10907
 13679  01022C  0100               	movlb	0	; () banked
 13680  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13681  010230  B4D8               	btfsc	status,2,c
 13682  010232  D15D               	goto	l10999
 13683  010234  D7D8               	goto	l10907
 13684  010236                     l10917:
 13685  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13686  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13687  01023E  0100               	movlb	0	; () banked
 13688  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13689  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13690  010244                     	if	0	;tblptru may be non-zero
 13691  010244                     	endif
 13692  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13693  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13694  010246  6EF8               	movwf	tblptru,c
 13695  010248                     	endif
 13696  010248  0008               	tblrd		*
 13697  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13698  01024E  0100               	movlb	0	; () banked
 13699  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13700                           
 13701                           ; Switch size 1, requested type "space"
 13702                           ; Number of cases is 5, Range of values is 0 to 115
 13703                           ; switch strategies available:
 13704                           ; Name         Instructions Cycles
 13705                           ; simple_byte           16     9 (average)
 13706                           ;	Chosen strategy is simple_byte
 13707  010252  0A00               	xorlw	0	; case 0
 13708  010254  B4D8               	btfsc	status,2,c
 13709  010256  D15B               	goto	l11001
 13710  010258  0A64               	xorlw	100	; case 100
 13711  01025A  B4D8               	btfsc	status,2,c
 13712  01025C  D00A               	goto	l1972
 13713  01025E  0A0D               	xorlw	13	; case 105
 13714  010260  B4D8               	btfsc	status,2,c
 13715  010262  D007               	goto	l1972
 13716  010264  0A05               	xorlw	5	; case 108
 13717  010266  B4D8               	btfsc	status,2,c
 13718  010268  D74B               	goto	l10879
 13719  01026A  0A1F               	xorlw	31	; case 115
 13720  01026C  B4D8               	btfsc	status,2,c
 13721  01026E  D74B               	goto	l10881
 13722  010270  D13E               	goto	l10999
 13723  010272                     l1972:
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;doprnt.c: 1253: {
 13727                           ;doprnt.c: 1255: if(flag & 0x10)
 13728  010272  0100               	movlb	0	; () banked
 13729  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13730  010276  D00E               	goto	l10923
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13734  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13735  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13736  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13737  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13738  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13739  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13740                           
 13741                           ; BSR set to: 0
 13742  010290  0E04               	movlw	4
 13743  010292  D00F               	goto	L3
 13744  010294                     l10923:
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;doprnt.c: 1257: else
 13748                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13749  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13750  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13751  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13752  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13753  0102A4  0100               	movlb	0	; () banked
 13754  0102A6  0E00               	movlw	0
 13755  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13756  0102AA  0EFF               	movlw	-1
 13757  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13758  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13759                           
 13760                           ; BSR set to: 0
 13761  0102B0  0E02               	movlw	2
 13762  0102B2                     L3:
 13763  0102B2  0100               	movlb	0	; () banked
 13764  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13765  0102B6  0E00               	movlw	0
 13766  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;doprnt.c: 1261: if((long)val < 0) {
 13770                           
 13771                           ; BSR set to: 0
 13772  0102BA  0100               	movlb	0	; () banked
 13773  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13774  0102BE  D00C               	goto	l10933
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;doprnt.c: 1262: flag |= 0x03;
 13778  0102C0  0E03               	movlw	3
 13779  0102C2  0100               	movlb	0	; () banked
 13780  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;doprnt.c: 1263: val = -val;
 13784  0102C6  0100               	movlb	0	; () banked
 13785  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13786  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13787  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13788  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13789  0102D0  0E00               	movlw	0
 13790  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13791  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13792  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13793  0102D8                     l10933:
 13794                           
 13795                           ; BSR set to: 0
 13796                           ;doprnt.c: 1264: }
 13797                           ;doprnt.c: 1266: }
 13798                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13799  0102D8  0E01               	movlw	1
 13800  0102DA  0100               	movlb	0	; () banked
 13801  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13802  0102DE                     l10935:
 13803                           
 13804                           ; BSR set to: 0
 13805  0102DE  0E0A               	movlw	10
 13806  0102E0  0100               	movlb	0	; () banked
 13807  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13808  0102E4  B4D8               	btfsc	status,2,c
 13809  0102E6  D021               	goto	l10947
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;doprnt.c: 1306: if(val < dpowers[c])
 13813                           
 13814                           ; BSR set to: 0
 13815                           
 13816                           ; BSR set to: 0
 13817  0102E8  0100               	movlb	0	; () banked
 13818  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13819  0102EC  0D04               	mullw	4
 13820  0102EE  0E51               	movlw	low _dpowers
 13821  0102F0  24F3               	addwf	prodl,w,c
 13822  0102F2  6EF6               	movwf	tblptrl,c
 13823  0102F4  0EFA               	movlw	high _dpowers
 13824  0102F6  20F4               	addwfc	prodh,w,c
 13825  0102F8  6EF7               	movwf	tblptrh,c
 13826  0102FA                     	if	1	;There are 3 active tblptr bytes
 13827  0102FA  6AF8               	clrf	tblptru,c
 13828  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13829  0102FE  22F8               	addwfc	tblptru,f,c
 13830  010300                     	endif
 13831  010300  0009               	tblrd		*+
 13832  010302  50F5               	movf	tablat,w,c
 13833  010304  0100               	movlb	0	; () banked
 13834  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13835  010308  0009               	tblrd		*+
 13836  01030A  50F5               	movf	tablat,w,c
 13837  01030C  0100               	movlb	0	; () banked
 13838  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 13839  010310  0009               	tblrd		*+
 13840  010312  50F5               	movf	tablat,w,c
 13841  010314  0100               	movlb	0	; () banked
 13842  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 13843  010318  0009               	tblrd		*+
 13844  01031A  50F5               	movf	tablat,w,c
 13845  01031C  0100               	movlb	0	; () banked
 13846  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 13847  010320  A0D8               	btfss	status,0,c
 13848  010322  D003               	goto	l10947
 13849                           
 13850                           ; BSR set to: 0
 13851                           
 13852                           ; BSR set to: 0
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;doprnt.c: 1307: break;
 13856  010324  0100               	movlb	0	; () banked
 13857  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 13858  010328  D7DA               	goto	l10935
 13859  01032A                     l10947:
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13863  01032A  0100               	movlb	0	; () banked
 13864  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 13865  01032E  0100               	movlb	0	; () banked
 13866  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13867  010332  B4D8               	btfsc	status,2,c
 13868  010334  D00B               	goto	l10953
 13869                           
 13870                           ; BSR set to: 0
 13871  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13872  01033A  0E03               	movlw	3
 13873  01033C  0100               	movlb	0	; () banked
 13874  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 13875  010340  B4D8               	btfsc	status,2,c
 13876  010342  D004               	goto	l10953
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;doprnt.c: 1346: width--;
 13880  010344  0100               	movlb	0	; () banked
 13881  010346  07A9               	decf	sprintf@width& (0+255),f,b
 13882  010348  A0D8               	btfss	status,0,c
 13883  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13884  01034C                     l10953:
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;doprnt.c: 1381: if(width > c)
 13888  01034C  0E80               	movlw	128
 13889  01034E  0100               	movlb	0	; () banked
 13890  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13891  010352  0E7F               	movlw	127
 13892  010354  0100               	movlb	0	; () banked
 13893  010356  6F97               	movwf	??_sprintf& (0+255),b
 13894  010358  0100               	movlb	0	; () banked
 13895  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 13896  01035C  0100               	movlb	0	; () banked
 13897  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 13898  010360  0100               	movlb	0	; () banked
 13899  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13900  010364  0A80               	xorlw	128
 13901  010366  0100               	movlb	0	; () banked
 13902  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 13903  01036A  B0D8               	btfsc	status,0,c
 13904  01036C  D00B               	goto	l10957
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;doprnt.c: 1382: width -= c;
 13908  01036E  0100               	movlb	0	; () banked
 13909  010370  51A8               	movf	sprintf@c& (0+255),w,b
 13910  010372  0100               	movlb	0	; () banked
 13911  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 13912  010376  0E00               	movlw	0
 13913  010378  0100               	movlb	0	; () banked
 13914  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13915  01037C  0EFF               	movlw	255
 13916  01037E  0100               	movlb	0	; () banked
 13917  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13918  010382  D005               	goto	l10959
 13919  010384                     l10957:
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;doprnt.c: 1383: else
 13923                           ;doprnt.c: 1384: width = 0;
 13924  010384  0E00               	movlw	0
 13925  010386  0100               	movlb	0	; () banked
 13926  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13927  01038A  0E00               	movlw	0
 13928  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 13929  01038E                     l10959:
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;doprnt.c: 1387: if(flag & 0x04) {
 13933  01038E  0100               	movlb	0	; () banked
 13934  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 13935  010392  D024               	goto	l10975
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;doprnt.c: 1392: if(flag & 0x03)
 13939  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13940  010398  0E03               	movlw	3
 13941  01039A  0100               	movlb	0	; () banked
 13942  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 13943  01039E  B4D8               	btfsc	status,2,c
 13944  0103A0  D009               	goto	l10967
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 13948  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13949  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13950  0103AA  0E2D               	movlw	45
 13951  0103AC  6EDF               	movwf	indf2,c
 13952                           
 13953                           ; BSR set to: 0
 13954  0103AE  0100               	movlb	0	; () banked
 13955  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13956  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13957  0103B4                     l10967:
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;doprnt.c: 1415: if(width)
 13961  0103B4  0100               	movlb	0	; () banked
 13962  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 13963  0103B8  0100               	movlb	0	; () banked
 13964  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13965  0103BC  B4D8               	btfsc	status,2,c
 13966  0103BE  D037               	goto	l10989
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 13970                           
 13971                           ; BSR set to: 0
 13972                           
 13973                           ;doprnt.c: 1416: do
 13974  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 13975  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13976  0103C8  0E30               	movlw	48
 13977  0103CA  6EDF               	movwf	indf2,c
 13978                           
 13979                           ; BSR set to: 0
 13980  0103CC  0100               	movlb	0	; () banked
 13981  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13982  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;doprnt.c: 1418: while(--width);
 13986  0103D2  0100               	movlb	0	; () banked
 13987  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 13988  0103D6  A0D8               	btfss	status,0,c
 13989  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13990  0103DA  D7EC               	goto	l10967
 13991  0103DC                     l10975:
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;doprnt.c: 1422: {
 13995                           ;doprnt.c: 1424: if(width
 13996                           ;doprnt.c: 1428: )
 13997  0103DC  0100               	movlb	0	; () banked
 13998  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 13999  0103E0  0100               	movlb	0	; () banked
 14000  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14001  0103E4  B4D8               	btfsc	status,2,c
 14002  0103E6  D013               	goto	l10983
 14003  0103E8                     l10977:
 14004                           
 14005                           ; BSR set to: 0
 14006                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14007  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 14008  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14009  0103F0  0E20               	movlw	32
 14010  0103F2  6EDF               	movwf	indf2,c
 14011                           
 14012                           ; BSR set to: 0
 14013  0103F4  0100               	movlb	0	; () banked
 14014  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14015  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;doprnt.c: 1431: while(--width);
 14019  0103FA  0100               	movlb	0	; () banked
 14020  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 14021  0103FE  A0D8               	btfss	status,0,c
 14022  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14023  010402  0100               	movlb	0	; () banked
 14024  010404  51A9               	movf	sprintf@width& (0+255),w,b
 14025  010406  0100               	movlb	0	; () banked
 14026  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14027  01040A  A4D8               	btfss	status,2,c
 14028  01040C  D7ED               	goto	l10977
 14029  01040E                     l10983:
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;doprnt.c: 1438: if(flag & 0x03)
 14033  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14034  010412  0E03               	movlw	3
 14035  010414  0100               	movlb	0	; () banked
 14036  010416  1797               	andwf	??_sprintf& (0+255),f,b
 14037  010418  B4D8               	btfsc	status,2,c
 14038  01041A  D009               	goto	l10989
 14039                           
 14040                           ; BSR set to: 0
 14041                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14042  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14043  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14044  010424  0E2D               	movlw	45
 14045  010426  6EDF               	movwf	indf2,c
 14046                           
 14047                           ; BSR set to: 0
 14048  010428  0100               	movlb	0	; () banked
 14049  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14050  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14051  01042E                     l10989:
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;doprnt.c: 1469: }
 14055                           ;doprnt.c: 1472: prec = c;
 14056  01042E  0100               	movlb	0	; () banked
 14057  010430  51A8               	movf	sprintf@c& (0+255),w,b
 14058  010432  0100               	movlb	0	; () banked
 14059  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 14060  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14061  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14062  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14063                           
 14064                           ;doprnt.c: 1474: while(prec--) {
 14065  01043C  D04D               	goto	l10997
 14066  01043E                     l10991:
 14067                           
 14068                           ; BSR set to: 0
 14069                           ;doprnt.c: 1478: {
 14070                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14071  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 14072  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14073  010446  0100               	movlb	0	; () banked
 14074  010448  90D8               	bcf	status,0,c
 14075  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 14076  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14077  01044E  0100               	movlb	0	; () banked
 14078  010450  90D8               	bcf	status,0,c
 14079  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 14080  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14081  010456  0E51               	movlw	low _dpowers
 14082  010458  0100               	movlb	0	; () banked
 14083  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 14084  01045C  6EF6               	movwf	tblptrl,c
 14085  01045E  0EFA               	movlw	high _dpowers
 14086  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14087  010462  6EF7               	movwf	tblptrh,c
 14088  010464                     	if	1	;There are 3 active tblptr bytes
 14089  010464  6AF8               	clrf	tblptru,c
 14090  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 14091  010468  22F8               	addwfc	tblptru,f,c
 14092  01046A                     	endif
 14093  01046A  0009               	tblrd		*+
 14094  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 14095  010470  0009               	tblrd		*+
 14096  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14097  010476  0009               	tblrd		*+
 14098  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14099  01047C  000A               	tblrd		*-
 14100  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14101  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14102  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14103  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14104  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14105  010492  ECCB  F0A9         	call	___lldiv	;wreg free
 14106  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14107  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14108  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14109  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14110  0104A6  0E0A               	movlw	10
 14111  0104A8  0100               	movlb	0	; () banked
 14112  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14113  0104AC  0E00               	movlw	0
 14114  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14115  0104B0  0E00               	movlw	0
 14116  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14117  0104B4  0E00               	movlw	0
 14118  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14119  0104B8  EC32  F0AC         	call	___llmod	;wreg free
 14120  0104BC  0100               	movlb	0	; () banked
 14121  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14122  0104C0  0F30               	addlw	48
 14123  0104C2  0100               	movlb	0	; () banked
 14124  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;doprnt.c: 1523: }
 14128                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14129  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14130  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14131  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14132                           
 14133                           ; BSR set to: 0
 14134  0104D2  0100               	movlb	0	; () banked
 14135  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14136  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14137  0104D8                     l10997:
 14138                           
 14139                           ; BSR set to: 0
 14140  0104D8  0100               	movlb	0	; () banked
 14141  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14142  0104DC  A0D8               	btfss	status,0,c
 14143  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14144  0104E0  0100               	movlb	0	; () banked
 14145  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14146  0104E4  E1AC               	bnz	l10991
 14147  0104E6  0100               	movlb	0	; () banked
 14148  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14149  0104EA  A4D8               	btfss	status,2,c
 14150  0104EC  D7A8               	goto	l10991
 14151  0104EE                     l10999:
 14152                           
 14153                           ; BSR set to: 0
 14154  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14155  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14156  0104F6  0100               	movlb	0	; () banked
 14157  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14158  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14159  0104FC                     	if	0	;tblptru may be non-zero
 14160  0104FC                     	endif
 14161  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14162  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14163  0104FE  6EF8               	movwf	tblptru,c
 14164  010500                     	endif
 14165  010500  0008               	tblrd		*
 14166  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14167  010506  0100               	movlb	0	; () banked
 14168  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14169  01050A  A4D8               	btfss	status,2,c
 14170  01050C  D580               	goto	l10853
 14171  01050E                     l11001:
 14172                           
 14173                           ;doprnt.c: 1538: *sp = 0;
 14174  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14175  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14176  010516  0E00               	movlw	0
 14177  010518  6EDF               	movwf	indf2,c
 14178  01051A  0012               	return	
 14179  01051C                     __end_of_sprintf:
 14180                           	opt stack 0
 14181                           tblptru	equ	0xFF8
 14182                           tblptrh	equ	0xFF7
 14183                           tblptrl	equ	0xFF6
 14184                           tablat	equ	0xFF5
 14185                           prodh	equ	0xFF4
 14186                           prodl	equ	0xFF3
 14187                           intcon	equ	0xFF2
 14188                           postinc0	equ	0xFEE
 14189                           wreg	equ	0xFE8
 14190                           indf1	equ	0xFE7
 14191                           postinc1	equ	0xFE6
 14192                           postdec1	equ	0xFE5
 14193                           fsr1h	equ	0xFE2
 14194                           fsr1l	equ	0xFE1
 14195                           indf2	equ	0xFDF
 14196                           postinc2	equ	0xFDE
 14197                           postdec2	equ	0xFDD
 14198                           plusw2	equ	0xFDB
 14199                           fsr2h	equ	0xFDA
 14200                           fsr2l	equ	0xFD9
 14201                           status	equ	0xFD8
 14202                           
 14203 ;; *************** function _isdigit *****************
 14204 ;; Defined at:
 14205 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;  c               1    wreg     unsigned char 
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;  c               1    2[BANK0 ] unsigned char 
 14210 ;; Return value:  Size  Location     Type
 14211 ;;		None               void
 14212 ;; Registers used:
 14213 ;;		wreg, status,2, status,0
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14220 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14222 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14223 ;;Total ram usage:        3 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:   11
 14226 ;; This function calls:
 14227 ;;		Nothing
 14228 ;; This function is called by:
 14229 ;;		_sprintf
 14230 ;;		_atoi
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           	psect	text40
 14235  016A84                     __ptext40:
 14236                           	opt stack 0
 14237  016A84                     _isdigit:
 14238                           	opt stack 13
 14239                           
 14240                           ;incstack = 0
 14241                           ;isdigit@c stored from wreg
 14242  016A84  0100               	movlb	0	; () banked
 14243  016A86  6F62               	movwf	isdigit@c& (0+255),b
 14244  016A88  0E00               	movlw	0
 14245  016A8A  0100               	movlb	0	; () banked
 14246  016A8C  6F61               	movwf	_isdigit$6420& (0+255),b
 14247                           
 14248                           ; BSR set to: 0
 14249  016A8E  0E3A               	movlw	58
 14250  016A90  0100               	movlb	0	; () banked
 14251  016A92  6162               	cpfslt	isdigit@c& (0+255),b
 14252  016A94  D007               	goto	l10707
 14253                           
 14254                           ; BSR set to: 0
 14255  016A96  0E2F               	movlw	47
 14256  016A98  0100               	movlb	0	; () banked
 14257  016A9A  6562               	cpfsgt	isdigit@c& (0+255),b
 14258  016A9C  D003               	goto	l10707
 14259                           
 14260                           ; BSR set to: 0
 14261  016A9E  0E01               	movlw	1
 14262  016AA0  0100               	movlb	0	; () banked
 14263  016AA2  6F61               	movwf	_isdigit$6420& (0+255),b
 14264  016AA4                     l10707:
 14265                           
 14266                           ; BSR set to: 0
 14267  016AA4  C061  F060         	movff	_isdigit$6420,??_isdigit
 14268  016AA8  0100               	movlb	0	; () banked
 14269  016AAA  3160               	rrcf	??_isdigit& (0+255),w,b
 14270  016AAC  0012               	return	
 14271  016AAE                     __end_of_isdigit:
 14272                           	opt stack 0
 14273                           tblptru	equ	0xFF8
 14274                           tblptrh	equ	0xFF7
 14275                           tblptrl	equ	0xFF6
 14276                           tablat	equ	0xFF5
 14277                           prodh	equ	0xFF4
 14278                           prodl	equ	0xFF3
 14279                           intcon	equ	0xFF2
 14280                           postinc0	equ	0xFEE
 14281                           wreg	equ	0xFE8
 14282                           indf1	equ	0xFE7
 14283                           postinc1	equ	0xFE6
 14284                           postdec1	equ	0xFE5
 14285                           fsr1h	equ	0xFE2
 14286                           fsr1l	equ	0xFE1
 14287                           indf2	equ	0xFDF
 14288                           postinc2	equ	0xFDE
 14289                           postdec2	equ	0xFDD
 14290                           plusw2	equ	0xFDB
 14291                           fsr2h	equ	0xFDA
 14292                           fsr2l	equ	0xFD9
 14293                           status	equ	0xFD8
 14294                           
 14295 ;; *************** function ___llmod *****************
 14296 ;; Defined at:
 14297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;  dividend        4   13[BANK0 ] unsigned long 
 14300 ;;  divisor         4   17[BANK0 ] unsigned long 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  counter         1   21[BANK0 ] unsigned char 
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  4   13[BANK0 ] unsigned long 
 14305 ;; Registers used:
 14306 ;;		wreg, status,2, status,0
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14312 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14315 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14316 ;;Total ram usage:        9 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:   11
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_display_LCD
 14323 ;;		_sprintf
 14324 ;; This function uses a non-reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text41
 14328  015864                     __ptext41:
 14329                           	opt stack 0
 14330  015864                     ___llmod:
 14331                           	opt stack 13
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;incstack = 0
 14335  015864  0100               	movlb	0	; () banked
 14336  015866  5171               	movf	___llmod@divisor& (0+255),w,b
 14337  015868  0100               	movlb	0	; () banked
 14338  01586A  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14339  01586C  0100               	movlb	0	; () banked
 14340  01586E  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14341  015870  0100               	movlb	0	; () banked
 14342  015872  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14343  015874  B4D8               	btfsc	status,2,c
 14344  015876  D03A               	goto	l2390
 14345                           
 14346                           ; BSR set to: 0
 14347  015878  0E01               	movlw	1
 14348  01587A  0100               	movlb	0	; () banked
 14349  01587C  6F75               	movwf	___llmod@counter& (0+255),b
 14350  01587E  D008               	goto	l10723
 14351  015880                     l10721:
 14352                           
 14353                           ; BSR set to: 0
 14354  015880  0100               	movlb	0	; () banked
 14355  015882  90D8               	bcf	status,0,c
 14356  015884  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14357  015886  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14358  015888  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14359  01588A  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14360  01588C  0100               	movlb	0	; () banked
 14361  01588E  2B75               	incf	___llmod@counter& (0+255),f,b
 14362  015890                     l10723:
 14363                           
 14364                           ; BSR set to: 0
 14365  015890  0100               	movlb	0	; () banked
 14366  015892  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14367  015894  D7F5               	goto	l10721
 14368  015896                     l10725:
 14369                           
 14370                           ; BSR set to: 0
 14371  015896  0100               	movlb	0	; () banked
 14372  015898  5171               	movf	___llmod@divisor& (0+255),w,b
 14373  01589A  0100               	movlb	0	; () banked
 14374  01589C  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14375  01589E  0100               	movlb	0	; () banked
 14376  0158A0  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14377  0158A2  0100               	movlb	0	; () banked
 14378  0158A4  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14379  0158A6  0100               	movlb	0	; () banked
 14380  0158A8  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14381  0158AA  0100               	movlb	0	; () banked
 14382  0158AC  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14383  0158AE  0100               	movlb	0	; () banked
 14384  0158B0  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14385  0158B2  0100               	movlb	0	; () banked
 14386  0158B4  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14387  0158B6  A0D8               	btfss	status,0,c
 14388  0158B8  D010               	goto	l10729
 14389                           
 14390                           ; BSR set to: 0
 14391  0158BA  0100               	movlb	0	; () banked
 14392  0158BC  5171               	movf	___llmod@divisor& (0+255),w,b
 14393  0158BE  0100               	movlb	0	; () banked
 14394  0158C0  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14395  0158C2  0100               	movlb	0	; () banked
 14396  0158C4  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14397  0158C6  0100               	movlb	0	; () banked
 14398  0158C8  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14399  0158CA  0100               	movlb	0	; () banked
 14400  0158CC  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14401  0158CE  0100               	movlb	0	; () banked
 14402  0158D0  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14403  0158D2  0100               	movlb	0	; () banked
 14404  0158D4  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14405  0158D6  0100               	movlb	0	; () banked
 14406  0158D8  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14407  0158DA                     l10729:
 14408                           
 14409                           ; BSR set to: 0
 14410  0158DA  0100               	movlb	0	; () banked
 14411  0158DC  90D8               	bcf	status,0,c
 14412  0158DE  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14413  0158E0  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14414  0158E2  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14415  0158E4  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14416                           
 14417                           ; BSR set to: 0
 14418  0158E6  0100               	movlb	0	; () banked
 14419  0158E8  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14420  0158EA  D7D5               	goto	l10725
 14421  0158EC                     l2390:
 14422                           
 14423                           ; BSR set to: 0
 14424  0158EC  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14425  0158F0  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14426  0158F4  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14427  0158F8  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14428                           
 14429                           ; BSR set to: 0
 14430  0158FC  0012               	return		;funcret
 14431  0158FE                     __end_of___llmod:
 14432                           	opt stack 0
 14433                           tblptru	equ	0xFF8
 14434                           tblptrh	equ	0xFF7
 14435                           tblptrl	equ	0xFF6
 14436                           tablat	equ	0xFF5
 14437                           prodh	equ	0xFF4
 14438                           prodl	equ	0xFF3
 14439                           intcon	equ	0xFF2
 14440                           postinc0	equ	0xFEE
 14441                           wreg	equ	0xFE8
 14442                           indf1	equ	0xFE7
 14443                           postinc1	equ	0xFE6
 14444                           postdec1	equ	0xFE5
 14445                           fsr1h	equ	0xFE2
 14446                           fsr1l	equ	0xFE1
 14447                           indf2	equ	0xFDF
 14448                           postinc2	equ	0xFDE
 14449                           postdec2	equ	0xFDD
 14450                           plusw2	equ	0xFDB
 14451                           fsr2h	equ	0xFDA
 14452                           fsr2l	equ	0xFD9
 14453                           status	equ	0xFD8
 14454                           
 14455 ;; *************** function _ringbuf_put_str *****************
 14456 ;; Defined at:
 14457 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14460 ;;		 -> usb_tx(8), 
 14461 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14462 ;;		 -> STR_69(2), data_out@str(30), STR_66(18), STR_63(36), 
 14463 ;;		 -> STR_62(24), STR_53(434), STR_24(8), print_time@str(30), 
 14464 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;		None
 14467 ;; Return value:  Size  Location     Type
 14468 ;;		None               void
 14469 ;; Registers used:
 14470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/0
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14479 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14480 ;;Total ram usage:        4 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:   13
 14483 ;; This function calls:
 14484 ;;		_ringbuf_put
 14485 ;; This function is called by:
 14486 ;;		_terminal_task
 14487 ;;		_print_time
 14488 ;;		_terminal_at_hand
 14489 ;;		_terminal_operation
 14490 ;;		_data_out
 14491 ;;		_print_time_dec
 14492 ;; This function uses a non-reentrant model
 14493 ;;
 14494                           
 14495                           	psect	text42
 14496  0161F2                     __ptext42:
 14497                           	opt stack 0
 14498  0161F2                     _ringbuf_put_str:
 14499                           	opt stack 13
 14500                           
 14501                           ;My_ringbuf.c: 40: while (*str) {
 14502                           
 14503                           ; BSR set to: 0
 14504                           ;incstack = 0
 14505  0161F2  D01C               	goto	l10765
 14506  0161F4                     l10761:
 14507                           
 14508                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14509  0161F4  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14510  0161F8  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14511  0161FC  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14512  016200  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14513  016204  0E00               	movlw	low (__mediumconst shr (0+16))
 14514  016206  6EF8               	movwf	tblptru,c
 14515  016208  0E0E               	movlw	(high __ramtop+-1)
 14516  01620A  64F7               	cpfsgt	tblptrh,c
 14517  01620C  D003               	bra	u11757
 14518  01620E  0008               	tblrd		*
 14519  016210  50F5               	movf	tablat,w,c
 14520  016212  D005               	bra	u11750
 14521  016214                     u11757:
 14522  016214  CFF6 FFE1          	movff	tblptrl,fsr1l
 14523  016218  CFF7 FFE2          	movff	tblptrh,fsr1h
 14524  01621C  50E7               	movf	indf1,w,c
 14525  01621E                     u11750:
 14526  01621E  0100               	movlb	0	; () banked
 14527  016220  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 14528  016222  EC77  F0A5         	call	_ringbuf_put	;wreg free
 14529  016226  0100               	movlb	0	; () banked
 14530  016228  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14531  01622A  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14532  01622C                     l10765:
 14533  01622C  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14534  016230  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14535  016234  0E00               	movlw	low (__mediumconst shr (0+16))
 14536  016236  6EF8               	movwf	tblptru,c
 14537  016238  0E0E               	movlw	(high __ramtop+-1)
 14538  01623A  64F7               	cpfsgt	tblptrh,c
 14539  01623C  D003               	bra	u11767
 14540  01623E  0008               	tblrd		*
 14541  016240  50F5               	movf	tablat,w,c
 14542  016242  D005               	bra	u11760
 14543  016244                     u11767:
 14544  016244  CFF6 FFE1          	movff	tblptrl,fsr1l
 14545  016248  CFF7 FFE2          	movff	tblptrh,fsr1h
 14546  01624C  50E7               	movf	indf1,w,c
 14547  01624E                     u11760:
 14548  01624E  0900               	iorlw	0
 14549  016250  B4D8               	btfsc	status,2,c
 14550  016252  0012               	return	
 14551  016254  D7CF               	goto	l10761
 14552  016256                     __end_of_ringbuf_put_str:
 14553                           	opt stack 0
 14554                           tblptru	equ	0xFF8
 14555                           tblptrh	equ	0xFF7
 14556                           tblptrl	equ	0xFF6
 14557                           tablat	equ	0xFF5
 14558                           prodh	equ	0xFF4
 14559                           prodl	equ	0xFF3
 14560                           intcon	equ	0xFF2
 14561                           postinc0	equ	0xFEE
 14562                           wreg	equ	0xFE8
 14563                           indf1	equ	0xFE7
 14564                           postinc1	equ	0xFE6
 14565                           postdec1	equ	0xFE5
 14566                           fsr1h	equ	0xFE2
 14567                           fsr1l	equ	0xFE1
 14568                           indf2	equ	0xFDF
 14569                           postinc2	equ	0xFDE
 14570                           postdec2	equ	0xFDD
 14571                           plusw2	equ	0xFDB
 14572                           fsr2h	equ	0xFDA
 14573                           fsr2l	equ	0xFD9
 14574                           status	equ	0xFD8
 14575                           
 14576 ;; *************** function ___lwmod *****************
 14577 ;; Defined at:
 14578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14579 ;; Parameters:    Size  Location     Type
 14580 ;;  dividend        2    0[BANK0 ] unsigned int 
 14581 ;;  divisor         2    2[BANK0 ] unsigned int 
 14582 ;; Auto vars:     Size  Location     Type
 14583 ;;  counter         1    4[BANK0 ] unsigned char 
 14584 ;; Return value:  Size  Location     Type
 14585 ;;                  2    0[BANK0 ] unsigned int 
 14586 ;; Registers used:
 14587 ;;		wreg, status,2, status,0
 14588 ;; Tracked objects:
 14589 ;;		On entry : 0/0
 14590 ;;		On exit  : 0/0
 14591 ;;		Unchanged: 0/0
 14592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14596 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14597 ;;Total ram usage:        5 bytes
 14598 ;; Hardware stack levels used:    1
 14599 ;; Hardware stack levels required when called:   11
 14600 ;; This function calls:
 14601 ;;		Nothing
 14602 ;; This function is called by:
 14603 ;;		_ringbuf_put_num
 14604 ;;		_data_out
 14605 ;;		_display_LCD
 14606 ;; This function uses a non-reentrant model
 14607 ;;
 14608                           
 14609                           	psect	text43
 14610  01631C                     __ptext43:
 14611                           	opt stack 0
 14612  01631C                     ___lwmod:
 14613                           	opt stack 17
 14614                           
 14615                           ;incstack = 0
 14616  01631C  0100               	movlb	0	; () banked
 14617  01631E  5162               	movf	___lwmod@divisor& (0+255),w,b
 14618  016320  0100               	movlb	0	; () banked
 14619  016322  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14620  016324  B4D8               	btfsc	status,2,c
 14621  016326  D026               	goto	l2443
 14622                           
 14623                           ; BSR set to: 0
 14624  016328  0E01               	movlw	1
 14625  01632A  0100               	movlb	0	; () banked
 14626  01632C  6F64               	movwf	___lwmod@counter& (0+255),b
 14627  01632E  D006               	goto	l12023
 14628  016330                     l12021:
 14629                           
 14630                           ; BSR set to: 0
 14631  016330  0100               	movlb	0	; () banked
 14632  016332  90D8               	bcf	status,0,c
 14633  016334  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14634  016336  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14635  016338  0100               	movlb	0	; () banked
 14636  01633A  2B64               	incf	___lwmod@counter& (0+255),f,b
 14637  01633C                     l12023:
 14638                           
 14639                           ; BSR set to: 0
 14640  01633C  0100               	movlb	0	; () banked
 14641  01633E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14642  016340  D7F7               	goto	l12021
 14643  016342                     l12025:
 14644                           
 14645                           ; BSR set to: 0
 14646  016342  0100               	movlb	0	; () banked
 14647  016344  5162               	movf	___lwmod@divisor& (0+255),w,b
 14648  016346  0100               	movlb	0	; () banked
 14649  016348  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14650  01634A  0100               	movlb	0	; () banked
 14651  01634C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14652  01634E  0100               	movlb	0	; () banked
 14653  016350  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14654  016352  A0D8               	btfss	status,0,c
 14655  016354  D008               	goto	l12029
 14656                           
 14657                           ; BSR set to: 0
 14658  016356  0100               	movlb	0	; () banked
 14659  016358  5162               	movf	___lwmod@divisor& (0+255),w,b
 14660  01635A  0100               	movlb	0	; () banked
 14661  01635C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14662  01635E  0100               	movlb	0	; () banked
 14663  016360  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14664  016362  0100               	movlb	0	; () banked
 14665  016364  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14666  016366                     l12029:
 14667                           
 14668                           ; BSR set to: 0
 14669  016366  0100               	movlb	0	; () banked
 14670  016368  90D8               	bcf	status,0,c
 14671  01636A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14672  01636C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14673                           
 14674                           ; BSR set to: 0
 14675  01636E  0100               	movlb	0	; () banked
 14676  016370  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14677  016372  D7E7               	goto	l12025
 14678  016374                     l2443:
 14679                           
 14680                           ; BSR set to: 0
 14681  016374  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14682  016378  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14683                           
 14684                           ; BSR set to: 0
 14685  01637C  0012               	return		;funcret
 14686  01637E                     __end_of___lwmod:
 14687                           	opt stack 0
 14688                           tblptru	equ	0xFF8
 14689                           tblptrh	equ	0xFF7
 14690                           tblptrl	equ	0xFF6
 14691                           tablat	equ	0xFF5
 14692                           prodh	equ	0xFF4
 14693                           prodl	equ	0xFF3
 14694                           intcon	equ	0xFF2
 14695                           postinc0	equ	0xFEE
 14696                           wreg	equ	0xFE8
 14697                           indf1	equ	0xFE7
 14698                           postinc1	equ	0xFE6
 14699                           postdec1	equ	0xFE5
 14700                           fsr1h	equ	0xFE2
 14701                           fsr1l	equ	0xFE1
 14702                           indf2	equ	0xFDF
 14703                           postinc2	equ	0xFDE
 14704                           postdec2	equ	0xFDD
 14705                           plusw2	equ	0xFDB
 14706                           fsr2h	equ	0xFDA
 14707                           fsr2l	equ	0xFD9
 14708                           status	equ	0xFD8
 14709                           
 14710 ;; *************** function _Auto_cut *****************
 14711 ;; Defined at:
 14712 ;;		line 49 in file "ChargeStation_task.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;		None
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;  i               1   30[BANK0 ] unsigned char 
 14717 ;; Return value:  Size  Location     Type
 14718 ;;		None               void
 14719 ;; Registers used:
 14720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14730 ;;Total ram usage:        3 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:   12
 14733 ;; This function calls:
 14734 ;;		_ADC
 14735 ;;		_ANALOG_IN
 14736 ;;		_OUT
 14737 ;;		___wmul
 14738 ;; This function is called by:
 14739 ;;		_normal_task
 14740 ;; This function uses a non-reentrant model
 14741 ;;
 14742                           
 14743                           	psect	text44
 14744  0138F6                     __ptext44:
 14745                           	opt stack 0
 14746  0138F6                     _Auto_cut:
 14747                           	opt stack 17
 14748                           
 14749                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;incstack = 0
 14753  0138F6  0E00               	movlw	0
 14754  0138F8  0100               	movlb	0	; () banked
 14755  0138FA  6F7E               	movwf	Auto_cut@i& (0+255),b
 14756  0138FC                     l12305:
 14757                           
 14758                           ; BSR set to: 0
 14759  0138FC  0E02               	movlw	2
 14760  0138FE  0100               	movlb	0	; () banked
 14761  013900  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14762  013902  D001               	goto	l12309
 14763  013904  0012               	return	
 14764  013906                     l12309:
 14765                           
 14766                           ; BSR set to: 0
 14767                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14768  013906  0100               	movlb	0	; () banked
 14769  013908  517E               	movf	Auto_cut@i& (0+255),w,b
 14770  01390A  ECD4  F0B4         	call	_ANALOG_IN
 14771  01390E  EC90  F0B4         	call	_ADC
 14772  013912  C060  F076         	movff	?_ADC,___wmul@multiplier
 14773  013916  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14774  01391A  0E00               	movlw	0
 14775  01391C  0100               	movlb	0	; () banked
 14776  01391E  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14777  013920  0E0D               	movlw	13
 14778  013922  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14779  013924  EC2A  F0B4         	call	___wmul	;wreg free
 14780  013928  0E04               	movlw	4
 14781  01392A  0100               	movlb	0	; () banked
 14782  01392C  6F7C               	movwf	??_Auto_cut& (0+255),b
 14783  01392E                     u14095:
 14784  01392E  0100               	movlb	0	; () banked
 14785  013930  90D8               	bcf	status,0,c
 14786  013932  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14787  013934  3376               	rrcf	?___wmul& (0+255),f,b
 14788  013936  0100               	movlb	0	; () banked
 14789  013938  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14790  01393A  D7F9               	goto	u14095
 14791  01393C  0100               	movlb	0	; () banked
 14792  01393E  517E               	movf	Auto_cut@i& (0+255),w,b
 14793  013940  0D17               	mullw	23
 14794  013942  0E06               	movlw	6
 14795  013944  26F3               	addwf	prodl,f,c
 14796  013946  0E00               	movlw	0
 14797  013948  22F4               	addwfc	prodh,f,c
 14798  01394A  0E35               	movlw	low _port
 14799  01394C  24F3               	addwf	prodl,w,c
 14800  01394E  6ED9               	movwf	fsr2l,c
 14801  013950  0E01               	movlw	high _port
 14802  013952  20F4               	addwfc	prodh,w,c
 14803  013954  6EDA               	movwf	fsr2h,c
 14804  013956  0100               	movlb	0	; () banked
 14805  013958  C076  FFDE         	movff	?___wmul,postinc2
 14806  01395C  0100               	movlb	0	; () banked
 14807  01395E  C077  FFDD         	movff	?___wmul+1,postdec2
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14811  013962  0100               	movlb	0	; () banked
 14812  013964  517E               	movf	Auto_cut@i& (0+255),w,b
 14813  013966  0D17               	mullw	23
 14814  013968  0E16               	movlw	22
 14815  01396A  26F3               	addwf	prodl,f,c
 14816  01396C  0E00               	movlw	0
 14817  01396E  22F4               	addwfc	prodh,f,c
 14818  013970  0E35               	movlw	low _port
 14819  013972  24F3               	addwf	prodl,w,c
 14820  013974  6ED9               	movwf	fsr2l,c
 14821  013976  0E01               	movlw	high _port
 14822  013978  20F4               	addwfc	prodh,w,c
 14823  01397A  6EDA               	movwf	fsr2h,c
 14824  01397C  0101               	movlb	1	; () banked
 14825  01397E  A0DF               	btfss	indf2,0,c
 14826  013980  D051               	goto	l12321
 14827                           
 14828                           ; BSR set to: 1
 14829                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 14830  013982  0100               	movlb	0	; () banked
 14831  013984  517E               	movf	Auto_cut@i& (0+255),w,b
 14832  013986  0D17               	mullw	23
 14833  013988  0E06               	movlw	6
 14834  01398A  26F3               	addwf	prodl,f,c
 14835  01398C  0E00               	movlw	0
 14836  01398E  22F4               	addwfc	prodh,f,c
 14837  013990  0E35               	movlw	low _port
 14838  013992  24F3               	addwf	prodl,w,c
 14839  013994  6ED9               	movwf	fsr2l,c
 14840  013996  0E01               	movlw	high _port
 14841  013998  20F4               	addwfc	prodh,w,c
 14842  01399A  6EDA               	movwf	fsr2h,c
 14843  01399C  0E01               	movlw	1
 14844  01399E  50DB               	movf	plusw2,w,c
 14845  0139A0  E130               	bnz	l12319
 14846  0139A2  0E64               	movlw	100
 14847  0139A4  5CDE               	subwf	postinc2,w,c
 14848  0139A6  B0D8               	btfsc	status,0,c
 14849  0139A8  D02C               	goto	l12319
 14850                           
 14851                           ; BSR set to: 0
 14852                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 14853  0139AA  0100               	movlb	0	; () banked
 14854  0139AC  517E               	movf	Auto_cut@i& (0+255),w,b
 14855  0139AE  0D17               	mullw	23
 14856  0139B0  0E14               	movlw	20
 14857  0139B2  26F3               	addwf	prodl,f,c
 14858  0139B4  0E00               	movlw	0
 14859  0139B6  22F4               	addwfc	prodh,f,c
 14860  0139B8  0E35               	movlw	low _port
 14861  0139BA  24F3               	addwf	prodl,w,c
 14862  0139BC  6ED9               	movwf	fsr2l,c
 14863  0139BE  0E01               	movlw	high _port
 14864  0139C0  20F4               	addwfc	prodh,w,c
 14865  0139C2  6EDA               	movwf	fsr2h,c
 14866  0139C4  2ADE               	incf	postinc2,f,c
 14867  0139C6  0E00               	movlw	0
 14868  0139C8  22DD               	addwfc	postdec2,f,c
 14869                           
 14870                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 14871  0139CA  0100               	movlb	0	; () banked
 14872  0139CC  517E               	movf	Auto_cut@i& (0+255),w,b
 14873  0139CE  0D17               	mullw	23
 14874  0139D0  0E14               	movlw	20
 14875  0139D2  26F3               	addwf	prodl,f,c
 14876  0139D4  0E00               	movlw	0
 14877  0139D6  22F4               	addwfc	prodh,f,c
 14878  0139D8  0E35               	movlw	low _port
 14879  0139DA  24F3               	addwf	prodl,w,c
 14880  0139DC  6ED9               	movwf	fsr2l,c
 14881  0139DE  0E01               	movlw	high _port
 14882  0139E0  20F4               	addwfc	prodh,w,c
 14883  0139E2  6EDA               	movwf	fsr2h,c
 14884  0139E4  0E01               	movlw	1
 14885  0139E6  50DB               	movf	plusw2,w,c
 14886  0139E8  E104               	bnz	u14120
 14887  0139EA  0E07               	movlw	7
 14888  0139EC  5CDE               	subwf	postinc2,w,c
 14889  0139EE  A0D8               	btfss	status,0,c
 14890  0139F0  D019               	goto	l12321
 14891  0139F2                     u14120:
 14892                           
 14893                           ; BSR set to: 0
 14894                           ;ChargeStation_task.c: 57: OUT(i, 0);
 14895  0139F2  0E00               	movlw	0
 14896  0139F4  0100               	movlb	0	; () banked
 14897  0139F6  6F60               	movwf	OUT@value& (0+255),b
 14898  0139F8  0100               	movlb	0	; () banked
 14899  0139FA  517E               	movf	Auto_cut@i& (0+255),w,b
 14900  0139FC  ECE9  F0AF         	call	_OUT
 14901                           
 14902                           ;ChargeStation_task.c: 58: }
 14903                           ;ChargeStation_task.c: 59: } else {
 14904  013A00  D011               	goto	l12321
 14905  013A02                     l12319:
 14906                           
 14907                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 14908  013A02  0100               	movlb	0	; () banked
 14909  013A04  517E               	movf	Auto_cut@i& (0+255),w,b
 14910  013A06  0D17               	mullw	23
 14911  013A08  0E14               	movlw	20
 14912  013A0A  26F3               	addwf	prodl,f,c
 14913  013A0C  0E00               	movlw	0
 14914  013A0E  22F4               	addwfc	prodh,f,c
 14915  013A10  0E35               	movlw	low _port
 14916  013A12  24F3               	addwf	prodl,w,c
 14917  013A14  6ED9               	movwf	fsr2l,c
 14918  013A16  0E01               	movlw	high _port
 14919  013A18  20F4               	addwfc	prodh,w,c
 14920  013A1A  6EDA               	movwf	fsr2h,c
 14921  013A1C  0E00               	movlw	0
 14922  013A1E  6EDE               	movwf	postinc2,c
 14923  013A20  0E00               	movlw	0
 14924  013A22  6EDD               	movwf	postdec2,c
 14925  013A24                     l12321:
 14926  013A24  0100               	movlb	0	; () banked
 14927  013A26  2B7E               	incf	Auto_cut@i& (0+255),f,b
 14928  013A28  D769               	goto	l12305
 14929  013A2A                     __end_of_Auto_cut:
 14930                           	opt stack 0
 14931                           tblptru	equ	0xFF8
 14932                           tblptrh	equ	0xFF7
 14933                           tblptrl	equ	0xFF6
 14934                           tablat	equ	0xFF5
 14935                           prodh	equ	0xFF4
 14936                           prodl	equ	0xFF3
 14937                           intcon	equ	0xFF2
 14938                           postinc0	equ	0xFEE
 14939                           wreg	equ	0xFE8
 14940                           indf1	equ	0xFE7
 14941                           postinc1	equ	0xFE6
 14942                           postdec1	equ	0xFE5
 14943                           fsr1h	equ	0xFE2
 14944                           fsr1l	equ	0xFE1
 14945                           indf2	equ	0xFDF
 14946                           postinc2	equ	0xFDE
 14947                           postdec2	equ	0xFDD
 14948                           plusw2	equ	0xFDB
 14949                           fsr2h	equ	0xFDA
 14950                           fsr2l	equ	0xFD9
 14951                           status	equ	0xFD8
 14952                           
 14953 ;; *************** function ___wmul *****************
 14954 ;; Defined at:
 14955 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14956 ;; Parameters:    Size  Location     Type
 14957 ;;  multiplier      2   22[BANK0 ] unsigned int 
 14958 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;  product         2   26[BANK0 ] unsigned int 
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  2   22[BANK0 ] unsigned int 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2, status,0, prodl, prodh
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14973 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14974 ;;Total ram usage:        6 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:   11
 14977 ;; This function calls:
 14978 ;;		Nothing
 14979 ;; This function is called by:
 14980 ;;		_Auto_cut
 14981 ;;		_ctmu_set_ratio
 14982 ;;		_sprintf
 14983 ;;		_atoi
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           	psect	text45
 14988  016854                     __ptext45:
 14989                           	opt stack 0
 14990  016854                     ___wmul:
 14991                           	opt stack 13
 14992                           
 14993                           ; BSR set to: 0
 14994                           ;incstack = 0
 14995  016854  0100               	movlb	0	; () banked
 14996  016856  5176               	movf	___wmul@multiplier& (0+255),w,b
 14997  016858  0100               	movlb	0	; () banked
 14998  01685A  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14999  01685C  CFF3 F07A          	movff	prodl,___wmul@product
 15000  016860  CFF4 F07B          	movff	prodh,___wmul@product+1
 15001  016864  0100               	movlb	0	; () banked
 15002  016866  5176               	movf	___wmul@multiplier& (0+255),w,b
 15003  016868  0100               	movlb	0	; () banked
 15004  01686A  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15005  01686C  50F3               	movf	prodl,w,c
 15006  01686E  0100               	movlb	0	; () banked
 15007  016870  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15008  016872  0100               	movlb	0	; () banked
 15009  016874  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15010  016876  0100               	movlb	0	; () banked
 15011  016878  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15012  01687A  50F3               	movf	prodl,w,c
 15013  01687C  0100               	movlb	0	; () banked
 15014  01687E  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15015                           
 15016                           ; BSR set to: 0
 15017  016880  C07A  F076         	movff	___wmul@product,?___wmul
 15018  016884  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 15019  016888  0012               	return	
 15020  01688A                     __end_of___wmul:
 15021                           	opt stack 0
 15022                           tblptru	equ	0xFF8
 15023                           tblptrh	equ	0xFF7
 15024                           tblptrl	equ	0xFF6
 15025                           tablat	equ	0xFF5
 15026                           prodh	equ	0xFF4
 15027                           prodl	equ	0xFF3
 15028                           intcon	equ	0xFF2
 15029                           postinc0	equ	0xFEE
 15030                           wreg	equ	0xFE8
 15031                           indf1	equ	0xFE7
 15032                           postinc1	equ	0xFE6
 15033                           postdec1	equ	0xFE5
 15034                           fsr1h	equ	0xFE2
 15035                           fsr1l	equ	0xFE1
 15036                           indf2	equ	0xFDF
 15037                           postinc2	equ	0xFDE
 15038                           postdec2	equ	0xFDD
 15039                           plusw2	equ	0xFDB
 15040                           fsr2h	equ	0xFDA
 15041                           fsr2l	equ	0xFD9
 15042                           status	equ	0xFD8
 15043                           
 15044 ;; *************** function _OUT *****************
 15045 ;; Defined at:
 15046 ;;		line 7 in file "io.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;  b               1    wreg     unsigned char 
 15049 ;;  value           1    0[BANK0 ] unsigned char 
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;  b               1    1[BANK0 ] unsigned char 
 15052 ;; Return value:  Size  Location     Type
 15053 ;;		None               void
 15054 ;; Registers used:
 15055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15061 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15065 ;;Total ram usage:        2 bytes
 15066 ;; Hardware stack levels used:    1
 15067 ;; Hardware stack levels required when called:   11
 15068 ;; This function calls:
 15069 ;;		Nothing
 15070 ;; This function is called by:
 15071 ;;		_Auto_cut
 15072 ;;		_port_button_task
 15073 ;;		_sleep_task
 15074 ;;		_software_init
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           	psect	text46
 15079  015FD2                     __ptext46:
 15080                           	opt stack 0
 15081  015FD2                     _OUT:
 15082                           	opt stack 18
 15083                           
 15084                           ; BSR set to: 0
 15085                           ;incstack = 0
 15086                           ;OUT@b stored from wreg
 15087  015FD2  0100               	movlb	0	; () banked
 15088  015FD4  6F61               	movwf	OUT@b& (0+255),b
 15089                           
 15090                           ;io.c: 8: port[b].flag.out_flag = value;
 15091  015FD6  0100               	movlb	0	; () banked
 15092  015FD8  5161               	movf	OUT@b& (0+255),w,b
 15093  015FDA  0D17               	mullw	23
 15094  015FDC  0E16               	movlw	22
 15095  015FDE  26F3               	addwf	prodl,f,c
 15096  015FE0  0E00               	movlw	0
 15097  015FE2  22F4               	addwfc	prodh,f,c
 15098  015FE4  0E35               	movlw	low _port
 15099  015FE6  24F3               	addwf	prodl,w,c
 15100  015FE8  6ED9               	movwf	fsr2l,c
 15101  015FEA  0E01               	movlw	high _port
 15102  015FEC  20F4               	addwfc	prodh,w,c
 15103  015FEE  6EDA               	movwf	fsr2h,c
 15104  015FF0  0100               	movlb	0	; () banked
 15105  015FF2  B160               	btfsc	OUT@value& (0+255),0,b
 15106  015FF4  D003               	bra	u13285
 15107  015FF6  0101               	movlb	1	; () banked
 15108  015FF8  94DF               	bcf	indf2,2,c
 15109  015FFA  D002               	bra	u13286
 15110  015FFC                     u13285:
 15111  015FFC  0101               	movlb	1	; () banked
 15112  015FFE  84DF               	bsf	indf2,2,c
 15113  016000                     u13286:
 15114                           
 15115                           ;io.c: 9: switch (b) {
 15116  016000  D015               	goto	l11727
 15117  016002                     l1648:
 15118                           
 15119                           ; BSR set to: 0
 15120                           ;io.c: 11: LATA5 = value;
 15121  016002  0100               	movlb	0	; () banked
 15122  016004  A160               	btfss	OUT@value& (0+255),0,b
 15123  016006  D002               	goto	u13290
 15124  016008  8A89               	bsf	3977,5,c	;volatile
 15125  01600A  0012               	return	
 15126  01600C                     u13290:
 15127  01600C  9A89               	bcf	3977,5,c	;volatile
 15128                           
 15129                           ;io.c: 12: break;
 15130  01600E  0012               	return	
 15131  016010                     l1650:
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;io.c: 14: LATA6 = value;
 15135  016010  0100               	movlb	0	; () banked
 15136  016012  A160               	btfss	OUT@value& (0+255),0,b
 15137  016014  D002               	goto	u13310
 15138  016016  8C89               	bsf	3977,6,c	;volatile
 15139  016018  0012               	return	
 15140  01601A                     u13310:
 15141  01601A  9C89               	bcf	3977,6,c	;volatile
 15142                           
 15143                           ;io.c: 15: break;
 15144  01601C  0012               	return	
 15145  01601E                     l1651:
 15146                           
 15147                           ; BSR set to: 0
 15148                           ;io.c: 17: LATA7 = value;
 15149  01601E  0100               	movlb	0	; () banked
 15150  016020  A160               	btfss	OUT@value& (0+255),0,b
 15151  016022  D002               	goto	u13330
 15152  016024  8E89               	bsf	3977,7,c	;volatile
 15153  016026  0012               	return	
 15154  016028                     u13330:
 15155  016028  9E89               	bcf	3977,7,c	;volatile
 15156                           
 15157                           ;io.c: 19: }
 15158                           
 15159                           ;io.c: 18: break;
 15160  01602A  0012               	return	
 15161  01602C                     l11727:
 15162  01602C  0100               	movlb	0	; () banked
 15163  01602E  5161               	movf	OUT@b& (0+255),w,b
 15164                           
 15165                           ; Switch size 1, requested type "space"
 15166                           ; Number of cases is 3, Range of values is 0 to 2
 15167                           ; switch strategies available:
 15168                           ; Name         Instructions Cycles
 15169                           ; simple_byte           10     6 (average)
 15170                           ;	Chosen strategy is simple_byte
 15171  016030  0A00               	xorlw	0	; case 0
 15172  016032  B4D8               	btfsc	status,2,c
 15173  016034  D7E6               	goto	l1648
 15174  016036  0A01               	xorlw	1	; case 1
 15175  016038  B4D8               	btfsc	status,2,c
 15176  01603A  D7EA               	goto	l1650
 15177  01603C  0A03               	xorlw	3	; case 2
 15178  01603E  A4D8               	btfss	status,2,c
 15179  016040  0012               	return	
 15180  016042  D7ED               	goto	l1651
 15181  016044                     __end_of_OUT:
 15182                           	opt stack 0
 15183                           tblptru	equ	0xFF8
 15184                           tblptrh	equ	0xFF7
 15185                           tblptrl	equ	0xFF6
 15186                           tablat	equ	0xFF5
 15187                           prodh	equ	0xFF4
 15188                           prodl	equ	0xFF3
 15189                           intcon	equ	0xFF2
 15190                           postinc0	equ	0xFEE
 15191                           wreg	equ	0xFE8
 15192                           indf1	equ	0xFE7
 15193                           postinc1	equ	0xFE6
 15194                           postdec1	equ	0xFE5
 15195                           fsr1h	equ	0xFE2
 15196                           fsr1l	equ	0xFE1
 15197                           indf2	equ	0xFDF
 15198                           postinc2	equ	0xFDE
 15199                           postdec2	equ	0xFDD
 15200                           plusw2	equ	0xFDB
 15201                           fsr2h	equ	0xFDA
 15202                           fsr2l	equ	0xFD9
 15203                           status	equ	0xFD8
 15204                           
 15205 ;; *************** function _ANALOG_IN *****************
 15206 ;; Defined at:
 15207 ;;		line 23 in file "io.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;  b               1    wreg     unsigned char 
 15210 ;; Auto vars:     Size  Location     Type
 15211 ;;  b               1    0[BANK0 ] unsigned char 
 15212 ;; Return value:  Size  Location     Type
 15213 ;;                  1    wreg      unsigned char 
 15214 ;; Registers used:
 15215 ;;		wreg, status,2, status,0
 15216 ;; Tracked objects:
 15217 ;;		On entry : 0/0
 15218 ;;		On exit  : 0/0
 15219 ;;		Unchanged: 0/0
 15220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15225 ;;Total ram usage:        1 bytes
 15226 ;; Hardware stack levels used:    1
 15227 ;; Hardware stack levels required when called:   11
 15228 ;; This function calls:
 15229 ;;		Nothing
 15230 ;; This function is called by:
 15231 ;;		_Auto_cut
 15232 ;; This function uses a non-reentrant model
 15233 ;;
 15234                           
 15235                           	psect	text47
 15236  0169A8                     __ptext47:
 15237                           	opt stack 0
 15238  0169A8                     _ANALOG_IN:
 15239                           	opt stack 17
 15240                           
 15241                           ;incstack = 0
 15242                           ;ANALOG_IN@b stored from wreg
 15243  0169A8  0100               	movlb	0	; () banked
 15244  0169AA  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15245                           
 15246                           ;io.c: 24: switch (b) {
 15247  0169AC  D006               	goto	l11717
 15248  0169AE                     l11703:
 15249                           
 15250                           ;io.c: 26: return 8;
 15251  0169AE  0E08               	movlw	8
 15252  0169B0  0012               	return	
 15253  0169B2                     l11707:
 15254                           
 15255                           ;io.c: 28: return 9;
 15256  0169B2  0E09               	movlw	9
 15257  0169B4  0012               	return	
 15258  0169B6                     l11711:
 15259                           
 15260                           ;io.c: 30: return 10;
 15261  0169B6  0E0A               	movlw	10
 15262  0169B8  0012               	return	
 15263  0169BA                     l11717:
 15264  0169BA  0100               	movlb	0	; () banked
 15265  0169BC  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15266                           
 15267                           ; Switch size 1, requested type "space"
 15268                           ; Number of cases is 3, Range of values is 0 to 2
 15269                           ; switch strategies available:
 15270                           ; Name         Instructions Cycles
 15271                           ; simple_byte           10     6 (average)
 15272                           ;	Chosen strategy is simple_byte
 15273  0169BE  0A00               	xorlw	0	; case 0
 15274  0169C0  B4D8               	btfsc	status,2,c
 15275  0169C2  D7F5               	goto	l11703
 15276  0169C4  0A01               	xorlw	1	; case 1
 15277  0169C6  B4D8               	btfsc	status,2,c
 15278  0169C8  D7F4               	goto	l11707
 15279  0169CA  0A03               	xorlw	3	; case 2
 15280  0169CC  B4D8               	btfsc	status,2,c
 15281  0169CE  D7F3               	goto	l11711
 15282                           
 15283                           ;io.c: 32: return 0;
 15284                           
 15285                           ; BSR set to: 0
 15286  0169D0  0E00               	movlw	0
 15287  0169D2  0012               	return	
 15288  0169D4                     __end_of_ANALOG_IN:
 15289                           	opt stack 0
 15290                           tblptru	equ	0xFF8
 15291                           tblptrh	equ	0xFF7
 15292                           tblptrl	equ	0xFF6
 15293                           tablat	equ	0xFF5
 15294                           prodh	equ	0xFF4
 15295                           prodl	equ	0xFF3
 15296                           intcon	equ	0xFF2
 15297                           postinc0	equ	0xFEE
 15298                           wreg	equ	0xFE8
 15299                           indf1	equ	0xFE7
 15300                           postinc1	equ	0xFE6
 15301                           postdec1	equ	0xFE5
 15302                           fsr1h	equ	0xFE2
 15303                           fsr1l	equ	0xFE1
 15304                           indf2	equ	0xFDF
 15305                           postinc2	equ	0xFDE
 15306                           postdec2	equ	0xFDD
 15307                           plusw2	equ	0xFDB
 15308                           fsr2h	equ	0xFDA
 15309                           fsr2l	equ	0xFD9
 15310                           status	equ	0xFD8
 15311                           
 15312 ;; *************** function _ADC *****************
 15313 ;; Defined at:
 15314 ;;		line 156 in file "../My_library/My_PIC.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;  ch              1    wreg     unsigned char 
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;  ch              1    3[BANK0 ] unsigned char 
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  2    0[BANK0 ] unsigned int 
 15321 ;; Registers used:
 15322 ;;		wreg, status,2, status,0
 15323 ;; Tracked objects:
 15324 ;;		On entry : 0/0
 15325 ;;		On exit  : 0/0
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15330 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15332 ;;Total ram usage:        4 bytes
 15333 ;; Hardware stack levels used:    1
 15334 ;; Hardware stack levels required when called:   11
 15335 ;; This function calls:
 15336 ;;		Nothing
 15337 ;; This function is called by:
 15338 ;;		_Auto_cut
 15339 ;;		_sleep_task
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           	psect	text48
 15344  016920                     __ptext48:
 15345                           	opt stack 0
 15346  016920                     _ADC:
 15347                           	opt stack 18
 15348                           
 15349                           ;incstack = 0
 15350                           ;ADC@ch stored from wreg
 15351  016920  0100               	movlb	0	; () banked
 15352  016922  6F63               	movwf	ADC@ch& (0+255),b
 15353                           
 15354                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 15355  016924  C063  F062         	movff	ADC@ch,??_ADC
 15356  016928  0100               	movlb	0	; () banked
 15357  01692A  4762               	rlncf	??_ADC& (0+255),f,b
 15358  01692C  4762               	rlncf	??_ADC& (0+255),f,b
 15359  01692E  50C2               	movf	4034,w,c	;volatile
 15360  016930  0100               	movlb	0	; () banked
 15361  016932  1962               	xorwf	??_ADC& (0+255),w,b
 15362  016934  0BC3               	andlw	-61
 15363  016936  1962               	xorwf	??_ADC& (0+255),w,b
 15364  016938  6EC2               	movwf	4034,c	;volatile
 15365                           
 15366                           ; BSR set to: 0
 15367                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 15368  01693A  80C2               	bsf	4034,0,c	;volatile
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 15372  01693C  9C9E               	bcf	3998,6,c	;volatile
 15373                           
 15374                           ; BSR set to: 0
 15375                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 15376  01693E  82C2               	bsf	4034,1,c	;volatile
 15377  016940                     l724:
 15378  016940  AC9E               	btfss	3998,6,c	;volatile
 15379  016942  D7FE               	goto	l724
 15380                           
 15381                           ;My_PIC.c: 163: return ADRES;
 15382  016944  CFC3 F060          	movff	4035,?_ADC	;volatile
 15383  016948  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15384  01694C  0012               	return		;funcret
 15385  01694E                     __end_of_ADC:
 15386                           	opt stack 0
 15387                           tblptru	equ	0xFF8
 15388                           tblptrh	equ	0xFF7
 15389                           tblptrl	equ	0xFF6
 15390                           tablat	equ	0xFF5
 15391                           prodh	equ	0xFF4
 15392                           prodl	equ	0xFF3
 15393                           intcon	equ	0xFF2
 15394                           postinc0	equ	0xFEE
 15395                           wreg	equ	0xFE8
 15396                           indf1	equ	0xFE7
 15397                           postinc1	equ	0xFE6
 15398                           postdec1	equ	0xFE5
 15399                           fsr1h	equ	0xFE2
 15400                           fsr1l	equ	0xFE1
 15401                           indf2	equ	0xFDF
 15402                           postinc2	equ	0xFDE
 15403                           postdec2	equ	0xFDD
 15404                           plusw2	equ	0xFDB
 15405                           fsr2h	equ	0xFDA
 15406                           fsr2l	equ	0xFD9
 15407                           status	equ	0xFD8
 15408                           
 15409 ;; *************** function _hardware_init *****************
 15410 ;; Defined at:
 15411 ;;		line 82 in file "main.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;		None
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;		None
 15416 ;; Return value:  Size  Location     Type
 15417 ;;		None               void
 15418 ;; Registers used:
 15419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15429 ;;Total ram usage:        0 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:   16
 15432 ;; This function calls:
 15433 ;;		_ADC_init
 15434 ;;		_CTMU_init
 15435 ;;		_I2C_LCD_init
 15436 ;;		_RTCC_init
 15437 ;;		_USB_init
 15438 ;;		_ringbuf_init
 15439 ;;		_timer0_init
 15440 ;;		_timer1_init
 15441 ;;		_timer3_init
 15442 ;; This function is called by:
 15443 ;;		_main
 15444 ;; This function uses a non-reentrant model
 15445 ;;
 15446                           
 15447                           	psect	text49
 15448  015682                     __ptext49:
 15449                           	opt stack 0
 15450  015682                     _hardware_init:
 15451                           	opt stack 14
 15452                           
 15453                           ;main.c: 83: OSCCONbits.IRCF = 7;
 15454                           
 15455                           ;incstack = 0
 15456  015682  88D3               	bsf	4051,4,c	;volatile
 15457  015684  8AD3               	bsf	4051,5,c	;volatile
 15458  015686  8CD3               	bsf	4051,6,c	;volatile
 15459                           
 15460                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 15461  015688  8C9B               	bsf	3995,6,c	;volatile
 15462                           
 15463                           ;main.c: 85: OSCCONbits.SCS = 0;
 15464  01568A  0EFC               	movlw	-4
 15465  01568C  16D3               	andwf	4051,f,c	;volatile
 15466                           
 15467                           ;main.c: 86: TRISA = 0b00011111;
 15468  01568E  0E1F               	movlw	31
 15469  015690  6E92               	movwf	3986,c	;volatile
 15470                           
 15471                           ;main.c: 87: TRISB = 0b00111111;
 15472  015692  0E3F               	movlw	63
 15473  015694  6E93               	movwf	3987,c	;volatile
 15474                           
 15475                           ;main.c: 88: TRISC = 0b10110010;
 15476  015696  0EB2               	movlw	178
 15477  015698  6E94               	movwf	3988,c	;volatile
 15478                           
 15479                           ;main.c: 89: ANCON0 = 0b11110000;
 15480  01569A  0EF0               	movlw	240
 15481  01569C  010F               	movlb	15	; () banked
 15482  01569E  6F48               	movwf	72,b	;volatile
 15483                           
 15484                           ;main.c: 90: ANCON1 = 0b00001000;
 15485  0156A0  0E08               	movlw	8
 15486  0156A2  010F               	movlb	15	; () banked
 15487  0156A4  6F49               	movwf	73,b	;volatile
 15488                           
 15489                           ; BSR set to: 15
 15490                           ;main.c: 91: INTCON2bits.RBPU = 0;
 15491  0156A6  9EF1               	bcf	intcon2,7,c	;volatile
 15492                           
 15493                           ; BSR set to: 15
 15494                           ;main.c: 93: timer0_init(0);
 15495  0156A8  0E00               	movlw	0
 15496  0156AA  EC9C  F0B3         	call	_timer0_init
 15497                           
 15498                           ;main.c: 94: timer1_init(0, 2);
 15499  0156AE  0E02               	movlw	2
 15500  0156B0  0100               	movlb	0	; () banked
 15501  0156B2  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15502  0156B4  0E00               	movlw	0
 15503  0156B6  ECCE  F0B2         	call	_timer1_init
 15504                           
 15505                           ;main.c: 95: timer3_init(2);
 15506  0156BA  0E02               	movlw	2
 15507  0156BC  ECEA  F0B4         	call	_timer3_init
 15508                           
 15509                           ;main.c: 96: I2C_LCD_init();
 15510  0156C0  ECC9  F0AC         	call	_I2C_LCD_init	;wreg free
 15511                           
 15512                           ;main.c: 97: RTCC_init();
 15513  0156C4  ECC4  F0B0         	call	_RTCC_init	;wreg free
 15514                           
 15515                           ;main.c: 98: ADC_init(0);
 15516  0156C8  0E00               	movlw	0
 15517  0156CA  ECB8  F0B5         	call	_ADC_init
 15518                           
 15519                           ;main.c: 99: CTMU_init();
 15520  0156CE  EC6B  F0B5         	call	_CTMU_init	;wreg free
 15521                           
 15522                           ;main.c: 101: USB_init();
 15523  0156D2  ECF7  F0B5         	call	_USB_init	;wreg free
 15524                           
 15525                           ;main.c: 102: static uint8_t usbtx[1800];
 15526                           ;main.c: 103: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 15527  0156D6  0EC1               	movlw	low _usb_tx
 15528  0156D8  0100               	movlb	0	; () banked
 15529  0156DA  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15530  0156DC  0E02               	movlw	high _usb_tx
 15531  0156DE  0100               	movlb	0	; () banked
 15532  0156E0  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15533  0156E2  0E69               	movlw	low hardware_init@usbtx
 15534  0156E4  0100               	movlb	0	; () banked
 15535  0156E6  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15536  0156E8  0E05               	movlw	high hardware_init@usbtx
 15537  0156EA  0100               	movlb	0	; () banked
 15538  0156EC  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15539  0156EE  0E07               	movlw	7
 15540  0156F0  0100               	movlb	0	; () banked
 15541  0156F2  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15542  0156F4  0E08               	movlw	8
 15543  0156F6  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15544  0156F8  EC7B  F0B2         	call	_ringbuf_init	;wreg free
 15545                           
 15546                           ;main.c: 104: static uint8_t usbrx[100];
 15547                           ;main.c: 105: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 15548  0156FC  0EB9               	movlw	low _usb_rx
 15549  0156FE  0100               	movlb	0	; () banked
 15550  015700  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15551  015702  0E02               	movlw	high _usb_rx
 15552  015704  0100               	movlb	0	; () banked
 15553  015706  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15554  015708  0E00               	movlw	low hardware_init@usbrx
 15555  01570A  0100               	movlb	0	; () banked
 15556  01570C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15557  01570E  0E03               	movlw	high hardware_init@usbrx
 15558  015710  0100               	movlb	0	; () banked
 15559  015712  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15560  015714  0E00               	movlw	0
 15561  015716  0100               	movlb	0	; () banked
 15562  015718  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15563  01571A  0E64               	movlw	100
 15564  01571C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15565  01571E  EC7B  F0B2         	call	_ringbuf_init	;wreg free
 15566  015722  0012               	return		;funcret
 15567  015724                     __end_of_hardware_init:
 15568                           	opt stack 0
 15569                           tblptru	equ	0xFF8
 15570                           tblptrh	equ	0xFF7
 15571                           tblptrl	equ	0xFF6
 15572                           tablat	equ	0xFF5
 15573                           prodh	equ	0xFF4
 15574                           prodl	equ	0xFF3
 15575                           intcon	equ	0xFF2
 15576                           intcon2	equ	0xFF1
 15577                           postinc0	equ	0xFEE
 15578                           wreg	equ	0xFE8
 15579                           indf1	equ	0xFE7
 15580                           postinc1	equ	0xFE6
 15581                           postdec1	equ	0xFE5
 15582                           fsr1h	equ	0xFE2
 15583                           fsr1l	equ	0xFE1
 15584                           indf2	equ	0xFDF
 15585                           postinc2	equ	0xFDE
 15586                           postdec2	equ	0xFDD
 15587                           plusw2	equ	0xFDB
 15588                           fsr2h	equ	0xFDA
 15589                           fsr2l	equ	0xFD9
 15590                           status	equ	0xFD8
 15591                           
 15592 ;; *************** function _timer3_init *****************
 15593 ;; Defined at:
 15594 ;;		line 101 in file "../My_library/My_PIC.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;  prescaler       1    wreg     unsigned char 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15599 ;; Return value:  Size  Location     Type
 15600 ;;		None               void
 15601 ;; Registers used:
 15602 ;;		wreg, status,2, status,0
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;Total ram usage:        2 bytes
 15613 ;; Hardware stack levels used:    1
 15614 ;; Hardware stack levels required when called:   11
 15615 ;; This function calls:
 15616 ;;		Nothing
 15617 ;; This function is called by:
 15618 ;;		_hardware_init
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           	psect	text50
 15623  0169D4                     __ptext50:
 15624                           	opt stack 0
 15625  0169D4                     _timer3_init:
 15626                           	opt stack 18
 15627                           
 15628                           ;incstack = 0
 15629                           ;timer3_init@prescaler stored from wreg
 15630  0169D4  0100               	movlb	0	; () banked
 15631  0169D6  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15632                           
 15633                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 15634  0169D8  0E3F               	movlw	-193
 15635  0169DA  1679               	andwf	3961,f,c	;volatile
 15636                           
 15637                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 15638  0169DC  9679               	bcf	3961,3,c	;volatile
 15639                           
 15640                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 15641  0169DE  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15642  0169E2  0100               	movlb	0	; () banked
 15643  0169E4  3B60               	swapf	??_timer3_init& (0+255),f,b
 15644  0169E6  5079               	movf	3961,w,c	;volatile
 15645  0169E8  0100               	movlb	0	; () banked
 15646  0169EA  1960               	xorwf	??_timer3_init& (0+255),w,b
 15647  0169EC  0BCF               	andlw	-49
 15648  0169EE  1960               	xorwf	??_timer3_init& (0+255),w,b
 15649  0169F0  6E79               	movwf	3961,c	;volatile
 15650                           
 15651                           ; BSR set to: 0
 15652                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 15653  0169F2  9E79               	bcf	3961,7,c	;volatile
 15654                           
 15655                           ; BSR set to: 0
 15656                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 15657  0169F4  8079               	bsf	3961,0,c	;volatile
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 15661  0169F6  92A2               	bcf	4002,1,c	;volatile
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 15665  0169F8  92A1               	bcf	4001,1,c	;volatile
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 15669  0169FA  82A0               	bsf	4000,1,c	;volatile
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 15673  0169FC  8CF2               	bsf	intcon,6,c	;volatile
 15674                           
 15675                           ; BSR set to: 0
 15676  0169FE  0012               	return		;funcret
 15677  016A00                     __end_of_timer3_init:
 15678                           	opt stack 0
 15679                           tblptru	equ	0xFF8
 15680                           tblptrh	equ	0xFF7
 15681                           tblptrl	equ	0xFF6
 15682                           tablat	equ	0xFF5
 15683                           prodh	equ	0xFF4
 15684                           prodl	equ	0xFF3
 15685                           intcon	equ	0xFF2
 15686                           intcon2	equ	0xFF1
 15687                           postinc0	equ	0xFEE
 15688                           wreg	equ	0xFE8
 15689                           indf1	equ	0xFE7
 15690                           postinc1	equ	0xFE6
 15691                           postdec1	equ	0xFE5
 15692                           fsr1h	equ	0xFE2
 15693                           fsr1l	equ	0xFE1
 15694                           indf2	equ	0xFDF
 15695                           postinc2	equ	0xFDE
 15696                           postdec2	equ	0xFDD
 15697                           plusw2	equ	0xFDB
 15698                           fsr2h	equ	0xFDA
 15699                           fsr2l	equ	0xFD9
 15700                           status	equ	0xFD8
 15701                           
 15702 ;; *************** function _timer1_init *****************
 15703 ;; Defined at:
 15704 ;;		line 70 in file "../My_library/My_PIC.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;  prescaler       1    wreg     unsigned char 
 15707 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15710 ;; Return value:  Size  Location     Type
 15711 ;;		None               void
 15712 ;; Registers used:
 15713 ;;		wreg, status,2, status,0
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15719 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15722 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15723 ;;Total ram usage:        3 bytes
 15724 ;; Hardware stack levels used:    1
 15725 ;; Hardware stack levels required when called:   11
 15726 ;; This function calls:
 15727 ;;		Nothing
 15728 ;; This function is called by:
 15729 ;;		_hardware_init
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733                           	psect	text51
 15734  01659C                     __ptext51:
 15735                           	opt stack 0
 15736  01659C                     _timer1_init:
 15737                           	opt stack 18
 15738                           
 15739                           ; BSR set to: 0
 15740                           ;incstack = 0
 15741                           ;timer1_init@prescaler stored from wreg
 15742  01659C  0100               	movlb	0	; () banked
 15743  01659E  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15744                           
 15745                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 15746  0165A0  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15747  0165A4  0100               	movlb	0	; () banked
 15748  0165A6  3B61               	swapf	??_timer1_init& (0+255),f,b
 15749  0165A8  4761               	rlncf	??_timer1_init& (0+255),f,b
 15750  0165AA  4761               	rlncf	??_timer1_init& (0+255),f,b
 15751  0165AC  50CD               	movf	4045,w,c	;volatile
 15752  0165AE  0100               	movlb	0	; () banked
 15753  0165B0  1961               	xorwf	??_timer1_init& (0+255),w,b
 15754  0165B2  0B3F               	andlw	-193
 15755  0165B4  1961               	xorwf	??_timer1_init& (0+255),w,b
 15756  0165B6  6ECD               	movwf	4045,c	;volatile
 15757                           
 15758                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15759  0165B8  0E02               	movlw	2
 15760  0165BA  0100               	movlb	0	; () banked
 15761  0165BC  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15762  0165BE  A4D8               	btfss	status,2,c
 15763  0165C0  D002               	goto	l710
 15764                           
 15765                           ; BSR set to: 0
 15766  0165C2  86CD               	bsf	4045,3,c	;volatile
 15767  0165C4  D001               	goto	l12053
 15768  0165C6                     l710:
 15769                           
 15770                           ; BSR set to: 0
 15771                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 15772  0165C6  96CD               	bcf	4045,3,c	;volatile
 15773  0165C8                     l12053:
 15774                           
 15775                           ; BSR set to: 0
 15776                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 15777  0165C8  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15778  0165CC  0100               	movlb	0	; () banked
 15779  0165CE  3B61               	swapf	??_timer1_init& (0+255),f,b
 15780  0165D0  50CD               	movf	4045,w,c	;volatile
 15781  0165D2  0100               	movlb	0	; () banked
 15782  0165D4  1961               	xorwf	??_timer1_init& (0+255),w,b
 15783  0165D6  0BCF               	andlw	-49
 15784  0165D8  1961               	xorwf	??_timer1_init& (0+255),w,b
 15785  0165DA  6ECD               	movwf	4045,c	;volatile
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 15789  0165DC  84CD               	bsf	4045,2,c	;volatile
 15790                           
 15791                           ; BSR set to: 0
 15792                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 15793  0165DE  92CD               	bcf	4045,1,c	;volatile
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 15797  0165E0  80CD               	bsf	4045,0,c	;volatile
 15798                           
 15799                           ; BSR set to: 0
 15800                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 15801  0165E2  909F               	bcf	3999,0,c	;volatile
 15802                           
 15803                           ; BSR set to: 0
 15804                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 15805  0165E4  909E               	bcf	3998,0,c	;volatile
 15806                           
 15807                           ; BSR set to: 0
 15808                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 15809  0165E6  809D               	bsf	3997,0,c	;volatile
 15810                           
 15811                           ; BSR set to: 0
 15812                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15813  0165E8  8CF2               	bsf	intcon,6,c	;volatile
 15814                           
 15815                           ; BSR set to: 0
 15816  0165EA  0012               	return		;funcret
 15817  0165EC                     __end_of_timer1_init:
 15818                           	opt stack 0
 15819                           tblptru	equ	0xFF8
 15820                           tblptrh	equ	0xFF7
 15821                           tblptrl	equ	0xFF6
 15822                           tablat	equ	0xFF5
 15823                           prodh	equ	0xFF4
 15824                           prodl	equ	0xFF3
 15825                           intcon	equ	0xFF2
 15826                           intcon2	equ	0xFF1
 15827                           postinc0	equ	0xFEE
 15828                           wreg	equ	0xFE8
 15829                           indf1	equ	0xFE7
 15830                           postinc1	equ	0xFE6
 15831                           postdec1	equ	0xFE5
 15832                           fsr1h	equ	0xFE2
 15833                           fsr1l	equ	0xFE1
 15834                           indf2	equ	0xFDF
 15835                           postinc2	equ	0xFDE
 15836                           postdec2	equ	0xFDD
 15837                           plusw2	equ	0xFDB
 15838                           fsr2h	equ	0xFDA
 15839                           fsr2l	equ	0xFD9
 15840                           status	equ	0xFD8
 15841                           
 15842 ;; *************** function _timer0_init *****************
 15843 ;; Defined at:
 15844 ;;		line 34 in file "../My_library/My_PIC.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  prescaler       1    wreg     unsigned char 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15849 ;; Return value:  Size  Location     Type
 15850 ;;		None               void
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15862 ;;Total ram usage:        2 bytes
 15863 ;; Hardware stack levels used:    1
 15864 ;; Hardware stack levels required when called:   11
 15865 ;; This function calls:
 15866 ;;		Nothing
 15867 ;; This function is called by:
 15868 ;;		_hardware_init
 15869 ;; This function uses a non-reentrant model
 15870 ;;
 15871                           
 15872                           	psect	text52
 15873  016738                     __ptext52:
 15874                           	opt stack 0
 15875  016738                     _timer0_init:
 15876                           	opt stack 18
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;incstack = 0
 15880                           ;timer0_init@prescaler stored from wreg
 15881  016738  0100               	movlb	0	; () banked
 15882  01673A  6F61               	movwf	timer0_init@prescaler& (0+255),b
 15883                           
 15884                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 15885  01673C  8ED5               	bsf	4053,7,c	;volatile
 15886                           
 15887                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 15888  01673E  8CD5               	bsf	4053,6,c	;volatile
 15889                           
 15890                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 15891  016740  9AD5               	bcf	4053,5,c	;volatile
 15892                           
 15893                           ;My_PIC.c: 38: if (prescaler == 0) {
 15894  016742  0100               	movlb	0	; () banked
 15895  016744  5161               	movf	timer0_init@prescaler& (0+255),w,b
 15896  016746  0100               	movlb	0	; () banked
 15897  016748  A4D8               	btfss	status,2,c
 15898  01674A  D002               	goto	l705
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 15902  01674C  86D5               	bsf	4053,3,c	;volatile
 15903                           
 15904                           ;My_PIC.c: 40: } else {
 15905  01674E  D00C               	goto	l12041
 15906  016750                     l705:
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 15910  016750  96D5               	bcf	4053,3,c	;volatile
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 15914  016752  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 15915  016756  0EFF               	movlw	255
 15916  016758  0100               	movlb	0	; () banked
 15917  01675A  2760               	addwf	??_timer0_init& (0+255),f,b
 15918  01675C  50D5               	movf	4053,w,c	;volatile
 15919  01675E  0100               	movlb	0	; () banked
 15920  016760  1960               	xorwf	??_timer0_init& (0+255),w,b
 15921  016762  0BF8               	andlw	-8
 15922  016764  1960               	xorwf	??_timer0_init& (0+255),w,b
 15923  016766  6ED5               	movwf	4053,c	;volatile
 15924  016768                     l12041:
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;My_PIC.c: 43: }
 15928                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 15929  016768  8AF2               	bsf	intcon,5,c	;volatile
 15930                           
 15931                           ; BSR set to: 0
 15932                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 15933  01676A  94F2               	bcf	intcon,2,c	;volatile
 15934                           
 15935                           ; BSR set to: 0
 15936                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 15937  01676C  94F1               	bcf	intcon2,2,c	;volatile
 15938                           
 15939                           ; BSR set to: 0
 15940                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 15941  01676E  8CF2               	bsf	intcon,6,c	;volatile
 15942                           
 15943                           ; BSR set to: 0
 15944  016770  0012               	return		;funcret
 15945  016772                     __end_of_timer0_init:
 15946                           	opt stack 0
 15947                           tblptru	equ	0xFF8
 15948                           tblptrh	equ	0xFF7
 15949                           tblptrl	equ	0xFF6
 15950                           tablat	equ	0xFF5
 15951                           prodh	equ	0xFF4
 15952                           prodl	equ	0xFF3
 15953                           intcon	equ	0xFF2
 15954                           intcon2	equ	0xFF1
 15955                           postinc0	equ	0xFEE
 15956                           wreg	equ	0xFE8
 15957                           indf1	equ	0xFE7
 15958                           postinc1	equ	0xFE6
 15959                           postdec1	equ	0xFE5
 15960                           fsr1h	equ	0xFE2
 15961                           fsr1l	equ	0xFE1
 15962                           indf2	equ	0xFDF
 15963                           postinc2	equ	0xFDE
 15964                           postdec2	equ	0xFDD
 15965                           plusw2	equ	0xFDB
 15966                           fsr2h	equ	0xFDA
 15967                           fsr2l	equ	0xFD9
 15968                           status	equ	0xFD8
 15969                           
 15970 ;; *************** function _ringbuf_init *****************
 15971 ;; Defined at:
 15972 ;;		line 5 in file "../My_library/My_ringbuf.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 15975 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), lcd_tx(8), 
 15976 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 15977 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(1800), terminal_task@buf(100), ST7032_init@buf(200), 
 15978 ;;  bufsize         2    4[BANK0 ] unsigned int 
 15979 ;; Auto vars:     Size  Location     Type
 15980 ;;		None
 15981 ;; Return value:  Size  Location     Type
 15982 ;;		None               void
 15983 ;; Registers used:
 15984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15985 ;; Tracked objects:
 15986 ;;		On entry : 0/0
 15987 ;;		On exit  : 0/0
 15988 ;;		Unchanged: 0/0
 15989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15990 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15993 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15994 ;;Total ram usage:        6 bytes
 15995 ;; Hardware stack levels used:    1
 15996 ;; Hardware stack levels required when called:   11
 15997 ;; This function calls:
 15998 ;;		Nothing
 15999 ;; This function is called by:
 16000 ;;		_terminal_task
 16001 ;;		_hardware_init
 16002 ;;		_ST7032_init
 16003 ;; This function uses a non-reentrant model
 16004 ;;
 16005                           
 16006                           	psect	text53
 16007  0164F6                     __ptext53:
 16008                           	opt stack 0
 16009  0164F6                     _ringbuf_init:
 16010                           	opt stack 18
 16011                           
 16012                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 16013                           
 16014                           ; BSR set to: 0
 16015                           ;incstack = 0
 16016  0164F6  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 16017  0164FA  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 16018  0164FE  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 16019  016502  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 16020                           
 16021                           ;My_ringbuf.c: 7: rb->size = bufsize;
 16022  016506  0100               	movlb	0	; () banked
 16023  016508  EE20 F002          	lfsr	2,2
 16024  01650C  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16025  01650E  26D9               	addwf	fsr2l,f,c
 16026  016510  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16027  016512  22DA               	addwfc	fsr2h,f,c
 16028  016514  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 16029  016518  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 16030                           
 16031                           ; BSR set to: 0
 16032                           ;My_ringbuf.c: 8: rb->head = 0;
 16033  01651C  0100               	movlb	0	; () banked
 16034  01651E  EE20 F004          	lfsr	2,4
 16035  016522  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16036  016524  26D9               	addwf	fsr2l,f,c
 16037  016526  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16038  016528  22DA               	addwfc	fsr2h,f,c
 16039  01652A  0E00               	movlw	0
 16040  01652C  6EDE               	movwf	postinc2,c
 16041  01652E  0E00               	movlw	0
 16042  016530  6EDD               	movwf	postdec2,c
 16043                           
 16044                           ; BSR set to: 0
 16045                           ;My_ringbuf.c: 9: rb->tail = 0;
 16046  016532  0100               	movlb	0	; () banked
 16047  016534  EE20 F006          	lfsr	2,6
 16048  016538  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16049  01653A  26D9               	addwf	fsr2l,f,c
 16050  01653C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16051  01653E  22DA               	addwfc	fsr2h,f,c
 16052  016540  0E00               	movlw	0
 16053  016542  6EDE               	movwf	postinc2,c
 16054  016544  0E00               	movlw	0
 16055  016546  6EDD               	movwf	postdec2,c
 16056                           
 16057                           ; BSR set to: 0
 16058  016548  0012               	return		;funcret
 16059  01654A                     __end_of_ringbuf_init:
 16060                           	opt stack 0
 16061                           tblptru	equ	0xFF8
 16062                           tblptrh	equ	0xFF7
 16063                           tblptrl	equ	0xFF6
 16064                           tablat	equ	0xFF5
 16065                           prodh	equ	0xFF4
 16066                           prodl	equ	0xFF3
 16067                           intcon	equ	0xFF2
 16068                           intcon2	equ	0xFF1
 16069                           postinc0	equ	0xFEE
 16070                           wreg	equ	0xFE8
 16071                           indf1	equ	0xFE7
 16072                           postinc1	equ	0xFE6
 16073                           postdec1	equ	0xFE5
 16074                           fsr1h	equ	0xFE2
 16075                           fsr1l	equ	0xFE1
 16076                           indf2	equ	0xFDF
 16077                           postinc2	equ	0xFDE
 16078                           postdec2	equ	0xFDD
 16079                           plusw2	equ	0xFDB
 16080                           fsr2h	equ	0xFDA
 16081                           fsr2l	equ	0xFD9
 16082                           status	equ	0xFD8
 16083                           
 16084 ;; *************** function _USB_init *****************
 16085 ;; Defined at:
 16086 ;;		line 11 in file "../My_library/My_usb_cdc.c"
 16087 ;; Parameters:    Size  Location     Type
 16088 ;;		None
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;		None
 16091 ;; Return value:  Size  Location     Type
 16092 ;;		None               void
 16093 ;; Registers used:
 16094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16095 ;; Tracked objects:
 16096 ;;		On entry : 0/0
 16097 ;;		On exit  : 0/0
 16098 ;;		Unchanged: 0/0
 16099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16104 ;;Total ram usage:        0 bytes
 16105 ;; Hardware stack levels used:    1
 16106 ;; Hardware stack levels required when called:   13
 16107 ;; This function calls:
 16108 ;;		_USBDeviceAttach
 16109 ;;		_USBDeviceInit
 16110 ;; This function is called by:
 16111 ;;		_hardware_init
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115                           	psect	text54
 16116  016BEE                     __ptext54:
 16117                           	opt stack 0
 16118  016BEE                     _USB_init:
 16119                           	opt stack 16
 16120                           
 16121                           ;My_usb_cdc.c: 12: USBDeviceInit();
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;incstack = 0
 16125  016BEE  EC44  F099         	call	_USBDeviceInit	;wreg free
 16126                           
 16127                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 16128  016BF2  ECF2  F0B3         	call	_USBDeviceAttach	;wreg free
 16129                           
 16130                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 16131  016BF6  0E00               	movlw	0
 16132  016BF8  0102               	movlb	2	; () banked
 16133  016BFA  6FC9               	movwf	_line_coding& (0+255),b
 16134  016BFC  0EC2               	movlw	194
 16135  016BFE  6FCA               	movwf	(_line_coding+1)& (0+255),b
 16136  016C00  0E01               	movlw	1
 16137  016C02  6FCB               	movwf	(_line_coding+2)& (0+255),b
 16138  016C04  0E00               	movlw	0
 16139  016C06  6FCC               	movwf	(_line_coding+3)& (0+255),b
 16140                           
 16141                           ; BSR set to: 2
 16142  016C08  0012               	return		;funcret
 16143  016C0A                     __end_of_USB_init:
 16144                           	opt stack 0
 16145                           tblptru	equ	0xFF8
 16146                           tblptrh	equ	0xFF7
 16147                           tblptrl	equ	0xFF6
 16148                           tablat	equ	0xFF5
 16149                           prodh	equ	0xFF4
 16150                           prodl	equ	0xFF3
 16151                           intcon	equ	0xFF2
 16152                           intcon2	equ	0xFF1
 16153                           postinc0	equ	0xFEE
 16154                           wreg	equ	0xFE8
 16155                           indf1	equ	0xFE7
 16156                           postinc1	equ	0xFE6
 16157                           postdec1	equ	0xFE5
 16158                           fsr1h	equ	0xFE2
 16159                           fsr1l	equ	0xFE1
 16160                           indf2	equ	0xFDF
 16161                           postinc2	equ	0xFDE
 16162                           postdec2	equ	0xFDD
 16163                           plusw2	equ	0xFDB
 16164                           fsr2h	equ	0xFDA
 16165                           fsr2l	equ	0xFD9
 16166                           status	equ	0xFD8
 16167                           
 16168 ;; *************** function _USBDeviceInit *****************
 16169 ;; Defined at:
 16170 ;;		line 298 in file "../My_library/usb/usb_device.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;		None
 16173 ;; Auto vars:     Size  Location     Type
 16174 ;;  i               1    8[BANK0 ] unsigned char 
 16175 ;; Return value:  Size  Location     Type
 16176 ;;		None               void
 16177 ;; Registers used:
 16178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16179 ;; Tracked objects:
 16180 ;;		On entry : 0/0
 16181 ;;		On exit  : 0/0
 16182 ;;		Unchanged: 0/0
 16183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;Total ram usage:        1 bytes
 16189 ;; Hardware stack levels used:    1
 16190 ;; Hardware stack levels required when called:   12
 16191 ;; This function calls:
 16192 ;;		_memset
 16193 ;; This function is called by:
 16194 ;;		_USB_init
 16195 ;; This function uses a non-reentrant model
 16196 ;;
 16197                           
 16198                           	psect	text55
 16199  013288                     __ptext55:
 16200                           	opt stack 0
 16201  013288                     _USBDeviceInit:
 16202                           	opt stack 16
 16203                           
 16204                           ;usb_device.c: 300: uint8_t i;
 16205                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 16206                           
 16207                           ; BSR set to: 2
 16208                           ;incstack = 0
 16209  013288  98A0               	bcf	4000,4,c	;volatile
 16210                           
 16211                           ;usb_device.c: 305: {UEIR = 0;};
 16212  01328A  0E00               	movlw	0
 16213  01328C  6E63               	movwf	3939,c	;volatile
 16214                           
 16215                           ;usb_device.c: 308: {UIR = 0;};
 16216  01328E  0E00               	movlw	0
 16217  013290  6E62               	movwf	3938,c	;volatile
 16218                           
 16219                           ;usb_device.c: 311: UEP0 = 0;
 16220  013292  0E00               	movlw	0
 16221  013294  010F               	movlb	15	; () banked
 16222  013296  6F26               	movwf	38,b	;volatile
 16223                           
 16224                           ; BSR set to: 15
 16225                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 16226  013298  0E27               	movlw	39
 16227  01329A  0100               	movlb	0	; () banked
 16228  01329C  6F60               	movwf	memset@p1& (0+255),b
 16229  01329E  0E0F               	movlw	15
 16230  0132A0  0100               	movlb	0	; () banked
 16231  0132A2  6F61               	movwf	(memset@p1+1)& (0+255),b
 16232  0132A4  0E00               	movlw	0
 16233  0132A6  0100               	movlb	0	; () banked
 16234  0132A8  6F63               	movwf	(memset@c+1)& (0+255),b
 16235  0132AA  0E00               	movlw	0
 16236  0132AC  6F62               	movwf	memset@c& (0+255),b
 16237  0132AE  0E00               	movlw	0
 16238  0132B0  0100               	movlb	0	; () banked
 16239  0132B2  6F65               	movwf	(memset@n+1)& (0+255),b
 16240  0132B4  0E02               	movlw	2
 16241  0132B6  6F64               	movwf	memset@n& (0+255),b
 16242  0132B8  EC45  F0B4         	call	_memset	;wreg free
 16243                           
 16244                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16245  0132BC  0E16               	movlw	22
 16246  0132BE  010F               	movlb	15	; () banked
 16247  0132C0  6F39               	movwf	57,b	;volatile
 16248                           
 16249                           ; BSR set to: 15
 16250  0132C2  0E9F               	movlw	159
 16251  0132C4  010F               	movlb	15	; () banked
 16252  0132C6  6F37               	movwf	55,b	;volatile
 16253                           
 16254                           ; BSR set to: 15
 16255  0132C8  0E7B               	movlw	123
 16256  0132CA  010F               	movlb	15	; () banked
 16257  0132CC  6F36               	movwf	54,b	;volatile
 16258                           
 16259                           ; BSR set to: 15
 16260                           ;usb_device.c: 318: ;
 16261                           ;usb_device.c: 321: ;
 16262                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16263  0132CE  0E00               	movlw	0
 16264  0132D0  0100               	movlb	0	; () banked
 16265  0132D2  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16266  0132D4                     l11413:
 16267                           
 16268                           ; BSR set to: 0
 16269  0132D4  0E0B               	movlw	11
 16270  0132D6  0100               	movlb	0	; () banked
 16271  0132D8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16272  0132DA  D001               	goto	l11417
 16273  0132DC  D010               	goto	l146
 16274  0132DE                     l11417:
 16275                           
 16276                           ; BSR set to: 0
 16277                           ;usb_device.c: 325: {
 16278                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 16279  0132DE  0100               	movlb	0	; () banked
 16280  0132E0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16281  0132E2  0D04               	mullw	4
 16282  0132E4  0E00               	movlw	0
 16283  0132E6  24F3               	addwf	prodl,w,c
 16284  0132E8  6ED9               	movwf	fsr2l,c
 16285  0132EA  0E0D               	movlw	13
 16286  0132EC  20F4               	addwfc	prodh,w,c
 16287  0132EE  6EDA               	movwf	fsr2h,c
 16288  0132F0  6ADE               	clrf	postinc2,c
 16289  0132F2  6ADE               	clrf	postinc2,c
 16290  0132F4  6ADE               	clrf	postinc2,c
 16291  0132F6  6ADD               	clrf	postdec2,c
 16292                           
 16293                           ; BSR set to: 0
 16294  0132F8  0100               	movlb	0	; () banked
 16295  0132FA  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16296  0132FC  D7EB               	goto	l11413
 16297  0132FE                     l146:
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;usb_device.c: 327: }
 16301                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 16302  0132FE  8C65               	bsf	3941,6,c	;volatile
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;usb_device.c: 333: UADDR = 0x00;
 16306  013300  0E00               	movlw	0
 16307  013302  010F               	movlb	15	; () banked
 16308  013304  6F38               	movwf	56,b	;volatile
 16309                           
 16310                           ; BSR set to: 15
 16311                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 16312  013306  9865               	bcf	3941,4,c	;volatile
 16313                           
 16314                           ; BSR set to: 15
 16315                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 16316  013308  9C65               	bcf	3941,6,c	;volatile
 16317                           
 16318                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 16319  01330A  D00C               	goto	l11437
 16320  01330C                     l11429:
 16321                           
 16322                           ;usb_device.c: 343: {
 16323                           ;usb_device.c: 344: (UIR &= 0xF7);
 16324  01330C  9662               	bcf	3938,3,c	;volatile
 16325                           
 16326                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 16327  01330E  0E00               	movlw	0
 16328  013310  0100               	movlb	0	; () banked
 16329  013312  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 16333  013314  0E00               	movlw	0
 16334  013316  0100               	movlb	0	; () banked
 16335  013318  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 16339  01331A  0E00               	movlw	0
 16340  01331C  0100               	movlb	0	; () banked
 16341  01331E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16342  013320  0E00               	movlw	0
 16343  013322  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16344  013324                     l11437:
 16345  013324  B662               	btfsc	3938,3,c	;volatile
 16346  013326  D7F2               	goto	l11429
 16347                           
 16348                           ;usb_device.c: 349: }
 16349                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 16350  013328  0E01               	movlw	1
 16351  01332A  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16352                           
 16353                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 16354  01332C  0E01               	movlw	1
 16355  01332E  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16356                           
 16357                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 16358  013330  0E00               	movlw	0
 16359  013332  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16360                           
 16361                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 16362  013334  0E00               	movlw	0
 16363  013336  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16364                           
 16365                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 16366  013338  0E00               	movlw	0
 16367  01333A  0101               	movlb	1	; () banked
 16368  01333C  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16369                           
 16370                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 16371  01333E  0E00               	movlw	0
 16372  013340  0100               	movlb	0	; () banked
 16373  013342  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16374  013344                     l11441:
 16375                           
 16376                           ; BSR set to: 0
 16377  013344  0E02               	movlw	2
 16378  013346  0100               	movlb	0	; () banked
 16379  013348  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16380  01334A  D001               	goto	l11445
 16381  01334C  D033               	goto	l11451
 16382  01334E                     l11445:
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;usb_device.c: 363: {
 16386                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 16387  01334E  0100               	movlb	0	; () banked
 16388  013350  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16389  013352  0D02               	mullw	2
 16390  013354  0EF5               	movlw	low _pBDTEntryIn
 16391  013356  24F3               	addwf	prodl,w,c
 16392  013358  6ED9               	movwf	fsr2l,c
 16393  01335A  0E00               	movlw	high _pBDTEntryIn
 16394  01335C  20F4               	addwfc	prodh,w,c
 16395  01335E  6EDA               	movwf	fsr2h,c
 16396  013360  0E00               	movlw	0
 16397  013362  6EDE               	movwf	postinc2,c
 16398  013364  0E00               	movlw	0
 16399  013366  6EDD               	movwf	postdec2,c
 16400                           
 16401                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 16402  013368  0100               	movlb	0	; () banked
 16403  01336A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16404  01336C  0D02               	mullw	2
 16405  01336E  0E00               	movlw	low _pBDTEntryOut
 16406  013370  24F3               	addwf	prodl,w,c
 16407  013372  6ED9               	movwf	fsr2l,c
 16408  013374  0E01               	movlw	high _pBDTEntryOut
 16409  013376  20F4               	addwfc	prodh,w,c
 16410  013378  6EDA               	movwf	fsr2h,c
 16411  01337A  0E00               	movlw	0
 16412  01337C  6EDE               	movwf	postinc2,c
 16413  01337E  0E00               	movlw	0
 16414  013380  6EDD               	movwf	postdec2,c
 16415                           
 16416                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 16417  013382  0100               	movlb	0	; () banked
 16418  013384  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16419  013386  0D01               	mullw	1
 16420  013388  0E01               	movlw	low _ep_data_in
 16421  01338A  24F3               	addwf	prodl,w,c
 16422  01338C  6ED9               	movwf	fsr2l,c
 16423  01338E  0E00               	movlw	high _ep_data_in
 16424  013390  20F4               	addwfc	prodh,w,c
 16425  013392  6EDA               	movwf	fsr2h,c
 16426  013394  0E00               	movlw	0
 16427  013396  6EDF               	movwf	indf2,c
 16428                           
 16429                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 16430  013398  0100               	movlb	0	; () banked
 16431  01339A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16432  01339C  0D01               	mullw	1
 16433  01339E  0E04               	movlw	low _ep_data_out
 16434  0133A0  24F3               	addwf	prodl,w,c
 16435  0133A2  6ED9               	movwf	fsr2l,c
 16436  0133A4  0E00               	movlw	high _ep_data_out
 16437  0133A6  20F4               	addwfc	prodh,w,c
 16438  0133A8  6EDA               	movwf	fsr2h,c
 16439  0133AA  0E00               	movlw	0
 16440  0133AC  6EDF               	movwf	indf2,c
 16441                           
 16442                           ; BSR set to: 0
 16443  0133AE  0100               	movlb	0	; () banked
 16444  0133B0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16445  0133B2  D7C8               	goto	l11441
 16446  0133B4                     l11451:
 16447                           
 16448                           ; BSR set to: 0
 16449                           ;usb_device.c: 368: }
 16450                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16451  0133B4  0E08               	movlw	8
 16452  0133B6  0100               	movlb	0	; () banked
 16453  0133B8  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16454  0133BA  0E0D               	movlw	13
 16455  0133BC  0100               	movlb	0	; () banked
 16456  0133BE  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 16460  0133C0  0E16               	movlw	22
 16461  0133C2  010F               	movlb	15	; () banked
 16462  0133C4  6F26               	movwf	38,b	;volatile
 16463                           
 16464                           ; BSR set to: 15
 16465                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16466  0133C6  0E0D               	movlw	13
 16467  0133C8  010D               	movlb	13	; () banked
 16468  0133CA  6F03               	movwf	3,b	;volatile
 16469  0133CC  0E30               	movlw	48
 16470  0133CE  6F02               	movwf	2,b	;volatile
 16471                           
 16472                           ; BSR set to: 13
 16473                           ;usb_device.c: 376: BDT[0].CNT = 8;
 16474  0133D0  0E08               	movlw	8
 16475  0133D2  010D               	movlb	13	; () banked
 16476  0133D4  6F01               	movwf	1,b	;volatile
 16477                           
 16478                           ; BSR set to: 13
 16479                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 16480  0133D6  0E04               	movlw	4
 16481  0133D8  010D               	movlb	13	; () banked
 16482  0133DA  6F00               	movwf	0,b	;volatile
 16483                           
 16484                           ; BSR set to: 13
 16485                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 16486  0133DC  010D               	movlb	13	; () banked
 16487  0133DE  8F00               	bsf	0,7,b	;volatile
 16488                           
 16489                           ; BSR set to: 13
 16490                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 16491  0133E0  0E00               	movlw	0
 16492  0133E2  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16493                           
 16494                           ; BSR set to: 13
 16495                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 16496  0133E4  0E00               	movlw	0
 16497  0133E6  6E13               	movwf	_USBDeviceState,c	;volatile
 16498                           
 16499                           ; BSR set to: 13
 16500  0133E8  0012               	return		;funcret
 16501  0133EA                     __end_of_USBDeviceInit:
 16502                           	opt stack 0
 16503                           tblptru	equ	0xFF8
 16504                           tblptrh	equ	0xFF7
 16505                           tblptrl	equ	0xFF6
 16506                           tablat	equ	0xFF5
 16507                           prodh	equ	0xFF4
 16508                           prodl	equ	0xFF3
 16509                           intcon	equ	0xFF2
 16510                           intcon2	equ	0xFF1
 16511                           postinc0	equ	0xFEE
 16512                           wreg	equ	0xFE8
 16513                           indf1	equ	0xFE7
 16514                           postinc1	equ	0xFE6
 16515                           postdec1	equ	0xFE5
 16516                           fsr1h	equ	0xFE2
 16517                           fsr1l	equ	0xFE1
 16518                           indf2	equ	0xFDF
 16519                           postinc2	equ	0xFDE
 16520                           postdec2	equ	0xFDD
 16521                           plusw2	equ	0xFDB
 16522                           fsr2h	equ	0xFDA
 16523                           fsr2l	equ	0xFD9
 16524                           status	equ	0xFD8
 16525                           
 16526 ;; *************** function _memset *****************
 16527 ;; Defined at:
 16528 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16529 ;; Parameters:    Size  Location     Type
 16530 ;;  p1              2    0[BANK0 ] PTR void 
 16531 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16532 ;;  c               2    2[BANK0 ] int 
 16533 ;;  n               2    4[BANK0 ] unsigned int 
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16536 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  2    0[BANK0 ] PTR void 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16549 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16550 ;;Total ram usage:        8 bytes
 16551 ;; Hardware stack levels used:    1
 16552 ;; Hardware stack levels required when called:   11
 16553 ;; This function calls:
 16554 ;;		Nothing
 16555 ;; This function is called by:
 16556 ;;		_USBDeviceInit
 16557 ;; This function uses a non-reentrant model
 16558 ;;
 16559                           
 16560                           	psect	text56
 16561  01688A                     __ptext56:
 16562                           	opt stack 0
 16563  01688A                     _memset:
 16564                           	opt stack 16
 16565                           
 16566                           ; BSR set to: 13
 16567                           ;incstack = 0
 16568  01688A  C060  F066         	movff	memset@p1,memset@p
 16569  01688E  C061  F067         	movff	memset@p1+1,memset@p+1
 16570  016892  D009               	goto	l11043
 16571  016894                     l11039:
 16572  016894  C066  FFD9         	movff	memset@p,fsr2l
 16573  016898  C067  FFDA         	movff	memset@p+1,fsr2h
 16574  01689C  C062  FFDF         	movff	memset@c,indf2
 16575  0168A0  0100               	movlb	0	; () banked
 16576  0168A2  4B66               	infsnz	memset@p& (0+255),f,b
 16577  0168A4  2B67               	incf	(memset@p+1)& (0+255),f,b
 16578  0168A6                     l11043:
 16579  0168A6  0100               	movlb	0	; () banked
 16580  0168A8  0764               	decf	memset@n& (0+255),f,b
 16581  0168AA  A0D8               	btfss	status,0,c
 16582  0168AC  0765               	decf	(memset@n+1)& (0+255),f,b
 16583  0168AE  0100               	movlb	0	; () banked
 16584  0168B0  2964               	incf	memset@n& (0+255),w,b
 16585  0168B2  E1F0               	bnz	l11039
 16586  0168B4  0100               	movlb	0	; () banked
 16587  0168B6  2965               	incf	(memset@n+1)& (0+255),w,b
 16588  0168B8  B4D8               	btfsc	status,2,c
 16589  0168BA  0012               	return	
 16590  0168BC  D7EB               	goto	l11039
 16591  0168BE                     __end_of_memset:
 16592                           	opt stack 0
 16593                           tblptru	equ	0xFF8
 16594                           tblptrh	equ	0xFF7
 16595                           tblptrl	equ	0xFF6
 16596                           tablat	equ	0xFF5
 16597                           prodh	equ	0xFF4
 16598                           prodl	equ	0xFF3
 16599                           intcon	equ	0xFF2
 16600                           intcon2	equ	0xFF1
 16601                           postinc0	equ	0xFEE
 16602                           wreg	equ	0xFE8
 16603                           indf1	equ	0xFE7
 16604                           postinc1	equ	0xFE6
 16605                           postdec1	equ	0xFE5
 16606                           fsr1h	equ	0xFE2
 16607                           fsr1l	equ	0xFE1
 16608                           indf2	equ	0xFDF
 16609                           postinc2	equ	0xFDE
 16610                           postdec2	equ	0xFDD
 16611                           plusw2	equ	0xFDB
 16612                           fsr2h	equ	0xFDA
 16613                           fsr2l	equ	0xFD9
 16614                           status	equ	0xFD8
 16615                           
 16616 ;; *************** function _USBDeviceAttach *****************
 16617 ;; Defined at:
 16618 ;;		line 1352 in file "../My_library/usb/usb_device.c"
 16619 ;; Parameters:    Size  Location     Type
 16620 ;;		None
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;		None
 16623 ;; Return value:  Size  Location     Type
 16624 ;;		None               void
 16625 ;; Registers used:
 16626 ;;		wreg, status,2
 16627 ;; Tracked objects:
 16628 ;;		On entry : 0/0
 16629 ;;		On exit  : 0/0
 16630 ;;		Unchanged: 0/0
 16631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16636 ;;Total ram usage:        0 bytes
 16637 ;; Hardware stack levels used:    1
 16638 ;; Hardware stack levels required when called:   11
 16639 ;; This function calls:
 16640 ;;		Nothing
 16641 ;; This function is called by:
 16642 ;;		_USB_init
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text57
 16647  0167E4                     __ptext57:
 16648                           	opt stack 0
 16649  0167E4                     _USBDeviceAttach:
 16650                           	opt stack 17
 16651                           
 16652                           ;usb_device.c: 1356: {
 16653                           ;usb_device.c: 1357: if(1 == 1)
 16654                           
 16655                           ; BSR set to: 0
 16656                           ;incstack = 0
 16657  0167E4  5013               	movf	_USBDeviceState,w,c	;volatile
 16658  0167E6  A4D8               	btfss	status,2,c
 16659  0167E8  0012               	return	
 16660                           
 16661                           ;usb_device.c: 1358: {
 16662                           ;usb_device.c: 1360: UCON = 0;
 16663  0167EA  0E00               	movlw	0
 16664  0167EC  6E65               	movwf	3941,c	;volatile
 16665                           
 16666                           ;usb_device.c: 1363: UIE = 0;
 16667  0167EE  0E00               	movlw	0
 16668  0167F0  010F               	movlb	15	; () banked
 16669  0167F2  6F36               	movwf	54,b	;volatile
 16670                           
 16671                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16672  0167F4  0E16               	movlw	22
 16673  0167F6  010F               	movlb	15	; () banked
 16674  0167F8  6F39               	movwf	57,b	;volatile
 16675  0167FA  0E9F               	movlw	159
 16676  0167FC  010F               	movlb	15	; () banked
 16677  0167FE  6F37               	movwf	55,b	;volatile
 16678  016800  0E7B               	movlw	123
 16679  016802  010F               	movlb	15	; () banked
 16680  016804  6F36               	movwf	54,b	;volatile
 16681                           
 16682                           ; BSR set to: 15
 16683                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16684  016806  8ED0               	bsf	4048,7,c	;volatile
 16685                           
 16686                           ; BSR set to: 15
 16687  016808  88A2               	bsf	4002,4,c	;volatile
 16688                           
 16689                           ; BSR set to: 15
 16690  01680A  88A0               	bsf	4000,4,c	;volatile
 16691                           
 16692                           ; BSR set to: 15
 16693  01680C  8EF2               	bsf	intcon,7,c	;volatile
 16694                           
 16695                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16696  01680E  D001               	goto	l207
 16697  016810                     l208:
 16698  016810  8665               	bsf	3941,3,c	;volatile
 16699  016812                     l207:
 16700  016812  A665               	btfss	3941,3,c	;volatile
 16701  016814  D7FD               	goto	l208
 16702                           
 16703                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 16704  016816  0E01               	movlw	1
 16705  016818  6E13               	movwf	_USBDeviceState,c	;volatile
 16706  01681A  0012               	return	
 16707  01681C                     __end_of_USBDeviceAttach:
 16708                           	opt stack 0
 16709                           tblptru	equ	0xFF8
 16710                           tblptrh	equ	0xFF7
 16711                           tblptrl	equ	0xFF6
 16712                           tablat	equ	0xFF5
 16713                           prodh	equ	0xFF4
 16714                           prodl	equ	0xFF3
 16715                           intcon	equ	0xFF2
 16716                           intcon2	equ	0xFF1
 16717                           postinc0	equ	0xFEE
 16718                           wreg	equ	0xFE8
 16719                           indf1	equ	0xFE7
 16720                           postinc1	equ	0xFE6
 16721                           postdec1	equ	0xFE5
 16722                           fsr1h	equ	0xFE2
 16723                           fsr1l	equ	0xFE1
 16724                           indf2	equ	0xFDF
 16725                           postinc2	equ	0xFDE
 16726                           postdec2	equ	0xFDD
 16727                           plusw2	equ	0xFDB
 16728                           fsr2h	equ	0xFDA
 16729                           fsr2l	equ	0xFD9
 16730                           status	equ	0xFD8
 16731                           
 16732 ;; *************** function _RTCC_init *****************
 16733 ;; Defined at:
 16734 ;;		line 22 in file "../My_library/My_RTCC.c"
 16735 ;; Parameters:    Size  Location     Type
 16736 ;;		None
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;		None
 16739 ;; Return value:  Size  Location     Type
 16740 ;;		None               void
 16741 ;; Registers used:
 16742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16752 ;;Total ram usage:        0 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:   15
 16755 ;; This function calls:
 16756 ;;		_RTCC_from_RTCC
 16757 ;;		_RTCC_from_epoch
 16758 ;; This function is called by:
 16759 ;;		_hardware_init
 16760 ;; This function uses a non-reentrant model
 16761 ;;
 16762                           
 16763                           	psect	text58
 16764  016188                     __ptext58:
 16765                           	opt stack 0
 16766  016188                     _RTCC_init:
 16767                           	opt stack 14
 16768                           
 16769                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 16770                           
 16771                           ;incstack = 0
 16772  016188  010F               	movlb	15	; () banked
 16773  01618A  8B3F               	bsf	63,5,b	;volatile
 16774                           
 16775                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 16776  01618C  010F               	movlb	15	; () banked
 16777  01618E  BB3F               	btfsc	63,5,b	;volatile
 16778  016190  D006               	goto	l12169
 16779                           
 16780                           ; BSR set to: 15
 16781                           ;My_RTCC.c: 25: EECON2 = 0x55;
 16782  016192  0E55               	movlw	85
 16783  016194  6EA7               	movwf	4007,c	;volatile
 16784                           
 16785                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 16786  016196  0EAA               	movlw	170
 16787  016198  6EA7               	movwf	4007,c	;volatile
 16788                           
 16789                           ; BSR set to: 15
 16790                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 16791  01619A  010F               	movlb	15	; () banked
 16792  01619C  8B3F               	bsf	63,5,b	;volatile
 16793  01619E                     l12169:
 16794                           
 16795                           ; BSR set to: 15
 16796                           ;My_RTCC.c: 28: }
 16797                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 16798  01619E  010F               	movlb	15	; () banked
 16799  0161A0  8F3F               	bsf	63,7,b	;volatile
 16800                           
 16801                           ; BSR set to: 15
 16802                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 16803  0161A2  010F               	movlb	15	; () banked
 16804  0161A4  953F               	bcf	63,2,b	;volatile
 16805                           
 16806                           ; BSR set to: 15
 16807                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 16808  0161A6  010F               	movlb	15	; () banked
 16809  0161A8  833C               	bsf	60,1,b	;volatile
 16810                           
 16811                           ; BSR set to: 15
 16812                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 16813  0161AA  010F               	movlb	15	; () banked
 16814  0161AC  853C               	bsf	60,2,b	;volatile
 16815                           
 16816                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 16817  0161AE  0E00               	movlw	0
 16818  0161B0  010F               	movlb	15	; () banked
 16819  0161B2  6F3E               	movwf	62,b	;volatile
 16820                           
 16821                           ; BSR set to: 15
 16822                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 16823  0161B4  86CD               	bsf	4045,3,c	;volatile
 16824                           
 16825                           ; BSR set to: 15
 16826                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
 16827  0161B6  0E7A               	movlw	low _now
 16828  0161B8  0100               	movlb	0	; () banked
 16829  0161BA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 16830  0161BC  0E01               	movlw	high _now
 16831  0161BE  0100               	movlb	0	; () banked
 16832  0161C0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 16833  0161C2  EC2D  F0B6         	call	_RTCC_from_RTCC	;wreg free
 16834                           
 16835                           ;My_RTCC.c: 37: if (now.DD == 0) {
 16836  0161C6  0101               	movlb	1	; () banked
 16837  0161C8  5182               	movf	(_now+8)& (0+255),w,b
 16838  0161CA  A4D8               	btfss	status,2,c
 16839  0161CC  0012               	return	
 16840                           
 16841                           ; BSR set to: 1
 16842                           ;My_RTCC.c: 38: now.epoch = 0;
 16843  0161CE  0E00               	movlw	0
 16844  0161D0  0101               	movlb	1	; () banked
 16845  0161D2  6F7A               	movwf	_now& (0+255),b
 16846  0161D4  0E00               	movlw	0
 16847  0161D6  6F7B               	movwf	(_now+1)& (0+255),b
 16848  0161D8  0E00               	movlw	0
 16849  0161DA  6F7C               	movwf	(_now+2)& (0+255),b
 16850  0161DC  0E00               	movlw	0
 16851  0161DE  6F7D               	movwf	(_now+3)& (0+255),b
 16852                           
 16853                           ; BSR set to: 1
 16854                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
 16855  0161E0  0E7A               	movlw	low _now
 16856  0161E2  0100               	movlb	0	; () banked
 16857  0161E4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 16858  0161E6  0E01               	movlw	high _now
 16859  0161E8  0100               	movlb	0	; () banked
 16860  0161EA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 16861  0161EC  EC13  F0B6         	call	_RTCC_from_epoch	;wreg free
 16862  0161F0  0012               	return	
 16863  0161F2                     __end_of_RTCC_init:
 16864                           	opt stack 0
 16865                           tblptru	equ	0xFF8
 16866                           tblptrh	equ	0xFF7
 16867                           tblptrl	equ	0xFF6
 16868                           tablat	equ	0xFF5
 16869                           prodh	equ	0xFF4
 16870                           prodl	equ	0xFF3
 16871                           intcon	equ	0xFF2
 16872                           intcon2	equ	0xFF1
 16873                           postinc0	equ	0xFEE
 16874                           wreg	equ	0xFE8
 16875                           indf1	equ	0xFE7
 16876                           postinc1	equ	0xFE6
 16877                           postdec1	equ	0xFE5
 16878                           fsr1h	equ	0xFE2
 16879                           fsr1l	equ	0xFE1
 16880                           indf2	equ	0xFDF
 16881                           postinc2	equ	0xFDE
 16882                           postdec2	equ	0xFDD
 16883                           plusw2	equ	0xFDB
 16884                           fsr2h	equ	0xFDA
 16885                           fsr2l	equ	0xFD9
 16886                           status	equ	0xFD8
 16887                           
 16888 ;; *************** function _RTCC_from_epoch *****************
 16889 ;; Defined at:
 16890 ;;		line 210 in file "../My_library/My_RTCC.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;  tm              2   47[BANK0 ] PTR struct .
 16893 ;;		 -> now(14), 
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;		None               void
 16898 ;; Registers used:
 16899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16905 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16908 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;Total ram usage:        2 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:   14
 16912 ;; This function calls:
 16913 ;;		_caltime_to_RTCC
 16914 ;;		_epoch_to_caltime
 16915 ;; This function is called by:
 16916 ;;		_RTCC_init
 16917 ;;		_RTCC_adjust_time_inc
 16918 ;;		_RTCC_adjust_time_dec
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           	psect	text59
 16923  016C26                     __ptext59:
 16924                           	opt stack 0
 16925  016C26                     _RTCC_from_epoch:
 16926                           	opt stack 12
 16927                           
 16928                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
 16929                           
 16930                           ;incstack = 0
 16931  016C26  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 16932  016C2A  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 16933  016C2E  EC25  F096         	call	_epoch_to_caltime	;wreg free
 16934                           
 16935                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
 16936  016C32  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 16937  016C36  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 16938  016C3A  EC37  F0A4         	call	_caltime_to_RTCC	;wreg free
 16939  016C3E  0012               	return		;funcret
 16940  016C40                     __end_of_RTCC_from_epoch:
 16941                           	opt stack 0
 16942                           tblptru	equ	0xFF8
 16943                           tblptrh	equ	0xFF7
 16944                           tblptrl	equ	0xFF6
 16945                           tablat	equ	0xFF5
 16946                           prodh	equ	0xFF4
 16947                           prodl	equ	0xFF3
 16948                           intcon	equ	0xFF2
 16949                           intcon2	equ	0xFF1
 16950                           postinc0	equ	0xFEE
 16951                           wreg	equ	0xFE8
 16952                           indf1	equ	0xFE7
 16953                           postinc1	equ	0xFE6
 16954                           postdec1	equ	0xFE5
 16955                           fsr1h	equ	0xFE2
 16956                           fsr1l	equ	0xFE1
 16957                           indf2	equ	0xFDF
 16958                           postinc2	equ	0xFDE
 16959                           postdec2	equ	0xFDD
 16960                           plusw2	equ	0xFDB
 16961                           fsr2h	equ	0xFDA
 16962                           fsr2l	equ	0xFD9
 16963                           status	equ	0xFD8
 16964                           
 16965 ;; *************** function _epoch_to_caltime *****************
 16966 ;; Defined at:
 16967 ;;		line 125 in file "../My_library/My_RTCC.c"
 16968 ;; Parameters:    Size  Location     Type
 16969 ;;  tm              2   33[BANK0 ] PTR struct .
 16970 ;;		 -> now(14), 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;  num             4   43[BANK0 ] unsigned long 
 16973 ;;  day             2   39[BANK0 ] unsigned int 
 16974 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 16975 ;;  month           1   42[BANK0 ] unsigned char 
 16976 ;;  year            1   41[BANK0 ] unsigned char 
 16977 ;; Return value:  Size  Location     Type
 16978 ;;		None               void
 16979 ;; Registers used:
 16980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16981 ;; Tracked objects:
 16982 ;;		On entry : 0/0
 16983 ;;		On exit  : 0/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16990 ;;Total ram usage:       14 bytes
 16991 ;; Hardware stack levels used:    1
 16992 ;; Hardware stack levels required when called:   13
 16993 ;; This function calls:
 16994 ;;		_get_quot_rem
 16995 ;;		_month_length
 16996 ;; This function is called by:
 16997 ;;		_RTCC_from_caltime
 16998 ;;		_RTCC_from_epoch
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           	psect	text60
 17003  012C4A                     __ptext60:
 17004                           	opt stack 0
 17005  012C4A                     _epoch_to_caltime:
 17006                           	opt stack 12
 17007                           
 17008                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
 17009                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
 17010                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
 17011                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
 17012                           ;My_RTCC.c: 132: uint16_t day;
 17013                           ;My_RTCC.c: 133: uint8_t year = 0;
 17014                           
 17015                           ;incstack = 0
 17016  012C4A  0E00               	movlw	0
 17017  012C4C  0100               	movlb	0	; () banked
 17018  012C4E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17019                           
 17020                           ;My_RTCC.c: 134: uint8_t month = 1;
 17021  012C50  0E01               	movlw	1
 17022  012C52  0100               	movlb	0	; () banked
 17023  012C54  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;My_RTCC.c: 135: epoch_t num;
 17027                           ;My_RTCC.c: 137: num = tm->epoch;
 17028  012C56  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17029  012C5A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17030  012C5E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 17031  012C62  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 17032  012C66  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 17033  012C6A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
 17037  012C6E  0E8B               	movlw	low epoch_to_caltime@num
 17038  012C70  0100               	movlb	0	; () banked
 17039  012C72  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17040  012C74  0E00               	movlw	high epoch_to_caltime@num
 17041  012C76  0100               	movlb	0	; () banked
 17042  012C78  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17043  012C7A  0E3C               	movlw	60
 17044  012C7C  0100               	movlb	0	; () banked
 17045  012C7E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17046  012C80  EC0D  F0A5         	call	_get_quot_rem	;wreg free
 17047  012C84  0100               	movlb	0	; () banked
 17048  012C86  EE20 F004          	lfsr	2,4
 17049  012C8A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17050  012C8C  26D9               	addwf	fsr2l,f,c
 17051  012C8E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17052  012C90  22DA               	addwfc	fsr2h,f,c
 17053  012C92  0100               	movlb	0	; () banked
 17054  012C94  C079  FFDF         	movff	?_get_quot_rem,indf2
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
 17058  012C98  0E8B               	movlw	low epoch_to_caltime@num
 17059  012C9A  0100               	movlb	0	; () banked
 17060  012C9C  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17061  012C9E  0E00               	movlw	high epoch_to_caltime@num
 17062  012CA0  0100               	movlb	0	; () banked
 17063  012CA2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17064  012CA4  0E3C               	movlw	60
 17065  012CA6  0100               	movlb	0	; () banked
 17066  012CA8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17067  012CAA  EC0D  F0A5         	call	_get_quot_rem	;wreg free
 17068  012CAE  0100               	movlb	0	; () banked
 17069  012CB0  EE20 F005          	lfsr	2,5
 17070  012CB4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17071  012CB6  26D9               	addwf	fsr2l,f,c
 17072  012CB8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17073  012CBA  22DA               	addwfc	fsr2h,f,c
 17074  012CBC  0100               	movlb	0	; () banked
 17075  012CBE  C079  FFDF         	movff	?_get_quot_rem,indf2
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
 17079  012CC2  0E8B               	movlw	low epoch_to_caltime@num
 17080  012CC4  0100               	movlb	0	; () banked
 17081  012CC6  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17082  012CC8  0E00               	movlw	high epoch_to_caltime@num
 17083  012CCA  0100               	movlb	0	; () banked
 17084  012CCC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17085  012CCE  0E18               	movlw	24
 17086  012CD0  0100               	movlb	0	; () banked
 17087  012CD2  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17088  012CD4  EC0D  F0A5         	call	_get_quot_rem	;wreg free
 17089  012CD8  0100               	movlb	0	; () banked
 17090  012CDA  EE20 F006          	lfsr	2,6
 17091  012CDE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17092  012CE0  26D9               	addwf	fsr2l,f,c
 17093  012CE2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17094  012CE4  22DA               	addwfc	fsr2h,f,c
 17095  012CE6  0100               	movlb	0	; () banked
 17096  012CE8  C079  FFDF         	movff	?_get_quot_rem,indf2
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;My_RTCC.c: 141: day = num;
 17100  012CEC  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17101  012CF0  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17102                           
 17103                           ; BSR set to: 0
 17104                           ;My_RTCC.c: 142: day_since_epoch = day;
 17105  012CF4  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17106  012CF8  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17107                           
 17108                           ; BSR set to: 0
 17109                           ;My_RTCC.c: 144: num += 6;
 17110  012CFC  0E06               	movlw	6
 17111  012CFE  0100               	movlb	0	; () banked
 17112  012D00  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17113  012D02  0E00               	movlw	0
 17114  012D04  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17115  012D06  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17116  012D08  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
 17120  012D0A  0E8B               	movlw	low epoch_to_caltime@num
 17121  012D0C  0100               	movlb	0	; () banked
 17122  012D0E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17123  012D10  0E00               	movlw	high epoch_to_caltime@num
 17124  012D12  0100               	movlb	0	; () banked
 17125  012D14  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17126  012D16  0E07               	movlw	7
 17127  012D18  0100               	movlb	0	; () banked
 17128  012D1A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17129  012D1C  EC0D  F0A5         	call	_get_quot_rem	;wreg free
 17130  012D20  0100               	movlb	0	; () banked
 17131  012D22  EE20 F007          	lfsr	2,7
 17132  012D26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17133  012D28  26D9               	addwf	fsr2l,f,c
 17134  012D2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17135  012D2C  22DA               	addwfc	fsr2h,f,c
 17136  012D2E  0100               	movlb	0	; () banked
 17137  012D30  C079  FFDF         	movff	?_get_quot_rem,indf2
 17138                           
 17139                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
 17140  012D34  D03F               	goto	l10839
 17141  012D36                     l874:
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;My_RTCC.c: 155: LATB2 = 1;
 17145  012D36  848A               	bsf	3978,2,c	;volatile
 17146                           
 17147                           ; BSR set to: 0
 17148                           ;My_RTCC.c: 156: day = day - month_length(year, month);
 17149  012D38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17150  012D3C  0100               	movlb	0	; () banked
 17151  012D3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17152  012D40  EC5C  F0A3         	call	_month_length
 17153  012D44  0100               	movlb	0	; () banked
 17154  012D46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17155  012D48  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17156  012D4A  0100               	movlb	0	; () banked
 17157  012D4C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17158  012D4E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17159  012D50  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17160  012D52  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17161  012D54  0100               	movlb	0	; () banked
 17162  012D56  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17163  012D58  0100               	movlb	0	; () banked
 17164  012D5A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17165  012D5C  0100               	movlb	0	; () banked
 17166  012D5E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17167  012D60  0100               	movlb	0	; () banked
 17168  012D62  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17169  012D64  0100               	movlb	0	; () banked
 17170  012D66  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17171  012D68  0100               	movlb	0	; () banked
 17172  012D6A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17173                           
 17174                           ; BSR set to: 0
 17175                           ;My_RTCC.c: 157: if (month == 12) {
 17176  012D6C  0E0C               	movlw	12
 17177  012D6E  0100               	movlb	0	; () banked
 17178  012D70  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17179  012D72  A4D8               	btfss	status,2,c
 17180  012D74  D019               	goto	l10833
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;My_RTCC.c: 158: month = 1;
 17184  012D76  0E01               	movlw	1
 17185  012D78  0100               	movlb	0	; () banked
 17186  012D7A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17187                           
 17188                           ; BSR set to: 0
 17189                           ;My_RTCC.c: 159: year++;
 17190  012D7C  0100               	movlb	0	; () banked
 17191  012D7E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17192                           
 17193                           ; BSR set to: 0
 17194                           ;My_RTCC.c: 161: if (year >= 100) {
 17195  012D80  0E63               	movlw	99
 17196  012D82  0100               	movlb	0	; () banked
 17197  012D84  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17198  012D86  D012               	goto	l10835
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
 17202  012D88  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17203  012D8C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17204  012D90  0E80               	movlw	128
 17205  012D92  5EDE               	subwf	postinc2,f,c
 17206  012D94  0E13               	movlw	19
 17207  012D96  5ADE               	subwfb	postinc2,f,c
 17208  012D98  0E19               	movlw	25
 17209  012D9A  5ADE               	subwfb	postinc2,f,c
 17210  012D9C  0EBC               	movlw	188
 17211  012D9E  5ADE               	subwfb	postinc2,f,c
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;My_RTCC.c: 163: year = 0;
 17215  012DA0  0E00               	movlw	0
 17216  012DA2  0100               	movlb	0	; () banked
 17217  012DA4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;My_RTCC.c: 164: }
 17221                           ;My_RTCC.c: 165: } else {
 17222  012DA6  D002               	goto	l10835
 17223  012DA8                     l10833:
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;My_RTCC.c: 166: month++;
 17227  012DA8  0100               	movlb	0	; () banked
 17228  012DAA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17229  012DAC                     l10835:
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;My_RTCC.c: 167: }
 17233                           ;My_RTCC.c: 168: month_cache = month;
 17234  012DAC  C08A  F1E6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;My_RTCC.c: 169: year_cache = year;
 17238  012DB0  C089  F12D         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17239  012DB4                     l10839:
 17240                           
 17241                           ; BSR set to: 0
 17242  012DB4  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17243  012DB8  0100               	movlb	0	; () banked
 17244  012DBA  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17245  012DBC  EC5C  F0A3         	call	_month_length
 17246  012DC0  0100               	movlb	0	; () banked
 17247  012DC2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17248  012DC4  0100               	movlb	0	; () banked
 17249  012DC6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17250  012DC8  0100               	movlb	0	; () banked
 17251  012DCA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17252  012DCC  0E00               	movlw	0
 17253  012DCE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17254  012DD0  B0D8               	btfsc	status,0,c
 17255  012DD2  D7B1               	goto	l874
 17256                           
 17257                           ; BSR set to: 0
 17258                           ;My_RTCC.c: 170: }
 17259                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
 17260                           
 17261                           ; BSR set to: 0
 17262  012DD4  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 17263  012DD8  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 17264  012DDC  0100               	movlb	0	; () banked
 17265  012DDE  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17266  012DE0  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17267  012DE2  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17268  012DE4  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17269  012DE6  0100               	movlb	0	; () banked
 17270  012DE8  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 17271  012DEA  0100               	movlb	0	; () banked
 17272  012DEC  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17273  012DEE  0101               	movlb	1	; () banked
 17274  012DF0  6F19               	movwf	epoch_to_caltime@day_cache& (0+255),b
 17275  012DF2  0100               	movlb	0	; () banked
 17276  012DF4  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 17277  012DF6  0100               	movlb	0	; () banked
 17278  012DF8  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17279  012DFA  0101               	movlb	1	; () banked
 17280  012DFC  6F1A               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 17281                           
 17282                           ; BSR set to: 1
 17283                           ;My_RTCC.c: 172: day++;
 17284  012DFE  0100               	movlb	0	; () banked
 17285  012E00  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 17286  012E02  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;My_RTCC.c: 174: tm->YY = year;
 17290  012E04  0100               	movlb	0	; () banked
 17291  012E06  EE20 F00A          	lfsr	2,10
 17292  012E0A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17293  012E0C  26D9               	addwf	fsr2l,f,c
 17294  012E0E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17295  012E10  22DA               	addwfc	fsr2h,f,c
 17296  012E12  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 17297                           
 17298                           ; BSR set to: 0
 17299                           ;My_RTCC.c: 175: tm->MM = month;
 17300  012E16  0100               	movlb	0	; () banked
 17301  012E18  EE20 F009          	lfsr	2,9
 17302  012E1C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17303  012E1E  26D9               	addwf	fsr2l,f,c
 17304  012E20  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17305  012E22  22DA               	addwfc	fsr2h,f,c
 17306  012E24  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;My_RTCC.c: 176: tm->DD = day;
 17310  012E28  0100               	movlb	0	; () banked
 17311  012E2A  EE20 F008          	lfsr	2,8
 17312  012E2E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17313  012E30  26D9               	addwf	fsr2l,f,c
 17314  012E32  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17315  012E34  22DA               	addwfc	fsr2h,f,c
 17316  012E36  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 17317                           
 17318                           ; BSR set to: 0
 17319  012E3A  0012               	return		;funcret
 17320  012E3C                     __end_of_epoch_to_caltime:
 17321                           	opt stack 0
 17322                           tblptru	equ	0xFF8
 17323                           tblptrh	equ	0xFF7
 17324                           tblptrl	equ	0xFF6
 17325                           tablat	equ	0xFF5
 17326                           prodh	equ	0xFF4
 17327                           prodl	equ	0xFF3
 17328                           intcon	equ	0xFF2
 17329                           intcon2	equ	0xFF1
 17330                           postinc0	equ	0xFEE
 17331                           wreg	equ	0xFE8
 17332                           indf1	equ	0xFE7
 17333                           postinc1	equ	0xFE6
 17334                           postdec1	equ	0xFE5
 17335                           fsr1h	equ	0xFE2
 17336                           fsr1l	equ	0xFE1
 17337                           indf2	equ	0xFDF
 17338                           postinc2	equ	0xFDE
 17339                           postdec2	equ	0xFDD
 17340                           plusw2	equ	0xFDB
 17341                           fsr2h	equ	0xFDA
 17342                           fsr2l	equ	0xFD9
 17343                           status	equ	0xFD8
 17344                           
 17345 ;; *************** function _get_quot_rem *****************
 17346 ;; Defined at:
 17347 ;;		line 80 in file "../My_library/My_RTCC.c"
 17348 ;; Parameters:    Size  Location     Type
 17349 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 17350 ;;		 -> epoch_to_caltime@num(4), 
 17351 ;;  div             1   27[BANK0 ] unsigned char 
 17352 ;; Auto vars:     Size  Location     Type
 17353 ;;  num             4   29[BANK0 ] unsigned long 
 17354 ;; Return value:  Size  Location     Type
 17355 ;;                  4   25[BANK0 ] unsigned long 
 17356 ;; Registers used:
 17357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17358 ;; Tracked objects:
 17359 ;;		On entry : 0/0
 17360 ;;		On exit  : 0/0
 17361 ;;		Unchanged: 0/0
 17362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17364 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17367 ;;Total ram usage:        8 bytes
 17368 ;; Hardware stack levels used:    1
 17369 ;; Hardware stack levels required when called:   12
 17370 ;; This function calls:
 17371 ;;		___lldiv
 17372 ;;		___lmul
 17373 ;; This function is called by:
 17374 ;;		_epoch_to_caltime
 17375 ;; This function uses a non-reentrant model
 17376 ;;
 17377                           
 17378                           	psect	text61
 17379  014A1A                     __ptext61:
 17380                           	opt stack 0
 17381  014A1A                     _get_quot_rem:
 17382                           	opt stack 12
 17383                           
 17384                           ;My_RTCC.c: 83: epoch_t num = *quot;
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;incstack = 0
 17388  014A1A  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17389  014A1E  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17390  014A22  CFDE F07D          	movff	postinc2,get_quot_rem@num
 17391  014A26  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 17392  014A2A  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 17393  014A2E  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 17394                           
 17395                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
 17396  014A32  0100               	movlb	0	; () banked
 17397  014A34  517B               	movf	get_quot_rem@div& (0+255),w,b
 17398  014A36  0100               	movlb	0	; () banked
 17399  014A38  6F64               	movwf	___lldiv@divisor& (0+255),b
 17400  014A3A  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 17401  014A3C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 17402  014A3E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 17403  014A40  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 17404  014A44  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 17405  014A48  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 17406  014A4C  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 17407  014A50  ECCB  F0A9         	call	___lldiv	;wreg free
 17408  014A54  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17409  014A58  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17410  014A5C  0100               	movlb	0	; () banked
 17411  014A5E  C060  FFDE         	movff	?___lldiv,postinc2
 17412  014A62  0100               	movlb	0	; () banked
 17413  014A64  C061  FFDE         	movff	?___lldiv+1,postinc2
 17414  014A68  0100               	movlb	0	; () banked
 17415  014A6A  C062  FFDE         	movff	?___lldiv+2,postinc2
 17416  014A6E  0100               	movlb	0	; () banked
 17417  014A70  C063  FFDD         	movff	?___lldiv+3,postdec2
 17418  014A74  52DD               	movf	postdec2,f,c
 17419  014A76  52DD               	movf	postdec2,f,c
 17420  014A78  CFDE F06D          	movff	postinc2,___lmul@multiplier
 17421  014A7C  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 17422  014A80  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 17423  014A84  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 17424  014A88  0100               	movlb	0	; () banked
 17425  014A8A  517B               	movf	get_quot_rem@div& (0+255),w,b
 17426  014A8C  0100               	movlb	0	; () banked
 17427  014A8E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 17428  014A90  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 17429  014A92  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17430  014A94  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17431  014A96  EC75  F0AF         	call	___lmul	;wreg free
 17432  014A9A  0100               	movlb	0	; () banked
 17433  014A9C  1F6D               	comf	?___lmul& (0+255),f,b
 17434  014A9E  0100               	movlb	0	; () banked
 17435  014AA0  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 17436  014AA2  0100               	movlb	0	; () banked
 17437  014AA4  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 17438  014AA6  0100               	movlb	0	; () banked
 17439  014AA8  1F70               	comf	(?___lmul+3)& (0+255),f,b
 17440  014AAA  0100               	movlb	0	; () banked
 17441  014AAC  2B6D               	incf	?___lmul& (0+255),f,b
 17442  014AAE  0E00               	movlw	0
 17443  014AB0  0100               	movlb	0	; () banked
 17444  014AB2  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 17445  014AB4  0100               	movlb	0	; () banked
 17446  014AB6  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 17447  014AB8  0100               	movlb	0	; () banked
 17448  014ABA  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 17449  014ABC  0100               	movlb	0	; () banked
 17450  014ABE  517D               	movf	get_quot_rem@num& (0+255),w,b
 17451  014AC0  0100               	movlb	0	; () banked
 17452  014AC2  256D               	addwf	?___lmul& (0+255),w,b
 17453  014AC4  0100               	movlb	0	; () banked
 17454  014AC6  6F79               	movwf	?_get_quot_rem& (0+255),b
 17455  014AC8  0100               	movlb	0	; () banked
 17456  014ACA  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 17457  014ACC  0100               	movlb	0	; () banked
 17458  014ACE  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 17459  014AD0  0100               	movlb	0	; () banked
 17460  014AD2  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 17461  014AD4  0100               	movlb	0	; () banked
 17462  014AD6  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 17463  014AD8  0100               	movlb	0	; () banked
 17464  014ADA  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 17465  014ADC  0100               	movlb	0	; () banked
 17466  014ADE  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 17467  014AE0  0100               	movlb	0	; () banked
 17468  014AE2  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 17469  014AE4  0100               	movlb	0	; () banked
 17470  014AE6  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 17471  014AE8  0100               	movlb	0	; () banked
 17472  014AEA  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 17473  014AEC  0012               	return	
 17474  014AEE                     __end_of_get_quot_rem:
 17475                           	opt stack 0
 17476                           tblptru	equ	0xFF8
 17477                           tblptrh	equ	0xFF7
 17478                           tblptrl	equ	0xFF6
 17479                           tablat	equ	0xFF5
 17480                           prodh	equ	0xFF4
 17481                           prodl	equ	0xFF3
 17482                           intcon	equ	0xFF2
 17483                           intcon2	equ	0xFF1
 17484                           postinc0	equ	0xFEE
 17485                           wreg	equ	0xFE8
 17486                           indf1	equ	0xFE7
 17487                           postinc1	equ	0xFE6
 17488                           postdec1	equ	0xFE5
 17489                           fsr1h	equ	0xFE2
 17490                           fsr1l	equ	0xFE1
 17491                           indf2	equ	0xFDF
 17492                           postinc2	equ	0xFDE
 17493                           postdec2	equ	0xFDD
 17494                           plusw2	equ	0xFDB
 17495                           fsr2h	equ	0xFDA
 17496                           fsr2l	equ	0xFD9
 17497                           status	equ	0xFD8
 17498                           
 17499 ;; *************** function _caltime_to_RTCC *****************
 17500 ;; Defined at:
 17501 ;;		line 105 in file "../My_library/My_RTCC.c"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;  tm              2    9[BANK0 ] PTR struct .
 17504 ;;		 -> now(14), 
 17505 ;; Auto vars:     Size  Location     Type
 17506 ;;		None
 17507 ;; Return value:  Size  Location     Type
 17508 ;;		None               void
 17509 ;; Registers used:
 17510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17511 ;; Tracked objects:
 17512 ;;		On entry : 0/0
 17513 ;;		On exit  : 0/0
 17514 ;;		Unchanged: 0/0
 17515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;Total ram usage:        2 bytes
 17521 ;; Hardware stack levels used:    1
 17522 ;; Hardware stack levels required when called:   13
 17523 ;; This function calls:
 17524 ;;		_d_to_x
 17525 ;; This function is called by:
 17526 ;;		_RTCC_from_caltime
 17527 ;;		_RTCC_from_epoch
 17528 ;; This function uses a non-reentrant model
 17529 ;;
 17530                           
 17531                           	psect	text62
 17532  01486E                     __ptext62:
 17533                           	opt stack 0
 17534  01486E                     _caltime_to_RTCC:
 17535                           	opt stack 12
 17536  01486E                     l861:
 17537  01486E  010F               	movlb	15	; () banked
 17538  014870  B93F               	btfsc	63,4,b	;volatile
 17539  014872  D7FD               	goto	l861
 17540                           
 17541                           ; BSR set to: 15
 17542                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
 17543  014874  010F               	movlb	15	; () banked
 17544  014876  813F               	bsf	63,0,b	;volatile
 17545                           
 17546                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
 17547  014878  010F               	movlb	15	; () banked
 17548  01487A  833F               	bsf	63,1,b	;volatile
 17549                           
 17550                           ; BSR set to: 15
 17551                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
 17552  01487C  0100               	movlb	0	; () banked
 17553  01487E  EE20 F00A          	lfsr	2,10
 17554  014882  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17555  014884  26D9               	addwf	fsr2l,f,c
 17556  014886  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17557  014888  22DA               	addwfc	fsr2h,f,c
 17558  01488A  50DF               	movf	indf2,w,c
 17559  01488C  EC57  F0B5         	call	_d_to_x
 17560  014890  010F               	movlb	15	; () banked
 17561  014892  6F3A               	movwf	58,b	;volatile
 17562                           
 17563                           ; BSR set to: 15
 17564                           ;My_RTCC.c: 110: RTCVALH = 0x00;
 17565  014894  0E00               	movlw	0
 17566  014896  010F               	movlb	15	; () banked
 17567  014898  6F3B               	movwf	59,b	;volatile
 17568                           
 17569                           ; BSR set to: 15
 17570                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
 17571  01489A  010F               	movlb	15	; () banked
 17572  01489C  913F               	bcf	63,0,b	;volatile
 17573                           
 17574                           ; BSR set to: 15
 17575                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
 17576  01489E  010F               	movlb	15	; () banked
 17577  0148A0  833F               	bsf	63,1,b	;volatile
 17578                           
 17579                           ; BSR set to: 15
 17580                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
 17581  0148A2  0100               	movlb	0	; () banked
 17582  0148A4  EE20 F008          	lfsr	2,8
 17583  0148A8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17584  0148AA  26D9               	addwf	fsr2l,f,c
 17585  0148AC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17586  0148AE  22DA               	addwfc	fsr2h,f,c
 17587  0148B0  50DF               	movf	indf2,w,c
 17588  0148B2  EC57  F0B5         	call	_d_to_x
 17589  0148B6  010F               	movlb	15	; () banked
 17590  0148B8  6F3A               	movwf	58,b	;volatile
 17591                           
 17592                           ; BSR set to: 15
 17593                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
 17594  0148BA  0100               	movlb	0	; () banked
 17595  0148BC  EE20 F009          	lfsr	2,9
 17596  0148C0  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17597  0148C2  26D9               	addwf	fsr2l,f,c
 17598  0148C4  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17599  0148C6  22DA               	addwfc	fsr2h,f,c
 17600  0148C8  50DF               	movf	indf2,w,c
 17601  0148CA  EC57  F0B5         	call	_d_to_x
 17602  0148CE  010F               	movlb	15	; () banked
 17603  0148D0  6F3B               	movwf	59,b	;volatile
 17604                           
 17605                           ; BSR set to: 15
 17606                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
 17607  0148D2  010F               	movlb	15	; () banked
 17608  0148D4  813F               	bsf	63,0,b	;volatile
 17609                           
 17610                           ; BSR set to: 15
 17611                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
 17612  0148D6  010F               	movlb	15	; () banked
 17613  0148D8  933F               	bcf	63,1,b	;volatile
 17614                           
 17615                           ; BSR set to: 15
 17616                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
 17617  0148DA  0100               	movlb	0	; () banked
 17618  0148DC  EE20 F006          	lfsr	2,6
 17619  0148E0  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17620  0148E2  26D9               	addwf	fsr2l,f,c
 17621  0148E4  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17622  0148E6  22DA               	addwfc	fsr2h,f,c
 17623  0148E8  50DF               	movf	indf2,w,c
 17624  0148EA  EC57  F0B5         	call	_d_to_x
 17625  0148EE  010F               	movlb	15	; () banked
 17626  0148F0  6F3A               	movwf	58,b	;volatile
 17627                           
 17628                           ; BSR set to: 15
 17629                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
 17630  0148F2  0100               	movlb	0	; () banked
 17631  0148F4  EE20 F007          	lfsr	2,7
 17632  0148F8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17633  0148FA  26D9               	addwf	fsr2l,f,c
 17634  0148FC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17635  0148FE  22DA               	addwfc	fsr2h,f,c
 17636  014900  50DF               	movf	indf2,w,c
 17637  014902  EC57  F0B5         	call	_d_to_x
 17638  014906  010F               	movlb	15	; () banked
 17639  014908  6F3B               	movwf	59,b	;volatile
 17640                           
 17641                           ; BSR set to: 15
 17642                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
 17643  01490A  010F               	movlb	15	; () banked
 17644  01490C  913F               	bcf	63,0,b	;volatile
 17645                           
 17646                           ; BSR set to: 15
 17647                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
 17648  01490E  010F               	movlb	15	; () banked
 17649  014910  933F               	bcf	63,1,b	;volatile
 17650                           
 17651                           ; BSR set to: 15
 17652                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
 17653  014912  0100               	movlb	0	; () banked
 17654  014914  EE20 F004          	lfsr	2,4
 17655  014918  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17656  01491A  26D9               	addwf	fsr2l,f,c
 17657  01491C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17658  01491E  22DA               	addwfc	fsr2h,f,c
 17659  014920  50DF               	movf	indf2,w,c
 17660  014922  EC57  F0B5         	call	_d_to_x
 17661  014926  010F               	movlb	15	; () banked
 17662  014928  6F3A               	movwf	58,b	;volatile
 17663                           
 17664                           ; BSR set to: 15
 17665                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
 17666  01492A  0100               	movlb	0	; () banked
 17667  01492C  EE20 F005          	lfsr	2,5
 17668  014930  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 17669  014932  26D9               	addwf	fsr2l,f,c
 17670  014934  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 17671  014936  22DA               	addwfc	fsr2h,f,c
 17672  014938  50DF               	movf	indf2,w,c
 17673  01493A  EC57  F0B5         	call	_d_to_x
 17674  01493E  010F               	movlb	15	; () banked
 17675  014940  6F3B               	movwf	59,b	;volatile
 17676                           
 17677                           ; BSR set to: 15
 17678  014942  0012               	return		;funcret
 17679  014944                     __end_of_caltime_to_RTCC:
 17680                           	opt stack 0
 17681                           tblptru	equ	0xFF8
 17682                           tblptrh	equ	0xFF7
 17683                           tblptrl	equ	0xFF6
 17684                           tablat	equ	0xFF5
 17685                           prodh	equ	0xFF4
 17686                           prodl	equ	0xFF3
 17687                           intcon	equ	0xFF2
 17688                           intcon2	equ	0xFF1
 17689                           postinc0	equ	0xFEE
 17690                           wreg	equ	0xFE8
 17691                           indf1	equ	0xFE7
 17692                           postinc1	equ	0xFE6
 17693                           postdec1	equ	0xFE5
 17694                           fsr1h	equ	0xFE2
 17695                           fsr1l	equ	0xFE1
 17696                           indf2	equ	0xFDF
 17697                           postinc2	equ	0xFDE
 17698                           postdec2	equ	0xFDD
 17699                           plusw2	equ	0xFDB
 17700                           fsr2h	equ	0xFDA
 17701                           fsr2l	equ	0xFD9
 17702                           status	equ	0xFD8
 17703                           
 17704 ;; *************** function _d_to_x *****************
 17705 ;; Defined at:
 17706 ;;		line 45 in file "../My_library/My_RTCC.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;  dec             1    wreg     unsigned char 
 17709 ;; Auto vars:     Size  Location     Type
 17710 ;;  dec             1    8[BANK0 ] unsigned char 
 17711 ;; Return value:  Size  Location     Type
 17712 ;;                  1    wreg      unsigned char 
 17713 ;; Registers used:
 17714 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17715 ;; Tracked objects:
 17716 ;;		On entry : 0/0
 17717 ;;		On exit  : 0/0
 17718 ;;		Unchanged: 0/0
 17719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17724 ;;Total ram usage:        1 bytes
 17725 ;; Hardware stack levels used:    1
 17726 ;; Hardware stack levels required when called:   12
 17727 ;; This function calls:
 17728 ;;		___awdiv
 17729 ;; This function is called by:
 17730 ;;		_caltime_to_RTCC
 17731 ;; This function uses a non-reentrant model
 17732 ;;
 17733                           
 17734                           	psect	text63
 17735  016AAE                     __ptext63:
 17736                           	opt stack 0
 17737  016AAE                     _d_to_x:
 17738                           	opt stack 12
 17739                           
 17740                           ; BSR set to: 15
 17741                           ;incstack = 0
 17742                           ;d_to_x@dec stored from wreg
 17743  016AAE  0100               	movlb	0	; () banked
 17744  016AB0  6F68               	movwf	d_to_x@dec& (0+255),b
 17745                           
 17746                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
 17747  016AB2  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 17748  016AB6  0100               	movlb	0	; () banked
 17749  016AB8  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 17750  016ABA  0E00               	movlw	0
 17751  016ABC  0100               	movlb	0	; () banked
 17752  016ABE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 17753  016AC0  0E0A               	movlw	10
 17754  016AC2  6F62               	movwf	___awdiv@divisor& (0+255),b
 17755  016AC4  EC6C  F0A9         	call	___awdiv	;wreg free
 17756  016AC8  0100               	movlb	0	; () banked
 17757  016ACA  5160               	movf	?___awdiv& (0+255),w,b
 17758  016ACC  0D06               	mullw	6
 17759  016ACE  50F3               	movf	prodl,w,c
 17760  016AD0  0100               	movlb	0	; () banked
 17761  016AD2  2568               	addwf	d_to_x@dec& (0+255),w,b
 17762  016AD4  0012               	return	
 17763  016AD6                     __end_of_d_to_x:
 17764                           	opt stack 0
 17765                           tblptru	equ	0xFF8
 17766                           tblptrh	equ	0xFF7
 17767                           tblptrl	equ	0xFF6
 17768                           tablat	equ	0xFF5
 17769                           prodh	equ	0xFF4
 17770                           prodl	equ	0xFF3
 17771                           intcon	equ	0xFF2
 17772                           intcon2	equ	0xFF1
 17773                           postinc0	equ	0xFEE
 17774                           wreg	equ	0xFE8
 17775                           indf1	equ	0xFE7
 17776                           postinc1	equ	0xFE6
 17777                           postdec1	equ	0xFE5
 17778                           fsr1h	equ	0xFE2
 17779                           fsr1l	equ	0xFE1
 17780                           indf2	equ	0xFDF
 17781                           postinc2	equ	0xFDE
 17782                           postdec2	equ	0xFDD
 17783                           plusw2	equ	0xFDB
 17784                           fsr2h	equ	0xFDA
 17785                           fsr2l	equ	0xFD9
 17786                           status	equ	0xFD8
 17787                           
 17788 ;; *************** function ___awdiv *****************
 17789 ;; Defined at:
 17790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;  dividend        2    0[BANK0 ] int 
 17793 ;;  divisor         2    2[BANK0 ] int 
 17794 ;; Auto vars:     Size  Location     Type
 17795 ;;  quotient        2    6[BANK0 ] int 
 17796 ;;  sign            1    5[BANK0 ] unsigned char 
 17797 ;;  counter         1    4[BANK0 ] unsigned char 
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  2    0[BANK0 ] int 
 17800 ;; Registers used:
 17801 ;;		wreg, status,2, status,0
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17807 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17808 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17810 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17811 ;;Total ram usage:        8 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; Hardware stack levels required when called:   11
 17814 ;; This function calls:
 17815 ;;		Nothing
 17816 ;; This function is called by:
 17817 ;;		_d_to_x
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           	psect	text64
 17822  0152D8                     __ptext64:
 17823                           	opt stack 0
 17824  0152D8                     ___awdiv:
 17825                           	opt stack 12
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;incstack = 0
 17829  0152D8  0E00               	movlw	0
 17830  0152DA  0100               	movlb	0	; () banked
 17831  0152DC  6F65               	movwf	___awdiv@sign& (0+255),b
 17832                           
 17833                           ; BSR set to: 0
 17834  0152DE  0100               	movlb	0	; () banked
 17835  0152E0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17836  0152E2  D008               	goto	l10579
 17837                           
 17838                           ; BSR set to: 0
 17839  0152E4  0100               	movlb	0	; () banked
 17840  0152E6  6D62               	negf	___awdiv@divisor& (0+255),b
 17841  0152E8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17842  0152EA  B0D8               	btfsc	status,0,c
 17843  0152EC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17844                           
 17845                           ; BSR set to: 0
 17846  0152EE  0E01               	movlw	1
 17847  0152F0  0100               	movlb	0	; () banked
 17848  0152F2  6F65               	movwf	___awdiv@sign& (0+255),b
 17849  0152F4                     l10579:
 17850                           
 17851                           ; BSR set to: 0
 17852  0152F4  0100               	movlb	0	; () banked
 17853  0152F6  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17854  0152F8  D008               	goto	l10585
 17855                           
 17856                           ; BSR set to: 0
 17857  0152FA  0100               	movlb	0	; () banked
 17858  0152FC  6D60               	negf	___awdiv@dividend& (0+255),b
 17859  0152FE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17860  015300  B0D8               	btfsc	status,0,c
 17861  015302  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17862                           
 17863                           ; BSR set to: 0
 17864  015304  0E01               	movlw	1
 17865  015306  0100               	movlb	0	; () banked
 17866  015308  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 17867  01530A                     l10585:
 17868                           
 17869                           ; BSR set to: 0
 17870  01530A  0E00               	movlw	0
 17871  01530C  0100               	movlb	0	; () banked
 17872  01530E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 17873  015310  0E00               	movlw	0
 17874  015312  6F66               	movwf	___awdiv@quotient& (0+255),b
 17875                           
 17876                           ; BSR set to: 0
 17877  015314  0100               	movlb	0	; () banked
 17878  015316  5162               	movf	___awdiv@divisor& (0+255),w,b
 17879  015318  0100               	movlb	0	; () banked
 17880  01531A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17881  01531C  B4D8               	btfsc	status,2,c
 17882  01531E  D02C               	goto	l10607
 17883                           
 17884                           ; BSR set to: 0
 17885  015320  0E01               	movlw	1
 17886  015322  0100               	movlb	0	; () banked
 17887  015324  6F64               	movwf	___awdiv@counter& (0+255),b
 17888  015326  D006               	goto	l10593
 17889  015328                     l10591:
 17890                           
 17891                           ; BSR set to: 0
 17892  015328  0100               	movlb	0	; () banked
 17893  01532A  90D8               	bcf	status,0,c
 17894  01532C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 17895  01532E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17896  015330  0100               	movlb	0	; () banked
 17897  015332  2B64               	incf	___awdiv@counter& (0+255),f,b
 17898  015334                     l10593:
 17899                           
 17900                           ; BSR set to: 0
 17901  015334  0100               	movlb	0	; () banked
 17902  015336  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17903  015338  D7F7               	goto	l10591
 17904  01533A                     l10595:
 17905                           
 17906                           ; BSR set to: 0
 17907  01533A  0100               	movlb	0	; () banked
 17908  01533C  90D8               	bcf	status,0,c
 17909  01533E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 17910  015340  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17911                           
 17912                           ; BSR set to: 0
 17913  015342  0100               	movlb	0	; () banked
 17914  015344  5162               	movf	___awdiv@divisor& (0+255),w,b
 17915  015346  0100               	movlb	0	; () banked
 17916  015348  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 17917  01534A  0100               	movlb	0	; () banked
 17918  01534C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17919  01534E  0100               	movlb	0	; () banked
 17920  015350  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17921  015352  A0D8               	btfss	status,0,c
 17922  015354  D00A               	goto	l10603
 17923                           
 17924                           ; BSR set to: 0
 17925  015356  0100               	movlb	0	; () banked
 17926  015358  5162               	movf	___awdiv@divisor& (0+255),w,b
 17927  01535A  0100               	movlb	0	; () banked
 17928  01535C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 17929  01535E  0100               	movlb	0	; () banked
 17930  015360  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17931  015362  0100               	movlb	0	; () banked
 17932  015364  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17933                           
 17934                           ; BSR set to: 0
 17935  015366  0100               	movlb	0	; () banked
 17936  015368  8166               	bsf	___awdiv@quotient& (0+255),0,b
 17937  01536A                     l10603:
 17938                           
 17939                           ; BSR set to: 0
 17940  01536A  0100               	movlb	0	; () banked
 17941  01536C  90D8               	bcf	status,0,c
 17942  01536E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17943  015370  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 17944                           
 17945                           ; BSR set to: 0
 17946  015372  0100               	movlb	0	; () banked
 17947  015374  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 17948  015376  D7E1               	goto	l10595
 17949  015378                     l10607:
 17950                           
 17951                           ; BSR set to: 0
 17952  015378  0100               	movlb	0	; () banked
 17953  01537A  5165               	movf	___awdiv@sign& (0+255),w,b
 17954  01537C  0100               	movlb	0	; () banked
 17955  01537E  B4D8               	btfsc	status,2,c
 17956  015380  D005               	goto	l10611
 17957                           
 17958                           ; BSR set to: 0
 17959  015382  0100               	movlb	0	; () banked
 17960  015384  6D66               	negf	___awdiv@quotient& (0+255),b
 17961  015386  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17962  015388  B0D8               	btfsc	status,0,c
 17963  01538A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17964  01538C                     l10611:
 17965                           
 17966                           ; BSR set to: 0
 17967  01538C  C066  F060         	movff	___awdiv@quotient,?___awdiv
 17968  015390  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 17969  015394  0012               	return	
 17970  015396                     __end_of___awdiv:
 17971                           	opt stack 0
 17972                           tblptru	equ	0xFF8
 17973                           tblptrh	equ	0xFF7
 17974                           tblptrl	equ	0xFF6
 17975                           tablat	equ	0xFF5
 17976                           prodh	equ	0xFF4
 17977                           prodl	equ	0xFF3
 17978                           intcon	equ	0xFF2
 17979                           intcon2	equ	0xFF1
 17980                           postinc0	equ	0xFEE
 17981                           wreg	equ	0xFE8
 17982                           indf1	equ	0xFE7
 17983                           postinc1	equ	0xFE6
 17984                           postdec1	equ	0xFE5
 17985                           fsr1h	equ	0xFE2
 17986                           fsr1l	equ	0xFE1
 17987                           indf2	equ	0xFDF
 17988                           postinc2	equ	0xFDE
 17989                           postdec2	equ	0xFDD
 17990                           plusw2	equ	0xFDB
 17991                           fsr2h	equ	0xFDA
 17992                           fsr2l	equ	0xFD9
 17993                           status	equ	0xFD8
 17994                           
 17995 ;; *************** function _I2C_LCD_init *****************
 17996 ;; Defined at:
 17997 ;;		line 211 in file "../My_library/My_ST7032.c"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;		None
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;  i               1    9[BANK0 ] unsigned char 
 18002 ;;  i               1    8[BANK0 ] unsigned char 
 18003 ;; Return value:  Size  Location     Type
 18004 ;;		None               void
 18005 ;; Registers used:
 18006 ;;		wreg, status,2, status,0, cstack
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18015 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;Total ram usage:        3 bytes
 18017 ;; Hardware stack levels used:    1
 18018 ;; Hardware stack levels required when called:   15
 18019 ;; This function calls:
 18020 ;;		_I2C_LCD_Clear
 18021 ;;		_I2C_LCD_Command
 18022 ;;		_I2C_init_old
 18023 ;; This function is called by:
 18024 ;;		_hardware_init
 18025 ;; This function uses a non-reentrant model
 18026 ;;
 18027                           
 18028                           	psect	text65
 18029  015992                     __ptext65:
 18030                           	opt stack 0
 18031  015992                     _I2C_LCD_init:
 18032                           	opt stack 14
 18033                           
 18034                           ;My_ST7032.c: 212: I2C_init_old();
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;incstack = 0
 18038  015992  EC50  F0B6         	call	_I2C_init_old	;wreg free
 18039                           
 18040                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
 18041  015996  0E00               	movlw	0
 18042  015998  0100               	movlb	0	; () banked
 18043  01599A  6F68               	movwf	I2C_LCD_init@i& (0+255),b
 18044  01599C                     l12193:
 18045                           
 18046                           ; BSR set to: 0
 18047  01599C  0E27               	movlw	39
 18048  01599E  0100               	movlb	0	; () banked
 18049  0159A0  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
 18050  0159A2  D001               	goto	l12197
 18051  0159A4  D00C               	goto	l12201
 18052  0159A6                     l12197:
 18053                           
 18054                           ; BSR set to: 0
 18055  0159A6  0E10               	movlw	16
 18056  0159A8  0100               	movlb	0	; () banked
 18057  0159AA  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18058  0159AC  0E94               	movlw	148
 18059  0159AE                     u15177:
 18060  0159AE  2EE8               	decfsz	wreg,f,c
 18061  0159B0  D7FE               	goto	u15177
 18062  0159B2  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18063  0159B4  D7FC               	goto	u15177
 18064  0159B6  D000               	nop2	
 18065  0159B8  0100               	movlb	0	; () banked
 18066  0159BA  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
 18067  0159BC  D7EF               	goto	l12193
 18068  0159BE                     l12201:
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
 18072  0159BE  0E38               	movlw	56
 18073  0159C0  EC0E  F0B4         	call	_I2C_LCD_Command
 18074                           
 18075                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
 18076  0159C4  0E39               	movlw	57
 18077  0159C6  EC0E  F0B4         	call	_I2C_LCD_Command
 18078                           
 18079                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
 18080  0159CA  0E14               	movlw	20
 18081  0159CC  EC0E  F0B4         	call	_I2C_LCD_Command
 18082                           
 18083                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
 18084  0159D0  0E70               	movlw	112
 18085  0159D2  EC0E  F0B4         	call	_I2C_LCD_Command
 18086                           
 18087                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
 18088  0159D6  0E56               	movlw	86
 18089  0159D8  EC0E  F0B4         	call	_I2C_LCD_Command
 18090                           
 18091                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
 18092  0159DC  0E6C               	movlw	108
 18093  0159DE  EC0E  F0B4         	call	_I2C_LCD_Command
 18094                           
 18095                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
 18096  0159E2  0E00               	movlw	0
 18097  0159E4  0100               	movlb	0	; () banked
 18098  0159E6  6F69               	movwf	I2C_LCD_init@i_4452& (0+255),b
 18099  0159E8                     l12205:
 18100                           
 18101                           ; BSR set to: 0
 18102  0159E8  0E27               	movlw	39
 18103  0159EA  0100               	movlb	0	; () banked
 18104  0159EC  6569               	cpfsgt	I2C_LCD_init@i_4452& (0+255),b
 18105  0159EE  D001               	goto	l12209
 18106  0159F0  D00C               	goto	l12213
 18107  0159F2                     l12209:
 18108                           
 18109                           ; BSR set to: 0
 18110  0159F2  0E10               	movlw	16
 18111  0159F4  0100               	movlb	0	; () banked
 18112  0159F6  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18113  0159F8  0E94               	movlw	148
 18114  0159FA                     u15187:
 18115  0159FA  2EE8               	decfsz	wreg,f,c
 18116  0159FC  D7FE               	goto	u15187
 18117  0159FE  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18118  015A00  D7FC               	goto	u15187
 18119  015A02  D000               	nop2	
 18120  015A04  0100               	movlb	0	; () banked
 18121  015A06  2B69               	incf	I2C_LCD_init@i_4452& (0+255),f,b
 18122  015A08  D7EF               	goto	l12205
 18123  015A0A                     l12213:
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
 18127  015A0A  0E38               	movlw	56
 18128  015A0C  EC0E  F0B4         	call	_I2C_LCD_Command
 18129                           
 18130                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
 18131  015A10  0E0C               	movlw	12
 18132  015A12  EC0E  F0B4         	call	_I2C_LCD_Command
 18133                           
 18134                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
 18135  015A16  0E06               	movlw	6
 18136  015A18  EC0E  F0B4         	call	_I2C_LCD_Command
 18137                           
 18138                           ;My_ST7032.c: 225: I2C_LCD_Clear();
 18139  015A1C  EC20  F0B6         	call	_I2C_LCD_Clear	;wreg free
 18140  015A20  0012               	return		;funcret
 18141  015A22                     __end_of_I2C_LCD_init:
 18142                           	opt stack 0
 18143                           tblptru	equ	0xFF8
 18144                           tblptrh	equ	0xFF7
 18145                           tblptrl	equ	0xFF6
 18146                           tablat	equ	0xFF5
 18147                           prodh	equ	0xFF4
 18148                           prodl	equ	0xFF3
 18149                           intcon	equ	0xFF2
 18150                           intcon2	equ	0xFF1
 18151                           postinc0	equ	0xFEE
 18152                           wreg	equ	0xFE8
 18153                           indf1	equ	0xFE7
 18154                           postinc1	equ	0xFE6
 18155                           postdec1	equ	0xFE5
 18156                           fsr1h	equ	0xFE2
 18157                           fsr1l	equ	0xFE1
 18158                           indf2	equ	0xFDF
 18159                           postinc2	equ	0xFDE
 18160                           postdec2	equ	0xFDD
 18161                           plusw2	equ	0xFDB
 18162                           fsr2h	equ	0xFDA
 18163                           fsr2l	equ	0xFD9
 18164                           status	equ	0xFD8
 18165                           
 18166 ;; *************** function _I2C_init_old *****************
 18167 ;; Defined at:
 18168 ;;		line 62 in file "../My_library/My_I2C.c"
 18169 ;; Parameters:    Size  Location     Type
 18170 ;;		None
 18171 ;; Auto vars:     Size  Location     Type
 18172 ;;		None
 18173 ;; Return value:  Size  Location     Type
 18174 ;;		None               void
 18175 ;; Registers used:
 18176 ;;		wreg, status,2
 18177 ;; Tracked objects:
 18178 ;;		On entry : 0/0
 18179 ;;		On exit  : 0/0
 18180 ;;		Unchanged: 0/0
 18181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18186 ;;Total ram usage:        0 bytes
 18187 ;; Hardware stack levels used:    1
 18188 ;; Hardware stack levels required when called:   11
 18189 ;; This function calls:
 18190 ;;		Nothing
 18191 ;; This function is called by:
 18192 ;;		_I2C_LCD_init
 18193 ;; This function uses a non-reentrant model
 18194 ;;
 18195                           
 18196                           	psect	text66
 18197  016CA0                     __ptext66:
 18198                           	opt stack 0
 18199  016CA0                     _I2C_init_old:
 18200                           	opt stack 17
 18201                           
 18202                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
 18203                           
 18204                           ;incstack = 0
 18205  016CA0  0E80               	movlw	128
 18206  016CA2  6EC7               	movwf	4039,c	;volatile
 18207                           
 18208                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
 18209  016CA4  0E28               	movlw	40
 18210  016CA6  6EC6               	movwf	4038,c	;volatile
 18211                           
 18212                           ;My_I2C.c: 65: SSP1ADD = 0x13;
 18213  016CA8  0E13               	movlw	19
 18214  016CAA  6EC8               	movwf	4040,c	;volatile
 18215                           
 18216                           ;My_I2C.c: 68: SSP1IF = 0;
 18217  016CAC  969E               	bcf	3998,3,c	;volatile
 18218                           
 18219                           ;My_I2C.c: 69: BCL1IF = 0;
 18220  016CAE  96A1               	bcf	4001,3,c	;volatile
 18221  016CB0  0012               	return		;funcret
 18222  016CB2                     __end_of_I2C_init_old:
 18223                           	opt stack 0
 18224                           tblptru	equ	0xFF8
 18225                           tblptrh	equ	0xFF7
 18226                           tblptrl	equ	0xFF6
 18227                           tablat	equ	0xFF5
 18228                           prodh	equ	0xFF4
 18229                           prodl	equ	0xFF3
 18230                           intcon	equ	0xFF2
 18231                           intcon2	equ	0xFF1
 18232                           postinc0	equ	0xFEE
 18233                           wreg	equ	0xFE8
 18234                           indf1	equ	0xFE7
 18235                           postinc1	equ	0xFE6
 18236                           postdec1	equ	0xFE5
 18237                           fsr1h	equ	0xFE2
 18238                           fsr1l	equ	0xFE1
 18239                           indf2	equ	0xFDF
 18240                           postinc2	equ	0xFDE
 18241                           postdec2	equ	0xFDD
 18242                           plusw2	equ	0xFDB
 18243                           fsr2h	equ	0xFDA
 18244                           fsr2l	equ	0xFD9
 18245                           status	equ	0xFD8
 18246                           
 18247 ;; *************** function _I2C_LCD_Clear *****************
 18248 ;; Defined at:
 18249 ;;		line 154 in file "../My_library/My_ST7032.c"
 18250 ;; Parameters:    Size  Location     Type
 18251 ;;		None
 18252 ;; Auto vars:     Size  Location     Type
 18253 ;;		None
 18254 ;; Return value:  Size  Location     Type
 18255 ;;		None               void
 18256 ;; Registers used:
 18257 ;;		wreg, status,2, status,0, cstack
 18258 ;; Tracked objects:
 18259 ;;		On entry : 0/0
 18260 ;;		On exit  : 0/0
 18261 ;;		Unchanged: 0/0
 18262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;Total ram usage:        1 bytes
 18268 ;; Hardware stack levels used:    1
 18269 ;; Hardware stack levels required when called:   14
 18270 ;; This function calls:
 18271 ;;		_I2C_LCD_Command
 18272 ;; This function is called by:
 18273 ;;		_I2C_LCD_init
 18274 ;;		_sleep_task
 18275 ;;		_bootload
 18276 ;;		_display_LCD
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text67
 18281  016C40                     __ptext67:
 18282                           	opt stack 0
 18283  016C40                     _I2C_LCD_Clear:
 18284                           	opt stack 13
 18285                           
 18286                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
 18287                           
 18288                           ;incstack = 0
 18289  016C40  0E01               	movlw	1
 18290  016C42  EC0E  F0B4         	call	_I2C_LCD_Command
 18291                           
 18292                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18293  016C46  0E12               	movlw	18
 18294  016C48  0100               	movlb	0	; () banked
 18295  016C4A  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18296  016C4C  0E23               	movlw	35
 18297  016C4E                     u15197:
 18298  016C4E  2EE8               	decfsz	wreg,f,c
 18299  016C50  D7FE               	goto	u15197
 18300  016C52  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18301  016C54  D7FC               	goto	u15197
 18302  016C56  F000               	nop	
 18303  016C58  0012               	return		;funcret
 18304  016C5A                     __end_of_I2C_LCD_Clear:
 18305                           	opt stack 0
 18306                           tblptru	equ	0xFF8
 18307                           tblptrh	equ	0xFF7
 18308                           tblptrl	equ	0xFF6
 18309                           tablat	equ	0xFF5
 18310                           prodh	equ	0xFF4
 18311                           prodl	equ	0xFF3
 18312                           intcon	equ	0xFF2
 18313                           intcon2	equ	0xFF1
 18314                           postinc0	equ	0xFEE
 18315                           wreg	equ	0xFE8
 18316                           indf1	equ	0xFE7
 18317                           postinc1	equ	0xFE6
 18318                           postdec1	equ	0xFE5
 18319                           fsr1h	equ	0xFE2
 18320                           fsr1l	equ	0xFE1
 18321                           indf2	equ	0xFDF
 18322                           postinc2	equ	0xFDE
 18323                           postdec2	equ	0xFDD
 18324                           plusw2	equ	0xFDB
 18325                           fsr2h	equ	0xFDA
 18326                           fsr2l	equ	0xFD9
 18327                           status	equ	0xFD8
 18328                           
 18329 ;; *************** function _I2C_LCD_Command *****************
 18330 ;; Defined at:
 18331 ;;		line 141 in file "../My_library/My_ST7032.c"
 18332 ;; Parameters:    Size  Location     Type
 18333 ;;  c               1    wreg     unsigned char 
 18334 ;; Auto vars:     Size  Location     Type
 18335 ;;  c               1    4[BANK0 ] unsigned char 
 18336 ;;  ans             1    5[BANK0 ] unsigned char 
 18337 ;; Return value:  Size  Location     Type
 18338 ;;		None               void
 18339 ;; Registers used:
 18340 ;;		wreg, status,2, status,0, cstack
 18341 ;; Tracked objects:
 18342 ;;		On entry : 0/0
 18343 ;;		On exit  : 0/0
 18344 ;;		Unchanged: 0/0
 18345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18350 ;;Total ram usage:        2 bytes
 18351 ;; Hardware stack levels used:    1
 18352 ;; Hardware stack levels required when called:   13
 18353 ;; This function calls:
 18354 ;;		_I2C_Send
 18355 ;;		_I2C_Start
 18356 ;;		_I2C_Stop
 18357 ;; This function is called by:
 18358 ;;		_I2C_LCD_Clear
 18359 ;;		_I2C_LCD_SetCursor
 18360 ;;		_I2C_LCD_init
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           	psect	text68
 18365  01681C                     __ptext68:
 18366                           	opt stack 0
 18367  01681C                     _I2C_LCD_Command:
 18368                           	opt stack 13
 18369                           
 18370                           ;incstack = 0
 18371                           ;I2C_LCD_Command@c stored from wreg
 18372  01681C  0100               	movlb	0	; () banked
 18373  01681E  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 18374                           
 18375                           ;My_ST7032.c: 142: uint8_t ans;
 18376                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 18377  016820  0E00               	movlw	0
 18378  016822  0100               	movlb	0	; () banked
 18379  016824  6F62               	movwf	I2C_Start@rw& (0+255),b
 18380  016826  0E3E               	movlw	62
 18381  016828  EC78  F0B4         	call	_I2C_Start
 18382  01682C  0100               	movlb	0	; () banked
 18383  01682E  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;My_ST7032.c: 145: if (ans == 0) {
 18387  016830  0100               	movlb	0	; () banked
 18388  016832  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 18389  016834  0100               	movlb	0	; () banked
 18390  016836  A4D8               	btfss	status,2,c
 18391  016838  D007               	goto	l1099
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 18395  01683A  0E80               	movlw	128
 18396  01683C  EC3A  F0B6         	call	_I2C_Send
 18397                           
 18398                           ;My_ST7032.c: 148: I2C_Send(c);
 18399  016840  0100               	movlb	0	; () banked
 18400  016842  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 18401  016844  EC3A  F0B6         	call	_I2C_Send
 18402  016848                     l1099:
 18403                           
 18404                           ;My_ST7032.c: 149: }
 18405                           ;My_ST7032.c: 150: I2C_Stop();
 18406  016848  EC59  F0B6         	call	_I2C_Stop	;wreg free
 18407                           
 18408                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 18409  01684C  0E68               	movlw	104
 18410  01684E                     u15207:
 18411  01684E  2EE8               	decfsz	wreg,f,c
 18412  016850  D7FE               	goto	u15207
 18413  016852  0012               	return		;funcret
 18414  016854                     __end_of_I2C_LCD_Command:
 18415                           	opt stack 0
 18416                           tblptru	equ	0xFF8
 18417                           tblptrh	equ	0xFF7
 18418                           tblptrl	equ	0xFF6
 18419                           tablat	equ	0xFF5
 18420                           prodh	equ	0xFF4
 18421                           prodl	equ	0xFF3
 18422                           intcon	equ	0xFF2
 18423                           intcon2	equ	0xFF1
 18424                           postinc0	equ	0xFEE
 18425                           wreg	equ	0xFE8
 18426                           indf1	equ	0xFE7
 18427                           postinc1	equ	0xFE6
 18428                           postdec1	equ	0xFE5
 18429                           fsr1h	equ	0xFE2
 18430                           fsr1l	equ	0xFE1
 18431                           indf2	equ	0xFDF
 18432                           postinc2	equ	0xFDE
 18433                           postdec2	equ	0xFDD
 18434                           plusw2	equ	0xFDB
 18435                           fsr2h	equ	0xFDA
 18436                           fsr2l	equ	0xFD9
 18437                           status	equ	0xFD8
 18438                           
 18439 ;; *************** function _I2C_Stop *****************
 18440 ;; Defined at:
 18441 ;;		line 96 in file "../My_library/My_I2C.c"
 18442 ;; Parameters:    Size  Location     Type
 18443 ;;		None
 18444 ;; Auto vars:     Size  Location     Type
 18445 ;;		None
 18446 ;; Return value:  Size  Location     Type
 18447 ;;		None               void
 18448 ;; Registers used:
 18449 ;;		wreg, status,2, status,0, cstack
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/0
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18459 ;;Total ram usage:        0 bytes
 18460 ;; Hardware stack levels used:    1
 18461 ;; Hardware stack levels required when called:   12
 18462 ;; This function calls:
 18463 ;;		_I2C_IdleCheck
 18464 ;; This function is called by:
 18465 ;;		_I2C_LCD_Command
 18466 ;;		_I2C_LCD_Puts
 18467 ;;		_I2C_LCD_Putc
 18468 ;;		_I2C_LCD_CreateChar
 18469 ;; This function uses a non-reentrant model
 18470 ;;
 18471                           
 18472                           	psect	text69
 18473  016CB2                     __ptext69:
 18474                           	opt stack 0
 18475  016CB2                     _I2C_Stop:
 18476                           	opt stack 13
 18477                           
 18478                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 18479                           
 18480                           ;incstack = 0
 18481  016CB2  0E05               	movlw	5
 18482  016CB4  ECE8  F0B5         	call	_I2C_IdleCheck
 18483                           
 18484                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 18485  016CB8  84C5               	bsf	4037,2,c	;volatile
 18486  016CBA  0012               	return		;funcret
 18487  016CBC                     __end_of_I2C_Stop:
 18488                           	opt stack 0
 18489                           tblptru	equ	0xFF8
 18490                           tblptrh	equ	0xFF7
 18491                           tblptrl	equ	0xFF6
 18492                           tablat	equ	0xFF5
 18493                           prodh	equ	0xFF4
 18494                           prodl	equ	0xFF3
 18495                           intcon	equ	0xFF2
 18496                           intcon2	equ	0xFF1
 18497                           postinc0	equ	0xFEE
 18498                           wreg	equ	0xFE8
 18499                           indf1	equ	0xFE7
 18500                           postinc1	equ	0xFE6
 18501                           postdec1	equ	0xFE5
 18502                           fsr1h	equ	0xFE2
 18503                           fsr1l	equ	0xFE1
 18504                           indf2	equ	0xFDF
 18505                           postinc2	equ	0xFDE
 18506                           postdec2	equ	0xFDD
 18507                           plusw2	equ	0xFDB
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function _I2C_Start *****************
 18513 ;; Defined at:
 18514 ;;		line 72 in file "../My_library/My_I2C.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;  adrs            1    wreg     unsigned char 
 18517 ;;  rw              1    2[BANK0 ] unsigned char 
 18518 ;; Auto vars:     Size  Location     Type
 18519 ;;  adrs            1    3[BANK0 ] unsigned char 
 18520 ;; Return value:  Size  Location     Type
 18521 ;;                  1    wreg      unsigned char 
 18522 ;; Registers used:
 18523 ;;		wreg, status,2, status,0, cstack
 18524 ;; Tracked objects:
 18525 ;;		On entry : 0/0
 18526 ;;		On exit  : 0/0
 18527 ;;		Unchanged: 0/0
 18528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18529 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18532 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18533 ;;Total ram usage:        2 bytes
 18534 ;; Hardware stack levels used:    1
 18535 ;; Hardware stack levels required when called:   12
 18536 ;; This function calls:
 18537 ;;		_I2C_IdleCheck
 18538 ;; This function is called by:
 18539 ;;		_I2C_LCD_Command
 18540 ;;		_I2C_LCD_Puts
 18541 ;;		_I2C_LCD_Putc
 18542 ;;		_I2C_LCD_CreateChar
 18543 ;; This function uses a non-reentrant model
 18544 ;;
 18545                           
 18546                           	psect	text70
 18547  0168F0                     __ptext70:
 18548                           	opt stack 0
 18549  0168F0                     _I2C_Start:
 18550                           	opt stack 13
 18551                           
 18552                           ;incstack = 0
 18553                           ;I2C_Start@adrs stored from wreg
 18554  0168F0  0100               	movlb	0	; () banked
 18555  0168F2  6F63               	movwf	I2C_Start@adrs& (0+255),b
 18556                           
 18557                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 18558  0168F4  0E05               	movlw	5
 18559  0168F6  ECE8  F0B5         	call	_I2C_IdleCheck
 18560                           
 18561                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 18562  0168FA  80C5               	bsf	4037,0,c	;volatile
 18563                           
 18564                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 18565  0168FC  0E05               	movlw	5
 18566  0168FE  ECE8  F0B5         	call	_I2C_IdleCheck
 18567                           
 18568                           ;My_I2C.c: 78: SSP1IF = 0;
 18569  016902  969E               	bcf	3998,3,c	;volatile
 18570                           
 18571                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 18572  016904  0100               	movlb	0	; () banked
 18573  016906  5163               	movf	I2C_Start@adrs& (0+255),w,b
 18574  016908  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 18575  01690A  0100               	movlb	0	; () banked
 18576  01690C  2562               	addwf	I2C_Start@rw& (0+255),w,b
 18577  01690E  6EC9               	movwf	4041,c	;volatile
 18578  016910                     l626:
 18579  016910  A69E               	btfss	3998,3,c	;volatile
 18580  016912  D7FE               	goto	l626
 18581                           
 18582                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 18583  016914  ACC5               	btfss	4037,6,c	;volatile
 18584  016916  D002               	goto	u11730
 18585  016918  0E01               	movlw	1
 18586  01691A  0012               	return	
 18587  01691C                     u11730:
 18588  01691C  0E00               	movlw	0
 18589  01691E  0012               	return	
 18590  016920                     __end_of_I2C_Start:
 18591                           	opt stack 0
 18592                           tblptru	equ	0xFF8
 18593                           tblptrh	equ	0xFF7
 18594                           tblptrl	equ	0xFF6
 18595                           tablat	equ	0xFF5
 18596                           prodh	equ	0xFF4
 18597                           prodl	equ	0xFF3
 18598                           intcon	equ	0xFF2
 18599                           intcon2	equ	0xFF1
 18600                           postinc0	equ	0xFEE
 18601                           wreg	equ	0xFE8
 18602                           indf1	equ	0xFE7
 18603                           postinc1	equ	0xFE6
 18604                           postdec1	equ	0xFE5
 18605                           fsr1h	equ	0xFE2
 18606                           fsr1l	equ	0xFE1
 18607                           indf2	equ	0xFDF
 18608                           postinc2	equ	0xFDE
 18609                           postdec2	equ	0xFDD
 18610                           plusw2	equ	0xFDB
 18611                           fsr2h	equ	0xFDA
 18612                           fsr2l	equ	0xFD9
 18613                           status	equ	0xFD8
 18614                           
 18615 ;; *************** function _I2C_Send *****************
 18616 ;; Defined at:
 18617 ;;		line 102 in file "../My_library/My_I2C.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;  data            1    wreg     unsigned char 
 18620 ;; Auto vars:     Size  Location     Type
 18621 ;;  data            1    2[BANK0 ] unsigned char 
 18622 ;; Return value:  Size  Location     Type
 18623 ;;                  1    wreg      unsigned char 
 18624 ;; Registers used:
 18625 ;;		wreg, status,2, status,0, cstack
 18626 ;; Tracked objects:
 18627 ;;		On entry : 0/0
 18628 ;;		On exit  : 0/0
 18629 ;;		Unchanged: 0/0
 18630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18635 ;;Total ram usage:        1 bytes
 18636 ;; Hardware stack levels used:    1
 18637 ;; Hardware stack levels required when called:   12
 18638 ;; This function calls:
 18639 ;;		_I2C_IdleCheck
 18640 ;; This function is called by:
 18641 ;;		_I2C_LCD_Command
 18642 ;;		_I2C_LCD_Puts
 18643 ;;		_I2C_LCD_Putc
 18644 ;;		_I2C_LCD_CreateChar
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           	psect	text71
 18649  016C74                     __ptext71:
 18650                           	opt stack 0
 18651  016C74                     _I2C_Send:
 18652                           	opt stack 13
 18653                           
 18654                           ;incstack = 0
 18655                           ;I2C_Send@data stored from wreg
 18656  016C74  0100               	movlb	0	; () banked
 18657  016C76  6F62               	movwf	I2C_Send@data& (0+255),b
 18658                           
 18659                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 18660  016C78  0E05               	movlw	5
 18661  016C7A  ECE8  F0B5         	call	_I2C_IdleCheck
 18662                           
 18663                           ;My_I2C.c: 104: SSP1IF = 0;
 18664  016C7E  969E               	bcf	3998,3,c	;volatile
 18665                           
 18666                           ;My_I2C.c: 105: SSP1BUF = data;
 18667  016C80  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 18668  016C84                     l641:
 18669  016C84  A69E               	btfss	3998,3,c	;volatile
 18670  016C86  D7FE               	goto	l641
 18671                           
 18672                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 18673                           ;	Return value of _I2C_Send is never used
 18674  016C88  50C5               	movf	4037,w,c	;volatile
 18675  016C8A  0012               	return	
 18676  016C8C                     __end_of_I2C_Send:
 18677                           	opt stack 0
 18678                           tblptru	equ	0xFF8
 18679                           tblptrh	equ	0xFF7
 18680                           tblptrl	equ	0xFF6
 18681                           tablat	equ	0xFF5
 18682                           prodh	equ	0xFF4
 18683                           prodl	equ	0xFF3
 18684                           intcon	equ	0xFF2
 18685                           intcon2	equ	0xFF1
 18686                           postinc0	equ	0xFEE
 18687                           wreg	equ	0xFE8
 18688                           indf1	equ	0xFE7
 18689                           postinc1	equ	0xFE6
 18690                           postdec1	equ	0xFE5
 18691                           fsr1h	equ	0xFE2
 18692                           fsr1l	equ	0xFE1
 18693                           indf2	equ	0xFDF
 18694                           postinc2	equ	0xFDE
 18695                           postdec2	equ	0xFDD
 18696                           plusw2	equ	0xFDB
 18697                           fsr2h	equ	0xFDA
 18698                           fsr2l	equ	0xFD9
 18699                           status	equ	0xFD8
 18700                           
 18701 ;; *************** function _I2C_IdleCheck *****************
 18702 ;; Defined at:
 18703 ;;		line 58 in file "../My_library/My_I2C.c"
 18704 ;; Parameters:    Size  Location     Type
 18705 ;;  mask            1    wreg     unsigned char 
 18706 ;; Auto vars:     Size  Location     Type
 18707 ;;  mask            1    1[BANK0 ] unsigned char 
 18708 ;; Return value:  Size  Location     Type
 18709 ;;		None               void
 18710 ;; Registers used:
 18711 ;;		wreg, status,2, status,0
 18712 ;; Tracked objects:
 18713 ;;		On entry : 0/0
 18714 ;;		On exit  : 0/0
 18715 ;;		Unchanged: 0/0
 18716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18718 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18721 ;;Total ram usage:        2 bytes
 18722 ;; Hardware stack levels used:    1
 18723 ;; Hardware stack levels required when called:   11
 18724 ;; This function calls:
 18725 ;;		Nothing
 18726 ;; This function is called by:
 18727 ;;		_I2C_Start
 18728 ;;		_I2C_Stop
 18729 ;;		_I2C_Send
 18730 ;;		_I2C_rStart
 18731 ;;		_I2C_Receive
 18732 ;; This function uses a non-reentrant model
 18733 ;;
 18734                           
 18735                           	psect	text72
 18736  016BD0                     __ptext72:
 18737                           	opt stack 0
 18738  016BD0                     _I2C_IdleCheck:
 18739                           	opt stack 13
 18740                           
 18741                           ;incstack = 0
 18742                           ;I2C_IdleCheck@mask stored from wreg
 18743  016BD0  0100               	movlb	0	; () banked
 18744  016BD2  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 18745  016BD4                     l10639:
 18746  016BD4  50C7               	movf	4039,w,c	;volatile
 18747  016BD6  0100               	movlb	0	; () banked
 18748  016BD8  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 18749  016BDA  0100               	movlb	0	; () banked
 18750  016BDC  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 18751  016BDE  50C5               	movf	4037,w,c	;volatile
 18752  016BE0  0B1F               	andlw	31
 18753  016BE2  0100               	movlb	0	; () banked
 18754  016BE4  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 18755  016BE6  0900               	iorlw	0
 18756  016BE8  B4D8               	btfsc	status,2,c
 18757  016BEA  0012               	return	
 18758  016BEC  D7F3               	goto	l10639
 18759  016BEE                     __end_of_I2C_IdleCheck:
 18760                           	opt stack 0
 18761                           tblptru	equ	0xFF8
 18762                           tblptrh	equ	0xFF7
 18763                           tblptrl	equ	0xFF6
 18764                           tablat	equ	0xFF5
 18765                           prodh	equ	0xFF4
 18766                           prodl	equ	0xFF3
 18767                           intcon	equ	0xFF2
 18768                           intcon2	equ	0xFF1
 18769                           postinc0	equ	0xFEE
 18770                           wreg	equ	0xFE8
 18771                           indf1	equ	0xFE7
 18772                           postinc1	equ	0xFE6
 18773                           postdec1	equ	0xFE5
 18774                           fsr1h	equ	0xFE2
 18775                           fsr1l	equ	0xFE1
 18776                           indf2	equ	0xFDF
 18777                           postinc2	equ	0xFDE
 18778                           postdec2	equ	0xFDD
 18779                           plusw2	equ	0xFDB
 18780                           fsr2h	equ	0xFDA
 18781                           fsr2l	equ	0xFD9
 18782                           status	equ	0xFD8
 18783                           
 18784 ;; *************** function _CTMU_init *****************
 18785 ;; Defined at:
 18786 ;;		line 169 in file "../My_library/My_PIC.c"
 18787 ;; Parameters:    Size  Location     Type
 18788 ;;		None
 18789 ;; Auto vars:     Size  Location     Type
 18790 ;;		None
 18791 ;; Return value:  Size  Location     Type
 18792 ;;		None               void
 18793 ;; Registers used:
 18794 ;;		wreg, status,2
 18795 ;; Tracked objects:
 18796 ;;		On entry : 0/0
 18797 ;;		On exit  : 0/0
 18798 ;;		Unchanged: 0/0
 18799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18804 ;;Total ram usage:        0 bytes
 18805 ;; Hardware stack levels used:    1
 18806 ;; Hardware stack levels required when called:   11
 18807 ;; This function calls:
 18808 ;;		Nothing
 18809 ;; This function is called by:
 18810 ;;		_hardware_init
 18811 ;; This function uses a non-reentrant model
 18812 ;;
 18813                           
 18814                           	psect	text73
 18815  016AD6                     __ptext73:
 18816                           	opt stack 0
 18817  016AD6                     _CTMU_init:
 18818                           	opt stack 18
 18819                           
 18820                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;incstack = 0
 18824  016AD6  0E00               	movlw	0
 18825  016AD8  6EB3               	movwf	4019,c	;volatile
 18826                           
 18827                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 18828  016ADA  0E90               	movlw	144
 18829  016ADC  6EB2               	movwf	4018,c	;volatile
 18830                           
 18831                           ;My_PIC.c: 172: CTMUICON = 0x01;
 18832  016ADE  0E01               	movlw	1
 18833  016AE0  6EB1               	movwf	4017,c	;volatile
 18834                           
 18835                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 18836  016AE2  8EC1               	bsf	4033,7,c	;volatile
 18837                           
 18838                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 18839  016AE4  9CC1               	bcf	4033,6,c	;volatile
 18840                           
 18841                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 18842  016AE6  50C1               	movf	4033,w,c	;volatile
 18843  016AE8  0BC7               	andlw	-57
 18844  016AEA  0908               	iorlw	8
 18845  016AEC  6EC1               	movwf	4033,c	;volatile
 18846                           
 18847                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 18848  016AEE  50C1               	movf	4033,w,c	;volatile
 18849  016AF0  0BF8               	andlw	-8
 18850  016AF2  0906               	iorlw	6
 18851  016AF4  6EC1               	movwf	4033,c	;volatile
 18852                           
 18853                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 18854  016AF6  9CC2               	bcf	4034,6,c	;volatile
 18855                           
 18856                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 18857  016AF8  9EC2               	bcf	4034,7,c	;volatile
 18858                           
 18859                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 18860  016AFA  80C2               	bsf	4034,0,c	;volatile
 18861  016AFC  0012               	return		;funcret
 18862  016AFE                     __end_of_CTMU_init:
 18863                           	opt stack 0
 18864                           tblptru	equ	0xFF8
 18865                           tblptrh	equ	0xFF7
 18866                           tblptrl	equ	0xFF6
 18867                           tablat	equ	0xFF5
 18868                           prodh	equ	0xFF4
 18869                           prodl	equ	0xFF3
 18870                           intcon	equ	0xFF2
 18871                           intcon2	equ	0xFF1
 18872                           postinc0	equ	0xFEE
 18873                           wreg	equ	0xFE8
 18874                           indf1	equ	0xFE7
 18875                           postinc1	equ	0xFE6
 18876                           postdec1	equ	0xFE5
 18877                           fsr1h	equ	0xFE2
 18878                           fsr1l	equ	0xFE1
 18879                           indf2	equ	0xFDF
 18880                           postinc2	equ	0xFDE
 18881                           postdec2	equ	0xFDD
 18882                           plusw2	equ	0xFDB
 18883                           fsr2h	equ	0xFDA
 18884                           fsr2l	equ	0xFD9
 18885                           status	equ	0xFD8
 18886                           
 18887 ;; *************** function _ADC_init *****************
 18888 ;; Defined at:
 18889 ;;		line 133 in file "../My_library/My_PIC.c"
 18890 ;; Parameters:    Size  Location     Type
 18891 ;;  p_ref           1    wreg     unsigned char 
 18892 ;; Auto vars:     Size  Location     Type
 18893 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18894 ;; Return value:  Size  Location     Type
 18895 ;;		None               void
 18896 ;; Registers used:
 18897 ;;		wreg, status,2
 18898 ;; Tracked objects:
 18899 ;;		On entry : 0/0
 18900 ;;		On exit  : 0/0
 18901 ;;		Unchanged: 0/0
 18902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18907 ;;Total ram usage:        1 bytes
 18908 ;; Hardware stack levels used:    1
 18909 ;; Hardware stack levels required when called:   11
 18910 ;; This function calls:
 18911 ;;		Nothing
 18912 ;; This function is called by:
 18913 ;;		_hardware_init
 18914 ;; This function uses a non-reentrant model
 18915 ;;
 18916                           
 18917                           	psect	text74
 18918  016B70                     __ptext74:
 18919                           	opt stack 0
 18920  016B70                     _ADC_init:
 18921                           	opt stack 18
 18922                           
 18923                           ;incstack = 0
 18924                           ;ADC_init@p_ref stored from wreg
 18925  016B70  0100               	movlb	0	; () banked
 18926  016B72  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18927                           
 18928                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 18929  016B74  9EC2               	bcf	4034,7,c	;volatile
 18930                           
 18931                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 18932  016B76  0100               	movlb	0	; () banked
 18933  016B78  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18934  016B7A  D002               	bra	u13785
 18935  016B7C  9CC2               	bcf	4034,6,c	;volatile
 18936  016B7E  D001               	bra	u13786
 18937  016B80                     u13785:
 18938  016B80  8CC2               	bsf	4034,6,c	;volatile
 18939  016B82                     u13786:
 18940                           
 18941                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 18942  016B82  8EC1               	bsf	4033,7,c	;volatile
 18943                           
 18944                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 18945  016B84  9CC1               	bcf	4033,6,c	;volatile
 18946                           
 18947                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 18948  016B86  50C1               	movf	4033,w,c	;volatile
 18949  016B88  0BF8               	andlw	-8
 18950  016B8A  0906               	iorlw	6
 18951  016B8C  6EC1               	movwf	4033,c	;volatile
 18952  016B8E  0012               	return		;funcret
 18953  016B90                     __end_of_ADC_init:
 18954                           	opt stack 0
 18955                           tblptru	equ	0xFF8
 18956                           tblptrh	equ	0xFF7
 18957                           tblptrl	equ	0xFF6
 18958                           tablat	equ	0xFF5
 18959                           prodh	equ	0xFF4
 18960                           prodl	equ	0xFF3
 18961                           intcon	equ	0xFF2
 18962                           intcon2	equ	0xFF1
 18963                           postinc0	equ	0xFEE
 18964                           wreg	equ	0xFE8
 18965                           indf1	equ	0xFE7
 18966                           postinc1	equ	0xFE6
 18967                           postdec1	equ	0xFE5
 18968                           fsr1h	equ	0xFE2
 18969                           fsr1l	equ	0xFE1
 18970                           indf2	equ	0xFDF
 18971                           postinc2	equ	0xFDE
 18972                           postdec2	equ	0xFDD
 18973                           plusw2	equ	0xFDB
 18974                           fsr2h	equ	0xFDA
 18975                           fsr2l	equ	0xFD9
 18976                           status	equ	0xFD8
 18977                           
 18978 ;; *************** function _ctmu_task *****************
 18979 ;; Defined at:
 18980 ;;		line 29 in file "ctmu.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;		None
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;		None
 18985 ;; Return value:  Size  Location     Type
 18986 ;;		None               void
 18987 ;; Registers used:
 18988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18998 ;;Total ram usage:        0 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; Hardware stack levels required when called:   14
 19001 ;; This function calls:
 19002 ;;		_ctmu_sampling
 19003 ;; This function is called by:
 19004 ;;		_main
 19005 ;; This function uses a non-reentrant model
 19006 ;;
 19007                           
 19008                           	psect	text75
 19009  016C8C                     __ptext75:
 19010                           	opt stack 0
 19011  016C8C                     _ctmu_task:
 19012                           	opt stack 16
 19013                           
 19014                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 19015                           
 19016                           ;incstack = 0
 19017  016C8C  0101               	movlb	1	; () banked
 19018  016C8E  5125               	movf	_ctmu_sampling_flag& (0+255),w,b
 19019  016C90  B4D8               	btfsc	status,2,c
 19020  016C92  0012               	return	
 19021                           
 19022                           ; BSR set to: 1
 19023                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 19024  016C94  0E00               	movlw	0
 19025  016C96  0101               	movlb	1	; () banked
 19026  016C98  6F25               	movwf	_ctmu_sampling_flag& (0+255),b
 19027                           
 19028                           ; BSR set to: 1
 19029                           ;ctmu.c: 32: ctmu_sampling();
 19030  016C9A  ECB6  F09E         	call	_ctmu_sampling	;wreg free
 19031  016C9E  0012               	return	
 19032  016CA0                     __end_of_ctmu_task:
 19033                           	opt stack 0
 19034                           tblptru	equ	0xFF8
 19035                           tblptrh	equ	0xFF7
 19036                           tblptrl	equ	0xFF6
 19037                           tablat	equ	0xFF5
 19038                           prodh	equ	0xFF4
 19039                           prodl	equ	0xFF3
 19040                           intcon	equ	0xFF2
 19041                           intcon2	equ	0xFF1
 19042                           postinc0	equ	0xFEE
 19043                           wreg	equ	0xFE8
 19044                           indf1	equ	0xFE7
 19045                           postinc1	equ	0xFE6
 19046                           postdec1	equ	0xFE5
 19047                           fsr1h	equ	0xFE2
 19048                           fsr1l	equ	0xFE1
 19049                           indf2	equ	0xFDF
 19050                           postinc2	equ	0xFDE
 19051                           postdec2	equ	0xFDD
 19052                           plusw2	equ	0xFDB
 19053                           fsr2h	equ	0xFDA
 19054                           fsr2l	equ	0xFD9
 19055                           status	equ	0xFD8
 19056                           
 19057 ;; *************** function _ctmu_sampling *****************
 19058 ;; Defined at:
 19059 ;;		line 22 in file "ctmu.c"
 19060 ;; Parameters:    Size  Location     Type
 19061 ;;		None
 19062 ;; Auto vars:     Size  Location     Type
 19063 ;;		None
 19064 ;; Return value:  Size  Location     Type
 19065 ;;		None               void
 19066 ;; Registers used:
 19067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19068 ;; Tracked objects:
 19069 ;;		On entry : 0/0
 19070 ;;		On exit  : 0/0
 19071 ;;		Unchanged: 0/0
 19072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19077 ;;Total ram usage:        0 bytes
 19078 ;; Hardware stack levels used:    1
 19079 ;; Hardware stack levels required when called:   13
 19080 ;; This function calls:
 19081 ;;		_CTMU_read
 19082 ;;		___lwdiv
 19083 ;;		_button_timer_interrupt
 19084 ;; This function is called by:
 19085 ;;		_ctmu_task
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089                           	psect	text76
 19090  013D6C                     __ptext76:
 19091                           	opt stack 0
 19092  013D6C                     _ctmu_sampling:
 19093                           	opt stack 16
 19094                           
 19095                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 19096                           
 19097                           ;incstack = 0
 19098  013D6C  0E35               	movlw	low _port
 19099  013D6E  0100               	movlb	0	; () banked
 19100  013D70  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19101  013D72  0E01               	movlw	high _port
 19102  013D74  0100               	movlb	0	; () banked
 19103  013D76  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19104  013D78  0E00               	movlw	0
 19105  013D7A  ECAB  F0A8         	call	_CTMU_read
 19106  013D7E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19107  013D82  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19108  013D86  C139  F07E         	movff	_port+4,___lwdiv@divisor
 19109  013D8A  C13A  F07F         	movff	_port+5,___lwdiv@divisor+1
 19110  013D8E  EC39  F0AF         	call	___lwdiv	;wreg free
 19111  013D92  0100               	movlb	0	; () banked
 19112  013D94  517C               	movf	?___lwdiv& (0+255),w,b
 19113  013D96  0100               	movlb	0	; () banked
 19114  013D98  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19115  013D9A  A4D8               	btfss	status,2,c
 19116  013D9C  D002               	goto	u14430
 19117  013D9E  0E01               	movlw	1
 19118  013DA0  D001               	goto	u14440
 19119  013DA2                     u14430:
 19120  013DA2  0E00               	movlw	0
 19121  013DA4                     u14440:
 19122  013DA4  0100               	movlb	0	; () banked
 19123  013DA6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19124  013DA8  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19125                           
 19126                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19127  013DAC  0E4C               	movlw	low (_port+23)
 19128  013DAE  0100               	movlb	0	; () banked
 19129  013DB0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19130  013DB2  0E01               	movlw	high (_port+23)
 19131  013DB4  0100               	movlb	0	; () banked
 19132  013DB6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19133  013DB8  0E01               	movlw	1
 19134  013DBA  ECAB  F0A8         	call	_CTMU_read
 19135  013DBE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19136  013DC2  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19137  013DC6  C150  F07E         	movff	_port+27,___lwdiv@divisor
 19138  013DCA  C151  F07F         	movff	_port+28,___lwdiv@divisor+1
 19139  013DCE  EC39  F0AF         	call	___lwdiv	;wreg free
 19140  013DD2  0100               	movlb	0	; () banked
 19141  013DD4  517C               	movf	?___lwdiv& (0+255),w,b
 19142  013DD6  0100               	movlb	0	; () banked
 19143  013DD8  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19144  013DDA  A4D8               	btfss	status,2,c
 19145  013DDC  D002               	goto	u14450
 19146  013DDE  0E01               	movlw	1
 19147  013DE0  D001               	goto	u14460
 19148  013DE2                     u14450:
 19149  013DE2  0E00               	movlw	0
 19150  013DE4                     u14460:
 19151  013DE4  0100               	movlb	0	; () banked
 19152  013DE6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19153  013DE8  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19154                           
 19155                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19156  013DEC  0E63               	movlw	low (_port+46)
 19157  013DEE  0100               	movlb	0	; () banked
 19158  013DF0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19159  013DF2  0E01               	movlw	high (_port+46)
 19160  013DF4  0100               	movlb	0	; () banked
 19161  013DF6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19162  013DF8  0E02               	movlw	2
 19163  013DFA  ECAB  F0A8         	call	_CTMU_read
 19164  013DFE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19165  013E02  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19166  013E06  C167  F07E         	movff	_port+50,___lwdiv@divisor
 19167  013E0A  C168  F07F         	movff	_port+51,___lwdiv@divisor+1
 19168  013E0E  EC39  F0AF         	call	___lwdiv	;wreg free
 19169  013E12  0100               	movlb	0	; () banked
 19170  013E14  517C               	movf	?___lwdiv& (0+255),w,b
 19171  013E16  0100               	movlb	0	; () banked
 19172  013E18  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19173  013E1A  A4D8               	btfss	status,2,c
 19174  013E1C  D002               	goto	u14470
 19175  013E1E  0E01               	movlw	1
 19176  013E20  D001               	goto	u14480
 19177  013E22                     u14470:
 19178  013E22  0E00               	movlw	0
 19179  013E24                     u14480:
 19180  013E24  0100               	movlb	0	; () banked
 19181  013E26  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19182  013E28  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19183                           
 19184                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19185  013E2C  0EFC               	movlw	low _ctmu_m
 19186  013E2E  0100               	movlb	0	; () banked
 19187  013E30  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19188  013E32  0E00               	movlw	high _ctmu_m
 19189  013E34  0100               	movlb	0	; () banked
 19190  013E36  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19191  013E38  0E03               	movlw	3
 19192  013E3A  ECAB  F0A8         	call	_CTMU_read
 19193  013E3E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19194  013E42  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19195  013E46  C115  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19196  013E4A  C116  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19197  013E4E  EC39  F0AF         	call	___lwdiv	;wreg free
 19198  013E52  0100               	movlb	0	; () banked
 19199  013E54  517C               	movf	?___lwdiv& (0+255),w,b
 19200  013E56  0100               	movlb	0	; () banked
 19201  013E58  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19202  013E5A  A4D8               	btfss	status,2,c
 19203  013E5C  D002               	goto	u14490
 19204  013E5E  0E01               	movlw	1
 19205  013E60  D001               	goto	u14500
 19206  013E62                     u14490:
 19207  013E62  0E00               	movlw	0
 19208  013E64                     u14500:
 19209  013E64  0100               	movlb	0	; () banked
 19210  013E66  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19211  013E68  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19212  013E6C  0012               	return		;funcret
 19213  013E6E                     __end_of_ctmu_sampling:
 19214                           	opt stack 0
 19215                           tblptru	equ	0xFF8
 19216                           tblptrh	equ	0xFF7
 19217                           tblptrl	equ	0xFF6
 19218                           tablat	equ	0xFF5
 19219                           prodh	equ	0xFF4
 19220                           prodl	equ	0xFF3
 19221                           intcon	equ	0xFF2
 19222                           intcon2	equ	0xFF1
 19223                           postinc0	equ	0xFEE
 19224                           wreg	equ	0xFE8
 19225                           indf1	equ	0xFE7
 19226                           postinc1	equ	0xFE6
 19227                           postdec1	equ	0xFE5
 19228                           fsr1h	equ	0xFE2
 19229                           fsr1l	equ	0xFE1
 19230                           indf2	equ	0xFDF
 19231                           postinc2	equ	0xFDE
 19232                           postdec2	equ	0xFDD
 19233                           plusw2	equ	0xFDB
 19234                           fsr2h	equ	0xFDA
 19235                           fsr2l	equ	0xFD9
 19236                           status	equ	0xFD8
 19237                           
 19238 ;; *************** function _button_timer_interrupt *****************
 19239 ;; Defined at:
 19240 ;;		line 3 in file "../My_library/My_button.c"
 19241 ;; Parameters:    Size  Location     Type
 19242 ;;  bt              2   35[BANK0 ] PTR struct button
 19243 ;;		 -> ctmu_m(4), port(69), 
 19244 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19245 ;; Auto vars:     Size  Location     Type
 19246 ;;		None
 19247 ;; Return value:  Size  Location     Type
 19248 ;;		None               void
 19249 ;; Registers used:
 19250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19251 ;; Tracked objects:
 19252 ;;		On entry : 0/0
 19253 ;;		On exit  : 0/0
 19254 ;;		Unchanged: 0/0
 19255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19256 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19258 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19259 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19260 ;;Total ram usage:        5 bytes
 19261 ;; Hardware stack levels used:    1
 19262 ;; Hardware stack levels required when called:   11
 19263 ;; This function calls:
 19264 ;;		Nothing
 19265 ;; This function is called by:
 19266 ;;		_ctmu_sampling
 19267 ;; This function uses a non-reentrant model
 19268 ;;
 19269                           
 19270                           	psect	text77
 19271  0110F6                     __ptext77:
 19272                           	opt stack 0
 19273  0110F6                     _button_timer_interrupt:
 19274                           	opt stack 17
 19275                           
 19276                           ;My_button.c: 4: if (sw_value) {
 19277                           
 19278                           ;incstack = 0
 19279  0110F6  0100               	movlb	0	; () banked
 19280  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19281  0110FA  0100               	movlb	0	; () banked
 19282  0110FC  B4D8               	btfsc	status,2,c
 19283  0110FE  D0A8               	goto	l8449
 19284                           
 19285                           ; BSR set to: 0
 19286                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19287  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19288  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19289  011108  0E84               	movlw	132
 19290  01110A  18DE               	xorwf	postinc2,w,c
 19291  01110C  E10D               	bnz	l525
 19292  01110E  0E03               	movlw	3
 19293  011110  18DE               	xorwf	postinc2,w,c
 19294  011112  A4D8               	btfss	status,2,c
 19295  011114  D009               	goto	l525
 19296                           
 19297                           ; BSR set to: 0
 19298  011116  0100               	movlb	0	; () banked
 19299  011118  EE20 F003          	lfsr	2,3
 19300  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19301  01111E  26D9               	addwf	fsr2l,f,c
 19302  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19303  011122  22DA               	addwfc	fsr2h,f,c
 19304  011124  0100               	movlb	0	; () banked
 19305  011126  8EDF               	bsf	indf2,7,c
 19306  011128                     l525:
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19310  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19311  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19312  011130  0EBC               	movlw	188
 19313  011132  18DE               	xorwf	postinc2,w,c
 19314  011134  E10D               	bnz	l526
 19315  011136  0E02               	movlw	2
 19316  011138  18DE               	xorwf	postinc2,w,c
 19317  01113A  A4D8               	btfss	status,2,c
 19318  01113C  D009               	goto	l526
 19319                           
 19320                           ; BSR set to: 0
 19321  01113E  0100               	movlb	0	; () banked
 19322  011140  EE20 F003          	lfsr	2,3
 19323  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19324  011146  26D9               	addwf	fsr2l,f,c
 19325  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19326  01114A  22DA               	addwfc	fsr2h,f,c
 19327  01114C  0100               	movlb	0	; () banked
 19328  01114E  8CDF               	bsf	indf2,6,c
 19329  011150                     l526:
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19333  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19334  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19335  011158  0EF4               	movlw	244
 19336  01115A  18DE               	xorwf	postinc2,w,c
 19337  01115C  E10C               	bnz	l527
 19338  01115E  04DE               	decf	postinc2,w,c
 19339  011160  A4D8               	btfss	status,2,c
 19340  011162  D009               	goto	l527
 19341                           
 19342                           ; BSR set to: 0
 19343  011164  0100               	movlb	0	; () banked
 19344  011166  EE20 F003          	lfsr	2,3
 19345  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19346  01116C  26D9               	addwf	fsr2l,f,c
 19347  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19348  011170  22DA               	addwfc	fsr2h,f,c
 19349  011172  0100               	movlb	0	; () banked
 19350  011174  8ADF               	bsf	indf2,5,c
 19351  011176                     l527:
 19352                           
 19353                           ; BSR set to: 0
 19354                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19355  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19356  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19357  01117E  0E2C               	movlw	44
 19358  011180  18DE               	xorwf	postinc2,w,c
 19359  011182  E10C               	bnz	l528
 19360  011184  04DE               	decf	postinc2,w,c
 19361  011186  A4D8               	btfss	status,2,c
 19362  011188  D009               	goto	l528
 19363                           
 19364                           ; BSR set to: 0
 19365  01118A  0100               	movlb	0	; () banked
 19366  01118C  EE20 F003          	lfsr	2,3
 19367  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19368  011192  26D9               	addwf	fsr2l,f,c
 19369  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19370  011196  22DA               	addwfc	fsr2h,f,c
 19371  011198  0100               	movlb	0	; () banked
 19372  01119A  88DF               	bsf	indf2,4,c
 19373  01119C                     l528:
 19374                           
 19375                           ; BSR set to: 0
 19376                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19377  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19378  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19379  0111A4  0E96               	movlw	150
 19380  0111A6  18DE               	xorwf	postinc2,w,c
 19381  0111A8  10DE               	iorwf	postinc2,w,c
 19382  0111AA  A4D8               	btfss	status,2,c
 19383  0111AC  D009               	goto	l529
 19384                           
 19385                           ; BSR set to: 0
 19386  0111AE  0100               	movlb	0	; () banked
 19387  0111B0  EE20 F003          	lfsr	2,3
 19388  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19389  0111B6  26D9               	addwf	fsr2l,f,c
 19390  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19391  0111BA  22DA               	addwfc	fsr2h,f,c
 19392  0111BC  0100               	movlb	0	; () banked
 19393  0111BE  86DF               	bsf	indf2,3,c
 19394  0111C0                     l529:
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19398  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19399  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19400  0111C8  0E3C               	movlw	60
 19401  0111CA  18DE               	xorwf	postinc2,w,c
 19402  0111CC  10DE               	iorwf	postinc2,w,c
 19403  0111CE  A4D8               	btfss	status,2,c
 19404  0111D0  D009               	goto	l530
 19405                           
 19406                           ; BSR set to: 0
 19407  0111D2  0100               	movlb	0	; () banked
 19408  0111D4  EE20 F003          	lfsr	2,3
 19409  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19410  0111DA  26D9               	addwf	fsr2l,f,c
 19411  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19412  0111DE  22DA               	addwfc	fsr2h,f,c
 19413  0111E0  0100               	movlb	0	; () banked
 19414  0111E2  84DF               	bsf	indf2,2,c
 19415  0111E4                     l530:
 19416                           
 19417                           ; BSR set to: 0
 19418                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19419  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19420  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19421  0111EC  0E10               	movlw	16
 19422  0111EE  18DE               	xorwf	postinc2,w,c
 19423  0111F0  10DE               	iorwf	postinc2,w,c
 19424  0111F2  A4D8               	btfss	status,2,c
 19425  0111F4  D009               	goto	l531
 19426                           
 19427                           ; BSR set to: 0
 19428  0111F6  0100               	movlb	0	; () banked
 19429  0111F8  EE20 F003          	lfsr	2,3
 19430  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19431  0111FE  26D9               	addwf	fsr2l,f,c
 19432  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19433  011202  22DA               	addwfc	fsr2h,f,c
 19434  011204  0100               	movlb	0	; () banked
 19435  011206  82DF               	bsf	indf2,1,c
 19436  011208                     l531:
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19440  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19441  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19442  011210  0E02               	movlw	2
 19443  011212  18DE               	xorwf	postinc2,w,c
 19444  011214  10DE               	iorwf	postinc2,w,c
 19445  011216  A4D8               	btfss	status,2,c
 19446  011218  D009               	goto	l532
 19447                           
 19448                           ; BSR set to: 0
 19449  01121A  0100               	movlb	0	; () banked
 19450  01121C  EE20 F003          	lfsr	2,3
 19451  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19452  011222  26D9               	addwf	fsr2l,f,c
 19453  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19454  011226  22DA               	addwfc	fsr2h,f,c
 19455  011228  0100               	movlb	0	; () banked
 19456  01122A  80DF               	bsf	indf2,0,c
 19457  01122C                     l532:
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19461  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19462  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19463  011234  0E85               	movlw	133
 19464  011236  5CDE               	subwf	postinc2,w,c
 19465  011238  0E03               	movlw	3
 19466  01123A  58DE               	subwfb	postinc2,w,c
 19467  01123C  B0D8               	btfsc	status,0,c
 19468  01123E  0012               	return	
 19469                           
 19470                           ; BSR set to: 0
 19471  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19472  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19473  011248  2ADE               	incf	postinc2,f,c
 19474  01124A  0E00               	movlw	0
 19475  01124C  22DD               	addwfc	postdec2,f,c
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;My_button.c: 14: } else {
 19479  01124E  0012               	return	
 19480  011250                     l8449:
 19481                           
 19482                           ; BSR set to: 0
 19483                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19484  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19485  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19486  011258  0E84               	movlw	132
 19487  01125A  5CDE               	subwf	postinc2,w,c
 19488  01125C  0E03               	movlw	3
 19489  01125E  58DE               	subwfb	postinc2,w,c
 19490  011260  A0D8               	btfss	status,0,c
 19491  011262  D00A               	goto	l8453
 19492                           
 19493                           ; BSR set to: 0
 19494  011264  0100               	movlb	0	; () banked
 19495  011266  EE20 F002          	lfsr	2,2
 19496  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19497  01126C  26D9               	addwf	fsr2l,f,c
 19498  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19499  011270  22DA               	addwfc	fsr2h,f,c
 19500  011272  0100               	movlb	0	; () banked
 19501  011274  8EDF               	bsf	indf2,7,c
 19502  011276  D08F               	goto	l8481
 19503  011278                     l8453:
 19504                           
 19505                           ; BSR set to: 0
 19506                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19507  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19508  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19509  011280  0EBC               	movlw	188
 19510  011282  5CDE               	subwf	postinc2,w,c
 19511  011284  0E02               	movlw	2
 19512  011286  58DE               	subwfb	postinc2,w,c
 19513  011288  A0D8               	btfss	status,0,c
 19514  01128A  D00A               	goto	l8457
 19515                           
 19516                           ; BSR set to: 0
 19517  01128C  0100               	movlb	0	; () banked
 19518  01128E  EE20 F002          	lfsr	2,2
 19519  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19520  011294  26D9               	addwf	fsr2l,f,c
 19521  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19522  011298  22DA               	addwfc	fsr2h,f,c
 19523  01129A  0100               	movlb	0	; () banked
 19524  01129C  8CDF               	bsf	indf2,6,c
 19525  01129E  D07B               	goto	l8481
 19526  0112A0                     l8457:
 19527                           
 19528                           ; BSR set to: 0
 19529                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19530  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19531  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19532  0112A8  0EF4               	movlw	244
 19533  0112AA  5CDE               	subwf	postinc2,w,c
 19534  0112AC  0E01               	movlw	1
 19535  0112AE  58DE               	subwfb	postinc2,w,c
 19536  0112B0  A0D8               	btfss	status,0,c
 19537  0112B2  D00A               	goto	l8461
 19538                           
 19539                           ; BSR set to: 0
 19540  0112B4  0100               	movlb	0	; () banked
 19541  0112B6  EE20 F002          	lfsr	2,2
 19542  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19543  0112BC  26D9               	addwf	fsr2l,f,c
 19544  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19545  0112C0  22DA               	addwfc	fsr2h,f,c
 19546  0112C2  0100               	movlb	0	; () banked
 19547  0112C4  8ADF               	bsf	indf2,5,c
 19548  0112C6  D067               	goto	l8481
 19549  0112C8                     l8461:
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19553  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19554  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19555  0112D0  0E2C               	movlw	44
 19556  0112D2  5CDE               	subwf	postinc2,w,c
 19557  0112D4  0E01               	movlw	1
 19558  0112D6  58DE               	subwfb	postinc2,w,c
 19559  0112D8  A0D8               	btfss	status,0,c
 19560  0112DA  D00A               	goto	l8465
 19561                           
 19562                           ; BSR set to: 0
 19563  0112DC  0100               	movlb	0	; () banked
 19564  0112DE  EE20 F002          	lfsr	2,2
 19565  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19566  0112E4  26D9               	addwf	fsr2l,f,c
 19567  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19568  0112E8  22DA               	addwfc	fsr2h,f,c
 19569  0112EA  0100               	movlb	0	; () banked
 19570  0112EC  88DF               	bsf	indf2,4,c
 19571  0112EE  D053               	goto	l8481
 19572  0112F0                     l8465:
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19576  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19577  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19578  0112F8  0E01               	movlw	1
 19579  0112FA  50DB               	movf	plusw2,w,c
 19580  0112FC  E104               	bnz	u8460
 19581  0112FE  0E96               	movlw	150
 19582  011300  5CDE               	subwf	postinc2,w,c
 19583  011302  A0D8               	btfss	status,0,c
 19584  011304  D00A               	goto	l8469
 19585  011306                     u8460:
 19586                           
 19587                           ; BSR set to: 0
 19588  011306  0100               	movlb	0	; () banked
 19589  011308  EE20 F002          	lfsr	2,2
 19590  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19591  01130E  26D9               	addwf	fsr2l,f,c
 19592  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19593  011312  22DA               	addwfc	fsr2h,f,c
 19594  011314  0100               	movlb	0	; () banked
 19595  011316  86DF               	bsf	indf2,3,c
 19596  011318  D03E               	goto	l8481
 19597  01131A                     l8469:
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19601  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19602  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19603  011322  0E01               	movlw	1
 19604  011324  50DB               	movf	plusw2,w,c
 19605  011326  E104               	bnz	u8470
 19606  011328  0E3C               	movlw	60
 19607  01132A  5CDE               	subwf	postinc2,w,c
 19608  01132C  A0D8               	btfss	status,0,c
 19609  01132E  D00A               	goto	l8473
 19610  011330                     u8470:
 19611                           
 19612                           ; BSR set to: 0
 19613  011330  0100               	movlb	0	; () banked
 19614  011332  EE20 F002          	lfsr	2,2
 19615  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19616  011338  26D9               	addwf	fsr2l,f,c
 19617  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19618  01133C  22DA               	addwfc	fsr2h,f,c
 19619  01133E  0100               	movlb	0	; () banked
 19620  011340  84DF               	bsf	indf2,2,c
 19621  011342  D029               	goto	l8481
 19622  011344                     l8473:
 19623                           
 19624                           ; BSR set to: 0
 19625                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19626  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19627  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19628  01134C  0E01               	movlw	1
 19629  01134E  50DB               	movf	plusw2,w,c
 19630  011350  E104               	bnz	u8480
 19631  011352  0E10               	movlw	16
 19632  011354  5CDE               	subwf	postinc2,w,c
 19633  011356  A0D8               	btfss	status,0,c
 19634  011358  D00A               	goto	l8477
 19635  01135A                     u8480:
 19636                           
 19637                           ; BSR set to: 0
 19638  01135A  0100               	movlb	0	; () banked
 19639  01135C  EE20 F002          	lfsr	2,2
 19640  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19641  011362  26D9               	addwf	fsr2l,f,c
 19642  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19643  011366  22DA               	addwfc	fsr2h,f,c
 19644  011368  0100               	movlb	0	; () banked
 19645  01136A  82DF               	bsf	indf2,1,c
 19646  01136C  D014               	goto	l8481
 19647  01136E                     l8477:
 19648                           
 19649                           ; BSR set to: 0
 19650                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19651  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19652  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19653  011376  0E01               	movlw	1
 19654  011378  50DB               	movf	plusw2,w,c
 19655  01137A  E104               	bnz	u8490
 19656  01137C  0E02               	movlw	2
 19657  01137E  5CDE               	subwf	postinc2,w,c
 19658  011380  A0D8               	btfss	status,0,c
 19659  011382  D009               	goto	l8481
 19660  011384                     u8490:
 19661                           
 19662                           ; BSR set to: 0
 19663  011384  0100               	movlb	0	; () banked
 19664  011386  EE20 F002          	lfsr	2,2
 19665  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19666  01138C  26D9               	addwf	fsr2l,f,c
 19667  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19668  011390  22DA               	addwfc	fsr2h,f,c
 19669  011392  0100               	movlb	0	; () banked
 19670  011394  80DF               	bsf	indf2,0,c
 19671  011396                     l8481:
 19672                           
 19673                           ; BSR set to: 0
 19674                           ;My_button.c: 23: bt->cnt_sw = 0;
 19675  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19676  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19677  01139E  0E00               	movlw	0
 19678  0113A0  6EDE               	movwf	postinc2,c
 19679  0113A2  0E00               	movlw	0
 19680  0113A4  6EDD               	movwf	postdec2,c
 19681                           
 19682                           ; BSR set to: 0
 19683                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19684  0113A6  0100               	movlb	0	; () banked
 19685  0113A8  EE20 F002          	lfsr	2,2
 19686  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19687  0113AE  26D9               	addwf	fsr2l,f,c
 19688  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19689  0113B2  22DA               	addwfc	fsr2h,f,c
 19690  0113B4  0EFF               	movlw	255
 19691  0113B6  16DE               	andwf	postinc2,f,c
 19692  0113B8  0E00               	movlw	0
 19693  0113BA  16DD               	andwf	postdec2,f,c
 19694  0113BC  0012               	return	
 19695  0113BE                     __end_of_button_timer_interrupt:
 19696                           	opt stack 0
 19697                           tblptru	equ	0xFF8
 19698                           tblptrh	equ	0xFF7
 19699                           tblptrl	equ	0xFF6
 19700                           tablat	equ	0xFF5
 19701                           prodh	equ	0xFF4
 19702                           prodl	equ	0xFF3
 19703                           intcon	equ	0xFF2
 19704                           intcon2	equ	0xFF1
 19705                           postinc0	equ	0xFEE
 19706                           wreg	equ	0xFE8
 19707                           indf1	equ	0xFE7
 19708                           postinc1	equ	0xFE6
 19709                           postdec1	equ	0xFE5
 19710                           fsr1h	equ	0xFE2
 19711                           fsr1l	equ	0xFE1
 19712                           indf2	equ	0xFDF
 19713                           postinc2	equ	0xFDE
 19714                           postdec2	equ	0xFDD
 19715                           plusw2	equ	0xFDB
 19716                           fsr2h	equ	0xFDA
 19717                           fsr2l	equ	0xFD9
 19718                           status	equ	0xFD8
 19719                           
 19720 ;; *************** function ___lwdiv *****************
 19721 ;; Defined at:
 19722 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19723 ;; Parameters:    Size  Location     Type
 19724 ;;  dividend        2   28[BANK0 ] unsigned int 
 19725 ;;  divisor         2   30[BANK0 ] unsigned int 
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;  quotient        2   33[BANK0 ] unsigned int 
 19728 ;;  counter         1   32[BANK0 ] unsigned char 
 19729 ;; Return value:  Size  Location     Type
 19730 ;;                  2   28[BANK0 ] unsigned int 
 19731 ;; Registers used:
 19732 ;;		wreg, status,2, status,0
 19733 ;; Tracked objects:
 19734 ;;		On entry : 0/0
 19735 ;;		On exit  : 0/0
 19736 ;;		Unchanged: 0/0
 19737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19739 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19741 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19742 ;;Total ram usage:        7 bytes
 19743 ;; Hardware stack levels used:    1
 19744 ;; Hardware stack levels required when called:   11
 19745 ;; This function calls:
 19746 ;;		Nothing
 19747 ;; This function is called by:
 19748 ;;		_ringbuf_put_num
 19749 ;;		_data_out
 19750 ;;		_display_LCD
 19751 ;;		_ctmu_set_ratio
 19752 ;;		_ctmu_sampling
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text78
 19757  015E72                     __ptext78:
 19758                           	opt stack 0
 19759  015E72                     ___lwdiv:
 19760                           	opt stack 16
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;incstack = 0
 19764  015E72  0E00               	movlw	0
 19765  015E74  0100               	movlb	0	; () banked
 19766  015E76  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19767  015E78  0E00               	movlw	0
 19768  015E7A  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19769                           
 19770                           ; BSR set to: 0
 19771  015E7C  0100               	movlb	0	; () banked
 19772  015E7E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19773  015E80  0100               	movlb	0	; () banked
 19774  015E82  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19775  015E84  B4D8               	btfsc	status,2,c
 19776  015E86  D02C               	goto	l2433
 19777                           
 19778                           ; BSR set to: 0
 19779  015E88  0E01               	movlw	1
 19780  015E8A  0100               	movlb	0	; () banked
 19781  015E8C  6F80               	movwf	___lwdiv@counter& (0+255),b
 19782  015E8E  D006               	goto	l11385
 19783  015E90                     l11383:
 19784                           
 19785                           ; BSR set to: 0
 19786  015E90  0100               	movlb	0	; () banked
 19787  015E92  90D8               	bcf	status,0,c
 19788  015E94  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19789  015E96  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19790  015E98  0100               	movlb	0	; () banked
 19791  015E9A  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19792  015E9C                     l11385:
 19793                           
 19794                           ; BSR set to: 0
 19795  015E9C  0100               	movlb	0	; () banked
 19796  015E9E  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19797  015EA0  D7F7               	goto	l11383
 19798  015EA2                     l11387:
 19799                           
 19800                           ; BSR set to: 0
 19801  015EA2  0100               	movlb	0	; () banked
 19802  015EA4  90D8               	bcf	status,0,c
 19803  015EA6  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19804  015EA8  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19805                           
 19806                           ; BSR set to: 0
 19807  015EAA  0100               	movlb	0	; () banked
 19808  015EAC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19809  015EAE  0100               	movlb	0	; () banked
 19810  015EB0  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19811  015EB2  0100               	movlb	0	; () banked
 19812  015EB4  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19813  015EB6  0100               	movlb	0	; () banked
 19814  015EB8  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19815  015EBA  A0D8               	btfss	status,0,c
 19816  015EBC  D00A               	goto	l11395
 19817                           
 19818                           ; BSR set to: 0
 19819  015EBE  0100               	movlb	0	; () banked
 19820  015EC0  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19821  015EC2  0100               	movlb	0	; () banked
 19822  015EC4  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19823  015EC6  0100               	movlb	0	; () banked
 19824  015EC8  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19825  015ECA  0100               	movlb	0	; () banked
 19826  015ECC  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19827                           
 19828                           ; BSR set to: 0
 19829  015ECE  0100               	movlb	0	; () banked
 19830  015ED0  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19831  015ED2                     l11395:
 19832                           
 19833                           ; BSR set to: 0
 19834  015ED2  0100               	movlb	0	; () banked
 19835  015ED4  90D8               	bcf	status,0,c
 19836  015ED6  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19837  015ED8  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19838                           
 19839                           ; BSR set to: 0
 19840  015EDA  0100               	movlb	0	; () banked
 19841  015EDC  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19842  015EDE  D7E1               	goto	l11387
 19843  015EE0                     l2433:
 19844                           
 19845                           ; BSR set to: 0
 19846  015EE0  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19847  015EE4  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19848                           
 19849                           ; BSR set to: 0
 19850  015EE8  0012               	return		;funcret
 19851  015EEA                     __end_of___lwdiv:
 19852                           	opt stack 0
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           intcon	equ	0xFF2
 19860                           intcon2	equ	0xFF1
 19861                           postinc0	equ	0xFEE
 19862                           wreg	equ	0xFE8
 19863                           indf1	equ	0xFE7
 19864                           postinc1	equ	0xFE6
 19865                           postdec1	equ	0xFE5
 19866                           fsr1h	equ	0xFE2
 19867                           fsr1l	equ	0xFE1
 19868                           indf2	equ	0xFDF
 19869                           postinc2	equ	0xFDE
 19870                           postdec2	equ	0xFDD
 19871                           plusw2	equ	0xFDB
 19872                           fsr2h	equ	0xFDA
 19873                           fsr2l	equ	0xFD9
 19874                           status	equ	0xFD8
 19875                           
 19876 ;; *************** function _CTMU_read *****************
 19877 ;; Defined at:
 19878 ;;		line 184 in file "../My_library/My_PIC.c"
 19879 ;; Parameters:    Size  Location     Type
 19880 ;;  ch              1    wreg     unsigned char 
 19881 ;; Auto vars:     Size  Location     Type
 19882 ;;  ch              1   16[BANK0 ] unsigned char 
 19883 ;;  i               1   21[BANK0 ] unsigned char 
 19884 ;;  sum             4   17[BANK0 ] unsigned long 
 19885 ;; Return value:  Size  Location     Type
 19886 ;;                  2   13[BANK0 ] unsigned int 
 19887 ;; Registers used:
 19888 ;;		wreg, status,2, status,0, cstack
 19889 ;; Tracked objects:
 19890 ;;		On entry : 0/0
 19891 ;;		On exit  : 0/0
 19892 ;;		Unchanged: 0/0
 19893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19895 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19897 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19898 ;;Total ram usage:        9 bytes
 19899 ;; Hardware stack levels used:    1
 19900 ;; Hardware stack levels required when called:   12
 19901 ;; This function calls:
 19902 ;;		___lldiv
 19903 ;; This function is called by:
 19904 ;;		_ctmu_set_ratio
 19905 ;;		_ctmu_sampling
 19906 ;; This function uses a non-reentrant model
 19907 ;;
 19908                           
 19909                           	psect	text79
 19910  015156                     __ptext79:
 19911                           	opt stack 0
 19912  015156                     _CTMU_read:
 19913                           	opt stack 15
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;incstack = 0
 19917                           ;CTMU_read@ch stored from wreg
 19918  015156  0100               	movlb	0	; () banked
 19919  015158  6F70               	movwf	CTMU_read@ch& (0+255),b
 19920                           
 19921                           ;My_PIC.c: 185: uint32_t sum = 0;
 19922  01515A  0E00               	movlw	0
 19923  01515C  0100               	movlb	0	; () banked
 19924  01515E  6F71               	movwf	CTMU_read@sum& (0+255),b
 19925  015160  0E00               	movlw	0
 19926  015162  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19927  015164  0E00               	movlw	0
 19928  015166  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19929  015168  0E00               	movlw	0
 19930  01516A  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19931                           
 19932                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 19933  01516C  0E00               	movlw	0
 19934  01516E  0100               	movlb	0	; () banked
 19935  015170  6F75               	movwf	CTMU_read@i& (0+255),b
 19936  015172                     l11077:
 19937                           
 19938                           ; BSR set to: 0
 19939  015172  0E09               	movlw	9
 19940  015174  0100               	movlb	0	; () banked
 19941  015176  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19942  015178  D001               	goto	l11081
 19943  01517A  D02B               	goto	l11109
 19944  01517C                     l11081:
 19945                           
 19946                           ; BSR set to: 0
 19947                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 19948  01517C  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19949  015180  0100               	movlb	0	; () banked
 19950  015182  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19951  015184  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19952  015186  50C2               	movf	4034,w,c	;volatile
 19953  015188  0100               	movlb	0	; () banked
 19954  01518A  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19955  01518C  0BC3               	andlw	-61
 19956  01518E  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19957  015190  6EC2               	movwf	4034,c	;volatile
 19958                           
 19959                           ; BSR set to: 0
 19960                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 19961  015192  8EB3               	bsf	4019,7,c	;volatile
 19962                           
 19963                           ; BSR set to: 0
 19964                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 19965  015194  90B2               	bcf	4018,0,c	;volatile
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 19969  015196  92B2               	bcf	4018,1,c	;volatile
 19970                           
 19971                           ; BSR set to: 0
 19972                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 19973  015198  82B3               	bsf	4019,1,c	;volatile
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19977  01519A  0E50               	movlw	80
 19978  01519C                     u15217:
 19979  01519C  2EE8               	decfsz	wreg,f,c
 19980  01519E  D7FE               	goto	u15217
 19981                           
 19982                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 19983  0151A0  92B3               	bcf	4019,1,c	;volatile
 19984                           
 19985                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 19986  0151A2  80B2               	bsf	4018,0,c	;volatile
 19987                           
 19988                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19989  0151A4  0E14               	movlw	20
 19990  0151A6                     u15227:
 19991  0151A6  2EE8               	decfsz	wreg,f,c
 19992  0151A8  D7FE               	goto	u15227
 19993                           
 19994                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 19995  0151AA  90B2               	bcf	4018,0,c	;volatile
 19996                           
 19997                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 19998  0151AC  9C9E               	bcf	3998,6,c	;volatile
 19999                           
 20000                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 20001  0151AE  82C2               	bsf	4034,1,c	;volatile
 20002  0151B0                     l735:
 20003  0151B0  AC9E               	btfss	3998,6,c	;volatile
 20004  0151B2  D7FE               	goto	l735
 20005                           
 20006                           ;My_PIC.c: 204: sum += ADRES;
 20007  0151B4  50C3               	movf	4035,w,c	;volatile
 20008  0151B6  0100               	movlb	0	; () banked
 20009  0151B8  2771               	addwf	CTMU_read@sum& (0+255),f,b
 20010  0151BA  50C4               	movf	4036,w,c	;volatile
 20011  0151BC  0100               	movlb	0	; () banked
 20012  0151BE  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 20013  0151C0  0E00               	movlw	0
 20014  0151C2  0100               	movlb	0	; () banked
 20015  0151C4  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 20016  0151C6  0E00               	movlw	0
 20017  0151C8  0100               	movlb	0	; () banked
 20018  0151CA  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 20019  0151CC  0100               	movlb	0	; () banked
 20020  0151CE  2B75               	incf	CTMU_read@i& (0+255),f,b
 20021  0151D0  D7D0               	goto	l11077
 20022  0151D2                     l11109:
 20023                           
 20024                           ; BSR set to: 0
 20025                           ;My_PIC.c: 205: }
 20026                           ;My_PIC.c: 206: return sum / 10 / 4;
 20027  0151D2  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 20028  0151D6  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 20029  0151DA  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 20030  0151DE  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 20031  0151E2  0E0A               	movlw	10
 20032  0151E4  0100               	movlb	0	; () banked
 20033  0151E6  6F64               	movwf	___lldiv@divisor& (0+255),b
 20034  0151E8  0E00               	movlw	0
 20035  0151EA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 20036  0151EC  0E00               	movlw	0
 20037  0151EE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 20038  0151F0  0E00               	movlw	0
 20039  0151F2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 20040  0151F4  ECCB  F0A9         	call	___lldiv	;wreg free
 20041  0151F8  0E03               	movlw	3
 20042  0151FA  D007               	goto	u12200
 20043  0151FC                     u12205:
 20044  0151FC  0100               	movlb	0	; () banked
 20045  0151FE  90D8               	bcf	status,0,c
 20046  015200  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 20047  015202  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 20048  015204  0100               	movlb	0	; () banked
 20049  015206  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 20050  015208  3360               	rrcf	?___lldiv& (0+255),f,b
 20051  01520A                     u12200:
 20052  01520A  2EE8               	decfsz	wreg,f,c
 20053  01520C  D7F7               	goto	u12205
 20054  01520E  C060  F06D         	movff	?___lldiv,?_CTMU_read
 20055  015212  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 20056  015216  0012               	return	
 20057  015218                     __end_of_CTMU_read:
 20058                           	opt stack 0
 20059                           tblptru	equ	0xFF8
 20060                           tblptrh	equ	0xFF7
 20061                           tblptrl	equ	0xFF6
 20062                           tablat	equ	0xFF5
 20063                           prodh	equ	0xFF4
 20064                           prodl	equ	0xFF3
 20065                           intcon	equ	0xFF2
 20066                           intcon2	equ	0xFF1
 20067                           postinc0	equ	0xFEE
 20068                           wreg	equ	0xFE8
 20069                           indf1	equ	0xFE7
 20070                           postinc1	equ	0xFE6
 20071                           postdec1	equ	0xFE5
 20072                           fsr1h	equ	0xFE2
 20073                           fsr1l	equ	0xFE1
 20074                           indf2	equ	0xFDF
 20075                           postinc2	equ	0xFDE
 20076                           postdec2	equ	0xFDD
 20077                           plusw2	equ	0xFDB
 20078                           fsr2h	equ	0xFDA
 20079                           fsr2l	equ	0xFD9
 20080                           status	equ	0xFD8
 20081                           
 20082 ;; *************** function ___lldiv *****************
 20083 ;; Defined at:
 20084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 20085 ;; Parameters:    Size  Location     Type
 20086 ;;  dividend        4    0[BANK0 ] unsigned long 
 20087 ;;  divisor         4    4[BANK0 ] unsigned long 
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;  quotient        4    8[BANK0 ] unsigned long 
 20090 ;;  counter         1   12[BANK0 ] unsigned char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  4    0[BANK0 ] unsigned long 
 20093 ;; Registers used:
 20094 ;;		wreg, status,2, status,0
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20100 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20101 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20103 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20104 ;;Total ram usage:       13 bytes
 20105 ;; Hardware stack levels used:    1
 20106 ;; Hardware stack levels required when called:   11
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		_CTMU_read
 20111 ;;		_get_quot_rem
 20112 ;;		_integrate_current
 20113 ;;		_display_LCD
 20114 ;;		_sprintf
 20115 ;; This function uses a non-reentrant model
 20116 ;;
 20117                           
 20118                           	psect	text80
 20119  015396                     __ptext80:
 20120                           	opt stack 0
 20121  015396                     ___lldiv:
 20122                           	opt stack 13
 20123                           
 20124                           ; BSR set to: 0
 20125                           ;incstack = 0
 20126  015396  0E00               	movlw	0
 20127  015398  0100               	movlb	0	; () banked
 20128  01539A  6F68               	movwf	___lldiv@quotient& (0+255),b
 20129  01539C  0E00               	movlw	0
 20130  01539E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20131  0153A0  0E00               	movlw	0
 20132  0153A2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20133  0153A4  0E00               	movlw	0
 20134  0153A6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20135                           
 20136                           ; BSR set to: 0
 20137  0153A8  0100               	movlb	0	; () banked
 20138  0153AA  5164               	movf	___lldiv@divisor& (0+255),w,b
 20139  0153AC  0100               	movlb	0	; () banked
 20140  0153AE  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20141  0153B0  0100               	movlb	0	; () banked
 20142  0153B2  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20143  0153B4  0100               	movlb	0	; () banked
 20144  0153B6  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20145  0153B8  B4D8               	btfsc	status,2,c
 20146  0153BA  D042               	goto	l2380
 20147                           
 20148                           ; BSR set to: 0
 20149  0153BC  0E01               	movlw	1
 20150  0153BE  0100               	movlb	0	; () banked
 20151  0153C0  6F6C               	movwf	___lldiv@counter& (0+255),b
 20152  0153C2  D008               	goto	l10623
 20153  0153C4                     l10621:
 20154                           
 20155                           ; BSR set to: 0
 20156  0153C4  0100               	movlb	0	; () banked
 20157  0153C6  90D8               	bcf	status,0,c
 20158  0153C8  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20159  0153CA  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20160  0153CC  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20161  0153CE  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20162  0153D0  0100               	movlb	0	; () banked
 20163  0153D2  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20164  0153D4                     l10623:
 20165                           
 20166                           ; BSR set to: 0
 20167  0153D4  0100               	movlb	0	; () banked
 20168  0153D6  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20169  0153D8  D7F5               	goto	l10621
 20170  0153DA                     l10625:
 20171                           
 20172                           ; BSR set to: 0
 20173  0153DA  0100               	movlb	0	; () banked
 20174  0153DC  90D8               	bcf	status,0,c
 20175  0153DE  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20176  0153E0  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20177  0153E2  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20178  0153E4  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20179                           
 20180                           ; BSR set to: 0
 20181  0153E6  0100               	movlb	0	; () banked
 20182  0153E8  5164               	movf	___lldiv@divisor& (0+255),w,b
 20183  0153EA  0100               	movlb	0	; () banked
 20184  0153EC  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20185  0153EE  0100               	movlb	0	; () banked
 20186  0153F0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20187  0153F2  0100               	movlb	0	; () banked
 20188  0153F4  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20189  0153F6  0100               	movlb	0	; () banked
 20190  0153F8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20191  0153FA  0100               	movlb	0	; () banked
 20192  0153FC  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20193  0153FE  0100               	movlb	0	; () banked
 20194  015400  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20195  015402  0100               	movlb	0	; () banked
 20196  015404  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20197  015406  A0D8               	btfss	status,0,c
 20198  015408  D012               	goto	l10633
 20199                           
 20200                           ; BSR set to: 0
 20201  01540A  0100               	movlb	0	; () banked
 20202  01540C  5164               	movf	___lldiv@divisor& (0+255),w,b
 20203  01540E  0100               	movlb	0	; () banked
 20204  015410  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20205  015412  0100               	movlb	0	; () banked
 20206  015414  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20207  015416  0100               	movlb	0	; () banked
 20208  015418  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20209  01541A  0100               	movlb	0	; () banked
 20210  01541C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20211  01541E  0100               	movlb	0	; () banked
 20212  015420  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20213  015422  0100               	movlb	0	; () banked
 20214  015424  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20215  015426  0100               	movlb	0	; () banked
 20216  015428  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20217                           
 20218                           ; BSR set to: 0
 20219  01542A  0100               	movlb	0	; () banked
 20220  01542C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20221  01542E                     l10633:
 20222                           
 20223                           ; BSR set to: 0
 20224  01542E  0100               	movlb	0	; () banked
 20225  015430  90D8               	bcf	status,0,c
 20226  015432  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20227  015434  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20228  015436  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20229  015438  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20230                           
 20231                           ; BSR set to: 0
 20232  01543A  0100               	movlb	0	; () banked
 20233  01543C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20234  01543E  D7CD               	goto	l10625
 20235  015440                     l2380:
 20236                           
 20237                           ; BSR set to: 0
 20238  015440  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20239  015444  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20240  015448  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20241  01544C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20242                           
 20243                           ; BSR set to: 0
 20244  015450  0012               	return		;funcret
 20245  015452                     __end_of___lldiv:
 20246                           	opt stack 0
 20247                           tblptru	equ	0xFF8
 20248                           tblptrh	equ	0xFF7
 20249                           tblptrl	equ	0xFF6
 20250                           tablat	equ	0xFF5
 20251                           prodh	equ	0xFF4
 20252                           prodl	equ	0xFF3
 20253                           intcon	equ	0xFF2
 20254                           intcon2	equ	0xFF1
 20255                           postinc0	equ	0xFEE
 20256                           wreg	equ	0xFE8
 20257                           indf1	equ	0xFE7
 20258                           postinc1	equ	0xFE6
 20259                           postdec1	equ	0xFE5
 20260                           fsr1h	equ	0xFE2
 20261                           fsr1l	equ	0xFE1
 20262                           indf2	equ	0xFDF
 20263                           postinc2	equ	0xFDE
 20264                           postdec2	equ	0xFDD
 20265                           plusw2	equ	0xFDB
 20266                           fsr2h	equ	0xFDA
 20267                           fsr2l	equ	0xFD9
 20268                           status	equ	0xFD8
 20269                           
 20270 ;; *************** function _USB_task *****************
 20271 ;; Defined at:
 20272 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 20273 ;; Parameters:    Size  Location     Type
 20274 ;;		None
 20275 ;; Auto vars:     Size  Location     Type
 20276 ;;  rx_len          2   20[BANK0 ] int 
 20277 ;;  data            1   22[BANK0 ] unsigned char 
 20278 ;; Return value:  Size  Location     Type
 20279 ;;		None               void
 20280 ;; Registers used:
 20281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20282 ;; Tracked objects:
 20283 ;;		On entry : 0/0
 20284 ;;		On exit  : 0/0
 20285 ;;		Unchanged: 0/0
 20286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20288 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20290 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20291 ;;Total ram usage:        3 bytes
 20292 ;; Hardware stack levels used:    1
 20293 ;; Hardware stack levels required when called:   14
 20294 ;; This function calls:
 20295 ;;		_get_string_usb
 20296 ;;		_put_string_usb
 20297 ;;		_ringbuf_num
 20298 ;;		_ringbuf_pop
 20299 ;;		_ringbuf_put
 20300 ;; This function is called by:
 20301 ;;		_main
 20302 ;; This function uses a non-reentrant model
 20303 ;;
 20304                           
 20305                           	psect	text81
 20306  015B3E                     __ptext81:
 20307                           	opt stack 0
 20308  015B3E                     _USB_task:
 20309                           	opt stack 16
 20310                           
 20311                           ;My_usb_cdc.c: 67: char data;
 20312                           ;My_usb_cdc.c: 68: int rx_len;
 20313                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 20314                           
 20315                           ; BSR set to: 0
 20316                           ;incstack = 0
 20317  015B3E  0E76               	movlw	low USB_task@data
 20318  015B40  0100               	movlb	0	; () banked
 20319  015B42  6F6D               	movwf	get_string_usb@s& (0+255),b
 20320  015B44  0E00               	movlw	high USB_task@data
 20321  015B46  0100               	movlb	0	; () banked
 20322  015B48  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20323  015B4A  0E00               	movlw	0
 20324  015B4C  0100               	movlb	0	; () banked
 20325  015B4E  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20326  015B50  0E01               	movlw	1
 20327  015B52  6F6F               	movwf	get_string_usb@len& (0+255),b
 20328  015B54  ECF6  F0B2         	call	_get_string_usb	;wreg free
 20329  015B58  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 20330  015B5C  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 20331                           
 20332                           ;My_usb_cdc.c: 70: if (rx_len) {
 20333  015B60  0100               	movlb	0	; () banked
 20334  015B62  5174               	movf	USB_task@rx_len& (0+255),w,b
 20335  015B64  0100               	movlb	0	; () banked
 20336  015B66  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 20337  015B68  B4D8               	btfsc	status,2,c
 20338  015B6A  D00A               	goto	l1370
 20339                           
 20340                           ; BSR set to: 0
 20341                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 20342  015B6C  0EB9               	movlw	low _usb_rx
 20343  015B6E  0100               	movlb	0	; () banked
 20344  015B70  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20345  015B72  0E02               	movlw	high _usb_rx
 20346  015B74  0100               	movlb	0	; () banked
 20347  015B76  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20348  015B78  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 20349  015B7C  EC77  F0A5         	call	_ringbuf_put	;wreg free
 20350  015B80                     l1370:
 20351                           
 20352                           ;My_usb_cdc.c: 72: }
 20353                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 20354  015B80  0EC1               	movlw	low _usb_tx
 20355  015B82  0100               	movlb	0	; () banked
 20356  015B84  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20357  015B86  0E02               	movlw	high _usb_tx
 20358  015B88  0100               	movlb	0	; () banked
 20359  015B8A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20360  015B8C  EC21  F0A1         	call	_ringbuf_num	;wreg free
 20361  015B90  0100               	movlb	0	; () banked
 20362  015B92  5160               	movf	?_ringbuf_num& (0+255),w,b
 20363  015B94  0100               	movlb	0	; () banked
 20364  015B96  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20365  015B98  B4D8               	btfsc	status,2,c
 20366  015B9A  0012               	return	
 20367                           
 20368                           ; BSR set to: 0
 20369                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 20370  015B9C  0EC1               	movlw	low _usb_tx
 20371  015B9E  0100               	movlb	0	; () banked
 20372  015BA0  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20373  015BA2  0E02               	movlw	high _usb_tx
 20374  015BA4  0100               	movlb	0	; () banked
 20375  015BA6  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20376  015BA8  EC81  F0A7         	call	_ringbuf_pop	;wreg free
 20377  015BAC  0100               	movlb	0	; () banked
 20378  015BAE  6F76               	movwf	USB_task@data& (0+255),b
 20379                           
 20380                           ; BSR set to: 0
 20381                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 20382  015BB0  0E76               	movlw	low USB_task@data
 20383  015BB2  0100               	movlb	0	; () banked
 20384  015BB4  6F6C               	movwf	put_string_usb@s& (0+255),b
 20385  015BB6  0E00               	movlw	high USB_task@data
 20386  015BB8  0100               	movlb	0	; () banked
 20387  015BBA  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20388  015BBC  0E00               	movlw	0
 20389  015BBE  0100               	movlb	0	; () banked
 20390  015BC0  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20391  015BC2  0E01               	movlw	1
 20392  015BC4  6F6E               	movwf	put_string_usb@len& (0+255),b
 20393  015BC6  EC00  F0B5         	call	_put_string_usb	;wreg free
 20394  015BCA  0012               	return	
 20395  015BCC                     __end_of_USB_task:
 20396                           	opt stack 0
 20397                           tblptru	equ	0xFF8
 20398                           tblptrh	equ	0xFF7
 20399                           tblptrl	equ	0xFF6
 20400                           tablat	equ	0xFF5
 20401                           prodh	equ	0xFF4
 20402                           prodl	equ	0xFF3
 20403                           intcon	equ	0xFF2
 20404                           intcon2	equ	0xFF1
 20405                           postinc0	equ	0xFEE
 20406                           wreg	equ	0xFE8
 20407                           indf1	equ	0xFE7
 20408                           postinc1	equ	0xFE6
 20409                           postdec1	equ	0xFE5
 20410                           fsr1h	equ	0xFE2
 20411                           fsr1l	equ	0xFE1
 20412                           indf2	equ	0xFDF
 20413                           postinc2	equ	0xFDE
 20414                           postdec2	equ	0xFDD
 20415                           plusw2	equ	0xFDB
 20416                           fsr2h	equ	0xFDA
 20417                           fsr2l	equ	0xFD9
 20418                           status	equ	0xFD8
 20419                           
 20420 ;; *************** function _ringbuf_put *****************
 20421 ;; Defined at:
 20422 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20423 ;; Parameters:    Size  Location     Type
 20424 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20425 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 20426 ;;		 -> lcd_tx(8), 
 20427 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20428 ;; Auto vars:     Size  Location     Type
 20429 ;;		None
 20430 ;; Return value:  Size  Location     Type
 20431 ;;		None               void
 20432 ;; Registers used:
 20433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20434 ;; Tracked objects:
 20435 ;;		On entry : 0/0
 20436 ;;		On exit  : 0/0
 20437 ;;		Unchanged: 0/0
 20438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20439 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20442 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;Total ram usage:        7 bytes
 20444 ;; Hardware stack levels used:    1
 20445 ;; Hardware stack levels required when called:   12
 20446 ;; This function calls:
 20447 ;;		_ringbuf_num
 20448 ;; This function is called by:
 20449 ;;		_ringbuf_put_num
 20450 ;;		_ringbuf_put_str
 20451 ;;		_terminal_task
 20452 ;;		_USB_task
 20453 ;;		_ST7032_command
 20454 ;;		_ST7032_put
 20455 ;;		_ST7032_create_char
 20456 ;;		_ST7032_init
 20457 ;;		_UART_ISR
 20458 ;; This function uses a non-reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text82
 20462  014AEE                     __ptext82:
 20463                           	opt stack 0
 20464  014AEE                     _ringbuf_put:
 20465                           	opt stack 13
 20466                           
 20467                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20468                           
 20469                           ;incstack = 0
 20470  014AEE  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20471  014AF2  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20472  014AF6  EC21  F0A1         	call	_ringbuf_num	;wreg free
 20473  014AFA  0100               	movlb	0	; () banked
 20474  014AFC  EE20 F002          	lfsr	2,2
 20475  014B00  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20476  014B02  26D9               	addwf	fsr2l,f,c
 20477  014B04  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20478  014B06  22DA               	addwfc	fsr2h,f,c
 20479  014B08  50DE               	movf	postinc2,w,c
 20480  014B0A  0100               	movlb	0	; () banked
 20481  014B0C  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20482  014B0E  50DE               	movf	postinc2,w,c
 20483  014B10  0100               	movlb	0	; () banked
 20484  014B12  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20485  014B14  B0D8               	btfsc	status,0,c
 20486  014B16  0012               	return	
 20487                           
 20488                           ; BSR set to: 0
 20489                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20490  014B18  0100               	movlb	0	; () banked
 20491  014B1A  EE20 F004          	lfsr	2,4
 20492  014B1E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20493  014B20  26D9               	addwf	fsr2l,f,c
 20494  014B22  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20495  014B24  22DA               	addwfc	fsr2h,f,c
 20496  014B26  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20497  014B2A  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20498  014B2E  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20499  014B32  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20500  014B36  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20501  014B3A  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20502  014B3E  0100               	movlb	0	; () banked
 20503  014B40  516B               	movf	??_ringbuf_put& (0+255),w,b
 20504  014B42  0100               	movlb	0	; () banked
 20505  014B44  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20506  014B46  6ED9               	movwf	fsr2l,c
 20507  014B48  0100               	movlb	0	; () banked
 20508  014B4A  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20509  014B4C  0100               	movlb	0	; () banked
 20510  014B4E  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20511  014B50  6EDA               	movwf	fsr2h,c
 20512  014B52  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20513                           
 20514                           ; BSR set to: 0
 20515                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20516  014B56  0100               	movlb	0	; () banked
 20517  014B58  EE20 F002          	lfsr	2,2
 20518  014B5C  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20519  014B5E  26D9               	addwf	fsr2l,f,c
 20520  014B60  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20521  014B62  22DA               	addwfc	fsr2h,f,c
 20522  014B64  0100               	movlb	0	; () banked
 20523  014B66  EE10 F004          	lfsr	1,4
 20524  014B6A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20525  014B6C  26E1               	addwf	fsr1l,f,c
 20526  014B6E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20527  014B70  22E2               	addwfc	fsr1h,f,c
 20528  014B72  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20529  014B76  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20530  014B7A  0E01               	movlw	1
 20531  014B7C  0100               	movlb	0	; () banked
 20532  014B7E  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20533  014B80  0E00               	movlw	0
 20534  014B82  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20535  014B84  50DE               	movf	postinc2,w,c
 20536  014B86  0100               	movlb	0	; () banked
 20537  014B88  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20538  014B8A  50DE               	movf	postinc2,w,c
 20539  014B8C  0100               	movlb	0	; () banked
 20540  014B8E  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20541  014B90  B0D8               	btfsc	status,0,c
 20542  014B92  D00B               	goto	l10649
 20543                           
 20544                           ; BSR set to: 0
 20545  014B94  0100               	movlb	0	; () banked
 20546  014B96  EE20 F004          	lfsr	2,4
 20547  014B9A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20548  014B9C  26D9               	addwf	fsr2l,f,c
 20549  014B9E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20550  014BA0  22DA               	addwfc	fsr2h,f,c
 20551  014BA2  2ADE               	incf	postinc2,f,c
 20552  014BA4  0E00               	movlw	0
 20553  014BA6  22DD               	addwfc	postdec2,f,c
 20554  014BA8  0012               	return	
 20555  014BAA                     l10649:
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;My_ringbuf.c: 24: else rb->head = 0;
 20559  014BAA  0100               	movlb	0	; () banked
 20560  014BAC  EE20 F004          	lfsr	2,4
 20561  014BB0  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20562  014BB2  26D9               	addwf	fsr2l,f,c
 20563  014BB4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20564  014BB6  22DA               	addwfc	fsr2h,f,c
 20565  014BB8  0E00               	movlw	0
 20566  014BBA  6EDE               	movwf	postinc2,c
 20567  014BBC  0E00               	movlw	0
 20568  014BBE  6EDD               	movwf	postdec2,c
 20569                           
 20570                           ; BSR set to: 0
 20571  014BC0  0012               	return	
 20572  014BC2                     __end_of_ringbuf_put:
 20573                           	opt stack 0
 20574                           tblptru	equ	0xFF8
 20575                           tblptrh	equ	0xFF7
 20576                           tblptrl	equ	0xFF6
 20577                           tablat	equ	0xFF5
 20578                           prodh	equ	0xFF4
 20579                           prodl	equ	0xFF3
 20580                           intcon	equ	0xFF2
 20581                           intcon2	equ	0xFF1
 20582                           postinc0	equ	0xFEE
 20583                           wreg	equ	0xFE8
 20584                           indf1	equ	0xFE7
 20585                           postinc1	equ	0xFE6
 20586                           postdec1	equ	0xFE5
 20587                           fsr1h	equ	0xFE2
 20588                           fsr1l	equ	0xFE1
 20589                           indf2	equ	0xFDF
 20590                           postinc2	equ	0xFDE
 20591                           postdec2	equ	0xFDD
 20592                           plusw2	equ	0xFDB
 20593                           fsr2h	equ	0xFDA
 20594                           fsr2l	equ	0xFD9
 20595                           status	equ	0xFD8
 20596                           
 20597 ;; *************** function _ringbuf_pop *****************
 20598 ;; Defined at:
 20599 ;;		line 45 in file "../My_library/My_ringbuf.c"
 20600 ;; Parameters:    Size  Location     Type
 20601 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20602 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 20603 ;;		 -> lcd_tx(8), 
 20604 ;; Auto vars:     Size  Location     Type
 20605 ;;  ret             1   14[BANK0 ] unsigned char 
 20606 ;; Return value:  Size  Location     Type
 20607 ;;                  1    wreg      unsigned char 
 20608 ;; Registers used:
 20609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20610 ;; Tracked objects:
 20611 ;;		On entry : 0/0
 20612 ;;		On exit  : 0/0
 20613 ;;		Unchanged: 0/0
 20614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20617 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20618 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20619 ;;Total ram usage:        7 bytes
 20620 ;; Hardware stack levels used:    1
 20621 ;; Hardware stack levels required when called:   12
 20622 ;; This function calls:
 20623 ;;		_ringbuf_num
 20624 ;; This function is called by:
 20625 ;;		_terminal_task
 20626 ;;		_USB_task
 20627 ;;		_ST7032_task
 20628 ;;		_UART_ISR
 20629 ;; This function uses a non-reentrant model
 20630 ;;
 20631                           
 20632                           	psect	text83
 20633  014F02                     __ptext83:
 20634                           	opt stack 0
 20635  014F02                     _ringbuf_pop:
 20636                           	opt stack 17
 20637                           
 20638                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20639                           
 20640                           ; BSR set to: 0
 20641                           ;incstack = 0
 20642  014F02  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 20643  014F06  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 20644  014F0A  EC21  F0A1         	call	_ringbuf_num	;wreg free
 20645  014F0E  0100               	movlb	0	; () banked
 20646  014F10  5160               	movf	?_ringbuf_num& (0+255),w,b
 20647  014F12  0100               	movlb	0	; () banked
 20648  014F14  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20649  014F16  B4D8               	btfsc	status,2,c
 20650  014F18  D058               	goto	l12149
 20651                           
 20652                           ; BSR set to: 0
 20653                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20654  014F1A  0100               	movlb	0	; () banked
 20655  014F1C  EE20 F006          	lfsr	2,6
 20656  014F20  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20657  014F22  26D9               	addwf	fsr2l,f,c
 20658  014F24  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20659  014F26  22DA               	addwfc	fsr2h,f,c
 20660  014F28  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 20661  014F2C  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 20662  014F30  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 20663  014F34  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 20664  014F38  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 20665  014F3C  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 20666  014F40  0100               	movlb	0	; () banked
 20667  014F42  516A               	movf	??_ringbuf_pop& (0+255),w,b
 20668  014F44  0100               	movlb	0	; () banked
 20669  014F46  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 20670  014F48  6ED9               	movwf	fsr2l,c
 20671  014F4A  0100               	movlb	0	; () banked
 20672  014F4C  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 20673  014F4E  0100               	movlb	0	; () banked
 20674  014F50  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 20675  014F52  6EDA               	movwf	fsr2h,c
 20676  014F54  50DF               	movf	indf2,w,c
 20677  014F56  0100               	movlb	0	; () banked
 20678  014F58  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20682  014F5A  0100               	movlb	0	; () banked
 20683  014F5C  EE20 F002          	lfsr	2,2
 20684  014F60  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20685  014F62  26D9               	addwf	fsr2l,f,c
 20686  014F64  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20687  014F66  22DA               	addwfc	fsr2h,f,c
 20688  014F68  0100               	movlb	0	; () banked
 20689  014F6A  EE10 F006          	lfsr	1,6
 20690  014F6E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20691  014F70  26E1               	addwf	fsr1l,f,c
 20692  014F72  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20693  014F74  22E2               	addwfc	fsr1h,f,c
 20694  014F76  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 20695  014F7A  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 20696  014F7E  0E01               	movlw	1
 20697  014F80  0100               	movlb	0	; () banked
 20698  014F82  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 20699  014F84  0E00               	movlw	0
 20700  014F86  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 20701  014F88  50DE               	movf	postinc2,w,c
 20702  014F8A  0100               	movlb	0	; () banked
 20703  014F8C  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 20704  014F8E  50DE               	movf	postinc2,w,c
 20705  014F90  0100               	movlb	0	; () banked
 20706  014F92  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 20707  014F94  B0D8               	btfsc	status,0,c
 20708  014F96  D00B               	goto	l12141
 20709                           
 20710                           ; BSR set to: 0
 20711                           ;My_ringbuf.c: 49: rb->tail++;
 20712  014F98  0100               	movlb	0	; () banked
 20713  014F9A  EE20 F006          	lfsr	2,6
 20714  014F9E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20715  014FA0  26D9               	addwf	fsr2l,f,c
 20716  014FA2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20717  014FA4  22DA               	addwfc	fsr2h,f,c
 20718  014FA6  2ADE               	incf	postinc2,f,c
 20719  014FA8  0E00               	movlw	0
 20720  014FAA  22DD               	addwfc	postdec2,f,c
 20721                           
 20722                           ;My_ringbuf.c: 50: } else {
 20723  014FAC  D00B               	goto	l12143
 20724  014FAE                     l12141:
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;My_ringbuf.c: 51: rb->tail = 0;
 20728  014FAE  0100               	movlb	0	; () banked
 20729  014FB0  EE20 F006          	lfsr	2,6
 20730  014FB4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20731  014FB6  26D9               	addwf	fsr2l,f,c
 20732  014FB8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20733  014FBA  22DA               	addwfc	fsr2h,f,c
 20734  014FBC  0E00               	movlw	0
 20735  014FBE  6EDE               	movwf	postinc2,c
 20736  014FC0  0E00               	movlw	0
 20737  014FC2  6EDD               	movwf	postdec2,c
 20738  014FC4                     l12143:
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;My_ringbuf.c: 52: }
 20742                           ;My_ringbuf.c: 53: return ret;
 20743  014FC4  0100               	movlb	0	; () banked
 20744  014FC6  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;My_ringbuf.c: 54: } else {
 20748                           
 20749                           ; BSR set to: 0
 20750  014FC8  0012               	return	
 20751  014FCA                     l12149:
 20752                           
 20753                           ; BSR set to: 0
 20754                           ;My_ringbuf.c: 55: return 0;
 20755  014FCA  0E00               	movlw	0
 20756                           
 20757                           ; BSR set to: 0
 20758  014FCC  0012               	return	
 20759  014FCE                     __end_of_ringbuf_pop:
 20760                           	opt stack 0
 20761                           tblptru	equ	0xFF8
 20762                           tblptrh	equ	0xFF7
 20763                           tblptrl	equ	0xFF6
 20764                           tablat	equ	0xFF5
 20765                           prodh	equ	0xFF4
 20766                           prodl	equ	0xFF3
 20767                           intcon	equ	0xFF2
 20768                           intcon2	equ	0xFF1
 20769                           postinc0	equ	0xFEE
 20770                           wreg	equ	0xFE8
 20771                           indf1	equ	0xFE7
 20772                           postinc1	equ	0xFE6
 20773                           postdec1	equ	0xFE5
 20774                           fsr1h	equ	0xFE2
 20775                           fsr1l	equ	0xFE1
 20776                           indf2	equ	0xFDF
 20777                           postinc2	equ	0xFDE
 20778                           postdec2	equ	0xFDD
 20779                           plusw2	equ	0xFDB
 20780                           fsr2h	equ	0xFDA
 20781                           fsr2l	equ	0xFD9
 20782                           status	equ	0xFD8
 20783                           
 20784 ;; *************** function _ringbuf_num *****************
 20785 ;; Defined at:
 20786 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 20789 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 20790 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 20791 ;; Auto vars:     Size  Location     Type
 20792 ;;		None
 20793 ;; Return value:  Size  Location     Type
 20794 ;;                  2    0[BANK0 ] unsigned int 
 20795 ;; Registers used:
 20796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20797 ;; Tracked objects:
 20798 ;;		On entry : 0/0
 20799 ;;		On exit  : 0/0
 20800 ;;		Unchanged: 0/0
 20801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20804 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20805 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20806 ;;Total ram usage:        8 bytes
 20807 ;; Hardware stack levels used:    1
 20808 ;; Hardware stack levels required when called:   11
 20809 ;; This function calls:
 20810 ;;		Nothing
 20811 ;; This function is called by:
 20812 ;;		_ringbuf_put
 20813 ;;		_ringbuf_pop
 20814 ;;		_ringbuf_backspace
 20815 ;;		_terminal_task
 20816 ;;		_USB_task
 20817 ;;		_ST7032_task
 20818 ;;		_UART_ISR
 20819 ;;		_UART_task
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           	psect	text84
 20824  014242                     __ptext84:
 20825                           	opt stack 0
 20826  014242                     _ringbuf_num:
 20827                           	opt stack 13
 20828                           
 20829                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20830                           
 20831                           ; BSR set to: 0
 20832                           ;incstack = 0
 20833  014242  0100               	movlb	0	; () banked
 20834  014244  EE20 F006          	lfsr	2,6
 20835  014248  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20836  01424A  26D9               	addwf	fsr2l,f,c
 20837  01424C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20838  01424E  22DA               	addwfc	fsr2h,f,c
 20839  014250  0100               	movlb	0	; () banked
 20840  014252  EE10 F004          	lfsr	1,4
 20841  014256  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20842  014258  26E1               	addwf	fsr1l,f,c
 20843  01425A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20844  01425C  22E2               	addwfc	fsr1h,f,c
 20845  01425E  50DE               	movf	postinc2,w,c
 20846  014260  5CE6               	subwf	postinc1,w,c
 20847  014262  50DE               	movf	postinc2,w,c
 20848  014264  58E6               	subwfb	postinc1,w,c
 20849  014266  A0D8               	btfss	status,0,c
 20850  014268  D028               	goto	l10541
 20851                           
 20852                           ; BSR set to: 0
 20853                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20854  01426A  0100               	movlb	0	; () banked
 20855  01426C  EE20 F004          	lfsr	2,4
 20856  014270  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20857  014272  26D9               	addwf	fsr2l,f,c
 20858  014274  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20859  014276  22DA               	addwfc	fsr2h,f,c
 20860  014278  CFDE F062          	movff	postinc2,??_ringbuf_num
 20861  01427C  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20862  014280  0100               	movlb	0	; () banked
 20863  014282  EE20 F006          	lfsr	2,6
 20864  014286  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20865  014288  26D9               	addwf	fsr2l,f,c
 20866  01428A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20867  01428C  22DA               	addwfc	fsr2h,f,c
 20868  01428E  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20869  014292  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20870  014296  0100               	movlb	0	; () banked
 20871  014298  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 20872  01429A  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 20873  01429C  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 20874  01429E  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 20875  0142A0  0100               	movlb	0	; () banked
 20876  0142A2  5162               	movf	??_ringbuf_num& (0+255),w,b
 20877  0142A4  0100               	movlb	0	; () banked
 20878  0142A6  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 20879  0142A8  0100               	movlb	0	; () banked
 20880  0142AA  6F60               	movwf	?_ringbuf_num& (0+255),b
 20881  0142AC  0100               	movlb	0	; () banked
 20882  0142AE  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20883  0142B0  0100               	movlb	0	; () banked
 20884  0142B2  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 20885  0142B4  0100               	movlb	0	; () banked
 20886  0142B6  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20887                           
 20888                           ; BSR set to: 0
 20889                           ;My_ringbuf.c: 15: } else {
 20890                           
 20891                           ; BSR set to: 0
 20892  0142B8  0012               	return	
 20893  0142BA                     l10541:
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20897  0142BA  0100               	movlb	0	; () banked
 20898  0142BC  EE20 F004          	lfsr	2,4
 20899  0142C0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20900  0142C2  26D9               	addwf	fsr2l,f,c
 20901  0142C4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20902  0142C6  22DA               	addwfc	fsr2h,f,c
 20903  0142C8  CFDE F062          	movff	postinc2,??_ringbuf_num
 20904  0142CC  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20905  0142D0  0100               	movlb	0	; () banked
 20906  0142D2  EE20 F002          	lfsr	2,2
 20907  0142D6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20908  0142D8  26D9               	addwf	fsr2l,f,c
 20909  0142DA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20910  0142DC  22DA               	addwfc	fsr2h,f,c
 20911  0142DE  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20912  0142E2  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20913  0142E6  0100               	movlb	0	; () banked
 20914  0142E8  EE20 F006          	lfsr	2,6
 20915  0142EC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20916  0142EE  26D9               	addwf	fsr2l,f,c
 20917  0142F0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20918  0142F2  22DA               	addwfc	fsr2h,f,c
 20919  0142F4  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 20920  0142F8  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 20921  0142FC  0100               	movlb	0	; () banked
 20922  0142FE  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 20923  014300  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 20924  014302  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 20925  014304  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 20926  014306  0100               	movlb	0	; () banked
 20927  014308  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 20928  01430A  0100               	movlb	0	; () banked
 20929  01430C  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 20930  01430E  0100               	movlb	0	; () banked
 20931  014310  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 20932  014312  0100               	movlb	0	; () banked
 20933  014314  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 20934  014316  0100               	movlb	0	; () banked
 20935  014318  5162               	movf	??_ringbuf_num& (0+255),w,b
 20936  01431A  0100               	movlb	0	; () banked
 20937  01431C  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 20938  01431E  0100               	movlb	0	; () banked
 20939  014320  6F60               	movwf	?_ringbuf_num& (0+255),b
 20940  014322  0100               	movlb	0	; () banked
 20941  014324  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20942  014326  0100               	movlb	0	; () banked
 20943  014328  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 20944  01432A  0100               	movlb	0	; () banked
 20945  01432C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20946                           
 20947                           ; BSR set to: 0
 20948  01432E  0012               	return	
 20949  014330                     __end_of_ringbuf_num:
 20950                           	opt stack 0
 20951                           tblptru	equ	0xFF8
 20952                           tblptrh	equ	0xFF7
 20953                           tblptrl	equ	0xFF6
 20954                           tablat	equ	0xFF5
 20955                           prodh	equ	0xFF4
 20956                           prodl	equ	0xFF3
 20957                           intcon	equ	0xFF2
 20958                           intcon2	equ	0xFF1
 20959                           postinc0	equ	0xFEE
 20960                           wreg	equ	0xFE8
 20961                           indf1	equ	0xFE7
 20962                           postinc1	equ	0xFE6
 20963                           postdec1	equ	0xFE5
 20964                           fsr1h	equ	0xFE2
 20965                           fsr1l	equ	0xFE1
 20966                           indf2	equ	0xFDF
 20967                           postinc2	equ	0xFDE
 20968                           postdec2	equ	0xFDD
 20969                           plusw2	equ	0xFDB
 20970                           fsr2h	equ	0xFDA
 20971                           fsr2l	equ	0xFD9
 20972                           status	equ	0xFD8
 20973                           
 20974 ;; *************** function _put_string_usb *****************
 20975 ;; Defined at:
 20976 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20979 ;;		 -> USB_task@data(1), 
 20980 ;;  len             2   14[BANK0 ] int 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;		None
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  2   12[BANK0 ] int 
 20985 ;; Registers used:
 20986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20987 ;; Tracked objects:
 20988 ;;		On entry : 0/0
 20989 ;;		On exit  : 0/0
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20996 ;;Total ram usage:        4 bytes
 20997 ;; Hardware stack levels used:    1
 20998 ;; Hardware stack levels required when called:   13
 20999 ;; This function calls:
 21000 ;;		_CDCTxService
 21001 ;;		_is_usb_available
 21002 ;;		_putUSBUSART
 21003 ;; This function is called by:
 21004 ;;		_USB_task
 21005 ;; This function uses a non-reentrant model
 21006 ;;
 21007                           
 21008                           	psect	text85
 21009  016A00                     __ptext85:
 21010                           	opt stack 0
 21011  016A00                     _put_string_usb:
 21012                           	opt stack 16
 21013                           
 21014                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;incstack = 0
 21018  016A00  EC05  F0B6         	call	_is_usb_available	;wreg free
 21019  016A04  0900               	iorlw	0
 21020  016A06  B4D8               	btfsc	status,2,c
 21021  016A08  0012               	return	
 21022  016A0A  D002               	goto	l12279
 21023  016A0C                     l12277:
 21024  016A0C  ECDA  F097         	call	_CDCTxService	;wreg free
 21025  016A10                     l12279:
 21026  016A10  5019               	movf	_cdc_trf_state,w,c
 21027  016A12  A4D8               	btfss	status,2,c
 21028  016A14  D7FB               	goto	l12277
 21029                           
 21030                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 21031  016A16  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 21032  016A1A  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 21033  016A1E  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 21034  016A22  ECC8  F0B5         	call	_putUSBUSART	;wreg free
 21035                           
 21036                           ;My_usb_cdc.c: 28: CDCTxService();
 21037  016A26  ECDA  F097         	call	_CDCTxService	;wreg free
 21038  016A2A  0012               	return	
 21039  016A2C                     __end_of_put_string_usb:
 21040                           	opt stack 0
 21041                           tblptru	equ	0xFF8
 21042                           tblptrh	equ	0xFF7
 21043                           tblptrl	equ	0xFF6
 21044                           tablat	equ	0xFF5
 21045                           prodh	equ	0xFF4
 21046                           prodl	equ	0xFF3
 21047                           intcon	equ	0xFF2
 21048                           intcon2	equ	0xFF1
 21049                           postinc0	equ	0xFEE
 21050                           wreg	equ	0xFE8
 21051                           indf1	equ	0xFE7
 21052                           postinc1	equ	0xFE6
 21053                           postdec1	equ	0xFE5
 21054                           fsr1h	equ	0xFE2
 21055                           fsr1l	equ	0xFE1
 21056                           indf2	equ	0xFDF
 21057                           postinc2	equ	0xFDE
 21058                           postdec2	equ	0xFDD
 21059                           plusw2	equ	0xFDB
 21060                           fsr2h	equ	0xFDA
 21061                           fsr2l	equ	0xFD9
 21062                           status	equ	0xFD8
 21063                           
 21064 ;; *************** function _putUSBUSART *****************
 21065 ;; Defined at:
 21066 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 21067 ;; Parameters:    Size  Location     Type
 21068 ;;  data            2    0[BANK0 ] PTR unsigned char 
 21069 ;;		 -> USB_task@data(1), 
 21070 ;;  length          1    2[BANK0 ] unsigned char 
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;		None
 21073 ;; Return value:  Size  Location     Type
 21074 ;;		None               void
 21075 ;; Registers used:
 21076 ;;		wreg, status,2, status,0
 21077 ;; Tracked objects:
 21078 ;;		On entry : 0/0
 21079 ;;		On exit  : 0/0
 21080 ;;		Unchanged: 0/0
 21081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21085 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;Total ram usage:        3 bytes
 21087 ;; Hardware stack levels used:    1
 21088 ;; Hardware stack levels required when called:   11
 21089 ;; This function calls:
 21090 ;;		Nothing
 21091 ;; This function is called by:
 21092 ;;		_put_string_usb
 21093 ;; This function uses a non-reentrant model
 21094 ;;
 21095                           
 21096                           	psect	text86
 21097  016B90                     __ptext86:
 21098                           	opt stack 0
 21099  016B90                     _putUSBUSART:
 21100                           	opt stack 17
 21101                           
 21102                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 21103                           
 21104                           ;incstack = 0
 21105  016B90  98A0               	bcf	4000,4,c	;volatile
 21106                           
 21107                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 21108  016B92  5019               	movf	_cdc_trf_state,w,c
 21109  016B94  A4D8               	btfss	status,2,c
 21110  016B96  D00A               	goto	l11521
 21111                           
 21112                           ;usb_device_cdc.c: 640: {
 21113                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 21114  016B98  C060  F10C         	movff	putUSBUSART@data,_pCDCSrc
 21115  016B9C  C061  F10D         	movff	putUSBUSART@data+1,_pCDCSrc+1
 21116  016BA0  C062  F01A         	movff	putUSBUSART@length,_cdc_tx_len
 21117  016BA4  0E01               	movlw	1
 21118  016BA6  6E17               	movwf	_cdc_mem_type,c
 21119  016BA8  0E01               	movlw	1
 21120  016BAA  6E19               	movwf	_cdc_trf_state,c
 21121  016BAC                     l11521:
 21122                           
 21123                           ;usb_device_cdc.c: 642: }
 21124                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21125  016BAC  88A0               	bsf	4000,4,c	;volatile
 21126  016BAE  0012               	return		;funcret
 21127  016BB0                     __end_of_putUSBUSART:
 21128                           	opt stack 0
 21129                           tblptru	equ	0xFF8
 21130                           tblptrh	equ	0xFF7
 21131                           tblptrl	equ	0xFF6
 21132                           tablat	equ	0xFF5
 21133                           prodh	equ	0xFF4
 21134                           prodl	equ	0xFF3
 21135                           intcon	equ	0xFF2
 21136                           intcon2	equ	0xFF1
 21137                           postinc0	equ	0xFEE
 21138                           wreg	equ	0xFE8
 21139                           indf1	equ	0xFE7
 21140                           postinc1	equ	0xFE6
 21141                           postdec1	equ	0xFE5
 21142                           fsr1h	equ	0xFE2
 21143                           fsr1l	equ	0xFE1
 21144                           indf2	equ	0xFDF
 21145                           postinc2	equ	0xFDE
 21146                           postdec2	equ	0xFDD
 21147                           plusw2	equ	0xFDB
 21148                           fsr2h	equ	0xFDA
 21149                           fsr2l	equ	0xFD9
 21150                           status	equ	0xFD8
 21151                           
 21152 ;; *************** function _get_string_usb *****************
 21153 ;; Defined at:
 21154 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 21155 ;; Parameters:    Size  Location     Type
 21156 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21157 ;;		 -> USB_task@data(1), 
 21158 ;;  len             2   15[BANK0 ] int 
 21159 ;; Auto vars:     Size  Location     Type
 21160 ;;  rx_len          2   18[BANK0 ] int 
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  2   13[BANK0 ] int 
 21163 ;; Registers used:
 21164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/0
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21173 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21174 ;;Total ram usage:        7 bytes
 21175 ;; Hardware stack levels used:    1
 21176 ;; Hardware stack levels required when called:   13
 21177 ;; This function calls:
 21178 ;;		_CDCTxService
 21179 ;;		_getsUSBUSART
 21180 ;;		_is_usb_available
 21181 ;; This function is called by:
 21182 ;;		_USB_task
 21183 ;; This function uses a non-reentrant model
 21184 ;;
 21185                           
 21186                           	psect	text87
 21187  0165EC                     __ptext87:
 21188                           	opt stack 0
 21189  0165EC                     _get_string_usb:
 21190                           	opt stack 16
 21191                           
 21192                           ;My_usb_cdc.c: 33: int rx_len;
 21193                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 21194                           
 21195                           ;incstack = 0
 21196  0165EC  EC05  F0B6         	call	_is_usb_available	;wreg free
 21197  0165F0  0900               	iorlw	0
 21198  0165F2  A4D8               	btfss	status,2,c
 21199  0165F4  D008               	goto	l12295
 21200                           
 21201                           ;My_usb_cdc.c: 36: return 0;
 21202  0165F6  0E00               	movlw	0
 21203  0165F8  0100               	movlb	0	; () banked
 21204  0165FA  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 21205  0165FC  0E00               	movlw	0
 21206  0165FE  6F6D               	movwf	?_get_string_usb& (0+255),b
 21207                           
 21208                           ; BSR set to: 0
 21209  016600  0012               	return	
 21210  016602                     l12293:
 21211  016602  ECDA  F097         	call	_CDCTxService	;wreg free
 21212  016606                     l12295:
 21213  016606  5019               	movf	_cdc_trf_state,w,c
 21214  016608  A4D8               	btfss	status,2,c
 21215  01660A  D7FB               	goto	l12293
 21216                           
 21217                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 21218  01660C  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 21219  016610  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 21220  016614  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 21221  016618  EC4A  F0A6         	call	_getsUSBUSART	;wreg free
 21222  01661C  0100               	movlb	0	; () banked
 21223  01661E  6F71               	movwf	??_get_string_usb& (0+255),b
 21224  016620  0100               	movlb	0	; () banked
 21225  016622  5171               	movf	??_get_string_usb& (0+255),w,b
 21226  016624  0100               	movlb	0	; () banked
 21227  016626  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 21228  016628  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 21229                           
 21230                           ;My_usb_cdc.c: 40: CDCTxService();
 21231  01662A  ECDA  F097         	call	_CDCTxService	;wreg free
 21232                           
 21233                           ;My_usb_cdc.c: 41: return rx_len;
 21234  01662E  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 21235  016632  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 21236  016636  0012               	return	
 21237  016638                     __end_of_get_string_usb:
 21238                           	opt stack 0
 21239                           tblptru	equ	0xFF8
 21240                           tblptrh	equ	0xFF7
 21241                           tblptrl	equ	0xFF6
 21242                           tablat	equ	0xFF5
 21243                           prodh	equ	0xFF4
 21244                           prodl	equ	0xFF3
 21245                           intcon	equ	0xFF2
 21246                           intcon2	equ	0xFF1
 21247                           postinc0	equ	0xFEE
 21248                           wreg	equ	0xFE8
 21249                           indf1	equ	0xFE7
 21250                           postinc1	equ	0xFE6
 21251                           postdec1	equ	0xFE5
 21252                           fsr1h	equ	0xFE2
 21253                           fsr1l	equ	0xFE1
 21254                           indf2	equ	0xFDF
 21255                           postinc2	equ	0xFDE
 21256                           postdec2	equ	0xFDD
 21257                           plusw2	equ	0xFDB
 21258                           fsr2h	equ	0xFDA
 21259                           fsr2l	equ	0xFD9
 21260                           status	equ	0xFD8
 21261                           
 21262 ;; *************** function _is_usb_available *****************
 21263 ;; Defined at:
 21264 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 21265 ;; Parameters:    Size  Location     Type
 21266 ;;		None
 21267 ;; Auto vars:     Size  Location     Type
 21268 ;;		None
 21269 ;; Return value:  Size  Location     Type
 21270 ;;                  1    wreg      unsigned char 
 21271 ;; Registers used:
 21272 ;;		wreg, status,2, status,0
 21273 ;; Tracked objects:
 21274 ;;		On entry : 0/0
 21275 ;;		On exit  : 0/0
 21276 ;;		Unchanged: 0/0
 21277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21282 ;;Total ram usage:        1 bytes
 21283 ;; Hardware stack levels used:    1
 21284 ;; Hardware stack levels required when called:   11
 21285 ;; This function calls:
 21286 ;;		Nothing
 21287 ;; This function is called by:
 21288 ;;		_put_string_usb
 21289 ;;		_get_string_usb
 21290 ;; This function uses a non-reentrant model
 21291 ;;
 21292                           
 21293                           	psect	text88
 21294  016C0A                     __ptext88:
 21295                           	opt stack 0
 21296  016C0A                     _is_usb_available:
 21297                           	opt stack 17
 21298                           
 21299                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 21300                           
 21301                           ;incstack = 0
 21302  016C0A  0E00               	movlw	0
 21303  016C0C  0100               	movlb	0	; () banked
 21304  016C0E  6F60               	movwf	_is_usb_available$5114& (0+255),b
 21305                           
 21306                           ; BSR set to: 0
 21307  016C10  0E1F               	movlw	31
 21308  016C12  6413               	cpfsgt	_USBDeviceState,c	;volatile
 21309  016C14  D005               	goto	l1338
 21310                           
 21311                           ; BSR set to: 0
 21312  016C16  B265               	btfsc	3941,1,c	;volatile
 21313  016C18  D003               	goto	l1338
 21314                           
 21315                           ; BSR set to: 0
 21316  016C1A  0E01               	movlw	1
 21317  016C1C  0100               	movlb	0	; () banked
 21318  016C1E  6F60               	movwf	_is_usb_available$5114& (0+255),b
 21319  016C20                     l1338:
 21320                           
 21321                           ; BSR set to: 0
 21322  016C20  0100               	movlb	0	; () banked
 21323  016C22  5160               	movf	_is_usb_available$5114& (0+255),w,b
 21324  016C24  0012               	return	
 21325  016C26                     __end_of_is_usb_available:
 21326                           	opt stack 0
 21327                           tblptru	equ	0xFF8
 21328                           tblptrh	equ	0xFF7
 21329                           tblptrl	equ	0xFF6
 21330                           tablat	equ	0xFF5
 21331                           prodh	equ	0xFF4
 21332                           prodl	equ	0xFF3
 21333                           intcon	equ	0xFF2
 21334                           intcon2	equ	0xFF1
 21335                           postinc0	equ	0xFEE
 21336                           wreg	equ	0xFE8
 21337                           indf1	equ	0xFE7
 21338                           postinc1	equ	0xFE6
 21339                           postdec1	equ	0xFE5
 21340                           fsr1h	equ	0xFE2
 21341                           fsr1l	equ	0xFE1
 21342                           indf2	equ	0xFDF
 21343                           postinc2	equ	0xFDE
 21344                           postdec2	equ	0xFDD
 21345                           plusw2	equ	0xFDB
 21346                           fsr2h	equ	0xFDA
 21347                           fsr2l	equ	0xFD9
 21348                           status	equ	0xFD8
 21349                           
 21350 ;; *************** function _getsUSBUSART *****************
 21351 ;; Defined at:
 21352 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 21353 ;; Parameters:    Size  Location     Type
 21354 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21355 ;;		 -> USB_task@data(1), 
 21356 ;;  len             1    9[BANK0 ] unsigned char 
 21357 ;; Auto vars:     Size  Location     Type
 21358 ;;		None
 21359 ;; Return value:  Size  Location     Type
 21360 ;;                  1    wreg      unsigned char 
 21361 ;; Registers used:
 21362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21363 ;; Tracked objects:
 21364 ;;		On entry : 0/0
 21365 ;;		On exit  : 0/0
 21366 ;;		Unchanged: 0/0
 21367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21368 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21371 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21372 ;;Total ram usage:        6 bytes
 21373 ;; Hardware stack levels used:    1
 21374 ;; Hardware stack levels required when called:   12
 21375 ;; This function calls:
 21376 ;;		_USBTransferOnePacket
 21377 ;; This function is called by:
 21378 ;;		_get_string_usb
 21379 ;; This function uses a non-reentrant model
 21380 ;;
 21381                           
 21382                           	psect	text89
 21383  014C94                     __ptext89:
 21384                           	opt stack 0
 21385  014C94                     _getsUSBUSART:
 21386                           	opt stack 16
 21387                           
 21388                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 21389                           
 21390                           ; BSR set to: 0
 21391                           ;incstack = 0
 21392  014C94  0E00               	movlw	0
 21393  014C96  6E18               	movwf	_cdc_rx_len,c
 21394                           
 21395                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21396  014C98  5007               	movf	_CDCDataOutHandle,w,c
 21397  014C9A  1008               	iorwf	_CDCDataOutHandle+1,w,c
 21398  014C9C  B4D8               	btfsc	status,2,c
 21399  014C9E  D012               	goto	l11487
 21400  014CA0  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21401  014CA4  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21402  014CA8  AEDF               	btfss	indf2,7,c
 21403  014CAA  D004               	goto	u12900
 21404  014CAC  0100               	movlb	0	; () banked
 21405  014CAE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21406  014CB0  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21407  014CB2  D002               	goto	u12908
 21408  014CB4                     u12900:
 21409  014CB4  0100               	movlb	0	; () banked
 21410  014CB6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21411  014CB8                     u12908:
 21412  014CB8  0100               	movlb	0	; () banked
 21413  014CBA  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21414  014CBC  0100               	movlb	0	; () banked
 21415  014CBE  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 21416  014CC0  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 21417  014CC2  D005               	goto	l11489
 21418  014CC4                     l11487:
 21419  014CC4  0E00               	movlw	0
 21420  014CC6  0100               	movlb	0	; () banked
 21421  014CC8  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 21422  014CCA  0E00               	movlw	0
 21423  014CCC  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 21424  014CCE                     l11489:
 21425                           
 21426                           ; BSR set to: 0
 21427  014CCE  0100               	movlb	0	; () banked
 21428  014CD0  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 21429  014CD2  0100               	movlb	0	; () banked
 21430  014CD4  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 21431  014CD6  A4D8               	btfss	status,2,c
 21432  014CD8  D044               	goto	l11505
 21433                           
 21434                           ; BSR set to: 0
 21435                           ;usb_device_cdc.c: 547: {
 21436                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21437  014CDA  EE20 F001          	lfsr	2,1
 21438  014CDE  5007               	movf	_CDCDataOutHandle,w,c
 21439  014CE0  26D9               	addwf	fsr2l,f,c
 21440  014CE2  5008               	movf	_CDCDataOutHandle+1,w,c
 21441  014CE4  22DA               	addwfc	fsr2h,f,c
 21442  014CE6  0100               	movlb	0	; () banked
 21443  014CE8  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21444  014CEA  5CDE               	subwf	postinc2,w,c
 21445  014CEC  B0D8               	btfsc	status,0,c
 21446  014CEE  D009               	goto	l11495
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21450  014CF0  EE20 F001          	lfsr	2,1
 21451  014CF4  5007               	movf	_CDCDataOutHandle,w,c
 21452  014CF6  26D9               	addwf	fsr2l,f,c
 21453  014CF8  5008               	movf	_CDCDataOutHandle+1,w,c
 21454  014CFA  22DA               	addwfc	fsr2h,f,c
 21455  014CFC  50DF               	movf	indf2,w,c
 21456  014CFE  0100               	movlb	0	; () banked
 21457  014D00  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21458  014D02                     l11495:
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21462  014D02  0E00               	movlw	0
 21463  014D04  6E18               	movwf	_cdc_rx_len,c
 21464  014D06  D015               	goto	l11501
 21465  014D08                     l11497:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21469  014D08  5018               	movf	_cdc_rx_len,w,c
 21470  014D0A  0D01               	mullw	1
 21471  014D0C  0E64               	movlw	low _cdc_data_rx
 21472  014D0E  24F3               	addwf	prodl,w,c
 21473  014D10  6ED9               	movwf	fsr2l,c
 21474  014D12  0E03               	movlw	high _cdc_data_rx
 21475  014D14  20F4               	addwfc	prodh,w,c
 21476  014D16  6EDA               	movwf	fsr2h,c
 21477  014D18  5018               	movf	_cdc_rx_len,w,c
 21478  014D1A  0D01               	mullw	1
 21479  014D1C  50F3               	movf	prodl,w,c
 21480  014D1E  0100               	movlb	0	; () banked
 21481  014D20  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21482  014D22  6EE1               	movwf	fsr1l,c
 21483  014D24  50F4               	movf	prodh,w,c
 21484  014D26  0100               	movlb	0	; () banked
 21485  014D28  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21486  014D2A  6EE2               	movwf	fsr1h,c
 21487  014D2C  CFDF FFE7          	movff	indf2,indf1
 21488                           
 21489                           ; BSR set to: 0
 21490  014D30  2A18               	incf	_cdc_rx_len,f,c
 21491  014D32                     l11501:
 21492                           
 21493                           ; BSR set to: 0
 21494  014D32  0100               	movlb	0	; () banked
 21495  014D34  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21496  014D36  5C18               	subwf	_cdc_rx_len,w,c
 21497  014D38  A0D8               	btfss	status,0,c
 21498  014D3A  D7E6               	goto	l11497
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21502                           
 21503                           ; BSR set to: 0
 21504  014D3C  0E00               	movlw	0
 21505  014D3E  0100               	movlb	0	; () banked
 21506  014D40  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21507  014D42  0E64               	movlw	low _cdc_data_rx
 21508  014D44  0100               	movlb	0	; () banked
 21509  014D46  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21510  014D48  0E03               	movlw	high _cdc_data_rx
 21511  014D4A  0100               	movlb	0	; () banked
 21512  014D4C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21513  014D4E  0E40               	movlw	64
 21514  014D50  0100               	movlb	0	; () banked
 21515  014D52  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21516  014D54  0E02               	movlw	2
 21517  014D56  ECCB  F0A3         	call	_USBTransferOnePacket
 21518  014D5A  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21519  014D5E  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21520  014D62                     l11505:
 21521                           
 21522                           ;usb_device_cdc.c: 567: }
 21523                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21524  014D62  5018               	movf	_cdc_rx_len,w,c
 21525  014D64  0012               	return	
 21526  014D66                     __end_of_getsUSBUSART:
 21527                           	opt stack 0
 21528                           tblptru	equ	0xFF8
 21529                           tblptrh	equ	0xFF7
 21530                           tblptrl	equ	0xFF6
 21531                           tablat	equ	0xFF5
 21532                           prodh	equ	0xFF4
 21533                           prodl	equ	0xFF3
 21534                           intcon	equ	0xFF2
 21535                           intcon2	equ	0xFF1
 21536                           postinc0	equ	0xFEE
 21537                           wreg	equ	0xFE8
 21538                           indf1	equ	0xFE7
 21539                           postinc1	equ	0xFE6
 21540                           postdec1	equ	0xFE5
 21541                           fsr1h	equ	0xFE2
 21542                           fsr1l	equ	0xFE1
 21543                           indf2	equ	0xFDF
 21544                           postinc2	equ	0xFDE
 21545                           postdec2	equ	0xFDD
 21546                           plusw2	equ	0xFDB
 21547                           fsr2h	equ	0xFDA
 21548                           fsr2l	equ	0xFD9
 21549                           status	equ	0xFD8
 21550                           
 21551 ;; *************** function _CDCTxService *****************
 21552 ;; Defined at:
 21553 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 21554 ;; Parameters:    Size  Location     Type
 21555 ;;		None
 21556 ;; Auto vars:     Size  Location     Type
 21557 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21558 ;;  i               1   10[BANK0 ] unsigned char 
 21559 ;; Return value:  Size  Location     Type
 21560 ;;		None               void
 21561 ;; Registers used:
 21562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21563 ;; Tracked objects:
 21564 ;;		On entry : 0/0
 21565 ;;		On exit  : 0/0
 21566 ;;		Unchanged: 0/0
 21567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21569 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21571 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21572 ;;Total ram usage:        5 bytes
 21573 ;; Hardware stack levels used:    1
 21574 ;; Hardware stack levels required when called:   12
 21575 ;; This function calls:
 21576 ;;		_USBTransferOnePacket
 21577 ;; This function is called by:
 21578 ;;		_put_string_usb
 21579 ;;		_get_string_usb
 21580 ;; This function uses a non-reentrant model
 21581 ;;
 21582                           
 21583                           	psect	text90
 21584  012FB4                     __ptext90:
 21585                           	opt stack 0
 21586  012FB4                     _CDCTxService:
 21587                           	opt stack 16
 21588                           
 21589                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21590                           ;usb_device_cdc.c: 896: uint8_t i;
 21591                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21592                           
 21593                           ;incstack = 0
 21594  012FB4  98A0               	bcf	4000,4,c	;volatile
 21595                           
 21596                           ;usb_device_cdc.c: 900: {};
 21597                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21598  012FB6  0101               	movlb	1	; () banked
 21599  012FB8  5113               	movf	_CDCDataInHandle& (0+255),w,b
 21600  012FBA  0101               	movlb	1	; () banked
 21601  012FBC  1114               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21602  012FBE  B4D8               	btfsc	status,2,c
 21603  012FC0  D013               	goto	l11529
 21604                           
 21605                           ; BSR set to: 1
 21606  012FC2  C113  FFD9         	movff	_CDCDataInHandle,fsr2l
 21607  012FC6  C114  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21608  012FCA  0101               	movlb	1	; () banked
 21609  012FCC  AEDF               	btfss	indf2,7,c
 21610  012FCE  D004               	goto	u12960
 21611  012FD0  0100               	movlb	0	; () banked
 21612  012FD2  6B67               	clrf	??_CDCTxService& (0+255),b
 21613  012FD4  2B67               	incf	??_CDCTxService& (0+255),f,b
 21614  012FD6  D002               	goto	u12968
 21615  012FD8                     u12960:
 21616  012FD8  0100               	movlb	0	; () banked
 21617  012FDA  6B67               	clrf	??_CDCTxService& (0+255),b
 21618  012FDC                     u12968:
 21619  012FDC  0100               	movlb	0	; () banked
 21620  012FDE  5167               	movf	??_CDCTxService& (0+255),w,b
 21621  012FE0  0100               	movlb	0	; () banked
 21622  012FE2  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21623  012FE4  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 21624  012FE6  D005               	goto	l11531
 21625  012FE8                     l11529:
 21626  012FE8  0E00               	movlw	0
 21627  012FEA  0100               	movlb	0	; () banked
 21628  012FEC  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 21629  012FEE  0E00               	movlw	0
 21630  012FF0  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21631  012FF2                     l11531:
 21632                           
 21633                           ; BSR set to: 0
 21634  012FF2  0100               	movlb	0	; () banked
 21635  012FF4  5168               	movf	_CDCTxService$2005& (0+255),w,b
 21636  012FF6  0100               	movlb	0	; () banked
 21637  012FF8  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 21638  012FFA  B4D8               	btfsc	status,2,c
 21639  012FFC  D002               	goto	l11535
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;usb_device_cdc.c: 903: {
 21643                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21644  012FFE  88A0               	bsf	4000,4,c	;volatile
 21645                           
 21646                           ;usb_device_cdc.c: 905: return;
 21647  013000  0012               	return	
 21648  013002                     l11535:
 21649                           
 21650                           ; BSR set to: 0
 21651                           ;usb_device_cdc.c: 906: }
 21652                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21653  013002  0E03               	movlw	3
 21654  013004  1819               	xorwf	_cdc_trf_state,w,c
 21655  013006  A4D8               	btfss	status,2,c
 21656  013008  D002               	goto	l504
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21660  01300A  0E00               	movlw	0
 21661  01300C  6E19               	movwf	_cdc_trf_state,c
 21662  01300E                     l504:
 21663                           
 21664                           ; BSR set to: 0
 21665                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21666  01300E  5019               	movf	_cdc_trf_state,w,c
 21667  013010  A4D8               	btfss	status,2,c
 21668  013012  D002               	goto	l11541
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;usb_device_cdc.c: 920: {
 21672                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21673  013014  88A0               	bsf	4000,4,c	;volatile
 21674                           
 21675                           ;usb_device_cdc.c: 922: return;
 21676  013016  0012               	return	
 21677  013018                     l11541:
 21678                           
 21679                           ; BSR set to: 0
 21680                           ;usb_device_cdc.c: 923: }
 21681                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21682  013018  0E02               	movlw	2
 21683  01301A  1819               	xorwf	_cdc_trf_state,w,c
 21684  01301C  A4D8               	btfss	status,2,c
 21685  01301E  D016               	goto	l11547
 21686                           
 21687                           ; BSR set to: 0
 21688                           ;usb_device_cdc.c: 929: {
 21689                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21690  013020  0E01               	movlw	1
 21691  013022  0100               	movlb	0	; () banked
 21692  013024  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21693  013026  0E00               	movlw	0
 21694  013028  0100               	movlb	0	; () banked
 21695  01302A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21696  01302C  0E00               	movlw	0
 21697  01302E  0100               	movlb	0	; () banked
 21698  013030  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21699  013032  0E00               	movlw	0
 21700  013034  0100               	movlb	0	; () banked
 21701  013036  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21702  013038  0E02               	movlw	2
 21703  01303A  ECCB  F0A3         	call	_USBTransferOnePacket
 21704  01303E  C060  F113         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21705  013042  C061  F114         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21706                           
 21707                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21708  013046  0E03               	movlw	3
 21709  013048  6E19               	movwf	_cdc_trf_state,c
 21710                           
 21711                           ;usb_device_cdc.c: 933: }
 21712  01304A  D06A               	goto	l11591
 21713  01304C                     l11547:
 21714                           
 21715                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21716  01304C  0419               	decf	_cdc_trf_state,w,c
 21717  01304E  A4D8               	btfss	status,2,c
 21718  013050  D067               	goto	l11591
 21719                           
 21720                           ;usb_device_cdc.c: 935: {
 21721                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21722  013052  0E40               	movlw	64
 21723  013054  641A               	cpfsgt	_cdc_tx_len,c
 21724  013056  D004               	goto	l509
 21725                           
 21726                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21727  013058  0E40               	movlw	64
 21728  01305A  0100               	movlb	0	; () banked
 21729  01305C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21730  01305E  D002               	goto	l11553
 21731  013060                     l509:
 21732                           
 21733                           ;usb_device_cdc.c: 941: else
 21734                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21735  013060  C01A  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21736  013064                     l11553:
 21737                           
 21738                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21739  013064  0100               	movlb	0	; () banked
 21740  013066  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21741  013068  0800               	sublw	0
 21742  01306A  241A               	addwf	_cdc_tx_len,w,c
 21743  01306C  6E1A               	movwf	_cdc_tx_len,c
 21744                           
 21745                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21746  01306E  0EA4               	movlw	low _cdc_data_tx
 21747  013070  0101               	movlb	1	; () banked
 21748  013072  6F09               	movwf	_pCDCDst& (0+255),b
 21749  013074  0E03               	movlw	high _cdc_data_tx
 21750  013076  0101               	movlb	1	; () banked
 21751  013078  6F0A               	movwf	(_pCDCDst+1)& (0+255),b
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21755  01307A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21756                           
 21757                           ; BSR set to: 1
 21758                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21759  01307E  5017               	movf	_cdc_mem_type,w,c
 21760  013080  B4D8               	btfsc	status,2,c
 21761  013082  D013               	goto	l11569
 21762  013084  D02A               	goto	l11579
 21763  013086                     l11561:
 21764                           
 21765                           ;usb_device_cdc.c: 955: {
 21766                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21767  013086  C10C  FFD9         	movff	_pCDCSrc,fsr2l
 21768  01308A  C10D  FFDA         	movff	_pCDCSrc+1,fsr2h
 21769  01308E  C109  FFE1         	movff	_pCDCDst,fsr1l
 21770  013092  C10A  FFE2         	movff	_pCDCDst+1,fsr1h
 21771  013096  CFDF FFE7          	movff	indf2,indf1
 21772                           
 21773                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21774  01309A  0101               	movlb	1	; () banked
 21775  01309C  4B09               	infsnz	_pCDCDst& (0+255),f,b
 21776  01309E  2B0A               	incf	(_pCDCDst+1)& (0+255),f,b
 21777                           
 21778                           ; BSR set to: 1
 21779                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21780  0130A0  0101               	movlb	1	; () banked
 21781  0130A2  4B0C               	infsnz	_pCDCSrc& (0+255),f,b
 21782  0130A4  2B0D               	incf	(_pCDCSrc+1)& (0+255),f,b
 21783                           
 21784                           ; BSR set to: 1
 21785                           ;usb_device_cdc.c: 959: i--;
 21786  0130A6  0100               	movlb	0	; () banked
 21787  0130A8  076A               	decf	CDCTxService@i& (0+255),f,b
 21788  0130AA                     l11569:
 21789  0130AA  0100               	movlb	0	; () banked
 21790  0130AC  516A               	movf	CDCTxService@i& (0+255),w,b
 21791  0130AE  0100               	movlb	0	; () banked
 21792  0130B0  B4D8               	btfsc	status,2,c
 21793  0130B2  D018               	goto	l11581
 21794  0130B4  D7E8               	goto	l11561
 21795  0130B6                     l11571:
 21796                           
 21797                           ; BSR set to: 0
 21798                           ;usb_device_cdc.c: 965: {
 21799                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21800  0130B6  C10C  FFD9         	movff	_pCDCSrc,fsr2l
 21801  0130BA  C10D  FFDA         	movff	_pCDCSrc+1,fsr2h
 21802  0130BE  C109  FFE1         	movff	_pCDCDst,fsr1l
 21803  0130C2  C10A  FFE2         	movff	_pCDCDst+1,fsr1h
 21804  0130C6  CFDF FFE7          	movff	indf2,indf1
 21805                           
 21806                           ; BSR set to: 0
 21807                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21808  0130CA  0101               	movlb	1	; () banked
 21809  0130CC  4B09               	infsnz	_pCDCDst& (0+255),f,b
 21810  0130CE  2B0A               	incf	(_pCDCDst+1)& (0+255),f,b
 21811                           
 21812                           ; BSR set to: 1
 21813                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21814  0130D0  0101               	movlb	1	; () banked
 21815  0130D2  4B0C               	infsnz	_pCDCSrc& (0+255),f,b
 21816  0130D4  2B0D               	incf	(_pCDCSrc+1)& (0+255),f,b
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;usb_device_cdc.c: 969: i--;
 21820  0130D6  0100               	movlb	0	; () banked
 21821  0130D8  076A               	decf	CDCTxService@i& (0+255),f,b
 21822  0130DA                     l11579:
 21823  0130DA  0100               	movlb	0	; () banked
 21824  0130DC  516A               	movf	CDCTxService@i& (0+255),w,b
 21825  0130DE  0100               	movlb	0	; () banked
 21826  0130E0  A4D8               	btfss	status,2,c
 21827  0130E2  D7E9               	goto	l11571
 21828  0130E4                     l11581:
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;usb_device_cdc.c: 970: }
 21832                           ;usb_device_cdc.c: 971: }
 21833                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21834  0130E4  501A               	movf	_cdc_tx_len,w,c
 21835  0130E6  A4D8               	btfss	status,2,c
 21836  0130E8  D009               	goto	l11589
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;usb_device_cdc.c: 978: {
 21840                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21841  0130EA  0E40               	movlw	64
 21842  0130EC  0100               	movlb	0	; () banked
 21843  0130EE  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21844  0130F0  A4D8               	btfss	status,2,c
 21845  0130F2  D002               	goto	l11587
 21846                           
 21847                           ; BSR set to: 0
 21848                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21849  0130F4  0E02               	movlw	2
 21850  0130F6  D001               	goto	L4
 21851  0130F8                     l11587:
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;usb_device_cdc.c: 981: else
 21855                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21856  0130F8  0E03               	movlw	3
 21857  0130FA                     L4:
 21858  0130FA  6E19               	movwf	_cdc_trf_state,c
 21859  0130FC                     l11589:
 21860                           
 21861                           ; BSR set to: 0
 21862                           ;usb_device_cdc.c: 983: }
 21863                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21864  0130FC  0E01               	movlw	1
 21865  0130FE  0100               	movlb	0	; () banked
 21866  013100  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21867  013102  0EA4               	movlw	low _cdc_data_tx
 21868  013104  0100               	movlb	0	; () banked
 21869  013106  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21870  013108  0E03               	movlw	high _cdc_data_tx
 21871  01310A  0100               	movlb	0	; () banked
 21872  01310C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21873  01310E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21874  013112  0E02               	movlw	2
 21875  013114  ECCB  F0A3         	call	_USBTransferOnePacket
 21876  013118  C060  F113         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21877  01311C  C061  F114         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21878  013120                     l11591:
 21879                           
 21880                           ;usb_device_cdc.c: 986: }
 21881                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21882  013120  88A0               	bsf	4000,4,c	;volatile
 21883  013122  0012               	return		;funcret
 21884  013124                     __end_of_CDCTxService:
 21885                           	opt stack 0
 21886                           tblptru	equ	0xFF8
 21887                           tblptrh	equ	0xFF7
 21888                           tblptrl	equ	0xFF6
 21889                           tablat	equ	0xFF5
 21890                           prodh	equ	0xFF4
 21891                           prodl	equ	0xFF3
 21892                           intcon	equ	0xFF2
 21893                           intcon2	equ	0xFF1
 21894                           postinc0	equ	0xFEE
 21895                           wreg	equ	0xFE8
 21896                           indf1	equ	0xFE7
 21897                           postinc1	equ	0xFE6
 21898                           postdec1	equ	0xFE5
 21899                           fsr1h	equ	0xFE2
 21900                           fsr1l	equ	0xFE1
 21901                           indf2	equ	0xFDF
 21902                           postinc2	equ	0xFDE
 21903                           postdec2	equ	0xFDD
 21904                           plusw2	equ	0xFDB
 21905                           fsr2h	equ	0xFDA
 21906                           fsr2l	equ	0xFD9
 21907                           status	equ	0xFD8
 21908                           
 21909 ;; *************** function _USBTransferOnePacket *****************
 21910 ;; Defined at:
 21911 ;;		line 995 in file "../My_library/usb/usb_device.c"
 21912 ;; Parameters:    Size  Location     Type
 21913 ;;  ep              1    wreg     unsigned char 
 21914 ;;  dir             1    0[BANK0 ] unsigned char 
 21915 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21916 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21917 ;;  len             1    3[BANK0 ] unsigned char 
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;  ep              1    4[BANK0 ] unsigned char 
 21920 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21921 ;;		 -> NULL(0), BDT(48), 
 21922 ;; Return value:  Size  Location     Type
 21923 ;;                  2    0[BANK0 ] PTR void 
 21924 ;; Registers used:
 21925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21926 ;; Tracked objects:
 21927 ;;		On entry : 0/0
 21928 ;;		On exit  : 0/0
 21929 ;;		Unchanged: 0/0
 21930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21932 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21934 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21935 ;;Total ram usage:        7 bytes
 21936 ;; Hardware stack levels used:    1
 21937 ;; Hardware stack levels required when called:   11
 21938 ;; This function calls:
 21939 ;;		Nothing
 21940 ;; This function is called by:
 21941 ;;		_getsUSBUSART
 21942 ;;		_CDCTxService
 21943 ;;		_USBCDCEventHandler
 21944 ;; This function uses a non-reentrant model
 21945 ;;
 21946                           
 21947                           	psect	text91
 21948  014796                     __ptext91:
 21949                           	opt stack 0
 21950  014796                     _USBTransferOnePacket:
 21951                           	opt stack 16
 21952                           
 21953                           ;incstack = 0
 21954                           ;USBTransferOnePacket@ep stored from wreg
 21955  014796  0100               	movlb	0	; () banked
 21956  014798  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21957                           
 21958                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21959                           ;usb_device.c: 1000: if(dir != 0)
 21960  01479A  0100               	movlb	0	; () banked
 21961  01479C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21962  01479E  0100               	movlb	0	; () banked
 21963  0147A0  B4D8               	btfsc	status,2,c
 21964  0147A2  D008               	goto	l11049
 21965                           
 21966                           ; BSR set to: 0
 21967                           ;usb_device.c: 1001: {
 21968                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21969  0147A4  0100               	movlb	0	; () banked
 21970  0147A6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21971  0147A8  0D02               	mullw	2
 21972  0147AA  0EF5               	movlw	low _pBDTEntryIn
 21973  0147AC  24F3               	addwf	prodl,w,c
 21974  0147AE  6ED9               	movwf	fsr2l,c
 21975  0147B0  0E00               	movlw	high _pBDTEntryIn
 21976  0147B2  D007               	goto	L5
 21977  0147B4                     l11049:
 21978                           
 21979                           ; BSR set to: 0
 21980                           ;usb_device.c: 1005: else
 21981                           ;usb_device.c: 1006: {
 21982                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21983  0147B4  0100               	movlb	0	; () banked
 21984  0147B6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21985  0147B8  0D02               	mullw	2
 21986  0147BA  0E00               	movlw	low _pBDTEntryOut
 21987  0147BC  24F3               	addwf	prodl,w,c
 21988  0147BE  6ED9               	movwf	fsr2l,c
 21989  0147C0  0E01               	movlw	high _pBDTEntryOut
 21990  0147C2                     L5:
 21991  0147C2  20F4               	addwfc	prodh,w,c
 21992  0147C4  6EDA               	movwf	fsr2h,c
 21993  0147C6  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21994  0147CA  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21995                           
 21996                           ; BSR set to: 0
 21997                           ;usb_device.c: 1009: }
 21998                           ;usb_device.c: 1013: if(handle == 0)
 21999                           
 22000                           ; BSR set to: 0
 22001  0147CE  0100               	movlb	0	; () banked
 22002  0147D0  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22003  0147D2  0100               	movlb	0	; () banked
 22004  0147D4  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22005  0147D6  A4D8               	btfss	status,2,c
 22006  0147D8  D007               	goto	l11057
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;usb_device.c: 1014: {
 22010                           ;usb_device.c: 1015: return 0;
 22011  0147DA  0E00               	movlw	0
 22012  0147DC  0100               	movlb	0	; () banked
 22013  0147DE  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 22014  0147E0  0E00               	movlw	0
 22015  0147E2  0100               	movlb	0	; () banked
 22016  0147E4  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 22017                           
 22018                           ; BSR set to: 0
 22019  0147E6  0012               	return	
 22020  0147E8                     l11057:
 22021                           
 22022                           ; BSR set to: 0
 22023                           ;usb_device.c: 1016: }
 22024                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22025  0147E8  0100               	movlb	0	; () banked
 22026  0147EA  EE20 F002          	lfsr	2,2
 22027  0147EE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22028  0147F0  26D9               	addwf	fsr2l,f,c
 22029  0147F2  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22030  0147F4  22DA               	addwfc	fsr2h,f,c
 22031  0147F6  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 22032  0147FA  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 22033                           
 22034                           ;usb_device.c: 1030: handle->CNT = len;
 22035  0147FE  0100               	movlb	0	; () banked
 22036  014800  EE20 F001          	lfsr	2,1
 22037  014804  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22038  014806  26D9               	addwf	fsr2l,f,c
 22039  014808  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22040  01480A  22DA               	addwfc	fsr2h,f,c
 22041  01480C  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22045  014810  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22046  014814  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22047  014818  0E40               	movlw	64
 22048  01481A  16DF               	andwf	indf2,f,c
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22052  01481C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22053  014820  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22054  014824  0E00               	movlw	0
 22055  014826  86DB               	bsf	plusw2,3,c
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22059  014828  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22060  01482C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22061  014830  0E00               	movlw	0
 22062  014832  8EDB               	bsf	plusw2,7,c
 22063                           
 22064                           ; BSR set to: 0
 22065                           ;usb_device.c: 1036: if(dir != 0)
 22066  014834  0100               	movlb	0	; () banked
 22067  014836  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22068  014838  0100               	movlb	0	; () banked
 22069  01483A  B4D8               	btfsc	status,2,c
 22070  01483C  D008               	goto	l11069
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;usb_device.c: 1037: {
 22074                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22075  01483E  0100               	movlb	0	; () banked
 22076  014840  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22077  014842  0D02               	mullw	2
 22078  014844  0EF5               	movlw	low _pBDTEntryIn
 22079  014846  24F3               	addwf	prodl,w,c
 22080  014848  6ED9               	movwf	fsr2l,c
 22081  01484A  0E00               	movlw	high _pBDTEntryIn
 22082  01484C  D007               	goto	L6
 22083  01484E                     l11069:
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;usb_device.c: 1041: else
 22087                           ;usb_device.c: 1042: {
 22088                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22089  01484E  0100               	movlb	0	; () banked
 22090  014850  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22091  014852  0D02               	mullw	2
 22092  014854  0E00               	movlw	low _pBDTEntryOut
 22093  014856  24F3               	addwf	prodl,w,c
 22094  014858  6ED9               	movwf	fsr2l,c
 22095  01485A  0E01               	movlw	high _pBDTEntryOut
 22096  01485C                     L6:
 22097  01485C  20F4               	addwfc	prodh,w,c
 22098  01485E  6EDA               	movwf	fsr2h,c
 22099  014860  0E04               	movlw	4
 22100  014862  1ADF               	xorwf	indf2,f,c
 22101                           
 22102                           ; BSR set to: 0
 22103                           ;usb_device.c: 1045: }
 22104                           ;usb_device.c: 1046: return (void*)handle;
 22105                           
 22106                           ; BSR set to: 0
 22107  014864  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22108  014868  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22109  01486C  0012               	return	
 22110  01486E                     __end_of_USBTransferOnePacket:
 22111                           	opt stack 0
 22112                           tblptru	equ	0xFF8
 22113                           tblptrh	equ	0xFF7
 22114                           tblptrl	equ	0xFF6
 22115                           tablat	equ	0xFF5
 22116                           prodh	equ	0xFF4
 22117                           prodl	equ	0xFF3
 22118                           intcon	equ	0xFF2
 22119                           intcon2	equ	0xFF1
 22120                           postinc0	equ	0xFEE
 22121                           wreg	equ	0xFE8
 22122                           indf1	equ	0xFE7
 22123                           postinc1	equ	0xFE6
 22124                           postdec1	equ	0xFE5
 22125                           fsr1h	equ	0xFE2
 22126                           fsr1l	equ	0xFE1
 22127                           indf2	equ	0xFDF
 22128                           postinc2	equ	0xFDE
 22129                           postdec2	equ	0xFDD
 22130                           plusw2	equ	0xFDB
 22131                           fsr2h	equ	0xFDA
 22132                           fsr2l	equ	0xFD9
 22133                           status	equ	0xFD8
 22134                           
 22135 ;; *************** function _RTCC_task *****************
 22136 ;; Defined at:
 22137 ;;		line 352 in file "../My_library/My_RTCC.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;		None
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;		None
 22142 ;; Return value:  Size  Location     Type
 22143 ;;		None               void
 22144 ;; Registers used:
 22145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/0
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22155 ;;Total ram usage:        0 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:   15
 22158 ;; This function calls:
 22159 ;;		_RTCC_from_RTCC
 22160 ;; This function is called by:
 22161 ;;		_main
 22162 ;; This function uses a non-reentrant model
 22163 ;;
 22164                           
 22165                           	psect	text92
 22166  016772                     __ptext92:
 22167                           	opt stack 0
 22168  016772                     _RTCC_task:
 22169                           	opt stack 15
 22170                           
 22171                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 22172                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 22173                           
 22174                           ; BSR set to: 0
 22175                           ;incstack = 0
 22176  016772  010F               	movlb	15	; () banked
 22177  016774  B93F               	btfsc	63,4,b	;volatile
 22178  016776  0012               	return	
 22179                           
 22180                           ; BSR set to: 15
 22181                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 22182                           
 22183                           ; BSR set to: 15
 22184                           
 22185                           ; BSR set to: 15
 22186  016778  0E00               	movlw	0
 22187  01677A  B73F               	btfsc	63,3,b	;volatile
 22188  01677C  0E01               	movlw	1
 22189  01677E  0101               	movlb	1	; () banked
 22190  016780  6F86               	movwf	(_now+12)& (0+255),b
 22191                           
 22192                           ; BSR set to: 1
 22193                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 22194  016782  0101               	movlb	1	; () banked
 22195  016784  511F               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22196  016786  0101               	movlb	1	; () banked
 22197  016788  1986               	xorwf	(_now+12)& (0+255),w,b
 22198  01678A  B4D8               	btfsc	status,2,c
 22199  01678C  0012               	return	
 22200                           
 22201                           ; BSR set to: 1
 22202                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 22203  01678E  C186  F11F         	movff	_now+12,RTCC_task@prev_halfsec
 22204                           
 22205                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 22206  016792  C186  F185         	movff	_now+12,_now+11
 22207                           
 22208                           ; BSR set to: 1
 22209                           ;My_RTCC.c: 359: time_change_flag = 1;
 22210  016796  0E01               	movlw	1
 22211  016798  6E22               	movwf	_time_change_flag,c
 22212                           
 22213                           ; BSR set to: 1
 22214                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 22215  01679A  0E7A               	movlw	low _now
 22216  01679C  0100               	movlb	0	; () banked
 22217  01679E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22218  0167A0  0E01               	movlw	high _now
 22219  0167A2  0100               	movlb	0	; () banked
 22220  0167A4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22221  0167A6  EC2D  F0B6         	call	_RTCC_from_RTCC	;wreg free
 22222  0167AA  0012               	return	
 22223  0167AC                     __end_of_RTCC_task:
 22224                           	opt stack 0
 22225                           tblptru	equ	0xFF8
 22226                           tblptrh	equ	0xFF7
 22227                           tblptrl	equ	0xFF6
 22228                           tablat	equ	0xFF5
 22229                           prodh	equ	0xFF4
 22230                           prodl	equ	0xFF3
 22231                           intcon	equ	0xFF2
 22232                           intcon2	equ	0xFF1
 22233                           postinc0	equ	0xFEE
 22234                           wreg	equ	0xFE8
 22235                           indf1	equ	0xFE7
 22236                           postinc1	equ	0xFE6
 22237                           postdec1	equ	0xFE5
 22238                           fsr1h	equ	0xFE2
 22239                           fsr1l	equ	0xFE1
 22240                           indf2	equ	0xFDF
 22241                           postinc2	equ	0xFDE
 22242                           postdec2	equ	0xFDD
 22243                           plusw2	equ	0xFDB
 22244                           fsr2h	equ	0xFDA
 22245                           fsr2l	equ	0xFD9
 22246                           status	equ	0xFD8
 22247                           
 22248 ;; *************** function _RTCC_from_RTCC *****************
 22249 ;; Defined at:
 22250 ;;		line 199 in file "../My_library/My_RTCC.c"
 22251 ;; Parameters:    Size  Location     Type
 22252 ;;  tm              2   38[BANK0 ] PTR struct .
 22253 ;;		 -> now(14), 
 22254 ;; Auto vars:     Size  Location     Type
 22255 ;;		None
 22256 ;; Return value:  Size  Location     Type
 22257 ;;		None               void
 22258 ;; Registers used:
 22259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22260 ;; Tracked objects:
 22261 ;;		On entry : 0/0
 22262 ;;		On exit  : 0/0
 22263 ;;		Unchanged: 0/0
 22264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22269 ;;Total ram usage:        2 bytes
 22270 ;; Hardware stack levels used:    1
 22271 ;; Hardware stack levels required when called:   14
 22272 ;; This function calls:
 22273 ;;		_RTCC_to_caltime
 22274 ;;		_caltime_to_epoch
 22275 ;; This function is called by:
 22276 ;;		_RTCC_init
 22277 ;;		_display_time_1602
 22278 ;;		_RTCC_adjust_time_inc
 22279 ;;		_RTCC_adjust_time_dec
 22280 ;;		_RTCC_task
 22281 ;;		_print_time
 22282 ;;		_display_time_0802
 22283 ;; This function uses a non-reentrant model
 22284 ;;
 22285                           
 22286                           	psect	text93
 22287  016C5A                     __ptext93:
 22288                           	opt stack 0
 22289  016C5A                     _RTCC_from_RTCC:
 22290                           	opt stack 11
 22291                           
 22292                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 22293                           
 22294                           ;incstack = 0
 22295  016C5A  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22296  016C5E  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22297  016C62  EC29  F0AA         	call	_RTCC_to_caltime	;wreg free
 22298                           
 22299                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 22300  016C66  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22301  016C6A  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22302  016C6E  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22303  016C72  0012               	return		;funcret
 22304  016C74                     __end_of_RTCC_from_RTCC:
 22305                           	opt stack 0
 22306                           tblptru	equ	0xFF8
 22307                           tblptrh	equ	0xFF7
 22308                           tblptrl	equ	0xFF6
 22309                           tablat	equ	0xFF5
 22310                           prodh	equ	0xFF4
 22311                           prodl	equ	0xFF3
 22312                           intcon	equ	0xFF2
 22313                           intcon2	equ	0xFF1
 22314                           postinc0	equ	0xFEE
 22315                           wreg	equ	0xFE8
 22316                           indf1	equ	0xFE7
 22317                           postinc1	equ	0xFE6
 22318                           postdec1	equ	0xFE5
 22319                           fsr1h	equ	0xFE2
 22320                           fsr1l	equ	0xFE1
 22321                           indf2	equ	0xFDF
 22322                           postinc2	equ	0xFDE
 22323                           postdec2	equ	0xFDD
 22324                           plusw2	equ	0xFDB
 22325                           fsr2h	equ	0xFDA
 22326                           fsr2l	equ	0xFD9
 22327                           status	equ	0xFD8
 22328                           
 22329 ;; *************** function _caltime_to_epoch *****************
 22330 ;; Defined at:
 22331 ;;		line 179 in file "../My_library/My_RTCC.c"
 22332 ;; Parameters:    Size  Location     Type
 22333 ;;  tm              2   25[BANK0 ] PTR struct .
 22334 ;;		 -> now(14), 
 22335 ;; Auto vars:     Size  Location     Type
 22336 ;;  month           1   37[BANK0 ] unsigned char 
 22337 ;;  month           1   32[BANK0 ] unsigned char 
 22338 ;;  year            1   31[BANK0 ] unsigned char 
 22339 ;;  epoch           4   33[BANK0 ] unsigned long 
 22340 ;; Return value:  Size  Location     Type
 22341 ;;		None               void
 22342 ;; Registers used:
 22343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22344 ;; Tracked objects:
 22345 ;;		On entry : 0/0
 22346 ;;		On exit  : 0/0
 22347 ;;		Unchanged: 0/0
 22348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22350 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22352 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22353 ;;Total ram usage:       13 bytes
 22354 ;; Hardware stack levels used:    1
 22355 ;; Hardware stack levels required when called:   13
 22356 ;; This function calls:
 22357 ;;		___lmul
 22358 ;;		_month_length
 22359 ;; This function is called by:
 22360 ;;		_RTCC_from_RTCC
 22361 ;;		_RTCC_from_caltime
 22362 ;; This function uses a non-reentrant model
 22363 ;;
 22364                           
 22365                           	psect	text94
 22366  011BB6                     __ptext94:
 22367                           	opt stack 0
 22368  011BB6                     _caltime_to_epoch:
 22369                           	opt stack 11
 22370                           
 22371                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 22372                           
 22373                           ;incstack = 0
 22374  011BB6  0E00               	movlw	0
 22375  011BB8  0100               	movlb	0	; () banked
 22376  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22377  011BBC  0E00               	movlw	0
 22378  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22379  011BC0  0E00               	movlw	0
 22380  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22381  011BC4  0E00               	movlw	0
 22382  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22383                           
 22384                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 22385  011BC8  0E00               	movlw	0
 22386  011BCA  0100               	movlb	0	; () banked
 22387  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22388  011BCE  D037               	goto	l10683
 22389  011BD0                     l10669:
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 22393  011BD0  0E01               	movlw	1
 22394  011BD2  0100               	movlb	0	; () banked
 22395  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22396  011BD6                     l10671:
 22397                           
 22398                           ; BSR set to: 0
 22399  011BD6  0E0C               	movlw	12
 22400  011BD8  0100               	movlb	0	; () banked
 22401  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22402  011BDC  D001               	goto	l10675
 22403  011BDE  D02D               	goto	l10681
 22404  011BE0                     l10675:
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22408  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22409  011BE4  0100               	movlb	0	; () banked
 22410  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22411  011BE8  EC5C  F0A3         	call	_month_length
 22412  011BEC  0100               	movlb	0	; () banked
 22413  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22414  011BF0  0100               	movlb	0	; () banked
 22415  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22416  011BF4  0100               	movlb	0	; () banked
 22417  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22418  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22419  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22420  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22421  011BFE  0E80               	movlw	128
 22422  011C00  0100               	movlb	0	; () banked
 22423  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22424  011C04  0E51               	movlw	81
 22425  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22426  011C08  0E01               	movlw	1
 22427  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22428  011C0C  0E00               	movlw	0
 22429  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22430  011C10  EC75  F0AF         	call	___lmul	;wreg free
 22431  011C14  0100               	movlb	0	; () banked
 22432  011C16  516D               	movf	?___lmul& (0+255),w,b
 22433  011C18  0100               	movlb	0	; () banked
 22434  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22435  011C1C  0100               	movlb	0	; () banked
 22436  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 22437  011C20  0100               	movlb	0	; () banked
 22438  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22439  011C24  0100               	movlb	0	; () banked
 22440  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 22441  011C28  0100               	movlb	0	; () banked
 22442  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22443  011C2C  0100               	movlb	0	; () banked
 22444  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 22445  011C30  0100               	movlb	0	; () banked
 22446  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22447                           
 22448                           ; BSR set to: 0
 22449  011C34  0100               	movlb	0	; () banked
 22450  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22451  011C38  D7CE               	goto	l10671
 22452  011C3A                     l10681:
 22453                           
 22454                           ; BSR set to: 0
 22455  011C3A  0100               	movlb	0	; () banked
 22456  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22457  011C3E                     l10683:
 22458                           
 22459                           ; BSR set to: 0
 22460  011C3E  0100               	movlb	0	; () banked
 22461  011C40  EE20 F00A          	lfsr	2,10
 22462  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22463  011C46  26D9               	addwf	fsr2l,f,c
 22464  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22465  011C4A  22DA               	addwfc	fsr2h,f,c
 22466  011C4C  50DE               	movf	postinc2,w,c
 22467  011C4E  0100               	movlb	0	; () banked
 22468  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22469  011C52  A0D8               	btfss	status,0,c
 22470  011C54  D7BD               	goto	l10669
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;My_RTCC.c: 184: }
 22474                           ;My_RTCC.c: 185: }
 22475                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 22476                           
 22477                           ; BSR set to: 0
 22478  011C56  0E01               	movlw	1
 22479  011C58  0100               	movlb	0	; () banked
 22480  011C5A  6F80               	movwf	caltime_to_epoch@month_3637& (0+255),b
 22481  011C5C  D032               	goto	l10691
 22482  011C5E                     l10687:
 22483                           
 22484                           ; BSR set to: 0
 22485                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22486  011C5E  C080  F066         	movff	caltime_to_epoch@month_3637,month_length@month
 22487  011C62  0100               	movlb	0	; () banked
 22488  011C64  EE20 F00A          	lfsr	2,10
 22489  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22490  011C6A  26D9               	addwf	fsr2l,f,c
 22491  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22492  011C6E  22DA               	addwfc	fsr2h,f,c
 22493  011C70  50DF               	movf	indf2,w,c
 22494  011C72  EC5C  F0A3         	call	_month_length
 22495  011C76  0100               	movlb	0	; () banked
 22496  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22497  011C7A  0100               	movlb	0	; () banked
 22498  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22499  011C7E  0100               	movlb	0	; () banked
 22500  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22501  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22502  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22503  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22504  011C88  0E80               	movlw	128
 22505  011C8A  0100               	movlb	0	; () banked
 22506  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22507  011C8E  0E51               	movlw	81
 22508  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22509  011C92  0E01               	movlw	1
 22510  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22511  011C96  0E00               	movlw	0
 22512  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22513  011C9A  EC75  F0AF         	call	___lmul	;wreg free
 22514  011C9E  0100               	movlb	0	; () banked
 22515  011CA0  516D               	movf	?___lmul& (0+255),w,b
 22516  011CA2  0100               	movlb	0	; () banked
 22517  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22518  011CA6  0100               	movlb	0	; () banked
 22519  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 22520  011CAA  0100               	movlb	0	; () banked
 22521  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22522  011CAE  0100               	movlb	0	; () banked
 22523  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22524  011CB2  0100               	movlb	0	; () banked
 22525  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22526  011CB6  0100               	movlb	0	; () banked
 22527  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22528  011CBA  0100               	movlb	0	; () banked
 22529  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22530                           
 22531                           ; BSR set to: 0
 22532  011CBE  0100               	movlb	0	; () banked
 22533  011CC0  2B80               	incf	caltime_to_epoch@month_3637& (0+255),f,b
 22534  011CC2                     l10691:
 22535                           
 22536                           ; BSR set to: 0
 22537  011CC2  0100               	movlb	0	; () banked
 22538  011CC4  EE20 F009          	lfsr	2,9
 22539  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22540  011CCA  26D9               	addwf	fsr2l,f,c
 22541  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22542  011CCE  22DA               	addwfc	fsr2h,f,c
 22543  011CD0  50DE               	movf	postinc2,w,c
 22544  011CD2  0100               	movlb	0	; () banked
 22545  011CD4  5D80               	subwf	caltime_to_epoch@month_3637& (0+255),w,b
 22546  011CD6  A0D8               	btfss	status,0,c
 22547  011CD8  D7C2               	goto	l10687
 22548                           
 22549                           ; BSR set to: 0
 22550                           ;My_RTCC.c: 188: }
 22551                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22552                           
 22553                           ; BSR set to: 0
 22554  011CDA  0EFF               	movlw	255
 22555  011CDC  0100               	movlb	0	; () banked
 22556  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22557  011CE0  0EFF               	movlw	255
 22558  011CE2  0100               	movlb	0	; () banked
 22559  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22560  011CE6  0100               	movlb	0	; () banked
 22561  011CE8  EE20 F008          	lfsr	2,8
 22562  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22563  011CEE  26D9               	addwf	fsr2l,f,c
 22564  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22565  011CF2  22DA               	addwfc	fsr2h,f,c
 22566  011CF4  50DF               	movf	indf2,w,c
 22567  011CF6  0100               	movlb	0	; () banked
 22568  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22569  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22570  011CFC  0100               	movlb	0	; () banked
 22571  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22572  011D00  0100               	movlb	0	; () banked
 22573  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22574  011D04  0100               	movlb	0	; () banked
 22575  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22576  011D08  0100               	movlb	0	; () banked
 22577  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22578  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22579  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22580  011D14  0100               	movlb	0	; () banked
 22581  011D16  0E00               	movlw	0
 22582  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22583  011D1A  0EFF               	movlw	-1
 22584  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22585  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22586  011D20  0E80               	movlw	128
 22587  011D22  0100               	movlb	0	; () banked
 22588  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22589  011D26  0E51               	movlw	81
 22590  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22591  011D2A  0E01               	movlw	1
 22592  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22593  011D2E  0E00               	movlw	0
 22594  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22595  011D32  EC75  F0AF         	call	___lmul	;wreg free
 22596  011D36  0100               	movlb	0	; () banked
 22597  011D38  516D               	movf	?___lmul& (0+255),w,b
 22598  011D3A  0100               	movlb	0	; () banked
 22599  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22600  011D3E  0100               	movlb	0	; () banked
 22601  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 22602  011D42  0100               	movlb	0	; () banked
 22603  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22604  011D46  0100               	movlb	0	; () banked
 22605  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 22606  011D4A  0100               	movlb	0	; () banked
 22607  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22608  011D4E  0100               	movlb	0	; () banked
 22609  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 22610  011D52  0100               	movlb	0	; () banked
 22611  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22612                           
 22613                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 22614  011D56  0100               	movlb	0	; () banked
 22615  011D58  EE20 F006          	lfsr	2,6
 22616  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22617  011D5E  26D9               	addwf	fsr2l,f,c
 22618  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22619  011D62  22DA               	addwfc	fsr2h,f,c
 22620  011D64  50DF               	movf	indf2,w,c
 22621  011D66  0100               	movlb	0	; () banked
 22622  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22623  011D6A  0100               	movlb	0	; () banked
 22624  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22625  011D6E  0100               	movlb	0	; () banked
 22626  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22627  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22628  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22629  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22630  011D78  0E10               	movlw	16
 22631  011D7A  0100               	movlb	0	; () banked
 22632  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22633  011D7E  0E0E               	movlw	14
 22634  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22635  011D82  0E00               	movlw	0
 22636  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22637  011D86  0E00               	movlw	0
 22638  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22639  011D8A  EC75  F0AF         	call	___lmul	;wreg free
 22640  011D8E  0100               	movlb	0	; () banked
 22641  011D90  516D               	movf	?___lmul& (0+255),w,b
 22642  011D92  0100               	movlb	0	; () banked
 22643  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22644  011D96  0100               	movlb	0	; () banked
 22645  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 22646  011D9A  0100               	movlb	0	; () banked
 22647  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22648  011D9E  0100               	movlb	0	; () banked
 22649  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22650  011DA2  0100               	movlb	0	; () banked
 22651  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22652  011DA6  0100               	movlb	0	; () banked
 22653  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22654  011DAA  0100               	movlb	0	; () banked
 22655  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22656                           
 22657                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 22658  011DAE  0100               	movlb	0	; () banked
 22659  011DB0  EE20 F005          	lfsr	2,5
 22660  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22661  011DB6  26D9               	addwf	fsr2l,f,c
 22662  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22663  011DBA  22DA               	addwfc	fsr2h,f,c
 22664  011DBC  50DF               	movf	indf2,w,c
 22665  011DBE  0100               	movlb	0	; () banked
 22666  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22667  011DC2  0100               	movlb	0	; () banked
 22668  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22669  011DC6  0100               	movlb	0	; () banked
 22670  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22671  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22672  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22673  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22674  011DD0  0E3C               	movlw	60
 22675  011DD2  0100               	movlb	0	; () banked
 22676  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22677  011DD6  0E00               	movlw	0
 22678  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22679  011DDA  0E00               	movlw	0
 22680  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22681  011DDE  0E00               	movlw	0
 22682  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22683  011DE2  EC75  F0AF         	call	___lmul	;wreg free
 22684  011DE6  0100               	movlb	0	; () banked
 22685  011DE8  516D               	movf	?___lmul& (0+255),w,b
 22686  011DEA  0100               	movlb	0	; () banked
 22687  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22688  011DEE  0100               	movlb	0	; () banked
 22689  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 22690  011DF2  0100               	movlb	0	; () banked
 22691  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22692  011DF6  0100               	movlb	0	; () banked
 22693  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 22694  011DFA  0100               	movlb	0	; () banked
 22695  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22696  011DFE  0100               	movlb	0	; () banked
 22697  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 22698  011E02  0100               	movlb	0	; () banked
 22699  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22700                           
 22701                           ; BSR set to: 0
 22702                           ;My_RTCC.c: 192: epoch += tm->ss;
 22703  011E06  0100               	movlb	0	; () banked
 22704  011E08  EE20 F004          	lfsr	2,4
 22705  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22706  011E0E  26D9               	addwf	fsr2l,f,c
 22707  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22708  011E12  22DA               	addwfc	fsr2h,f,c
 22709  011E14  50DF               	movf	indf2,w,c
 22710  011E16  0100               	movlb	0	; () banked
 22711  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22712  011E1A  0100               	movlb	0	; () banked
 22713  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22714  011E1E  0100               	movlb	0	; () banked
 22715  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22716  011E22  0E00               	movlw	0
 22717  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22718  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22719  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;My_RTCC.c: 194: tm->epoch = epoch;
 22723  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 22724  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 22725  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 22726  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 22727  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 22728  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 22729                           
 22730                           ; BSR set to: 0
 22731  011E42  0012               	return		;funcret
 22732  011E44                     __end_of_caltime_to_epoch:
 22733                           	opt stack 0
 22734                           tblptru	equ	0xFF8
 22735                           tblptrh	equ	0xFF7
 22736                           tblptrl	equ	0xFF6
 22737                           tablat	equ	0xFF5
 22738                           prodh	equ	0xFF4
 22739                           prodl	equ	0xFF3
 22740                           intcon	equ	0xFF2
 22741                           intcon2	equ	0xFF1
 22742                           postinc0	equ	0xFEE
 22743                           wreg	equ	0xFE8
 22744                           indf1	equ	0xFE7
 22745                           postinc1	equ	0xFE6
 22746                           postdec1	equ	0xFE5
 22747                           fsr1h	equ	0xFE2
 22748                           fsr1l	equ	0xFE1
 22749                           indf2	equ	0xFDF
 22750                           postinc2	equ	0xFDE
 22751                           postdec2	equ	0xFDD
 22752                           plusw2	equ	0xFDB
 22753                           fsr2h	equ	0xFDA
 22754                           fsr2l	equ	0xFD9
 22755                           status	equ	0xFD8
 22756                           
 22757 ;; *************** function _month_length *****************
 22758 ;; Defined at:
 22759 ;;		line 55 in file "../My_library/My_RTCC.c"
 22760 ;; Parameters:    Size  Location     Type
 22761 ;;  year            1    wreg     unsigned char 
 22762 ;;  month           1    6[BANK0 ] unsigned char 
 22763 ;; Auto vars:     Size  Location     Type
 22764 ;;  year            1   11[BANK0 ] unsigned char 
 22765 ;; Return value:  Size  Location     Type
 22766 ;;                  1    wreg      unsigned char 
 22767 ;; Registers used:
 22768 ;;		wreg, status,2, status,0, cstack
 22769 ;; Tracked objects:
 22770 ;;		On entry : 0/0
 22771 ;;		On exit  : 0/0
 22772 ;;		Unchanged: 0/0
 22773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22774 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22776 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22777 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22778 ;;Total ram usage:        6 bytes
 22779 ;; Hardware stack levels used:    1
 22780 ;; Hardware stack levels required when called:   12
 22781 ;; This function calls:
 22782 ;;		___awmod
 22783 ;; This function is called by:
 22784 ;;		_epoch_to_caltime
 22785 ;;		_caltime_to_epoch
 22786 ;;		_RTCC_adjust_time_inc
 22787 ;;		_RTCC_adjust_time_dec
 22788 ;;		_terminal_time
 22789 ;; This function uses a non-reentrant model
 22790 ;;
 22791                           
 22792                           	psect	text95
 22793  0146B8                     __ptext95:
 22794                           	opt stack 0
 22795  0146B8                     _month_length:
 22796                           	opt stack 11
 22797                           
 22798                           ; BSR set to: 0
 22799                           ;incstack = 0
 22800                           ;month_length@year stored from wreg
 22801  0146B8  0100               	movlb	0	; () banked
 22802  0146BA  6F6B               	movwf	month_length@year& (0+255),b
 22803                           
 22804                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 22805  0146BC  0E02               	movlw	2
 22806  0146BE  0100               	movlb	0	; () banked
 22807  0146C0  1966               	xorwf	month_length@month& (0+255),w,b
 22808  0146C2  A4D8               	btfss	status,2,c
 22809  0146C4  D03E               	goto	l10557
 22810                           
 22811                           ; BSR set to: 0
 22812  0146C6  C06B  F060         	movff	month_length@year,___awmod@dividend
 22813  0146CA  0100               	movlb	0	; () banked
 22814  0146CC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22815  0146CE  0E00               	movlw	0
 22816  0146D0  0100               	movlb	0	; () banked
 22817  0146D2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22818  0146D4  0E64               	movlw	100
 22819  0146D6  6F62               	movwf	___awmod@divisor& (0+255),b
 22820  0146D8  EC92  F0AB         	call	___awmod	;wreg free
 22821  0146DC  0100               	movlb	0	; () banked
 22822  0146DE  5160               	movf	?___awmod& (0+255),w,b
 22823  0146E0  0100               	movlb	0	; () banked
 22824  0146E2  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22825  0146E4  A4D8               	btfss	status,2,c
 22826  0146E6  D002               	goto	u11400
 22827  0146E8  0E01               	movlw	1
 22828  0146EA  D001               	goto	u11410
 22829  0146EC                     u11400:
 22830  0146EC  0E00               	movlw	0
 22831  0146EE                     u11410:
 22832  0146EE  0800               	sublw	0
 22833  0146F0  0100               	movlb	0	; () banked
 22834  0146F2  6F67               	movwf	??_month_length& (0+255),b
 22835  0146F4  C06B  F060         	movff	month_length@year,___awmod@dividend
 22836  0146F8  0100               	movlb	0	; () banked
 22837  0146FA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22838  0146FC  0E01               	movlw	1
 22839  0146FE  0100               	movlb	0	; () banked
 22840  014700  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22841  014702  0E90               	movlw	144
 22842  014704  6F62               	movwf	___awmod@divisor& (0+255),b
 22843  014706  EC92  F0AB         	call	___awmod	;wreg free
 22844  01470A  0100               	movlb	0	; () banked
 22845  01470C  5160               	movf	?___awmod& (0+255),w,b
 22846  01470E  0100               	movlb	0	; () banked
 22847  014710  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22848  014712  A4D8               	btfss	status,2,c
 22849  014714  D004               	goto	u11420
 22850  014716  0100               	movlb	0	; () banked
 22851  014718  6B68               	clrf	(??_month_length+1)& (0+255),b
 22852  01471A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22853  01471C  D002               	goto	u11438
 22854  01471E                     u11420:
 22855  01471E  0100               	movlb	0	; () banked
 22856  014720  6B68               	clrf	(??_month_length+1)& (0+255),b
 22857  014722                     u11438:
 22858  014722  C06B  F069         	movff	month_length@year,??_month_length+2
 22859  014726  0E03               	movlw	3
 22860  014728  0100               	movlb	0	; () banked
 22861  01472A  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22862  01472C  A4D8               	btfss	status,2,c
 22863  01472E  D002               	goto	u11440
 22864  014730  0E01               	movlw	1
 22865  014732  D001               	goto	u11450
 22866  014734                     u11440:
 22867  014734  0E00               	movlw	0
 22868  014736                     u11450:
 22869  014736  0100               	movlb	0	; () banked
 22870  014738  2568               	addwf	(??_month_length+1)& (0+255),w,b
 22871  01473A  0100               	movlb	0	; () banked
 22872  01473C  2567               	addwf	??_month_length& (0+255),w,b
 22873  01473E  0F1C               	addlw	28
 22874                           
 22875                           ; BSR set to: 0
 22876                           
 22877                           ; BSR set to: 0
 22878  014740  0012               	return	
 22879  014742                     l10557:
 22880                           
 22881                           ; BSR set to: 0
 22882                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 22883  014742  0100               	movlb	0	; () banked
 22884  014744  5166               	movf	month_length@month& (0+255),w,b
 22885  014746  0B01               	andlw	1
 22886  014748  0100               	movlb	0	; () banked
 22887  01474A  6F67               	movwf	??_month_length& (0+255),b
 22888  01474C  6B68               	clrf	(??_month_length+1)& (0+255),b
 22889  01474E  0100               	movlb	0	; () banked
 22890  014750  1F67               	comf	??_month_length& (0+255),f,b
 22891  014752  1F68               	comf	(??_month_length+1)& (0+255),f,b
 22892  014754  4B67               	infsnz	??_month_length& (0+255),f,b
 22893  014756  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22894  014758  0100               	movlb	0	; () banked
 22895  01475A  5166               	movf	month_length@month& (0+255),w,b
 22896  01475C  0100               	movlb	0	; () banked
 22897  01475E  6F69               	movwf	(??_month_length+2)& (0+255),b
 22898  014760  6B6A               	clrf	(??_month_length+3)& (0+255),b
 22899  014762  0100               	movlb	0	; () banked
 22900  014764  5167               	movf	??_month_length& (0+255),w,b
 22901  014766  0100               	movlb	0	; () banked
 22902  014768  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 22903  01476A  0100               	movlb	0	; () banked
 22904  01476C  5168               	movf	(??_month_length+1)& (0+255),w,b
 22905  01476E  0100               	movlb	0	; () banked
 22906  014770  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 22907  014772  0E0D               	movlw	13
 22908  014774  0100               	movlb	0	; () banked
 22909  014776  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22910  014778  0E00               	movlw	0
 22911  01477A  176A               	andwf	(??_month_length+3)& (0+255),f,b
 22912  01477C  0E04               	movlw	4
 22913  01477E  0100               	movlb	0	; () banked
 22914  014780  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 22915  014782  0100               	movlb	0	; () banked
 22916  014784  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 22917  014786  A4D8               	btfss	status,2,c
 22918  014788  D002               	goto	u11460
 22919  01478A  0E01               	movlw	1
 22920  01478C  D001               	goto	u11470
 22921  01478E                     u11460:
 22922  01478E  0E00               	movlw	0
 22923  014790                     u11470:
 22924  014790  0800               	sublw	0
 22925  014792  0F1F               	addlw	31
 22926                           
 22927                           ; BSR set to: 0
 22928  014794  0012               	return	
 22929  014796                     __end_of_month_length:
 22930                           	opt stack 0
 22931                           tblptru	equ	0xFF8
 22932                           tblptrh	equ	0xFF7
 22933                           tblptrl	equ	0xFF6
 22934                           tablat	equ	0xFF5
 22935                           prodh	equ	0xFF4
 22936                           prodl	equ	0xFF3
 22937                           intcon	equ	0xFF2
 22938                           intcon2	equ	0xFF1
 22939                           postinc0	equ	0xFEE
 22940                           wreg	equ	0xFE8
 22941                           indf1	equ	0xFE7
 22942                           postinc1	equ	0xFE6
 22943                           postdec1	equ	0xFE5
 22944                           fsr1h	equ	0xFE2
 22945                           fsr1l	equ	0xFE1
 22946                           indf2	equ	0xFDF
 22947                           postinc2	equ	0xFDE
 22948                           postdec2	equ	0xFDD
 22949                           plusw2	equ	0xFDB
 22950                           fsr2h	equ	0xFDA
 22951                           fsr2l	equ	0xFD9
 22952                           status	equ	0xFD8
 22953                           
 22954 ;; *************** function ___awmod *****************
 22955 ;; Defined at:
 22956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 22957 ;; Parameters:    Size  Location     Type
 22958 ;;  dividend        2    0[BANK0 ] int 
 22959 ;;  divisor         2    2[BANK0 ] int 
 22960 ;; Auto vars:     Size  Location     Type
 22961 ;;  sign            1    5[BANK0 ] unsigned char 
 22962 ;;  counter         1    4[BANK0 ] unsigned char 
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  2    0[BANK0 ] int 
 22965 ;; Registers used:
 22966 ;;		wreg, status,2, status,0
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22973 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22975 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22976 ;;Total ram usage:        6 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; Hardware stack levels required when called:   11
 22979 ;; This function calls:
 22980 ;;		Nothing
 22981 ;; This function is called by:
 22982 ;;		_month_length
 22983 ;; This function uses a non-reentrant model
 22984 ;;
 22985                           
 22986                           	psect	text96
 22987  015724                     __ptext96:
 22988                           	opt stack 0
 22989  015724                     ___awmod:
 22990                           	opt stack 11
 22991                           
 22992                           ; BSR set to: 0
 22993                           ;incstack = 0
 22994  015724  0E00               	movlw	0
 22995  015726  0100               	movlb	0	; () banked
 22996  015728  6F65               	movwf	___awmod@sign& (0+255),b
 22997                           
 22998                           ; BSR set to: 0
 22999  01572A  0100               	movlb	0	; () banked
 23000  01572C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23001  01572E  D008               	goto	l10505
 23002                           
 23003                           ; BSR set to: 0
 23004  015730  0100               	movlb	0	; () banked
 23005  015732  6D60               	negf	___awmod@dividend& (0+255),b
 23006  015734  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23007  015736  B0D8               	btfsc	status,0,c
 23008  015738  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23009                           
 23010                           ; BSR set to: 0
 23011  01573A  0E01               	movlw	1
 23012  01573C  0100               	movlb	0	; () banked
 23013  01573E  6F65               	movwf	___awmod@sign& (0+255),b
 23014  015740                     l10505:
 23015                           
 23016                           ; BSR set to: 0
 23017  015740  0100               	movlb	0	; () banked
 23018  015742  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23019  015744  D005               	goto	l10509
 23020                           
 23021                           ; BSR set to: 0
 23022  015746  0100               	movlb	0	; () banked
 23023  015748  6D62               	negf	___awmod@divisor& (0+255),b
 23024  01574A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23025  01574C  B0D8               	btfsc	status,0,c
 23026  01574E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23027  015750                     l10509:
 23028                           
 23029                           ; BSR set to: 0
 23030  015750  0100               	movlb	0	; () banked
 23031  015752  5162               	movf	___awmod@divisor& (0+255),w,b
 23032  015754  0100               	movlb	0	; () banked
 23033  015756  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23034  015758  B4D8               	btfsc	status,2,c
 23035  01575A  D026               	goto	l10525
 23036                           
 23037                           ; BSR set to: 0
 23038  01575C  0E01               	movlw	1
 23039  01575E  0100               	movlb	0	; () banked
 23040  015760  6F64               	movwf	___awmod@counter& (0+255),b
 23041  015762  D006               	goto	l10515
 23042  015764                     l10513:
 23043                           
 23044                           ; BSR set to: 0
 23045  015764  0100               	movlb	0	; () banked
 23046  015766  90D8               	bcf	status,0,c
 23047  015768  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23048  01576A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23049  01576C  0100               	movlb	0	; () banked
 23050  01576E  2B64               	incf	___awmod@counter& (0+255),f,b
 23051  015770                     l10515:
 23052                           
 23053                           ; BSR set to: 0
 23054  015770  0100               	movlb	0	; () banked
 23055  015772  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23056  015774  D7F7               	goto	l10513
 23057  015776                     l10517:
 23058                           
 23059                           ; BSR set to: 0
 23060  015776  0100               	movlb	0	; () banked
 23061  015778  5162               	movf	___awmod@divisor& (0+255),w,b
 23062  01577A  0100               	movlb	0	; () banked
 23063  01577C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23064  01577E  0100               	movlb	0	; () banked
 23065  015780  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23066  015782  0100               	movlb	0	; () banked
 23067  015784  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23068  015786  A0D8               	btfss	status,0,c
 23069  015788  D008               	goto	l10521
 23070                           
 23071                           ; BSR set to: 0
 23072  01578A  0100               	movlb	0	; () banked
 23073  01578C  5162               	movf	___awmod@divisor& (0+255),w,b
 23074  01578E  0100               	movlb	0	; () banked
 23075  015790  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23076  015792  0100               	movlb	0	; () banked
 23077  015794  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23078  015796  0100               	movlb	0	; () banked
 23079  015798  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23080  01579A                     l10521:
 23081                           
 23082                           ; BSR set to: 0
 23083  01579A  0100               	movlb	0	; () banked
 23084  01579C  90D8               	bcf	status,0,c
 23085  01579E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23086  0157A0  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23087                           
 23088                           ; BSR set to: 0
 23089  0157A2  0100               	movlb	0	; () banked
 23090  0157A4  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23091  0157A6  D7E7               	goto	l10517
 23092  0157A8                     l10525:
 23093                           
 23094                           ; BSR set to: 0
 23095  0157A8  0100               	movlb	0	; () banked
 23096  0157AA  5165               	movf	___awmod@sign& (0+255),w,b
 23097  0157AC  0100               	movlb	0	; () banked
 23098  0157AE  B4D8               	btfsc	status,2,c
 23099  0157B0  D005               	goto	l10529
 23100                           
 23101                           ; BSR set to: 0
 23102  0157B2  0100               	movlb	0	; () banked
 23103  0157B4  6D60               	negf	___awmod@dividend& (0+255),b
 23104  0157B6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23105  0157B8  B0D8               	btfsc	status,0,c
 23106  0157BA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23107  0157BC                     l10529:
 23108                           
 23109                           ; BSR set to: 0
 23110  0157BC  C060  F060         	movff	___awmod@dividend,?___awmod
 23111  0157C0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23112  0157C4  0012               	return	
 23113  0157C6                     __end_of___awmod:
 23114                           	opt stack 0
 23115                           tblptru	equ	0xFF8
 23116                           tblptrh	equ	0xFF7
 23117                           tblptrl	equ	0xFF6
 23118                           tablat	equ	0xFF5
 23119                           prodh	equ	0xFF4
 23120                           prodl	equ	0xFF3
 23121                           intcon	equ	0xFF2
 23122                           intcon2	equ	0xFF1
 23123                           postinc0	equ	0xFEE
 23124                           wreg	equ	0xFE8
 23125                           indf1	equ	0xFE7
 23126                           postinc1	equ	0xFE6
 23127                           postdec1	equ	0xFE5
 23128                           fsr1h	equ	0xFE2
 23129                           fsr1l	equ	0xFE1
 23130                           indf2	equ	0xFDF
 23131                           postinc2	equ	0xFDE
 23132                           postdec2	equ	0xFDD
 23133                           plusw2	equ	0xFDB
 23134                           fsr2h	equ	0xFDA
 23135                           fsr2l	equ	0xFD9
 23136                           status	equ	0xFD8
 23137                           
 23138 ;; *************** function ___lmul *****************
 23139 ;; Defined at:
 23140 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23141 ;; Parameters:    Size  Location     Type
 23142 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23143 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23144 ;; Auto vars:     Size  Location     Type
 23145 ;;  product         4   21[BANK0 ] unsigned long 
 23146 ;; Return value:  Size  Location     Type
 23147 ;;                  4   13[BANK0 ] unsigned long 
 23148 ;; Registers used:
 23149 ;;		wreg, status,2, status,0
 23150 ;; Tracked objects:
 23151 ;;		On entry : 0/0
 23152 ;;		On exit  : 0/0
 23153 ;;		Unchanged: 0/0
 23154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23155 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23156 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23159 ;;Total ram usage:       12 bytes
 23160 ;; Hardware stack levels used:    1
 23161 ;; Hardware stack levels required when called:   11
 23162 ;; This function calls:
 23163 ;;		Nothing
 23164 ;; This function is called by:
 23165 ;;		_get_quot_rem
 23166 ;;		_caltime_to_epoch
 23167 ;;		_RTCC_adjust_time_inc
 23168 ;;		_RTCC_adjust_time_dec
 23169 ;; This function uses a non-reentrant model
 23170 ;;
 23171                           
 23172                           	psect	text97
 23173  015EEA                     __ptext97:
 23174                           	opt stack 0
 23175  015EEA                     ___lmul:
 23176                           	opt stack 12
 23177                           
 23178                           ; BSR set to: 0
 23179                           ;incstack = 0
 23180  015EEA  0E00               	movlw	0
 23181  015EEC  0100               	movlb	0	; () banked
 23182  015EEE  6F75               	movwf	___lmul@product& (0+255),b
 23183  015EF0  0E00               	movlw	0
 23184  015EF2  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23185  015EF4  0E00               	movlw	0
 23186  015EF6  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23187  015EF8  0E00               	movlw	0
 23188  015EFA  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23189  015EFC                     l10563:
 23190                           
 23191                           ; BSR set to: 0
 23192  015EFC  0100               	movlb	0	; () banked
 23193  015EFE  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23194  015F00  D010               	goto	l10567
 23195                           
 23196                           ; BSR set to: 0
 23197  015F02  0100               	movlb	0	; () banked
 23198  015F04  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23199  015F06  0100               	movlb	0	; () banked
 23200  015F08  2775               	addwf	___lmul@product& (0+255),f,b
 23201  015F0A  0100               	movlb	0	; () banked
 23202  015F0C  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23203  015F0E  0100               	movlb	0	; () banked
 23204  015F10  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23205  015F12  0100               	movlb	0	; () banked
 23206  015F14  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23207  015F16  0100               	movlb	0	; () banked
 23208  015F18  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23209  015F1A  0100               	movlb	0	; () banked
 23210  015F1C  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23211  015F1E  0100               	movlb	0	; () banked
 23212  015F20  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23213  015F22                     l10567:
 23214                           
 23215                           ; BSR set to: 0
 23216  015F22  0100               	movlb	0	; () banked
 23217  015F24  90D8               	bcf	status,0,c
 23218  015F26  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23219  015F28  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23220  015F2A  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23221  015F2C  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23222                           
 23223                           ; BSR set to: 0
 23224  015F2E  0100               	movlb	0	; () banked
 23225  015F30  90D8               	bcf	status,0,c
 23226  015F32  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23227  015F34  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23228  015F36  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23229  015F38  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23230  015F3A  0100               	movlb	0	; () banked
 23231  015F3C  516D               	movf	___lmul@multiplier& (0+255),w,b
 23232  015F3E  0100               	movlb	0	; () banked
 23233  015F40  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23234  015F42  0100               	movlb	0	; () banked
 23235  015F44  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23236  015F46  0100               	movlb	0	; () banked
 23237  015F48  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23238  015F4A  A4D8               	btfss	status,2,c
 23239  015F4C  D7D7               	goto	l10563
 23240                           
 23241                           ; BSR set to: 0
 23242  015F4E  C075  F06D         	movff	___lmul@product,?___lmul
 23243  015F52  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23244  015F56  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23245  015F5A  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23246                           
 23247                           ; BSR set to: 0
 23248  015F5E  0012               	return		;funcret
 23249  015F60                     __end_of___lmul:
 23250                           	opt stack 0
 23251                           tblptru	equ	0xFF8
 23252                           tblptrh	equ	0xFF7
 23253                           tblptrl	equ	0xFF6
 23254                           tablat	equ	0xFF5
 23255                           prodh	equ	0xFF4
 23256                           prodl	equ	0xFF3
 23257                           intcon	equ	0xFF2
 23258                           intcon2	equ	0xFF1
 23259                           postinc0	equ	0xFEE
 23260                           wreg	equ	0xFE8
 23261                           indf1	equ	0xFE7
 23262                           postinc1	equ	0xFE6
 23263                           postdec1	equ	0xFE5
 23264                           fsr1h	equ	0xFE2
 23265                           fsr1l	equ	0xFE1
 23266                           indf2	equ	0xFDF
 23267                           postinc2	equ	0xFDE
 23268                           postdec2	equ	0xFDD
 23269                           plusw2	equ	0xFDB
 23270                           fsr2h	equ	0xFDA
 23271                           fsr2l	equ	0xFD9
 23272                           status	equ	0xFD8
 23273                           
 23274 ;; *************** function _RTCC_to_caltime *****************
 23275 ;; Defined at:
 23276 ;;		line 89 in file "../My_library/My_RTCC.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;  tm              2    2[BANK0 ] PTR struct .
 23279 ;;		 -> now(14), 
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;  dumy            1    4[BANK0 ] unsigned char 
 23282 ;; Return value:  Size  Location     Type
 23283 ;;		None               void
 23284 ;; Registers used:
 23285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23294 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23295 ;;Total ram usage:        3 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:   12
 23298 ;; This function calls:
 23299 ;;		_x_to_d
 23300 ;; This function is called by:
 23301 ;;		_RTCC_from_RTCC
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text98
 23306  015452                     __ptext98:
 23307                           	opt stack 0
 23308  015452                     _RTCC_to_caltime:
 23309                           	opt stack 12
 23310  015452                     l855:
 23311  015452  010F               	movlb	15	; () banked
 23312  015454  B93F               	btfsc	63,4,b	;volatile
 23313  015456  D7FD               	goto	l855
 23314                           
 23315                           ; BSR set to: 15
 23316                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 23317  015458  010F               	movlb	15	; () banked
 23318  01545A  813F               	bsf	63,0,b	;volatile
 23319                           
 23320                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 23321  01545C  010F               	movlb	15	; () banked
 23322  01545E  833F               	bsf	63,1,b	;volatile
 23323                           
 23324                           ; BSR set to: 15
 23325                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 23326  015460  0100               	movlb	0	; () banked
 23327  015462  EE20 F00A          	lfsr	2,10
 23328  015466  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23329  015468  26D9               	addwf	fsr2l,f,c
 23330  01546A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23331  01546C  22DA               	addwfc	fsr2h,f,c
 23332  01546E  010F               	movlb	15	; () banked
 23333  015470  513A               	movf	58,w,b	;volatile
 23334  015472  ECD8  F0B5         	call	_x_to_d
 23335  015476  6EDF               	movwf	indf2,c
 23336                           
 23337                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 23338  015478  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23339                           
 23340                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 23341  01547C  0100               	movlb	0	; () banked
 23342  01547E  EE20 F008          	lfsr	2,8
 23343  015482  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23344  015484  26D9               	addwf	fsr2l,f,c
 23345  015486  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23346  015488  22DA               	addwfc	fsr2h,f,c
 23347  01548A  010F               	movlb	15	; () banked
 23348  01548C  513A               	movf	58,w,b	;volatile
 23349  01548E  ECD8  F0B5         	call	_x_to_d
 23350  015492  6EDF               	movwf	indf2,c
 23351                           
 23352                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 23353  015494  0100               	movlb	0	; () banked
 23354  015496  EE20 F009          	lfsr	2,9
 23355  01549A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23356  01549C  26D9               	addwf	fsr2l,f,c
 23357  01549E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23358  0154A0  22DA               	addwfc	fsr2h,f,c
 23359  0154A2  010F               	movlb	15	; () banked
 23360  0154A4  513B               	movf	59,w,b	;volatile
 23361  0154A6  ECD8  F0B5         	call	_x_to_d
 23362  0154AA  6EDF               	movwf	indf2,c
 23363                           
 23364                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 23365  0154AC  0100               	movlb	0	; () banked
 23366  0154AE  EE20 F006          	lfsr	2,6
 23367  0154B2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23368  0154B4  26D9               	addwf	fsr2l,f,c
 23369  0154B6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23370  0154B8  22DA               	addwfc	fsr2h,f,c
 23371  0154BA  010F               	movlb	15	; () banked
 23372  0154BC  513A               	movf	58,w,b	;volatile
 23373  0154BE  ECD8  F0B5         	call	_x_to_d
 23374  0154C2  6EDF               	movwf	indf2,c
 23375                           
 23376                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 23377  0154C4  0100               	movlb	0	; () banked
 23378  0154C6  EE20 F007          	lfsr	2,7
 23379  0154CA  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23380  0154CC  26D9               	addwf	fsr2l,f,c
 23381  0154CE  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23382  0154D0  22DA               	addwfc	fsr2h,f,c
 23383  0154D2  010F               	movlb	15	; () banked
 23384  0154D4  513B               	movf	59,w,b	;volatile
 23385  0154D6  ECD8  F0B5         	call	_x_to_d
 23386  0154DA  6EDF               	movwf	indf2,c
 23387                           
 23388                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 23389  0154DC  0100               	movlb	0	; () banked
 23390  0154DE  EE20 F004          	lfsr	2,4
 23391  0154E2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23392  0154E4  26D9               	addwf	fsr2l,f,c
 23393  0154E6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23394  0154E8  22DA               	addwfc	fsr2h,f,c
 23395  0154EA  010F               	movlb	15	; () banked
 23396  0154EC  513A               	movf	58,w,b	;volatile
 23397  0154EE  ECD8  F0B5         	call	_x_to_d
 23398  0154F2  6EDF               	movwf	indf2,c
 23399                           
 23400                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 23401  0154F4  0100               	movlb	0	; () banked
 23402  0154F6  EE20 F005          	lfsr	2,5
 23403  0154FA  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23404  0154FC  26D9               	addwf	fsr2l,f,c
 23405  0154FE  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23406  015500  22DA               	addwfc	fsr2h,f,c
 23407  015502  010F               	movlb	15	; () banked
 23408  015504  513B               	movf	59,w,b	;volatile
 23409  015506  ECD8  F0B5         	call	_x_to_d
 23410  01550A  6EDF               	movwf	indf2,c
 23411  01550C  0012               	return		;funcret
 23412  01550E                     __end_of_RTCC_to_caltime:
 23413                           	opt stack 0
 23414                           tblptru	equ	0xFF8
 23415                           tblptrh	equ	0xFF7
 23416                           tblptrl	equ	0xFF6
 23417                           tablat	equ	0xFF5
 23418                           prodh	equ	0xFF4
 23419                           prodl	equ	0xFF3
 23420                           intcon	equ	0xFF2
 23421                           intcon2	equ	0xFF1
 23422                           postinc0	equ	0xFEE
 23423                           wreg	equ	0xFE8
 23424                           indf1	equ	0xFE7
 23425                           postinc1	equ	0xFE6
 23426                           postdec1	equ	0xFE5
 23427                           fsr1h	equ	0xFE2
 23428                           fsr1l	equ	0xFE1
 23429                           indf2	equ	0xFDF
 23430                           postinc2	equ	0xFDE
 23431                           postdec2	equ	0xFDD
 23432                           plusw2	equ	0xFDB
 23433                           fsr2h	equ	0xFDA
 23434                           fsr2l	equ	0xFD9
 23435                           status	equ	0xFD8
 23436                           
 23437 ;; *************** function _x_to_d *****************
 23438 ;; Defined at:
 23439 ;;		line 51 in file "../My_library/My_RTCC.c"
 23440 ;; Parameters:    Size  Location     Type
 23441 ;;  hex             1    wreg     unsigned char 
 23442 ;; Auto vars:     Size  Location     Type
 23443 ;;  hex             1    1[BANK0 ] unsigned char 
 23444 ;; Return value:  Size  Location     Type
 23445 ;;                  1    wreg      unsigned char 
 23446 ;; Registers used:
 23447 ;;		wreg, status,2, status,0, prodl, prodh
 23448 ;; Tracked objects:
 23449 ;;		On entry : 0/0
 23450 ;;		On exit  : 0/0
 23451 ;;		Unchanged: 0/0
 23452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23456 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23457 ;;Total ram usage:        2 bytes
 23458 ;; Hardware stack levels used:    1
 23459 ;; Hardware stack levels required when called:   11
 23460 ;; This function calls:
 23461 ;;		Nothing
 23462 ;; This function is called by:
 23463 ;;		_RTCC_to_caltime
 23464 ;; This function uses a non-reentrant model
 23465 ;;
 23466                           
 23467                           	psect	text99
 23468  016BB0                     __ptext99:
 23469                           	opt stack 0
 23470  016BB0                     _x_to_d:
 23471                           	opt stack 12
 23472                           
 23473                           ;incstack = 0
 23474                           ;x_to_d@hex stored from wreg
 23475  016BB0  0100               	movlb	0	; () banked
 23476  016BB2  6F61               	movwf	x_to_d@hex& (0+255),b
 23477                           
 23478                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23479  016BB4  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23480  016BB8  0E0F               	movlw	15
 23481  016BBA  0100               	movlb	0	; () banked
 23482  016BBC  1760               	andwf	??_x_to_d& (0+255),f,b
 23483  016BBE  0100               	movlb	0	; () banked
 23484  016BC0  3961               	swapf	x_to_d@hex& (0+255),w,b
 23485  016BC2  0B0F               	andlw	15
 23486  016BC4  0B0F               	andlw	15
 23487  016BC6  0D0A               	mullw	10
 23488  016BC8  50F3               	movf	prodl,w,c
 23489  016BCA  0100               	movlb	0	; () banked
 23490  016BCC  2560               	addwf	??_x_to_d& (0+255),w,b
 23491  016BCE  0012               	return	
 23492  016BD0                     __end_of_x_to_d:
 23493                           	opt stack 0
 23494                           tblptru	equ	0xFF8
 23495                           tblptrh	equ	0xFF7
 23496                           tblptrl	equ	0xFF6
 23497                           tablat	equ	0xFF5
 23498                           prodh	equ	0xFF4
 23499                           prodl	equ	0xFF3
 23500                           intcon	equ	0xFF2
 23501                           intcon2	equ	0xFF1
 23502                           postinc0	equ	0xFEE
 23503                           wreg	equ	0xFE8
 23504                           indf1	equ	0xFE7
 23505                           postinc1	equ	0xFE6
 23506                           postdec1	equ	0xFE5
 23507                           fsr1h	equ	0xFE2
 23508                           fsr1l	equ	0xFE1
 23509                           indf2	equ	0xFDF
 23510                           postinc2	equ	0xFDE
 23511                           postdec2	equ	0xFDD
 23512                           plusw2	equ	0xFDB
 23513                           fsr2h	equ	0xFDA
 23514                           fsr2l	equ	0xFD9
 23515                           status	equ	0xFD8
 23516                           
 23517 ;; *************** function _ISR *****************
 23518 ;; Defined at:
 23519 ;;		line 49 in file "main.c"
 23520 ;; Parameters:    Size  Location     Type
 23521 ;;		None
 23522 ;; Auto vars:     Size  Location     Type
 23523 ;;		None
 23524 ;; Return value:  Size  Location     Type
 23525 ;;		None               void
 23526 ;; Registers used:
 23527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23528 ;; Tracked objects:
 23529 ;;		On entry : 0/0
 23530 ;;		On exit  : 0/0
 23531 ;;		Unchanged: 0/0
 23532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23535 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23536 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23537 ;;Total ram usage:       14 bytes
 23538 ;; Hardware stack levels used:    1
 23539 ;; Hardware stack levels required when called:   10
 23540 ;; This function calls:
 23541 ;;		_LED_indicator
 23542 ;;		_USB_ISR
 23543 ;;		_millis_timer
 23544 ;; This function is called by:
 23545 ;;		Interrupt level 2
 23546 ;; This function uses a non-reentrant model
 23547 ;;
 23548                           
 23549                           	psect	intcode
 23550  001008                     __pintcode:
 23551                           	opt stack 0
 23552  001008                     _ISR:
 23553                           	opt stack 11
 23554                           
 23555                           ; BSR set to: 0
 23556                           ;incstack = 0
 23557  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23558  00100A  CFFA F04B          	movff	pclath,??_ISR
 23559  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 23560  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23561  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23562  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23563  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23564  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23565  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 23566  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 23567  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 23568  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23569  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23570  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 23571  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 23572                           
 23573                           ;main.c: 50: USB_ISR();
 23574  001042  EC5E  F0B6         	call	_USB_ISR	;wreg free
 23575                           
 23576                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23577  001046  B4F2               	btfsc	intcon,2,c	;volatile
 23578  001048  AAF2               	btfss	intcon,5,c	;volatile
 23579  00104A  D003               	goto	i2l10397
 23580                           
 23581                           ;main.c: 52: INTCONbits.T0IF = 0;
 23582  00104C  94F2               	bcf	intcon,2,c	;volatile
 23583                           
 23584                           ;main.c: 53: millis_timer();
 23585  00104E  ECA5  F0B5         	call	_millis_timer	;wreg free
 23586  001052                     i2l10397:
 23587                           
 23588                           ;main.c: 54: }
 23589                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 23590  001052  B09E               	btfsc	3998,0,c	;volatile
 23591  001054  A09D               	btfss	3997,0,c	;volatile
 23592  001056  D01E               	goto	i2l10413
 23593                           
 23594                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 23595  001058  909E               	bcf	3998,0,c	;volatile
 23596                           
 23597                           ;main.c: 57: TMR1H = 0xC0;
 23598  00105A  0EC0               	movlw	192
 23599  00105C  6ECF               	movwf	4047,c	;volatile
 23600                           
 23601                           ;main.c: 58: cut_time_flag = 1;
 23602  00105E  0E01               	movlw	1
 23603  001060  0101               	movlb	1	; () banked
 23604  001062  6F26               	movwf	_cut_time_flag& (0+255),b
 23605                           
 23606                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 23607                           ;main.c: 60: if (cnt_t1) {
 23608  001064  0101               	movlb	1	; () banked
 23609  001066  511E               	movf	ISR@cnt_t1& (0+255),w,b
 23610  001068  B4D8               	btfsc	status,2,c
 23611  00106A  D004               	goto	i2l10407
 23612                           
 23613                           ; BSR set to: 1
 23614                           ;main.c: 61: cnt_t1 = 0;
 23615  00106C  0E00               	movlw	0
 23616  00106E  0101               	movlb	1	; () banked
 23617  001070  6F1E               	movwf	ISR@cnt_t1& (0+255),b
 23618                           
 23619                           ;main.c: 62: } else {
 23620  001072  D010               	goto	i2l10413
 23621  001074                     i2l10407:
 23622                           
 23623                           ; BSR set to: 1
 23624                           ;main.c: 63: cnt_t1 = 1;
 23625  001074  0E01               	movlw	1
 23626  001076  0101               	movlb	1	; () banked
 23627  001078  6F1E               	movwf	ISR@cnt_t1& (0+255),b
 23628                           
 23629                           ;main.c: 64: terminal_data_out_flag = 1;
 23630  00107A  0E01               	movlw	1
 23631  00107C  0101               	movlb	1	; () banked
 23632  00107E  6F2C               	movwf	_terminal_data_out_flag& (0+255),b
 23633                           
 23634                           ;main.c: 65: integrate_flag = 1;
 23635  001080  0E01               	movlw	1
 23636  001082  0101               	movlb	1	; () banked
 23637  001084  6F28               	movwf	_integrate_flag& (0+255),b
 23638                           
 23639                           ; BSR set to: 1
 23640                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 23641  001086  0E02               	movlw	2
 23642  001088  181F               	xorwf	_print_item,w,c
 23643  00108A  A4D8               	btfss	status,2,c
 23644  00108C  D003               	goto	i2l10413
 23645                           
 23646                           ; BSR set to: 1
 23647  00108E  0E01               	movlw	1
 23648  001090  0101               	movlb	1	; () banked
 23649  001092  6F27               	movwf	_display_flag& (0+255),b
 23650  001094                     i2l10413:
 23651                           
 23652                           ;main.c: 67: }
 23653                           ;main.c: 68: }
 23654                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 23655  001094  B2A1               	btfsc	4001,1,c	;volatile
 23656  001096  A2A0               	btfss	4000,1,c	;volatile
 23657  001098  D010               	goto	i2l1781
 23658                           
 23659                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 23660  00109A  92A1               	bcf	4001,1,c	;volatile
 23661                           
 23662                           ;main.c: 71: ctmu_sampling_flag = 1;
 23663  00109C  0E01               	movlw	1
 23664  00109E  0101               	movlb	1	; () banked
 23665  0010A0  6F25               	movwf	_ctmu_sampling_flag& (0+255),b
 23666                           
 23667                           ;main.c: 72: static uint8_t cnt;
 23668                           ;main.c: 73: if (cnt) {
 23669  0010A2  0101               	movlb	1	; () banked
 23670  0010A4  511D               	movf	ISR@cnt& (0+255),w,b
 23671  0010A6  B4D8               	btfsc	status,2,c
 23672  0010A8  D003               	goto	i2l10423
 23673                           
 23674                           ; BSR set to: 1
 23675                           ;main.c: 74: cnt--;
 23676  0010AA  0101               	movlb	1	; () banked
 23677  0010AC  071D               	decf	ISR@cnt& (0+255),f,b
 23678                           
 23679                           ;main.c: 75: } else {
 23680  0010AE  D005               	goto	i2l1781
 23681  0010B0                     i2l10423:
 23682                           
 23683                           ; BSR set to: 1
 23684                           ;main.c: 76: cnt = 8;
 23685  0010B0  0E08               	movlw	8
 23686  0010B2  0101               	movlb	1	; () banked
 23687  0010B4  6F1D               	movwf	ISR@cnt& (0+255),b
 23688                           
 23689                           ; BSR set to: 1
 23690                           ;main.c: 77: LED_indicator();
 23691  0010B6  EC15  F09D         	call	_LED_indicator	;wreg free
 23692  0010BA                     i2l1781:
 23693  0010BA  C058  FFF5         	movff	??_ISR+13,tablat
 23694  0010BE  C057  FFF8         	movff	??_ISR+12,tblptru
 23695  0010C2  C056  FFF7         	movff	??_ISR+11,tblptrh
 23696  0010C6  C055  FFF6         	movff	??_ISR+10,tblptrl
 23697  0010CA  C054  FFF4         	movff	??_ISR+9,prodh
 23698  0010CE  C053  FFF3         	movff	??_ISR+8,prodl
 23699  0010D2  C052  FFDA         	movff	??_ISR+7,fsr2h
 23700  0010D6  C051  FFD9         	movff	??_ISR+6,fsr2l
 23701  0010DA  C050  FFE2         	movff	??_ISR+5,fsr1h
 23702  0010DE  C04F  FFE1         	movff	??_ISR+4,fsr1l
 23703  0010E2  C04E  FFEA         	movff	??_ISR+3,fsr0h
 23704  0010E6  C04D  FFE9         	movff	??_ISR+2,fsr0l
 23705  0010EA  C04C  FFFB         	movff	??_ISR+1,pclatu
 23706  0010EE  C04B  FFFA         	movff	??_ISR,pclath
 23707  0010F2  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23708  0010F4  0011               	retfie		f
 23709  0010F6                     __end_of_ISR:
 23710                           	opt stack 0
 23711                           pclatu	equ	0xFFB
 23712                           pclath	equ	0xFFA
 23713                           tblptru	equ	0xFF8
 23714                           tblptrh	equ	0xFF7
 23715                           tblptrl	equ	0xFF6
 23716                           tablat	equ	0xFF5
 23717                           prodh	equ	0xFF4
 23718                           prodl	equ	0xFF3
 23719                           intcon	equ	0xFF2
 23720                           intcon2	equ	0xFF1
 23721                           postinc0	equ	0xFEE
 23722                           fsr0h	equ	0xFEA
 23723                           fsr0l	equ	0xFE9
 23724                           wreg	equ	0xFE8
 23725                           indf1	equ	0xFE7
 23726                           postinc1	equ	0xFE6
 23727                           postdec1	equ	0xFE5
 23728                           fsr1h	equ	0xFE2
 23729                           fsr1l	equ	0xFE1
 23730                           indf2	equ	0xFDF
 23731                           postinc2	equ	0xFDE
 23732                           postdec2	equ	0xFDD
 23733                           plusw2	equ	0xFDB
 23734                           fsr2h	equ	0xFDA
 23735                           fsr2l	equ	0xFD9
 23736                           status	equ	0xFD8
 23737                           
 23738 ;; *************** function _millis_timer *****************
 23739 ;; Defined at:
 23740 ;;		line 219 in file "../My_library/My_PIC.c"
 23741 ;; Parameters:    Size  Location     Type
 23742 ;;		None
 23743 ;; Auto vars:     Size  Location     Type
 23744 ;;		None
 23745 ;; Return value:  Size  Location     Type
 23746 ;;		None               void
 23747 ;; Registers used:
 23748 ;;		wreg, status,2, status,0
 23749 ;; Tracked objects:
 23750 ;;		On entry : 0/0
 23751 ;;		On exit  : 0/0
 23752 ;;		Unchanged: 0/0
 23753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23758 ;;Total ram usage:        0 bytes
 23759 ;; Hardware stack levels used:    1
 23760 ;; This function calls:
 23761 ;;		Nothing
 23762 ;; This function is called by:
 23763 ;;		_ISR
 23764 ;; This function uses a non-reentrant model
 23765 ;;
 23766                           
 23767                           	psect	text101
 23768  016B4A                     __ptext101:
 23769                           	opt stack 0
 23770  016B4A                     _millis_timer:
 23771                           	opt stack 20
 23772                           
 23773                           ;My_PIC.c: 220: static uint16_t cnt;
 23774                           ;My_PIC.c: 221: if (cnt) {
 23775                           
 23776                           ;incstack = 0
 23777  016B4A  0101               	movlb	1	; () banked
 23778  016B4C  511B               	movf	millis_timer@cnt& (0+255),w,b
 23779  016B4E  0101               	movlb	1	; () banked
 23780  016B50  111C               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 23781  016B52  A4D8               	btfss	status,2,c
 23782  016B54  0012               	return	
 23783                           
 23784                           ; BSR set to: 1
 23785                           ;My_PIC.c: 224: cnt = 47;
 23786                           
 23787                           ; BSR set to: 1
 23788                           
 23789                           ; BSR set to: 1
 23790                           ;My_PIC.c: 223: } else {
 23791  016B56  0E00               	movlw	0
 23792  016B58  0101               	movlb	1	; () banked
 23793  016B5A  6F1C               	movwf	(millis_timer@cnt+1)& (0+255),b
 23794  016B5C  0E2F               	movlw	47
 23795  016B5E  6F1B               	movwf	millis_timer@cnt& (0+255),b
 23796                           
 23797                           ; BSR set to: 1
 23798                           ;My_PIC.c: 225: ms++;
 23799  016B60  0E01               	movlw	1
 23800  016B62  0102               	movlb	2	; () banked
 23801  016B64  270E               	addwf	_ms& (0+255),f,b
 23802  016B66  0E00               	movlw	0
 23803  016B68  230F               	addwfc	(_ms+1)& (0+255),f,b
 23804  016B6A  2310               	addwfc	(_ms+2)& (0+255),f,b
 23805  016B6C  2311               	addwfc	(_ms+3)& (0+255),f,b
 23806  016B6E  0012               	return	
 23807  016B70                     __end_of_millis_timer:
 23808                           	opt stack 0
 23809                           pclatu	equ	0xFFB
 23810                           pclath	equ	0xFFA
 23811                           tblptru	equ	0xFF8
 23812                           tblptrh	equ	0xFF7
 23813                           tblptrl	equ	0xFF6
 23814                           tablat	equ	0xFF5
 23815                           prodh	equ	0xFF4
 23816                           prodl	equ	0xFF3
 23817                           intcon	equ	0xFF2
 23818                           intcon2	equ	0xFF1
 23819                           postinc0	equ	0xFEE
 23820                           fsr0h	equ	0xFEA
 23821                           fsr0l	equ	0xFE9
 23822                           wreg	equ	0xFE8
 23823                           indf1	equ	0xFE7
 23824                           postinc1	equ	0xFE6
 23825                           postdec1	equ	0xFE5
 23826                           fsr1h	equ	0xFE2
 23827                           fsr1l	equ	0xFE1
 23828                           indf2	equ	0xFDF
 23829                           postinc2	equ	0xFDE
 23830                           postdec2	equ	0xFDD
 23831                           plusw2	equ	0xFDB
 23832                           fsr2h	equ	0xFDA
 23833                           fsr2l	equ	0xFD9
 23834                           status	equ	0xFD8
 23835                           
 23836 ;; *************** function _USB_ISR *****************
 23837 ;; Defined at:
 23838 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 23839 ;; Parameters:    Size  Location     Type
 23840 ;;		None
 23841 ;; Auto vars:     Size  Location     Type
 23842 ;;		None
 23843 ;; Return value:  Size  Location     Type
 23844 ;;		None               void
 23845 ;; Registers used:
 23846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23847 ;; Tracked objects:
 23848 ;;		On entry : 0/0
 23849 ;;		On exit  : 0/0
 23850 ;;		Unchanged: 0/0
 23851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23856 ;;Total ram usage:        0 bytes
 23857 ;; Hardware stack levels used:    1
 23858 ;; Hardware stack levels required when called:    9
 23859 ;; This function calls:
 23860 ;;		_USBDeviceTasks
 23861 ;; This function is called by:
 23862 ;;		_ISR
 23863 ;; This function uses a non-reentrant model
 23864 ;;
 23865                           
 23866                           	psect	text102
 23867  016CBC                     __ptext102:
 23868                           	opt stack 0
 23869  016CBC                     _USB_ISR:
 23870                           	opt stack 11
 23871                           
 23872                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 23873                           
 23874                           ;incstack = 0
 23875  016CBC  EC9C  F09A         	call	_USBDeviceTasks	;wreg free
 23876  016CC0  0012               	return		;funcret
 23877  016CC2                     __end_of_USB_ISR:
 23878                           	opt stack 0
 23879                           pclatu	equ	0xFFB
 23880                           pclath	equ	0xFFA
 23881                           tblptru	equ	0xFF8
 23882                           tblptrh	equ	0xFF7
 23883                           tblptrl	equ	0xFF6
 23884                           tablat	equ	0xFF5
 23885                           prodh	equ	0xFF4
 23886                           prodl	equ	0xFF3
 23887                           intcon	equ	0xFF2
 23888                           intcon2	equ	0xFF1
 23889                           postinc0	equ	0xFEE
 23890                           fsr0h	equ	0xFEA
 23891                           fsr0l	equ	0xFE9
 23892                           wreg	equ	0xFE8
 23893                           indf1	equ	0xFE7
 23894                           postinc1	equ	0xFE6
 23895                           postdec1	equ	0xFE5
 23896                           fsr1h	equ	0xFE2
 23897                           fsr1l	equ	0xFE1
 23898                           indf2	equ	0xFDF
 23899                           postinc2	equ	0xFDE
 23900                           postdec2	equ	0xFDD
 23901                           plusw2	equ	0xFDB
 23902                           fsr2h	equ	0xFDA
 23903                           fsr2l	equ	0xFD9
 23904                           status	equ	0xFD8
 23905                           
 23906 ;; *************** function _USBDeviceTasks *****************
 23907 ;; Defined at:
 23908 ;;		line 489 in file "../My_library/usb/usb_device.c"
 23909 ;; Parameters:    Size  Location     Type
 23910 ;;		None
 23911 ;; Auto vars:     Size  Location     Type
 23912 ;;  i               1   29[COMRAM] unsigned char 
 23913 ;; Return value:  Size  Location     Type
 23914 ;;		None               void
 23915 ;; Registers used:
 23916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23917 ;; Tracked objects:
 23918 ;;		On entry : 0/0
 23919 ;;		On exit  : 0/0
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23926 ;;Total ram usage:        1 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:    8
 23929 ;; This function calls:
 23930 ;;		_USBCtrlEPAllowStatusStage
 23931 ;;		_USBCtrlEPService
 23932 ;;		_USBStallHandler
 23933 ;;		_USBSuspend
 23934 ;;		_USBWakeFromSuspend
 23935 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23936 ;;		i2_USBDeviceInit
 23937 ;; This function is called by:
 23938 ;;		_USB_ISR
 23939 ;; This function uses a non-reentrant model
 23940 ;;
 23941                           
 23942                           	psect	text103
 23943  013538                     __ptext103:
 23944                           	opt stack 0
 23945  013538                     _USBDeviceTasks:
 23946                           	opt stack 11
 23947                           
 23948                           ;usb_device.c: 491: uint8_t i;
 23949                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23950                           
 23951                           ;incstack = 0
 23952  013538  0413               	decf	_USBDeviceState,w,c	;volatile
 23953  01353A  B4D8               	btfsc	status,2,c
 23954                           
 23955                           ;usb_device.c: 603: {
 23956                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23957  01353C  BA65               	btfsc	3941,5,c	;volatile
 23958  01353E  D008               	goto	i2l9003
 23959                           
 23960                           ;usb_device.c: 614: {
 23961                           ;usb_device.c: 615: {UIR = 0;};
 23962  013540  0E00               	movlw	0
 23963  013542  6E62               	movwf	3938,c	;volatile
 23964                           
 23965                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23966  013544  010F               	movlb	15	; () banked
 23967  013546  8136               	bsf	54,0,b	;volatile
 23968                           
 23969                           ; BSR set to: 15
 23970                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23971  013548  010F               	movlb	15	; () banked
 23972  01354A  8936               	bsf	54,4,b	;volatile
 23973                           
 23974                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23975  01354C  0E02               	movlw	2
 23976  01354E  6E13               	movwf	_USBDeviceState,c	;volatile
 23977  013550                     i2l9003:
 23978                           
 23979                           ;usb_device.c: 622: }
 23980                           ;usb_device.c: 623: }
 23981                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23982  013550  A462               	btfss	3938,2,c	;volatile
 23983  013552  D006               	goto	i2l9011
 23984  013554  010F               	movlb	15	; () banked
 23985  013556  A536               	btfss	54,2,b	;volatile
 23986  013558  D003               	goto	i2l9011
 23987                           
 23988                           ; BSR set to: 15
 23989                           ;usb_device.c: 640: {
 23990                           ;usb_device.c: 641: (UIR &= 0xFB);
 23991  01355A  9462               	bcf	3938,2,c	;volatile
 23992                           
 23993                           ; BSR set to: 15
 23994                           ;usb_device.c: 645: USBWakeFromSuspend();
 23995  01355C  EC5F  F0B4         	call	_USBWakeFromSuspend	;wreg free
 23996  013560                     i2l9011:
 23997                           
 23998                           ;usb_device.c: 647: }
 23999                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 24000  013560  A265               	btfss	3941,1,c	;volatile
 24001  013562  D002               	goto	i2l158
 24002                           
 24003                           ;usb_device.c: 653: {
 24004                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 24005  013564  98A1               	bcf	4001,4,c	;volatile
 24006                           
 24007                           ;usb_device.c: 655: return;
 24008  013566  0012               	return	
 24009  013568                     i2l158:
 24010                           
 24011                           ;usb_device.c: 656: }
 24012                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24013  013568  A062               	btfss	3938,0,c	;volatile
 24014  01356A  D009               	goto	i2l9025
 24015  01356C  010F               	movlb	15	; () banked
 24016  01356E  A136               	btfss	54,0,b	;volatile
 24017  013570  D006               	goto	i2l9025
 24018                           
 24019                           ; BSR set to: 15
 24020                           ;usb_device.c: 669: {
 24021                           ;usb_device.c: 670: USBDeviceInit();
 24022  013572  EC3E  F09B         	call	i2_USBDeviceInit	;wreg free
 24023                           
 24024                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 24025  013576  88A0               	bsf	4000,4,c	;volatile
 24026                           
 24027                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 24028  013578  0E04               	movlw	4
 24029  01357A  6E13               	movwf	_USBDeviceState,c	;volatile
 24030                           
 24031                           ;usb_device.c: 686: (UIR &= 0xFE);
 24032  01357C  9062               	bcf	3938,0,c	;volatile
 24033  01357E                     i2l9025:
 24034                           
 24035                           ;usb_device.c: 687: }
 24036                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24037  01357E  A862               	btfss	3938,4,c	;volatile
 24038  013580  D006               	goto	i2l9033
 24039  013582  010F               	movlb	15	; () banked
 24040  013584  A936               	btfss	54,4,b	;volatile
 24041  013586  D003               	goto	i2l9033
 24042                           
 24043                           ; BSR set to: 15
 24044                           ;usb_device.c: 693: {
 24045                           ;usb_device.c: 698: USBSuspend();
 24046  013588  EC16  F0B5         	call	_USBSuspend	;wreg free
 24047                           
 24048                           ;usb_device.c: 701: (UIR &= 0xEF);
 24049  01358C  9862               	bcf	3938,4,c	;volatile
 24050  01358E                     i2l9033:
 24051                           
 24052                           ;usb_device.c: 702: }
 24053                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 24054  01358E  AC62               	btfss	3938,6,c	;volatile
 24055  013590  D019               	goto	i2l9049
 24056                           
 24057                           ;usb_device.c: 705: {
 24058                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 24059  013592  010F               	movlb	15	; () banked
 24060  013594  AD36               	btfss	54,6,b	;volatile
 24061  013596  D00E               	goto	i2l9039
 24062                           
 24063                           ; BSR set to: 15
 24064                           ;usb_device.c: 707: {
 24065                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24066  013598  0E00               	movlw	0
 24067  01359A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24068  01359C  0E73               	movlw	115
 24069  01359E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24070  0135A0  0E00               	movlw	0
 24071  0135A2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24072  0135A4  0E00               	movlw	0
 24073  0135A6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24074  0135A8  0E00               	movlw	0
 24075  0135AA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24076  0135AC  0E01               	movlw	1
 24077  0135AE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24078  0135B0  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24079  0135B4                     i2l9039:
 24080                           
 24081                           ;usb_device.c: 709: }
 24082                           ;usb_device.c: 710: (UIR &= 0xBF);
 24083  0135B4  9C62               	bcf	3938,6,c	;volatile
 24084                           
 24085                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 24086  0135B6  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24087  0135B8  A4D8               	btfss	status,2,c
 24088                           
 24089                           ;usb_device.c: 736: {
 24090                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 24091  0135BA  0616               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24092                           
 24093                           ;usb_device.c: 738: }
 24094                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 24095  0135BC  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24096  0135BE  B4D8               	btfsc	status,2,c
 24097                           
 24098                           ;usb_device.c: 745: {
 24099                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 24100  0135C0  ECE7  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24101  0135C4                     i2l9049:
 24102                           
 24103                           ;usb_device.c: 747: }
 24104                           ;usb_device.c: 749: }
 24105                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24106  0135C4  AA62               	btfss	3938,5,c	;volatile
 24107  0135C6  D004               	goto	i2l9055
 24108  0135C8  010F               	movlb	15	; () banked
 24109  0135CA  BB36               	btfsc	54,5,b	;volatile
 24110                           
 24111                           ; BSR set to: 15
 24112                           ;usb_device.c: 752: {
 24113                           ;usb_device.c: 753: USBStallHandler();
 24114  0135CC  EC1C  F0B3         	call	_USBStallHandler	;wreg free
 24115  0135D0                     i2l9055:
 24116                           
 24117                           ;usb_device.c: 754: }
 24118                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24119  0135D0  A262               	btfss	3938,1,c	;volatile
 24120  0135D2  D012               	goto	i2l9063
 24121  0135D4  010F               	movlb	15	; () banked
 24122  0135D6  A336               	btfss	54,1,b	;volatile
 24123  0135D8  D00F               	goto	i2l9063
 24124                           
 24125                           ; BSR set to: 15
 24126                           ;usb_device.c: 757: {
 24127                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24128  0135DA  0E7F               	movlw	127
 24129  0135DC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24130  0135DE  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24131  0135E0  0E00               	movlw	0
 24132  0135E2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24133  0135E4  0E00               	movlw	0
 24134  0135E6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24135  0135E8  0E00               	movlw	0
 24136  0135EA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24137  0135EC  0E01               	movlw	1
 24138  0135EE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24139  0135F0  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24140                           
 24141                           ;usb_device.c: 759: {UEIR = 0;};
 24142  0135F4  0E00               	movlw	0
 24143  0135F6  6E63               	movwf	3939,c	;volatile
 24144  0135F8                     i2l9063:
 24145                           
 24146                           ;usb_device.c: 767: }
 24147                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24148  0135F8  0E04               	movlw	4
 24149  0135FA  6013               	cpfslt	_USBDeviceState,c	;volatile
 24150  0135FC  D002               	goto	i2l168
 24151                           
 24152                           ;usb_device.c: 775: {
 24153                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24154  0135FE  98A1               	bcf	4001,4,c	;volatile
 24155                           
 24156                           ;usb_device.c: 777: return;
 24157  013600  0012               	return	
 24158  013602                     i2l168:
 24159                           
 24160                           ;usb_device.c: 778: }
 24161                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24162  013602  010F               	movlb	15	; () banked
 24163  013604  A736               	btfss	54,3,b	;volatile
 24164  013606  D038               	goto	i2l169
 24165                           
 24166                           ; BSR set to: 15
 24167                           ;usb_device.c: 784: {
 24168                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24169  013608  0E00               	movlw	0
 24170  01360A  6E4A               	movwf	USBDeviceTasks@i,c
 24171  01360C                     i2l9069:
 24172                           
 24173                           ; BSR set to: 15
 24174  01360C  0E03               	movlw	3
 24175  01360E  644A               	cpfsgt	USBDeviceTasks@i,c
 24176  013610  D001               	goto	i2l170
 24177  013612  D032               	goto	i2l169
 24178  013614                     i2l170:
 24179                           
 24180                           ;usb_device.c: 786: {
 24181                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24182  013614  A662               	btfss	3938,3,c	;volatile
 24183  013616  D030               	goto	i2l169
 24184                           
 24185                           ;usb_device.c: 788: {
 24186                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24187  013618  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24188                           
 24189                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24190  01361C  302C               	rrcf	_USTATcopy,w,c	;volatile
 24191  01361E  32E8               	rrcf	wreg,f,c
 24192  013620  32E8               	rrcf	wreg,f,c
 24193  013622  0B0F               	andlw	15
 24194  013624  6E1E               	movwf	_endpoint_number,c	;volatile
 24195                           
 24196                           ;usb_device.c: 793: (UIR &= 0xF7);
 24197  013626  9662               	bcf	3938,3,c	;volatile
 24198                           
 24199                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24200  013628  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24201  01362A  D007               	goto	i2l9083
 24202                           
 24203                           ;usb_device.c: 799: {
 24204                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24205  01362C  501E               	movf	_endpoint_number,w,c	;volatile
 24206  01362E  0D01               	mullw	1
 24207  013630  0E04               	movlw	low _ep_data_out
 24208  013632  24F3               	addwf	prodl,w,c
 24209  013634  6ED9               	movwf	fsr2l,c
 24210  013636  0E00               	movlw	high _ep_data_out
 24211  013638  D006               	goto	L7
 24212  01363A                     i2l9083:
 24213                           
 24214                           ;usb_device.c: 802: else
 24215                           ;usb_device.c: 803: {
 24216                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24217  01363A  501E               	movf	_endpoint_number,w,c	;volatile
 24218  01363C  0D01               	mullw	1
 24219  01363E  0E01               	movlw	low _ep_data_in
 24220  013640  24F3               	addwf	prodl,w,c
 24221  013642  6ED9               	movwf	fsr2l,c
 24222  013644  0E00               	movlw	high _ep_data_in
 24223  013646                     L7:
 24224  013646  20F4               	addwfc	prodh,w,c
 24225  013648  6EDA               	movwf	fsr2h,c
 24226  01364A  70DF               	btg	indf2,0,c
 24227                           
 24228                           ;usb_device.c: 805: }
 24229                           ;usb_device.c: 810: if(endpoint_number == 0)
 24230  01364C  501E               	movf	_endpoint_number,w,c	;volatile
 24231  01364E  A4D8               	btfss	status,2,c
 24232  013650  D003               	goto	i2l9089
 24233                           
 24234                           ;usb_device.c: 811: {
 24235                           ;usb_device.c: 812: USBCtrlEPService();
 24236  013652  EC1A  F0A7         	call	_USBCtrlEPService	;wreg free
 24237                           
 24238                           ;usb_device.c: 813: }
 24239  013656  D00E               	goto	i2l9091
 24240  013658                     i2l9089:
 24241                           
 24242                           ;usb_device.c: 814: else
 24243                           ;usb_device.c: 815: {
 24244                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24245  013658  0E00               	movlw	0
 24246  01365A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24247  01365C  0E72               	movlw	114
 24248  01365E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24249  013660  0E2C               	movlw	low _USTATcopy
 24250  013662  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24251  013664  0E00               	movlw	high _USTATcopy
 24252  013666  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24253  013668  0E00               	movlw	0
 24254  01366A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24255  01366C  0E00               	movlw	0
 24256  01366E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24257  013670  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24258  013674                     i2l9091:
 24259  013674  2A4A               	incf	USBDeviceTasks@i,f,c
 24260  013676  D7CA               	goto	i2l9069
 24261  013678                     i2l169:
 24262                           
 24263                           ;usb_device.c: 822: }
 24264                           ;usb_device.c: 823: }
 24265                           ;usb_device.c: 824: }
 24266                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24267  013678  98A1               	bcf	4001,4,c	;volatile
 24268  01367A  0012               	return		;funcret
 24269  01367C                     __end_of_USBDeviceTasks:
 24270                           	opt stack 0
 24271                           pclatu	equ	0xFFB
 24272                           pclath	equ	0xFFA
 24273                           tblptru	equ	0xFF8
 24274                           tblptrh	equ	0xFF7
 24275                           tblptrl	equ	0xFF6
 24276                           tablat	equ	0xFF5
 24277                           prodh	equ	0xFF4
 24278                           prodl	equ	0xFF3
 24279                           intcon	equ	0xFF2
 24280                           intcon2	equ	0xFF1
 24281                           postinc0	equ	0xFEE
 24282                           fsr0h	equ	0xFEA
 24283                           fsr0l	equ	0xFE9
 24284                           wreg	equ	0xFE8
 24285                           indf1	equ	0xFE7
 24286                           postinc1	equ	0xFE6
 24287                           postdec1	equ	0xFE5
 24288                           fsr1h	equ	0xFE2
 24289                           fsr1l	equ	0xFE1
 24290                           indf2	equ	0xFDF
 24291                           postinc2	equ	0xFDE
 24292                           postdec2	equ	0xFDD
 24293                           plusw2	equ	0xFDB
 24294                           fsr2h	equ	0xFDA
 24295                           fsr2l	equ	0xFD9
 24296                           status	equ	0xFD8
 24297                           
 24298 ;; *************** function i2_USBDeviceInit *****************
 24299 ;; Defined at:
 24300 ;;		line 298 in file "../My_library/usb/usb_device.c"
 24301 ;; Parameters:    Size  Location     Type
 24302 ;;		None
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24305 ;; Return value:  Size  Location     Type
 24306 ;;		None               void
 24307 ;; Registers used:
 24308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24309 ;; Tracked objects:
 24310 ;;		On entry : 0/0
 24311 ;;		On exit  : 0/0
 24312 ;;		Unchanged: 0/0
 24313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24318 ;;Total ram usage:        1 bytes
 24319 ;; Hardware stack levels used:    1
 24320 ;; Hardware stack levels required when called:    1
 24321 ;; This function calls:
 24322 ;;		i2_memset
 24323 ;; This function is called by:
 24324 ;;		_USBDeviceTasks
 24325 ;; This function uses a non-reentrant model
 24326 ;;
 24327                           
 24328                           	psect	text104
 24329  01367C                     __ptext104:
 24330                           	opt stack 0
 24331  01367C                     i2_USBDeviceInit:
 24332                           	opt stack 17
 24333                           
 24334                           ;usb_device.c: 300: uint8_t i;
 24335                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24336                           
 24337                           ;incstack = 0
 24338  01367C  98A0               	bcf	4000,4,c	;volatile
 24339                           
 24340                           ;usb_device.c: 305: {UEIR = 0;};
 24341  01367E  0E00               	movlw	0
 24342  013680  6E63               	movwf	3939,c	;volatile
 24343                           
 24344                           ;usb_device.c: 308: {UIR = 0;};
 24345  013682  0E00               	movlw	0
 24346  013684  6E62               	movwf	3938,c	;volatile
 24347                           
 24348                           ;usb_device.c: 311: UEP0 = 0;
 24349  013686  0E00               	movlw	0
 24350  013688  010F               	movlb	15	; () banked
 24351  01368A  6F26               	movwf	38,b	;volatile
 24352                           
 24353                           ; BSR set to: 15
 24354                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24355  01368C  0E27               	movlw	39
 24356  01368E  6E2D               	movwf	i2memset@p1,c
 24357  013690  0E0F               	movlw	15
 24358  013692  6E2E               	movwf	i2memset@p1+1,c
 24359  013694  0E00               	movlw	0
 24360  013696  6E30               	movwf	i2memset@c+1,c
 24361  013698  0E00               	movlw	0
 24362  01369A  6E2F               	movwf	i2memset@c,c
 24363  01369C  0E00               	movlw	0
 24364  01369E  6E32               	movwf	i2memset@n+1,c
 24365  0136A0  0E02               	movlw	2
 24366  0136A2  6E31               	movwf	i2memset@n,c
 24367  0136A4  EC2C  F0B5         	call	i2_memset	;wreg free
 24368                           
 24369                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24370  0136A8  0E16               	movlw	22
 24371  0136AA  010F               	movlb	15	; () banked
 24372  0136AC  6F39               	movwf	57,b	;volatile
 24373                           
 24374                           ; BSR set to: 15
 24375  0136AE  0E9F               	movlw	159
 24376  0136B0  010F               	movlb	15	; () banked
 24377  0136B2  6F37               	movwf	55,b	;volatile
 24378                           
 24379                           ; BSR set to: 15
 24380  0136B4  0E7B               	movlw	123
 24381  0136B6  010F               	movlb	15	; () banked
 24382  0136B8  6F36               	movwf	54,b	;volatile
 24383                           
 24384                           ; BSR set to: 15
 24385                           ;usb_device.c: 318: ;
 24386                           ;usb_device.c: 321: ;
 24387                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24388  0136BA  0E00               	movlw	0
 24389  0136BC  6E35               	movwf	i2USBDeviceInit@i,c
 24390  0136BE                     i2l8939:
 24391                           
 24392                           ; BSR set to: 15
 24393  0136BE  0E0B               	movlw	11
 24394  0136C0  6435               	cpfsgt	i2USBDeviceInit@i,c
 24395  0136C2  D001               	goto	i2l8943
 24396  0136C4  D00E               	goto	i2l146
 24397  0136C6                     i2l8943:
 24398                           
 24399                           ;usb_device.c: 325: {
 24400                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24401  0136C6  5035               	movf	i2USBDeviceInit@i,w,c
 24402  0136C8  0D04               	mullw	4
 24403  0136CA  0E00               	movlw	0
 24404  0136CC  24F3               	addwf	prodl,w,c
 24405  0136CE  6ED9               	movwf	fsr2l,c
 24406  0136D0  0E0D               	movlw	13
 24407  0136D2  20F4               	addwfc	prodh,w,c
 24408  0136D4  6EDA               	movwf	fsr2h,c
 24409  0136D6  6ADE               	clrf	postinc2,c
 24410  0136D8  6ADE               	clrf	postinc2,c
 24411  0136DA  6ADE               	clrf	postinc2,c
 24412  0136DC  6ADD               	clrf	postdec2,c
 24413  0136DE  2A35               	incf	i2USBDeviceInit@i,f,c
 24414  0136E0  D7EE               	goto	i2l8939
 24415  0136E2                     i2l146:
 24416                           
 24417                           ;usb_device.c: 327: }
 24418                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24419  0136E2  8C65               	bsf	3941,6,c	;volatile
 24420                           
 24421                           ;usb_device.c: 333: UADDR = 0x00;
 24422  0136E4  0E00               	movlw	0
 24423  0136E6  010F               	movlb	15	; () banked
 24424  0136E8  6F38               	movwf	56,b	;volatile
 24425                           
 24426                           ; BSR set to: 15
 24427                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24428  0136EA  9865               	bcf	3941,4,c	;volatile
 24429                           
 24430                           ; BSR set to: 15
 24431                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24432  0136EC  9C65               	bcf	3941,6,c	;volatile
 24433                           
 24434                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24435  0136EE  D00C               	goto	i2l8963
 24436  0136F0                     i2l8955:
 24437                           
 24438                           ;usb_device.c: 343: {
 24439                           ;usb_device.c: 344: (UIR &= 0xF7);
 24440  0136F0  9662               	bcf	3938,3,c	;volatile
 24441                           
 24442                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24443  0136F2  0E00               	movlw	0
 24444  0136F4  0100               	movlb	0	; () banked
 24445  0136F6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24449  0136F8  0E00               	movlw	0
 24450  0136FA  0100               	movlb	0	; () banked
 24451  0136FC  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24452                           
 24453                           ; BSR set to: 0
 24454                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24455  0136FE  0E00               	movlw	0
 24456  013700  0100               	movlb	0	; () banked
 24457  013702  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24458  013704  0E00               	movlw	0
 24459  013706  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24460  013708                     i2l8963:
 24461  013708  B662               	btfsc	3938,3,c	;volatile
 24462  01370A  D7F2               	goto	i2l8955
 24463                           
 24464                           ;usb_device.c: 349: }
 24465                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24466  01370C  0E01               	movlw	1
 24467  01370E  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24468                           
 24469                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24470  013710  0E01               	movlw	1
 24471  013712  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24472                           
 24473                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24474  013714  0E00               	movlw	0
 24475  013716  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24476                           
 24477                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24478  013718  0E00               	movlw	0
 24479  01371A  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24480                           
 24481                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24482  01371C  0E00               	movlw	0
 24483  01371E  0101               	movlb	1	; () banked
 24484  013720  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24485                           
 24486                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24487  013722  0E00               	movlw	0
 24488  013724  6E35               	movwf	i2USBDeviceInit@i,c
 24489  013726                     i2l8967:
 24490                           
 24491                           ; BSR set to: 1
 24492  013726  0E02               	movlw	2
 24493  013728  6435               	cpfsgt	i2USBDeviceInit@i,c
 24494  01372A  D001               	goto	i2l8971
 24495  01372C  D02E               	goto	i2l8977
 24496  01372E                     i2l8971:
 24497                           
 24498                           ;usb_device.c: 363: {
 24499                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24500  01372E  5035               	movf	i2USBDeviceInit@i,w,c
 24501  013730  0D02               	mullw	2
 24502  013732  0EF5               	movlw	low _pBDTEntryIn
 24503  013734  24F3               	addwf	prodl,w,c
 24504  013736  6ED9               	movwf	fsr2l,c
 24505  013738  0E00               	movlw	high _pBDTEntryIn
 24506  01373A  20F4               	addwfc	prodh,w,c
 24507  01373C  6EDA               	movwf	fsr2h,c
 24508  01373E  0E00               	movlw	0
 24509  013740  6EDE               	movwf	postinc2,c
 24510  013742  0E00               	movlw	0
 24511  013744  6EDD               	movwf	postdec2,c
 24512                           
 24513                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24514  013746  5035               	movf	i2USBDeviceInit@i,w,c
 24515  013748  0D02               	mullw	2
 24516  01374A  0E00               	movlw	low _pBDTEntryOut
 24517  01374C  24F3               	addwf	prodl,w,c
 24518  01374E  6ED9               	movwf	fsr2l,c
 24519  013750  0E01               	movlw	high _pBDTEntryOut
 24520  013752  20F4               	addwfc	prodh,w,c
 24521  013754  6EDA               	movwf	fsr2h,c
 24522  013756  0E00               	movlw	0
 24523  013758  6EDE               	movwf	postinc2,c
 24524  01375A  0E00               	movlw	0
 24525  01375C  6EDD               	movwf	postdec2,c
 24526                           
 24527                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24528  01375E  5035               	movf	i2USBDeviceInit@i,w,c
 24529  013760  0D01               	mullw	1
 24530  013762  0E01               	movlw	low _ep_data_in
 24531  013764  24F3               	addwf	prodl,w,c
 24532  013766  6ED9               	movwf	fsr2l,c
 24533  013768  0E00               	movlw	high _ep_data_in
 24534  01376A  20F4               	addwfc	prodh,w,c
 24535  01376C  6EDA               	movwf	fsr2h,c
 24536  01376E  0E00               	movlw	0
 24537  013770  6EDF               	movwf	indf2,c
 24538                           
 24539                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24540  013772  5035               	movf	i2USBDeviceInit@i,w,c
 24541  013774  0D01               	mullw	1
 24542  013776  0E04               	movlw	low _ep_data_out
 24543  013778  24F3               	addwf	prodl,w,c
 24544  01377A  6ED9               	movwf	fsr2l,c
 24545  01377C  0E00               	movlw	high _ep_data_out
 24546  01377E  20F4               	addwfc	prodh,w,c
 24547  013780  6EDA               	movwf	fsr2h,c
 24548  013782  0E00               	movlw	0
 24549  013784  6EDF               	movwf	indf2,c
 24550  013786  2A35               	incf	i2USBDeviceInit@i,f,c
 24551  013788  D7CE               	goto	i2l8967
 24552  01378A                     i2l8977:
 24553                           
 24554                           ;usb_device.c: 368: }
 24555                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24556  01378A  0E08               	movlw	8
 24557  01378C  0100               	movlb	0	; () banked
 24558  01378E  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24559  013790  0E0D               	movlw	13
 24560  013792  0100               	movlb	0	; () banked
 24561  013794  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24562                           
 24563                           ; BSR set to: 0
 24564                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 24565  013796  0E16               	movlw	22
 24566  013798  010F               	movlb	15	; () banked
 24567  01379A  6F26               	movwf	38,b	;volatile
 24568                           
 24569                           ; BSR set to: 15
 24570                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24571  01379C  0E0D               	movlw	13
 24572  01379E  010D               	movlb	13	; () banked
 24573  0137A0  6F03               	movwf	3,b	;volatile
 24574  0137A2  0E30               	movlw	48
 24575  0137A4  6F02               	movwf	2,b	;volatile
 24576                           
 24577                           ; BSR set to: 13
 24578                           ;usb_device.c: 376: BDT[0].CNT = 8;
 24579  0137A6  0E08               	movlw	8
 24580  0137A8  010D               	movlb	13	; () banked
 24581  0137AA  6F01               	movwf	1,b	;volatile
 24582                           
 24583                           ; BSR set to: 13
 24584                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 24585  0137AC  0E04               	movlw	4
 24586  0137AE  010D               	movlb	13	; () banked
 24587  0137B0  6F00               	movwf	0,b	;volatile
 24588                           
 24589                           ; BSR set to: 13
 24590                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 24591  0137B2  010D               	movlb	13	; () banked
 24592  0137B4  8F00               	bsf	0,7,b	;volatile
 24593                           
 24594                           ; BSR set to: 13
 24595                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 24596  0137B6  0E00               	movlw	0
 24597  0137B8  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 24598                           
 24599                           ; BSR set to: 13
 24600                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 24601  0137BA  0E00               	movlw	0
 24602  0137BC  6E13               	movwf	_USBDeviceState,c	;volatile
 24603                           
 24604                           ; BSR set to: 13
 24605  0137BE  0012               	return		;funcret
 24606  0137C0                     __end_ofi2_USBDeviceInit:
 24607                           	opt stack 0
 24608                           pclatu	equ	0xFFB
 24609                           pclath	equ	0xFFA
 24610                           tblptru	equ	0xFF8
 24611                           tblptrh	equ	0xFF7
 24612                           tblptrl	equ	0xFF6
 24613                           tablat	equ	0xFF5
 24614                           prodh	equ	0xFF4
 24615                           prodl	equ	0xFF3
 24616                           intcon	equ	0xFF2
 24617                           intcon2	equ	0xFF1
 24618                           postinc0	equ	0xFEE
 24619                           fsr0h	equ	0xFEA
 24620                           fsr0l	equ	0xFE9
 24621                           wreg	equ	0xFE8
 24622                           indf1	equ	0xFE7
 24623                           postinc1	equ	0xFE6
 24624                           postdec1	equ	0xFE5
 24625                           fsr1h	equ	0xFE2
 24626                           fsr1l	equ	0xFE1
 24627                           indf2	equ	0xFDF
 24628                           postinc2	equ	0xFDE
 24629                           postdec2	equ	0xFDD
 24630                           plusw2	equ	0xFDB
 24631                           fsr2h	equ	0xFDA
 24632                           fsr2l	equ	0xFD9
 24633                           status	equ	0xFD8
 24634                           
 24635 ;; *************** function _USBWakeFromSuspend *****************
 24636 ;; Defined at:
 24637 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 24638 ;; Parameters:    Size  Location     Type
 24639 ;;		None
 24640 ;; Auto vars:     Size  Location     Type
 24641 ;;		None
 24642 ;; Return value:  Size  Location     Type
 24643 ;;		None               void
 24644 ;; Registers used:
 24645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24646 ;; Tracked objects:
 24647 ;;		On entry : 0/0
 24648 ;;		On exit  : 0/0
 24649 ;;		Unchanged: 0/0
 24650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;Total ram usage:        0 bytes
 24656 ;; Hardware stack levels used:    1
 24657 ;; Hardware stack levels required when called:    4
 24658 ;; This function calls:
 24659 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24660 ;; This function is called by:
 24661 ;;		_USBDeviceTasks
 24662 ;; This function uses a non-reentrant model
 24663 ;;
 24664                           
 24665                           	psect	text105
 24666  0168BE                     __ptext105:
 24667                           	opt stack 0
 24668  0168BE                     _USBWakeFromSuspend:
 24669                           	opt stack 14
 24670                           
 24671                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 24672                           
 24673                           ; BSR set to: 13
 24674                           ;incstack = 0
 24675  0168BE  0E00               	movlw	0
 24676  0168C0  0101               	movlb	1	; () banked
 24677  0168C2  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24681  0168C4  0E00               	movlw	0
 24682  0168C6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24683  0168C8  0E74               	movlw	116
 24684  0168CA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24685  0168CC  0E00               	movlw	0
 24686  0168CE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24687  0168D0  0E00               	movlw	0
 24688  0168D2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24689  0168D4  0E00               	movlw	0
 24690  0168D6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24691  0168D8  0E00               	movlw	0
 24692  0168DA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24693  0168DC  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24694                           
 24695                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 24696  0168E0  9265               	bcf	3941,1,c	;volatile
 24697                           
 24698                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 24699  0168E2  010F               	movlb	15	; () banked
 24700  0168E4  9536               	bcf	54,2,b	;volatile
 24701                           
 24702                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 24703  0168E6  D001               	goto	i2l8241
 24704  0168E8                     i2l8239:
 24705                           
 24706                           ;usb_device.c: 2342: {
 24707                           ;usb_device.c: 2343: (UIR &= 0xFB);
 24708  0168E8  9462               	bcf	3938,2,c	;volatile
 24709  0168EA                     i2l8241:
 24710  0168EA  A462               	btfss	3938,2,c	;volatile
 24711  0168EC  0012               	return	
 24712  0168EE  D7FC               	goto	i2l8239
 24713  0168F0                     __end_of_USBWakeFromSuspend:
 24714                           	opt stack 0
 24715                           pclatu	equ	0xFFB
 24716                           pclath	equ	0xFFA
 24717                           tblptru	equ	0xFF8
 24718                           tblptrh	equ	0xFF7
 24719                           tblptrl	equ	0xFF6
 24720                           tablat	equ	0xFF5
 24721                           prodh	equ	0xFF4
 24722                           prodl	equ	0xFF3
 24723                           intcon	equ	0xFF2
 24724                           intcon2	equ	0xFF1
 24725                           postinc0	equ	0xFEE
 24726                           fsr0h	equ	0xFEA
 24727                           fsr0l	equ	0xFE9
 24728                           wreg	equ	0xFE8
 24729                           indf1	equ	0xFE7
 24730                           postinc1	equ	0xFE6
 24731                           postdec1	equ	0xFE5
 24732                           fsr1h	equ	0xFE2
 24733                           fsr1l	equ	0xFE1
 24734                           indf2	equ	0xFDF
 24735                           postinc2	equ	0xFDE
 24736                           postdec2	equ	0xFDD
 24737                           plusw2	equ	0xFDB
 24738                           fsr2h	equ	0xFDA
 24739                           fsr2l	equ	0xFD9
 24740                           status	equ	0xFD8
 24741                           
 24742 ;; *************** function _USBSuspend *****************
 24743 ;; Defined at:
 24744 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;		None
 24749 ;; Return value:  Size  Location     Type
 24750 ;;		None               void
 24751 ;; Registers used:
 24752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 0/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; Hardware stack levels required when called:    4
 24765 ;; This function calls:
 24766 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24767 ;; This function is called by:
 24768 ;;		_USBDeviceTasks
 24769 ;; This function uses a non-reentrant model
 24770 ;;
 24771                           
 24772                           	psect	text106
 24773  016A2C                     __ptext106:
 24774                           	opt stack 0
 24775  016A2C                     _USBSuspend:
 24776                           	opt stack 14
 24777                           
 24778                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 24779                           
 24780                           ;incstack = 0
 24781  016A2C  010F               	movlb	15	; () banked
 24782  016A2E  8536               	bsf	54,2,b	;volatile
 24783                           
 24784                           ; BSR set to: 15
 24785                           ;usb_device.c: 2271: (UIR &= 0xEF);
 24786  016A30  9862               	bcf	3938,4,c	;volatile
 24787                           
 24788                           ; BSR set to: 15
 24789                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 24790  016A32  8265               	bsf	3941,1,c	;volatile
 24791                           
 24792                           ; BSR set to: 15
 24793                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 24794  016A34  0E01               	movlw	1
 24795  016A36  0101               	movlb	1	; () banked
 24796  016A38  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24797                           
 24798                           ; BSR set to: 1
 24799                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24800  016A3A  0E00               	movlw	0
 24801  016A3C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24802  016A3E  0E75               	movlw	117
 24803  016A40  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24804  016A42  0E00               	movlw	0
 24805  016A44  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24806  016A46  0E00               	movlw	0
 24807  016A48  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24808  016A4A  0E00               	movlw	0
 24809  016A4C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24810  016A4E  0E00               	movlw	0
 24811  016A50  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24812  016A52  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24813  016A56  0012               	return		;funcret
 24814  016A58                     __end_of_USBSuspend:
 24815                           	opt stack 0
 24816                           pclatu	equ	0xFFB
 24817                           pclath	equ	0xFFA
 24818                           tblptru	equ	0xFF8
 24819                           tblptrh	equ	0xFF7
 24820                           tblptrl	equ	0xFF6
 24821                           tablat	equ	0xFF5
 24822                           prodh	equ	0xFF4
 24823                           prodl	equ	0xFF3
 24824                           intcon	equ	0xFF2
 24825                           intcon2	equ	0xFF1
 24826                           postinc0	equ	0xFEE
 24827                           fsr0h	equ	0xFEA
 24828                           fsr0l	equ	0xFE9
 24829                           wreg	equ	0xFE8
 24830                           indf1	equ	0xFE7
 24831                           postinc1	equ	0xFE6
 24832                           postdec1	equ	0xFE5
 24833                           fsr1h	equ	0xFE2
 24834                           fsr1l	equ	0xFE1
 24835                           indf2	equ	0xFDF
 24836                           postinc2	equ	0xFDE
 24837                           postdec2	equ	0xFDD
 24838                           plusw2	equ	0xFDB
 24839                           fsr2h	equ	0xFDA
 24840                           fsr2l	equ	0xFD9
 24841                           status	equ	0xFD8
 24842                           
 24843 ;; *************** function _USBStallHandler *****************
 24844 ;; Defined at:
 24845 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 24846 ;; Parameters:    Size  Location     Type
 24847 ;;		None
 24848 ;; Auto vars:     Size  Location     Type
 24849 ;;		None
 24850 ;; Return value:  Size  Location     Type
 24851 ;;		None               void
 24852 ;; Registers used:
 24853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24854 ;; Tracked objects:
 24855 ;;		On entry : 0/0
 24856 ;;		On exit  : 0/0
 24857 ;;		Unchanged: 0/0
 24858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24863 ;;Total ram usage:        1 bytes
 24864 ;; Hardware stack levels used:    1
 24865 ;; This function calls:
 24866 ;;		Nothing
 24867 ;; This function is called by:
 24868 ;;		_USBDeviceTasks
 24869 ;; This function uses a non-reentrant model
 24870 ;;
 24871                           
 24872                           	psect	text107
 24873  016638                     __ptext107:
 24874                           	opt stack 0
 24875  016638                     _USBStallHandler:
 24876                           	opt stack 18
 24877                           
 24878                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 24879                           
 24880                           ;incstack = 0
 24881  016638  010F               	movlb	15	; () banked
 24882  01663A  A126               	btfss	38,0,b	;volatile
 24883  01663C  D01E               	goto	i2l308
 24884                           
 24885                           ; BSR set to: 15
 24886                           ;usb_device.c: 2215: {
 24887                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24888  01663E  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24889  016642  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24890  016646  0E80               	movlw	128
 24891  016648  18DE               	xorwf	postinc2,w,c
 24892  01664A  A4D8               	btfss	status,2,c
 24893  01664C  D014               	goto	i2l8263
 24894                           
 24895                           ; BSR set to: 15
 24896  01664E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 24897  016652  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24898  016656  0E84               	movlw	132
 24899  016658  18DE               	xorwf	postinc2,w,c
 24900  01665A  A4D8               	btfss	status,2,c
 24901  01665C  D00C               	goto	i2l8263
 24902                           
 24903                           ; BSR set to: 15
 24904                           ;usb_device.c: 2218: {
 24905                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24906  01665E  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24907  016662  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24908  016666  0E0C               	movlw	12
 24909  016668  6EDF               	movwf	indf2,c
 24910                           
 24911                           ; BSR set to: 15
 24912                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24913  01666A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24914  01666E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24915  016672  0E00               	movlw	0
 24916  016674  8EDB               	bsf	plusw2,7,c
 24917  016676                     i2l8263:
 24918                           
 24919                           ; BSR set to: 15
 24920                           ;usb_device.c: 2222: }
 24921                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 24922  016676  010F               	movlb	15	; () banked
 24923  016678  9126               	bcf	38,0,b	;volatile
 24924  01667A                     i2l308:
 24925                           
 24926                           ; BSR set to: 15
 24927                           ;usb_device.c: 2224: }
 24928                           ;usb_device.c: 2226: (UIR &= 0xDF);
 24929  01667A  9A62               	bcf	3938,5,c	;volatile
 24930                           
 24931                           ; BSR set to: 15
 24932  01667C  0012               	return		;funcret
 24933  01667E                     __end_of_USBStallHandler:
 24934                           	opt stack 0
 24935                           pclatu	equ	0xFFB
 24936                           pclath	equ	0xFFA
 24937                           tblptru	equ	0xFF8
 24938                           tblptrh	equ	0xFF7
 24939                           tblptrl	equ	0xFF6
 24940                           tablat	equ	0xFF5
 24941                           prodh	equ	0xFF4
 24942                           prodl	equ	0xFF3
 24943                           intcon	equ	0xFF2
 24944                           intcon2	equ	0xFF1
 24945                           postinc0	equ	0xFEE
 24946                           fsr0h	equ	0xFEA
 24947                           fsr0l	equ	0xFE9
 24948                           wreg	equ	0xFE8
 24949                           indf1	equ	0xFE7
 24950                           postinc1	equ	0xFE6
 24951                           postdec1	equ	0xFE5
 24952                           fsr1h	equ	0xFE2
 24953                           fsr1l	equ	0xFE1
 24954                           indf2	equ	0xFDF
 24955                           postinc2	equ	0xFDE
 24956                           postdec2	equ	0xFDD
 24957                           plusw2	equ	0xFDB
 24958                           fsr2h	equ	0xFDA
 24959                           fsr2l	equ	0xFD9
 24960                           status	equ	0xFD8
 24961                           
 24962 ;; *************** function _USBCtrlEPService *****************
 24963 ;; Defined at:
 24964 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 24965 ;; Parameters:    Size  Location     Type
 24966 ;;		None
 24967 ;; Auto vars:     Size  Location     Type
 24968 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24969 ;; Return value:  Size  Location     Type
 24970 ;;		None               void
 24971 ;; Registers used:
 24972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24973 ;; Tracked objects:
 24974 ;;		On entry : 0/0
 24975 ;;		On exit  : 0/0
 24976 ;;		Unchanged: 0/0
 24977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24981 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24982 ;;Total ram usage:        3 bytes
 24983 ;; Hardware stack levels used:    1
 24984 ;; Hardware stack levels required when called:    7
 24985 ;; This function calls:
 24986 ;;		_USBCtrlTrfInHandler
 24987 ;;		_USBCtrlTrfOutHandler
 24988 ;;		_USBCtrlTrfSetupHandler
 24989 ;; This function is called by:
 24990 ;;		_USBDeviceTasks
 24991 ;; This function uses a non-reentrant model
 24992 ;;
 24993                           
 24994                           	psect	text108
 24995  014E34                     __ptext108:
 24996                           	opt stack 0
 24997  014E34                     _USBCtrlEPService:
 24998                           	opt stack 11
 24999                           
 25000                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 25001                           
 25002                           ; BSR set to: 15
 25003                           ;incstack = 0
 25004  014E34  0E2D               	movlw	45
 25005  014E36  6E16               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25006                           
 25007                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 25008  014E38  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25009  014E3C  0EFD               	movlw	253
 25010  014E3E  1647               	andwf	??_USBCtrlEPService,f,c
 25011  014E40  A4D8               	btfss	status,2,c
 25012  014E42  D057               	goto	i2l8297
 25013                           
 25014                           ;usb_device.c: 2380: {
 25015                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25016  014E44  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25017  014E48  90D8               	bcf	status,0,c
 25018  014E4A  3247               	rrcf	??_USBCtrlEPService,f,c
 25019  014E4C  0E3F               	movlw	63
 25020  014E4E  1647               	andwf	??_USBCtrlEPService,f,c
 25021  014E50  5047               	movf	??_USBCtrlEPService,w,c
 25022  014E52  0D04               	mullw	4
 25023  014E54  0E00               	movlw	0
 25024  014E56  24F3               	addwf	prodl,w,c
 25025  014E58  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 25026  014E5A  0E0D               	movlw	13
 25027  014E5C  20F4               	addwfc	prodh,w,c
 25028  014E5E  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25029                           
 25030                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25031  014E60  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25032  014E64  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25033                           
 25034                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25035  014E68  0E04               	movlw	4
 25036  014E6A  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 25037                           
 25038                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25039  014E6C  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25040  014E70  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25041  014E74  30DF               	rrcf	indf2,w,c
 25042  014E76  32E8               	rrcf	wreg,f,c
 25043  014E78  0B0F               	andlw	15
 25044  014E7A  0A0D               	xorlw	13
 25045  014E7C  A4D8               	btfss	status,2,c
 25046  014E7E  D036               	goto	i2l8295
 25047                           
 25048                           ;usb_device.c: 2397: {
 25049                           ;usb_device.c: 2398: unsigned char setup_cnt;
 25050                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25051  014E80  0E00               	movlw	0
 25052  014E82  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 25053  014E84                     i2l8279:
 25054  014E84  0E07               	movlw	7
 25055  014E86  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25056  014E88  D001               	goto	i2l8283
 25057  014E8A  D023               	goto	i2l8291
 25058  014E8C                     i2l8283:
 25059                           
 25060                           ;usb_device.c: 2405: {
 25061                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25062  014E8C  EE20 F002          	lfsr	2,2
 25063  014E90  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25064  014E92  26D9               	addwf	fsr2l,f,c
 25065  014E94  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25066  014E96  22DA               	addwfc	fsr2h,f,c
 25067  014E98  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 25068  014E9C  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 25069  014EA0  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25070  014EA4  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25071  014EA8  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 25072  014EAA  0D01               	mullw	1
 25073  014EAC  0E30               	movlw	48
 25074  014EAE  24F3               	addwf	prodl,w,c
 25075  014EB0  6EE1               	movwf	fsr1l,c
 25076  014EB2  0E0D               	movlw	13
 25077  014EB4  20F4               	addwfc	prodh,w,c
 25078  014EB6  6EE2               	movwf	fsr1h,c
 25079  014EB8  CFDF FFE7          	movff	indf2,indf1
 25080                           
 25081                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 25082  014EBC  EE20 F002          	lfsr	2,2
 25083  014EC0  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25084  014EC2  26D9               	addwf	fsr2l,f,c
 25085  014EC4  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25086  014EC6  22DA               	addwfc	fsr2h,f,c
 25087  014EC8  2ADE               	incf	postinc2,f,c
 25088  014ECA  0E00               	movlw	0
 25089  014ECC  22DD               	addwfc	postdec2,f,c
 25090  014ECE  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25091  014ED0  D7D9               	goto	i2l8279
 25092  014ED2                     i2l8291:
 25093                           
 25094                           ;usb_device.c: 2408: }
 25095                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25096  014ED2  EE20 F002          	lfsr	2,2
 25097  014ED6  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25098  014ED8  26D9               	addwf	fsr2l,f,c
 25099  014EDA  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25100  014EDC  22DA               	addwfc	fsr2h,f,c
 25101  014EDE  0E30               	movlw	48
 25102  014EE0  6EDE               	movwf	postinc2,c
 25103  014EE2  0E0D               	movlw	13
 25104  014EE4  6EDD               	movwf	postdec2,c
 25105                           
 25106                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 25107  014EE6  ECE6  F0AD         	call	_USBCtrlTrfSetupHandler	;wreg free
 25108                           
 25109                           ;usb_device.c: 2413: }
 25110  014EEA  0012               	return	
 25111  014EEC                     i2l8295:
 25112                           
 25113                           ;usb_device.c: 2414: else
 25114                           ;usb_device.c: 2415: {
 25115                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 25116  014EEC  EC4D  F0B2         	call	_USBCtrlTrfOutHandler	;wreg free
 25117                           
 25118                           ;usb_device.c: 2418: }
 25119                           ;usb_device.c: 2419: }
 25120  014EF0  0012               	return	
 25121  014EF2                     i2l8297:
 25122                           
 25123                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 25124  014EF2  502C               	movf	_USTATcopy,w,c	;volatile
 25125  014EF4  0BFD               	andlw	253
 25126  014EF6  0A04               	xorlw	4
 25127  014EF8  A4D8               	btfss	status,2,c
 25128  014EFA  0012               	return	
 25129                           
 25130                           ;usb_device.c: 2421: {
 25131                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 25132  014EFC  EC49  F0A8         	call	_USBCtrlTrfInHandler	;wreg free
 25133  014F00  0012               	return	
 25134  014F02                     __end_of_USBCtrlEPService:
 25135                           	opt stack 0
 25136                           pclatu	equ	0xFFB
 25137                           pclath	equ	0xFFA
 25138                           tblptru	equ	0xFF8
 25139                           tblptrh	equ	0xFF7
 25140                           tblptrl	equ	0xFF6
 25141                           tablat	equ	0xFF5
 25142                           prodh	equ	0xFF4
 25143                           prodl	equ	0xFF3
 25144                           intcon	equ	0xFF2
 25145                           intcon2	equ	0xFF1
 25146                           postinc0	equ	0xFEE
 25147                           fsr0h	equ	0xFEA
 25148                           fsr0l	equ	0xFE9
 25149                           wreg	equ	0xFE8
 25150                           indf1	equ	0xFE7
 25151                           postinc1	equ	0xFE6
 25152                           postdec1	equ	0xFE5
 25153                           fsr1h	equ	0xFE2
 25154                           fsr1l	equ	0xFE1
 25155                           indf2	equ	0xFDF
 25156                           postinc2	equ	0xFDE
 25157                           postdec2	equ	0xFDD
 25158                           plusw2	equ	0xFDB
 25159                           fsr2h	equ	0xFDA
 25160                           fsr2l	equ	0xFD9
 25161                           status	equ	0xFD8
 25162                           
 25163 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25164 ;; Defined at:
 25165 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 25166 ;; Parameters:    Size  Location     Type
 25167 ;;		None
 25168 ;; Auto vars:     Size  Location     Type
 25169 ;;		None
 25170 ;; Return value:  Size  Location     Type
 25171 ;;		None               void
 25172 ;; Registers used:
 25173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25174 ;; Tracked objects:
 25175 ;;		On entry : 0/0
 25176 ;;		On exit  : 0/0
 25177 ;;		Unchanged: 0/0
 25178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25183 ;;Total ram usage:        0 bytes
 25184 ;; Hardware stack levels used:    1
 25185 ;; Hardware stack levels required when called:    6
 25186 ;; This function calls:
 25187 ;;		_USBCheckStdRequest
 25188 ;;		_USBCtrlEPServiceComplete
 25189 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25190 ;; This function is called by:
 25191 ;;		_USBCtrlEPService
 25192 ;; This function uses a non-reentrant model
 25193 ;;
 25194                           
 25195                           	psect	text109
 25196  015BCC                     __ptext109:
 25197                           	opt stack 0
 25198  015BCC                     _USBCtrlTrfSetupHandler:
 25199                           	opt stack 11
 25200                           
 25201                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25202                           
 25203                           ;incstack = 0
 25204  015BCC  0E00               	movlw	0
 25205  015BCE  6E21               	movwf	_shortPacketStatus,c	;volatile
 25206                           
 25207                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25208  015BD0  0E00               	movlw	0
 25209  015BD2  6E12               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25210                           
 25211                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25212  015BD4  0E00               	movlw	0
 25213  015BD6  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25214                           
 25215                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25216  015BD8  0E00               	movlw	0
 25217  015BDA  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25218                           
 25219                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25220  015BDC  0E00               	movlw	0
 25221  015BDE  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25222                           
 25223                           ;usb_device.c: 2479: controlTransferState = 0;
 25224  015BE0  0E00               	movlw	0
 25225  015BE2  6E1B               	movwf	_controlTransferState,c	;volatile
 25226                           
 25227                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25228  015BE4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25229  015BE8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25230  015BEC  0E7F               	movlw	127
 25231  015BEE  16DF               	andwf	indf2,f,c
 25232                           
 25233                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25234  015BF0  0E04               	movlw	4
 25235  015BF2  0100               	movlb	0	; () banked
 25236  015BF4  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25237                           
 25238                           ; BSR set to: 0
 25239                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25240  015BF6  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25241  015BFA  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25242  015BFE  0E7F               	movlw	127
 25243  015C00  16DF               	andwf	indf2,f,c
 25244                           
 25245                           ; BSR set to: 0
 25246                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25247  015C02  0E04               	movlw	4
 25248  015C04  0100               	movlb	0	; () banked
 25249  015C06  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25250                           
 25251                           ; BSR set to: 0
 25252                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25253  015C08  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25254  015C0C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25255  015C10  0E7F               	movlw	127
 25256  015C12  16DF               	andwf	indf2,f,c
 25257                           
 25258                           ; BSR set to: 0
 25259                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25260  015C14  0E00               	movlw	0
 25261  015C16  0100               	movlb	0	; () banked
 25262  015C18  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25263                           
 25264                           ; BSR set to: 0
 25265                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25266  015C1A  0E00               	movlw	0
 25267  015C1C  0100               	movlb	0	; () banked
 25268  015C1E  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25269  015C20  0E00               	movlw	0
 25270  015C22  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25271                           
 25272                           ; BSR set to: 0
 25273                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25274  015C24  0E00               	movlw	0
 25275  015C26  0100               	movlb	0	; () banked
 25276  015C28  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25277                           
 25278                           ; BSR set to: 0
 25279                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25280  015C2A  0E00               	movlw	0
 25281  015C2C  0100               	movlb	0	; () banked
 25282  015C2E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25283  015C30  0E00               	movlw	0
 25284  015C32  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25285                           
 25286                           ; BSR set to: 0
 25287                           ;usb_device.c: 2503: USBCheckStdRequest();
 25288  015C34  ECA8  F0A0         	call	_USBCheckStdRequest	;wreg free
 25289                           
 25290                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25291  015C38  0E00               	movlw	0
 25292  015C3A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25293  015C3C  0E03               	movlw	3
 25294  015C3E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25295  015C40  0E00               	movlw	0
 25296  015C42  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25297  015C44  0E00               	movlw	0
 25298  015C46  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25299  015C48  0E00               	movlw	0
 25300  015C4A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25301  015C4C  0E00               	movlw	0
 25302  015C4E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25303  015C50  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25304                           
 25305                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25306  015C54  ECB5  F09F         	call	_USBCtrlEPServiceComplete	;wreg free
 25307  015C58  0012               	return		;funcret
 25308  015C5A                     __end_of_USBCtrlTrfSetupHandler:
 25309                           	opt stack 0
 25310                           pclatu	equ	0xFFB
 25311                           pclath	equ	0xFFA
 25312                           tblptru	equ	0xFF8
 25313                           tblptrh	equ	0xFF7
 25314                           tblptrl	equ	0xFF6
 25315                           tablat	equ	0xFF5
 25316                           prodh	equ	0xFF4
 25317                           prodl	equ	0xFF3
 25318                           intcon	equ	0xFF2
 25319                           intcon2	equ	0xFF1
 25320                           postinc0	equ	0xFEE
 25321                           fsr0h	equ	0xFEA
 25322                           fsr0l	equ	0xFE9
 25323                           wreg	equ	0xFE8
 25324                           indf1	equ	0xFE7
 25325                           postinc1	equ	0xFE6
 25326                           postdec1	equ	0xFE5
 25327                           fsr1h	equ	0xFE2
 25328                           fsr1l	equ	0xFE1
 25329                           indf2	equ	0xFDF
 25330                           postinc2	equ	0xFDE
 25331                           postdec2	equ	0xFDD
 25332                           plusw2	equ	0xFDB
 25333                           fsr2h	equ	0xFDA
 25334                           fsr2l	equ	0xFD9
 25335                           status	equ	0xFD8
 25336                           
 25337 ;; *************** function _USBCtrlEPServiceComplete *****************
 25338 ;; Defined at:
 25339 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 25340 ;; Parameters:    Size  Location     Type
 25341 ;;		None
 25342 ;; Auto vars:     Size  Location     Type
 25343 ;;		None
 25344 ;; Return value:  Size  Location     Type
 25345 ;;		None               void
 25346 ;; Registers used:
 25347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25348 ;; Tracked objects:
 25349 ;;		On entry : 0/0
 25350 ;;		On exit  : 0/0
 25351 ;;		Unchanged: 0/0
 25352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25357 ;;Total ram usage:        0 bytes
 25358 ;; Hardware stack levels used:    1
 25359 ;; Hardware stack levels required when called:    2
 25360 ;; This function calls:
 25361 ;;		_USBCtrlEPAllowDataStage
 25362 ;;		_USBCtrlEPAllowStatusStage
 25363 ;; This function is called by:
 25364 ;;		_USBCtrlTrfSetupHandler
 25365 ;; This function uses a non-reentrant model
 25366 ;;
 25367                           
 25368                           	psect	text110
 25369  013F6A                     __ptext110:
 25370                           	opt stack 0
 25371  013F6A                     _USBCtrlEPServiceComplete:
 25372                           	opt stack 14
 25373                           
 25374                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25375                           
 25376                           ;incstack = 0
 25377  013F6A  9865               	bcf	3941,4,c	;volatile
 25378                           
 25379                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25380  013F6C  0100               	movlb	0	; () banked
 25381  013F6E  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25382  013F70  D039               	goto	i2l232
 25383                           
 25384                           ; BSR set to: 0
 25385                           ;usb_device.c: 1629: {
 25386                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25387  013F72  0100               	movlb	0	; () banked
 25388  013F74  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25389  013F76  D00B               	goto	i2l7569
 25390                           
 25391                           ; BSR set to: 0
 25392                           ;usb_device.c: 1631: {
 25393                           ;usb_device.c: 1632: controlTransferState = 2;
 25394  013F78  0E02               	movlw	2
 25395  013F7A  6E1B               	movwf	_controlTransferState,c	;volatile
 25396                           
 25397                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25398  013F7C  5011               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25399  013F7E  B4D8               	btfsc	status,2,c
 25400                           
 25401                           ; BSR set to: 0
 25402                           ;usb_device.c: 1644: {
 25403                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25404  013F80  ECE3  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25405                           
 25406                           ;usb_device.c: 1646: }
 25407                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25408  013F84  0E00               	movlw	0
 25409  013F86  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25410                           
 25411                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25412  013F88  0E00               	movlw	0
 25413  013F8A  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25414                           
 25415                           ;usb_device.c: 1652: }
 25416  013F8C  0012               	return	
 25417  013F8E                     i2l7569:
 25418                           
 25419                           ;usb_device.c: 1653: else
 25420                           ;usb_device.c: 1654: {
 25421                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25422  013F8E  EE20 F001          	lfsr	2,1
 25423  013F92  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25424  013F94  26D9               	addwf	fsr2l,f,c
 25425  013F96  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25426  013F98  22DA               	addwfc	fsr2h,f,c
 25427  013F9A  0E08               	movlw	8
 25428  013F9C  6EDF               	movwf	indf2,c
 25429                           
 25430                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25431  013F9E  EE20 F002          	lfsr	2,2
 25432  013FA2  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25433  013FA4  26D9               	addwf	fsr2l,f,c
 25434  013FA6  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25435  013FA8  22DA               	addwfc	fsr2h,f,c
 25436  013FAA  0E30               	movlw	48
 25437  013FAC  6EDE               	movwf	postinc2,c
 25438  013FAE  0E0D               	movlw	13
 25439  013FB0  6EDD               	movwf	postdec2,c
 25440                           
 25441                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25442  013FB2  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25443  013FB6  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25444  013FBA  0E0C               	movlw	12
 25445  013FBC  6EDF               	movwf	indf2,c
 25446                           
 25447                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25448  013FBE  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25449  013FC2  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25450  013FC6  0E00               	movlw	0
 25451  013FC8  8EDB               	bsf	plusw2,7,c
 25452                           
 25453                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25454  013FCA  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25455  013FCE  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25456  013FD2  0E04               	movlw	4
 25457  013FD4  6EDF               	movwf	indf2,c
 25458                           
 25459                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25460  013FD6  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25461  013FDA  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25462  013FDE  0E00               	movlw	0
 25463  013FE0  8EDB               	bsf	plusw2,7,c
 25464                           
 25465                           ;usb_device.c: 1665: }
 25466                           ;usb_device.c: 1666: }
 25467  013FE2  0012               	return	
 25468  013FE4                     i2l232:
 25469                           
 25470                           ; BSR set to: 0
 25471                           ;usb_device.c: 1667: else
 25472                           ;usb_device.c: 1668: {
 25473                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25474  013FE4  010D               	movlb	13	; () banked
 25475  013FE6  AF30               	btfss	48,7,b	;volatile
 25476  013FE8  D010               	goto	i2l7589
 25477                           
 25478                           ; BSR set to: 13
 25479                           ;usb_device.c: 1670: {
 25480                           ;usb_device.c: 1671: controlTransferState = 1;
 25481  013FEA  0E01               	movlw	1
 25482  013FEC  6E1B               	movwf	_controlTransferState,c	;volatile
 25483                           
 25484                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25485  013FEE  5010               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25486  013FF0  B4D8               	btfsc	status,2,c
 25487                           
 25488                           ; BSR set to: 13
 25489                           ;usb_device.c: 1686: {
 25490                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25491  013FF2  ECE3  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25492                           
 25493                           ;usb_device.c: 1688: }
 25494                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25495  013FF6  0E00               	movlw	0
 25496  013FF8  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25497                           
 25498                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25499  013FFA  0E00               	movlw	0
 25500  013FFC  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25501                           
 25502                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25503  013FFE  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25504  014000  A4D8               	btfss	status,2,c
 25505  014002  0012               	return	
 25506                           
 25507                           ;usb_device.c: 1713: {
 25508                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25509  014004  ECE7  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25510                           
 25511                           ;usb_device.c: 1715: }
 25512                           ;usb_device.c: 1716: }
 25513  014008  0012               	return	
 25514  01400A                     i2l7589:
 25515                           
 25516                           ;usb_device.c: 1717: else
 25517                           ;usb_device.c: 1718: {
 25518                           ;usb_device.c: 1729: controlTransferState = 2;
 25519  01400A  0E02               	movlw	2
 25520  01400C  6E1B               	movwf	_controlTransferState,c	;volatile
 25521                           
 25522                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25523  01400E  EE20 F001          	lfsr	2,1
 25524  014012  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25525  014014  26D9               	addwf	fsr2l,f,c
 25526  014016  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25527  014018  22DA               	addwfc	fsr2h,f,c
 25528  01401A  0E08               	movlw	8
 25529  01401C  6EDF               	movwf	indf2,c
 25530                           
 25531                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25532  01401E  EE20 F002          	lfsr	2,2
 25533  014022  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25534  014024  26D9               	addwf	fsr2l,f,c
 25535  014026  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25536  014028  22DA               	addwfc	fsr2h,f,c
 25537  01402A  0E30               	movlw	48
 25538  01402C  6EDE               	movwf	postinc2,c
 25539  01402E  0E0D               	movlw	13
 25540  014030  6EDD               	movwf	postdec2,c
 25541                           
 25542                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25543  014032  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25544  014036  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25545  01403A  0E04               	movlw	4
 25546  01403C  6EDF               	movwf	indf2,c
 25547                           
 25548                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25549  01403E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25550  014042  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25551  014046  0E00               	movlw	0
 25552  014048  8EDB               	bsf	plusw2,7,c
 25553                           
 25554                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 25555  01404A  0E00               	movlw	0
 25556  01404C  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25557                           
 25558                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 25559  01404E  0E00               	movlw	0
 25560  014050  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25561                           
 25562                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 25563  014052  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25564  014054  A4D8               	btfss	status,2,c
 25565  014056  0012               	return	
 25566                           
 25567                           ;usb_device.c: 1741: {
 25568                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 25569  014058  ECE7  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25570  01405C  0012               	return	
 25571  01405E                     __end_of_USBCtrlEPServiceComplete:
 25572                           	opt stack 0
 25573                           pclatu	equ	0xFFB
 25574                           pclath	equ	0xFFA
 25575                           tblptru	equ	0xFF8
 25576                           tblptrh	equ	0xFF7
 25577                           tblptrl	equ	0xFF6
 25578                           tablat	equ	0xFF5
 25579                           prodh	equ	0xFF4
 25580                           prodl	equ	0xFF3
 25581                           intcon	equ	0xFF2
 25582                           intcon2	equ	0xFF1
 25583                           postinc0	equ	0xFEE
 25584                           fsr0h	equ	0xFEA
 25585                           fsr0l	equ	0xFE9
 25586                           wreg	equ	0xFE8
 25587                           indf1	equ	0xFE7
 25588                           postinc1	equ	0xFE6
 25589                           postdec1	equ	0xFE5
 25590                           fsr1h	equ	0xFE2
 25591                           fsr1l	equ	0xFE1
 25592                           indf2	equ	0xFDF
 25593                           postinc2	equ	0xFDE
 25594                           postdec2	equ	0xFDD
 25595                           plusw2	equ	0xFDB
 25596                           fsr2h	equ	0xFDA
 25597                           fsr2l	equ	0xFD9
 25598                           status	equ	0xFD8
 25599                           
 25600 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25601 ;; Defined at:
 25602 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 25603 ;; Parameters:    Size  Location     Type
 25604 ;;		None
 25605 ;; Auto vars:     Size  Location     Type
 25606 ;;		None
 25607 ;; Return value:  Size  Location     Type
 25608 ;;		None               void
 25609 ;; Registers used:
 25610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25611 ;; Tracked objects:
 25612 ;;		On entry : 0/0
 25613 ;;		On exit  : 0/0
 25614 ;;		Unchanged: 0/0
 25615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25620 ;;Total ram usage:        0 bytes
 25621 ;; Hardware stack levels used:    1
 25622 ;; Hardware stack levels required when called:    1
 25623 ;; This function calls:
 25624 ;;		_USBCtrlTrfTxService
 25625 ;; This function is called by:
 25626 ;;		_USBCtrlEPServiceComplete
 25627 ;; This function uses a non-reentrant model
 25628 ;;
 25629                           
 25630                           	psect	text111
 25631  0157C6                     __ptext111:
 25632                           	opt stack 0
 25633  0157C6                     _USBCtrlEPAllowDataStage:
 25634                           	opt stack 14
 25635                           
 25636                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 25637                           
 25638                           ;incstack = 0
 25639  0157C6  0E00               	movlw	0
 25640  0157C8  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25641                           
 25642                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 25643  0157CA  0E00               	movlw	0
 25644  0157CC  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25645                           
 25646                           ;usb_device.c: 1493: if(controlTransferState == 2)
 25647  0157CE  0E02               	movlw	2
 25648  0157D0  181B               	xorwf	_controlTransferState,w,c	;volatile
 25649  0157D2  A4D8               	btfss	status,2,c
 25650  0157D4  D01F               	goto	i2l7091
 25651                           
 25652                           ;usb_device.c: 1494: {
 25653                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 25654  0157D6  EE20 F001          	lfsr	2,1
 25655  0157DA  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25656  0157DC  26D9               	addwf	fsr2l,f,c
 25657  0157DE  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25658  0157E0  22DA               	addwfc	fsr2h,f,c
 25659  0157E2  0E08               	movlw	8
 25660  0157E4  6EDF               	movwf	indf2,c
 25661                           
 25662                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25663  0157E6  EE20 F002          	lfsr	2,2
 25664  0157EA  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25665  0157EC  26D9               	addwf	fsr2l,f,c
 25666  0157EE  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25667  0157F0  22DA               	addwfc	fsr2h,f,c
 25668  0157F2  0E38               	movlw	56
 25669  0157F4  6EDE               	movwf	postinc2,c
 25670  0157F6  0E0D               	movlw	13
 25671  0157F8  6EDD               	movwf	postdec2,c
 25672                           
 25673                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25674  0157FA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25675  0157FE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25676  015802  0E48               	movlw	72
 25677  015804  6EDF               	movwf	indf2,c
 25678                           
 25679                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25680  015806  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25681  01580A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25682  01580E  0E00               	movlw	0
 25683  015810  8EDB               	bsf	plusw2,7,c
 25684                           
 25685                           ;usb_device.c: 1500: }
 25686  015812  0012               	return	
 25687  015814                     i2l7091:
 25688                           
 25689                           ;usb_device.c: 1501: else
 25690                           ;usb_device.c: 1502: {
 25691                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25692  015814  0100               	movlb	0	; () banked
 25693  015816  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25694  015818  010D               	movlb	13	; () banked
 25695  01581A  5D36               	subwf	54,w,b	;volatile
 25696  01581C  0100               	movlb	0	; () banked
 25697  01581E  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25698  015820  010D               	movlb	13	; () banked
 25699  015822  5937               	subwfb	55,w,b	;volatile
 25700  015824  B0D8               	btfsc	status,0,c
 25701  015826  D004               	goto	i2l7095
 25702                           
 25703                           ; BSR set to: 13
 25704                           ;usb_device.c: 1506: {
 25705                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 25706  015828  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 25707  01582C  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 25708  015830                     i2l7095:
 25709                           
 25710                           ; BSR set to: 13
 25711                           ;usb_device.c: 1508: }
 25712                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 25713  015830  ECEC  F0A2         	call	_USBCtrlTrfTxService	;wreg free
 25714                           
 25715                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25716  015834  0100               	movlb	0	; () banked
 25717  015836  EE20 F002          	lfsr	2,2
 25718  01583A  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 25719  01583C  26D9               	addwf	fsr2l,f,c
 25720  01583E  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25721  015840  22DA               	addwfc	fsr2h,f,c
 25722  015842  0E38               	movlw	56
 25723  015844  6EDE               	movwf	postinc2,c
 25724  015846  0E0D               	movlw	13
 25725  015848  6EDD               	movwf	postdec2,c
 25726                           
 25727                           ; BSR set to: 0
 25728                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25729  01584A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25730  01584E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25731  015852  0E48               	movlw	72
 25732  015854  6EDF               	movwf	indf2,c
 25733                           
 25734                           ; BSR set to: 0
 25735                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25736  015856  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25737  01585A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25738  01585E  0E00               	movlw	0
 25739  015860  8EDB               	bsf	plusw2,7,c
 25740  015862  0012               	return	
 25741  015864                     __end_of_USBCtrlEPAllowDataStage:
 25742                           	opt stack 0
 25743                           pclatu	equ	0xFFB
 25744                           pclath	equ	0xFFA
 25745                           tblptru	equ	0xFF8
 25746                           tblptrh	equ	0xFF7
 25747                           tblptrl	equ	0xFF6
 25748                           tablat	equ	0xFF5
 25749                           prodh	equ	0xFF4
 25750                           prodl	equ	0xFF3
 25751                           intcon	equ	0xFF2
 25752                           intcon2	equ	0xFF1
 25753                           postinc0	equ	0xFEE
 25754                           fsr0h	equ	0xFEA
 25755                           fsr0l	equ	0xFE9
 25756                           wreg	equ	0xFE8
 25757                           indf1	equ	0xFE7
 25758                           postinc1	equ	0xFE6
 25759                           postdec1	equ	0xFE5
 25760                           fsr1h	equ	0xFE2
 25761                           fsr1l	equ	0xFE1
 25762                           indf2	equ	0xFDF
 25763                           postinc2	equ	0xFDE
 25764                           postdec2	equ	0xFDD
 25765                           plusw2	equ	0xFDB
 25766                           fsr2h	equ	0xFDA
 25767                           fsr2l	equ	0xFD9
 25768                           status	equ	0xFD8
 25769                           
 25770 ;; *************** function _USBCheckStdRequest *****************
 25771 ;; Defined at:
 25772 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 25773 ;; Parameters:    Size  Location     Type
 25774 ;;		None
 25775 ;; Auto vars:     Size  Location     Type
 25776 ;;		None
 25777 ;; Return value:  Size  Location     Type
 25778 ;;		None               void
 25779 ;; Registers used:
 25780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25781 ;; Tracked objects:
 25782 ;;		On entry : 0/0
 25783 ;;		On exit  : 0/0
 25784 ;;		Unchanged: 0/0
 25785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25790 ;;Total ram usage:        0 bytes
 25791 ;; Hardware stack levels used:    1
 25792 ;; Hardware stack levels required when called:    5
 25793 ;; This function calls:
 25794 ;;		_USBStdFeatureReqHandler
 25795 ;;		_USBStdGetDscHandler
 25796 ;;		_USBStdGetStatusHandler
 25797 ;;		_USBStdSetCfgHandler
 25798 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25799 ;; This function is called by:
 25800 ;;		_USBCtrlTrfSetupHandler
 25801 ;; This function uses a non-reentrant model
 25802 ;;
 25803                           
 25804                           	psect	text112
 25805  014150                     __ptext112:
 25806                           	opt stack 0
 25807  014150                     _USBCheckStdRequest:
 25808                           	opt stack 11
 25809                           
 25810                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 25811                           
 25812                           ;incstack = 0
 25813  014150  010D               	movlb	13	; () banked
 25814  014152  3930               	swapf	48,w,b	;volatile
 25815  014154  32E8               	rrcf	wreg,f,c
 25816  014156  0B03               	andlw	3
 25817  014158  0900               	iorlw	0
 25818  01415A  A4D8               	btfss	status,2,c
 25819  01415C  0012               	return	
 25820  01415E  D04F               	goto	i2l7687
 25821  014160                     i2l359:
 25822                           
 25823                           ; BSR set to: 13
 25824                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 25825  014160  0100               	movlb	0	; () banked
 25826  014162  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25827                           
 25828                           ; BSR set to: 0
 25829                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 25830  014164  0E08               	movlw	8
 25831  014166  6E13               	movwf	_USBDeviceState,c	;volatile
 25832                           
 25833                           ;usb_device.c: 2699: break;
 25834  014168  0012               	return	
 25835  01416A                     i2l7657:
 25836                           
 25837                           ;usb_device.c: 2701: USBStdGetDscHandler();
 25838  01416A  ECF5  F099         	call	_USBStdGetDscHandler	;wreg free
 25839                           
 25840                           ;usb_device.c: 2702: break;
 25841  01416E  0012               	return	
 25842  014170                     i2l7659:
 25843                           
 25844                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 25845  014170  EC0B  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 25846                           
 25847                           ;usb_device.c: 2705: break;
 25848  014174  0012               	return	
 25849  014176                     i2l7661:
 25850                           
 25851                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25852  014176  0E2B               	movlw	low _USBActiveConfiguration
 25853  014178  0100               	movlb	0	; () banked
 25854  01417A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25855  01417C  0E00               	movlw	high _USBActiveConfiguration
 25856  01417E  0100               	movlb	0	; () banked
 25857  014180  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25858                           
 25859                           ; BSR set to: 0
 25860                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25861  014182  0100               	movlb	0	; () banked
 25862  014184  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25863                           
 25864                           ; BSR set to: 0
 25865                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 25866  014186  0E01               	movlw	1
 25867  014188  0100               	movlb	0	; () banked
 25868  01418A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25869                           
 25870                           ; BSR set to: 0
 25871                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 25872  01418C  0100               	movlb	0	; () banked
 25873  01418E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25874                           
 25875                           ;usb_device.c: 2711: break;
 25876  014190  0012               	return	
 25877  014192                     i2l7669:
 25878                           
 25879                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 25880  014192  EC87  F0AA         	call	_USBStdGetStatusHandler	;wreg free
 25881                           
 25882                           ;usb_device.c: 2714: break;
 25883  014196  0012               	return	
 25884  014198                     i2l7671:
 25885                           
 25886                           ;usb_device.c: 2716: case 3:
 25887                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 25888  014198  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 25889                           
 25890                           ;usb_device.c: 2718: break;
 25891  01419C  0012               	return	
 25892  01419E                     i2l7673:
 25893                           
 25894                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25895  01419E  010D               	movlb	13	; () banked
 25896  0141A0  5134               	movf	52,w,b	;volatile
 25897  0141A2  0D01               	mullw	1
 25898  0141A4  0E90               	movlw	low _USBAlternateInterface
 25899  0141A6  24F3               	addwf	prodl,w,c
 25900  0141A8  0100               	movlb	0	; () banked
 25901  0141AA  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25902  0141AC  0E01               	movlw	high _USBAlternateInterface
 25903  0141AE  20F4               	addwfc	prodh,w,c
 25904  0141B0  0100               	movlb	0	; () banked
 25905  0141B2  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25909  0141B4  0100               	movlb	0	; () banked
 25910  0141B6  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 25914  0141B8  0E01               	movlw	1
 25915  0141BA  0100               	movlb	0	; () banked
 25916  0141BC  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25917                           
 25918                           ; BSR set to: 0
 25919                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 25920  0141BE  0100               	movlb	0	; () banked
 25921  0141C0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25922                           
 25923                           ;usb_device.c: 2724: break;
 25924  0141C2  0012               	return	
 25925  0141C4                     i2l368:
 25926                           
 25927                           ; BSR set to: 13
 25928                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 25929  0141C4  0100               	movlb	0	; () banked
 25930  0141C6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25931                           
 25932                           ; BSR set to: 0
 25933                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25934  0141C8  010D               	movlb	13	; () banked
 25935  0141CA  5134               	movf	52,w,b	;volatile
 25936  0141CC  0D01               	mullw	1
 25937  0141CE  0E90               	movlw	low _USBAlternateInterface
 25938  0141D0  24F3               	addwf	prodl,w,c
 25939  0141D2  6ED9               	movwf	fsr2l,c
 25940  0141D4  0E01               	movlw	high _USBAlternateInterface
 25941  0141D6  20F4               	addwfc	prodh,w,c
 25942  0141D8  6EDA               	movwf	fsr2h,c
 25943  0141DA  CD32 FFDF          	movff	3378,indf2	;volatile
 25944                           
 25945                           ;usb_device.c: 2728: break;
 25946  0141DE  0012               	return	
 25947  0141E0                     i2l7683:
 25948                           
 25949                           ; BSR set to: 13
 25950                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25951  0141E0  0E00               	movlw	0
 25952  0141E2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25953  0141E4  0E02               	movlw	2
 25954  0141E6  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25955  0141E8  0E00               	movlw	0
 25956  0141EA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25957  0141EC  0E00               	movlw	0
 25958  0141EE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25959  0141F0  0E00               	movlw	0
 25960  0141F2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25961  0141F4  0E00               	movlw	0
 25962  0141F6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25963  0141F8  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25964                           
 25965                           ;usb_device.c: 2735: }
 25966                           
 25967                           ;usb_device.c: 2734: break;
 25968                           
 25969                           ;usb_device.c: 2733: default:
 25970                           
 25971                           ;usb_device.c: 2732: case 12:
 25972                           
 25973                           ;usb_device.c: 2731: break;
 25974  0141FC  0012               	return	
 25975  0141FE                     i2l7687:
 25976  0141FE  010D               	movlb	13	; () banked
 25977  014200  5131               	movf	49,w,b	;volatile
 25978                           
 25979                           ; Switch size 1, requested type "space"
 25980                           ; Number of cases is 11, Range of values is 0 to 12
 25981                           ; switch strategies available:
 25982                           ; Name         Instructions Cycles
 25983                           ; simple_byte           34    18 (average)
 25984                           ;	Chosen strategy is simple_byte
 25985  014202  0A00               	xorlw	0	; case 0
 25986  014204  B4D8               	btfsc	status,2,c
 25987  014206  D7C5               	goto	i2l7669
 25988  014208  0A01               	xorlw	1	; case 1
 25989  01420A  B4D8               	btfsc	status,2,c
 25990  01420C  D7C5               	goto	i2l7671
 25991  01420E  0A02               	xorlw	2	; case 3
 25992  014210  B4D8               	btfsc	status,2,c
 25993  014212  D7C2               	goto	i2l7671
 25994  014214  0A06               	xorlw	6	; case 5
 25995  014216  B4D8               	btfsc	status,2,c
 25996  014218  D7A3               	goto	i2l359
 25997  01421A  0A03               	xorlw	3	; case 6
 25998  01421C  B4D8               	btfsc	status,2,c
 25999  01421E  D7A5               	goto	i2l7657
 26000  014220  0A01               	xorlw	1	; case 7
 26001  014222  B4D8               	btfsc	status,2,c
 26002  014224  D7DD               	goto	i2l7683
 26003  014226  0A0F               	xorlw	15	; case 8
 26004  014228  B4D8               	btfsc	status,2,c
 26005  01422A  D7A5               	goto	i2l7661
 26006  01422C  0A01               	xorlw	1	; case 9
 26007  01422E  B4D8               	btfsc	status,2,c
 26008  014230  D79F               	goto	i2l7659
 26009  014232  0A03               	xorlw	3	; case 10
 26010  014234  B4D8               	btfsc	status,2,c
 26011  014236  D7B3               	goto	i2l7673
 26012  014238  0A01               	xorlw	1	; case 11
 26013  01423A  B4D8               	btfsc	status,2,c
 26014  01423C  D7C3               	goto	i2l368
 26015  01423E  0A07               	xorlw	7	; case 12
 26016  014240  0012               	return	
 26017  014242                     __end_of_USBCheckStdRequest:
 26018                           	opt stack 0
 26019                           pclatu	equ	0xFFB
 26020                           pclath	equ	0xFFA
 26021                           tblptru	equ	0xFF8
 26022                           tblptrh	equ	0xFF7
 26023                           tblptrl	equ	0xFF6
 26024                           tablat	equ	0xFF5
 26025                           prodh	equ	0xFF4
 26026                           prodl	equ	0xFF3
 26027                           intcon	equ	0xFF2
 26028                           intcon2	equ	0xFF1
 26029                           postinc0	equ	0xFEE
 26030                           fsr0h	equ	0xFEA
 26031                           fsr0l	equ	0xFE9
 26032                           wreg	equ	0xFE8
 26033                           indf1	equ	0xFE7
 26034                           postinc1	equ	0xFE6
 26035                           postdec1	equ	0xFE5
 26036                           fsr1h	equ	0xFE2
 26037                           fsr1l	equ	0xFE1
 26038                           indf2	equ	0xFDF
 26039                           postinc2	equ	0xFDE
 26040                           postdec2	equ	0xFDD
 26041                           plusw2	equ	0xFDB
 26042                           fsr2h	equ	0xFDA
 26043                           fsr2l	equ	0xFD9
 26044                           status	equ	0xFD8
 26045                           
 26046 ;; *************** function _USBStdSetCfgHandler *****************
 26047 ;; Defined at:
 26048 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 26049 ;; Parameters:    Size  Location     Type
 26050 ;;		None
 26051 ;; Auto vars:     Size  Location     Type
 26052 ;;  i               1   20[COMRAM] unsigned char 
 26053 ;; Return value:  Size  Location     Type
 26054 ;;		None               void
 26055 ;; Registers used:
 26056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26057 ;; Tracked objects:
 26058 ;;		On entry : 0/0
 26059 ;;		On exit  : 0/0
 26060 ;;		Unchanged: 0/0
 26061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26066 ;;Total ram usage:        1 bytes
 26067 ;; Hardware stack levels used:    1
 26068 ;; Hardware stack levels required when called:    4
 26069 ;; This function calls:
 26070 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26071 ;;		i2_memset
 26072 ;; This function is called by:
 26073 ;;		_USBCheckStdRequest
 26074 ;; This function uses a non-reentrant model
 26075 ;;
 26076                           
 26077                           	psect	text113
 26078  014416                     __ptext113:
 26079                           	opt stack 0
 26080  014416                     _USBStdSetCfgHandler:
 26081                           	opt stack 11
 26082                           
 26083                           ;usb_device.c: 1970: uint8_t i;
 26084                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 26085                           
 26086                           ;incstack = 0
 26087  014416  0100               	movlb	0	; () banked
 26088  014418  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26089                           
 26090                           ; BSR set to: 0
 26091                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 26092  01441A  0E27               	movlw	39
 26093  01441C  6E2D               	movwf	i2memset@p1,c
 26094  01441E  0E0F               	movlw	15
 26095  014420  6E2E               	movwf	i2memset@p1+1,c
 26096  014422  0E00               	movlw	0
 26097  014424  6E30               	movwf	i2memset@c+1,c
 26098  014426  0E00               	movlw	0
 26099  014428  6E2F               	movwf	i2memset@c,c
 26100  01442A  0E00               	movlw	0
 26101  01442C  6E32               	movwf	i2memset@n+1,c
 26102  01442E  0E02               	movlw	2
 26103  014430  6E31               	movwf	i2memset@n,c
 26104  014432  EC2C  F0B5         	call	i2_memset	;wreg free
 26105                           
 26106                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26107  014436  0E00               	movlw	0
 26108  014438  6E2D               	movwf	i2memset@p1,c
 26109  01443A  0E0D               	movlw	13
 26110  01443C  6E2E               	movwf	i2memset@p1+1,c
 26111  01443E  0E00               	movlw	0
 26112  014440  6E30               	movwf	i2memset@c+1,c
 26113  014442  0E00               	movlw	0
 26114  014444  6E2F               	movwf	i2memset@c,c
 26115  014446  0E00               	movlw	0
 26116  014448  6E32               	movwf	i2memset@n+1,c
 26117  01444A  0E30               	movlw	48
 26118  01444C  6E31               	movwf	i2memset@n,c
 26119  01444E  EC2C  F0B5         	call	i2_memset	;wreg free
 26120                           
 26121                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 26122  014452  8C65               	bsf	3941,6,c	;volatile
 26123                           
 26124                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 26125  014454  0E00               	movlw	0
 26126  014456  6E41               	movwf	USBStdSetCfgHandler@i,c
 26127  014458                     i2l7111:
 26128  014458  0E02               	movlw	2
 26129  01445A  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26130  01445C  D001               	goto	i2l7115
 26131  01445E  D016               	goto	i2l7121
 26132  014460                     i2l7115:
 26133                           
 26134                           ;usb_device.c: 1988: {
 26135                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26136  014460  5041               	movf	USBStdSetCfgHandler@i,w,c
 26137  014462  0D01               	mullw	1
 26138  014464  0E01               	movlw	low _ep_data_in
 26139  014466  24F3               	addwf	prodl,w,c
 26140  014468  6ED9               	movwf	fsr2l,c
 26141  01446A  0E00               	movlw	high _ep_data_in
 26142  01446C  20F4               	addwfc	prodh,w,c
 26143  01446E  6EDA               	movwf	fsr2h,c
 26144  014470  0E00               	movlw	0
 26145  014472  6EDF               	movwf	indf2,c
 26146                           
 26147                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26148  014474  5041               	movf	USBStdSetCfgHandler@i,w,c
 26149  014476  0D01               	mullw	1
 26150  014478  0E04               	movlw	low _ep_data_out
 26151  01447A  24F3               	addwf	prodl,w,c
 26152  01447C  6ED9               	movwf	fsr2l,c
 26153  01447E  0E00               	movlw	high _ep_data_out
 26154  014480  20F4               	addwfc	prodh,w,c
 26155  014482  6EDA               	movwf	fsr2h,c
 26156  014484  0E00               	movlw	0
 26157  014486  6EDF               	movwf	indf2,c
 26158  014488  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26159  01448A  D7E6               	goto	i2l7111
 26160  01448C                     i2l7121:
 26161                           
 26162                           ;usb_device.c: 1991: }
 26163                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26164  01448C  0E90               	movlw	low _USBAlternateInterface
 26165  01448E  6E2D               	movwf	i2memset@p1,c
 26166  014490  0E01               	movlw	high _USBAlternateInterface
 26167  014492  6E2E               	movwf	i2memset@p1+1,c
 26168  014494  0E00               	movlw	0
 26169  014496  6E30               	movwf	i2memset@c+1,c
 26170  014498  0E00               	movlw	0
 26171  01449A  6E2F               	movwf	i2memset@c,c
 26172  01449C  0E00               	movlw	0
 26173  01449E  6E32               	movwf	i2memset@n+1,c
 26174  0144A0  0E02               	movlw	2
 26175  0144A2  6E31               	movwf	i2memset@n,c
 26176  0144A4  EC2C  F0B5         	call	i2_memset	;wreg free
 26177                           
 26178                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26179  0144A8  9C65               	bcf	3941,6,c	;volatile
 26180                           
 26181                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26182  0144AA  0E08               	movlw	8
 26183  0144AC  0100               	movlb	0	; () banked
 26184  0144AE  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26185  0144B0  0E0D               	movlw	13
 26186  0144B2  0100               	movlb	0	; () banked
 26187  0144B4  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26188                           
 26189                           ; BSR set to: 0
 26190                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26191  0144B6  0E00               	movlw	0
 26192  0144B8  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26193  0144BA  0E0D               	movlw	13
 26194  0144BC  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26195                           
 26196                           ; BSR set to: 0
 26197                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26198  0144BE  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26199  0144C2  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26200                           
 26201                           ; BSR set to: 0
 26202                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26203  0144C6  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26204                           
 26205                           ; BSR set to: 0
 26206                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26207  0144CA  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26208  0144CC  A4D8               	btfss	status,2,c
 26209  0144CE  D003               	goto	i2l7137
 26210                           
 26211                           ; BSR set to: 0
 26212                           ;usb_device.c: 2010: {
 26213                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26214  0144D0  0E10               	movlw	16
 26215  0144D2  6E13               	movwf	_USBDeviceState,c	;volatile
 26216                           
 26217                           ;usb_device.c: 2013: }
 26218  0144D4  0012               	return	
 26219  0144D6                     i2l7137:
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;usb_device.c: 2014: else
 26223                           ;usb_device.c: 2015: {
 26224                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26225  0144D6  0E00               	movlw	0
 26226  0144D8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26227  0144DA  0E01               	movlw	1
 26228  0144DC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26229  0144DE  0E2B               	movlw	low _USBActiveConfiguration
 26230  0144E0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26231  0144E2  0E00               	movlw	high _USBActiveConfiguration
 26232  0144E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26233  0144E6  0E00               	movlw	0
 26234  0144E8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26235  0144EA  0E01               	movlw	1
 26236  0144EC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26237  0144EE  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26238                           
 26239                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26240  0144F2  0E20               	movlw	32
 26241  0144F4  6E13               	movwf	_USBDeviceState,c	;volatile
 26242  0144F6  0012               	return	
 26243  0144F8                     __end_of_USBStdSetCfgHandler:
 26244                           	opt stack 0
 26245                           pclatu	equ	0xFFB
 26246                           pclath	equ	0xFFA
 26247                           tblptru	equ	0xFF8
 26248                           tblptrh	equ	0xFF7
 26249                           tblptrl	equ	0xFF6
 26250                           tablat	equ	0xFF5
 26251                           prodh	equ	0xFF4
 26252                           prodl	equ	0xFF3
 26253                           intcon	equ	0xFF2
 26254                           intcon2	equ	0xFF1
 26255                           postinc0	equ	0xFEE
 26256                           fsr0h	equ	0xFEA
 26257                           fsr0l	equ	0xFE9
 26258                           wreg	equ	0xFE8
 26259                           indf1	equ	0xFE7
 26260                           postinc1	equ	0xFE6
 26261                           postdec1	equ	0xFE5
 26262                           fsr1h	equ	0xFE2
 26263                           fsr1l	equ	0xFE1
 26264                           indf2	equ	0xFDF
 26265                           postinc2	equ	0xFDE
 26266                           postdec2	equ	0xFDD
 26267                           plusw2	equ	0xFDB
 26268                           fsr2h	equ	0xFDA
 26269                           fsr2l	equ	0xFD9
 26270                           status	equ	0xFD8
 26271                           
 26272 ;; *************** function i2_memset *****************
 26273 ;; Defined at:
 26274 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26275 ;; Parameters:    Size  Location     Type
 26276 ;;  p1              2    0[COMRAM] PTR void 
 26277 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26278 ;;  c               2    2[COMRAM] int 
 26279 ;;  n               2    4[COMRAM] unsigned int 
 26280 ;; Auto vars:     Size  Location     Type
 26281 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26282 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26283 ;; Return value:  Size  Location     Type
 26284 ;;                  2    0[COMRAM] PTR void 
 26285 ;; Registers used:
 26286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26287 ;; Tracked objects:
 26288 ;;		On entry : 0/0
 26289 ;;		On exit  : 0/0
 26290 ;;		Unchanged: 0/0
 26291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26292 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26296 ;;Total ram usage:        8 bytes
 26297 ;; Hardware stack levels used:    1
 26298 ;; This function calls:
 26299 ;;		Nothing
 26300 ;; This function is called by:
 26301 ;;		_USBStdSetCfgHandler
 26302 ;;		i2_USBDeviceInit
 26303 ;; This function uses a non-reentrant model
 26304 ;;
 26305                           
 26306                           	psect	text114
 26307  016A58                     __ptext114:
 26308                           	opt stack 0
 26309  016A58                     i2_memset:
 26310                           	opt stack 17
 26311                           
 26312                           ;incstack = 0
 26313  016A58  C02D  F033         	movff	i2memset@p1,i2memset@p
 26314  016A5C  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26315  016A60  D008               	goto	i2l7045
 26316  016A62                     i2l7041:
 26317  016A62  C033  FFD9         	movff	i2memset@p,fsr2l
 26318  016A66  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26319  016A6A  C02F  FFDF         	movff	i2memset@c,indf2
 26320  016A6E  4A33               	infsnz	i2memset@p,f,c
 26321  016A70  2A34               	incf	i2memset@p+1,f,c
 26322  016A72                     i2l7045:
 26323  016A72  0631               	decf	i2memset@n,f,c
 26324  016A74  A0D8               	btfss	status,0,c
 26325  016A76  0632               	decf	i2memset@n+1,f,c
 26326  016A78  2831               	incf	i2memset@n,w,c
 26327  016A7A  E1F3               	bnz	i2l7041
 26328  016A7C  2832               	incf	i2memset@n+1,w,c
 26329  016A7E  B4D8               	btfsc	status,2,c
 26330  016A80  0012               	return	
 26331  016A82  D7EF               	goto	i2l7041
 26332  016A84                     __end_ofi2_memset:
 26333                           	opt stack 0
 26334                           pclatu	equ	0xFFB
 26335                           pclath	equ	0xFFA
 26336                           tblptru	equ	0xFF8
 26337                           tblptrh	equ	0xFF7
 26338                           tblptrl	equ	0xFF6
 26339                           tablat	equ	0xFF5
 26340                           prodh	equ	0xFF4
 26341                           prodl	equ	0xFF3
 26342                           intcon	equ	0xFF2
 26343                           intcon2	equ	0xFF1
 26344                           postinc0	equ	0xFEE
 26345                           fsr0h	equ	0xFEA
 26346                           fsr0l	equ	0xFE9
 26347                           wreg	equ	0xFE8
 26348                           indf1	equ	0xFE7
 26349                           postinc1	equ	0xFE6
 26350                           postdec1	equ	0xFE5
 26351                           fsr1h	equ	0xFE2
 26352                           fsr1l	equ	0xFE1
 26353                           indf2	equ	0xFDF
 26354                           postinc2	equ	0xFDE
 26355                           postdec2	equ	0xFDD
 26356                           plusw2	equ	0xFDB
 26357                           fsr2h	equ	0xFDA
 26358                           fsr2l	equ	0xFD9
 26359                           status	equ	0xFD8
 26360                           
 26361 ;; *************** function _USBStdGetStatusHandler *****************
 26362 ;; Defined at:
 26363 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 26364 ;; Parameters:    Size  Location     Type
 26365 ;;		None
 26366 ;; Auto vars:     Size  Location     Type
 26367 ;;  p               2    1[COMRAM] PTR struct __BDT
 26368 ;;		 -> NULL(0), BDT(48), 
 26369 ;; Return value:  Size  Location     Type
 26370 ;;		None               void
 26371 ;; Registers used:
 26372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26373 ;; Tracked objects:
 26374 ;;		On entry : 0/0
 26375 ;;		On exit  : 0/0
 26376 ;;		Unchanged: 0/0
 26377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26382 ;;Total ram usage:        3 bytes
 26383 ;; Hardware stack levels used:    1
 26384 ;; This function calls:
 26385 ;;		Nothing
 26386 ;; This function is called by:
 26387 ;;		_USBCheckStdRequest
 26388 ;; This function uses a non-reentrant model
 26389 ;;
 26390                           
 26391                           	psect	text115
 26392  01550E                     __ptext115:
 26393                           	opt stack 0
 26394  01550E                     _USBStdGetStatusHandler:
 26395                           	opt stack 15
 26396                           
 26397                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26398                           
 26399                           ;incstack = 0
 26400  01550E  0E00               	movlw	0
 26401  015510  010D               	movlb	13	; () banked
 26402  015512  6F38               	movwf	56,b	;volatile
 26403                           
 26404                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26405  015514  0E00               	movlw	0
 26406  015516  010D               	movlb	13	; () banked
 26407  015518  6F39               	movwf	57,b	;volatile
 26408                           
 26409                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26410  01551A  D03B               	goto	i2l7193
 26411  01551C                     i2l295:
 26412                           
 26413                           ; BSR set to: 13
 26414                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26415  01551C  0100               	movlb	0	; () banked
 26416  01551E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26417                           
 26418                           ;usb_device.c: 2145: }
 26419                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26420                           
 26421                           ; BSR set to: 13
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;usb_device.c: 2143: {
 26425                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26426                           
 26427                           ;usb_device.c: 2142: if(0 == 1)
 26428  015520  040F               	decf	_RemoteWakeup,w,c	;volatile
 26429  015522  A4D8               	btfss	status,2,c
 26430  015524  D042               	goto	i2l298
 26431                           
 26432                           ;usb_device.c: 2148: {
 26433                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26434  015526  010D               	movlb	13	; () banked
 26435  015528  8338               	bsf	56,1,b	;volatile
 26436                           
 26437                           ; BSR set to: 13
 26438                           ;usb_device.c: 2150: }
 26439                           ;usb_device.c: 2151: break;
 26440  01552A  D03F               	goto	i2l298
 26441  01552C                     i2l299:
 26442                           
 26443                           ; BSR set to: 13
 26444                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26445  01552C  0100               	movlb	0	; () banked
 26446  01552E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26447                           
 26448                           ;usb_device.c: 2154: break;
 26449  015530  D03C               	goto	i2l298
 26450  015532                     i2l300:
 26451                           
 26452                           ; BSR set to: 13
 26453                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26454  015532  0100               	movlb	0	; () banked
 26455  015534  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26456                           
 26457                           ;usb_device.c: 2160: {
 26458                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26459                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26460  015536  010D               	movlb	13	; () banked
 26461  015538  BF34               	btfsc	52,7,b	;volatile
 26462  01553A  D00B               	goto	i2l7183
 26463                           
 26464                           ; BSR set to: 13
 26465                           ;usb_device.c: 2164: {
 26466                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26467  01553C  010D               	movlb	13	; () banked
 26468  01553E  5134               	movf	52,w,b	;volatile
 26469  015540  0B0F               	andlw	15
 26470  015542  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26471  015544  502D               	movf	??_USBStdGetStatusHandler,w,c
 26472  015546  0D02               	mullw	2
 26473  015548  0E00               	movlw	low _pBDTEntryOut
 26474  01554A  24F3               	addwf	prodl,w,c
 26475  01554C  6ED9               	movwf	fsr2l,c
 26476  01554E  0E01               	movlw	high _pBDTEntryOut
 26477  015550  D00A               	goto	L8
 26478  015552                     i2l7183:
 26479                           
 26480                           ; BSR set to: 13
 26481                           ;usb_device.c: 2167: else
 26482                           ;usb_device.c: 2168: {
 26483                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26484  015552  010D               	movlb	13	; () banked
 26485  015554  5134               	movf	52,w,b	;volatile
 26486  015556  0B0F               	andlw	15
 26487  015558  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26488  01555A  502D               	movf	??_USBStdGetStatusHandler,w,c
 26489  01555C  0D02               	mullw	2
 26490  01555E  0EF5               	movlw	low _pBDTEntryIn
 26491  015560  24F3               	addwf	prodl,w,c
 26492  015562  6ED9               	movwf	fsr2l,c
 26493  015564  0E00               	movlw	high _pBDTEntryIn
 26494  015566                     L8:
 26495  015566  20F4               	addwfc	prodh,w,c
 26496  015568  6EDA               	movwf	fsr2h,c
 26497  01556A  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26498  01556E  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26499                           
 26500                           ; BSR set to: 13
 26501                           ;usb_device.c: 2170: }
 26502                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26503                           
 26504                           ; BSR set to: 13
 26505  015572  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26506  015576  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26507  01557A  AEDF               	btfss	indf2,7,c
 26508  01557C  D016               	goto	i2l298
 26509                           
 26510                           ; BSR set to: 13
 26511  01557E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26512  015582  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26513  015586  A4DF               	btfss	indf2,2,c
 26514  015588  D010               	goto	i2l298
 26515                           
 26516                           ; BSR set to: 13
 26517                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26518  01558A  0E01               	movlw	1
 26519  01558C  010D               	movlb	13	; () banked
 26520  01558E  6F38               	movwf	56,b	;volatile
 26521                           
 26522                           ; BSR set to: 13
 26523                           ;usb_device.c: 2175: }
 26524                           ;usb_device.c: 2176: }
 26525                           
 26526                           ; BSR set to: 13
 26527                           ;usb_device.c: 2174: break;
 26528  015590  D00C               	goto	i2l298
 26529  015592                     i2l7193:
 26530                           
 26531                           ; BSR set to: 13
 26532  015592  010D               	movlb	13	; () banked
 26533  015594  5130               	movf	48,w,b	;volatile
 26534  015596  0B1F               	andlw	31
 26535                           
 26536                           ; Switch size 1, requested type "space"
 26537                           ; Number of cases is 3, Range of values is 0 to 2
 26538                           ; switch strategies available:
 26539                           ; Name         Instructions Cycles
 26540                           ; simple_byte           10     6 (average)
 26541                           ;	Chosen strategy is simple_byte
 26542  015598  0A00               	xorlw	0	; case 0
 26543  01559A  B4D8               	btfsc	status,2,c
 26544  01559C  D7BF               	goto	i2l295
 26545  01559E  0A01               	xorlw	1	; case 1
 26546  0155A0  B4D8               	btfsc	status,2,c
 26547  0155A2  D7C4               	goto	i2l299
 26548  0155A4  0A03               	xorlw	3	; case 2
 26549  0155A6  B4D8               	btfsc	status,2,c
 26550  0155A8  D7C4               	goto	i2l300
 26551  0155AA                     i2l298:
 26552                           
 26553                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 26554  0155AA  0100               	movlb	0	; () banked
 26555  0155AC  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26556  0155AE  0012               	return	
 26557                           
 26558                           ; BSR set to: 0
 26559                           ;usb_device.c: 2179: {
 26560                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26561  0155B0  0E38               	movlw	56
 26562  0155B2  0100               	movlb	0	; () banked
 26563  0155B4  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26564  0155B6  0E0D               	movlw	13
 26565  0155B8  0100               	movlb	0	; () banked
 26566  0155BA  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26567                           
 26568                           ; BSR set to: 0
 26569                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26570  0155BC  0100               	movlb	0	; () banked
 26571  0155BE  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26572                           
 26573                           ; BSR set to: 0
 26574                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 26575  0155C0  0E02               	movlw	2
 26576  0155C2  0100               	movlb	0	; () banked
 26577  0155C4  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26578  0155C6  0012               	return	
 26579  0155C8                     __end_of_USBStdGetStatusHandler:
 26580                           	opt stack 0
 26581                           pclatu	equ	0xFFB
 26582                           pclath	equ	0xFFA
 26583                           tblptru	equ	0xFF8
 26584                           tblptrh	equ	0xFF7
 26585                           tblptrl	equ	0xFF6
 26586                           tablat	equ	0xFF5
 26587                           prodh	equ	0xFF4
 26588                           prodl	equ	0xFF3
 26589                           intcon	equ	0xFF2
 26590                           intcon2	equ	0xFF1
 26591                           postinc0	equ	0xFEE
 26592                           fsr0h	equ	0xFEA
 26593                           fsr0l	equ	0xFE9
 26594                           wreg	equ	0xFE8
 26595                           indf1	equ	0xFE7
 26596                           postinc1	equ	0xFE6
 26597                           postdec1	equ	0xFE5
 26598                           fsr1h	equ	0xFE2
 26599                           fsr1l	equ	0xFE1
 26600                           indf2	equ	0xFDF
 26601                           postinc2	equ	0xFDE
 26602                           postdec2	equ	0xFDD
 26603                           plusw2	equ	0xFDB
 26604                           fsr2h	equ	0xFDA
 26605                           fsr2l	equ	0xFD9
 26606                           status	equ	0xFD8
 26607                           
 26608 ;; *************** function _USBStdGetDscHandler *****************
 26609 ;; Defined at:
 26610 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 26611 ;; Parameters:    Size  Location     Type
 26612 ;;		None
 26613 ;; Auto vars:     Size  Location     Type
 26614 ;;		None
 26615 ;; Return value:  Size  Location     Type
 26616 ;;		None               void
 26617 ;; Registers used:
 26618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26619 ;; Tracked objects:
 26620 ;;		On entry : 0/0
 26621 ;;		On exit  : 0/0
 26622 ;;		Unchanged: 0/0
 26623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26628 ;;Total ram usage:        2 bytes
 26629 ;; Hardware stack levels used:    1
 26630 ;; This function calls:
 26631 ;;		Nothing
 26632 ;; This function is called by:
 26633 ;;		_USBCheckStdRequest
 26634 ;; This function uses a non-reentrant model
 26635 ;;
 26636                           
 26637                           	psect	text116
 26638  0133EA                     __ptext116:
 26639                           	opt stack 0
 26640  0133EA                     _USBStdGetDscHandler:
 26641                           	opt stack 15
 26642                           
 26643                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 26644                           
 26645                           ; BSR set to: 0
 26646                           ;incstack = 0
 26647  0133EA  0E80               	movlw	128
 26648  0133EC  010D               	movlb	13	; () banked
 26649  0133EE  1930               	xorwf	48,w,b	;volatile
 26650  0133F0  A4D8               	btfss	status,2,c
 26651  0133F2  0012               	return	
 26652                           
 26653                           ; BSR set to: 13
 26654                           ;usb_device.c: 2046: {
 26655                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26656  0133F4  0EC0               	movlw	192
 26657  0133F6  0100               	movlb	0	; () banked
 26658  0133F8  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26659                           
 26660                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 26661  0133FA  D092               	goto	i2l7171
 26662  0133FC                     i2l7145:
 26663                           
 26664                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26665  0133FC  0EC0               	movlw	low _device_dsc
 26666  0133FE  0100               	movlb	0	; () banked
 26667  013400  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26668  013402  0EFB               	movlw	high _device_dsc
 26669  013404  0100               	movlb	0	; () banked
 26670  013406  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26671                           
 26672                           ; BSR set to: 0
 26673                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 26674  013408  0E00               	movlw	0
 26675  01340A  0100               	movlb	0	; () banked
 26676  01340C  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26677  01340E  0E12               	movlw	18
 26678  013410  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26679                           
 26680                           ;usb_device.c: 2058: break;
 26681  013412  0012               	return	
 26682  013414                     i2l7149:
 26683                           
 26684                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 26685  013414  010D               	movlb	13	; () banked
 26686  013416  5132               	movf	50,w,b	;volatile
 26687  013418  A4D8               	btfss	status,2,c
 26688  01341A  D049               	goto	i2l7157
 26689                           
 26690                           ; BSR set to: 13
 26691                           ;usb_device.c: 2064: {
 26692                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26693  01341C  010D               	movlb	13	; () banked
 26694  01341E  5132               	movf	50,w,b	;volatile
 26695  013420  0D02               	mullw	2
 26696  013422  0E7F               	movlw	low _USB_CD_Ptr
 26697  013424  24F3               	addwf	prodl,w,c
 26698  013426  6EF6               	movwf	tblptrl,c
 26699  013428  0EFA               	movlw	high _USB_CD_Ptr
 26700  01342A  20F4               	addwfc	prodh,w,c
 26701  01342C  6EF7               	movwf	tblptrh,c
 26702  01342E                     	if	1	;There are 3 active tblptr bytes
 26703  01342E  6AF8               	clrf	tblptru,c
 26704  013430  0E00               	movlw	low (__mediumconst shr (0+16))
 26705  013432  22F8               	addwfc	tblptru,f,c
 26706  013434                     	endif
 26707  013434  0009               	tblrd		*+
 26708  013436  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26709  01343A  000A               	tblrd		*-
 26710  01343C  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26711                           
 26712                           ; BSR set to: 13
 26713                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26714  013440  0E02               	movlw	2
 26715  013442  0100               	movlb	0	; () banked
 26716  013444  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26717  013446  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26718  013448  0E00               	movlw	0
 26719  01344A  0100               	movlb	0	; () banked
 26720  01344C  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26721  01344E  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26722  013450  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26723  013454  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26724  013458  0E00               	movlw	low (__mediumconst shr (0+16))
 26725  01345A  6EF8               	movwf	tblptru,c
 26726  01345C  0E0E               	movlw	(high __ramtop+-1)
 26727  01345E  64F7               	cpfsgt	tblptrh,c
 26728  013460  D003               	bra	i2u639_47
 26729  013462  0008               	tblrd		*
 26730  013464  50F5               	movf	tablat,w,c
 26731  013466  D005               	bra	i2u639_40
 26732  013468                     i2u639_47:
 26733  013468  CFF6 FFE1          	movff	tblptrl,fsr1l
 26734  01346C  CFF7 FFE2          	movff	tblptrh,fsr1h
 26735  013470  50E7               	movf	indf1,w,c
 26736  013472                     i2u639_40:
 26737  013472  0100               	movlb	0	; () banked
 26738  013474  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26739                           
 26740                           ; BSR set to: 0
 26741                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26742  013476  0E03               	movlw	3
 26743  013478  0100               	movlb	0	; () banked
 26744  01347A  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26745  01347C  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26746  01347E  0E00               	movlw	0
 26747  013480  0100               	movlb	0	; () banked
 26748  013482  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26749  013484  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26750  013486  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26751  01348A  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26752  01348E  0E00               	movlw	low (__mediumconst shr (0+16))
 26753  013490  6EF8               	movwf	tblptru,c
 26754  013492  0E0E               	movlw	(high __ramtop+-1)
 26755  013494  64F7               	cpfsgt	tblptrh,c
 26756  013496  D003               	bra	i2u640_47
 26757  013498  0008               	tblrd		*
 26758  01349A  50F5               	movf	tablat,w,c
 26759  01349C  D005               	bra	i2u640_40
 26760  01349E                     i2u640_47:
 26761  01349E  CFF6 FFE1          	movff	tblptrl,fsr1l
 26762  0134A2  CFF7 FFE2          	movff	tblptrh,fsr1h
 26763  0134A6  50E7               	movf	indf1,w,c
 26764  0134A8                     i2u640_40:
 26765  0134A8  0100               	movlb	0	; () banked
 26766  0134AA  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26767                           
 26768                           ;usb_device.c: 2076: }
 26769  0134AC  0012               	return	
 26770  0134AE                     i2l7157:
 26771                           
 26772                           ;usb_device.c: 2077: else
 26773                           ;usb_device.c: 2078: {
 26774                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 26775  0134AE  0E00               	movlw	0
 26776  0134B0  0100               	movlb	0	; () banked
 26777  0134B2  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26778                           
 26779                           ; BSR set to: 0
 26780                           ;usb_device.c: 2080: }
 26781                           ;usb_device.c: 2081: break;
 26782  0134B4  0012               	return	
 26783  0134B6                     i2l7159:
 26784                           
 26785                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 26786  0134B6  0E03               	movlw	3
 26787  0134B8  010D               	movlb	13	; () banked
 26788  0134BA  6132               	cpfslt	50,b	;volatile
 26789  0134BC  D029               	goto	i2l7165
 26790                           
 26791                           ; BSR set to: 13
 26792                           ;usb_device.c: 2087: {
 26793                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26794  0134BE  010D               	movlb	13	; () banked
 26795  0134C0  5132               	movf	50,w,b	;volatile
 26796  0134C2  0D02               	mullw	2
 26797  0134C4  0E79               	movlw	low _USB_SD_Ptr
 26798  0134C6  24F3               	addwf	prodl,w,c
 26799  0134C8  6EF6               	movwf	tblptrl,c
 26800  0134CA  0EFA               	movlw	high _USB_SD_Ptr
 26801  0134CC  20F4               	addwfc	prodh,w,c
 26802  0134CE  6EF7               	movwf	tblptrh,c
 26803  0134D0                     	if	1	;There are 3 active tblptr bytes
 26804  0134D0  6AF8               	clrf	tblptru,c
 26805  0134D2  0E00               	movlw	low (__mediumconst shr (0+16))
 26806  0134D4  22F8               	addwfc	tblptru,f,c
 26807  0134D6                     	endif
 26808  0134D6  0009               	tblrd		*+
 26809  0134D8  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26810  0134DC  000A               	tblrd		*-
 26811  0134DE  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26812                           
 26813                           ; BSR set to: 13
 26814                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26815  0134E2  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 26816  0134E6  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26817  0134EA  0E00               	movlw	low (__mediumconst shr (0+16))
 26818  0134EC  6EF8               	movwf	tblptru,c
 26819  0134EE  0E0E               	movlw	(high __ramtop+-1)
 26820  0134F0  64F7               	cpfsgt	tblptrh,c
 26821  0134F2  D003               	bra	i2u642_47
 26822  0134F4  0008               	tblrd		*
 26823  0134F6  50F5               	movf	tablat,w,c
 26824  0134F8  D005               	bra	i2u642_40
 26825  0134FA                     i2u642_47:
 26826  0134FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 26827  0134FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 26828  013502  50E7               	movf	indf1,w,c
 26829  013504                     i2u642_40:
 26830  013504  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26831  013506  502D               	movf	??_USBStdGetDscHandler,w,c
 26832  013508  0100               	movlb	0	; () banked
 26833  01350A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26834  01350C  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26835                           
 26836                           ;usb_device.c: 2092: }
 26837  01350E  0012               	return	
 26838  013510                     i2l7165:
 26839                           
 26840                           ;usb_device.c: 2102: else
 26841                           ;usb_device.c: 2103: {
 26842                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 26843  013510  0E00               	movlw	0
 26844  013512  0100               	movlb	0	; () banked
 26845  013514  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26846                           
 26847                           ; BSR set to: 0
 26848                           ;usb_device.c: 2105: }
 26849                           ;usb_device.c: 2106: break;
 26850  013516  0012               	return	
 26851  013518                     i2l7167:
 26852                           
 26853                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 26854  013518  0E00               	movlw	0
 26855  01351A  0100               	movlb	0	; () banked
 26856  01351C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26857                           
 26858                           ; BSR set to: 0
 26859                           ;usb_device.c: 2110: }
 26860                           
 26861                           ;usb_device.c: 2109: break;
 26862  01351E  0012               	return	
 26863  013520                     i2l7171:
 26864                           
 26865                           ; BSR set to: 0
 26866  013520  010D               	movlb	13	; () banked
 26867  013522  5133               	movf	51,w,b	;volatile
 26868                           
 26869                           ; Switch size 1, requested type "space"
 26870                           ; Number of cases is 3, Range of values is 1 to 3
 26871                           ; switch strategies available:
 26872                           ; Name         Instructions Cycles
 26873                           ; simple_byte           10     6 (average)
 26874                           ;	Chosen strategy is simple_byte
 26875  013524  0A01               	xorlw	1	; case 1
 26876  013526  B4D8               	btfsc	status,2,c
 26877  013528  D769               	goto	i2l7145
 26878  01352A  0A03               	xorlw	3	; case 2
 26879  01352C  B4D8               	btfsc	status,2,c
 26880  01352E  D772               	goto	i2l7149
 26881  013530  0A01               	xorlw	1	; case 3
 26882  013532  B4D8               	btfsc	status,2,c
 26883  013534  D7C0               	goto	i2l7159
 26884  013536  D7F0               	goto	i2l7167
 26885  013538                     __end_of_USBStdGetDscHandler:
 26886                           	opt stack 0
 26887                           pclatu	equ	0xFFB
 26888                           pclath	equ	0xFFA
 26889                           tblptru	equ	0xFF8
 26890                           tblptrh	equ	0xFF7
 26891                           tblptrl	equ	0xFF6
 26892                           tablat	equ	0xFF5
 26893                           prodh	equ	0xFF4
 26894                           prodl	equ	0xFF3
 26895                           intcon	equ	0xFF2
 26896                           intcon2	equ	0xFF1
 26897                           postinc0	equ	0xFEE
 26898                           fsr0h	equ	0xFEA
 26899                           fsr0l	equ	0xFE9
 26900                           wreg	equ	0xFE8
 26901                           indf1	equ	0xFE7
 26902                           postinc1	equ	0xFE6
 26903                           postdec1	equ	0xFE5
 26904                           fsr1h	equ	0xFE2
 26905                           fsr1l	equ	0xFE1
 26906                           indf2	equ	0xFDF
 26907                           postinc2	equ	0xFDE
 26908                           postdec2	equ	0xFDD
 26909                           plusw2	equ	0xFDB
 26910                           fsr2h	equ	0xFDA
 26911                           fsr2l	equ	0xFD9
 26912                           status	equ	0xFD8
 26913                           
 26914 ;; *************** function _USBStdFeatureReqHandler *****************
 26915 ;; Defined at:
 26916 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 26917 ;; Parameters:    Size  Location     Type
 26918 ;;		None
 26919 ;; Auto vars:     Size  Location     Type
 26920 ;;  p               2   24[COMRAM] PTR struct __BDT
 26921 ;;		 -> NULL(0), BDT(48), 
 26922 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26923 ;;		 -> UEP0(1), 
 26924 ;;  current_ep_d    1   23[COMRAM] struct .
 26925 ;; Return value:  Size  Location     Type
 26926 ;;		None               void
 26927 ;; Registers used:
 26928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26929 ;; Tracked objects:
 26930 ;;		On entry : 0/0
 26931 ;;		On exit  : 0/0
 26932 ;;		Unchanged: 0/0
 26933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26935 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26938 ;;Total ram usage:        6 bytes
 26939 ;; Hardware stack levels used:    1
 26940 ;; Hardware stack levels required when called:    4
 26941 ;; This function calls:
 26942 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26943 ;; This function is called by:
 26944 ;;		_USBCheckStdRequest
 26945 ;; This function uses a non-reentrant model
 26946 ;;
 26947                           
 26948                           	psect	text117
 26949  011E44                     __ptext117:
 26950                           	opt stack 0
 26951  011E44                     _USBStdFeatureReqHandler:
 26952                           	opt stack 11
 26953                           
 26954                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26955                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26956                           ;usb_device.c: 2764: unsigned char* pUEP;
 26957                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26958                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26959                           
 26960                           ;incstack = 0
 26961  011E44  010D               	movlb	13	; () banked
 26962  011E46  0532               	decf	50,w,b	;volatile
 26963  011E48  A4D8               	btfss	status,2,c
 26964  011E4A  D011               	goto	i2l374
 26965                           
 26966                           ; BSR set to: 13
 26967  011E4C  010D               	movlb	13	; () banked
 26968  011E4E  5130               	movf	48,w,b	;volatile
 26969  011E50  0B1F               	andlw	31
 26970  011E52  0900               	iorlw	0
 26971  011E54  A4D8               	btfss	status,2,c
 26972  011E56  D00B               	goto	i2l374
 26973                           
 26974                           ; BSR set to: 13
 26975                           ;usb_device.c: 2804: {
 26976                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26977  011E58  0100               	movlb	0	; () banked
 26978  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26979                           
 26980                           ; BSR set to: 0
 26981                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26982  011E5C  0E03               	movlw	3
 26983  011E5E  010D               	movlb	13	; () banked
 26984  011E60  1931               	xorwf	49,w,b	;volatile
 26985  011E62  A4D8               	btfss	status,2,c
 26986  011E64  D002               	goto	i2l7211
 26987                           
 26988                           ; BSR set to: 13
 26989                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26990  011E66  0E01               	movlw	1
 26991  011E68  D001               	goto	L9
 26992  011E6A                     i2l7211:
 26993                           
 26994                           ; BSR set to: 13
 26995                           ;usb_device.c: 2808: else
 26996                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26997  011E6A  0E00               	movlw	0
 26998  011E6C                     L9:
 26999  011E6C  6E0F               	movwf	_RemoteWakeup,c	;volatile
 27000  011E6E                     i2l374:
 27001                           
 27002                           ; BSR set to: 13
 27003                           ;usb_device.c: 2810: }
 27004                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 27005                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 27006                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27007                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 27008  011E6E  010D               	movlb	13	; () banked
 27009  011E70  5132               	movf	50,w,b	;volatile
 27010  011E72  A4D8               	btfss	status,2,c
 27011  011E74  0012               	return	
 27012                           
 27013                           ; BSR set to: 13
 27014  011E76  010D               	movlb	13	; () banked
 27015  011E78  5130               	movf	48,w,b	;volatile
 27016  011E7A  0B1F               	andlw	31
 27017  011E7C  0A02               	xorlw	2
 27018  011E7E  A4D8               	btfss	status,2,c
 27019  011E80  0012               	return	
 27020                           
 27021                           ; BSR set to: 13
 27022  011E82  010D               	movlb	13	; () banked
 27023  011E84  5134               	movf	52,w,b	;volatile
 27024  011E86  0B0F               	andlw	15
 27025  011E88  0900               	iorlw	0
 27026  011E8A  B4D8               	btfsc	status,2,c
 27027  011E8C  0012               	return	
 27028                           
 27029                           ; BSR set to: 13
 27030  011E8E  010D               	movlb	13	; () banked
 27031  011E90  5134               	movf	52,w,b	;volatile
 27032  011E92  0B0F               	andlw	15
 27033  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27034  011E96  0E03               	movlw	3
 27035  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 27036  011E9A  0012               	return	
 27037                           
 27038                           ; BSR set to: 13
 27039  011E9C  0E20               	movlw	32
 27040  011E9E  1813               	xorwf	_USBDeviceState,w,c	;volatile
 27041  011EA0  A4D8               	btfss	status,2,c
 27042  011EA2  0012               	return	
 27043                           
 27044                           ; BSR set to: 13
 27045                           ;usb_device.c: 2817: {
 27046                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 27047  011EA4  0100               	movlb	0	; () banked
 27048  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27049                           
 27050                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 27051  011EA8  010D               	movlb	13	; () banked
 27052  011EAA  BF34               	btfsc	52,7,b	;volatile
 27053  011EAC  D01B               	goto	i2l7225
 27054                           
 27055                           ; BSR set to: 13
 27056                           ;usb_device.c: 2824: {
 27057                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27058  011EAE  010D               	movlb	13	; () banked
 27059  011EB0  5134               	movf	52,w,b	;volatile
 27060  011EB2  0B0F               	andlw	15
 27061  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27062  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27063  011EB8  0D02               	mullw	2
 27064  011EBA  0E00               	movlw	low _pBDTEntryOut
 27065  011EBC  24F3               	addwf	prodl,w,c
 27066  011EBE  6ED9               	movwf	fsr2l,c
 27067  011EC0  0E01               	movlw	high _pBDTEntryOut
 27068  011EC2  20F4               	addwfc	prodh,w,c
 27069  011EC4  6EDA               	movwf	fsr2h,c
 27070  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27071  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27072                           
 27073                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27074  011ECE  010D               	movlb	13	; () banked
 27075  011ED0  5134               	movf	52,w,b	;volatile
 27076  011ED2  0B0F               	andlw	15
 27077  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27078  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27079  011ED8  0D01               	mullw	1
 27080  011EDA  0E04               	movlw	low _ep_data_out
 27081  011EDC  24F3               	addwf	prodl,w,c
 27082  011EDE  6ED9               	movwf	fsr2l,c
 27083  011EE0  0E00               	movlw	high _ep_data_out
 27084  011EE2  D01A               	goto	L10
 27085  011EE4                     i2l7225:
 27086                           
 27087                           ; BSR set to: 13
 27088                           ;usb_device.c: 2828: else
 27089                           ;usb_device.c: 2829: {
 27090                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27091  011EE4  010D               	movlb	13	; () banked
 27092  011EE6  5134               	movf	52,w,b	;volatile
 27093  011EE8  0B0F               	andlw	15
 27094  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27095  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27096  011EEE  0D02               	mullw	2
 27097  011EF0  0EF5               	movlw	low _pBDTEntryIn
 27098  011EF2  24F3               	addwf	prodl,w,c
 27099  011EF4  6ED9               	movwf	fsr2l,c
 27100  011EF6  0E00               	movlw	high _pBDTEntryIn
 27101  011EF8  20F4               	addwfc	prodh,w,c
 27102  011EFA  6EDA               	movwf	fsr2h,c
 27103  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27104  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27105                           
 27106                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27107  011F04  010D               	movlb	13	; () banked
 27108  011F06  5134               	movf	52,w,b	;volatile
 27109  011F08  0B0F               	andlw	15
 27110  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27111  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27112  011F0E  0D01               	mullw	1
 27113  011F10  0E01               	movlw	low _ep_data_in
 27114  011F12  24F3               	addwf	prodl,w,c
 27115  011F14  6ED9               	movwf	fsr2l,c
 27116  011F16  0E00               	movlw	high _ep_data_in
 27117  011F18                     L10:
 27118  011F18  20F4               	addwfc	prodh,w,c
 27119  011F1A  6EDA               	movwf	fsr2h,c
 27120  011F1C  50DF               	movf	indf2,w,c
 27121  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27122                           
 27123                           ; BSR set to: 13
 27124                           ;usb_device.c: 2832: }
 27125                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 27126                           
 27127                           ; BSR set to: 13
 27128  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27129  011F22  D002               	goto	i2l7231
 27130                           
 27131                           ; BSR set to: 13
 27132                           ;usb_device.c: 2839: {
 27133                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27134  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27135                           
 27136                           ;usb_device.c: 2841: }
 27137  011F26  D001               	goto	i2l7233
 27138  011F28                     i2l7231:
 27139                           
 27140                           ; BSR set to: 13
 27141                           ;usb_device.c: 2842: else
 27142                           ;usb_device.c: 2843: {
 27143                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27144  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27145  011F2A                     i2l7233:
 27146                           
 27147                           ; BSR set to: 13
 27148                           ;usb_device.c: 2845: }
 27149                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27150  011F2A  010D               	movlb	13	; () banked
 27151  011F2C  BF34               	btfsc	52,7,b	;volatile
 27152  011F2E  D00B               	goto	i2l7237
 27153                           
 27154                           ; BSR set to: 13
 27155                           ;usb_device.c: 2851: {
 27156                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27157  011F30  010D               	movlb	13	; () banked
 27158  011F32  5134               	movf	52,w,b	;volatile
 27159  011F34  0B0F               	andlw	15
 27160  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27161  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27162  011F3A  0D02               	mullw	2
 27163  011F3C  0E00               	movlw	low _pBDTEntryOut
 27164  011F3E  24F3               	addwf	prodl,w,c
 27165  011F40  6ED9               	movwf	fsr2l,c
 27166  011F42  0E01               	movlw	high _pBDTEntryOut
 27167  011F44  D00A               	goto	L11
 27168  011F46                     i2l7237:
 27169                           
 27170                           ; BSR set to: 13
 27171                           ;usb_device.c: 2854: else
 27172                           ;usb_device.c: 2855: {
 27173                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27174  011F46  010D               	movlb	13	; () banked
 27175  011F48  5134               	movf	52,w,b	;volatile
 27176  011F4A  0B0F               	andlw	15
 27177  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27178  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27179  011F50  0D02               	mullw	2
 27180  011F52  0EF5               	movlw	low _pBDTEntryIn
 27181  011F54  24F3               	addwf	prodl,w,c
 27182  011F56  6ED9               	movwf	fsr2l,c
 27183  011F58  0E00               	movlw	high _pBDTEntryIn
 27184  011F5A                     L11:
 27185  011F5A  20F4               	addwfc	prodh,w,c
 27186  011F5C  6EDA               	movwf	fsr2h,c
 27187  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27188  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27189                           
 27190                           ; BSR set to: 13
 27191                           ;usb_device.c: 2857: }
 27192                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27193                           
 27194                           ; BSR set to: 13
 27195  011F66  0E03               	movlw	3
 27196  011F68  010D               	movlb	13	; () banked
 27197  011F6A  1931               	xorwf	49,w,b	;volatile
 27198  011F6C  A4D8               	btfss	status,2,c
 27199  011F6E  D02E               	goto	i2l7253
 27200                           
 27201                           ; BSR set to: 13
 27202                           ;usb_device.c: 2861: {
 27203                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27204  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27205  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27206  011F78  AEDF               	btfss	indf2,7,c
 27207  011F7A  D01B               	goto	i2l7249
 27208                           
 27209                           ; BSR set to: 13
 27210                           ;usb_device.c: 2863: {
 27211                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27212  011F7C  010D               	movlb	13	; () banked
 27213  011F7E  BF34               	btfsc	52,7,b	;volatile
 27214  011F80  D00B               	goto	i2l7247
 27215                           
 27216                           ; BSR set to: 13
 27217                           ;usb_device.c: 2867: {
 27218                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27219  011F82  010D               	movlb	13	; () banked
 27220  011F84  5134               	movf	52,w,b	;volatile
 27221  011F86  0B0F               	andlw	15
 27222  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27223  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27224  011F8C  0D01               	mullw	1
 27225  011F8E  0E04               	movlw	low _ep_data_out
 27226  011F90  24F3               	addwf	prodl,w,c
 27227  011F92  6ED9               	movwf	fsr2l,c
 27228  011F94  0E00               	movlw	high _ep_data_out
 27229  011F96  D00A               	goto	L12
 27230  011F98                     i2l7247:
 27231                           
 27232                           ; BSR set to: 13
 27233                           ;usb_device.c: 2870: else
 27234                           ;usb_device.c: 2871: {
 27235                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27236  011F98  010D               	movlb	13	; () banked
 27237  011F9A  5134               	movf	52,w,b	;volatile
 27238  011F9C  0B0F               	andlw	15
 27239  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27240  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27241  011FA2  0D01               	mullw	1
 27242  011FA4  0E01               	movlw	low _ep_data_in
 27243  011FA6  24F3               	addwf	prodl,w,c
 27244  011FA8  6ED9               	movwf	fsr2l,c
 27245  011FAA  0E00               	movlw	high _ep_data_in
 27246  011FAC                     L12:
 27247  011FAC  20F4               	addwfc	prodh,w,c
 27248  011FAE  6EDA               	movwf	fsr2h,c
 27249  011FB0  82DF               	bsf	indf2,1,c
 27250  011FB2                     i2l7249:
 27251                           
 27252                           ; BSR set to: 13
 27253                           ;usb_device.c: 2873: }
 27254                           ;usb_device.c: 2874: }
 27255                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27256  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27257  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27258  011FBA  0E00               	movlw	0
 27259  011FBC  84DB               	bsf	plusw2,2,c
 27260                           
 27261                           ; BSR set to: 13
 27262                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27263  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27264  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27265  011FC6  0E00               	movlw	0
 27266  011FC8  8EDB               	bsf	plusw2,7,c
 27267                           
 27268                           ;usb_device.c: 2879: }
 27269  011FCA  0012               	return	
 27270  011FCC                     i2l7253:
 27271                           
 27272                           ; BSR set to: 13
 27273                           ;usb_device.c: 2880: else
 27274                           ;usb_device.c: 2881: {
 27275                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27276  011FCC  0E04               	movlw	4
 27277  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27278                           
 27279                           ; BSR set to: 13
 27280                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27281  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27282  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27283  011FD8  AEDF               	btfss	indf2,7,c
 27284  011FDA  D01B               	goto	i2l7263
 27285                           
 27286                           ; BSR set to: 13
 27287                           ;usb_device.c: 2888: {
 27288                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27289  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27290  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27291  011FE4  0E7F               	movlw	127
 27292  011FE6  16DF               	andwf	indf2,f,c
 27293                           
 27294                           ; BSR set to: 13
 27295                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27296  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27297  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27298  011FF0  0E00               	movlw	0
 27299  011FF2  8CDB               	bsf	plusw2,6,c
 27300                           
 27301                           ; BSR set to: 13
 27302                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27303  011FF4  0E00               	movlw	0
 27304  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27305  011FF8  0E05               	movlw	5
 27306  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27307  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27308  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27309  012004  0E00               	movlw	0
 27310  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27311  012008  0E02               	movlw	2
 27312  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27313  01200C  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27314                           
 27315                           ;usb_device.c: 2894: }
 27316  012010  D006               	goto	i2l7265
 27317  012012                     i2l7263:
 27318                           
 27319                           ;usb_device.c: 2895: else
 27320                           ;usb_device.c: 2896: {
 27321                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27322  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27323  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27324  01201A  0E00               	movlw	0
 27325  01201C  8CDB               	bsf	plusw2,6,c
 27326  01201E                     i2l7265:
 27327                           
 27328                           ;usb_device.c: 2899: }
 27329                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27330  01201E  0E04               	movlw	4
 27331  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27332                           
 27333                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27334  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27335  012024  D006               	goto	i2l393
 27336  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27337  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27338  01202E  AEDF               	btfss	indf2,7,c
 27339  012030  D030               	goto	i2l7279
 27340  012032                     i2l393:
 27341                           
 27342                           ;usb_device.c: 2910: {
 27343                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27344  012032  010D               	movlb	13	; () banked
 27345  012034  BF34               	btfsc	52,7,b	;volatile
 27346  012036  D00B               	goto	i2l7273
 27347                           
 27348                           ; BSR set to: 13
 27349                           ;usb_device.c: 2912: {
 27350                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27351  012038  010D               	movlb	13	; () banked
 27352  01203A  5134               	movf	52,w,b	;volatile
 27353  01203C  0B0F               	andlw	15
 27354  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27355  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27356  012042  0D01               	mullw	1
 27357  012044  0E04               	movlw	low _ep_data_out
 27358  012046  24F3               	addwf	prodl,w,c
 27359  012048  6ED9               	movwf	fsr2l,c
 27360  01204A  0E00               	movlw	high _ep_data_out
 27361  01204C  D00A               	goto	L13
 27362  01204E                     i2l7273:
 27363                           
 27364                           ; BSR set to: 13
 27365                           ;usb_device.c: 2915: else
 27366                           ;usb_device.c: 2916: {
 27367                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27368  01204E  010D               	movlb	13	; () banked
 27369  012050  5134               	movf	52,w,b	;volatile
 27370  012052  0B0F               	andlw	15
 27371  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27372  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27373  012058  0D01               	mullw	1
 27374  01205A  0E01               	movlw	low _ep_data_in
 27375  01205C  24F3               	addwf	prodl,w,c
 27376  01205E  6ED9               	movwf	fsr2l,c
 27377  012060  0E00               	movlw	high _ep_data_in
 27378  012062                     L13:
 27379  012062  20F4               	addwfc	prodh,w,c
 27380  012064  6EDA               	movwf	fsr2h,c
 27381  012066  92DF               	bcf	indf2,1,c
 27382                           
 27383                           ; BSR set to: 13
 27384                           ;usb_device.c: 2918: }
 27385                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27386                           
 27387                           ; BSR set to: 13
 27388  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27389  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27390  012070  0E3B               	movlw	59
 27391  012072  16DF               	andwf	indf2,f,c
 27392                           
 27393                           ; BSR set to: 13
 27394                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27395  012074  0E00               	movlw	0
 27396  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27397  012078  0E05               	movlw	5
 27398  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27399  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27400  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27401  012084  0E00               	movlw	0
 27402  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27403  012088  0E02               	movlw	2
 27404  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27405  01208C  ECA7  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27406                           
 27407                           ;usb_device.c: 2924: }
 27408  012090  D006               	goto	i2l7281
 27409  012092                     i2l7279:
 27410                           
 27411                           ;usb_device.c: 2925: else
 27412                           ;usb_device.c: 2926: {
 27413                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27414  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27415  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27416  01209A  0E3B               	movlw	59
 27417  01209C  16DF               	andwf	indf2,f,c
 27418  01209E                     i2l7281:
 27419                           
 27420                           ;usb_device.c: 2929: }
 27421                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27422  01209E  010D               	movlb	13	; () banked
 27423  0120A0  5134               	movf	52,w,b	;volatile
 27424  0120A2  0B0F               	andlw	15
 27425  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27426  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27427  0120A8  0D01               	mullw	1
 27428  0120AA  0E26               	movlw	38
 27429  0120AC  24F3               	addwf	prodl,w,c
 27430  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27431  0120B0  0E0F               	movlw	15
 27432  0120B2  20F4               	addwfc	prodh,w,c
 27433  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27434                           
 27435                           ; BSR set to: 13
 27436                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27437  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27438  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27439  0120BE  0EFE               	movlw	254
 27440  0120C0  16DF               	andwf	indf2,f,c
 27441                           
 27442                           ; BSR set to: 13
 27443  0120C2  0012               	return	
 27444  0120C4                     __end_of_USBStdFeatureReqHandler:
 27445                           	opt stack 0
 27446                           pclatu	equ	0xFFB
 27447                           pclath	equ	0xFFA
 27448                           tblptru	equ	0xFF8
 27449                           tblptrh	equ	0xFF7
 27450                           tblptrl	equ	0xFF6
 27451                           tablat	equ	0xFF5
 27452                           prodh	equ	0xFF4
 27453                           prodl	equ	0xFF3
 27454                           intcon	equ	0xFF2
 27455                           intcon2	equ	0xFF1
 27456                           postinc0	equ	0xFEE
 27457                           fsr0h	equ	0xFEA
 27458                           fsr0l	equ	0xFE9
 27459                           wreg	equ	0xFE8
 27460                           indf1	equ	0xFE7
 27461                           postinc1	equ	0xFE6
 27462                           postdec1	equ	0xFE5
 27463                           fsr1h	equ	0xFE2
 27464                           fsr1l	equ	0xFE1
 27465                           indf2	equ	0xFDF
 27466                           postinc2	equ	0xFDE
 27467                           postdec2	equ	0xFDD
 27468                           plusw2	equ	0xFDB
 27469                           fsr2h	equ	0xFDA
 27470                           fsr2l	equ	0xFD9
 27471                           status	equ	0xFD8
 27472                           
 27473 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27474 ;; Defined at:
 27475 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 27476 ;; Parameters:    Size  Location     Type
 27477 ;;  event           2   12[COMRAM] enum E8545
 27478 ;;  pdata           2   14[COMRAM] PTR void 
 27479 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27480 ;;  size            2   16[COMRAM] unsigned int 
 27481 ;; Auto vars:     Size  Location     Type
 27482 ;;		None
 27483 ;; Return value:  Size  Location     Type
 27484 ;;                  1    wreg      unsigned char 
 27485 ;; Registers used:
 27486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27487 ;; Tracked objects:
 27488 ;;		On entry : 0/0
 27489 ;;		On exit  : 0/0
 27490 ;;		Unchanged: 0/0
 27491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27492 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27495 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27496 ;;Total ram usage:        8 bytes
 27497 ;; Hardware stack levels used:    1
 27498 ;; Hardware stack levels required when called:    3
 27499 ;; This function calls:
 27500 ;;		_CDCInitEP
 27501 ;;		_USBCheckCDCRequest
 27502 ;; This function is called by:
 27503 ;;		_USBDeviceTasks
 27504 ;;		_USBStdSetCfgHandler
 27505 ;;		_USBSuspend
 27506 ;;		_USBWakeFromSuspend
 27507 ;;		_USBCtrlTrfSetupHandler
 27508 ;;		_USBCheckStdRequest
 27509 ;;		_USBStdFeatureReqHandler
 27510 ;; This function uses a non-reentrant model
 27511 ;;
 27512                           
 27513                           	psect	text118
 27514  01694E                     __ptext118:
 27515                           	opt stack 0
 27516  01694E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27517                           	opt stack 15
 27518                           
 27519                           ;My_usb_cdc.c: 45: switch ((int) event) {
 27520                           
 27521                           ; BSR set to: 13
 27522                           ;incstack = 0
 27523  01694E  D006               	goto	i2l6893
 27524  016950                     i2l6887:
 27525                           
 27526                           ;My_usb_cdc.c: 47: CDCInitEP();
 27527  016950  EC59  F0B0         	call	_CDCInitEP	;wreg free
 27528                           
 27529                           ;My_usb_cdc.c: 48: break;
 27530  016954  0012               	return	
 27531  016956                     i2l6889:
 27532                           
 27533                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 27534  016956  ECA2  F0A4         	call	_USBCheckCDCRequest	;wreg free
 27535                           
 27536                           ;My_usb_cdc.c: 52: }
 27537                           
 27538                           ;My_usb_cdc.c: 51: break;
 27539  01695A  0012               	return	
 27540  01695C                     i2l6893:
 27541  01695C  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27542  016960  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27543                           
 27544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27545                           ; Switch size 1, requested type "space"
 27546                           ; Number of cases is 1, Range of values is 0 to 0
 27547                           ; switch strategies available:
 27548                           ; Name         Instructions Cycles
 27549                           ; simple_byte            4     3 (average)
 27550                           ;	Chosen strategy is simple_byte
 27551  016964  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27552  016966  0A00               	xorlw	0	; case 0
 27553  016968  A4D8               	btfss	status,2,c
 27554  01696A  0012               	return	
 27555                           
 27556                           ; Switch size 1, requested type "space"
 27557                           ; Number of cases is 2, Range of values is 1 to 3
 27558                           ; switch strategies available:
 27559                           ; Name         Instructions Cycles
 27560                           ; simple_byte            7     4 (average)
 27561                           ;	Chosen strategy is simple_byte
 27562  01696C  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27563  01696E  0A01               	xorlw	1	; case 1
 27564  016970  B4D8               	btfsc	status,2,c
 27565  016972  D7EE               	goto	i2l6887
 27566  016974  0A02               	xorlw	2	; case 3
 27567  016976  A4D8               	btfss	status,2,c
 27568  016978  0012               	return	
 27569  01697A  D7ED               	goto	i2l6889
 27570  01697C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27571                           	opt stack 0
 27572                           pclatu	equ	0xFFB
 27573                           pclath	equ	0xFFA
 27574                           tblptru	equ	0xFF8
 27575                           tblptrh	equ	0xFF7
 27576                           tblptrl	equ	0xFF6
 27577                           tablat	equ	0xFF5
 27578                           prodh	equ	0xFF4
 27579                           prodl	equ	0xFF3
 27580                           intcon	equ	0xFF2
 27581                           intcon2	equ	0xFF1
 27582                           postinc0	equ	0xFEE
 27583                           fsr0h	equ	0xFEA
 27584                           fsr0l	equ	0xFE9
 27585                           wreg	equ	0xFE8
 27586                           indf1	equ	0xFE7
 27587                           postinc1	equ	0xFE6
 27588                           postdec1	equ	0xFE5
 27589                           fsr1h	equ	0xFE2
 27590                           fsr1l	equ	0xFE1
 27591                           indf2	equ	0xFDF
 27592                           postinc2	equ	0xFDE
 27593                           postdec2	equ	0xFDD
 27594                           plusw2	equ	0xFDB
 27595                           fsr2h	equ	0xFDA
 27596                           fsr2l	equ	0xFD9
 27597                           status	equ	0xFD8
 27598                           
 27599 ;; *************** function _USBCheckCDCRequest *****************
 27600 ;; Defined at:
 27601 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 27602 ;; Parameters:    Size  Location     Type
 27603 ;;		None
 27604 ;; Auto vars:     Size  Location     Type
 27605 ;;		None
 27606 ;; Return value:  Size  Location     Type
 27607 ;;		None               void
 27608 ;; Registers used:
 27609 ;;		wreg, status,2, status,0
 27610 ;; Tracked objects:
 27611 ;;		On entry : 0/0
 27612 ;;		On exit  : 0/0
 27613 ;;		Unchanged: 0/0
 27614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27619 ;;Total ram usage:        0 bytes
 27620 ;; Hardware stack levels used:    1
 27621 ;; This function calls:
 27622 ;;		Nothing
 27623 ;; This function is called by:
 27624 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27625 ;; This function uses a non-reentrant model
 27626 ;;
 27627                           
 27628                           	psect	text119
 27629  014944                     __ptext119:
 27630                           	opt stack 0
 27631  014944                     _USBCheckCDCRequest:
 27632                           	opt stack 17
 27633                           
 27634                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 27635                           
 27636                           ;incstack = 0
 27637  014944  010D               	movlb	13	; () banked
 27638  014946  5130               	movf	48,w,b	;volatile
 27639  014948  0B1F               	andlw	31
 27640  01494A  06E8               	decf	wreg,f,c
 27641  01494C  A4D8               	btfss	status,2,c
 27642  01494E  0012               	return	
 27643                           
 27644                           ; BSR set to: 13
 27645                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 27646                           
 27647                           ; BSR set to: 13
 27648                           
 27649                           ; BSR set to: 13
 27650  014950  010D               	movlb	13	; () banked
 27651  014952  3930               	swapf	48,w,b	;volatile
 27652  014954  32E8               	rrcf	wreg,f,c
 27653  014956  0B03               	andlw	3
 27654  014958  06E8               	decf	wreg,f,c
 27655  01495A  A4D8               	btfss	status,2,c
 27656  01495C  0012               	return	
 27657                           
 27658                           ; BSR set to: 13
 27659                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 27660                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 27661                           
 27662                           ; BSR set to: 13
 27663                           
 27664                           ; BSR set to: 13
 27665  01495E  010D               	movlb	13	; () banked
 27666  014960  5134               	movf	52,w,b	;volatile
 27667  014962  B4D8               	btfsc	status,2,c
 27668  014964  D048               	goto	i2l6767
 27669                           
 27670                           ; BSR set to: 13
 27671  014966  010D               	movlb	13	; () banked
 27672  014968  0534               	decf	52,w,b	;volatile
 27673  01496A  A4D8               	btfss	status,2,c
 27674  01496C  0012               	return	
 27675  01496E  D043               	goto	i2l6767
 27676  014970                     i2l6743:
 27677                           
 27678                           ; BSR set to: 13
 27679                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27680  014970  0EA1               	movlw	low _dummy_encapsulated_cmd_response
 27681  014972  0100               	movlb	0	; () banked
 27682  014974  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27683  014976  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27684  014978  0100               	movlb	0	; () banked
 27685  01497A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27686                           
 27687                           ; BSR set to: 0
 27688                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 27689  01497C  0E00               	movlw	0
 27690  01497E  0100               	movlb	0	; () banked
 27691  014980  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27692  014982  0E08               	movlw	8
 27693  014984  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27694                           
 27695                           ; BSR set to: 0
 27696                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27697  014986  0100               	movlb	0	; () banked
 27698  014988  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27699                           
 27700                           ; BSR set to: 0
 27701                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 27702  01498A  0100               	movlb	0	; () banked
 27703  01498C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27704                           
 27705                           ;usb_device_cdc.c: 232: break;
 27706  01498E  0012               	return	
 27707  014990                     i2l6751:
 27708                           
 27709                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27710  014990  0EA1               	movlw	low _dummy_encapsulated_cmd_response
 27711  014992  0100               	movlb	0	; () banked
 27712  014994  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27713  014996  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27714  014998  0100               	movlb	0	; () banked
 27715  01499A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27716                           
 27717                           ; BSR set to: 0
 27718                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27719  01499C  0100               	movlb	0	; () banked
 27720  01499E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27721                           
 27722                           ;usb_device_cdc.c: 237: break;
 27723  0149A0  0012               	return	
 27724  0149A2                     i2l450:
 27725                           
 27726                           ; BSR set to: 13
 27727                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27728  0149A2  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 27729  0149A6  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 27730                           
 27731                           ; BSR set to: 13
 27732                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27733  0149AA  0EC9               	movlw	low _line_coding
 27734  0149AC  0100               	movlb	0	; () banked
 27735  0149AE  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 27736  0149B0  0E02               	movlw	high _line_coding
 27737  0149B2  0100               	movlb	0	; () banked
 27738  0149B4  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27739                           
 27740                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27741  0149B6  0E00               	movlw	0
 27742  0149B8  0100               	movlb	0	; () banked
 27743  0149BA  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27744  0149BC  0E00               	movlw	0
 27745  0149BE  0100               	movlb	0	; () banked
 27746  0149C0  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27747  0149C2  0E00               	movlw	0
 27748  0149C4  0100               	movlb	0	; () banked
 27749  0149C6  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27750                           
 27751                           ; BSR set to: 0
 27752                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27753  0149C8  0100               	movlb	0	; () banked
 27754  0149CA  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27755                           
 27756                           ;usb_device_cdc.c: 246: break;
 27757  0149CC  0012               	return	
 27758  0149CE                     i2l6759:
 27759                           
 27760                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27761  0149CE  0EC9               	movlw	low _line_coding
 27762  0149D0  0100               	movlb	0	; () banked
 27763  0149D2  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27764  0149D4  0E02               	movlw	high _line_coding
 27765  0149D6  0100               	movlb	0	; () banked
 27766  0149D8  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27767                           
 27768                           ; BSR set to: 0
 27769  0149DA  0E00               	movlw	0
 27770  0149DC  0100               	movlb	0	; () banked
 27771  0149DE  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27772  0149E0  0E07               	movlw	7
 27773  0149E2  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27774                           
 27775                           ; BSR set to: 0
 27776  0149E4  0EC1               	movlw	193
 27777  0149E6  0100               	movlb	0	; () banked
 27778  0149E8  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27779                           
 27780                           ;usb_device_cdc.c: 253: break;
 27781  0149EA  0012               	return	
 27782  0149EC                     i2l452:
 27783                           
 27784                           ; BSR set to: 13
 27785                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27786  0149EC  CD32 F124          	movff	3378,_control_signal_bitmap	;volatile
 27787                           
 27788                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27789  0149F0  0100               	movlb	0	; () banked
 27790  0149F2  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27791                           
 27792                           ; BSR set to: 0
 27793                           ;usb_device_cdc.c: 315: }
 27794                           
 27795                           ; BSR set to: 0
 27796                           ;usb_device_cdc.c: 314: break;
 27797                           
 27798                           ;usb_device_cdc.c: 313: default:
 27799                           
 27800                           ;usb_device_cdc.c: 289: break;
 27801  0149F4  0012               	return	
 27802  0149F6                     i2l6767:
 27803  0149F6  010D               	movlb	13	; () banked
 27804  0149F8  5131               	movf	49,w,b	;volatile
 27805                           
 27806                           ; Switch size 1, requested type "space"
 27807                           ; Number of cases is 5, Range of values is 0 to 34
 27808                           ; switch strategies available:
 27809                           ; Name         Instructions Cycles
 27810                           ; simple_byte           16     9 (average)
 27811                           ;	Chosen strategy is simple_byte
 27812  0149FA  0A00               	xorlw	0	; case 0
 27813  0149FC  B4D8               	btfsc	status,2,c
 27814  0149FE  D7B8               	goto	i2l6743
 27815  014A00  0A01               	xorlw	1	; case 1
 27816  014A02  B4D8               	btfsc	status,2,c
 27817  014A04  D7C5               	goto	i2l6751
 27818  014A06  0A21               	xorlw	33	; case 32
 27819  014A08  B4D8               	btfsc	status,2,c
 27820  014A0A  D7CB               	goto	i2l450
 27821  014A0C  0A01               	xorlw	1	; case 33
 27822  014A0E  B4D8               	btfsc	status,2,c
 27823  014A10  D7DE               	goto	i2l6759
 27824  014A12  0A03               	xorlw	3	; case 34
 27825  014A14  A4D8               	btfss	status,2,c
 27826  014A16  0012               	return	
 27827  014A18  D7E9               	goto	i2l452
 27828  014A1A                     __end_of_USBCheckCDCRequest:
 27829                           	opt stack 0
 27830                           pclatu	equ	0xFFB
 27831                           pclath	equ	0xFFA
 27832                           tblptru	equ	0xFF8
 27833                           tblptrh	equ	0xFF7
 27834                           tblptrl	equ	0xFF6
 27835                           tablat	equ	0xFF5
 27836                           prodh	equ	0xFF4
 27837                           prodl	equ	0xFF3
 27838                           intcon	equ	0xFF2
 27839                           intcon2	equ	0xFF1
 27840                           postinc0	equ	0xFEE
 27841                           fsr0h	equ	0xFEA
 27842                           fsr0l	equ	0xFE9
 27843                           wreg	equ	0xFE8
 27844                           indf1	equ	0xFE7
 27845                           postinc1	equ	0xFE6
 27846                           postdec1	equ	0xFE5
 27847                           fsr1h	equ	0xFE2
 27848                           fsr1l	equ	0xFE1
 27849                           indf2	equ	0xFDF
 27850                           postinc2	equ	0xFDE
 27851                           postdec2	equ	0xFDD
 27852                           plusw2	equ	0xFDB
 27853                           fsr2h	equ	0xFDA
 27854                           fsr2l	equ	0xFD9
 27855                           status	equ	0xFD8
 27856                           
 27857 ;; *************** function _CDCInitEP *****************
 27858 ;; Defined at:
 27859 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;		None
 27862 ;; Auto vars:     Size  Location     Type
 27863 ;;		None
 27864 ;; Return value:  Size  Location     Type
 27865 ;;		None               void
 27866 ;; Registers used:
 27867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27868 ;; Tracked objects:
 27869 ;;		On entry : 0/0
 27870 ;;		On exit  : 0/0
 27871 ;;		Unchanged: 0/0
 27872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27877 ;;Total ram usage:        0 bytes
 27878 ;; Hardware stack levels used:    1
 27879 ;; Hardware stack levels required when called:    2
 27880 ;; This function calls:
 27881 ;;		_USBEnableEndpoint
 27882 ;;		i2_USBTransferOnePacket
 27883 ;; This function is called by:
 27884 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27885 ;; This function uses a non-reentrant model
 27886 ;;
 27887                           
 27888                           	psect	text120
 27889  0160B2                     __ptext120:
 27890                           	opt stack 0
 27891  0160B2                     _CDCInitEP:
 27892                           	opt stack 15
 27893                           
 27894                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 27895                           
 27896                           ;incstack = 0
 27897  0160B2  0E00               	movlw	0
 27898  0160B4  0102               	movlb	2	; () banked
 27899  0160B6  6FC9               	movwf	_line_coding& (0+255),b
 27900  0160B8  0E4B               	movlw	75
 27901  0160BA  6FCA               	movwf	(_line_coding+1)& (0+255),b
 27902  0160BC  0E00               	movlw	0
 27903  0160BE  6FCB               	movwf	(_line_coding+2)& (0+255),b
 27904  0160C0  0E00               	movlw	0
 27905  0160C2  6FCC               	movwf	(_line_coding+3)& (0+255),b
 27906                           
 27907                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 27908  0160C4  0E00               	movlw	0
 27909  0160C6  0102               	movlb	2	; () banked
 27910  0160C8  6FCD               	movwf	(_line_coding+4)& (0+255),b
 27911                           
 27912                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 27913  0160CA  0E00               	movlw	0
 27914  0160CC  0102               	movlb	2	; () banked
 27915  0160CE  6FCE               	movwf	(_line_coding+5)& (0+255),b
 27916                           
 27917                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 27918  0160D0  0E08               	movlw	8
 27919  0160D2  0102               	movlb	2	; () banked
 27920  0160D4  6FCF               	movwf	(_line_coding+6)& (0+255),b
 27921                           
 27922                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 27923  0160D6  0E00               	movlw	0
 27924  0160D8  6E18               	movwf	_cdc_rx_len,c
 27925                           
 27926                           ; BSR set to: 2
 27927                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 27928  0160DA  0E1A               	movlw	26
 27929  0160DC  6E35               	movwf	USBEnableEndpoint@options,c
 27930  0160DE  0E01               	movlw	1
 27931  0160E0  EC7E  F0B3         	call	_USBEnableEndpoint
 27932                           
 27933                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 27934  0160E4  0E1E               	movlw	30
 27935  0160E6  6E35               	movwf	USBEnableEndpoint@options,c
 27936  0160E8  0E02               	movlw	2
 27937  0160EA  EC7E  F0B3         	call	_USBEnableEndpoint
 27938                           
 27939                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27940  0160EE  0E00               	movlw	0
 27941  0160F0  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 27942  0160F2  0E64               	movlw	low _cdc_data_rx
 27943  0160F4  6E2E               	movwf	i2USBTransferOnePacket@data,c
 27944  0160F6  0E03               	movlw	high _cdc_data_rx
 27945  0160F8  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 27946  0160FA  0E40               	movlw	64
 27947  0160FC  6E30               	movwf	i2USBTransferOnePacket@len,c
 27948  0160FE  0E02               	movlw	2
 27949  016100  ECE4  F0AA         	call	i2_USBTransferOnePacket
 27950  016104  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27951  016108  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27952                           
 27953                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27954  01610C  0E00               	movlw	0
 27955  01610E  0101               	movlb	1	; () banked
 27956  016110  6F13               	movwf	_CDCDataInHandle& (0+255),b
 27957  016112  0E00               	movlw	0
 27958  016114  0101               	movlb	1	; () banked
 27959  016116  6F14               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27960                           
 27961                           ; BSR set to: 1
 27962                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27963  016118  0E00               	movlw	0
 27964  01611A  6E19               	movwf	_cdc_trf_state,c
 27965                           
 27966                           ; BSR set to: 1
 27967  01611C  0012               	return		;funcret
 27968  01611E                     __end_of_CDCInitEP:
 27969                           	opt stack 0
 27970                           pclatu	equ	0xFFB
 27971                           pclath	equ	0xFFA
 27972                           tblptru	equ	0xFF8
 27973                           tblptrh	equ	0xFF7
 27974                           tblptrl	equ	0xFF6
 27975                           tablat	equ	0xFF5
 27976                           prodh	equ	0xFF4
 27977                           prodl	equ	0xFF3
 27978                           intcon	equ	0xFF2
 27979                           intcon2	equ	0xFF1
 27980                           postinc0	equ	0xFEE
 27981                           fsr0h	equ	0xFEA
 27982                           fsr0l	equ	0xFE9
 27983                           wreg	equ	0xFE8
 27984                           indf1	equ	0xFE7
 27985                           postinc1	equ	0xFE6
 27986                           postdec1	equ	0xFE5
 27987                           fsr1h	equ	0xFE2
 27988                           fsr1l	equ	0xFE1
 27989                           indf2	equ	0xFDF
 27990                           postinc2	equ	0xFDE
 27991                           postdec2	equ	0xFDD
 27992                           plusw2	equ	0xFDB
 27993                           fsr2h	equ	0xFDA
 27994                           fsr2l	equ	0xFD9
 27995                           status	equ	0xFD8
 27996                           
 27997 ;; *************** function i2_USBTransferOnePacket *****************
 27998 ;; Defined at:
 27999 ;;		line 995 in file "../My_library/usb/usb_device.c"
 28000 ;; Parameters:    Size  Location     Type
 28001 ;;  ep              1    wreg     unsigned char 
 28002 ;;  dir             1    0[COMRAM] unsigned char 
 28003 ;;  data            2    1[COMRAM] PTR unsigned char 
 28004 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28005 ;;  len             1    3[COMRAM] unsigned char 
 28006 ;; Auto vars:     Size  Location     Type
 28007 ;;  ep              1    4[COMRAM] unsigned char 
 28008 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28009 ;;		 -> NULL(0), BDT(48), 
 28010 ;; Return value:  Size  Location     Type
 28011 ;;                  2    0[COMRAM] PTR void 
 28012 ;; Registers used:
 28013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28014 ;; Tracked objects:
 28015 ;;		On entry : 0/0
 28016 ;;		On exit  : 0/0
 28017 ;;		Unchanged: 0/0
 28018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28022 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28023 ;;Total ram usage:        7 bytes
 28024 ;; Hardware stack levels used:    1
 28025 ;; This function calls:
 28026 ;;		Nothing
 28027 ;; This function is called by:
 28028 ;;		_CDCInitEP
 28029 ;; This function uses a non-reentrant model
 28030 ;;
 28031                           
 28032                           	psect	text121
 28033  0155C8                     __ptext121:
 28034                           	opt stack 0
 28035  0155C8                     i2_USBTransferOnePacket:
 28036                           	opt stack 16
 28037                           
 28038                           ; BSR set to: 1
 28039                           ;incstack = 0
 28040                           ;i2USBTransferOnePacket@ep stored from wreg
 28041  0155C8  6E31               	movwf	i2USBTransferOnePacket@ep,c
 28042                           
 28043                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 28044                           ;usb_device.c: 1000: if(dir != 0)
 28045  0155CA  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28046  0155CC  B4D8               	btfsc	status,2,c
 28047  0155CE  D007               	goto	i2l6703
 28048                           
 28049                           ;usb_device.c: 1001: {
 28050                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 28051  0155D0  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28052  0155D2  0D02               	mullw	2
 28053  0155D4  0EF5               	movlw	low _pBDTEntryIn
 28054  0155D6  24F3               	addwf	prodl,w,c
 28055  0155D8  6ED9               	movwf	fsr2l,c
 28056  0155DA  0E00               	movlw	high _pBDTEntryIn
 28057  0155DC  D006               	goto	L14
 28058  0155DE                     i2l6703:
 28059                           
 28060                           ;usb_device.c: 1005: else
 28061                           ;usb_device.c: 1006: {
 28062                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 28063  0155DE  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28064  0155E0  0D02               	mullw	2
 28065  0155E2  0E00               	movlw	low _pBDTEntryOut
 28066  0155E4  24F3               	addwf	prodl,w,c
 28067  0155E6  6ED9               	movwf	fsr2l,c
 28068  0155E8  0E01               	movlw	high _pBDTEntryOut
 28069  0155EA                     L14:
 28070  0155EA  20F4               	addwfc	prodh,w,c
 28071  0155EC  6EDA               	movwf	fsr2h,c
 28072  0155EE  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 28073  0155F2  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28074                           
 28075                           ;usb_device.c: 1009: }
 28076                           ;usb_device.c: 1013: if(handle == 0)
 28077  0155F6  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28078  0155F8  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28079  0155FA  A4D8               	btfss	status,2,c
 28080  0155FC  D005               	goto	i2l6711
 28081                           
 28082                           ;usb_device.c: 1014: {
 28083                           ;usb_device.c: 1015: return 0;
 28084  0155FE  0E00               	movlw	0
 28085  015600  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28086  015602  0E00               	movlw	0
 28087  015604  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28088  015606  0012               	return	
 28089  015608                     i2l6711:
 28090                           
 28091                           ;usb_device.c: 1016: }
 28092                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 28093  015608  EE20 F002          	lfsr	2,2
 28094  01560C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28095  01560E  26D9               	addwf	fsr2l,f,c
 28096  015610  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28097  015612  22DA               	addwfc	fsr2h,f,c
 28098  015614  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28099  015618  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28100                           
 28101                           ;usb_device.c: 1030: handle->CNT = len;
 28102  01561C  EE20 F001          	lfsr	2,1
 28103  015620  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28104  015622  26D9               	addwf	fsr2l,f,c
 28105  015624  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28106  015626  22DA               	addwfc	fsr2h,f,c
 28107  015628  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28108                           
 28109                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 28110  01562C  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28111  015630  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28112  015634  0E40               	movlw	64
 28113  015636  16DF               	andwf	indf2,f,c
 28114                           
 28115                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 28116  015638  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28117  01563C  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28118  015640  0E00               	movlw	0
 28119  015642  86DB               	bsf	plusw2,3,c
 28120                           
 28121                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 28122  015644  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28123  015648  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28124  01564C  0E00               	movlw	0
 28125  01564E  8EDB               	bsf	plusw2,7,c
 28126                           
 28127                           ;usb_device.c: 1036: if(dir != 0)
 28128  015650  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28129  015652  B4D8               	btfsc	status,2,c
 28130  015654  D007               	goto	i2l6723
 28131                           
 28132                           ;usb_device.c: 1037: {
 28133                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28134  015656  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28135  015658  0D02               	mullw	2
 28136  01565A  0EF5               	movlw	low _pBDTEntryIn
 28137  01565C  24F3               	addwf	prodl,w,c
 28138  01565E  6ED9               	movwf	fsr2l,c
 28139  015660  0E00               	movlw	high _pBDTEntryIn
 28140  015662  D006               	goto	L15
 28141  015664                     i2l6723:
 28142                           
 28143                           ;usb_device.c: 1041: else
 28144                           ;usb_device.c: 1042: {
 28145                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28146  015664  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28147  015666  0D02               	mullw	2
 28148  015668  0E00               	movlw	low _pBDTEntryOut
 28149  01566A  24F3               	addwf	prodl,w,c
 28150  01566C  6ED9               	movwf	fsr2l,c
 28151  01566E  0E01               	movlw	high _pBDTEntryOut
 28152  015670                     L15:
 28153  015670  20F4               	addwfc	prodh,w,c
 28154  015672  6EDA               	movwf	fsr2h,c
 28155  015674  0E04               	movlw	4
 28156  015676  1ADF               	xorwf	indf2,f,c
 28157                           
 28158                           ;usb_device.c: 1045: }
 28159                           ;usb_device.c: 1046: return (void*)handle;
 28160  015678  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28161  01567C  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28162  015680  0012               	return	
 28163  015682                     __end_ofi2_USBTransferOnePacket:
 28164                           	opt stack 0
 28165                           pclatu	equ	0xFFB
 28166                           pclath	equ	0xFFA
 28167                           tblptru	equ	0xFF8
 28168                           tblptrh	equ	0xFF7
 28169                           tblptrl	equ	0xFF6
 28170                           tablat	equ	0xFF5
 28171                           prodh	equ	0xFF4
 28172                           prodl	equ	0xFF3
 28173                           intcon	equ	0xFF2
 28174                           intcon2	equ	0xFF1
 28175                           postinc0	equ	0xFEE
 28176                           fsr0h	equ	0xFEA
 28177                           fsr0l	equ	0xFE9
 28178                           wreg	equ	0xFE8
 28179                           indf1	equ	0xFE7
 28180                           postinc1	equ	0xFE6
 28181                           postdec1	equ	0xFE5
 28182                           fsr1h	equ	0xFE2
 28183                           fsr1l	equ	0xFE1
 28184                           indf2	equ	0xFDF
 28185                           postinc2	equ	0xFDE
 28186                           postdec2	equ	0xFDD
 28187                           plusw2	equ	0xFDB
 28188                           fsr2h	equ	0xFDA
 28189                           fsr2l	equ	0xFD9
 28190                           status	equ	0xFD8
 28191                           
 28192 ;; *************** function _USBEnableEndpoint *****************
 28193 ;; Defined at:
 28194 ;;		line 878 in file "../My_library/usb/usb_device.c"
 28195 ;; Parameters:    Size  Location     Type
 28196 ;;  ep              1    wreg     unsigned char 
 28197 ;;  options         1    8[COMRAM] unsigned char 
 28198 ;; Auto vars:     Size  Location     Type
 28199 ;;  ep              1   11[COMRAM] unsigned char 
 28200 ;;  p               2    9[COMRAM] PTR unsigned char 
 28201 ;;		 -> UEP0(1), 
 28202 ;; Return value:  Size  Location     Type
 28203 ;;		None               void
 28204 ;; Registers used:
 28205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28206 ;; Tracked objects:
 28207 ;;		On entry : 0/0
 28208 ;;		On exit  : 0/0
 28209 ;;		Unchanged: 0/0
 28210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28211 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28212 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;Total ram usage:        4 bytes
 28216 ;; Hardware stack levels used:    1
 28217 ;; Hardware stack levels required when called:    1
 28218 ;; This function calls:
 28219 ;;		_USBConfigureEndpoint
 28220 ;; This function is called by:
 28221 ;;		_CDCInitEP
 28222 ;; This function uses a non-reentrant model
 28223 ;;
 28224                           
 28225                           	psect	text122
 28226  0166FC                     __ptext122:
 28227                           	opt stack 0
 28228  0166FC                     _USBEnableEndpoint:
 28229                           	opt stack 15
 28230                           
 28231                           ;incstack = 0
 28232                           ;USBEnableEndpoint@ep stored from wreg
 28233  0166FC  6E38               	movwf	USBEnableEndpoint@ep,c
 28234                           
 28235                           ;usb_device.c: 880: unsigned char* p;
 28236                           ;usb_device.c: 884: if(options & 0x04)
 28237  0166FE  A435               	btfss	USBEnableEndpoint@options,2,c
 28238  016700  D005               	goto	i2l6655
 28239                           
 28240                           ;usb_device.c: 885: {
 28241                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28242  016702  0E00               	movlw	0
 28243  016704  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28244  016706  5038               	movf	USBEnableEndpoint@ep,w,c
 28245  016708  EC7F  F0AC         	call	_USBConfigureEndpoint
 28246  01670C                     i2l6655:
 28247                           
 28248                           ;usb_device.c: 887: }
 28249                           ;usb_device.c: 888: if(options & 0x02)
 28250  01670C  A235               	btfss	USBEnableEndpoint@options,1,c
 28251  01670E  D005               	goto	i2l6659
 28252                           
 28253                           ;usb_device.c: 889: {
 28254                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28255  016710  0E01               	movlw	1
 28256  016712  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28257  016714  5038               	movf	USBEnableEndpoint@ep,w,c
 28258  016716  EC7F  F0AC         	call	_USBConfigureEndpoint
 28259  01671A                     i2l6659:
 28260                           
 28261                           ;usb_device.c: 891: }
 28262                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28263  01671A  5038               	movf	USBEnableEndpoint@ep,w,c
 28264  01671C  0D01               	mullw	1
 28265  01671E  0E26               	movlw	38
 28266  016720  24F3               	addwf	prodl,w,c
 28267  016722  6E36               	movwf	USBEnableEndpoint@p,c
 28268  016724  0E0F               	movlw	15
 28269  016726  20F4               	addwfc	prodh,w,c
 28270  016728  6E37               	movwf	USBEnableEndpoint@p+1,c
 28271                           
 28272                           ;usb_device.c: 901: *p = options;
 28273  01672A  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28274  01672E  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28275  016732  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28276  016736  0012               	return		;funcret
 28277  016738                     __end_of_USBEnableEndpoint:
 28278                           	opt stack 0
 28279                           pclatu	equ	0xFFB
 28280                           pclath	equ	0xFFA
 28281                           tblptru	equ	0xFF8
 28282                           tblptrh	equ	0xFF7
 28283                           tblptrl	equ	0xFF6
 28284                           tablat	equ	0xFF5
 28285                           prodh	equ	0xFF4
 28286                           prodl	equ	0xFF3
 28287                           intcon	equ	0xFF2
 28288                           intcon2	equ	0xFF1
 28289                           postinc0	equ	0xFEE
 28290                           fsr0h	equ	0xFEA
 28291                           fsr0l	equ	0xFE9
 28292                           wreg	equ	0xFE8
 28293                           indf1	equ	0xFE7
 28294                           postinc1	equ	0xFE6
 28295                           postdec1	equ	0xFE5
 28296                           fsr1h	equ	0xFE2
 28297                           fsr1l	equ	0xFE1
 28298                           indf2	equ	0xFDF
 28299                           postinc2	equ	0xFDE
 28300                           postdec2	equ	0xFDD
 28301                           plusw2	equ	0xFDB
 28302                           fsr2h	equ	0xFDA
 28303                           fsr2l	equ	0xFD9
 28304                           status	equ	0xFD8
 28305                           
 28306 ;; *************** function _USBConfigureEndpoint *****************
 28307 ;; Defined at:
 28308 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 28309 ;; Parameters:    Size  Location     Type
 28310 ;;  EPNum           1    wreg     unsigned char 
 28311 ;;  direction       1    0[COMRAM] unsigned char 
 28312 ;; Auto vars:     Size  Location     Type
 28313 ;;  EPNum           1    5[COMRAM] unsigned char 
 28314 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28315 ;;		 -> BDT(48), 
 28316 ;; Return value:  Size  Location     Type
 28317 ;;		None               void
 28318 ;; Registers used:
 28319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28320 ;; Tracked objects:
 28321 ;;		On entry : 0/0
 28322 ;;		On exit  : 0/0
 28323 ;;		Unchanged: 0/0
 28324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28325 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28326 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28328 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28329 ;;Total ram usage:        8 bytes
 28330 ;; Hardware stack levels used:    1
 28331 ;; This function calls:
 28332 ;;		Nothing
 28333 ;; This function is called by:
 28334 ;;		_USBEnableEndpoint
 28335 ;; This function uses a non-reentrant model
 28336 ;;
 28337                           
 28338                           	psect	text123
 28339  0158FE                     __ptext123:
 28340                           	opt stack 0
 28341  0158FE                     _USBConfigureEndpoint:
 28342                           	opt stack 15
 28343                           
 28344                           ;incstack = 0
 28345                           ;USBConfigureEndpoint@EPNum stored from wreg
 28346  0158FE  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28347                           
 28348                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28349                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28350  015900  0E00               	movlw	0
 28351  015902  6E33               	movwf	USBConfigureEndpoint@handle,c
 28352  015904  0E0D               	movlw	13
 28353  015906  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28354                           
 28355                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28356  015908  502D               	movf	USBConfigureEndpoint@direction,w,c
 28357  01590A  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28358  01590C  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28359  01590E  90D8               	bcf	status,0,c
 28360  015910  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28361  015912  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28362  015914  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28363  015916  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28364  015918  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28365  01591A  90D8               	bcf	status,0,c
 28366  01591C  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28367  01591E  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28368  015920  90D8               	bcf	status,0,c
 28369  015922  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28370  015924  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28371  015926  502E               	movf	??_USBConfigureEndpoint,w,c
 28372  015928  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28373  01592A  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28374  01592C  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28375  01592E  90D8               	bcf	status,0,c
 28376  015930  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28377  015932  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28378  015934  90D8               	bcf	status,0,c
 28379  015936  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28380  015938  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28381  01593A  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28382  01593C  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28383  01593E  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28384  015940  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28385                           
 28386                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28387  015942  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28388  015946  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28389  01594A  9EDF               	bcf	indf2,7,c
 28390                           
 28391                           ;usb_device.c: 1557: if(direction == 0)
 28392  01594C  502D               	movf	USBConfigureEndpoint@direction,w,c
 28393  01594E  A4D8               	btfss	status,2,c
 28394  015950  D007               	goto	i2l6645
 28395                           
 28396                           ;usb_device.c: 1558: {
 28397                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28398  015952  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28399  015954  0D02               	mullw	2
 28400  015956  0E00               	movlw	low _pBDTEntryOut
 28401  015958  24F3               	addwf	prodl,w,c
 28402  01595A  6ED9               	movwf	fsr2l,c
 28403  01595C  0E01               	movlw	high _pBDTEntryOut
 28404  01595E  D006               	goto	L16
 28405  015960                     i2l6645:
 28406                           
 28407                           ;usb_device.c: 1561: else
 28408                           ;usb_device.c: 1562: {
 28409                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28410  015960  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28411  015962  0D02               	mullw	2
 28412  015964  0EF5               	movlw	low _pBDTEntryIn
 28413  015966  24F3               	addwf	prodl,w,c
 28414  015968  6ED9               	movwf	fsr2l,c
 28415  01596A  0E00               	movlw	high _pBDTEntryIn
 28416  01596C                     L16:
 28417  01596C  20F4               	addwfc	prodh,w,c
 28418  01596E  6EDA               	movwf	fsr2h,c
 28419  015970  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28420  015974  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28421                           
 28422                           ;usb_device.c: 1564: }
 28423                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28424  015978  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28425  01597C  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28426  015980  9CDF               	bcf	indf2,6,c
 28427                           
 28428                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28429  015982  EE20 F004          	lfsr	2,4
 28430  015986  5033               	movf	USBConfigureEndpoint@handle,w,c
 28431  015988  26D9               	addwf	fsr2l,f,c
 28432  01598A  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28433  01598C  22DA               	addwfc	fsr2h,f,c
 28434  01598E  8CDF               	bsf	indf2,6,c
 28435  015990  0012               	return		;funcret
 28436  015992                     __end_of_USBConfigureEndpoint:
 28437                           	opt stack 0
 28438                           pclatu	equ	0xFFB
 28439                           pclath	equ	0xFFA
 28440                           tblptru	equ	0xFF8
 28441                           tblptrh	equ	0xFF7
 28442                           tblptrl	equ	0xFF6
 28443                           tablat	equ	0xFF5
 28444                           prodh	equ	0xFF4
 28445                           prodl	equ	0xFF3
 28446                           intcon	equ	0xFF2
 28447                           intcon2	equ	0xFF1
 28448                           postinc0	equ	0xFEE
 28449                           fsr0h	equ	0xFEA
 28450                           fsr0l	equ	0xFE9
 28451                           wreg	equ	0xFE8
 28452                           indf1	equ	0xFE7
 28453                           postinc1	equ	0xFE6
 28454                           postdec1	equ	0xFE5
 28455                           fsr1h	equ	0xFE2
 28456                           fsr1l	equ	0xFE1
 28457                           indf2	equ	0xFDF
 28458                           postinc2	equ	0xFDE
 28459                           postdec2	equ	0xFDD
 28460                           plusw2	equ	0xFDB
 28461                           fsr2h	equ	0xFDA
 28462                           fsr2l	equ	0xFD9
 28463                           status	equ	0xFD8
 28464                           
 28465 ;; *************** function _USBCtrlTrfOutHandler *****************
 28466 ;; Defined at:
 28467 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 28468 ;; Parameters:    Size  Location     Type
 28469 ;;		None
 28470 ;; Auto vars:     Size  Location     Type
 28471 ;;		None
 28472 ;; Return value:  Size  Location     Type
 28473 ;;		None               void
 28474 ;; Registers used:
 28475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28476 ;; Tracked objects:
 28477 ;;		On entry : 0/0
 28478 ;;		On exit  : 0/0
 28479 ;;		Unchanged: 0/0
 28480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28485 ;;Total ram usage:        0 bytes
 28486 ;; Hardware stack levels used:    1
 28487 ;; Hardware stack levels required when called:    2
 28488 ;; This function calls:
 28489 ;;		_USBCtrlTrfRxService
 28490 ;; This function is called by:
 28491 ;;		_USBCtrlEPService
 28492 ;; This function uses a non-reentrant model
 28493 ;;
 28494                           
 28495                           	psect	text124
 28496  01649A                     __ptext124:
 28497                           	opt stack 0
 28498  01649A                     _USBCtrlTrfOutHandler:
 28499                           	opt stack 15
 28500                           
 28501                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28502                           
 28503                           ;incstack = 0
 28504  01649A  0E02               	movlw	2
 28505  01649C  181B               	xorwf	_controlTransferState,w,c	;volatile
 28506  01649E  A4D8               	btfss	status,2,c
 28507  0164A0  D003               	goto	i2l7789
 28508                           
 28509                           ;usb_device.c: 2544: {
 28510                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28511  0164A2  ECA8  F09D         	call	_USBCtrlTrfRxService	;wreg free
 28512                           
 28513                           ;usb_device.c: 2546: }
 28514  0164A6  0012               	return	
 28515  0164A8                     i2l7789:
 28516                           
 28517                           ;usb_device.c: 2547: else
 28518                           ;usb_device.c: 2548: {
 28519                           ;usb_device.c: 2551: controlTransferState = 0;
 28520  0164A8  0E00               	movlw	0
 28521  0164AA  6E1B               	movwf	_controlTransferState,c	;volatile
 28522                           
 28523                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28524  0164AC  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28525  0164AE  A4D8               	btfss	status,2,c
 28526  0164B0  D01F               	goto	i2l7797
 28527                           
 28528                           ;usb_device.c: 2559: {
 28529                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28530  0164B2  EE20 F001          	lfsr	2,1
 28531  0164B6  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28532  0164B8  26D9               	addwf	fsr2l,f,c
 28533  0164BA  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28534  0164BC  22DA               	addwfc	fsr2h,f,c
 28535  0164BE  0E08               	movlw	8
 28536  0164C0  6EDF               	movwf	indf2,c
 28537                           
 28538                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28539  0164C2  EE20 F002          	lfsr	2,2
 28540  0164C6  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28541  0164C8  26D9               	addwf	fsr2l,f,c
 28542  0164CA  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28543  0164CC  22DA               	addwfc	fsr2h,f,c
 28544  0164CE  0E30               	movlw	48
 28545  0164D0  6EDE               	movwf	postinc2,c
 28546  0164D2  0E0D               	movlw	13
 28547  0164D4  6EDD               	movwf	postdec2,c
 28548                           
 28549                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28550  0164D6  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28551  0164DA  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28552  0164DE  0E0C               	movlw	12
 28553  0164E0  6EDF               	movwf	indf2,c
 28554                           
 28555                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28556  0164E2  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28557  0164E6  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28558  0164EA  0E00               	movlw	0
 28559  0164EC  8EDB               	bsf	plusw2,7,c
 28560                           
 28561                           ;usb_device.c: 2564: }
 28562  0164EE  0012               	return	
 28563  0164F0                     i2l7797:
 28564                           
 28565                           ;usb_device.c: 2565: else
 28566                           ;usb_device.c: 2566: {
 28567                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 28568  0164F0  0E00               	movlw	0
 28569  0164F2  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28570  0164F4  0012               	return	
 28571  0164F6                     __end_of_USBCtrlTrfOutHandler:
 28572                           	opt stack 0
 28573                           pclatu	equ	0xFFB
 28574                           pclath	equ	0xFFA
 28575                           tblptru	equ	0xFF8
 28576                           tblptrh	equ	0xFF7
 28577                           tblptrl	equ	0xFF6
 28578                           tablat	equ	0xFF5
 28579                           prodh	equ	0xFF4
 28580                           prodl	equ	0xFF3
 28581                           intcon	equ	0xFF2
 28582                           intcon2	equ	0xFF1
 28583                           postinc0	equ	0xFEE
 28584                           fsr0h	equ	0xFEA
 28585                           fsr0l	equ	0xFE9
 28586                           wreg	equ	0xFE8
 28587                           indf1	equ	0xFE7
 28588                           postinc1	equ	0xFE6
 28589                           postdec1	equ	0xFE5
 28590                           fsr1h	equ	0xFE2
 28591                           fsr1l	equ	0xFE1
 28592                           indf2	equ	0xFDF
 28593                           postinc2	equ	0xFDE
 28594                           postdec2	equ	0xFDD
 28595                           plusw2	equ	0xFDB
 28596                           fsr2h	equ	0xFDA
 28597                           fsr2l	equ	0xFD9
 28598                           status	equ	0xFD8
 28599                           
 28600 ;; *************** function _USBCtrlTrfRxService *****************
 28601 ;; Defined at:
 28602 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 28603 ;; Parameters:    Size  Location     Type
 28604 ;;		None
 28605 ;; Auto vars:     Size  Location     Type
 28606 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28607 ;;  i               1    0[COMRAM] unsigned char 
 28608 ;; Return value:  Size  Location     Type
 28609 ;;		None               void
 28610 ;; Registers used:
 28611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28612 ;; Tracked objects:
 28613 ;;		On entry : 0/0
 28614 ;;		On exit  : 0/0
 28615 ;;		Unchanged: 0/0
 28616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28621 ;;Total ram usage:        2 bytes
 28622 ;; Hardware stack levels used:    1
 28623 ;; Hardware stack levels required when called:    1
 28624 ;; This function calls:
 28625 ;;		_USBCtrlEPAllowStatusStage
 28626 ;; This function is called by:
 28627 ;;		_USBCtrlTrfOutHandler
 28628 ;; This function uses a non-reentrant model
 28629 ;;
 28630                           
 28631                           	psect	text125
 28632  013B50                     __ptext125:
 28633                           	opt stack 0
 28634  013B50                     _USBCtrlTrfRxService:
 28635                           	opt stack 15
 28636                           
 28637                           ;usb_device.c: 1854: uint8_t byteToRead;
 28638                           ;usb_device.c: 1855: uint8_t i;
 28639                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28640                           
 28641                           ;incstack = 0
 28642  013B50  EE20 F001          	lfsr	2,1
 28643  013B54  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28644  013B56  26D9               	addwf	fsr2l,f,c
 28645  013B58  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28646  013B5A  22DA               	addwfc	fsr2h,f,c
 28647  013B5C  50DF               	movf	indf2,w,c
 28648  013B5E  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 28649                           
 28650                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 28651  013B60  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28652  013B62  0100               	movlb	0	; () banked
 28653  013B64  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28654  013B66  0E00               	movlw	0
 28655  013B68  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28656  013B6A  A0D8               	btfss	status,0,c
 28657                           
 28658                           ; BSR set to: 0
 28659                           ;usb_device.c: 1866: {
 28660                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 28661  013B6C  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28662                           
 28663                           ; BSR set to: 0
 28664                           ;usb_device.c: 1868: }
 28665                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 28666                           
 28667                           ; BSR set to: 0
 28668  013B70  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28669  013B72  0100               	movlb	0	; () banked
 28670  013B74  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 28671  013B76  0E00               	movlw	0
 28672  013B78  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 28673                           
 28674                           ; BSR set to: 0
 28675                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 28676  013B7A  0E00               	movlw	0
 28677  013B7C  6E2D               	movwf	USBCtrlTrfRxService@i,c
 28678  013B7E  D012               	goto	i2l7623
 28679  013B80                     i2l7617:
 28680                           
 28681                           ; BSR set to: 0
 28682                           ;usb_device.c: 1875: {
 28683                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28684  013B80  502D               	movf	USBCtrlTrfRxService@i,w,c
 28685  013B82  0D01               	mullw	1
 28686  013B84  0E38               	movlw	56
 28687  013B86  24F3               	addwf	prodl,w,c
 28688  013B88  6ED9               	movwf	fsr2l,c
 28689  013B8A  0E0D               	movlw	13
 28690  013B8C  20F4               	addwfc	prodh,w,c
 28691  013B8E  6EDA               	movwf	fsr2h,c
 28692  013B90  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 28693  013B94  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 28694  013B98  CFDF FFE7          	movff	indf2,indf1
 28695                           
 28696                           ; BSR set to: 0
 28697  013B9C  0100               	movlb	0	; () banked
 28698  013B9E  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 28699  013BA0  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 28700                           
 28701                           ; BSR set to: 0
 28702  013BA2  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 28703  013BA4                     i2l7623:
 28704                           
 28705                           ; BSR set to: 0
 28706  013BA4  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28707  013BA6  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 28708  013BA8  A0D8               	btfss	status,0,c
 28709  013BAA  D7EA               	goto	i2l7617
 28710                           
 28711                           ; BSR set to: 0
 28712                           ;usb_device.c: 1877: }
 28713                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 28714                           
 28715                           ; BSR set to: 0
 28716  013BAC  0100               	movlb	0	; () banked
 28717  013BAE  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28718  013BB0  0100               	movlb	0	; () banked
 28719  013BB2  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28720  013BB4  B4D8               	btfsc	status,2,c
 28721  013BB6  D032               	goto	i2l7639
 28722                           
 28723                           ; BSR set to: 0
 28724                           ;usb_device.c: 1882: {
 28725                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 28726  013BB8  EE20 F001          	lfsr	2,1
 28727  013BBC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28728  013BBE  26D9               	addwf	fsr2l,f,c
 28729  013BC0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28730  013BC2  22DA               	addwfc	fsr2h,f,c
 28731  013BC4  0E08               	movlw	8
 28732  013BC6  6EDF               	movwf	indf2,c
 28733                           
 28734                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28735  013BC8  EE20 F002          	lfsr	2,2
 28736  013BCC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28737  013BCE  26D9               	addwf	fsr2l,f,c
 28738  013BD0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28739  013BD2  22DA               	addwfc	fsr2h,f,c
 28740  013BD4  0E38               	movlw	56
 28741  013BD6  6EDE               	movwf	postinc2,c
 28742  013BD8  0E0D               	movlw	13
 28743  013BDA  6EDD               	movwf	postdec2,c
 28744                           
 28745                           ; BSR set to: 0
 28746                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28747  013BDC  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28748  013BE0  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28749  013BE4  BCDF               	btfsc	indf2,6,c
 28750  013BE6  D00D               	goto	i2l7635
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;usb_device.c: 1886: {
 28754                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28755  013BE8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28756  013BEC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28757  013BF0  0E48               	movlw	72
 28758  013BF2  6EDF               	movwf	indf2,c
 28759                           
 28760                           ; BSR set to: 0
 28761                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28762  013BF4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28763  013BF8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28764  013BFC  0E00               	movlw	0
 28765  013BFE  8EDB               	bsf	plusw2,7,c
 28766                           
 28767                           ;usb_device.c: 1889: }
 28768  013C00  0012               	return	
 28769  013C02                     i2l7635:
 28770                           
 28771                           ; BSR set to: 0
 28772                           ;usb_device.c: 1890: else
 28773                           ;usb_device.c: 1891: {
 28774                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28775  013C02  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28776  013C06  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28777  013C0A  0E08               	movlw	8
 28778  013C0C  6EDF               	movwf	indf2,c
 28779                           
 28780                           ; BSR set to: 0
 28781                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28782  013C0E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28783  013C12  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28784  013C16  0E00               	movlw	0
 28785  013C18  8EDB               	bsf	plusw2,7,c
 28786                           
 28787                           ; BSR set to: 0
 28788                           ;usb_device.c: 1894: }
 28789                           ;usb_device.c: 1895: }
 28790  013C1A  0012               	return	
 28791  013C1C                     i2l7639:
 28792                           
 28793                           ; BSR set to: 0
 28794                           ;usb_device.c: 1896: else
 28795                           ;usb_device.c: 1897: {
 28796                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 28797  013C1C  EE20 F001          	lfsr	2,1
 28798  013C20  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28799  013C22  26D9               	addwf	fsr2l,f,c
 28800  013C24  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28801  013C26  22DA               	addwfc	fsr2h,f,c
 28802  013C28  0E08               	movlw	8
 28803  013C2A  6EDF               	movwf	indf2,c
 28804                           
 28805                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28806  013C2C  EE20 F002          	lfsr	2,2
 28807  013C30  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28808  013C32  26D9               	addwf	fsr2l,f,c
 28809  013C34  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28810  013C36  22DA               	addwfc	fsr2h,f,c
 28811  013C38  0E30               	movlw	48
 28812  013C3A  6EDE               	movwf	postinc2,c
 28813  013C3C  0E0D               	movlw	13
 28814  013C3E  6EDD               	movwf	postdec2,c
 28815                           
 28816                           ; BSR set to: 0
 28817                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28818  013C40  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28819  013C44  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28820  013C48  0E04               	movlw	4
 28821  013C4A  6EDF               	movwf	indf2,c
 28822                           
 28823                           ; BSR set to: 0
 28824                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28825  013C4C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28826  013C50  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28827  013C54  0E00               	movlw	0
 28828  013C56  8EDB               	bsf	plusw2,7,c
 28829                           
 28830                           ; BSR set to: 0
 28831                           ;usb_device.c: 1926: }
 28832                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 28833                           
 28834                           ; BSR set to: 0
 28835                           ;usb_device.c: 1915: {
 28836                           ;usb_device.c: 1921: outPipes[0].pFunc();
 28837  013C58  0100               	movlb	0	; () banked
 28838  013C5A  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28839                           
 28840                           ; BSR set to: 0
 28841                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 28842  013C5C  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28843  013C5E  A4D8               	btfss	status,2,c
 28844  013C60  0012               	return	
 28845                           
 28846                           ; BSR set to: 0
 28847                           ;usb_device.c: 1942: {
 28848                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 28849  013C62  ECE7  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28850  013C66  0012               	return	
 28851  013C68                     __end_of_USBCtrlTrfRxService:
 28852                           	opt stack 0
 28853                           pclatu	equ	0xFFB
 28854                           pclath	equ	0xFFA
 28855                           tblptru	equ	0xFF8
 28856                           tblptrh	equ	0xFF7
 28857                           tblptrl	equ	0xFF6
 28858                           tablat	equ	0xFF5
 28859                           prodh	equ	0xFF4
 28860                           prodl	equ	0xFF3
 28861                           intcon	equ	0xFF2
 28862                           intcon2	equ	0xFF1
 28863                           postinc0	equ	0xFEE
 28864                           fsr0h	equ	0xFEA
 28865                           fsr0l	equ	0xFE9
 28866                           wreg	equ	0xFE8
 28867                           indf1	equ	0xFE7
 28868                           postinc1	equ	0xFE6
 28869                           postdec1	equ	0xFE5
 28870                           fsr1h	equ	0xFE2
 28871                           fsr1l	equ	0xFE1
 28872                           indf2	equ	0xFDF
 28873                           postinc2	equ	0xFDE
 28874                           postdec2	equ	0xFDD
 28875                           plusw2	equ	0xFDB
 28876                           fsr2h	equ	0xFDA
 28877                           fsr2l	equ	0xFD9
 28878                           status	equ	0xFD8
 28879                           
 28880 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28881 ;; Defined at:
 28882 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 28883 ;; Parameters:    Size  Location     Type
 28884 ;;		None
 28885 ;; Auto vars:     Size  Location     Type
 28886 ;;		None
 28887 ;; Return value:  Size  Location     Type
 28888 ;;		None               void
 28889 ;; Registers used:
 28890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28891 ;; Tracked objects:
 28892 ;;		On entry : 0/0
 28893 ;;		On exit  : 0/0
 28894 ;;		Unchanged: 0/0
 28895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28900 ;;Total ram usage:        0 bytes
 28901 ;; Hardware stack levels used:    1
 28902 ;; This function calls:
 28903 ;;		Nothing
 28904 ;; This function is called by:
 28905 ;;		_USBDeviceTasks
 28906 ;;		_USBCtrlEPServiceComplete
 28907 ;;		_USBCtrlTrfRxService
 28908 ;; This function uses a non-reentrant model
 28909 ;;
 28910                           
 28911                           	psect	text126
 28912  014FCE                     __ptext126:
 28913                           	opt stack 0
 28914  014FCE                     _USBCtrlEPAllowStatusStage:
 28915                           	opt stack 15
 28916                           
 28917                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 28918                           
 28919                           ;incstack = 0
 28920  014FCE  5014               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 28921  014FD0  A4D8               	btfss	status,2,c
 28922  014FD2  0012               	return	
 28923                           
 28924                           ;usb_device.c: 1424: {
 28925                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 28926  014FD4  0E01               	movlw	1
 28927  014FD6  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28928                           
 28929                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 28930  014FD8  5015               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 28931  014FDA  A4D8               	btfss	status,2,c
 28932  014FDC  0012               	return	
 28933                           
 28934                           ;usb_device.c: 1427: {
 28935                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 28936  014FDE  0E01               	movlw	1
 28937  014FE0  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28938                           
 28939                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28940  014FE2  0E02               	movlw	2
 28941  014FE4  181B               	xorwf	_controlTransferState,w,c	;volatile
 28942  014FE6  A4D8               	btfss	status,2,c
 28943  014FE8  D016               	goto	i2l7061
 28944                           
 28945                           ;usb_device.c: 1433: {
 28946                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28947  014FEA  0100               	movlb	0	; () banked
 28948  014FEC  EE20 F001          	lfsr	2,1
 28949  014FF0  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 28950  014FF2  26D9               	addwf	fsr2l,f,c
 28951  014FF4  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28952  014FF6  22DA               	addwfc	fsr2h,f,c
 28953  014FF8  0E00               	movlw	0
 28954  014FFA  6EDF               	movwf	indf2,c
 28955                           
 28956                           ; BSR set to: 0
 28957                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28958  014FFC  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28959  015000  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28960  015004  0E48               	movlw	72
 28961  015006  6EDF               	movwf	indf2,c
 28962                           
 28963                           ; BSR set to: 0
 28964                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28965  015008  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28966  01500C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28967  015010  0E00               	movlw	0
 28968  015012  8EDB               	bsf	plusw2,7,c
 28969                           
 28970                           ;usb_device.c: 1437: }
 28971  015014  0012               	return	
 28972  015016                     i2l7061:
 28973                           
 28974                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28975  015016  041B               	decf	_controlTransferState,w,c	;volatile
 28976  015018  A4D8               	btfss	status,2,c
 28977  01501A  0012               	return	
 28978                           
 28979                           ;usb_device.c: 1439: {
 28980                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28981  01501C  0E00               	movlw	0
 28982  01501E  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28983                           
 28984                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28985  015020  EE20 F001          	lfsr	2,1
 28986  015024  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28987  015026  26D9               	addwf	fsr2l,f,c
 28988  015028  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28989  01502A  22DA               	addwfc	fsr2h,f,c
 28990  01502C  0E08               	movlw	8
 28991  01502E  6EDF               	movwf	indf2,c
 28992                           
 28993                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28994  015030  EE20 F002          	lfsr	2,2
 28995  015034  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28996  015036  26D9               	addwf	fsr2l,f,c
 28997  015038  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28998  01503A  22DA               	addwfc	fsr2h,f,c
 28999  01503C  0E30               	movlw	48
 29000  01503E  6EDE               	movwf	postinc2,c
 29001  015040  0E0D               	movlw	13
 29002  015042  6EDD               	movwf	postdec2,c
 29003                           
 29004                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29005  015044  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29006  015048  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29007  01504C  0E04               	movlw	4
 29008  01504E  6EDF               	movwf	indf2,c
 29009                           
 29010                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29011  015050  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29012  015054  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29013  015058  0E00               	movlw	0
 29014  01505A  8EDB               	bsf	plusw2,7,c
 29015                           
 29016                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 29017  01505C  0E01               	movlw	1
 29018  01505E  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29019                           
 29020                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 29021  015060  EE20 F001          	lfsr	2,1
 29022  015064  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29023  015066  26D9               	addwf	fsr2l,f,c
 29024  015068  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29025  01506A  22DA               	addwfc	fsr2h,f,c
 29026  01506C  0E08               	movlw	8
 29027  01506E  6EDF               	movwf	indf2,c
 29028                           
 29029                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29030  015070  EE20 F002          	lfsr	2,2
 29031  015074  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29032  015076  26D9               	addwf	fsr2l,f,c
 29033  015078  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29034  01507A  22DA               	addwfc	fsr2h,f,c
 29035  01507C  0E30               	movlw	48
 29036  01507E  6EDE               	movwf	postinc2,c
 29037  015080  0E0D               	movlw	13
 29038  015082  6EDD               	movwf	postdec2,c
 29039                           
 29040                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29041  015084  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29042  015088  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29043  01508C  0E80               	movlw	128
 29044  01508E  6EDF               	movwf	indf2,c
 29045  015090  0012               	return	
 29046  015092                     __end_of_USBCtrlEPAllowStatusStage:
 29047                           	opt stack 0
 29048                           pclatu	equ	0xFFB
 29049                           pclath	equ	0xFFA
 29050                           tblptru	equ	0xFF8
 29051                           tblptrh	equ	0xFF7
 29052                           tblptrl	equ	0xFF6
 29053                           tablat	equ	0xFF5
 29054                           prodh	equ	0xFF4
 29055                           prodl	equ	0xFF3
 29056                           intcon	equ	0xFF2
 29057                           intcon2	equ	0xFF1
 29058                           postinc0	equ	0xFEE
 29059                           fsr0h	equ	0xFEA
 29060                           fsr0l	equ	0xFE9
 29061                           wreg	equ	0xFE8
 29062                           indf1	equ	0xFE7
 29063                           postinc1	equ	0xFE6
 29064                           postdec1	equ	0xFE5
 29065                           fsr1h	equ	0xFE2
 29066                           fsr1l	equ	0xFE1
 29067                           indf2	equ	0xFDF
 29068                           postinc2	equ	0xFDE
 29069                           postdec2	equ	0xFDD
 29070                           plusw2	equ	0xFDB
 29071                           fsr2h	equ	0xFDA
 29072                           fsr2l	equ	0xFD9
 29073                           status	equ	0xFD8
 29074                           
 29075 ;; *************** function _USBCtrlTrfInHandler *****************
 29076 ;; Defined at:
 29077 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 29078 ;; Parameters:    Size  Location     Type
 29079 ;;		None
 29080 ;; Auto vars:     Size  Location     Type
 29081 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29082 ;; Return value:  Size  Location     Type
 29083 ;;		None               void
 29084 ;; Registers used:
 29085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29086 ;; Tracked objects:
 29087 ;;		On entry : 0/0
 29088 ;;		On exit  : 0/0
 29089 ;;		Unchanged: 0/0
 29090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29095 ;;Total ram usage:        1 bytes
 29096 ;; Hardware stack levels used:    1
 29097 ;; Hardware stack levels required when called:    1
 29098 ;; This function calls:
 29099 ;;		_USBCtrlTrfTxService
 29100 ;; This function is called by:
 29101 ;;		_USBCtrlEPService
 29102 ;; This function uses a non-reentrant model
 29103 ;;
 29104                           
 29105                           	psect	text127
 29106  015092                     __ptext127:
 29107                           	opt stack 0
 29108  015092                     _USBCtrlTrfInHandler:
 29109                           	opt stack 16
 29110                           
 29111                           ;usb_device.c: 2597: uint8_t lastDTS;
 29112                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29113                           
 29114                           ;incstack = 0
 29115  015092  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29116  015096  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29117  01509A  0E00               	movlw	0
 29118  01509C  BCDF               	btfsc	indf2,6,c
 29119  01509E  0E01               	movlw	1
 29120  0150A0  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29121                           
 29122                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29123  0150A2  0E04               	movlw	4
 29124  0150A4  0100               	movlb	0	; () banked
 29125  0150A6  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29126                           
 29127                           ; BSR set to: 0
 29128                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 29129  0150A8  0E08               	movlw	8
 29130  0150AA  1813               	xorwf	_USBDeviceState,w,c	;volatile
 29131  0150AC  A4D8               	btfss	status,2,c
 29132  0150AE  D00D               	goto	i2l7813
 29133                           
 29134                           ; BSR set to: 0
 29135                           ;usb_device.c: 2608: {
 29136                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29137  0150B0  010D               	movlb	13	; () banked
 29138  0150B2  5132               	movf	50,w,b	;volatile
 29139  0150B4  0B7F               	andlw	127
 29140  0150B6  010F               	movlb	15	; () banked
 29141  0150B8  6F38               	movwf	56,b	;volatile
 29142                           
 29143                           ; BSR set to: 15
 29144                           ;usb_device.c: 2610: if(UADDR != 0u)
 29145  0150BA  010F               	movlb	15	; () banked
 29146  0150BC  5138               	movf	56,w,b	;volatile
 29147  0150BE  B4D8               	btfsc	status,2,c
 29148  0150C0  D002               	goto	i2l7811
 29149                           
 29150                           ; BSR set to: 15
 29151                           ;usb_device.c: 2611: {
 29152                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29153  0150C2  0E10               	movlw	16
 29154  0150C4  D001               	goto	L17
 29155  0150C6                     i2l7811:
 29156                           
 29157                           ; BSR set to: 15
 29158                           ;usb_device.c: 2614: else
 29159                           ;usb_device.c: 2615: {
 29160                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29161  0150C6  0E04               	movlw	4
 29162  0150C8                     L17:
 29163  0150C8  6E13               	movwf	_USBDeviceState,c	;volatile
 29164  0150CA                     i2l7813:
 29165                           
 29166                           ;usb_device.c: 2617: }
 29167                           ;usb_device.c: 2618: }
 29168                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29169  0150CA  041B               	decf	_controlTransferState,w,c	;volatile
 29170  0150CC  A4D8               	btfss	status,2,c
 29171  0150CE  D03B               	goto	i2l345
 29172                           
 29173                           ;usb_device.c: 2622: {
 29174                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29175  0150D0  0100               	movlb	0	; () banked
 29176  0150D2  EE20 F002          	lfsr	2,2
 29177  0150D6  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29178  0150D8  26D9               	addwf	fsr2l,f,c
 29179  0150DA  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29180  0150DC  22DA               	addwfc	fsr2h,f,c
 29181  0150DE  0E38               	movlw	56
 29182  0150E0  6EDE               	movwf	postinc2,c
 29183  0150E2  0E0D               	movlw	13
 29184  0150E4  6EDD               	movwf	postdec2,c
 29185                           
 29186                           ; BSR set to: 0
 29187                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29188  0150E6  ECEC  F0A2         	call	_USBCtrlTrfTxService	;wreg free
 29189                           
 29190                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29191  0150EA  0E02               	movlw	2
 29192  0150EC  1821               	xorwf	_shortPacketStatus,w,c	;volatile
 29193  0150EE  A4D8               	btfss	status,2,c
 29194  0150F0  D00D               	goto	i2l7825
 29195                           
 29196                           ;usb_device.c: 2631: {
 29197                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29198  0150F2  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29199  0150F6  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29200  0150FA  0E04               	movlw	4
 29201  0150FC  6EDF               	movwf	indf2,c
 29202                           
 29203                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29204  0150FE  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29205  015102  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29206  015106  0E00               	movlw	0
 29207  015108  8EDB               	bsf	plusw2,7,c
 29208                           
 29209                           ;usb_device.c: 2636: }
 29210  01510A  0012               	return	
 29211  01510C                     i2l7825:
 29212                           
 29213                           ;usb_device.c: 2637: else
 29214                           ;usb_device.c: 2638: {
 29215                           ;usb_device.c: 2639: if(lastDTS == 0)
 29216  01510C  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29217  01510E  A4D8               	btfss	status,2,c
 29218  015110  D00D               	goto	i2l7831
 29219                           
 29220                           ;usb_device.c: 2640: {
 29221                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29222  015112  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29223  015116  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29224  01511A  0E48               	movlw	72
 29225  01511C  6EDF               	movwf	indf2,c
 29226                           
 29227                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29228  01511E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29229  015122  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29230  015126  0E00               	movlw	0
 29231  015128  8EDB               	bsf	plusw2,7,c
 29232                           
 29233                           ;usb_device.c: 2643: }
 29234  01512A  0012               	return	
 29235  01512C                     i2l7831:
 29236                           
 29237                           ;usb_device.c: 2644: else
 29238                           ;usb_device.c: 2645: {
 29239                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29240  01512C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29241  015130  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29242  015134  0E08               	movlw	8
 29243  015136  6EDF               	movwf	indf2,c
 29244                           
 29245                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29246  015138  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29247  01513C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29248  015140  0E00               	movlw	0
 29249  015142  8EDB               	bsf	plusw2,7,c
 29250                           
 29251                           ;usb_device.c: 2648: }
 29252                           ;usb_device.c: 2649: }
 29253                           ;usb_device.c: 2650: }
 29254  015144  0012               	return	
 29255  015146                     i2l345:
 29256                           
 29257                           ;usb_device.c: 2651: else
 29258                           ;usb_device.c: 2652: {
 29259                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29260  015146  0100               	movlb	0	; () banked
 29261  015148  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29262  01514A  D002               	goto	i2l7837
 29263                           
 29264                           ; BSR set to: 0
 29265                           ;usb_device.c: 2661: }
 29266                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;usb_device.c: 2659: {
 29270                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29271  01514C  0100               	movlb	0	; () banked
 29272  01514E  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29273  015150                     i2l7837:
 29274                           
 29275                           ; BSR set to: 0
 29276                           ;usb_device.c: 2663: }
 29277                           ;usb_device.c: 2665: controlTransferState = 0;
 29278  015150  0E00               	movlw	0
 29279  015152  6E1B               	movwf	_controlTransferState,c	;volatile
 29280  015154  0012               	return	
 29281  015156                     __end_of_USBCtrlTrfInHandler:
 29282                           	opt stack 0
 29283                           pclatu	equ	0xFFB
 29284                           pclath	equ	0xFFA
 29285                           tblptru	equ	0xFF8
 29286                           tblptrh	equ	0xFF7
 29287                           tblptrl	equ	0xFF6
 29288                           tablat	equ	0xFF5
 29289                           prodh	equ	0xFF4
 29290                           prodl	equ	0xFF3
 29291                           intcon	equ	0xFF2
 29292                           intcon2	equ	0xFF1
 29293                           postinc0	equ	0xFEE
 29294                           fsr0h	equ	0xFEA
 29295                           fsr0l	equ	0xFE9
 29296                           wreg	equ	0xFE8
 29297                           indf1	equ	0xFE7
 29298                           postinc1	equ	0xFE6
 29299                           postdec1	equ	0xFE5
 29300                           fsr1h	equ	0xFE2
 29301                           fsr1l	equ	0xFE1
 29302                           indf2	equ	0xFDF
 29303                           postinc2	equ	0xFDE
 29304                           postdec2	equ	0xFDD
 29305                           plusw2	equ	0xFDB
 29306                           fsr2h	equ	0xFDA
 29307                           fsr2l	equ	0xFD9
 29308                           status	equ	0xFD8
 29309                           
 29310 ;; *************** function _USBCtrlTrfTxService *****************
 29311 ;; Defined at:
 29312 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 29313 ;; Parameters:    Size  Location     Type
 29314 ;;		None
 29315 ;; Auto vars:     Size  Location     Type
 29316 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29317 ;; Return value:  Size  Location     Type
 29318 ;;		None               void
 29319 ;; Registers used:
 29320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29321 ;; Tracked objects:
 29322 ;;		On entry : 0/0
 29323 ;;		On exit  : 0/0
 29324 ;;		Unchanged: 0/0
 29325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29330 ;;Total ram usage:        1 bytes
 29331 ;; Hardware stack levels used:    1
 29332 ;; This function calls:
 29333 ;;		Nothing
 29334 ;; This function is called by:
 29335 ;;		_USBCtrlEPAllowDataStage
 29336 ;;		_USBCtrlTrfInHandler
 29337 ;; This function uses a non-reentrant model
 29338 ;;
 29339                           
 29340                           	psect	text128
 29341  0145D8                     __ptext128:
 29342                           	opt stack 0
 29343  0145D8                     _USBCtrlTrfTxService:
 29344                           	opt stack 14
 29345                           
 29346                           ;usb_device.c: 1773: uint8_t byteToSend;
 29347                           ;usb_device.c: 1777: byteToSend = 8;
 29348                           
 29349                           ;incstack = 0
 29350  0145D8  0E08               	movlw	8
 29351  0145DA  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29352                           
 29353                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29354  0145DC  0100               	movlb	0	; () banked
 29355  0145DE  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29356  0145E0  E111               	bnz	i2l6913
 29357  0145E2  0E08               	movlw	8
 29358  0145E4  0100               	movlb	0	; () banked
 29359  0145E6  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29360  0145E8  B0D8               	btfsc	status,0,c
 29361  0145EA  D00C               	goto	i2l6913
 29362                           
 29363                           ; BSR set to: 0
 29364                           ;usb_device.c: 1779: {
 29365                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29366  0145EC  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29370  0145F0  5021               	movf	_shortPacketStatus,w,c	;volatile
 29371  0145F2  A4D8               	btfss	status,2,c
 29372  0145F4  D002               	goto	i2l6909
 29373                           
 29374                           ; BSR set to: 0
 29375                           ;usb_device.c: 1788: {
 29376                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29377  0145F6  0E01               	movlw	1
 29378  0145F8  D004               	goto	L18
 29379  0145FA                     i2l6909:
 29380                           
 29381                           ; BSR set to: 0
 29382                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29383  0145FA  0421               	decf	_shortPacketStatus,w,c	;volatile
 29384  0145FC  A4D8               	btfss	status,2,c
 29385  0145FE  D002               	goto	i2l6913
 29386                           
 29387                           ; BSR set to: 0
 29388                           ;usb_device.c: 1792: {
 29389                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29390  014600  0E02               	movlw	2
 29391  014602                     L18:
 29392  014602  6E21               	movwf	_shortPacketStatus,c	;volatile
 29393  014604                     i2l6913:
 29394                           
 29395                           ; BSR set to: 0
 29396                           ;usb_device.c: 1794: }
 29397                           ;usb_device.c: 1795: }
 29398                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29399  014604  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29400  014606  0100               	movlb	0	; () banked
 29401  014608  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29402  01460A  0E00               	movlw	0
 29403  01460C  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29404                           
 29405                           ; BSR set to: 0
 29406                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29407  01460E  0100               	movlb	0	; () banked
 29408  014610  EE20 F001          	lfsr	2,1
 29409  014614  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29410  014616  26D9               	addwf	fsr2l,f,c
 29411  014618  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29412  01461A  22DA               	addwfc	fsr2h,f,c
 29413  01461C  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29414                           
 29415                           ; BSR set to: 0
 29416                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29417  014620  0E38               	movlw	56
 29418  014622  0101               	movlb	1	; () banked
 29419  014624  6F17               	movwf	_pDst& (0+255),b
 29420  014626  0E0D               	movlw	13
 29421  014628  0101               	movlb	1	; () banked
 29422  01462A  6F18               	movwf	(_pDst+1)& (0+255),b
 29423                           
 29424                           ; BSR set to: 1
 29425                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29426  01462C  0100               	movlb	0	; () banked
 29427  01462E  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29428  014630  D01E               	goto	i2l6931
 29429  014632  D03E               	goto	i2l6941
 29430  014634                     i2l6923:
 29431                           
 29432                           ;usb_device.c: 1812: {
 29433                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29434  014634  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29435  014638  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29436  01463C  0E00               	movlw	low (__mediumconst shr (0+16))
 29437  01463E  6EF8               	movwf	tblptru,c
 29438  014640  C117  FFD9         	movff	_pDst,fsr2l
 29439  014644  C118  FFDA         	movff	_pDst+1,fsr2h
 29440  014648  0E0E               	movlw	(high __ramtop+-1)
 29441  01464A  64F7               	cpfsgt	tblptrh,c
 29442  01464C  D003               	bra	i2u610_47
 29443  01464E  0008               	tblrd		*
 29444  014650  50F5               	movf	tablat,w,c
 29445  014652  D005               	bra	i2u610_40
 29446  014654                     i2u610_47:
 29447  014654  CFF6 FFE1          	movff	tblptrl,fsr1l
 29448  014658  CFF7 FFE2          	movff	tblptrh,fsr1h
 29449  01465C  50E7               	movf	indf1,w,c
 29450  01465E                     i2u610_40:
 29451  01465E  6EDF               	movwf	indf2,c
 29452  014660  0100               	movlb	0	; () banked
 29453  014662  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29454  014664  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29455                           
 29456                           ; BSR set to: 0
 29457  014666  0101               	movlb	1	; () banked
 29458  014668  4B17               	infsnz	_pDst& (0+255),f,b
 29459  01466A  2B18               	incf	(_pDst+1)& (0+255),f,b
 29460                           
 29461                           ; BSR set to: 1
 29462                           ;usb_device.c: 1814: byteToSend--;
 29463  01466C  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29464  01466E                     i2l6931:
 29465  01466E  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29466  014670  B4D8               	btfsc	status,2,c
 29467  014672  0012               	return	
 29468  014674  D7DF               	goto	i2l6923
 29469  014676                     i2l6933:
 29470                           
 29471                           ;usb_device.c: 1820: {
 29472                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29473  014676  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29474  01467A  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29475  01467E  0E00               	movlw	low (__mediumconst shr (0+16))
 29476  014680  6EF8               	movwf	tblptru,c
 29477  014682  C117  FFD9         	movff	_pDst,fsr2l
 29478  014686  C118  FFDA         	movff	_pDst+1,fsr2h
 29479  01468A  0E0E               	movlw	(high __ramtop+-1)
 29480  01468C  64F7               	cpfsgt	tblptrh,c
 29481  01468E  D003               	bra	i2u612_47
 29482  014690  0008               	tblrd		*
 29483  014692  50F5               	movf	tablat,w,c
 29484  014694  D005               	bra	i2u612_40
 29485  014696                     i2u612_47:
 29486  014696  CFF6 FFE1          	movff	tblptrl,fsr1l
 29487  01469A  CFF7 FFE2          	movff	tblptrh,fsr1h
 29488  01469E  50E7               	movf	indf1,w,c
 29489  0146A0                     i2u612_40:
 29490  0146A0  6EDF               	movwf	indf2,c
 29491  0146A2  0100               	movlb	0	; () banked
 29492  0146A4  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29493  0146A6  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29494                           
 29495                           ; BSR set to: 0
 29496  0146A8  0101               	movlb	1	; () banked
 29497  0146AA  4B17               	infsnz	_pDst& (0+255),f,b
 29498  0146AC  2B18               	incf	(_pDst+1)& (0+255),f,b
 29499                           
 29500                           ; BSR set to: 1
 29501                           ;usb_device.c: 1822: byteToSend--;
 29502  0146AE  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29503  0146B0                     i2l6941:
 29504  0146B0  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29505  0146B2  B4D8               	btfsc	status,2,c
 29506  0146B4  0012               	return	
 29507  0146B6  D7DF               	goto	i2l6933
 29508  0146B8                     __end_of_USBCtrlTrfTxService:
 29509                           	opt stack 0
 29510                           pclatu	equ	0xFFB
 29511                           pclath	equ	0xFFA
 29512                           tblptru	equ	0xFF8
 29513                           tblptrh	equ	0xFF7
 29514                           tblptrl	equ	0xFF6
 29515                           tablat	equ	0xFF5
 29516                           prodh	equ	0xFF4
 29517                           prodl	equ	0xFF3
 29518                           intcon	equ	0xFF2
 29519                           intcon2	equ	0xFF1
 29520                           postinc0	equ	0xFEE
 29521                           fsr0h	equ	0xFEA
 29522                           fsr0l	equ	0xFE9
 29523                           wreg	equ	0xFE8
 29524                           indf1	equ	0xFE7
 29525                           postinc1	equ	0xFE6
 29526                           postdec1	equ	0xFE5
 29527                           fsr1h	equ	0xFE2
 29528                           fsr1l	equ	0xFE1
 29529                           indf2	equ	0xFDF
 29530                           postinc2	equ	0xFDE
 29531                           postdec2	equ	0xFDD
 29532                           plusw2	equ	0xFDB
 29533                           fsr2h	equ	0xFDA
 29534                           fsr2l	equ	0xFD9
 29535                           status	equ	0xFD8
 29536                           
 29537 ;; *************** function _LED_indicator *****************
 29538 ;; Defined at:
 29539 ;;		line 22 in file "ChargeStation_task.c"
 29540 ;; Parameters:    Size  Location     Type
 29541 ;;		None
 29542 ;; Auto vars:     Size  Location     Type
 29543 ;;  i               1   11[COMRAM] unsigned char 
 29544 ;; Return value:  Size  Location     Type
 29545 ;;		None               void
 29546 ;; Registers used:
 29547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29548 ;; Tracked objects:
 29549 ;;		On entry : 0/0
 29550 ;;		On exit  : 0/0
 29551 ;;		Unchanged: 0/0
 29552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29557 ;;Total ram usage:        4 bytes
 29558 ;; Hardware stack levels used:    1
 29559 ;; Hardware stack levels required when called:    1
 29560 ;; This function calls:
 29561 ;;		i2_LED_output
 29562 ;;		i2___awdiv
 29563 ;;		i2___lwdiv
 29564 ;; This function is called by:
 29565 ;;		_ISR
 29566 ;; This function uses a non-reentrant model
 29567 ;;
 29568                           
 29569                           	psect	text129
 29570  013A2A                     __ptext129:
 29571                           	opt stack 0
 29572  013A2A                     _LED_indicator:
 29573                           	opt stack 19
 29574                           
 29575                           ;ChargeStation_task.c: 23: uint8_t i;
 29576                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29577                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29578                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29579                           
 29580                           ;incstack = 0
 29581  013A2A  0E00               	movlw	0
 29582  013A2C  6E38               	movwf	LED_indicator@i,c
 29583  013A2E                     i2l9833:
 29584  013A2E  0E02               	movlw	2
 29585  013A30  6438               	cpfsgt	LED_indicator@i,c
 29586  013A32  D001               	goto	i2l9837
 29587  013A34  0012               	return	
 29588  013A36                     i2l9837:
 29589                           
 29590                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 29591  013A36  5038               	movf	LED_indicator@i,w,c
 29592  013A38  0D17               	mullw	23
 29593  013A3A  0E16               	movlw	22
 29594  013A3C  26F3               	addwf	prodl,f,c
 29595  013A3E  0E00               	movlw	0
 29596  013A40  22F4               	addwfc	prodh,f,c
 29597  013A42  0E35               	movlw	low _port
 29598  013A44  24F3               	addwf	prodl,w,c
 29599  013A46  6ED9               	movwf	fsr2l,c
 29600  013A48  0E01               	movlw	high _port
 29601  013A4A  20F4               	addwfc	prodh,w,c
 29602  013A4C  6EDA               	movwf	fsr2h,c
 29603  013A4E  0101               	movlb	1	; () banked
 29604  013A50  A2DF               	btfss	indf2,1,c
 29605  013A52  D07C               	goto	i2l9857
 29606                           
 29607                           ; BSR set to: 1
 29608                           ;ChargeStation_task.c: 29: cnt[i]++;
 29609  013A54  5038               	movf	LED_indicator@i,w,c
 29610  013A56  0D01               	mullw	1
 29611  013A58  0E06               	movlw	low LED_indicator@cnt
 29612  013A5A  24F3               	addwf	prodl,w,c
 29613  013A5C  6ED9               	movwf	fsr2l,c
 29614  013A5E  0E01               	movlw	high LED_indicator@cnt
 29615  013A60  20F4               	addwfc	prodh,w,c
 29616  013A62  6EDA               	movwf	fsr2h,c
 29617  013A64  2ADF               	incf	indf2,f,c
 29618                           
 29619                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 29620  013A66  5038               	movf	LED_indicator@i,w,c
 29621  013A68  0D01               	mullw	1
 29622  013A6A  0E06               	movlw	low LED_indicator@cnt
 29623  013A6C  24F3               	addwf	prodl,w,c
 29624  013A6E  6ED9               	movwf	fsr2l,c
 29625  013A70  0E01               	movlw	high LED_indicator@cnt
 29626  013A72  20F4               	addwfc	prodh,w,c
 29627  013A74  6EDA               	movwf	fsr2h,c
 29628  013A76  0101               	movlb	1	; () banked
 29629  013A78  A0DF               	btfss	indf2,0,c
 29630  013A7A  D006               	goto	i2l9843
 29631                           
 29632                           ; BSR set to: 1
 29633                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 29634  013A7C  0E00               	movlw	0
 29635  013A7E  6E2D               	movwf	i2LED_output@value,c
 29636  013A80  5038               	movf	LED_indicator@i,w,c
 29637  013A82  EC2B  F0B1         	call	i2_LED_output
 29638                           
 29639                           ;ChargeStation_task.c: 32: } else {
 29640  013A86  D062               	goto	i2l9857
 29641  013A88                     i2l9843:
 29642                           
 29643                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 29644  013A88  5038               	movf	LED_indicator@i,w,c
 29645  013A8A  0D17               	mullw	23
 29646  013A8C  0E06               	movlw	6
 29647  013A8E  26F3               	addwf	prodl,f,c
 29648  013A90  0E00               	movlw	0
 29649  013A92  22F4               	addwfc	prodh,f,c
 29650  013A94  0E35               	movlw	low _port
 29651  013A96  24F3               	addwf	prodl,w,c
 29652  013A98  6ED9               	movwf	fsr2l,c
 29653  013A9A  0E01               	movlw	high _port
 29654  013A9C  20F4               	addwfc	prodh,w,c
 29655  013A9E  6EDA               	movwf	fsr2h,c
 29656  013AA0  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 29657  013AA4  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 29658  013AA8  0E00               	movlw	0
 29659  013AAA  6E30               	movwf	i2___lwdiv@divisor+1,c
 29660  013AAC  0E64               	movlw	100
 29661  013AAE  6E2F               	movwf	i2___lwdiv@divisor,c
 29662  013AB0  ECA5  F0B2         	call	i2___lwdiv	;wreg free
 29663  013AB4  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 29664  013AB8  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 29665  013ABC  5038               	movf	LED_indicator@i,w,c
 29666  013ABE  0D01               	mullw	1
 29667  013AC0  0E06               	movlw	low LED_indicator@cnt
 29668  013AC2  24F3               	addwf	prodl,w,c
 29669  013AC4  6ED9               	movwf	fsr2l,c
 29670  013AC6  0E01               	movlw	high LED_indicator@cnt
 29671  013AC8  20F4               	addwfc	prodh,w,c
 29672  013ACA  6EDA               	movwf	fsr2h,c
 29673  013ACC  50DF               	movf	indf2,w,c
 29674  013ACE  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 29675  013AD0  5037               	movf	??_LED_indicator+2,w,c
 29676  013AD2  6E2D               	movwf	i2___awdiv@dividend,c
 29677  013AD4  6A2E               	clrf	i2___awdiv@dividend+1,c
 29678  013AD6  0E00               	movlw	0
 29679  013AD8  6E30               	movwf	i2___awdiv@divisor+1,c
 29680  013ADA  0E02               	movlw	2
 29681  013ADC  6E2F               	movwf	i2___awdiv@divisor,c
 29682  013ADE  ECB6  F0AE         	call	i2___awdiv	;wreg free
 29683  013AE2  502D               	movf	?i2___awdiv,w,c
 29684  013AE4  5C35               	subwf	??_LED_indicator,w,c
 29685  013AE6  502E               	movf	?i2___awdiv+1,w,c
 29686  013AE8  5836               	subwfb	??_LED_indicator+1,w,c
 29687  013AEA  A0D8               	btfss	status,0,c
 29688  013AEC  D00C               	goto	i2l9849
 29689                           
 29690                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 29691  013AEE  0E01               	movlw	1
 29692  013AF0  6E2D               	movwf	i2LED_output@value,c
 29693  013AF2  5038               	movf	LED_indicator@i,w,c
 29694  013AF4  EC2B  F0B1         	call	i2_LED_output
 29695                           
 29696                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 29697  013AF8  5038               	movf	LED_indicator@i,w,c
 29698  013AFA  0D01               	mullw	1
 29699  013AFC  0E12               	movlw	low LED_indicator@cntf
 29700  013AFE  24F3               	addwf	prodl,w,c
 29701  013B00  6ED9               	movwf	fsr2l,c
 29702  013B02  0E02               	movlw	high LED_indicator@cntf
 29703  013B04  D01F               	goto	L19
 29704  013B06                     i2l9849:
 29705                           
 29706                           ;ChargeStation_task.c: 37: cntf[i]++;
 29707  013B06  5038               	movf	LED_indicator@i,w,c
 29708  013B08  0D01               	mullw	1
 29709  013B0A  0E12               	movlw	low LED_indicator@cntf
 29710  013B0C  24F3               	addwf	prodl,w,c
 29711  013B0E  6ED9               	movwf	fsr2l,c
 29712  013B10  0E02               	movlw	high LED_indicator@cntf
 29713  013B12  20F4               	addwfc	prodh,w,c
 29714  013B14  6EDA               	movwf	fsr2h,c
 29715  013B16  2ADF               	incf	indf2,f,c
 29716                           
 29717                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 29718  013B18  0E00               	movlw	0
 29719  013B1A  6E2D               	movwf	i2LED_output@value,c
 29720  013B1C  5038               	movf	LED_indicator@i,w,c
 29721  013B1E  EC2B  F0B1         	call	i2_LED_output
 29722                           
 29723                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 29724  013B22  5038               	movf	LED_indicator@i,w,c
 29725  013B24  0D01               	mullw	1
 29726  013B26  0E12               	movlw	low LED_indicator@cntf
 29727  013B28  24F3               	addwf	prodl,w,c
 29728  013B2A  6ED9               	movwf	fsr2l,c
 29729  013B2C  0E02               	movlw	high LED_indicator@cntf
 29730  013B2E  20F4               	addwfc	prodh,w,c
 29731  013B30  6EDA               	movwf	fsr2h,c
 29732  013B32  0E01               	movlw	1
 29733  013B34  64DF               	cpfsgt	indf2,c
 29734  013B36  D00A               	goto	i2l9857
 29735                           
 29736                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 29737  013B38  5038               	movf	LED_indicator@i,w,c
 29738  013B3A  0D01               	mullw	1
 29739  013B3C  0E06               	movlw	low LED_indicator@cnt
 29740  013B3E  24F3               	addwf	prodl,w,c
 29741  013B40  6ED9               	movwf	fsr2l,c
 29742  013B42  0E01               	movlw	high LED_indicator@cnt
 29743  013B44                     L19:
 29744  013B44  20F4               	addwfc	prodh,w,c
 29745  013B46  6EDA               	movwf	fsr2h,c
 29746  013B48  0E00               	movlw	0
 29747  013B4A  6EDF               	movwf	indf2,c
 29748  013B4C                     i2l9857:
 29749  013B4C  2A38               	incf	LED_indicator@i,f,c
 29750  013B4E  D76F               	goto	i2l9833
 29751  013B50                     __end_of_LED_indicator:
 29752                           	opt stack 0
 29753                           pclatu	equ	0xFFB
 29754                           pclath	equ	0xFFA
 29755                           tblptru	equ	0xFF8
 29756                           tblptrh	equ	0xFF7
 29757                           tblptrl	equ	0xFF6
 29758                           tablat	equ	0xFF5
 29759                           prodh	equ	0xFF4
 29760                           prodl	equ	0xFF3
 29761                           intcon	equ	0xFF2
 29762                           intcon2	equ	0xFF1
 29763                           postinc0	equ	0xFEE
 29764                           fsr0h	equ	0xFEA
 29765                           fsr0l	equ	0xFE9
 29766                           wreg	equ	0xFE8
 29767                           indf1	equ	0xFE7
 29768                           postinc1	equ	0xFE6
 29769                           postdec1	equ	0xFE5
 29770                           fsr1h	equ	0xFE2
 29771                           fsr1l	equ	0xFE1
 29772                           indf2	equ	0xFDF
 29773                           postinc2	equ	0xFDE
 29774                           postdec2	equ	0xFDD
 29775                           plusw2	equ	0xFDB
 29776                           fsr2h	equ	0xFDA
 29777                           fsr2l	equ	0xFD9
 29778                           status	equ	0xFD8
 29779                           
 29780 ;; *************** function i2___lwdiv *****************
 29781 ;; Defined at:
 29782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29783 ;; Parameters:    Size  Location     Type
 29784 ;;  dividend        2    0[COMRAM] unsigned int 
 29785 ;;  divisor         2    2[COMRAM] unsigned int 
 29786 ;; Auto vars:     Size  Location     Type
 29787 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29788 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29789 ;; Return value:  Size  Location     Type
 29790 ;;                  2    0[COMRAM] unsigned int 
 29791 ;; Registers used:
 29792 ;;		wreg, status,2, status,0
 29793 ;; Tracked objects:
 29794 ;;		On entry : 0/0
 29795 ;;		On exit  : 0/0
 29796 ;;		Unchanged: 0/0
 29797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29799 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29801 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29802 ;;Total ram usage:        7 bytes
 29803 ;; Hardware stack levels used:    1
 29804 ;; This function calls:
 29805 ;;		Nothing
 29806 ;; This function is called by:
 29807 ;;		_LED_indicator
 29808 ;; This function uses a non-reentrant model
 29809 ;;
 29810                           
 29811                           	psect	text130
 29812  01654A                     __ptext130:
 29813                           	opt stack 0
 29814  01654A                     i2___lwdiv:
 29815                           	opt stack 19
 29816                           
 29817                           ;incstack = 0
 29818  01654A  0E00               	movlw	0
 29819  01654C  6E32               	movwf	i2___lwdiv@quotient+1,c
 29820  01654E  0E00               	movlw	0
 29821  016550  6E31               	movwf	i2___lwdiv@quotient,c
 29822  016552  502F               	movf	i2___lwdiv@divisor,w,c
 29823  016554  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 29824  016556  B4D8               	btfsc	status,2,c
 29825  016558  D01C               	goto	i2l2433
 29826  01655A  0E01               	movlw	1
 29827  01655C  6E33               	movwf	i2___lwdiv@counter,c
 29828  01655E  D004               	goto	i2l9681
 29829  016560                     i2l9679:
 29830  016560  90D8               	bcf	status,0,c
 29831  016562  362F               	rlcf	i2___lwdiv@divisor,f,c
 29832  016564  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 29833  016566  2A33               	incf	i2___lwdiv@counter,f,c
 29834  016568                     i2l9681:
 29835  016568  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 29836  01656A  D7FA               	goto	i2l9679
 29837  01656C                     i2l9683:
 29838  01656C  90D8               	bcf	status,0,c
 29839  01656E  3631               	rlcf	i2___lwdiv@quotient,f,c
 29840  016570  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 29841  016572  502F               	movf	i2___lwdiv@divisor,w,c
 29842  016574  5C2D               	subwf	i2___lwdiv@dividend,w,c
 29843  016576  5030               	movf	i2___lwdiv@divisor+1,w,c
 29844  016578  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 29845  01657A  A0D8               	btfss	status,0,c
 29846  01657C  D005               	goto	i2l9691
 29847  01657E  502F               	movf	i2___lwdiv@divisor,w,c
 29848  016580  5E2D               	subwf	i2___lwdiv@dividend,f,c
 29849  016582  5030               	movf	i2___lwdiv@divisor+1,w,c
 29850  016584  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 29851  016586  8031               	bsf	i2___lwdiv@quotient,0,c
 29852  016588                     i2l9691:
 29853  016588  90D8               	bcf	status,0,c
 29854  01658A  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 29855  01658C  322F               	rrcf	i2___lwdiv@divisor,f,c
 29856  01658E  2E33               	decfsz	i2___lwdiv@counter,f,c
 29857  016590  D7ED               	goto	i2l9683
 29858  016592                     i2l2433:
 29859  016592  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 29860  016596  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 29861  01659A  0012               	return		;funcret
 29862  01659C                     __end_ofi2___lwdiv:
 29863                           	opt stack 0
 29864                           pclatu	equ	0xFFB
 29865                           pclath	equ	0xFFA
 29866                           tblptru	equ	0xFF8
 29867                           tblptrh	equ	0xFF7
 29868                           tblptrl	equ	0xFF6
 29869                           tablat	equ	0xFF5
 29870                           prodh	equ	0xFF4
 29871                           prodl	equ	0xFF3
 29872                           intcon	equ	0xFF2
 29873                           intcon2	equ	0xFF1
 29874                           postinc0	equ	0xFEE
 29875                           fsr0h	equ	0xFEA
 29876                           fsr0l	equ	0xFE9
 29877                           wreg	equ	0xFE8
 29878                           indf1	equ	0xFE7
 29879                           postinc1	equ	0xFE6
 29880                           postdec1	equ	0xFE5
 29881                           fsr1h	equ	0xFE2
 29882                           fsr1l	equ	0xFE1
 29883                           indf2	equ	0xFDF
 29884                           postinc2	equ	0xFDE
 29885                           postdec2	equ	0xFDD
 29886                           plusw2	equ	0xFDB
 29887                           fsr2h	equ	0xFDA
 29888                           fsr2l	equ	0xFD9
 29889                           status	equ	0xFD8
 29890                           
 29891 ;; *************** function i2___awdiv *****************
 29892 ;; Defined at:
 29893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 29894 ;; Parameters:    Size  Location     Type
 29895 ;;  dividend        2    0[COMRAM] int 
 29896 ;;  divisor         2    2[COMRAM] int 
 29897 ;; Auto vars:     Size  Location     Type
 29898 ;;  __awdiv         2    6[COMRAM] int 
 29899 ;;  __awdiv         1    5[COMRAM] unsigned char 
 29900 ;;  __awdiv         1    4[COMRAM] unsigned char 
 29901 ;; Return value:  Size  Location     Type
 29902 ;;                  2    0[COMRAM] int 
 29903 ;; Registers used:
 29904 ;;		wreg, status,2, status,0
 29905 ;; Tracked objects:
 29906 ;;		On entry : 0/0
 29907 ;;		On exit  : 0/0
 29908 ;;		Unchanged: 0/0
 29909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29914 ;;Total ram usage:        8 bytes
 29915 ;; Hardware stack levels used:    1
 29916 ;; This function calls:
 29917 ;;		Nothing
 29918 ;; This function is called by:
 29919 ;;		_LED_indicator
 29920 ;; This function uses a non-reentrant model
 29921 ;;
 29922                           
 29923                           	psect	text131
 29924  015D6C                     __ptext131:
 29925                           	opt stack 0
 29926  015D6C                     i2___awdiv:
 29927                           	opt stack 19
 29928                           
 29929                           ;incstack = 0
 29930  015D6C  0E00               	movlw	0
 29931  015D6E  6E32               	movwf	i2___awdiv@sign,c
 29932  015D70  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29933  015D72  D006               	goto	i2l9637
 29934  015D74  6C2F               	negf	i2___awdiv@divisor,c
 29935  015D76  1E30               	comf	i2___awdiv@divisor+1,f,c
 29936  015D78  B0D8               	btfsc	status,0,c
 29937  015D7A  2A30               	incf	i2___awdiv@divisor+1,f,c
 29938  015D7C  0E01               	movlw	1
 29939  015D7E  6E32               	movwf	i2___awdiv@sign,c
 29940  015D80                     i2l9637:
 29941  015D80  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 29942  015D82  D006               	goto	i2l9643
 29943  015D84  6C2D               	negf	i2___awdiv@dividend,c
 29944  015D86  1E2E               	comf	i2___awdiv@dividend+1,f,c
 29945  015D88  B0D8               	btfsc	status,0,c
 29946  015D8A  2A2E               	incf	i2___awdiv@dividend+1,f,c
 29947  015D8C  0E01               	movlw	1
 29948  015D8E  1A32               	xorwf	i2___awdiv@sign,f,c
 29949  015D90                     i2l9643:
 29950  015D90  0E00               	movlw	0
 29951  015D92  6E34               	movwf	i2___awdiv@quotient+1,c
 29952  015D94  0E00               	movlw	0
 29953  015D96  6E33               	movwf	i2___awdiv@quotient,c
 29954  015D98  502F               	movf	i2___awdiv@divisor,w,c
 29955  015D9A  1030               	iorwf	i2___awdiv@divisor+1,w,c
 29956  015D9C  B4D8               	btfsc	status,2,c
 29957  015D9E  D01C               	goto	i2l9665
 29958  015DA0  0E01               	movlw	1
 29959  015DA2  6E31               	movwf	i2___awdiv@counter,c
 29960  015DA4  D004               	goto	i2l9651
 29961  015DA6                     i2l9649:
 29962  015DA6  90D8               	bcf	status,0,c
 29963  015DA8  362F               	rlcf	i2___awdiv@divisor,f,c
 29964  015DAA  3630               	rlcf	i2___awdiv@divisor+1,f,c
 29965  015DAC  2A31               	incf	i2___awdiv@counter,f,c
 29966  015DAE                     i2l9651:
 29967  015DAE  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29968  015DB0  D7FA               	goto	i2l9649
 29969  015DB2                     i2l9653:
 29970  015DB2  90D8               	bcf	status,0,c
 29971  015DB4  3633               	rlcf	i2___awdiv@quotient,f,c
 29972  015DB6  3634               	rlcf	i2___awdiv@quotient+1,f,c
 29973  015DB8  502F               	movf	i2___awdiv@divisor,w,c
 29974  015DBA  5C2D               	subwf	i2___awdiv@dividend,w,c
 29975  015DBC  5030               	movf	i2___awdiv@divisor+1,w,c
 29976  015DBE  582E               	subwfb	i2___awdiv@dividend+1,w,c
 29977  015DC0  A0D8               	btfss	status,0,c
 29978  015DC2  D005               	goto	i2l9661
 29979  015DC4  502F               	movf	i2___awdiv@divisor,w,c
 29980  015DC6  5E2D               	subwf	i2___awdiv@dividend,f,c
 29981  015DC8  5030               	movf	i2___awdiv@divisor+1,w,c
 29982  015DCA  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 29983  015DCC  8033               	bsf	i2___awdiv@quotient,0,c
 29984  015DCE                     i2l9661:
 29985  015DCE  90D8               	bcf	status,0,c
 29986  015DD0  3230               	rrcf	i2___awdiv@divisor+1,f,c
 29987  015DD2  322F               	rrcf	i2___awdiv@divisor,f,c
 29988  015DD4  2E31               	decfsz	i2___awdiv@counter,f,c
 29989  015DD6  D7ED               	goto	i2l9653
 29990  015DD8                     i2l9665:
 29991  015DD8  5032               	movf	i2___awdiv@sign,w,c
 29992  015DDA  B4D8               	btfsc	status,2,c
 29993  015DDC  D004               	goto	i2l9669
 29994  015DDE  6C33               	negf	i2___awdiv@quotient,c
 29995  015DE0  1E34               	comf	i2___awdiv@quotient+1,f,c
 29996  015DE2  B0D8               	btfsc	status,0,c
 29997  015DE4  2A34               	incf	i2___awdiv@quotient+1,f,c
 29998  015DE6                     i2l9669:
 29999  015DE6  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 30000  015DEA  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30001  015DEE  0012               	return	
 30002  015DF0                     __end_ofi2___awdiv:
 30003                           	opt stack 0
 30004                           pclatu	equ	0xFFB
 30005                           pclath	equ	0xFFA
 30006                           tblptru	equ	0xFF8
 30007                           tblptrh	equ	0xFF7
 30008                           tblptrl	equ	0xFF6
 30009                           tablat	equ	0xFF5
 30010                           prodh	equ	0xFF4
 30011                           prodl	equ	0xFF3
 30012                           intcon	equ	0xFF2
 30013                           intcon2	equ	0xFF1
 30014                           postinc0	equ	0xFEE
 30015                           fsr0h	equ	0xFEA
 30016                           fsr0l	equ	0xFE9
 30017                           wreg	equ	0xFE8
 30018                           indf1	equ	0xFE7
 30019                           postinc1	equ	0xFE6
 30020                           postdec1	equ	0xFE5
 30021                           fsr1h	equ	0xFE2
 30022                           fsr1l	equ	0xFE1
 30023                           indf2	equ	0xFDF
 30024                           postinc2	equ	0xFDE
 30025                           postdec2	equ	0xFDD
 30026                           plusw2	equ	0xFDB
 30027                           fsr2h	equ	0xFDA
 30028                           fsr2l	equ	0xFD9
 30029                           status	equ	0xFD8
 30030                           
 30031 ;; *************** function i2_LED_output *****************
 30032 ;; Defined at:
 30033 ;;		line 36 in file "io.c"
 30034 ;; Parameters:    Size  Location     Type
 30035 ;;  b               1    wreg     unsigned char 
 30036 ;;  value           1    0[COMRAM] unsigned char 
 30037 ;; Auto vars:     Size  Location     Type
 30038 ;;  b               1    1[COMRAM] unsigned char 
 30039 ;; Return value:  Size  Location     Type
 30040 ;;		None               void
 30041 ;; Registers used:
 30042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30043 ;; Tracked objects:
 30044 ;;		On entry : 0/0
 30045 ;;		On exit  : 0/0
 30046 ;;		Unchanged: 0/0
 30047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30048 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30052 ;;Total ram usage:        2 bytes
 30053 ;; Hardware stack levels used:    1
 30054 ;; This function calls:
 30055 ;;		Nothing
 30056 ;; This function is called by:
 30057 ;;		_LED_indicator
 30058 ;; This function uses a non-reentrant model
 30059 ;;
 30060                           
 30061                           	psect	text132
 30062  016256                     __ptext132:
 30063                           	opt stack 0
 30064  016256                     i2_LED_output:
 30065                           	opt stack 19
 30066                           
 30067                           ;incstack = 0
 30068                           ;i2LED_output@b stored from wreg
 30069  016256  6E2E               	movwf	i2LED_output@b,c
 30070                           
 30071                           ;io.c: 37: port[b].flag.led_flag = value;
 30072  016258  502E               	movf	i2LED_output@b,w,c
 30073  01625A  0D17               	mullw	23
 30074  01625C  0E16               	movlw	22
 30075  01625E  26F3               	addwf	prodl,f,c
 30076  016260  0E00               	movlw	0
 30077  016262  22F4               	addwfc	prodh,f,c
 30078  016264  0E35               	movlw	low _port
 30079  016266  24F3               	addwf	prodl,w,c
 30080  016268  6ED9               	movwf	fsr2l,c
 30081  01626A  0E01               	movlw	high _port
 30082  01626C  20F4               	addwfc	prodh,w,c
 30083  01626E  6EDA               	movwf	fsr2h,c
 30084  016270  B02D               	btfsc	i2LED_output@value,0,c
 30085  016272  D003               	bra	i2u1022_45
 30086  016274  0101               	movlb	1	; () banked
 30087  016276  96DF               	bcf	indf2,3,c
 30088  016278  D002               	bra	i2u1022_46
 30089  01627A                     i2u1022_45:
 30090  01627A  0101               	movlb	1	; () banked
 30091  01627C  86DF               	bsf	indf2,3,c
 30092  01627E                     i2u1022_46:
 30093                           
 30094                           ;io.c: 38: switch (b) {
 30095  01627E  D012               	goto	i2l9627
 30096  016280                     i2l1664:
 30097                           
 30098                           ;io.c: 40: LATB7 = value;
 30099  016280  A02D               	btfss	i2LED_output@value,0,c
 30100  016282  D002               	goto	i2u1023_40
 30101  016284  8E8A               	bsf	3978,7,c	;volatile
 30102  016286  0012               	return	
 30103  016288                     i2u1023_40:
 30104  016288  9E8A               	bcf	3978,7,c	;volatile
 30105                           
 30106                           ;io.c: 41: break;
 30107  01628A  0012               	return	
 30108  01628C                     i2l1666:
 30109                           
 30110                           ;io.c: 43: LATB6 = value;
 30111  01628C  A02D               	btfss	i2LED_output@value,0,c
 30112  01628E  D002               	goto	i2u1025_40
 30113  016290  8C8A               	bsf	3978,6,c	;volatile
 30114  016292  0012               	return	
 30115  016294                     i2u1025_40:
 30116  016294  9C8A               	bcf	3978,6,c	;volatile
 30117                           
 30118                           ;io.c: 44: break;
 30119  016296  0012               	return	
 30120  016298                     i2l1667:
 30121                           
 30122                           ;io.c: 46: LATC2 = value;
 30123  016298  A02D               	btfss	i2LED_output@value,0,c
 30124  01629A  D002               	goto	i2u1027_40
 30125  01629C  848B               	bsf	3979,2,c	;volatile
 30126  01629E  0012               	return	
 30127  0162A0                     i2u1027_40:
 30128  0162A0  948B               	bcf	3979,2,c	;volatile
 30129                           
 30130                           ;io.c: 48: }
 30131                           
 30132                           ;io.c: 47: break;
 30133  0162A2  0012               	return	
 30134  0162A4                     i2l9627:
 30135  0162A4  502E               	movf	i2LED_output@b,w,c
 30136                           
 30137                           ; Switch size 1, requested type "space"
 30138                           ; Number of cases is 3, Range of values is 0 to 2
 30139                           ; switch strategies available:
 30140                           ; Name         Instructions Cycles
 30141                           ; simple_byte           10     6 (average)
 30142                           ;	Chosen strategy is simple_byte
 30143  0162A6  0A00               	xorlw	0	; case 0
 30144  0162A8  B4D8               	btfsc	status,2,c
 30145  0162AA  D7EA               	goto	i2l1664
 30146  0162AC  0A01               	xorlw	1	; case 1
 30147  0162AE  B4D8               	btfsc	status,2,c
 30148  0162B0  D7ED               	goto	i2l1666
 30149  0162B2  0A03               	xorlw	3	; case 2
 30150  0162B4  A4D8               	btfss	status,2,c
 30151  0162B6  0012               	return	
 30152  0162B8  D7EF               	goto	i2l1667
 30153  0162BA                     __end_ofi2_LED_output:
 30154                           	opt stack 0
 30155                           pclatu	equ	0xFFB
 30156                           pclath	equ	0xFFA
 30157                           tblptru	equ	0xFF8
 30158                           tblptrh	equ	0xFF7
 30159                           tblptrl	equ	0xFF6
 30160                           tablat	equ	0xFF5
 30161                           prodh	equ	0xFF4
 30162                           prodl	equ	0xFF3
 30163                           intcon	equ	0xFF2
 30164                           intcon2	equ	0xFF1
 30165                           postinc0	equ	0xFEE
 30166                           fsr0h	equ	0xFEA
 30167                           fsr0l	equ	0xFE9
 30168                           wreg	equ	0xFE8
 30169                           indf1	equ	0xFE7
 30170                           postinc1	equ	0xFE6
 30171                           postdec1	equ	0xFE5
 30172                           fsr1h	equ	0xFE2
 30173                           fsr1l	equ	0xFE1
 30174                           indf2	equ	0xFDF
 30175                           postinc2	equ	0xFDE
 30176                           postdec2	equ	0xFDD
 30177                           plusw2	equ	0xFDB
 30178                           fsr2h	equ	0xFDA
 30179                           fsr2l	equ	0xFD9
 30180                           status	equ	0xFD8
 30181                           pclatu	equ	0xFFB
 30182                           pclath	equ	0xFFA
 30183                           tblptru	equ	0xFF8
 30184                           tblptrh	equ	0xFF7
 30185                           tblptrl	equ	0xFF6
 30186                           tablat	equ	0xFF5
 30187                           prodh	equ	0xFF4
 30188                           prodl	equ	0xFF3
 30189                           intcon	equ	0xFF2
 30190                           intcon2	equ	0xFF1
 30191                           postinc0	equ	0xFEE
 30192                           fsr0h	equ	0xFEA
 30193                           fsr0l	equ	0xFE9
 30194                           wreg	equ	0xFE8
 30195                           indf1	equ	0xFE7
 30196                           postinc1	equ	0xFE6
 30197                           postdec1	equ	0xFE5
 30198                           fsr1h	equ	0xFE2
 30199                           fsr1l	equ	0xFE1
 30200                           indf2	equ	0xFDF
 30201                           postinc2	equ	0xFDE
 30202                           postdec2	equ	0xFDD
 30203                           plusw2	equ	0xFDB
 30204                           fsr2h	equ	0xFDA
 30205                           fsr2l	equ	0xFD9
 30206                           status	equ	0xFD8
 30207                           
 30208                           	psect	rparam
 30209  0000                     pclatu	equ	0xFFB
 30210                           pclath	equ	0xFFA
 30211                           tblptru	equ	0xFF8
 30212                           tblptrh	equ	0xFF7
 30213                           tblptrl	equ	0xFF6
 30214                           tablat	equ	0xFF5
 30215                           prodh	equ	0xFF4
 30216                           prodl	equ	0xFF3
 30217                           intcon	equ	0xFF2
 30218                           intcon2	equ	0xFF1
 30219                           postinc0	equ	0xFEE
 30220                           fsr0h	equ	0xFEA
 30221                           fsr0l	equ	0xFE9
 30222                           wreg	equ	0xFE8
 30223                           indf1	equ	0xFE7
 30224                           postinc1	equ	0xFE6
 30225                           postdec1	equ	0xFE5
 30226                           fsr1h	equ	0xFE2
 30227                           fsr1l	equ	0xFE1
 30228                           indf2	equ	0xFDF
 30229                           postinc2	equ	0xFDE
 30230                           postdec2	equ	0xFDD
 30231                           plusw2	equ	0xFDB
 30232                           fsr2h	equ	0xFDA
 30233                           fsr2l	equ	0xFD9
 30234                           status	equ	0xFD8
 30235                           
 30236                           	psect	temp
 30237  000059                     btemp:
 30238                           	opt stack 0
 30239  000059                     	ds	1
 30240  0000                     int$flags	set	btemp
 30241                           pclatu	equ	0xFFB
 30242                           pclath	equ	0xFFA
 30243                           tblptru	equ	0xFF8
 30244                           tblptrh	equ	0xFF7
 30245                           tblptrl	equ	0xFF6
 30246                           tablat	equ	0xFF5
 30247                           prodh	equ	0xFF4
 30248                           prodl	equ	0xFF3
 30249                           intcon	equ	0xFF2
 30250                           intcon2	equ	0xFF1
 30251                           postinc0	equ	0xFEE
 30252                           fsr0h	equ	0xFEA
 30253                           fsr0l	equ	0xFE9
 30254                           wreg	equ	0xFE8
 30255                           indf1	equ	0xFE7
 30256                           postinc1	equ	0xFE6
 30257                           postdec1	equ	0xFE5
 30258                           fsr1h	equ	0xFE2
 30259                           fsr1l	equ	0xFE1
 30260                           indf2	equ	0xFDF
 30261                           postinc2	equ	0xFDE
 30262                           postdec2	equ	0xFDD
 30263                           plusw2	equ	0xFDB
 30264                           fsr2h	equ	0xFDA
 30265                           fsr2l	equ	0xFD9
 30266                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        5
    BSS         2652
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     231
    BANK2           256      0     208
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256    105     105
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_100(CODE[6]), STR_99(CODE[6]), STR_97(CODE[6]), STR_96(CODE[6]), 
		 -> STR_92(CODE[6]), STR_91(CODE[6]), STR_89(CODE[6]), STR_88(CODE[6]), 
		 -> STR_84(CODE[6]), STR_83(CODE[6]), STR_81(CODE[6]), STR_80(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6139(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6122(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6105(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6139(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6122(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6105(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_65(CODE[2]), STR_64(CODE[6]), STR_61(CODE[5]), STR_60(CODE[11]), 
		 -> STR_59(CODE[6]), STR_58(CODE[1]), STR_57(CODE[12]), STR_56(CODE[3]), 
		 -> STR_55(CODE[9]), STR_54(CODE[9]), STR_52(CODE[2]), STR_51(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), data_out@p(CODE[6]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_73(CODE[28]), STR_72(CODE[9]), STR_71(CODE[11]), STR_70(CODE[6]), 
		 -> STR_68(CODE[24]), STR_67(CODE[32]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> display_LCD@str_5583(BANK1[20]), data_out@str(BANK0[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    settings_integrating_reset@strp_6140	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_6139(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_6123	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_6122(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_6106	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_6105(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_117(CODE[1]), STR_115(CODE[15]), STR_113(CODE[16]), STR_111(CODE[17]), 
		 -> STR_109(CODE[16]), STR_107(CODE[17]), STR_105(CODE[17]), STR_103(CODE[1]), 
		 -> settings_integrating_reset@str_6139(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_95(CODE[1]), settings_led_indicator@str_6122(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_87(CODE[1]), settings_auto_stop@str_6105(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_79(CODE[1]), STR_77(CODE[1]), STR_75(CODE[13]), STR_48(CODE[14]), 
		 -> STR_44(CODE[1]), STR_42(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_116(CODE[1]), STR_114(CODE[9]), STR_112(CODE[9]), STR_110(CODE[9]), 
		 -> STR_108(CODE[9]), STR_106(CODE[9]), STR_104(CODE[9]), STR_102(CODE[1]), 
		 -> STR_101(CODE[1]), STR_98(CODE[17]), STR_94(CODE[1]), STR_93(CODE[1]), 
		 -> STR_90(CODE[17]), STR_86(CODE[1]), STR_85(CODE[1]), STR_82(CODE[17]), 
		 -> STR_78(CODE[1]), STR_76(CODE[1]), STR_74(CODE[15]), STR_47(CODE[15]), 
		 -> STR_43(CODE[1]), STR_41(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_5583(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_50(CODE[16]), 
		 -> STR_49(CODE[12]), STR_46(CODE[13]), STR_45(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6139(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6122(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6105(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_69(CODE[2]), data_out@str(BANK0[30]), STR_66(CODE[18]), STR_63(CODE[36]), 
		 -> STR_62(CODE[24]), STR_53(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK1[69]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_I2C_LCD_SetCursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_terminal_task

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  539925
                          _RTCC_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  220532
                                              0 BANK1      6     2      4
                                              0 BANK5    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  177570
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  126122
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   67977
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   36303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4694
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   13419
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   12264
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  222060
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   71362
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2016
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1951
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   33910
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   12016
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   22424
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21412
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     708      36       54.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     69      69      16       41.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      D0      10       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E7       7       90.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4C4       8        0.0%
DATA                 0      0     BCC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 19:14:44 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 2594                  __end_of_port_button_task 3288  
                      __size_of_I2C_Start 0030                 settings_adjust_time@state 012E  
                         _ringbuf_put_num 5DF0                              ?_display_dec 00AB  
                         _ringbuf_put_str 61F2                              ___awdiv@sign 0065  
                                      _ms 020E                        __size_of_ANALOG_IN 002C  
                           _USBDeviceInit 3288                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 002D                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006C                              __CFG_CP0$OFF 000000  
             settings_led_indicator@state 0131      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l207 6812  
                                     l208 6810                                       l146 32FE  
             __end_of_USBStdGetDscHandler 3538                                       _ADC 6920  
                                     l504 300E                                       l530 11E4  
                                     l531 1208                                       l532 122C  
                                     l509 3060                                       l525 1128  
                                     l526 1150                                       l710 65C6  
                                     l527 1176                                       l528 119C  
                                     l529 11C0                                       l641 6C84  
                                     l705 6750                                       l626 6910  
                                     l724 6940                                       l735 51B0  
                                     _BDT 000D00                                       l861 486E  
                                     l774 5DF2                                       l855 5452  
                                     l952 1944                                       l937 16A0  
                                     l874 2D36                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 5FD2                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 6A2C                                       _now 017A  
                       _RTCC_from_caltime 6AFE                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0041                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 3538  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0013  
              __end_of_settings_auto_stop 2A2A                   _RTCC_adjust_time_cursor 3C68  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002D  
                            _I2C_LCD_Puts 5AB0                  __size_ofi2_USBDeviceInit 0144  
                          ??_getsUSBUSART 006A                                      ?_ADC 0060  
                USBEnableEndpoint@options 0035                   _RTCC_adjust_time_toggle 66C0  
                       ??_I2C_LCD_Command 0064                                      ?_ISR 002D  
                  __end_of_get_string_usb 6638                          _terminal_at_hand 637E  
                                    ?_OUT 0060                              _I2C_LCD_init 5992  
                             ?_LED_output 0060                                      l1501 4DE4  
                                    l1502 4DFA                                      l1338 6C20  
                                    l1370 5B80                                      l1099 6848  
                                    l1516 4C84                                      l2183 4146  
                                    l2433 5EE0                                      l1650 6010  
                                    l1651 601E                                      l2443 6374  
                                    l2380 5440                USBConfigureEndpoint@handle 0033  
                                    l1485 3230                                      l2390 58EC  
                                    l1831 4590                                      l1648 6002  
                                    l1664 5F90                                      l1832 4530  
                                    l1496 4D74                                      l1666 5F9E  
                                    l1667 5FAC                                      l1871 27A6  
                                    l1919 2B70                                      l1849 29E8  
                                    OUT@b 0061                                      l1972 0272  
                                    l1893 2552                        __CFG_WPFP$PAGE_127 000000  
                                    l8461 12C8                                      l8453 1278  
                                    l8473 1344                                      l8465 12F0  
                                    l8457 12A0                                      l8481 1396  
                                    l8449 1250                                      l8477 136E  
                                    l8469 131A                                      STR_1 FDFC  
                                    STR_2 FF7F                                      STR_4 FFFB  
                                    STR_7 FFFD                                      STR_9 FFF9  
                   ??_USBCtrlTrfTxService 002D                                      _UCFG 000F39  
                                    u8460 1306                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u8470 1330  
                                    u8480 135A                                      u8490 1384  
                                    _UEIE 000F37                                      _UEIR 000F63  
                                    _UCON 000F65                              __CFG_WDTPS$8 000000  
                         _CDCDataInHandle 0113                               display@item 0064  
                     ??_RTCC_from_caltime 0091                               display@str0 0060  
                             display@str1 0062    USBStdFeatureReqHandler@current_ep_data 0044  
                                    _pDst 0117                                      _atoi 405E  
                                    _main 6044                  ??i2_USBTransferOnePacket 0031  
                button_timer_interrupt@bt 0083                             _software_init 5218  
                                    _port 0135                                      fsr0h 000FEA  
                                    fsr1h 000FE2                        i2___lwdiv@quotient 0031  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 020A  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                          __end_of_I2C_Send 6C8C  
                         _USBDeviceAttach 67E4                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 6CC2  
                        __end_of_I2C_Stop 6CBC                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 10F6                          __end_of_ADC_init 6B90  
                           __CFG_IESO$OFF 000000                        __size_of_CTMU_init 0028  
              RTCC_adjust_time_dec@i_3847 0097                        __size_of_CTMU_read 00C2  
              __end_of_USBCheckStdRequest 4242                    ??_USBCtrlTrfOutHandler 002F  
                          terminal_task@i 0568                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0041                             _I2C_LCD_Clear 6C40  
                         ??_terminal_task 0196                           ??_terminal_time 00DA  
                                   ??_ADC 0062                        terminal_task@ascii 0567  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004B                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 012B  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l11001 050E                                     l11021 640A  
                                   l11015 63E8                                     l11017 63EE  
                                   l11121 616E                                     l11201 18B0  
                                   l11043 68A6                                     l11019 63FE  
                                   l11203 18C8                                     l12003 2542  
                                   l11109 51D2                                     l12021 6330  
                                   l11125 67B6                                     l11133 66E8  
                                   l12013 2590                                     l11301 6440  
                                   l11039 6894                                     l12023 633C  
                                   l11127 67C2                                     l11151 3D08  
                                   l11143 3CB8                                     l11231 1A48  
                                   l11223 1998                                     l11207 18FC  
                                   l11303 644C                                     l10521 579A  
                                   l10513 5764                                     l10505 5740  
                                   l11057 47E8                                     l11049 47B4  
                                   l11081 517C                                     l12201 59BE  
                                   l12041 6768                                     l12025 6342  
                                   l12121 5E02                                     l11313 4060  
                                   l10515 5770                                     l10611 538C  
                                   l10603 536A                                     l11155 3D30  
                                   l11147 3CE0                                     l11139 3C90  
                                   l11251 1B54                                     l11235 1A70  
                                   l11227 19C4                                     l11219 196C  
                                   l12131 5E64                                     l11331 4108  
                                   l11315 4066                                     l11307 648A  
                                   l10517 5776                                     l10525 57A8  
                                   l10509 5750                                     l11069 484E  
                                   l11501 4D32                                     l10541 42BA  
                                   l12141 4FAE                                     l10621 53C4  
                                   l11077 5172                                     l12213 5A0A  
                                   l12205 59E8                                     l11413 32D4  
                                   l12053 65C8                                     l12029 6366  
                                   l11245 1AE0                                     l11253 1B6C  
                                   l11181 17A4                                     l11173 16F4  
                                   l12125 5E24                                     l11333 410E  
                                   l11325 40AC                                     l12221 2124  
                                   l12143 4FC4                                     l10623 53D4  
                                   l10607 5378                                     l11343 5FBA  
                                   l11351 37E6                                     l11159 3D58  
                                   l11247 1AE8                                     l10529 57BC  
                                   l11505 4D62                                     l11521 6BAC  
                                   l10633 542E                                     l10625 53DA  
                                   l12209 59F2                                     l11441 3344  
                                   l11417 32DE                                     l12321 3A24  
                                   l12305 38FC                                     l10721 5880  
                                   l11281 5B10                                     l11361 3840  
                                   l11257 1BA0                                     l11185 17CC  
                                   l11177 1720                                     l11169 16C8  
                                   l11329 40BE                                     l12241 220A  
                                   l10563 5EFC                                     l11531 2FF2  
                                   l11451 33B4                                     l10723 5890  
                                   l10707 6AA4                                     l11275 5ADE  
                                   l11283 5B38                                     l12331 3E7E  
                                   l11371 38B0                                     l11195 183C  
                                   l12403 2A2C                                     l12235 21DA  
                                   l12219 210C                                     l10557 4742  
                                   l11541 3018                                     l12149 4FCA  
                                   l11445 334E                                     l11429 330C  
                                   l11437 3324                                     l12309 3906  
                                   l10725 5896                                     l10901 01BC  
                                   l11365 3870                                     l11357 3814  
                                   l11197 1844                                     l11189 17D6  
                                   l12421 2A7A                                     l12237 21E0  
                                   l13125 60A6                                     l10567 5F22  
                                   l10671 1BD6                                     l11535 3002  
                                   l11383 5E90                                     l10639 6BD4  
                                   l10591 5328                                     l11711 69B6  
                                   l11703 69AE                                     l12319 3A02  
                                   l12511 069C                                     l12327 3E74  
                                   l12351 6316                                     l12343 62C0  
                                   l11375 38EE                                     l12431 2A9E  
                                   l12423 2A80                                     l12159 5A66  
                                   l12263 2316                                     l12247 2276  
                                   l10681 1C3A                                     l11561 3086  
                                   l11553 3064                                     l11529 2FE8  
                                   l10649 4BAA                                     l11385 5E9C  
                                   l12193 599C                                     l10593 5334  
                                   l10585 530A                                     l10833 2DA8  
                                   l12169 619E                                     l10761 61F4  
                                   l10729 58DA                                     l10913 021E  
                                   l10905 01CE                                     l12513 072A  
                                   l12505 05BE                                     l12337 3F64  
                                   l12361 3134                                     l12441 2AF0  
                                   l12433 2AA4                                     l12409 2A54  
                                   l11297 63C4                                     l12257 22B6  
                                   l12601 0EBE                                     l13129 60AE  
                                   l10691 1CC2                                     l10675 1BE0  
                                   l10683 1C3E                                     l11571 30B6  
                                   l11547 304C                                     l11395 5ED2  
                                   l11387 5EA2                                     l10595 533A  
                                   l10579 52F4                                     l10835 2DAC  
                                   l11707 69B2                                     l10923 0294  
                                   l10907 01E6                                     l12515 0772  
                                   l12531 09A6                                     l12347 62CA  
                                   l12371 31B2                                     l11803 2868  
                                   l12443 2B10                                     l12419 2A78  
                                   l12259 22CE                                     l12611 0F14  
                                   l12603 0EC2                                     l10669 1BD0  
                                   l11581 30E4                                     l12293 6602  
                                   l12277 6A0C                                     l12197 59A6  
                                   l11717 69BA                                     l10765 622C  
                                   l10933 02D8                                     l10917 0236  
                                   l10861 003E                                     l10853 000E  
                                   l11637 15CC                                     l12381 3210  
                                   l12365 3164                                     l12357 312A  
                                   l11821 2948                                     l11813 289E  
                                   l11901 2706                                     l12461 2BC0  
                                   l12445 2B30                                     l12437 2AB0  
                                   l12429 2A9C                                     l11653 0A7C  
                                   l10687 1C5E                                     l11591 3120  
                                   l11495 4D02                                     l11487 4CC4  
                                   l12295 6606                                     l12279 6A10  
                                   l10839 2DB4                                     l11727 602C  
                                   l10935 02DE                                     l10871 0080  
                                   l11639 15E4                                     l12383 3214  
                                   l12391 3234                                     l11743 44FA  
                                   l11831 29A4                                     l11807 288E  
                                   l11911 2762                                     l12471 2BEC  
                                   l12463 2BC8                                     l12455 2B84  
                                   l12439 2AD0                                     l11663 0B44  
                                   l11647 0A28                                     l12631 103E  
                                   l13087 604E                                     l11569 30AA  
                                   l11497 4D08                                     l11489 4CCE  
                                   l10953 034C                                     l10881 0106  
                                   l10865 0048                                     l12545 2EA6  
                                   l12529 0992                                     l12537 09C4  
                                   l12385 3218                                     l11753 454A  
                                   l11825 2952                                     l11809 2894  
                                   l11905 2710                                     l12481 2C10  
                                   l12449 2B50                                     l12713 4BE0  
                                   l11673 0C0A                                     l11665 0B7C  
                                   l11657 0AC4                                     l11649 0A34  
                                   l12641 10A2                                     l12633 1046  
                                   l12625 0FEA                                     l12617 0F62  
                                   l12609 0F10                                     l11587 30F8  
                                   l11579 30DA                                     l10947 032A  
                                   l10891 0144                                     l10859 002C  
                                   l12475 2BFE                                     l12467 2BDA  
                                   l12723 4C0C                                     l11683 0CD2  
                                   l11659 0AFC                                     l12627 1014  
                                   l12619 0F66                                     l11589 30FC  
                                   l10957 0384                                     l10893 014A  
                                   l12557 2F9A                                     l12549 2EB0  
                                   l12389 321E                                     l12397 3282  
                                   l11829 298C                                     l11837 29B4  
                                   l11845 29D8                                     l11941 2338  
                                   l11909 274A                                     l11917 2772  
                                   l11861 2596                                     l11925 2796  
                                   l12485 2C32                                     l12733 4C4A  
                                   l12717 4BEA                                     l11685 0D0A  
                                   l11677 0C52                                     l11669 0BC4  
                                   l12637 1062                                     l10991 043E  
                                   l10983 040E                                     l10967 03B4  
                                   l10975 03DC                                     l10959 038E  
                                   l10879 0100                                     l12495 055C  
                                   l11759 4564                                     l11767 4580  
                                   l11855 2A26                                     l11839 29D2  
                                   l11791 2806                                     l11783 27EA  
                                   l11935 27E4                                     l11919 2790  
                                   l11679 0C8A                                     l10977 03E8  
                                   l10889 0138                                     l12489 0522  
                                   l11777 45D4                                     l11953 2394  
                                   l11961 23BC                                     l11945 234A  
                                   l11873 25EC                                     l11881 2614  
                                   l11865 25A8                                     l12681 4DCE  
                                   l12673 4DB8                                     l11689 0D52  
                                   l12593 0E6C                                     l12649 10D8  
                                   l12585 0DC2                                     l10899 01B0  
                                   l11795 2840                                     l11787 27FC  
                                   l11971 23F2                                     l11955 23AC  
                                   l11891 264A                                     l11875 2604  
                                   l12675 4DBC                                     l12739 4C88  
                                   l12595 0E70                                     l10997 04D8  
                                   l10989 042E                                     l11797 2858  
                                   l11965 23E2                                     l11949 2354  
                                   l11885 263A                                     l11869 25B2  
                                   l12669 4DA2                                     l12781 5246  
                                   l12589 0DEC                                     l10999 04EE  
                                   l11983 24B6                                     l11967 23E8  
                                   l11887 2640                                     l12785 5250  
                                   l11987 24F6                                     l11995 251E  
                                   l11979 24AC                                     l12699 4E0C  
                                   l11989 250E                                     l11997 253C  
                                   l12797 52D0                 __end_of_RTCC_from_caltime 6B24  
                                   ?_atoi 007C                                     ?_main 002D  
                 __size_of_put_string_usb 002C                            ??_get_quot_rem 007D  
                         __end_of___awdiv 5396                                     _ADRES 000FC3  
                                   STR_10 FFE6                                     STR_11 FFFB  
                                   STR_20 FFE3                                     STR_12 FFFB  
                                   STR_13 FFF7                                     STR_14 FF8F  
                                   STR_30 FFD9                                     STR_31 FFF3  
                                   STR_15 FF79                                     STR_23 FD98  
                                   STR_16 FFFD                                     STR_32 FFC9  
                                   STR_40 FF91                                     STR_24 FF82  
                                   STR_41 FFE6                                     STR_17 FF80  
                                   STR_33 FDFF                                     STR_25 FF53  
                                   STR_42 FFE6                                     STR_18 FFF9  
                                   STR_26 FFEF                                     STR_34 FFE7  
                                   STR_50 FEC3                                     STR_43 FFE6  
                                   STR_35 FE4B                                     STR_27 FFEE  
                                   STR_19 FFE3                                     STR_51 FFCF  
                                   STR_44 FFE6                                     STR_52 FFF1  
                                   STR_36 FFDE                                     STR_60 FF48  
                                   STR_28 FF31                           __end_of___awmod 57C6  
                                   STR_29 FFE9                                     STR_37 FFF5  
                                   STR_61 FFD4                                     STR_45 FE92  
                                   STR_53 FBE6                                     STR_70 FFB7  
                                   STR_38 FF98                                     STR_54 FF67  
                                   STR_46 FF0C                                     STR_62 FE1D  
                                   STR_39 FFBB                                     STR_55 FF70  
                                   STR_71 FF3D                                     STR_47 FEE2  
                                   STR_63 FDBD                                     STR_72 FE44  
                                   STR_56 FFEB                                     STR_64 FFC3  
                                   STR_80 FFA5                                     STR_48 FEF1  
                                   STR_65 FFDC                                     STR_81 FFAB  
                                   STR_57 FF25                                     STR_49 FF19  
                                   STR_73 FE01                                     STR_58 FFE6  
                                   STR_74 FEE2                                     STR_90 FE81  
                                   STR_82 FE81                                     STR_66 FE4D  
                                   STR_91 FFA5                                     STR_83 FFA5  
                                   STR_59 FFBD                                     STR_75 FEFF  
                                   STR_67 FDE1                                     STR_76 FFE6  
                                   STR_92 FFAB                                     STR_84 FFAB  
                                   STR_68 FE35                                     STR_93 FFE6  
                                   STR_85 FFE6                                     STR_77 FFE6  
                                   STR_69 FDBB                                     STR_94 FFE6  
                                   STR_86 FFE6                                     STR_78 FFE6  
                                   STR_95 FFE6                                     STR_87 FFE6  
                                   STR_79 FFE6                                     STR_88 FFA5  
                                   STR_96 FFB1                                     STR_89 FFAB  
                                   STR_97 FF9F                                     STR_98 FE81  
                                   STR_99 FFB1         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 5452                                     u12100 6434  
                                   u11400 46EC                                     u12200 520A  
                                   u11410 46EE                                     u12107 642A  
                                   u11420 471E                           ___awdiv@divisor 0062  
                                   u12205 51FC                                     u11440 4734  
                         __end_of___llmod 58FE                    __end_of_USBDeviceTasks 367C  
                                   u11450 4736                                     u11460 478E  
                                   u11470 4790                                     u11438 4722  
                                   u13310 601A                                     u14120 39F2  
                                   u12520 5B00                                     u11730 691C  
                                   u13330 6028                                     u12530 5B32  
                                   u11900 0210                                     u12700 5FB6  
                                   u11750 621E                                     u14150 3EA6  
                                   _LATB2 007C52                                     u12527 5AF6  
                                   _LATA5 007C4D                                     u11760 624E  
                                   u14400 0668                                     u13440 2908  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   u12537 5B28                                     _LATA7 007C4F  
                                   u13290 600C                                     _LATB6 007C56  
                                   u11907 0206                                     _LATB7 007C57  
                                   u12900 4CB4                                     u14500 3E64  
                                   u11860 0184                                     u14180 62F2  
                                   u12660 5F9A                                     u12740 3862  
                                   u13285 5FFC                                     u11757 6214  
                                   u14430 3DA2                                     u13286 6000  
                                   u15207 684E                                     u14095 392E  
                                   u11767 6244                                     u12655 5F8A  
                                   u14440 3DA4                                     u12680 5FA8  
                                   u12656 5F8E                                     u12760 38A4  
                                   u13560 26B4                                     u15217 519C  
                                   u14450 3DE2                                     u12770 38D2  
                                   u13458 290C                 ?_USBCtrlEPServiceComplete 002D  
                                   u15227 51A6                                     u11867 017A  
                                   u12747 3858                                     u12908 4CB8  
                                   u14460 3DE4                                     u14380 05FE  
                                   u14470 3E22                                     u14390 0666  
                                   u15167 5B0C                                     u14391 0662  
                                   u12767 389A                                     u12960 2FD8  
                                   u14480 3E24                                     u15177 59AE  
                                   u12777 38C8                                     u14490 3E62  
                                   u13578 26B8                                     u15187 59FA  
                                   u14388 0602                                     u15197 6C4E  
                                   u12968 2FDC                                     u13785 6B80  
                                   u13786 6B82                           __end_of___lwdiv 5EEA  
                         __end_of___lwmod 637E                                     i2l300 5532  
                                   i2l232 3FE4                                     i2l146 36E2  
                                   i2l170 3614                                     i2l308 667A  
                           __CFG_WDTEN$ON 000000                                     i2l158 3568  
                                   i2l168 3602                                     i2l345 5146  
                                   i2l169 3678                                     i2l450 49A2  
                                   i2l452 49EC                                     i2l374 1E6E  
                                   i2l295 551C                                     i2l359 4160  
                                   i2l368 41C4                                     i2l393 2032  
                                   i2l298 55AA                                     i2l299 552C  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                 ST7032_task@st7032_state 0120                           ??_hardware_init 0091  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                    __size_of_ctmu_sampling 0102  
                  __size_of_LED_indicator 0126        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 5864                                     _sd000 FBE2  
                                   _sd001 FB3C                                     _sd002 FB70  
                         __end_of_display 38F6                      caltime_to_epoch@year 007F  
                              i2memset@p1 002D                           __end_of_dpowers FA79  
                         ??_settings_task 0099                           __end_of_isdigit 6AAE  
                      __size_of_RTCC_init 006A                           ?_get_string_usb 006D  
                      __size_of_RTCC_task 003A                          ringbuf_delete@rb 0060  
                                   atoi@a 0081                                     atoi@s 007C  
                       __end_of_I2C_Start 6920                 RTCC_adjust_time_cursor@tm 0060  
                            display_dec@s 00AF               settings_task@settings_state 0132  
                                   tablat 000FF5                         __end_of_ANALOG_IN 69D4  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 611E                          __end_of_USB_init 6C0A  
                        __end_of_USB_task 5BCC                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 051C  
                   __size_of_I2C_init_old 0012                          __end_ofi2_memset 6A84  
                      __size_ofi2___awdiv 0084                         month_length@month 0066  
                             CTMU_read@ch 0070                   __end_of_ringbuf_put_num 5E72  
                 __end_of_ringbuf_put_str 6256                        __size_ofi2___lwdiv 0052  
                     terminal_task@i_4539 0566                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                            ?_I2C_LCD_Clear 002D  
                         __initialization 5CE6                           terminal_task@rx 0194  
                         terminal_task@tx 0192                           terminal_time@tx 00D2  
                            __end_of_atoi 4150                              __end_of_main 60B2  
                   _control_signal_bitmap 0124                          __end_of_Auto_cut 3A2A  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 44F8                RTCC_adjust_time_inc@i_3817 0097  
                     __size_of_LED_output 0072                  ctmu_set_ratio@percentage 0083  
               __size_of_USBCtrlEPService 00CE                             print_time@str 00AD  
               RTCC_adjust_time_toggle@tm 0060                                    ??_atoi 007E  
                                  ??_main 00E6                           LED_output@value 0060  
         settings_led_indicator@strp_6123 0091                             __activetblptr 000003  
                         ?_USBDeviceTasks 002D                 ??_RTCC_adjust_time_cursor 0062  
                             ?_USBSuspend 002D                 ??_RTCC_adjust_time_toggle 0062  
                                  ISR@cnt 011D                         __end_of_CTMU_init 6AFE  
                       __end_of_CTMU_read 5218                              _cdc_mem_type 0017  
                            _I2C_init_old 6CA0                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 6BD0                   __end_of_USBDeviceAttach 681C  
                        _CDCDataOutHandle 0007                         _getsUSBUSART$1957 006B  
                        ___llmod@dividend 006D                                    STR_100 FF9F  
                                  STR_101 FFE6                                    STR_102 FFE6  
                                  STR_110 FF5E                                    STR_103 FFE6  
                                  STR_111 FE70                         _I2C_LCD_SetCursor 697C  
                                  STR_112 FF5E                                    STR_104 FF5E  
                                  STR_113 FEB3                                    STR_105 FE5F  
                                  STR_114 FF5E                                    STR_106 FF5E  
                                  STR_107 FE5F                                    STR_115 FED3  
                                  STR_116 FFE6                                    STR_108 FF5E  
                                  STR_117 FFE6                                    STR_109 FEA3  
                                  STR_118 FF8A                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_1602@tm 00B3                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 0170  
                                  i2l2433 6592                                    i2l1664 6280  
                                  i2l1666 628C                                    i2l1667 6298  
                                  i2l1781 10BA                                    i2l7111 4458  
                                  i2l7041 6A62                                    i2l7121 448C  
                                  i2l7211 1E6A                                    i2l7115 4460  
                                  i2l7061 5016                                    i2l7045 6A72  
                                  i2l7231 1F28                                    i2l7233 1F2A  
                                  i2l7225 1EE4                                    i2l7145 33FC  
                                  i2l7137 44D6                                    i2l7171 3520  
                                  i2l7091 5814                                    i2l9011 3560  
                                  i2l9003 3550                                    i2l7253 1FCC  
                                  i2l7237 1F46                                    i2l7165 3510  
                                  i2l7157 34AE                                    i2l7149 3414  
                                  i2l6711 5608                                    i2l6703 55DE  
                                  i2l7263 2012                                    i2l7247 1F98  
                                  i2l7167 3518                                    i2l7159 34B6  
                                  i2l7183 5552                                    i2l7095 5830  
                                  i2l7281 209E                                    i2l7273 204E  
                                  i2l7265 201E                                    i2l7249 1FB2  
                                  i2l7193 5592                                    i2l8241 68EA  
                                  i2l9033 358E                                    i2l9025 357E  
                                  i2l6723 5664                                    i2l6645 5960  
                                  i2l7623 3BA4                                    i2l6655 670C  
                                  i2l6751 4990                                    i2l6743 4970  
                                  i2l7279 2092                                    i2l8263 6676  
                                  i2l8239 68E8                                    i2l9063 35F8  
                                  i2l9055 35D0                                    i2l9039 35B4  
                                  i2l6913 4604                                    i2l7617 3B80  
                                  i2l9049 35C4                                    i2l6923 4634  
                                  i2l6931 466E                                    i2l7811 50C6  
                                  i2l7635 3C02                                    i2l6659 671A  
                                  i2l8291 4ED2                                    i2l8283 4E8C  
                                  i2l9091 3674                                    i2l9083 363A  
                                  i2l6933 4676                                    i2l6941 46B0  
                                  i2l6909 45FA                                    i2l7813 50CA  
                                  i2l7661 4176                                    i2l9069 360C  
                                  i2l7831 512C                                    i2l7639 3C1C  
                                  i2l6759 49CE                                    i2l6767 49F6  
                                  i2l7671 4198                                    i2l8279 4E84  
                                  i2l8295 4EEC                                    i2l7825 510C  
                                  i2l7673 419E                                    i2l7657 416A  
                                  i2l7569 3F8E                                    i2l8297 4EF2  
                                  i2l9089 3658                                    i2l7683 41E0  
                                  i2l7659 4170                                    i2l7837 5150  
                                  i2l6893 695C                                    i2l7669 4192  
                                  i2l7589 400A                                    i2l6887 6950  
                                  i2l7687 41FE                                    i2l6889 6956  
                                  i2l9627 62A4                                    i2l9651 5DAE  
                                  i2l9643 5D90                                    i2l9661 5DCE  
                                  i2l9653 5DB2                                    i2l9637 5D80  
                                  i2l7797 64F0                                    i2l7789 64A8  
                                  i2l8943 36C6                                    i2l9649 5DA6  
                                  i2l9665 5DD8                                    i2l9681 6568  
                                  i2l9833 3A2E                                    i2l9691 6588  
                                  i2l9683 656C                                    i2l9843 3A88  
                                  i2l8971 372E                                    i2l8955 36F0  
                                  i2l8963 3708                                    i2l8939 36BE  
                                  i2l9669 5DE6                                    i2l9837 3A36  
                                  i2l9679 6560                                    i2l8967 3726  
                                  i2l9849 3B06                                    i2l9857 3B4C  
                                  i2l8977 378A                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _SSPBUF 000FC9                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031        settings_integrating_reset@str_6139 007E  
                       ??i2_USBDeviceInit 0035           __size_ofi2_USBTransferOnePacket 00BA  
                        __end_of_data_out 2FB4                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 6C26                             _ctmu_sampling 3D6C  
                           _LED_indicator 3A2A                        _terminal_task$7032 0564  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                             LED_output@b 0061                         _shortPacketStatus 0021  
                     ??_I2C_LCD_SetCursor 0067                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                   __size_of_ctmu_set_ratio 00E6  
                        ringbuf_put_num@i 0088                           USBDeviceTasks@i 004A  
                   caltime_to_epoch@epoch 0081                          ??_integrate_time 0060  
             USBStdFeatureReqHandler@pUEP 0042                        _terminal_time$7033 00DA  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 002E  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0085                          __end_of_bootload 66C0  
                                  ___lmul 5EEA                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 486E                                    ___wmul 6854  
                      ??_epoch_to_caltime 0083                                 ??___awdiv 0064  
                               ??___awmod 0064              __end_of_RTCC_adjust_time_dec 1BB6  
                   ?_settings_adjust_time 002D              __end_of_RTCC_adjust_time_inc 1912  
                                  _d_to_x 6AAE                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 4D66                      ringbuf_put_num@value 0085  
                            ?_timer0_init 002D                                 ??___llmod 0075  
                       __end_of_RTCC_init 61F2                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_task 67AC  
                               ??___lwmod 0064                              ?_timer3_init 002D  
                            ?_normal_task 002D                                    _lcd_tx 0023  
                       _USBEnableEndpoint 66FC           __size_of_USBStdGetStatusHandler 00BA  
                                  _ctmu_m 00FC                                    _memset 688A  
                                  clear_0 5CEE                                    clear_1 5D00  
                                  clear_2 5D0C                           put_string_usb@s 006C  
                                  clear_3 5D18                                    clear_4 5D24  
                                  clear_5 5D30                                    clear_6 5D3C  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                      __size_of_display_LCD 04C4  
                         ___awmod@counter 0064                        _ctmu_sampling_flag 0125  
                                  _x_to_d 6BB0                        ?_USBEnableEndpoint 0035  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 02B9  
                                  _usb_tx 02C1                      __size_of_display_dec 006A  
                                  _strcat 63DE                                    _strcmp 643E  
                                  _strcpy 67AC                                 ??_display 0064  
                          i2___awdiv@sign 0032             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 028E                        _terminal_operation 20C4  
                               ??_isdigit 0060               settings_auto_stop@strp_6106 0091  
                       __end_ofi2___awdiv 5DF0                                 ?_I2C_Send 002D  
                            _st7032_state 012A                              _CDCTxService 2FB4  
                               ?_I2C_Stop 002D                         __end_ofi2___lwdiv 659C  
                            __mediumconst FA50                             _cut_time_flag 0126  
               __end_of_I2C_LCD_SetCursor 69A8                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_sprintf 0097  
                     ?_terminal_operation 00DB                             ?i2_LED_output 002D  
                             _CtrlTrfData 000D38                           ??_software_init 0084  
                    _controlTransferState 001B                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 5D62  
                            __pbssBIGRAMl 0569                              CTMU_read@sum 0071  
                           ?_millis_timer 002D                      __end_of_get_quot_rem 4AEE  
                          ?_ctmu_sampling 002D                            ?_LED_indicator 002D  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 6C26                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 0083                          ?_ringbuf_put_str 006F  
                 ?_settings_led_indicator 002D                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          LED_indicator@cnt 0106  
                        terminal_task@op0 023D                          terminal_task@op1 0256  
                        terminal_task@op2 026F                          terminal_task@op3 0288  
                        terminal_task@buf 0500                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 6738                             __end_of_sd000 FBE6  
                           __end_of_sd001 FB70                             __end_of_sd002 FBA4  
                        terminal_time@op0 00D4                          terminal_time@op1 00D6  
                        terminal_time@op2 00D8                              __pidataBANK1 6CC2  
          settings_led_indicator@str_6122 007B                      ??_terminal_operation 00E5  
                __end_of_terminal_at_hand 63DE          __size_of_USBCtrlEPAllowDataStage 009E  
           __size_of_USBConfigureEndpoint 0094                         ?_port_button_task 002D  
             __end_of_USBCtrlTrfInHandler 5156                           __CFG_DSWDTPS$G2 000000  
                         _I2C_LCD_Command 681C                            _put_string_usb 6A00  
                  i2_USBTransferOnePacket 55C8                        ??_port_button_task 0066  
                    terminal_task@command 0188                                 ?_USB_init 002D  
                               ?_USB_task 002D                             _I2C_cfct_flag 0122  
                       _CDCTxService$2005 0068                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                                ??_I2C_Stop 0062  
                              _cdc_notice 0200                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 002D                                _cdc_rx_len 0018  
                              _cdc_tx_len 001A                                ??_ADC_init 0060  
              caltime_to_epoch@month_3637 0080                  ??_USBCtrlTrfSetupHandler 0047  
                          ??i2_LED_output 002E                              ??_LED_output 0061  
                  RTCC_adjust_time_dec@tm 0091                          ?_USBDeviceAttach 002D  
                  _USBStdGetStatusHandler 550E                              sprintf@width 00A9  
                  RTCC_adjust_time_inc@tm 0091                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                               ?_Auto_cut 002D                            LED_indicator@i 0038  
                          ??_millis_timer 002D                        __size_of_ctmu_task 0014  
                               ISR@cnt_t1 011E                   __end_of_caltime_to_RTCC 4944  
          __end_of_settings_led_indicator 27E8                           _RTCC_to_caltime 5452  
                      _settings_auto_stop 27E8               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 00F5          __end_of_USBCtrlEPServiceComplete 405E  
             __size_of_USBCheckCDCRequest 00D6                     __end_of_weekday_3char FBC0  
                  ??_settings_adjust_time 0099                     RTCC_task@prev_halfsec 011F  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                          ST7032_init@buf 0400                       ?_settings_auto_stop 002D  
                                 ?_d_to_x 002D                    __end_of_put_string_usb 6A2C  
                                 ?_memset 0060                      I2C_LCD_SetCursor@col 0069  
                          ___lmul@product 0075                                _device_dsc FBC0  
                    I2C_LCD_SetCursor@row 0066                        __end_of_LED_output 5FD2  
                        _USBCtrlEPService 4E34                                   ?_x_to_d 002D  
                            I2C_Send@data 0062                                _ep_data_in 0001  
                                 ?_strcat 0060                                   ?_strcmp 0060  
                                 ?_strcpy 0060                   settings_auto_stop@state 012F  
             __end_of_USBCtrlTrfRxService 3C68                        _USBCheckStdRequest 4150  
                              ??_USB_init 0069                         _configDescriptor1 FAF9  
                              ??_USB_task 0074                                   i2l10413 1094  
                                 i2l10423 10B0                                   i2l10407 1074  
                                 i2l10397 1052                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                           ??_I2C_IdleCheck 0060  
                              ANALOG_IN@b 0060                                ??i2_memset 0033  
                               ?_data_out 00AB               __end_of_USBCtrlTrfTxService 46B8  
                     _USBStdSetCfgHandler 4416                __size_of_I2C_LCD_SetCursor 002C  
                  I2C_LCD_SetCursor@F8685 01E2                                   _SPBRGH1 000F7F  
                           _I2C_sent_flag 000E                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00DB  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 6CBC  
                 __end_of_RTCC_from_epoch 6C40                                 ?_bootload 002D  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 1912  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 166E  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 0019  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 68F0                                   _pCDCDst 0109  
                                 _pCDCSrc 010C                     __size_of_getsUSBUSART 00D2  
                  display_time_1602@line0 00B5                    display_time_1602@line1 00B7  
                               _ANALOG_IN 69A8                                   __Hparam 0000  
     settings_integrating_reset@strp_6140 0094                            _ctmu_set_ratio 4330  
                    ?_USBStdSetCfgHandler 002D                                 _CDCInitEP 60B2  
                                 __Lparam 0000                                _ctmu_ratio 001C  
                 __end_of_I2C_LCD_Command 6854                         ringbuf_put_num@rb 0083  
                          display_LCD@str 0192                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 006F                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0047             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 52D8  
                         __size_of___lmul 0076                                   ___awmod 5724  
                                 ___lldiv 5396                          ??_USBDeviceTasks 004A  
                         __size_of___wmul 0036                                   ___llmod 5864  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 5E72  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 631C                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 10F6                     __end_of_terminal_time 0D8C  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0020               epoch_to_caltime@month_cache 01E6  
                                 __pcinit 5CE6                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FB3C  
                                 __ramtop 0F00                      __size_of_timer0_init 003A  
                    __size_of_timer1_init 0050                                   __ptext0 6044  
                                 __ptext1 0D8C                                   __ptext2 20C4  
                                 __ptext3 09E0                                   __ptext4 637E  
                                 __ptext5 5C5A                                   __ptext6 6AFE  
                                 __ptext7 643E                                   __ptext8 405E  
                                 __ptext9 667E                                   _inPipes 00EF  
                    __size_of_timer3_init 002C                      __size_of_normal_task 00CE  
           settings_integrating_reset@str 006A                         __end_of_ctmu_task 6CA0  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 0011                         port_button_task@i 0066  
                                 _display 37C0                                 _T0CONbits 000FD5  
                            __size_of_ADC 002E                           __size_of_strcat 0060  
                        _time_change_flag 0022                          _caltime_to_epoch 1BB6  
                         __size_of_strcmp 005C                           __size_of_strcpy 0038  
                            __size_of_ISR 00EE                                 _T1CONbits 000FCD  
                            __size_of_OUT 0072                                   _dpowers FA51  
                            ??_USBSuspend 0041                   __size_of_RTCC_from_RTCC 001A  
                              data_out@tx 00AB                                   _isdigit 6A84  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                      hardware_init@usbrx 0300                        hardware_init@usbtx 0569  
                              ??_data_out 00AD                             I2C_LCD_init@i 0068  
          settings_integrating_reset@strp 0092                                 _T5CONbits 000F22  
                   __end_of_hardware_init 5724                           i2_USBDeviceInit 367C  
                        i2USBDeviceInit@i 0035                         __end_ofdata_out@p FBE2  
                                 _uart_rx 02A9                                   _uart_tx 02B1  
                      __end_of_USB_CD_Ptr FA81                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 550E  
                   ?_RTCC_adjust_time_dec 0091                     ?_RTCC_adjust_time_inc 0091  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 5D62  
                            _getsUSBUSART 4C94                                ??_bootload 006A  
                               _CTMU_init 6AD6                                 _CTMU_read 5156  
                   __end_of_settings_task 2C4A                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FA7F                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 000B           settings_integrating_reset@state 0130  
                          ??_month_length 0067                            display_dec@dec 00AD  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 00AB  
         _dummy_encapsulated_cmd_response 02A1                    _terminal_data_out_flag 012C  
            terminal_operation@percentage 00E5                    __end_of_ctmu_set_ratio 4416  
                               i2u1022_45 627A                                 i2u1022_46 627E  
                               i2u1023_40 6288                                 i2u1025_40 6294  
                               i2u1027_40 62A0                               sleep_task@i 006A  
                ?_USBStdFeatureReqHandler 002D                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                     ??_USBStdSetCfgHandler 0041  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002D  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                      __end_of_USBSuspend 6A58                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 57C6                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_task 4BC2                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                    __end_ofi2_LED_output 62BA                  _USBCtrlEPServiceComplete 3F6A  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0014  
              _USBStatusStageEnabledFlag2 0015                        USBEnableEndpoint@p 0036  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 6188  
                    __end_of_millis_timer 6B70                                 _RTCC_task 6772  
                            _display_char 0215                              _display_flag 0127  
               epoch_to_caltime@day_cache 0119                        ST7032_cursor@F8665 01E4  
                              _print_item 001F                              _get_quot_rem 4A1A  
                              _print_time 5C5A                                _print_port 00FB  
                          _ringbuf_delete 6B24              __end_ofdisplay_LCD@port_char FAF9  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 000D                       RTCC_from_caltime@tm 008F  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                               i2___awdiv 5D6C                 USBConfigureEndpoint@EPNum 0032  
                       i2___lwdiv@divisor 002F                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002D                settings_led_indicator@strp 008F  
                               i2___lwdiv 654A                         i2___lwdiv@counter 0033  
                        ?_RTCC_from_epoch 008F                                ?_CTMU_init 002D  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                                 Auto_cut@i 007E  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 486E                           ?_ctmu_set_ratio 002D  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0212                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 5BCC  
                           ??_display_LCD 00BA                            ringbuf_pop@ret 006E  
                           ??_display_dec 00AF                   ?i2_USBTransferOnePacket 002D  
            ??_settings_integrating_reset 0066                     __end_of_USBDeviceInit 33EA  
                       ?_terminal_at_hand 00CB                            __end_of___lmul 5F60  
                ?_RTCC_adjust_time_cursor 0060                            __end_of___wmul 688A  
                          __end_of_d_to_x 6AD6                  ?_RTCC_adjust_time_toggle 0060  
                 __end_ofi2_USBDeviceInit 37C0                    __end_of_ringbuf_delete 6B4A  
                      ??_terminal_at_hand 00D2                                 i2memset@c 002F  
                               i2memset@n 0031                                 i2memset@p 0033  
                          __end_of_memset 68BE                                ?_RTCC_init 002D  
                              ?_RTCC_task 002D                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0123                            __end_of_x_to_d 6BD0  
                          __end_of_strcat 643E                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 649A                            __end_of_strcpy 67E4  
                     start_initialization 5CE6                                CTMU_read@i 0075  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002D  
                             __end_of_ADC 694E                        i2___awdiv@quotient 0033  
                             __end_of_ISR 10F6             USBCtrlTrfRxService@byteToRead 002E  
                             __end_of_OUT 6044                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0093                    ??_RTCC_adjust_time_inc 0093  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0364  
                             _cdc_data_tx 03A4                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 5992  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_task 0164  
                              ?i2___lwdiv 002D           __end_of_USBStdFeatureReqHandler 20C4  
       __end_of_USBCtrlEPAllowStatusStage 5092                     __end_of_software_init 52D8  
                __end_of_USBCtrlEPService 4F02                       settings_auto_stop@i 0093  
                     settings_auto_stop@j 0095                         _integrate_current 3E6E  
                         ___llmod@divisor 0071       __size_of_settings_integrating_reset 025E  
                       __size_of_Auto_cut 0134                               ??_I2C_Start 0063  
                         ___llmod@counter 0075                   settings_led_indicator@i 0093  
                 settings_led_indicator@j 0095                        ?_integrate_current 002D  
               ??_USBCtrlEPAllowDataStage 002E                               ??_ANALOG_IN 0060  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 0068  
                   __end_of_I2C_LCD_Clear 6C5A                    _pBDTEntryEP0OutCurrent 0009  
                            _ctmu_value_m 0115                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 5682  
                        display_LCD@onoff FBD2                settings_auto_stop@str_6105 007B  
                     ringbuf_put_num@temp 0089              settings_led_indicator@i_6124 0094  
                                ??___lmul 0075                               ?_sleep_task 002D  
                                ??___wmul 007A                       _USBStdGetDscHandler 33EA  
                                ??_d_to_x 0068                       ??_integrate_current 006D  
             __size_of_terminal_operation 0272                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01E2                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 10F6                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcat 0064  
                                ??_strcmp 0064                                  ??_strcpy 0064  
                    __end_of_month_length 4796                            _RTCC_from_RTCC 6C5A  
                     __end_of_display_LCD 09E0                    _USBActiveConfiguration 002B  
          __end_of_USBStdGetStatusHandler 55C8                               ?_print_time 00AB  
                 __size_of_integrate_time 0062                       __end_of_display_dec 6188  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0074  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0192              __size_of_USBCtrlTrfInHandler 00C4  
                           __pcstackBANK5 0500                            ??_I2C_LCD_Puts 0066  
                          ??_I2C_LCD_init 0067                              _isdigit$6420 0061  
                    __end_of_ringbuf_init 654A                      ?_USBStdGetDscHandler 002D  
                       __size_of_data_out 0178                                  ?_USB_ISR 002D  
               __end_of_integrate_current 3F6A                      sleep_task@sleep_flag 0133  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
              __end_of_USBWakeFromSuspend 68F0                               sprintf@flag 00A7  
                   RTCC_adjust_time_dec@i 0098                         __size_of_bootload 0042  
                             sprintf@prec 009B                           _USBStallHandler 6638  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 0098  
              __end_of_USBCheckCDCRequest 4A1A                  __end_of_caltime_to_epoch 1E44  
                         millis_timer@cnt 011B                                 _data_item 001D  
                __size_of_USBDeviceAttach 0038                     __size_ofi2_LED_output 0064  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 3D6C                      display_LCD@port_char FA81  
                               __pintcode 1008           __end_of_RTCC_adjust_time_toggle 66FC  
                           __pmediumconst FA50                                  ?___awdiv 0060  
                               __ptext101 6B4A                                 __ptext110 3F6A  
                               __ptext102 6CBC                                 __ptext111 57C6  
                               __ptext103 3538                                 __ptext120 60B2  
                               __ptext112 4150                                 __ptext104 367C  
                               __ptext121 55C8                                 __ptext113 4416  
                               __ptext105 68BE                                 __ptext130 654A  
                               __ptext122 66FC                                 __ptext114 6A58  
                               __ptext106 6A2C                                 __ptext131 5D6C  
                               __ptext123 58FE                                 __ptext115 550E  
                               __ptext107 6638                                 __ptext132 6256  
                               __ptext124 649A                                 __ptext116 33EA  
                               __ptext108 4E34                                 __ptext125 3B50  
                               __ptext117 1E44                                 __ptext109 5BCC  
                               __ptext126 4FCE                                 __ptext118 694E  
                               __ptext127 5092                                 __ptext119 4944  
                               __ptext128 45D8                                 __ptext129 3A2A  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                                  ?___llmod 006D  
                                ?___lwdiv 007C             __size_of_settings_adjust_time 00E0  
                                ?___lwmod 0060                     _is_usb_available$5114 0060  
                  settings_auto_stop@strp 008F                    __end_of_RTCC_from_RTCC 6C74  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 0111                  settings_auto_stop@i_6107 0094  
                             ??_RTCC_init 0091                                  ?_display 0060  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 4796  
                             I2C_Start@rw 0062                                  ?_isdigit 002D  
                        _epoch_to_caltime 2C4A                                  _I2C_Send 6C74  
                                OUT@value 0060                                  _I2C_Stop 6CB2  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_busy 0121  
                        _display_LCD$7034 01CE                          _display_LCD$7035 01D2  
                        _display_LCD$7036 01D6                          _display_LCD$7037 01DA  
                        _display_LCD$7038 01DE                                 _ctmu_task 6C8C  
                                _ADC_init 6B70                     __end_of_I2C_IdleCheck 6BEE  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 64F6  
                     ringbuf_backspace@rb 0068                             ?_I2C_init_old 002D  
                   ??_USBStdGetDscHandler 002D                               _ep_data_out 0004  
                        ___lwdiv@quotient 0081                     terminal_at_hand@value 00D1  
                         ST7032_task@wait 010F                               ??i2___awdiv 0031  
                                ?_sprintf 0083              __size_of_USBCtrlTrfRxService 0118  
             __size_of_settings_auto_stop 0242             USBConfigureEndpoint@direction 002D  
                             ??i2___lwdiv 0031                              i2_LED_output 6256  
                     __size_of_sleep_task 00D2                                 data_out@i 00CB  
                               data_out@p FBDC                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 3E6E  
                   __end_of_LED_indicator 3B50                              _millis_timer 6B4A  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                                  _PIR1bits 000F9E  
                                i2u610_40 465E                                  i2u610_47 4654  
                                _PIR2bits 000FA1                                  i2u612_40 46A0  
                                i2u612_47 4696                                  i2u640_40 34A8  
                                i2u640_47 349E                                  _PIR5bits 000F98  
                                i2u642_40 3504                epoch_to_caltime@year_cache 012D  
                                i2u642_47 34FA                                  i2u639_40 3472  
                                i2u639_47 3468                 USBCtrlEPService@setup_cnt 0049  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                       _display_time_1602 13BE                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26        __end_of_settings_integrating_reset 2594  
              _settings_integrating_reset 2336                _USBDeferINDataStagePackets 0010  
                   terminal_operation@op0 00DD                     terminal_operation@op1 00DF  
                   terminal_operation@op2 00E1                     terminal_operation@op3 00E3  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 051C  
                           ??_timer3_init 0060                             ??_normal_task 00CC  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00B3                               _display_dec 611E  
                    _USBConfigureEndpoint 58FE                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0280                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                          software_init@i 0084            button_timer_interrupt@sw_value 0085  
                                _USB_init 6BEE                                  _USB_task 5B3E  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002D  
                     ??_display_time_1602 00B9                              _RemoteWakeup 000F  
                      I2C_LCD_init@i_4452 0069                         i2___awdiv@divisor 002F  
                                i2_memset 6A58                            ??_I2C_init_old 0060  
                       i2___awdiv@counter 0031                         ??_ringbuf_put_num 0088  
                              ?_ctmu_task 002D                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 667E                             I2C_Start@adrs 0063  
                           ringbuf_put@rb 0068                  ??_settings_led_indicator 0066  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                          _port_button_task 3124  
                               copy_data0 5D56                __size_of_integrate_current 00FC  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 44F8  
                        __size_of_USB_ISR 0006                                  _Auto_cut 38F6  
                    epoch_to_caltime@year 0089             settings_task@item_change_flag 0099  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004C                        __end_of_device_dsc FBD2  
                 ?_USBCtrlTrfSetupHandler 002D                 __end_of_display_time_1602 166E  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                           i2LED_output@b 002E                      __end_of_I2C_LCD_Puts 5B3E  
                                _SetupPkt 000D30                             _weekday_3char FBA4  
                  __size_of_hardware_init 00A2                      __end_of_I2C_LCD_init 5A22  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                  __size_of_settings_task 0220                       __end_of_ringbuf_pop 4FCE  
                     __end_of_ringbuf_num 4330                       __end_of_ringbuf_put 4BC2  
                     __end_of_putUSBUSART 6BB0                               _line_coding 02C9  
                          _integrate_flag 0128                            ??_CDCTxService 0067  
                          _integrate_time 62BA                       __end_of_timer0_init 6772  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 65EC  
                        __size_of_display 0136                                sprintf@len 00A1  
                     __end_of_timer3_init 6A00                                sprintf@val 00A3  
                     __end_of_normal_task 4E34                       display_LCD@str_5583 01BA  
                       i2LED_output@value 002D                                strcat@from 0062  
                                _data_out 2E3C                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 0144                           ___lwdiv@divisor 007E  
                         ___lwdiv@counter 0080                      timer0_init@prescaler 0061  
                                __ptext10 5DF0                                  __ptext11 6B24  
                                __ptext20 27E8                                  __ptext12 5A22  
                                __ptext21 44F8                                  __ptext13 5218  
                __end_ofdisplay_LCD@onoff FBDC                                  __ptext30 3E6E  
                                __ptext22 66C0                                  __ptext14 4330  
                                __ptext31 051C                                  __ptext23 166E  
                                __ptext15 4BC2                                  __ptext40 6A84  
                                __ptext32 13BE                                  __ptext24 1912  
                                __ptext16 4D66                                  __ptext41 5864  
                                __ptext33 67AC                                  __ptext25 3C68  
                                __ptext17 2A2A                                  __ptext50 69D4  
                                __ptext42 61F2                                  __ptext34 611E  
                                __ptext26 3124                                  __ptext18 2594  
                                __ptext51 659C                                  __ptext43 631C  
                                __ptext35 63DE                                  __ptext27 37C0  
                                __ptext19 2336                                  __ptext60 2C4A  
                                __ptext52 6738                                  __ptext44 38F6  
                                __ptext36 697C                                  __ptext28 5F60  
                                __ptext61 4A1A                                  __ptext53 64F6  
                                __ptext45 6854                                  __ptext37 5AB0  
                                __ptext29 62BA                                  __ptext70 68F0  
                                __ptext62 486E                                  __ptext54 6BEE  
                                __ptext46 5FD2                                  __ptext38 2E3C  
                                __ptext71 6C74                                  __ptext63 6AAE  
                                __ptext55 3288                                  __ptext47 69A8  
                                __ptext39 0000                                  __ptext80 5396  
                                __ptext72 6BD0                                  __ptext64 52D8  
                                __ptext56 688A                                  __ptext48 6920  
                                __ptext81 5B3E                                  __ptext73 6AD6  
                                __ptext65 5992                                  __ptext57 67E4  
                                __ptext49 5682                                  __ptext90 2FB4  
                                __ptext82 4AEE                                  __ptext74 6B70  
                                __ptext66 6CA0                                  __ptext58 6188  
                                __ptext91 4796                                  __ptext83 4F02  
                                __ptext75 6C8C                                  __ptext67 6C40  
                                __ptext59 6C26                                  __ptext92 6772  
                                __ptext84 4242                                  __ptext76 3D6C  
                                __ptext68 681C                                  __ptext93 6C5A  
                                __ptext85 6A00                                  __ptext77 10F6  
                                __ptext69 6CB2                                  __ptext94 1BB6  
                                __ptext86 6B90                                  __ptext78 5E72  
                                __ptext95 46B8                                  __ptext87 65EC  
                                __ptext79 5156                                  __ptext96 5724  
                                __ptext88 6C0A                                  __ptext97 5EEA  
                                __ptext89 4C94                                  __ptext98 5452  
                                __ptext99 6BB0                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_cursor 0104  
               __size_of_terminal_at_hand 0060          __size_of_RTCC_adjust_time_toggle 003C  
                                _bootload 667E                          __size_of_sprintf 051C  
                              strcpy@from 0062                      terminal_at_hand@hand 00CD  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 5C5A  
                           __size_of_main 006E                         ?_USBCtrlEPService 002D  
                             data_out@str 00AD                              _month_length 46B8  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0047  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 5092  
                            ??_sleep_task 006A                                  _outPipes 00E6  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 649A                                  int$flags 0059  
                            _ringbuf_init 64F6                                  atoi@sign 0080  
               _USBCtrlEPAllowStatusStage 4FCE          settings_integrating_reset@i_6141 0097  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                                display@i 0065                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0D8C                             _terminal_time 09E0  
                  __end_of_integrate_time 631C                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0012                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_task 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                         display_dec@edit 00AE                             _hardware_init 5682  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                 terminal_task@command_init 0134  
                              _LED_output 5F60                         RTCC_to_caltime@tm 0062  
         __size_of_settings_led_indicator 0254             __size_of_RTCC_adjust_time_dec 02A4  
           __size_of_RTCC_adjust_time_inc 02A4                                  intlevel2 0000  
                               sprintf@ap 009F                                 sprintf@cp 009D  
                               sprintf@sp 0083                        __end_of_sleep_task 4C94  
                  __size_of_USBDeviceInit 0162                             _settings_flag 0129  
                           _settings_item 0020   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 697C  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 694E  
                           _settings_task 2A2A                          ___lwmod@dividend 0060  
            i2USBTransferOnePacket@handle 0032                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                       terminal_at_hand@max 00D0  
                     terminal_at_hand@min 00CF                         ?_caltime_to_epoch 0079  
                       _ringbuf_backspace 5A22                __size_of_display_time_1602 02B0  
                __end_of_epoch_to_caltime 2E3C                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 13BE  
              __end_of_terminal_operation 2336                        __end_of_print_time 5CE6  
              i2USBTransferOnePacket@data 002E                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                      __end_of_I2C_init_old 6CB2  
                  ??_USBConfigureEndpoint 002E                     ?_USBCtrlTrfOutHandler 002D  
                             _ringbuf_pop 4F02                               _ringbuf_num 4242  
                             _ringbuf_put 4AEE                               _putUSBUSART 6B90  
                     _USBCtrlTrfRxService 3B50                               _timer0_init 6738  
                      _USBWakeFromSuspend 68BE                               _timer1_init 659C  
                             _timer3_init 69D4                               _normal_task 4D66  
                          ?_terminal_task 0192                            ?_terminal_time 00D2  
                 _USBStdFeatureReqHandler 1E44                        _USBCheckCDCRequest 4944  
                     _USBCtrlTrfTxService 45D8                           ?_integrate_time 002D  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                  __size_of_software_init 00C0                                  sprintf@c 00A8  
                                sprintf@f 0085                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002D  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 6C0A                 settings_led_indicator@str 0067  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0062  
                       caltime_to_RTCC@tm 0069                         ??_caltime_to_RTCC 006B  
                   ??_USBCtrlTrfInHandler 002E                                  strcpy@cp 0064  
                                strcpy@to 0060                     _USBAlternateInterface 0190  
                         ___lwmod@counter 0064                        terminal_at_hand@tx 00CB  
                     ?_USBCheckCDCRequest 002D                            ?_hardware_init 002D  
               i2USBTransferOnePacket@dir 002D                 i2USBTransferOnePacket@len 0030  
                     USBEnableEndpoint@ep 0038                           _endpoint_number 001E  
                  __size_of_I2C_LCD_Clear 001A              __end_of_settings_adjust_time 45D8  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                ?_USBCtrlEPAllowDataStage 002D                            ?_settings_task 002D  
                          _get_string_usb 65EC                      ?_USBCtrlTrfTxService 002D  
               __end_of_ringbuf_backspace 5AB0              _USBStatusStageTimeoutCounter 0016  
                   __size_of_I2C_LCD_Puts 008E                     __size_of_I2C_LCD_init 0090  
                    ??_USBWakeFromSuspend 0041                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 3124                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr FA7F                          ??_RTCC_from_RTCC 0088  
