

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 12 21:59:55 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   126                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   127                           	dabs	1,0xD00,48,_BDT
   128                           	dabs	1,0xD38,8,_CtrlTrfData
   129                           	dabs	1,0xD30,8,_SetupPkt
   130  0000                     
   131                           	psect	idataCOMRAM
   132  0141A7                     __pidataCOMRAM:
   133                           	opt stack 0
   134                           
   135                           ;initializer for ST7032_cursor@F8640
   136  0141A7  00                 	db	0
   137  0141A8  40                 	db	64
   138                           
   139                           	psect	idataBANK0
   140  0141A4                     __pidataBANK0:
   141                           	opt stack 0
   142                           
   143                           ;initializer for I2C_LCD_SetCursor@F8685
   144  0141A4  00                 	db	0
   145  0141A5  40                 	db	64
   146                           
   147                           ;initializer for epoch_to_caltime@month_cache
   148  0141A6  01                 	db	1
   149                           
   150                           	psect	mediumconst
   151  00FD68                     __pmediumconst:
   152                           	opt stack 0
   153  00FD68  00                 	db	0
   154  00FD69                     _dpowers:
   155                           	opt stack 0
   156  00FD69  0001               	dw	1
   157  00FD6B  000A               	dw	10
   158  00FD6D  0064               	dw	100
   159  00FD6F  03E8               	dw	1000
   160  00FD71  2710               	dw	10000
   161  00FD73                     __end_of_dpowers:
   162                           	opt stack 0
   163  00FD73                     _USB_SD_Ptr:
   164                           	opt stack 0
   165  00FD73  54                 	db	low _sd000
   166  00FD74  FE                 	db	high _sd000
   167  00FD75  BE                 	db	low _sd001
   168  00FD76  FD                 	db	high _sd001
   169  00FD77  F2                 	db	low _sd002
   170  00FD78  FD                 	db	high _sd002
   171  00FD79                     __end_of_USB_SD_Ptr:
   172                           	opt stack 0
   173  00FD79                     _USB_CD_Ptr:
   174                           	opt stack 0
   175  00FD79  7B                 	db	low _configDescriptor1
   176  00FD7A  FD                 	db	high _configDescriptor1
   177  00FD7B                     __end_of_USB_CD_Ptr:
   178                           	opt stack 0
   179  00FD7B                     _configDescriptor1:
   180                           	opt stack 0
   181  00FD7B  09                 	db	9
   182  00FD7C  02                 	db	2
   183  00FD7D  43                 	db	67
   184  00FD7E  00                 	db	0
   185  00FD7F  02                 	db	2
   186  00FD80  01                 	db	1
   187  00FD81  00                 	db	0
   188  00FD82  C0                 	db	192
   189  00FD83  32                 	db	50
   190  00FD84  09                 	db	9
   191  00FD85  04                 	db	4
   192  00FD86  00                 	db	0
   193  00FD87  00                 	db	0
   194  00FD88  01                 	db	1
   195  00FD89  02                 	db	2
   196  00FD8A  02                 	db	2
   197  00FD8B  01                 	db	1
   198  00FD8C  00                 	db	0
   199  00FD8D  05                 	db	5
   200  00FD8E  24                 	db	36
   201  00FD8F  00                 	db	0
   202  00FD90  10                 	db	16
   203  00FD91  01                 	db	1
   204  00FD92  04                 	db	4
   205  00FD93  24                 	db	36
   206  00FD94  02                 	db	2
   207  00FD95  02                 	db	2
   208  00FD96  05                 	db	5
   209  00FD97  24                 	db	36
   210  00FD98  06                 	db	6
   211  00FD99  00                 	db	0
   212  00FD9A  01                 	db	1
   213  00FD9B  05                 	db	5
   214  00FD9C  24                 	db	36
   215  00FD9D  01                 	db	1
   216  00FD9E  00                 	db	0
   217  00FD9F  01                 	db	1
   218  00FDA0  07                 	db	7
   219  00FDA1  05                 	db	5
   220  00FDA2  81                 	db	129
   221  00FDA3  03                 	db	3
   222  00FDA4  08                 	db	8
   223  00FDA5  00                 	db	0
   224  00FDA6  02                 	db	2
   225  00FDA7  09                 	db	9
   226  00FDA8  04                 	db	4
   227  00FDA9  01                 	db	1
   228  00FDAA  00                 	db	0
   229  00FDAB  02                 	db	2
   230  00FDAC  0A                 	db	10
   231  00FDAD  00                 	db	0
   232  00FDAE  00                 	db	0
   233  00FDAF  00                 	db	0
   234  00FDB0  07                 	db	7
   235  00FDB1  05                 	db	5
   236  00FDB2  02                 	db	2
   237  00FDB3  02                 	db	2
   238  00FDB4  40                 	db	64
   239  00FDB5  00                 	db	0
   240  00FDB6  00                 	db	0
   241  00FDB7  07                 	db	7
   242  00FDB8  05                 	db	5
   243  00FDB9  82                 	db	130
   244  00FDBA  02                 	db	2
   245  00FDBB  40                 	db	64
   246  00FDBC  00                 	db	0
   247  00FDBD  00                 	db	0
   248  00FDBE                     __end_of_configDescriptor1:
   249                           	opt stack 0
   250  00FDBE                     _sd001:
   251                           	opt stack 0
   252  00FDBE  34                 	db	52
   253  00FDBF  03                 	db	3
   254  00FDC0  004D               	dw	77
   255  00FDC2  0069               	dw	105
   256  00FDC4  0063               	dw	99
   257  00FDC6  0072               	dw	114
   258  00FDC8  006F               	dw	111
   259  00FDCA  0063               	dw	99
   260  00FDCC  0068               	dw	104
   261  00FDCE  0069               	dw	105
   262  00FDD0  0070               	dw	112
   263  00FDD2  0020               	dw	32
   264  00FDD4  0054               	dw	84
   265  00FDD6  0065               	dw	101
   266  00FDD8  0063               	dw	99
   267  00FDDA  0068               	dw	104
   268  00FDDC  006E               	dw	110
   269  00FDDE  006F               	dw	111
   270  00FDE0  006C               	dw	108
   271  00FDE2  006F               	dw	111
   272  00FDE4  0067               	dw	103
   273  00FDE6  0079               	dw	121
   274  00FDE8  0020               	dw	32
   275  00FDEA  0049               	dw	73
   276  00FDEC  006E               	dw	110
   277  00FDEE  0063               	dw	99
   278  00FDF0  002E               	dw	46
   279  00FDF2                     __end_of_sd001:
   280                           	opt stack 0
   281  00FDF2                     _sd002:
   282                           	opt stack 0
   283  00FDF2  34                 	db	52
   284  00FDF3  03                 	db	3
   285  00FDF4  0043               	dw	67
   286  00FDF6  0044               	dw	68
   287  00FDF8  0043               	dw	67
   288  00FDFA  0020               	dw	32
   289  00FDFC  0052               	dw	82
   290  00FDFE  0053               	dw	83
   291  00FE00  002D               	dw	45
   292  00FE02  0032               	dw	50
   293  00FE04  0033               	dw	51
   294  00FE06  0032               	dw	50
   295  00FE08  0020               	dw	32
   296  00FE0A  0045               	dw	69
   297  00FE0C  006D               	dw	109
   298  00FE0E  0075               	dw	117
   299  00FE10  006C               	dw	108
   300  00FE12  0061               	dw	97
   301  00FE14  0074               	dw	116
   302  00FE16  0069               	dw	105
   303  00FE18  006F               	dw	111
   304  00FE1A  006E               	dw	110
   305  00FE1C  0020               	dw	32
   306  00FE1E  0044               	dw	68
   307  00FE20  0065               	dw	101
   308  00FE22  006D               	dw	109
   309  00FE24  006F               	dw	111
   310  00FE26                     __end_of_sd002:
   311                           	opt stack 0
   312  00FE26                     _weekday_3char:
   313                           	opt stack 0
   314  00FE26  53                 	db	83
   315  00FE27  55                 	db	85
   316  00FE28  4E                 	db	78
   317  00FE29  00                 	db	0
   318  00FE2A  4D                 	db	77
   319  00FE2B  4F                 	db	79
   320  00FE2C  4E                 	db	78
   321  00FE2D  00                 	db	0
   322  00FE2E  54                 	db	84
   323  00FE2F  55                 	db	85
   324  00FE30  45                 	db	69
   325  00FE31  00                 	db	0
   326  00FE32  57                 	db	87
   327  00FE33  45                 	db	69
   328  00FE34  44                 	db	68
   329  00FE35  00                 	db	0
   330  00FE36  54                 	db	84
   331  00FE37  48                 	db	72
   332  00FE38  55                 	db	85
   333  00FE39  00                 	db	0
   334  00FE3A  46                 	db	70
   335  00FE3B  52                 	db	82
   336  00FE3C  49                 	db	73
   337  00FE3D  00                 	db	0
   338  00FE3E  53                 	db	83
   339  00FE3F  41                 	db	65
   340  00FE40  54                 	db	84
   341  00FE41  00                 	db	0
   342  00FE42                     __end_of_weekday_3char:
   343                           	opt stack 0
   344  00FE42                     _device_dsc:
   345                           	opt stack 0
   346  00FE42  12                 	db	18
   347  00FE43  01                 	db	1
   348  00FE44  0200               	dw	512
   349  00FE46  02                 	db	2
   350  00FE47  00                 	db	0
   351  00FE48  00                 	db	0
   352  00FE49  08                 	db	8
   353  00FE4A  04D8               	dw	1240
   354  00FE4C  000A               	dw	10
   355  00FE4E  0100               	dw	256
   356  00FE50  01                 	db	1
   357  00FE51  02                 	db	2
   358  00FE52  00                 	db	0
   359  00FE53  01                 	db	1
   360  00FE54                     __end_of_device_dsc:
   361                           	opt stack 0
   362  00FE54                     _sd000:
   363                           	opt stack 0
   364  00FE54  04                 	db	4
   365  00FE55  03                 	db	3
   366  00FE56  0409               	dw	1033
   367  00FE58                     __end_of_sd000:
   368                           	opt stack 0
   369  0000                     _ANCON0	set	3912
   370  0000                     _ANCON1	set	3913
   371  0000                     _PADCFG1bits	set	3900
   372  0000                     _RTCCAL	set	3902
   373  0000                     _RTCCFGbits	set	3903
   374  0000                     _RTCVALH	set	3899
   375  0000                     _RTCVALL	set	3898
   376  0000                     _T5CONbits	set	3874
   377  0000                     _UADDR	set	3896
   378  0000                     _UCFG	set	3897
   379  0000                     _UEIE	set	3895
   380  0000                     _UEP0bits	set	3878
   381  0000                     _UIE	set	3894
   382  0000                     _UIEbits	set	3894
   383  0000                     _UEP0	set	3878
   384  0000                     _UEP1	set	3879
   385  0000                     _ADRES	set	4035
   386  0000                     _ADCON0bits	set	4034
   387  0000                     _ADCON1bits	set	4033
   388  0000                     _BAUDCON1bits	set	3966
   389  0000                     _CTMUCONH	set	4019
   390  0000                     _CTMUCONHbits	set	4019
   391  0000                     _CTMUCONL	set	4018
   392  0000                     _CTMUCONLbits	set	4018
   393  0000                     _CTMUICON	set	4017
   394  0000                     _EECON2	set	4007
   395  0000                     _INTCON2bits	set	4081
   396  0000                     _INTCONbits	set	4082
   397  0000                     _IPR1bits	set	3999
   398  0000                     _IPR2bits	set	4002
   399  0000                     _IPR5bits	set	3993
   400  0000                     _OSCCONbits	set	4051
   401  0000                     _OSCTUNEbits	set	3995
   402  0000                     _PIE1bits	set	3997
   403  0000                     _PIE2bits	set	4000
   404  0000                     _PIE5bits	set	3985
   405  0000                     _PIR1bits	set	3998
   406  0000                     _PIR2bits	set	4001
   407  0000                     _PIR5bits	set	3992
   408  0000                     _RCONbits	set	4048
   409  0000                     _RCREG1	set	4015
   410  0000                     _RCSTA1bits	set	4012
   411  0000                     _SPBRG1	set	4016
   412  0000                     _SPBRGH1	set	3967
   413  0000                     _SSP1ADD	set	4040
   414  0000                     _SSP1BUF	set	4041
   415  0000                     _SSP1CON1	set	4038
   416  0000                     _SSP1CON1bits	set	4038
   417  0000                     _SSP1CON2	set	4037
   418  0000                     _SSP1CON2bits	set	4037
   419  0000                     _SSP1STAT	set	4039
   420  0000                     _SSP1STATbits	set	4039
   421  0000                     _SSPBUF	set	4041
   422  0000                     _T0CONbits	set	4053
   423  0000                     _T1CONbits	set	4045
   424  0000                     _T3CONbits	set	3961
   425  0000                     _TMR1H	set	4047
   426  0000                     _TRISA	set	3986
   427  0000                     _TRISB	set	3987
   428  0000                     _TRISC	set	3988
   429  0000                     _TXREG1	set	4014
   430  0000                     _TXSTA1bits	set	4013
   431  0000                     _UCON	set	3941
   432  0000                     _UCONbits	set	3941
   433  0000                     _UEIR	set	3939
   434  0000                     _UIR	set	3938
   435  0000                     _UIRbits	set	3938
   436  0000                     _USTAT	set	3940
   437  0000                     _BCL1IF	set	32011
   438  0000                     _LATB2	set	31826
   439  0000                     _SSP1IF	set	31987
   440  00FE58                     STR_43:
   441  00FE58  09                 	db	9
   442  00FE59  2A                 	db	42
   443  00FE5A  2A                 	db	42
   444  00FE5B  2A                 	db	42
   445  00FE5C  2A                 	db	42
   446  00FE5D  2A                 	db	42
   447  00FE5E  2A                 	db	42
   448  00FE5F  2A                 	db	42
   449  00FE60  2A                 	db	42
   450  00FE61  2A                 	db	42
   451  00FE62  2A                 	db	42
   452  00FE63  2A                 	db	42
   453  00FE64  2A                 	db	42
   454  00FE65  2A                 	db	42
   455  00FE66  2A                 	db	42
   456  00FE67  2A                 	db	42
   457  00FE68  2A                 	db	42
   458  00FE69  2A                 	db	42
   459  00FE6A  2A                 	db	42
   460  00FE6B  2A                 	db	42
   461  00FE6C  2A                 	db	42
   462  00FE6D  2A                 	db	42
   463  00FE6E  2A                 	db	42
   464  00FE6F  2A                 	db	42
   465  00FE70  2A                 	db	42
   466  00FE71  2A                 	db	42
   467  00FE72  2A                 	db	42
   468  00FE73  2A                 	db	42
   469  00FE74  2A                 	db	42
   470  00FE75  2A                 	db	42
   471  00FE76  2A                 	db	42
   472  00FE77  0A                 	db	10
   473  00FE78  09                 	db	9
   474  00FE79  2A                 	db	42
   475  00FE7A  2A                 	db	42
   476  00FE7B  2A                 	db	42
   477  00FE7C  2A                 	db	42
   478  00FE7D  20                 	db	32
   479  00FE7E  50                 	db	80	;'P'
   480  00FE7F  49                 	db	73	;'I'
   481  00FE80  43                 	db	67	;'C'
   482  00FE81  31                 	db	49	;'1'
   483  00FE82  38                 	db	56	;'8'
   484  00FE83  46                 	db	70	;'F'
   485  00FE84  32                 	db	50	;'2'
   486  00FE85  37                 	db	55	;'7'
   487  00FE86  4A                 	db	74	;'J'
   488  00FE87  35                 	db	53	;'5'
   489  00FE88  33                 	db	51	;'3'
   490  00FE89  20                 	db	32
   491  00FE8A  74                 	db	116	;'t'
   492  00FE8B  65                 	db	101	;'e'
   493  00FE8C  6D                 	db	109	;'m'
   494  00FE8D  70                 	db	112	;'p'
   495  00FE8E  6C                 	db	108	;'l'
   496  00FE8F  61                 	db	97	;'a'
   497  00FE90  74                 	db	116	;'t'
   498  00FE91  65                 	db	101	;'e'
   499  00FE92  20                 	db	32
   500  00FE93  2A                 	db	42
   501  00FE94  2A                 	db	42
   502  00FE95  2A                 	db	42
   503  00FE96  2A                 	db	42
   504  00FE97  0A                 	db	10
   505  00FE98  09                 	db	9
   506  00FE99  2A                 	db	42
   507  00FE9A  2A                 	db	42
   508  00FE9B  2A                 	db	42
   509  00FE9C  2A                 	db	42
   510  00FE9D  20                 	db	32
   511  00FE9E  4D                 	db	77	;'M'
   512  00FE9F  61                 	db	97	;'a'
   513  00FEA0  64                 	db	100	;'d'
   514  00FEA1  65                 	db	101	;'e'
   515  00FEA2  20                 	db	32
   516  00FEA3  62                 	db	98	;'b'
   517  00FEA4  79                 	db	121	;'y'
   518  00FEA5  20                 	db	32
   519  00FEA6  40                 	db	64	;'@'
   520  00FEA7  52                 	db	82	;'R'
   521  00FEA8  79                 	db	121	;'y'
   522  00FEA9  6F                 	db	111	;'o'
   523  00FEAA  6B                 	db	107	;'k'
   524  00FEAB  65                 	db	101	;'e'
   525  00FEAC  72                 	db	114	;'r'
   526  00FEAD  69                 	db	105	;'i'
   527  00FEAE  31                 	db	49	;'1'
   528  00FEAF  34                 	db	52	;'4'
   529  00FEB0  20                 	db	32
   530  00FEB1  20                 	db	32
   531  00FEB2  20                 	db	32
   532  00FEB3  2A                 	db	42
   533  00FEB4  2A                 	db	42
   534  00FEB5  2A                 	db	42
   535  00FEB6  2A                 	db	42
   536  00FEB7  0A                 	db	10
   537  00FEB8  09                 	db	9
   538  00FEB9  2A                 	db	42
   539  00FEBA  2A                 	db	42
   540  00FEBB  2A                 	db	42
   541  00FEBC  2A                 	db	42
   542  00FEBD  2A                 	db	42
   543  00FEBE  2A                 	db	42
   544  00FEBF  2A                 	db	42
   545  00FEC0  2A                 	db	42
   546  00FEC1  2A                 	db	42
   547  00FEC2  2A                 	db	42
   548  00FEC3  2A                 	db	42
   549  00FEC4  2A                 	db	42
   550  00FEC5  2A                 	db	42
   551  00FEC6  2A                 	db	42
   552  00FEC7  2A                 	db	42
   553  00FEC8  2A                 	db	42
   554  00FEC9  2A                 	db	42
   555  00FECA  2A                 	db	42
   556  00FECB  2A                 	db	42
   557  00FECC  2A                 	db	42
   558  00FECD  2A                 	db	42
   559  00FECE  2A                 	db	42
   560  00FECF  2A                 	db	42
   561  00FED0  2A                 	db	42
   562  00FED1  2A                 	db	42
   563  00FED2  2A                 	db	42
   564  00FED3  2A                 	db	42
   565  00FED4  2A                 	db	42
   566  00FED5  2A                 	db	42
   567  00FED6  2A                 	db	42
   568  00FED7  0A                 	db	10
   569  00FED8  0A                 	db	10
   570  00FED9  09                 	db	9
   571  00FEDA  70                 	db	112	;'p'
   572  00FEDB  72                 	db	114	;'r'
   573  00FEDC  69                 	db	105	;'i'
   574  00FEDD  6E                 	db	110	;'n'
   575  00FEDE  74                 	db	116	;'t'
   576  00FEDF  5F                 	db	95	;'_'
   577  00FEE0  74                 	db	116	;'t'
   578  00FEE1  69                 	db	105	;'i'
   579  00FEE2  6D                 	db	109	;'m'
   580  00FEE3  65                 	db	101	;'e'
   581  00FEE4  28                 	db	40
   582  00FEE5  74                 	db	116	;'t'
   583  00FEE6  29                 	db	41
   584  00FEE7  0A                 	db	10
   585  00FEE8  09                 	db	9
   586  00FEE9  61                 	db	97	;'a'
   587  00FEEA  64                 	db	100	;'d'
   588  00FEEB  6A                 	db	106	;'j'
   589  00FEEC  75                 	db	117	;'u'
   590  00FEED  73                 	db	115	;'s'
   591  00FEEE  74                 	db	116	;'t'
   592  00FEEF  5F                 	db	95	;'_'
   593  00FEF0  74                 	db	116	;'t'
   594  00FEF1  69                 	db	105	;'i'
   595  00FEF2  6D                 	db	109	;'m'
   596  00FEF3  65                 	db	101	;'e'
   597  00FEF4  28                 	db	40
   598  00FEF5  61                 	db	97	;'a'
   599  00FEF6  74                 	db	116	;'t'
   600  00FEF7  29                 	db	41
   601  00FEF8  20                 	db	32
   602  00FEF9  5B                 	db	91	;'['
   603  00FEFA  68                 	db	104	;'h'
   604  00FEFB  61                 	db	97	;'a'
   605  00FEFC  6E                 	db	110	;'n'
   606  00FEFD  64                 	db	100	;'d'
   607  00FEFE  3A                 	db	58	;':'
   608  00FEFF  79                 	db	121	;'y'
   609  00FF00  2C                 	db	44
   610  00FF01  4D                 	db	77	;'M'
   611  00FF02  2C                 	db	44
   612  00FF03  64                 	db	100	;'d'
   613  00FF04  2C                 	db	44
   614  00FF05  68                 	db	104	;'h'
   615  00FF06  2C                 	db	44
   616  00FF07  6D                 	db	109	;'m'
   617  00FF08  2C                 	db	44
   618  00FF09  73                 	db	115	;'s'
   619  00FF0A  5D                 	db	93	;']'
   620  00FF0B  20                 	db	32
   621  00FF0C  5B                 	db	91	;'['
   622  00FF0D  76                 	db	118	;'v'
   623  00FF0E  61                 	db	97	;'a'
   624  00FF0F  6C                 	db	108	;'l'
   625  00FF10  75                 	db	117	;'u'
   626  00FF11  65                 	db	101	;'e'
   627  00FF12  28                 	db	40
   628  00FF13  64                 	db	100	;'d'
   629  00FF14  65                 	db	101	;'e'
   630  00FF15  63                 	db	99	;'c'
   631  00FF16  69                 	db	105	;'i'
   632  00FF17  6D                 	db	109	;'m'
   633  00FF18  61                 	db	97	;'a'
   634  00FF19  6C                 	db	108	;'l'
   635  00FF1A  29                 	db	41
   636  00FF1B  5D                 	db	93	;']'
   637  00FF1C  0A                 	db	10
   638  00FF1D  0A                 	db	10
   639  00FF1E  09                 	db	9
   640  00FF1F  66                 	db	102	;'f'
   641  00FF20  6F                 	db	111	;'o'
   642  00FF21  72                 	db	114	;'r'
   643  00FF22  20                 	db	32
   644  00FF23  44                 	db	68	;'D'
   645  00FF24  65                 	db	101	;'e'
   646  00FF25  76                 	db	118	;'v'
   647  00FF26  65                 	db	101	;'e'
   648  00FF27  6C                 	db	108	;'l'
   649  00FF28  6F                 	db	111	;'o'
   650  00FF29  70                 	db	112	;'p'
   651  00FF2A  70                 	db	112	;'p'
   652  00FF2B  65                 	db	101	;'e'
   653  00FF2C  72                 	db	114	;'r'
   654  00FF2D  0A                 	db	10
   655  00FF2E  09                 	db	9
   656  00FF2F  52                 	db	82	;'R'
   657  00FF30  45                 	db	69	;'E'
   658  00FF31  53                 	db	83	;'S'
   659  00FF32  45                 	db	69	;'E'
   660  00FF33  54                 	db	84	;'T'
   661  00FF34  28                 	db	40
   662  00FF35  29                 	db	41
   663  00FF36  3B                 	db	59	;';'
   664  00FF37  0A                 	db	10
   665  00FF38  09                 	db	9
   666  00FF39  62                 	db	98	;'b'
   667  00FF3A  6F                 	db	111	;'o'
   668  00FF3B  6F                 	db	111	;'o'
   669  00FF3C  74                 	db	116	;'t'
   670  00FF3D  6C                 	db	108	;'l'
   671  00FF3E  6F                 	db	111	;'o'
   672  00FF3F  61                 	db	97	;'a'
   673  00FF40  64                 	db	100	;'d'
   674  00FF41  0A                 	db	10
   675  00FF42  00                 	db	0
   676  00FF43                     STR_23:
   677  00FF43  09                 	db	9
   678  00FF44  32                 	db	50	;'2'
   679  00FF45  30                 	db	48	;'0'
   680  00FF46  25                 	db	37
   681  00FF47  30                 	db	48	;'0'
   682  00FF48  32                 	db	50	;'2'
   683  00FF49  64                 	db	100	;'d'
   684  00FF4A  2F                 	db	47
   685  00FF4B  25                 	db	37
   686  00FF4C  30                 	db	48	;'0'
   687  00FF4D  32                 	db	50	;'2'
   688  00FF4E  64                 	db	100	;'d'
   689  00FF4F  2F                 	db	47
   690  00FF50  25                 	db	37
   691  00FF51  30                 	db	48	;'0'
   692  00FF52  32                 	db	50	;'2'
   693  00FF53  64                 	db	100	;'d'
   694  00FF54  28                 	db	40
   695  00FF55  25                 	db	37
   696  00FF56  73                 	db	115	;'s'
   697  00FF57  29                 	db	41
   698  00FF58  25                 	db	37
   699  00FF59  30                 	db	48	;'0'
   700  00FF5A  32                 	db	50	;'2'
   701  00FF5B  64                 	db	100	;'d'
   702  00FF5C  3A                 	db	58	;':'
   703  00FF5D  25                 	db	37
   704  00FF5E  30                 	db	48	;'0'
   705  00FF5F  32                 	db	50	;'2'
   706  00FF60  64                 	db	100	;'d'
   707  00FF61  2D                 	db	45
   708  00FF62  25                 	db	37
   709  00FF63  30                 	db	48	;'0'
   710  00FF64  32                 	db	50	;'2'
   711  00FF65  64                 	db	100	;'d'
   712  00FF66  0A                 	db	10
   713  00FF67  00                 	db	0
   714  00FF68                     STR_28:
   715  00FF68  61                 	db	97	;'a'
   716  00FF69  64                 	db	100	;'d'
   717  00FF6A  6A                 	db	106	;'j'
   718  00FF6B  75                 	db	117	;'u'
   719  00FF6C  73                 	db	115	;'s'
   720  00FF6D  74                 	db	116	;'t'
   721  00FF6E  5F                 	db	95	;'_'
   722  00FF6F  74                 	db	116	;'t'
   723  00FF70  69                 	db	105	;'i'
   724  00FF71  6D                 	db	109	;'m'
   725  00FF72  65                 	db	101	;'e'
   726  00FF73  00                 	db	0
   727  00FF74                     STR_25:
   728  00FF74  70                 	db	112	;'p'
   729  00FF75  72                 	db	114	;'r'
   730  00FF76  69                 	db	105	;'i'
   731  00FF77  6E                 	db	110	;'n'
   732  00FF78  74                 	db	116	;'t'
   733  00FF79  5F                 	db	95	;'_'
   734  00FF7A  74                 	db	116	;'t'
   735  00FF7B  69                 	db	105	;'i'
   736  00FF7C  6D                 	db	109	;'m'
   737  00FF7D  65                 	db	101	;'e'
   738  00FF7E  00                 	db	0
   739  00FF7F                     STR_46:
   740  00FF7F  31                 	db	49	;'1'
   741  00FF80  38                 	db	56	;'8'
   742  00FF81  46                 	db	70	;'F'
   743  00FF82  32                 	db	50	;'2'
   744  00FF83  37                 	db	55	;'7'
   745  00FF84  4A                 	db	74	;'J'
   746  00FF85  35                 	db	53	;'5'
   747  00FF86  33                 	db	51	;'3'
   748  00FF87  00                 	db	0
   749  00FF88                     STR_44:
   750  00FF88  52                 	db	82	;'R'
   751  00FF89  45                 	db	69	;'E'
   752  00FF8A  53                 	db	83	;'S'
   753  00FF8B  45                 	db	69	;'E'
   754  00FF8C  54                 	db	84	;'T'
   755  00FF8D  28                 	db	40
   756  00FF8E  29                 	db	41
   757  00FF8F  3B                 	db	59	;';'
   758  00FF90  00                 	db	0
   759  00FF91                     STR_45:
   760  00FF91  62                 	db	98	;'b'
   761  00FF92  6F                 	db	111	;'o'
   762  00FF93  6F                 	db	111	;'o'
   763  00FF94  74                 	db	116	;'t'
   764  00FF95  6C                 	db	108	;'l'
   765  00FF96  6F                 	db	111	;'o'
   766  00FF97  61                 	db	97	;'a'
   767  00FF98  64                 	db	100	;'d'
   768  00FF99  00                 	db	0
   769  00FF9A                     STR_47:
   770  00FF9A  54                 	db	84	;'T'
   771  00FF9B  65                 	db	101	;'e'
   772  00FF9C  6D                 	db	109	;'m'
   773  00FF9D  70                 	db	112	;'p'
   774  00FF9E  6C                 	db	108	;'l'
   775  00FF9F  61                 	db	97	;'a'
   776  00FFA0  74                 	db	116	;'t'
   777  00FFA1  65                 	db	101	;'e'
   778  00FFA2  00                 	db	0
   779  00FFA3                     STR_15:
   780  00FFA3  20                 	db	32
   781  00FFA4  20                 	db	32
   782  00FFA5  20                 	db	32
   783  00FFA6  20                 	db	32
   784  00FFA7  20                 	db	32
   785  00FFA8  20                 	db	32
   786  00FFA9  20                 	db	32
   787  00FFAA  20                 	db	32
   788  00FFAB  00                 	db	0
   789  00FFAC                     STR_24:
   790  00FFAC  09                 	db	9
   791  00FFAD  65                 	db	101	;'e'
   792  00FFAE  72                 	db	114	;'r'
   793  00FFAF  72                 	db	114	;'r'
   794  00FFB0  6F                 	db	111	;'o'
   795  00FFB1  72                 	db	114	;'r'
   796  00FFB2  0A                 	db	10
   797  00FFB3  00                 	db	0
   798  00FFB4                     STR_48:
   799  00FFB4  28                 	db	40
   800  00FFB5  6E                 	db	110	;'n'
   801  00FFB6  75                 	db	117	;'u'
   802  00FFB7  6C                 	db	108	;'l'
   803  00FFB8  6C                 	db	108	;'l'
   804  00FFB9  29                 	db	41
   805  00FFBA  00                 	db	0
   806  00FFBB                     STR_40:
   807  00FFBB  73                 	db	115	;'s'
   808  00FFBC  65                 	db	101	;'e'
   809  00FFBD  63                 	db	99	;'c'
   810  00FFBE  6F                 	db	111	;'o'
   811  00FFBF  6E                 	db	110	;'n'
   812  00FFC0  64                 	db	100	;'d'
   813  00FFC1  00                 	db	0
   814  00FFC2                     STR_38:
   815  00FFC2  6D                 	db	109	;'m'
   816  00FFC3  69                 	db	105	;'i'
   817  00FFC4  6E                 	db	110	;'n'
   818  00FFC5  75                 	db	117	;'u'
   819  00FFC6  74                 	db	116	;'t'
   820  00FFC7  65                 	db	101	;'e'
   821  00FFC8  00                 	db	0
   822  00FFC9                     STR_32:
   823  00FFC9  6D                 	db	109	;'m'
   824  00FFCA  6F                 	db	111	;'o'
   825  00FFCB  6E                 	db	110	;'n'
   826  00FFCC  74                 	db	116	;'t'
   827  00FFCD  68                 	db	104	;'h'
   828  00FFCE  00                 	db	0
   829  00FFCF                     STR_41:
   830  00FFCF  68                 	db	104	;'h'
   831  00FFD0  65                 	db	101	;'e'
   832  00FFD1  6C                 	db	108	;'l'
   833  00FFD2  70                 	db	112	;'p'
   834  00FFD3  00                 	db	0
   835  00FFD4                     STR_30:
   836  00FFD4  79                 	db	121	;'y'
   837  00FFD5  65                 	db	101	;'e'
   838  00FFD6  61                 	db	97	;'a'
   839  00FFD7  72                 	db	114	;'r'
   840  00FFD8  00                 	db	0
   841  00FFD9                     STR_36:
   842  00FFD9  68                 	db	104	;'h'
   843  00FFDA  6F                 	db	111	;'o'
   844  00FFDB  75                 	db	117	;'u'
   845  00FFDC  72                 	db	114	;'r'
   846  00FFDD  00                 	db	0
   847  00FFDE                     STR_1:
   848  00FFDE  25                 	db	37
   849  00FFDF  30                 	db	48	;'0'
   850  00FFE0  32                 	db	50	;'2'
   851  00FFE1  64                 	db	100	;'d'
   852  00FFE2  00                 	db	0
   853  00FFE3                     STR_19:
   854  00FFE3  08                 	db	8
   855  00FFE4  20                 	db	32
   856  00FFE5  08                 	db	8
   857  00FFE6  00                 	db	0
   858  00FFE7                     STR_34:
   859  00FFE7  64                 	db	100	;'d'
   860  00FFE8  61                 	db	97	;'a'
   861  00FFE9  79                 	db	121	;'y'
   862  00FFEA  00                 	db	0
   863  00FFEB                     STR_27:
   864  00FFEB  61                 	db	97	;'a'
   865  00FFEC  74                 	db	116	;'t'
   866  00FFED  00                 	db	0
   867  00FFEE                     STR_42:
   868  00FFEE  3F                 	db	63	;'?'
   869  00FFEF  00                 	db	0
   870  00FFF0                     STR_31:
   871  00FFF0  4D                 	db	77	;'M'
   872  00FFF1  00                 	db	0
   873  00FFF2                     STR_37:
   874  00FFF2  6D                 	db	109	;'m'
   875  00FFF3  00                 	db	0
   876  00FFF4                     STR_39:
   877  00FFF4  73                 	db	115	;'s'
   878  00FFF5  00                 	db	0
   879  00FFF6  28                 	db	40
   880  00FFF7  00                 	db	0
   881  00FFF8                     STR_9:
   882  00FFF8  2D                 	db	45
   883  00FFF9  00                 	db	0
   884  00FFFA                     STR_4:
   885  00FFFA  2F                 	db	47
   886  00FFFB  00                 	db	0
   887  00FFFC                     STR_7:
   888  00FFFC  3A                 	db	58	;':'
   889  00FFFD  00                 	db	0
   890  0000                     
   891                           ; #config settings
   892  00FFFE  00                 	db	0	; dummy byte at the end
   893  0000                     
   894                           	psect	cinit
   895  013066                     __pcinit:
   896                           	opt stack 0
   897  013066                     start_initialization:
   898                           	opt stack 0
   899  013066                     __initialization:
   900                           	opt stack 0
   901                           
   902                           ; Clear objects allocated to BIGRAMl (1300 bytes)
   903  013066  EE05  F0C8         	lfsr	0,__pbssBIGRAMl
   904  01306A  EE15 F014          	lfsr	1,1300
   905  01306E                     clear_0:
   906  01306E  6AEE               	clrf	postinc0,c
   907  013070  50E5               	movf	postdec1,w,c
   908  013072  50E1               	movf	fsr1l,w,c
   909  013074  E1FC               	bnz	clear_0
   910  013076  50E2               	movf	fsr1h,w,c
   911  013078  E1FA               	bnz	clear_0
   912                           
   913                           ; Clear objects allocated to BANK5 (200 bytes)
   914  01307A  EE05  F000         	lfsr	0,__pbssBANK5
   915  01307E  0EC8               	movlw	200
   916  013080                     clear_1:
   917  013080  6AEE               	clrf	postinc0,c
   918  013082  06E8               	decf	wreg,f,c
   919  013084  E1FD               	bnz	clear_1
   920                           
   921                           ; Clear objects allocated to BANK4 (100 bytes)
   922  013086  EE04  F000         	lfsr	0,__pbssBANK4
   923  01308A  0E64               	movlw	100
   924  01308C                     clear_2:
   925  01308C  6AEE               	clrf	postinc0,c
   926  01308E  06E8               	decf	wreg,f,c
   927  013090  E1FD               	bnz	clear_2
   928                           
   929                           ; Clear objects allocated to BANK3 (164 bytes)
   930  013092  EE03  F000         	lfsr	0,__pbssBANK3
   931  013096  0EA4               	movlw	164
   932  013098                     clear_3:
   933  013098  6AEE               	clrf	postinc0,c
   934  01309A  06E8               	decf	wreg,f,c
   935  01309C  E1FD               	bnz	clear_3
   936                           
   937                           ; Clear objects allocated to BANK2 (242 bytes)
   938  01309E  EE02  F000         	lfsr	0,__pbssBANK2
   939  0130A2  0EF2               	movlw	242
   940  0130A4                     clear_4:
   941  0130A4  6AEE               	clrf	postinc0,c
   942  0130A6  06E8               	decf	wreg,f,c
   943  0130A8  E1FD               	bnz	clear_4
   944                           
   945                           ; Clear objects allocated to BANK1 (139 bytes)
   946  0130AA  EE01  F000         	lfsr	0,__pbssBANK1
   947  0130AE  0E8B               	movlw	139
   948  0130B0                     clear_5:
   949  0130B0  6AEE               	clrf	postinc0,c
   950  0130B2  06E8               	decf	wreg,f,c
   951  0130B4  E1FD               	bnz	clear_5
   952                           
   953                           ; Clear objects allocated to BANK0 (51 bytes)
   954  0130B6  EE00  F0C9         	lfsr	0,__pbssBANK0
   955  0130BA  0E33               	movlw	51
   956  0130BC                     clear_6:
   957  0130BC  6AEE               	clrf	postinc0,c
   958  0130BE  06E8               	decf	wreg,f,c
   959  0130C0  E1FD               	bnz	clear_6
   960                           
   961                           ; Clear objects allocated to COMRAM (41 bytes)
   962  0130C2  EE00  F02D         	lfsr	0,__pbssCOMRAM
   963  0130C6  0E29               	movlw	41
   964  0130C8                     clear_7:
   965  0130C8  6AEE               	clrf	postinc0,c
   966  0130CA  06E8               	decf	wreg,f,c
   967  0130CC  E1FD               	bnz	clear_7
   968                           
   969                           ; Initialize objects allocated to BANK0 (3 bytes)
   970                           ; load TBLPTR registers with __pidataBANK0
   971  0130CE  0EA4               	movlw	low __pidataBANK0
   972  0130D0  6EF6               	movwf	tblptrl,c
   973  0130D2  0E41               	movlw	high __pidataBANK0
   974  0130D4  6EF7               	movwf	tblptrh,c
   975  0130D6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   976  0130D8  6EF8               	movwf	tblptru,c
   977  0130DA  0009               	tblrd		*+	;fetch initializer
   978  0130DC  CFF5 F0FC          	movff	tablat,__pdataBANK0
   979  0130E0  0009               	tblrd		*+	;fetch initializer
   980  0130E2  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   981  0130E6  0009               	tblrd		*+	;fetch initializer
   982  0130E8  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   983                           
   984                           ; Initialize objects allocated to COMRAM (2 bytes)
   985                           ; load TBLPTR registers with __pidataCOMRAM
   986  0130EC  0EA7               	movlw	low __pidataCOMRAM
   987  0130EE  6EF6               	movwf	tblptrl,c
   988  0130F0  0E41               	movlw	high __pidataCOMRAM
   989  0130F2  6EF7               	movwf	tblptrh,c
   990  0130F4  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   991  0130F6  6EF8               	movwf	tblptru,c
   992  0130F8  0009               	tblrd		*+	;fetch initializer
   993  0130FA  CFF5 F056          	movff	tablat,__pdataCOMRAM
   994  0130FE  0009               	tblrd		*+	;fetch initializer
   995  013100  CFF5 F057          	movff	tablat,__pdataCOMRAM+1
   996  013104                     end_of_initialization:
   997                           	opt stack 0
   998  013104                     __end_of__initialization:
   999                           	opt stack 0
  1000  013104  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1001  013106  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1002  013108  0100               	movlb	0
  1003  01310A  EF45  F09B         	goto	_main	;jump to C main() function
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           postdec1	equ	0xFE5
  1011                           fsr1h	equ	0xFE2
  1012                           fsr1l	equ	0xFE1
  1013                           
  1014                           	psect	bssCOMRAM
  1015  00002D                     __pbssCOMRAM:
  1016                           	opt stack 0
  1017  00002D                     ST7032_task@wait:
  1018                           	opt stack 0
  1019  00002D                     	ds	2
  1020  00002F                     _pBDTEntryEP0OutCurrent:
  1021                           	opt stack 0
  1022  00002F                     	ds	2
  1023  000031                     _pBDTEntryEP0OutNext:
  1024                           	opt stack 0
  1025  000031                     	ds	2
  1026  000033                     _pDst:
  1027                           	opt stack 0
  1028  000033                     	ds	2
  1029  000035                     millis_timer@cnt:
  1030                           	opt stack 0
  1031  000035                     	ds	2
  1032  000037                     ST7032_task@st7032_state:
  1033                           	opt stack 0
  1034  000037                     	ds	1
  1035  000038                     _BothEP0OutUOWNsSet:
  1036                           	opt stack 0
  1037  000038                     	ds	1
  1038  000039                     _I2C_busy:
  1039                           	opt stack 0
  1040  000039                     	ds	1
  1041  00003A                     _I2C_cfct_flag:
  1042                           	opt stack 0
  1043  00003A                     	ds	1
  1044  00003B                     _I2C_sent_flag:
  1045                           	opt stack 0
  1046  00003B                     	ds	1
  1047  00003C                     _RemoteWakeup:
  1048                           	opt stack 0
  1049  00003C                     	ds	1
  1050  00003D                     _USBDeferINDataStagePackets:
  1051                           	opt stack 0
  1052  00003D                     	ds	1
  1053  00003E                     _USBDeferOUTDataStagePackets:
  1054                           	opt stack 0
  1055  00003E                     	ds	1
  1056  00003F                     _USBDeferStatusStagePacket:
  1057                           	opt stack 0
  1058  00003F                     	ds	1
  1059  000040                     _USBDeviceState:
  1060                           	opt stack 0
  1061  000040                     	ds	1
  1062  000041                     _USBStatusStageEnabledFlag1:
  1063                           	opt stack 0
  1064  000041                     	ds	1
  1065  000042                     _USBStatusStageEnabledFlag2:
  1066                           	opt stack 0
  1067  000042                     	ds	1
  1068  000043                     _USBStatusStageTimeoutCounter:
  1069                           	opt stack 0
  1070  000043                     	ds	1
  1071  000044                     _cdc_trf_state:
  1072                           	opt stack 0
  1073  000044                     	ds	1
  1074  000045                     _controlTransferState:
  1075                           	opt stack 0
  1076  000045                     	ds	1
  1077  000046                     _control_signal_bitmap:
  1078                           	opt stack 0
  1079  000046                     	ds	1
  1080  000047                     _endpoint_number:
  1081                           	opt stack 0
  1082  000047                     	ds	1
  1083  000048                     _shortPacketStatus:
  1084                           	opt stack 0
  1085  000048                     	ds	1
  1086  000049                     _st7032_state:
  1087                           	opt stack 0
  1088  000049                     	ds	1
  1089  00004A                     _lcd_tx:
  1090                           	opt stack 0
  1091  00004A                     	ds	8
  1092  000052                     _USBAlternateInterface:
  1093                           	opt stack 0
  1094  000052                     	ds	2
  1095  000054                     _USBActiveConfiguration:
  1096                           	opt stack 0
  1097  000054                     	ds	1
  1098  000055                     _USTATcopy:
  1099                           	opt stack 0
  1100  000055                     	ds	1
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           fsr1h	equ	0xFE2
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	dataCOMRAM
  1112  000056                     __pdataCOMRAM:
  1113                           	opt stack 0
  1114  000056                     ST7032_cursor@F8640:
  1115                           	opt stack 0
  1116  000056                     	ds	2
  1117                           tblptru	equ	0xFF8
  1118                           tblptrh	equ	0xFF7
  1119                           tblptrl	equ	0xFF6
  1120                           tablat	equ	0xFF5
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec1	equ	0xFE5
  1124                           fsr1h	equ	0xFE2
  1125                           fsr1l	equ	0xFE1
  1126                           
  1127                           	psect	bssBANK0
  1128  0000C9                     __pbssBANK0:
  1129                           	opt stack 0
  1130  0000C9                     _outPipes:
  1131                           	opt stack 0
  1132  0000C9                     	ds	9
  1133  0000D2                     _inPipes:
  1134                           	opt stack 0
  1135  0000D2                     	ds	6
  1136  0000D8                     _pBDTEntryIn:
  1137                           	opt stack 0
  1138  0000D8                     	ds	6
  1139  0000DE                     _pBDTEntryOut:
  1140                           	opt stack 0
  1141  0000DE                     	ds	6
  1142  0000E4                     _ep_data_in:
  1143                           	opt stack 0
  1144  0000E4                     	ds	3
  1145  0000E7                     _ep_data_out:
  1146                           	opt stack 0
  1147  0000E7                     	ds	3
  1148  0000EA                     _pCDCDst:
  1149                           	opt stack 0
  1150  0000EA                     	ds	3
  1151  0000ED                     _pCDCSrc:
  1152                           	opt stack 0
  1153  0000ED                     	ds	3
  1154  0000F0                     _CDCDataInHandle:
  1155                           	opt stack 0
  1156  0000F0                     	ds	2
  1157  0000F2                     _CDCDataOutHandle:
  1158                           	opt stack 0
  1159  0000F2                     	ds	2
  1160  0000F4                     RTCC_task@prev_halfsec:
  1161                           	opt stack 0
  1162  0000F4                     	ds	1
  1163  0000F5                     _USBBusIsSuspended:
  1164                           	opt stack 0
  1165  0000F5                     	ds	1
  1166  0000F6                     _cdc_mem_type:
  1167                           	opt stack 0
  1168  0000F6                     	ds	1
  1169  0000F7                     _cdc_rx_len:
  1170                           	opt stack 0
  1171  0000F7                     	ds	1
  1172  0000F8                     _cdc_tx_len:
  1173                           	opt stack 0
  1174  0000F8                     	ds	1
  1175  0000F9                     _time_change_flag:
  1176                           	opt stack 0
  1177  0000F9                     	ds	1
  1178  0000FA                     epoch_to_caltime@year_cache:
  1179                           	opt stack 0
  1180  0000FA                     	ds	1
  1181  0000FB                     terminal_task@command_init:
  1182                           	opt stack 0
  1183  0000FB                     	ds	1
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1h	equ	0xFE2
  1192                           fsr1l	equ	0xFE1
  1193                           
  1194                           	psect	dataBANK0
  1195  0000FC                     __pdataBANK0:
  1196                           	opt stack 0
  1197  0000FC                     I2C_LCD_SetCursor@F8685:
  1198                           	opt stack 0
  1199  0000FC                     	ds	2
  1200  0000FE                     epoch_to_caltime@month_cache:
  1201                           	opt stack 0
  1202  0000FE                     	ds	1
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1h	equ	0xFE2
  1211                           fsr1l	equ	0xFE1
  1212                           
  1213                           	psect	bssBANK1
  1214  000100                     __pbssBANK1:
  1215                           	opt stack 0
  1216  000100                     _cdc_notice:
  1217                           	opt stack 0
  1218  000100                     	ds	10
  1219  00010A                     _BaudRateGen:
  1220                           	opt stack 0
  1221  00010A                     	ds	4
  1222  00010E                     _ms:
  1223                           	opt stack 0
  1224  00010E                     	ds	4
  1225  000112                     epoch_to_caltime@day_cache:
  1226                           	opt stack 0
  1227  000112                     	ds	2
  1228  000114                     terminal_task@op0:
  1229                           	opt stack 0
  1230  000114                     	ds	25
  1231  00012D                     terminal_task@op1:
  1232                           	opt stack 0
  1233  00012D                     	ds	25
  1234  000146                     _now:
  1235                           	opt stack 0
  1236  000146                     	ds	14
  1237  000154                     _dummy_encapsulated_cmd_response:
  1238                           	opt stack 0
  1239  000154                     	ds	8
  1240  00015C                     _uart_rx:
  1241                           	opt stack 0
  1242  00015C                     	ds	8
  1243  000164                     _uart_tx:
  1244                           	opt stack 0
  1245  000164                     	ds	8
  1246  00016C                     _usb_rx:
  1247                           	opt stack 0
  1248  00016C                     	ds	8
  1249  000174                     _usb_tx:
  1250                           	opt stack 0
  1251  000174                     	ds	8
  1252  00017C                     terminal_task@command:
  1253                           	opt stack 0
  1254  00017C                     	ds	8
  1255  000184                     _line_coding:
  1256                           	opt stack 0
  1257  000184                     	ds	7
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           postdec1	equ	0xFE5
  1265                           fsr1h	equ	0xFE2
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268                           	psect	bssBANK2
  1269  000200                     __pbssBANK2:
  1270                           	opt stack 0
  1271  000200                     _cdc_data_rx:
  1272                           	opt stack 0
  1273  000200                     	ds	64
  1274  000240                     _cdc_data_tx:
  1275                           	opt stack 0
  1276  000240                     	ds	64
  1277  000280                     _readBuffer:
  1278                           	opt stack 0
  1279  000280                     	ds	64
  1280  0002C0                     terminal_task@op2:
  1281                           	opt stack 0
  1282  0002C0                     	ds	25
  1283  0002D9                     terminal_task@op3:
  1284                           	opt stack 0
  1285  0002D9                     	ds	25
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1h	equ	0xFE2
  1294                           fsr1l	equ	0xFE1
  1295                           
  1296                           	psect	bssBANK3
  1297  000300                     __pbssBANK3:
  1298                           	opt stack 0
  1299  000300                     UART_buffer_init@uartrx:
  1300                           	opt stack 0
  1301  000300                     	ds	100
  1302  000364                     _writeBuffer:
  1303                           	opt stack 0
  1304  000364                     	ds	64
  1305                           tblptru	equ	0xFF8
  1306                           tblptrh	equ	0xFF7
  1307                           tblptrl	equ	0xFF6
  1308                           tablat	equ	0xFF5
  1309                           postinc0	equ	0xFEE
  1310                           wreg	equ	0xFE8
  1311                           postdec1	equ	0xFE5
  1312                           fsr1h	equ	0xFE2
  1313                           fsr1l	equ	0xFE1
  1314                           
  1315                           	psect	bssBANK4
  1316  000400                     __pbssBANK4:
  1317                           	opt stack 0
  1318  000400                     USB_CDC_buffer_init@rxbuf:
  1319                           	opt stack 0
  1320  000400                     	ds	100
  1321                           tblptru	equ	0xFF8
  1322                           tblptrh	equ	0xFF7
  1323                           tblptrl	equ	0xFF6
  1324                           tablat	equ	0xFF5
  1325                           postinc0	equ	0xFEE
  1326                           wreg	equ	0xFE8
  1327                           postdec1	equ	0xFE5
  1328                           fsr1h	equ	0xFE2
  1329                           fsr1l	equ	0xFE1
  1330                           
  1331                           	psect	bssBANK5
  1332  000500                     __pbssBANK5:
  1333                           	opt stack 0
  1334  000500                     ST7032_init@buf:
  1335                           	opt stack 0
  1336  000500                     	ds	200
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           postdec1	equ	0xFE5
  1344                           fsr1h	equ	0xFE2
  1345                           fsr1l	equ	0xFE1
  1346                           
  1347                           	psect	bssBIGRAMl
  1348  0005C8                     __pbssBIGRAMl:
  1349                           	opt stack 0
  1350  0005C8                     USB_CDC_buffer_init@txbuf:
  1351                           	opt stack 0
  1352  0005C8                     	ds	800
  1353  0008E8                     UART_buffer_init@uarttx:
  1354                           	opt stack 0
  1355  0008E8                     	ds	500
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1h	equ	0xFE2
  1364                           fsr1l	equ	0xFE1
  1365                           
  1366                           	psect	cstackBANK1
  1367  00018B                     __pcstackBANK1:
  1368                           	opt stack 0
  1369  00018B                     terminal_task@tx:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x0
  1373  00018B                     	ds	2
  1374  00018D                     terminal_task@rx:
  1375                           	opt stack 0
  1376                           
  1377                           ; 2 bytes @ 0x2
  1378  00018D                     	ds	2
  1379  00018F                     ??_terminal_task:
  1380                           
  1381                           ; 0 bytes @ 0x4
  1382  00018F                     	ds	2
  1383  000191                     terminal_task@buf:
  1384                           	opt stack 0
  1385                           
  1386                           ; 100 bytes @ 0x6
  1387  000191                     	ds	100
  1388  0001F5                     _terminal_task$6211:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x6A
  1392  0001F5                     	ds	2
  1393  0001F7                     terminal_task@i_4555:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x6C
  1397  0001F7                     	ds	1
  1398  0001F8                     terminal_task@ascii:
  1399                           	opt stack 0
  1400                           
  1401                           ; 1 bytes @ 0x6D
  1402  0001F8                     	ds	1
  1403  0001F9                     terminal_task@i:
  1404                           	opt stack 0
  1405                           
  1406                           ; 1 bytes @ 0x6E
  1407  0001F9                     	ds	1
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1h	equ	0xFE2
  1416                           fsr1l	equ	0xFE1
  1417                           
  1418                           	psect	cstackBANK0
  1419  000060                     __pcstackBANK0:
  1420                           	opt stack 0
  1421  000060                     ??_isdigit:
  1422  000060                     ??_I2C_IdleCheck:
  1423  000060                     ??_timer0_init:
  1424  000060                     ??_timer3_init:
  1425  000060                     ??_x_to_d:
  1426  000060                     ?_strcmp:
  1427                           	opt stack 0
  1428  000060                     ?_USBTransferOnePacket:
  1429                           	opt stack 0
  1430  000060                     ?_ringbuf_num:
  1431                           	opt stack 0
  1432  000060                     ?___wmul:
  1433                           	opt stack 0
  1434  000060                     ?___awdiv:
  1435                           	opt stack 0
  1436  000060                     ?___awmod:
  1437                           	opt stack 0
  1438  000060                     ?___lwdiv:
  1439                           	opt stack 0
  1440  000060                     ?___lldiv:
  1441                           	opt stack 0
  1442  000060                     USBTransferOnePacket@dir:
  1443                           	opt stack 0
  1444  000060                     timer1_init@clock_select:
  1445                           	opt stack 0
  1446  000060                     putUSBUSART@data:
  1447                           	opt stack 0
  1448  000060                     ringbuf_init@rb:
  1449                           	opt stack 0
  1450  000060                     ringbuf_num@rb:
  1451                           	opt stack 0
  1452  000060                     ringbuf_delete@rb:
  1453                           	opt stack 0
  1454  000060                     ___wmul@multiplier:
  1455                           	opt stack 0
  1456  000060                     ___awdiv@dividend:
  1457                           	opt stack 0
  1458  000060                     ___awmod@dividend:
  1459                           	opt stack 0
  1460  000060                     ___lwdiv@dividend:
  1461                           	opt stack 0
  1462  000060                     memset@p1:
  1463                           	opt stack 0
  1464  000060                     strcmp@s1:
  1465                           	opt stack 0
  1466  000060                     ___lldiv@dividend:
  1467                           	opt stack 0
  1468                           
  1469                           ; 4 bytes @ 0x0
  1470  000060                     	ds	1
  1471  000061                     ??_timer1_init:
  1472  000061                     I2C_IdleCheck@mask:
  1473                           	opt stack 0
  1474  000061                     timer0_init@prescaler:
  1475                           	opt stack 0
  1476  000061                     timer3_init@prescaler:
  1477                           	opt stack 0
  1478  000061                     x_to_d@hex:
  1479                           	opt stack 0
  1480  000061                     _isdigit$5642:
  1481                           	opt stack 0
  1482  000061                     USBTransferOnePacket@data:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0x1
  1486  000061                     	ds	1
  1487  000062                     ??_ringbuf_num:
  1488  000062                     putUSBUSART@length:
  1489                           	opt stack 0
  1490  000062                     I2C_Start@rw:
  1491                           	opt stack 0
  1492  000062                     I2C_Send@data:
  1493                           	opt stack 0
  1494  000062                     timer1_init@prescaler:
  1495                           	opt stack 0
  1496  000062                     isdigit@c:
  1497                           	opt stack 0
  1498  000062                     ringbuf_init@internal_buf:
  1499                           	opt stack 0
  1500  000062                     RTCC_to_caltime@tm:
  1501                           	opt stack 0
  1502  000062                     ___wmul@multiplicand:
  1503                           	opt stack 0
  1504  000062                     ___awdiv@divisor:
  1505                           	opt stack 0
  1506  000062                     ___awmod@divisor:
  1507                           	opt stack 0
  1508  000062                     ___lwdiv@divisor:
  1509                           	opt stack 0
  1510  000062                     memset@c:
  1511                           	opt stack 0
  1512  000062                     strcmp@s2:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x2
  1516  000062                     	ds	1
  1517  000063                     USBTransferOnePacket@len:
  1518                           	opt stack 0
  1519  000063                     I2C_Start@adrs:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x3
  1523  000063                     	ds	1
  1524  000064                     ??_strcmp:
  1525  000064                     USBTransferOnePacket@ep:
  1526                           	opt stack 0
  1527  000064                     RTCC_to_caltime@dumy:
  1528                           	opt stack 0
  1529  000064                     I2C_LCD_Command@c:
  1530                           	opt stack 0
  1531  000064                     ___awdiv@counter:
  1532                           	opt stack 0
  1533  000064                     ___awmod@counter:
  1534                           	opt stack 0
  1535  000064                     ___lwdiv@counter:
  1536                           	opt stack 0
  1537  000064                     ringbuf_init@bufsize:
  1538                           	opt stack 0
  1539  000064                     I2C_LCD_Puts@s:
  1540                           	opt stack 0
  1541  000064                     ___wmul@product:
  1542                           	opt stack 0
  1543  000064                     memset@n:
  1544                           	opt stack 0
  1545  000064                     ___lldiv@divisor:
  1546                           	opt stack 0
  1547                           
  1548                           ; 4 bytes @ 0x4
  1549  000064                     	ds	1
  1550  000065                     I2C_LCD_Command@ans:
  1551                           	opt stack 0
  1552  000065                     ___awdiv@sign:
  1553                           	opt stack 0
  1554  000065                     ___awmod@sign:
  1555                           	opt stack 0
  1556  000065                     strcmp@r:
  1557                           	opt stack 0
  1558  000065                     USBTransferOnePacket@handle:
  1559                           	opt stack 0
  1560  000065                     ___lwdiv@quotient:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0x5
  1564  000065                     	ds	1
  1565  000066                     ??_I2C_LCD_Clear:
  1566  000066                     ??_I2C_LCD_Puts:
  1567  000066                     ?_atoi:
  1568                           	opt stack 0
  1569  000066                     month_length@month:
  1570                           	opt stack 0
  1571  000066                     I2C_LCD_SetCursor@row:
  1572                           	opt stack 0
  1573  000066                     atoi@s:
  1574                           	opt stack 0
  1575  000066                     ___awdiv@quotient:
  1576                           	opt stack 0
  1577  000066                     memset@p:
  1578                           	opt stack 0
  1579                           
  1580                           ; 2 bytes @ 0x6
  1581  000066                     	ds	1
  1582  000067                     ??_CDCTxService:
  1583  000067                     ??_month_length:
  1584  000067                     ??_I2C_LCD_init:
  1585  000067                     ?___lwmod:
  1586                           	opt stack 0
  1587  000067                     getsUSBUSART@buffer:
  1588                           	opt stack 0
  1589  000067                     I2C_LCD_SetCursor@row_offsets:
  1590                           	opt stack 0
  1591  000067                     I2C_LCD_Puts@ans:
  1592                           	opt stack 0
  1593  000067                     ___lwmod@dividend:
  1594                           	opt stack 0
  1595                           
  1596                           ; 2 bytes @ 0x7
  1597  000067                     	ds	1
  1598  000068                     ??_atoi:
  1599  000068                     USBDeviceInit@i:
  1600                           	opt stack 0
  1601  000068                     d_to_x@dec:
  1602                           	opt stack 0
  1603  000068                     I2C_LCD_init@i:
  1604                           	opt stack 0
  1605  000068                     _CDCTxService$2005:
  1606                           	opt stack 0
  1607  000068                     ringbuf_put@rb:
  1608                           	opt stack 0
  1609  000068                     ringbuf_pop@rb:
  1610                           	opt stack 0
  1611  000068                     ringbuf_backspace@rb:
  1612                           	opt stack 0
  1613  000068                     ___lldiv@quotient:
  1614                           	opt stack 0
  1615                           
  1616                           ; 4 bytes @ 0x8
  1617  000068                     	ds	1
  1618  000069                     getsUSBUSART@len:
  1619                           	opt stack 0
  1620  000069                     I2C_LCD_SetCursor@col:
  1621                           	opt stack 0
  1622  000069                     I2C_LCD_init@i_4468:
  1623                           	opt stack 0
  1624  000069                     caltime_to_RTCC@tm:
  1625                           	opt stack 0
  1626  000069                     ___lwmod@divisor:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x9
  1630  000069                     	ds	1
  1631  00006A                     ??_getsUSBUSART:
  1632  00006A                     ??_ringbuf_pop:
  1633  00006A                     ??_ringbuf_backspace:
  1634  00006A                     CDCTxService@i:
  1635                           	opt stack 0
  1636  00006A                     ringbuf_put@data:
  1637                           	opt stack 0
  1638  00006A                     atoi@sign:
  1639                           	opt stack 0
  1640                           
  1641                           ; 1 bytes @ 0xA
  1642  00006A                     	ds	1
  1643  00006B                     ??_ringbuf_put:
  1644  00006B                     CDCTxService@byte_to_send:
  1645                           	opt stack 0
  1646  00006B                     month_length@year:
  1647                           	opt stack 0
  1648  00006B                     ___lwmod@counter:
  1649                           	opt stack 0
  1650  00006B                     _getsUSBUSART$1957:
  1651                           	opt stack 0
  1652  00006B                     atoi@a:
  1653                           	opt stack 0
  1654                           
  1655                           ; 2 bytes @ 0xB
  1656  00006B                     	ds	1
  1657  00006C                     ?_sprintf:
  1658                           	opt stack 0
  1659  00006C                     ___lldiv@counter:
  1660                           	opt stack 0
  1661  00006C                     USB_CDC_send@length:
  1662                           	opt stack 0
  1663  00006C                     sprintf@sp:
  1664                           	opt stack 0
  1665                           
  1666                           ; 2 bytes @ 0xC
  1667  00006C                     	ds	1
  1668  00006D                     ?___lmul:
  1669                           	opt stack 0
  1670  00006D                     USB_CDC_get@numBytesRead:
  1671                           	opt stack 0
  1672  00006D                     ___lmul@multiplier:
  1673                           	opt stack 0
  1674                           
  1675                           ; 4 bytes @ 0xD
  1676  00006D                     	ds	1
  1677  00006E                     ringbuf_pop@ret:
  1678                           	opt stack 0
  1679  00006E                     sprintf@f:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0xE
  1683  00006E                     	ds	1
  1684  00006F                     ??_USB_CDC_task:
  1685  00006F                     ringbuf_put_num@rb:
  1686                           	opt stack 0
  1687  00006F                     ringbuf_put_str@rb:
  1688                           	opt stack 0
  1689                           
  1690                           ; 2 bytes @ 0xF
  1691  00006F                     	ds	1
  1692  000070                     USB_CDC_task@i:
  1693                           	opt stack 0
  1694                           
  1695                           ; 2 bytes @ 0x10
  1696  000070                     	ds	1
  1697  000071                     ringbuf_put_num@value:
  1698                           	opt stack 0
  1699  000071                     ringbuf_put_str@str:
  1700                           	opt stack 0
  1701  000071                     ___lmul@multiplicand:
  1702                           	opt stack 0
  1703                           
  1704                           ; 4 bytes @ 0x11
  1705  000071                     	ds	1
  1706  000072                     USB_CDC_task@length:
  1707                           	opt stack 0
  1708                           
  1709                           ; 2 bytes @ 0x12
  1710  000072                     	ds	1
  1711  000073                     ringbuf_put_num@digits:
  1712                           	opt stack 0
  1713                           
  1714                           ; 1 bytes @ 0x13
  1715  000073                     	ds	1
  1716  000074                     ringbuf_put_num@i:
  1717                           	opt stack 0
  1718                           
  1719                           ; 1 bytes @ 0x14
  1720  000074                     	ds	1
  1721  000075                     ringbuf_put_num@temp:
  1722                           	opt stack 0
  1723  000075                     ___lmul@product:
  1724                           	opt stack 0
  1725                           
  1726                           ; 4 bytes @ 0x15
  1727  000075                     	ds	4
  1728  000079                     ?_get_quot_rem:
  1729                           	opt stack 0
  1730  000079                     get_quot_rem@quot:
  1731                           	opt stack 0
  1732  000079                     caltime_to_epoch@tm:
  1733                           	opt stack 0
  1734                           
  1735                           ; 2 bytes @ 0x19
  1736  000079                     	ds	2
  1737  00007B                     ??_caltime_to_epoch:
  1738  00007B                     get_quot_rem@div:
  1739                           	opt stack 0
  1740                           
  1741                           ; 1 bytes @ 0x1B
  1742  00007B                     	ds	2
  1743  00007D                     get_quot_rem@num:
  1744                           	opt stack 0
  1745                           
  1746                           ; 4 bytes @ 0x1D
  1747  00007D                     	ds	1
  1748  00007E                     ??_sprintf:
  1749                           
  1750                           ; 0 bytes @ 0x1E
  1751  00007E                     	ds	1
  1752  00007F                     caltime_to_epoch@year:
  1753                           	opt stack 0
  1754                           
  1755                           ; 1 bytes @ 0x1F
  1756  00007F                     	ds	1
  1757  000080                     caltime_to_epoch@month_4002:
  1758                           	opt stack 0
  1759                           
  1760                           ; 1 bytes @ 0x20
  1761  000080                     	ds	1
  1762  000081                     epoch_to_caltime@tm:
  1763                           	opt stack 0
  1764  000081                     caltime_to_epoch@epoch:
  1765                           	opt stack 0
  1766                           
  1767                           ; 4 bytes @ 0x21
  1768  000081                     	ds	1
  1769  000082                     sprintf@prec:
  1770                           	opt stack 0
  1771                           
  1772                           ; 1 bytes @ 0x22
  1773  000082                     	ds	1
  1774  000083                     ??_epoch_to_caltime:
  1775  000083                     sprintf@ap:
  1776                           	opt stack 0
  1777                           
  1778                           ; 2 bytes @ 0x23
  1779  000083                     	ds	2
  1780  000085                     caltime_to_epoch@month:
  1781                           	opt stack 0
  1782  000085                     epoch_to_caltime@day_since_epoch:
  1783                           	opt stack 0
  1784  000085                     sprintf@cp:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0x25
  1788  000085                     	ds	1
  1789  000086                     RTCC_from_RTCC@tm:
  1790                           	opt stack 0
  1791                           
  1792                           ; 2 bytes @ 0x26
  1793  000086                     	ds	1
  1794  000087                     epoch_to_caltime@day:
  1795                           	opt stack 0
  1796  000087                     sprintf@val:
  1797                           	opt stack 0
  1798                           
  1799                           ; 2 bytes @ 0x27
  1800  000087                     	ds	1
  1801  000088                     
  1802                           ; 0 bytes @ 0x28
  1803  000088                     	ds	1
  1804  000089                     epoch_to_caltime@year:
  1805                           	opt stack 0
  1806  000089                     sprintf@len:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0x29
  1810  000089                     	ds	1
  1811  00008A                     epoch_to_caltime@month:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x2A
  1815  00008A                     	ds	1
  1816  00008B                     sprintf@flag:
  1817                           	opt stack 0
  1818  00008B                     epoch_to_caltime@num:
  1819                           	opt stack 0
  1820                           
  1821                           ; 4 bytes @ 0x2B
  1822  00008B                     	ds	1
  1823  00008C                     sprintf@c:
  1824                           	opt stack 0
  1825                           
  1826                           ; 1 bytes @ 0x2C
  1827  00008C                     	ds	1
  1828  00008D                     sprintf@width:
  1829                           	opt stack 0
  1830                           
  1831                           ; 2 bytes @ 0x2D
  1832  00008D                     	ds	2
  1833  00008F                     RTCC_from_caltime@tm:
  1834                           	opt stack 0
  1835  00008F                     RTCC_from_epoch@tm:
  1836                           	opt stack 0
  1837  00008F                     print_time@tx:
  1838                           	opt stack 0
  1839                           
  1840                           ; 2 bytes @ 0x2F
  1841  00008F                     	ds	2
  1842  000091                     print_time@str:
  1843                           	opt stack 0
  1844                           
  1845                           ; 30 bytes @ 0x31
  1846  000091                     	ds	30
  1847  0000AF                     terminal_at_hand@tx:
  1848                           	opt stack 0
  1849                           
  1850                           ; 2 bytes @ 0x4F
  1851  0000AF                     	ds	2
  1852  0000B1                     terminal_at_hand@hand:
  1853                           	opt stack 0
  1854                           
  1855                           ; 2 bytes @ 0x51
  1856  0000B1                     	ds	2
  1857  0000B3                     terminal_at_hand@min:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x53
  1861  0000B3                     	ds	1
  1862  0000B4                     terminal_at_hand@max:
  1863                           	opt stack 0
  1864                           
  1865                           ; 1 bytes @ 0x54
  1866  0000B4                     	ds	1
  1867  0000B5                     terminal_at_hand@value:
  1868                           	opt stack 0
  1869                           
  1870                           ; 1 bytes @ 0x55
  1871  0000B5                     	ds	1
  1872  0000B6                     terminal_time@tx:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x56
  1876  0000B6                     	ds	2
  1877  0000B8                     terminal_time@op0:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x58
  1881  0000B8                     	ds	2
  1882  0000BA                     terminal_time@op1:
  1883                           	opt stack 0
  1884                           
  1885                           ; 2 bytes @ 0x5A
  1886  0000BA                     	ds	2
  1887  0000BC                     terminal_time@op2:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x5C
  1891  0000BC                     	ds	2
  1892  0000BE                     _terminal_time$6212:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0x5E
  1896  0000BE                     	ds	1
  1897  0000BF                     terminal_operation@tx:
  1898                           	opt stack 0
  1899                           
  1900                           ; 2 bytes @ 0x5F
  1901  0000BF                     	ds	2
  1902  0000C1                     terminal_operation@op0:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x61
  1906  0000C1                     	ds	2
  1907  0000C3                     terminal_operation@op1:
  1908                           	opt stack 0
  1909                           
  1910                           ; 2 bytes @ 0x63
  1911  0000C3                     	ds	2
  1912  0000C5                     terminal_operation@op2:
  1913                           	opt stack 0
  1914                           
  1915                           ; 2 bytes @ 0x65
  1916  0000C5                     	ds	2
  1917  0000C7                     terminal_operation@op3:
  1918                           	opt stack 0
  1919                           
  1920                           ; 2 bytes @ 0x67
  1921  0000C7                     	ds	2
  1922  0000C9                     tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postdec1	equ	0xFE5
  1929                           fsr1h	equ	0xFE2
  1930                           fsr1l	equ	0xFE1
  1931                           
  1932                           ; 0 bytes @ 0x69
  1933                           
  1934                           	psect	cstackCOMRAM
  1935  000001                     __pcstackCOMRAM:
  1936                           	opt stack 0
  1937  000001                     ??_USBStdGetDscHandler:
  1938  000001                     ??_USBStdGetStatusHandler:
  1939  000001                     ?i2_USBTransferOnePacket:
  1940                           	opt stack 0
  1941  000001                     ?i2_ringbuf_num:
  1942                           	opt stack 0
  1943  000001                     USBConfigureEndpoint@direction:
  1944                           	opt stack 0
  1945  000001                     USBCtrlTrfTxService@byteToSend:
  1946                           	opt stack 0
  1947  000001                     USBCtrlTrfRxService@i:
  1948                           	opt stack 0
  1949  000001                     i2USBTransferOnePacket@dir:
  1950                           	opt stack 0
  1951  000001                     i2ringbuf_num@rb:
  1952                           	opt stack 0
  1953  000001                     i2memset@p1:
  1954                           	opt stack 0
  1955                           
  1956                           ; 2 bytes @ 0x0
  1957  000001                     	ds	1
  1958  000002                     ??_USBConfigureEndpoint:
  1959  000002                     USBCtrlTrfRxService@byteToRead:
  1960                           	opt stack 0
  1961  000002                     USBCtrlTrfInHandler@lastDTS:
  1962                           	opt stack 0
  1963  000002                     USBStdGetStatusHandler@p:
  1964                           	opt stack 0
  1965  000002                     i2USBTransferOnePacket@data:
  1966                           	opt stack 0
  1967                           
  1968                           ; 2 bytes @ 0x1
  1969  000002                     	ds	1
  1970  000003                     ??i2_ringbuf_num:
  1971  000003                     i2memset@c:
  1972                           	opt stack 0
  1973                           
  1974                           ; 2 bytes @ 0x2
  1975  000003                     	ds	1
  1976  000004                     i2USBTransferOnePacket@len:
  1977                           	opt stack 0
  1978                           
  1979                           ; 1 bytes @ 0x3
  1980  000004                     	ds	1
  1981  000005                     i2USBTransferOnePacket@ep:
  1982                           	opt stack 0
  1983  000005                     i2memset@n:
  1984                           	opt stack 0
  1985                           
  1986                           ; 2 bytes @ 0x4
  1987  000005                     	ds	1
  1988  000006                     USBConfigureEndpoint@EPNum:
  1989                           	opt stack 0
  1990  000006                     i2USBTransferOnePacket@handle:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x5
  1994  000006                     	ds	1
  1995  000007                     USBConfigureEndpoint@handle:
  1996                           	opt stack 0
  1997  000007                     i2memset@p:
  1998                           	opt stack 0
  1999                           
  2000                           ; 2 bytes @ 0x6
  2001  000007                     	ds	2
  2002  000009                     USBEnableEndpoint@options:
  2003                           	opt stack 0
  2004  000009                     i2USBDeviceInit@i:
  2005                           	opt stack 0
  2006  000009                     i2ringbuf_put@rb:
  2007                           	opt stack 0
  2008  000009                     i2ringbuf_pop@rb:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x8
  2012  000009                     	ds	1
  2013  00000A                     USBEnableEndpoint@p:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0x9
  2017  00000A                     	ds	1
  2018  00000B                     ??i2_ringbuf_pop:
  2019  00000B                     i2ringbuf_put@data:
  2020                           	opt stack 0
  2021                           
  2022                           ; 1 bytes @ 0xA
  2023  00000B                     	ds	1
  2024  00000C                     ??i2_ringbuf_put:
  2025  00000C                     USBEnableEndpoint@ep:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0xB
  2029  00000C                     	ds	1
  2030  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2031                           	opt stack 0
  2032                           
  2033                           ; 2 bytes @ 0xC
  2034  00000D                     	ds	2
  2035  00000F                     i2ringbuf_pop@ret:
  2036                           	opt stack 0
  2037  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2038                           	opt stack 0
  2039                           
  2040                           ; 2 bytes @ 0xE
  2041  00000F                     	ds	1
  2042  000010                     UART_ISR@ascii:
  2043                           	opt stack 0
  2044                           
  2045                           ; 1 bytes @ 0xF
  2046  000010                     	ds	1
  2047  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2048                           	opt stack 0
  2049                           
  2050                           ; 2 bytes @ 0x10
  2051  000011                     	ds	2
  2052  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2053                           
  2054                           ; 0 bytes @ 0x12
  2055  000013                     	ds	2
  2056  000015                     ??_USBStdFeatureReqHandler:
  2057  000015                     USBStdSetCfgHandler@i:
  2058                           	opt stack 0
  2059                           
  2060                           ; 1 bytes @ 0x14
  2061  000015                     	ds	1
  2062  000016                     USBStdFeatureReqHandler@pUEP:
  2063                           	opt stack 0
  2064                           
  2065                           ; 2 bytes @ 0x15
  2066  000016                     	ds	2
  2067  000018                     USBStdFeatureReqHandler@current_ep_data:
  2068                           	opt stack 0
  2069                           
  2070                           ; 1 bytes @ 0x17
  2071  000018                     	ds	1
  2072  000019                     USBStdFeatureReqHandler@p:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0x18
  2076  000019                     	ds	2
  2077  00001B                     ??_USBCtrlEPService:
  2078  00001B                     
  2079                           ; 0 bytes @ 0x1A
  2080  00001B                     	ds	2
  2081  00001D                     USBCtrlEPService@setup_cnt:
  2082                           	opt stack 0
  2083                           
  2084                           ; 1 bytes @ 0x1C
  2085  00001D                     	ds	1
  2086  00001E                     USBDeviceTasks@i:
  2087                           	opt stack 0
  2088                           
  2089                           ; 1 bytes @ 0x1D
  2090  00001E                     	ds	1
  2091  00001F                     ??_ISR:
  2092                           
  2093                           ; 0 bytes @ 0x1E
  2094  00001F                     	ds	14
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           postinc0	equ	0xFEE
  2100                           wreg	equ	0xFE8
  2101                           postdec1	equ	0xFE5
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           
  2105 ;;
  2106 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2107 ;;
  2108 ;; *************** function _main *****************
  2109 ;; Defined at:
  2110 ;;		line 91 in file "main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2  1501[None  ] int 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels required when called:   21
  2130 ;; This function calls:
  2131 ;;		_I2C_LCD_Clear
  2132 ;;		_I2C_LCD_Puts
  2133 ;;		_I2C_LCD_SetCursor
  2134 ;;		_RTCC_task
  2135 ;;		_UART_task
  2136 ;;		_USB_CDC_task
  2137 ;;		_main_init
  2138 ;;		_terminal_task
  2139 ;; This function is called by:
  2140 ;;		Startup code after reset
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text0
  2145  01368A                     __ptext0:
  2146                           	opt stack 0
  2147  01368A                     _main:
  2148                           	opt stack 10
  2149                           
  2150                           ;main.c: 92: main_init();
  2151                           
  2152                           ;incstack = 0
  2153  01368A  EC01  F09E         	call	_main_init	;wreg free
  2154                           
  2155                           ;main.c: 94: I2C_LCD_Clear();
  2156  01368E  EC8D  F0A0         	call	_I2C_LCD_Clear	;wreg free
  2157                           
  2158                           ;main.c: 95: I2C_LCD_SetCursor(0, 0);
  2159  013692  0E00               	movlw	0
  2160  013694  0100               	movlb	0	; () banked
  2161  013696  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2162  013698  0E00               	movlw	0
  2163  01369A  EC54  F09F         	call	_I2C_LCD_SetCursor
  2164                           
  2165                           ;main.c: 96: I2C_LCD_Puts("18F27J53");
  2166  01369E  0E7F               	movlw	low STR_46
  2167  0136A0  0100               	movlb	0	; () banked
  2168  0136A2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2169  0136A4  0EFF               	movlw	high STR_46
  2170  0136A6  0100               	movlb	0	; () banked
  2171  0136A8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2172  0136AA  ECE9  F09B         	call	_I2C_LCD_Puts	;wreg free
  2173                           
  2174                           ;main.c: 97: I2C_LCD_SetCursor(0, 1);
  2175  0136AE  0E01               	movlw	1
  2176  0136B0  0100               	movlb	0	; () banked
  2177  0136B2  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2178  0136B4  0E00               	movlw	0
  2179  0136B6  EC54  F09F         	call	_I2C_LCD_SetCursor
  2180                           
  2181                           ;main.c: 98: I2C_LCD_Puts("Template");
  2182  0136BA  0E9A               	movlw	low STR_47
  2183  0136BC  0100               	movlb	0	; () banked
  2184  0136BE  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2185  0136C0  0EFF               	movlw	high STR_47
  2186  0136C2  0100               	movlb	0	; () banked
  2187  0136C4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2188  0136C6  ECE9  F09B         	call	_I2C_LCD_Puts	;wreg free
  2189  0136CA  D015               	goto	l9892
  2190  0136CC                     l9882:
  2191                           
  2192                           ;main.c: 103: INTCONbits.GIE = 0;
  2193  0136CC  9EF2               	bcf	intcon,7,c	;volatile
  2194                           
  2195                           ;main.c: 105: USB_CDC_task();
  2196  0136CE  EC20  F08D         	call	_USB_CDC_task	;wreg free
  2197                           
  2198                           ;main.c: 106: UART_task();
  2199  0136D2  EC43  F0A0         	call	_UART_task	;wreg free
  2200                           
  2201                           ;main.c: 107: RTCC_task();
  2202  0136D6  EC47  F09E         	call	_RTCC_task	;wreg free
  2203                           
  2204                           ;main.c: 108: terminal_task(&usb_tx, &usb_rx);
  2205  0136DA  0E74               	movlw	low _usb_tx
  2206  0136DC  0101               	movlb	1	; () banked
  2207  0136DE  6F8B               	movwf	terminal_task@tx& (0+255),b
  2208  0136E0  0E01               	movlw	high _usb_tx
  2209  0136E2  0101               	movlb	1	; () banked
  2210  0136E4  6F8C               	movwf	(terminal_task@tx+1)& (0+255),b
  2211  0136E6  0E6C               	movlw	low _usb_rx
  2212  0136E8  0101               	movlb	1	; () banked
  2213  0136EA  6F8D               	movwf	terminal_task@rx& (0+255),b
  2214  0136EC  0E01               	movlw	high _usb_rx
  2215  0136EE  0101               	movlb	1	; () banked
  2216  0136F0  6F8E               	movwf	(terminal_task@rx+1)& (0+255),b
  2217  0136F2  EC03  F084         	call	_terminal_task	;wreg free
  2218  0136F6                     l9892:
  2219                           
  2220                           ;main.c: 110: INTCONbits.GIE = 1;
  2221  0136F6  8EF2               	bsf	intcon,7,c	;volatile
  2222  0136F8  D7E9               	goto	l9882
  2223  0136FA                     __end_of_main:
  2224                           	opt stack 0
  2225                           tblptru	equ	0xFF8
  2226                           tblptrh	equ	0xFF7
  2227                           tblptrl	equ	0xFF6
  2228                           tablat	equ	0xFF5
  2229                           intcon	equ	0xFF2
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           postdec1	equ	0xFE5
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           
  2236 ;; *************** function _terminal_task *****************
  2237 ;; Defined at:
  2238 ;;		line 8 in file "../My_library/My_terminal.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2241 ;;		 -> usb_tx(8), 
  2242 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2243 ;;		 -> usb_rx(8), 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  i               1  108[BANK1 ] unsigned char 
  2246 ;;  i               1  110[BANK1 ] unsigned char 
  2247 ;;  ascii           1  109[BANK1 ] unsigned char 
  2248 ;;  buf           100    6[BANK1 ] unsigned char [100]
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2258 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Totals:         0       0     111       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;Total ram usage:      111 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:   20
  2265 ;; This function calls:
  2266 ;;		_ringbuf_backspace
  2267 ;;		_ringbuf_delete
  2268 ;;		_ringbuf_init
  2269 ;;		_ringbuf_num
  2270 ;;		_ringbuf_pop
  2271 ;;		_ringbuf_put
  2272 ;;		_ringbuf_put_num
  2273 ;;		_ringbuf_put_str
  2274 ;;		_terminal_operation
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text1
  2281  010806                     __ptext1:
  2282                           	opt stack 0
  2283  010806                     _terminal_task:
  2284                           	opt stack 10
  2285                           
  2286                           ;My_terminal.c: 9: static ringbuf_t command;
  2287                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2288                           ;My_terminal.c: 11: if (command_init == 0) {
  2289                           
  2290                           ;incstack = 0
  2291  010806  0100               	movlb	0	; () banked
  2292  010808  51FB               	movf	terminal_task@command_init& (0+255),w,b
  2293  01080A  0100               	movlb	0	; () banked
  2294  01080C  A4D8               	btfss	status,2,c
  2295  01080E  D016               	goto	l9402
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;My_terminal.c: 12: command_init = 1;
  2299  010810  0E01               	movlw	1
  2300  010812  0100               	movlb	0	; () banked
  2301  010814  6FFB               	movwf	terminal_task@command_init& (0+255),b
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;My_terminal.c: 13: char buf[100];
  2305                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2306  010816  0E7C               	movlw	low terminal_task@command
  2307  010818  0100               	movlb	0	; () banked
  2308  01081A  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2309  01081C  0E01               	movlw	high terminal_task@command
  2310  01081E  0100               	movlb	0	; () banked
  2311  010820  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2312  010822  0E91               	movlw	low terminal_task@buf
  2313  010824  0100               	movlb	0	; () banked
  2314  010826  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2315  010828  0E01               	movlw	high terminal_task@buf
  2316  01082A  0100               	movlb	0	; () banked
  2317  01082C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2318  01082E  0E00               	movlw	0
  2319  010830  0100               	movlb	0	; () banked
  2320  010832  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2321  010834  0E64               	movlw	100
  2322  010836  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2323  010838  EC3C  F09D         	call	_ringbuf_init	;wreg free
  2324  01083C                     l9402:
  2325                           
  2326                           ;My_terminal.c: 15: }
  2327                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2328  01083C  C18D  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2329  010840  C18E  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2330  010844  EC07  F08F         	call	_ringbuf_num	;wreg free
  2331  010848  0100               	movlb	0	; () banked
  2332  01084A  5160               	movf	?_ringbuf_num& (0+255),w,b
  2333  01084C  0100               	movlb	0	; () banked
  2334  01084E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2335  010850  B4D8               	btfsc	status,2,c
  2336  010852  0012               	return	
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2340  010854  C18D  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2341  010858  C18E  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2342  01085C  EC25  F094         	call	_ringbuf_pop	;wreg free
  2343  010860  0101               	movlb	1	; () banked
  2344  010862  6FF8               	movwf	terminal_task@ascii& (0+255),b
  2345                           
  2346                           ;My_terminal.c: 18: switch (ascii) {
  2347  010864  D176               	goto	l9466
  2348  010866                     l9406:
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2352  010866  0E7C               	movlw	low terminal_task@command
  2353  010868  0100               	movlb	0	; () banked
  2354  01086A  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2355  01086C  0E01               	movlw	high terminal_task@command
  2356  01086E  0100               	movlb	0	; () banked
  2357  010870  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2358  010872  0E00               	movlw	0
  2359  010874  0100               	movlb	0	; () banked
  2360  010876  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2361  010878  ECEB  F092         	call	_ringbuf_put	;wreg free
  2362                           
  2363                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2364  01087C  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2365  010880  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2366  010884  0E09               	movlw	9
  2367  010886  0100               	movlb	0	; () banked
  2368  010888  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2369  01088A  ECEB  F092         	call	_ringbuf_put	;wreg free
  2370                           
  2371                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2372  01088E  0E7C               	movlw	low terminal_task@command
  2373  010890  0100               	movlb	0	; () banked
  2374  010892  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2375  010894  0E01               	movlw	high terminal_task@command
  2376  010896  0100               	movlb	0	; () banked
  2377  010898  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2378  01089A  EC07  F08F         	call	_ringbuf_num	;wreg free
  2379  01089E  0EFF               	movlw	255
  2380  0108A0  0100               	movlb	0	; () banked
  2381  0108A2  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2382  0108A4  0101               	movlb	1	; () banked
  2383  0108A6  6FF5               	movwf	_terminal_task$6211& (0+255),b
  2384  0108A8  0EFF               	movlw	255
  2385  0108AA  0100               	movlb	0	; () banked
  2386  0108AC  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2387  0108AE  0101               	movlb	1	; () banked
  2388  0108B0  6FF6               	movwf	(_terminal_task$6211+1)& (0+255),b
  2389                           
  2390                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2391  0108B2  C18B  F06F         	movff	terminal_task@tx,ringbuf_put_num@rb
  2392  0108B6  C18C  F070         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2393  0108BA  C1F5  F071         	movff	_terminal_task$6211,ringbuf_put_num@value
  2394  0108BE  C1F6  F072         	movff	_terminal_task$6211+1,ringbuf_put_num@value+1
  2395  0108C2  0E02               	movlw	2
  2396  0108C4  0100               	movlb	0	; () banked
  2397  0108C6  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2398  0108C8  EC8D  F09A         	call	_ringbuf_put_num	;wreg free
  2399                           
  2400                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2401  0108CC  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2402  0108D0  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2403  0108D4  0E0A               	movlw	10
  2404  0108D6  0100               	movlb	0	; () banked
  2405  0108D8  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2406  0108DA  ECEB  F092         	call	_ringbuf_put	;wreg free
  2407                           
  2408                           ;My_terminal.c: 24: static char op0[25];
  2409                           ;My_terminal.c: 25: static char op1[25];
  2410                           ;My_terminal.c: 26: static char op2[25];
  2411                           ;My_terminal.c: 27: static char op3[25];
  2412                           ;My_terminal.c: 28: uint8_t i;
  2413                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2414  0108DE  0E00               	movlw	0
  2415  0108E0  0101               	movlb	1	; () banked
  2416  0108E2  6FF9               	movwf	terminal_task@i& (0+255),b
  2417  0108E4  D002               	goto	l9412
  2418  0108E6                     l9410:
  2419                           
  2420                           ; BSR set to: 1
  2421  0108E6  0101               	movlb	1	; () banked
  2422  0108E8  2BF9               	incf	terminal_task@i& (0+255),f,b
  2423  0108EA                     l9412:
  2424                           
  2425                           ; BSR set to: 1
  2426  0108EA  0E7C               	movlw	low terminal_task@command
  2427  0108EC  0100               	movlb	0	; () banked
  2428  0108EE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2429  0108F0  0E01               	movlw	high terminal_task@command
  2430  0108F2  0100               	movlb	0	; () banked
  2431  0108F4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2432  0108F6  EC25  F094         	call	_ringbuf_pop	;wreg free
  2433  0108FA  0101               	movlb	1	; () banked
  2434  0108FC  6F8F               	movwf	??_terminal_task& (0+255),b
  2435  0108FE  0101               	movlb	1	; () banked
  2436  010900  51F9               	movf	terminal_task@i& (0+255),w,b
  2437  010902  0D01               	mullw	1
  2438  010904  0E14               	movlw	low terminal_task@op0
  2439  010906  24F3               	addwf	prodl,w,c
  2440  010908  6ED9               	movwf	fsr2l,c
  2441  01090A  0E01               	movlw	high terminal_task@op0
  2442  01090C  20F4               	addwfc	prodh,w,c
  2443  01090E  6EDA               	movwf	fsr2h,c
  2444  010910  C18F  FFDF         	movff	??_terminal_task,indf2
  2445  010914  50DF               	movf	indf2,w,c
  2446  010916  A4D8               	btfss	status,2,c
  2447  010918  D7E6               	goto	l9410
  2448                           
  2449                           ; BSR set to: 1
  2450                           ;My_terminal.c: 30: op0[i] = '\0';
  2451                           
  2452                           ; BSR set to: 1
  2453  01091A  0101               	movlb	1	; () banked
  2454  01091C  51F9               	movf	terminal_task@i& (0+255),w,b
  2455  01091E  0D01               	mullw	1
  2456  010920  0E14               	movlw	low terminal_task@op0
  2457  010922  24F3               	addwf	prodl,w,c
  2458  010924  6ED9               	movwf	fsr2l,c
  2459  010926  0E01               	movlw	high terminal_task@op0
  2460  010928  20F4               	addwfc	prodh,w,c
  2461  01092A  6EDA               	movwf	fsr2h,c
  2462  01092C  0E00               	movlw	0
  2463  01092E  6EDF               	movwf	indf2,c
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2467  010930  0E00               	movlw	0
  2468  010932  0101               	movlb	1	; () banked
  2469  010934  6FF9               	movwf	terminal_task@i& (0+255),b
  2470  010936  D002               	goto	l9420
  2471  010938                     l9418:
  2472                           
  2473                           ; BSR set to: 1
  2474  010938  0101               	movlb	1	; () banked
  2475  01093A  2BF9               	incf	terminal_task@i& (0+255),f,b
  2476  01093C                     l9420:
  2477                           
  2478                           ; BSR set to: 1
  2479  01093C  0E7C               	movlw	low terminal_task@command
  2480  01093E  0100               	movlb	0	; () banked
  2481  010940  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2482  010942  0E01               	movlw	high terminal_task@command
  2483  010944  0100               	movlb	0	; () banked
  2484  010946  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2485  010948  EC25  F094         	call	_ringbuf_pop	;wreg free
  2486  01094C  0101               	movlb	1	; () banked
  2487  01094E  6F8F               	movwf	??_terminal_task& (0+255),b
  2488  010950  0101               	movlb	1	; () banked
  2489  010952  51F9               	movf	terminal_task@i& (0+255),w,b
  2490  010954  0D01               	mullw	1
  2491  010956  0E2D               	movlw	low terminal_task@op1
  2492  010958  24F3               	addwf	prodl,w,c
  2493  01095A  6ED9               	movwf	fsr2l,c
  2494  01095C  0E01               	movlw	high terminal_task@op1
  2495  01095E  20F4               	addwfc	prodh,w,c
  2496  010960  6EDA               	movwf	fsr2h,c
  2497  010962  C18F  FFDF         	movff	??_terminal_task,indf2
  2498  010966  50DF               	movf	indf2,w,c
  2499  010968  A4D8               	btfss	status,2,c
  2500  01096A  D7E6               	goto	l9418
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;My_terminal.c: 32: op1[i] = '\0';
  2504                           
  2505                           ; BSR set to: 1
  2506  01096C  0101               	movlb	1	; () banked
  2507  01096E  51F9               	movf	terminal_task@i& (0+255),w,b
  2508  010970  0D01               	mullw	1
  2509  010972  0E2D               	movlw	low terminal_task@op1
  2510  010974  24F3               	addwf	prodl,w,c
  2511  010976  6ED9               	movwf	fsr2l,c
  2512  010978  0E01               	movlw	high terminal_task@op1
  2513  01097A  20F4               	addwfc	prodh,w,c
  2514  01097C  6EDA               	movwf	fsr2h,c
  2515  01097E  0E00               	movlw	0
  2516  010980  6EDF               	movwf	indf2,c
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2520  010982  0E00               	movlw	0
  2521  010984  0101               	movlb	1	; () banked
  2522  010986  6FF9               	movwf	terminal_task@i& (0+255),b
  2523  010988  D002               	goto	l9428
  2524  01098A                     l9426:
  2525                           
  2526                           ; BSR set to: 1
  2527  01098A  0101               	movlb	1	; () banked
  2528  01098C  2BF9               	incf	terminal_task@i& (0+255),f,b
  2529  01098E                     l9428:
  2530                           
  2531                           ; BSR set to: 1
  2532  01098E  0E7C               	movlw	low terminal_task@command
  2533  010990  0100               	movlb	0	; () banked
  2534  010992  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2535  010994  0E01               	movlw	high terminal_task@command
  2536  010996  0100               	movlb	0	; () banked
  2537  010998  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2538  01099A  EC25  F094         	call	_ringbuf_pop	;wreg free
  2539  01099E  0101               	movlb	1	; () banked
  2540  0109A0  6F8F               	movwf	??_terminal_task& (0+255),b
  2541  0109A2  0101               	movlb	1	; () banked
  2542  0109A4  51F9               	movf	terminal_task@i& (0+255),w,b
  2543  0109A6  0D01               	mullw	1
  2544  0109A8  0EC0               	movlw	low terminal_task@op2
  2545  0109AA  24F3               	addwf	prodl,w,c
  2546  0109AC  6ED9               	movwf	fsr2l,c
  2547  0109AE  0E02               	movlw	high terminal_task@op2
  2548  0109B0  20F4               	addwfc	prodh,w,c
  2549  0109B2  6EDA               	movwf	fsr2h,c
  2550  0109B4  C18F  FFDF         	movff	??_terminal_task,indf2
  2551  0109B8  50DF               	movf	indf2,w,c
  2552  0109BA  A4D8               	btfss	status,2,c
  2553  0109BC  D7E6               	goto	l9426
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;My_terminal.c: 34: op2[i] = '\0';
  2557                           
  2558                           ; BSR set to: 1
  2559  0109BE  0101               	movlb	1	; () banked
  2560  0109C0  51F9               	movf	terminal_task@i& (0+255),w,b
  2561  0109C2  0D01               	mullw	1
  2562  0109C4  0EC0               	movlw	low terminal_task@op2
  2563  0109C6  24F3               	addwf	prodl,w,c
  2564  0109C8  6ED9               	movwf	fsr2l,c
  2565  0109CA  0E02               	movlw	high terminal_task@op2
  2566  0109CC  20F4               	addwfc	prodh,w,c
  2567  0109CE  6EDA               	movwf	fsr2h,c
  2568  0109D0  0E00               	movlw	0
  2569  0109D2  6EDF               	movwf	indf2,c
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2573  0109D4  0E00               	movlw	0
  2574  0109D6  0101               	movlb	1	; () banked
  2575  0109D8  6FF9               	movwf	terminal_task@i& (0+255),b
  2576  0109DA  D002               	goto	l9436
  2577  0109DC                     l9434:
  2578                           
  2579                           ; BSR set to: 1
  2580  0109DC  0101               	movlb	1	; () banked
  2581  0109DE  2BF9               	incf	terminal_task@i& (0+255),f,b
  2582  0109E0                     l9436:
  2583                           
  2584                           ; BSR set to: 1
  2585  0109E0  0E7C               	movlw	low terminal_task@command
  2586  0109E2  0100               	movlb	0	; () banked
  2587  0109E4  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2588  0109E6  0E01               	movlw	high terminal_task@command
  2589  0109E8  0100               	movlb	0	; () banked
  2590  0109EA  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2591  0109EC  EC25  F094         	call	_ringbuf_pop	;wreg free
  2592  0109F0  0101               	movlb	1	; () banked
  2593  0109F2  6F8F               	movwf	??_terminal_task& (0+255),b
  2594  0109F4  0101               	movlb	1	; () banked
  2595  0109F6  51F9               	movf	terminal_task@i& (0+255),w,b
  2596  0109F8  0D01               	mullw	1
  2597  0109FA  0ED9               	movlw	low terminal_task@op3
  2598  0109FC  24F3               	addwf	prodl,w,c
  2599  0109FE  6ED9               	movwf	fsr2l,c
  2600  010A00  0E02               	movlw	high terminal_task@op3
  2601  010A02  20F4               	addwfc	prodh,w,c
  2602  010A04  6EDA               	movwf	fsr2h,c
  2603  010A06  C18F  FFDF         	movff	??_terminal_task,indf2
  2604  010A0A  50DF               	movf	indf2,w,c
  2605  010A0C  A4D8               	btfss	status,2,c
  2606  010A0E  D7E6               	goto	l9434
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;My_terminal.c: 36: op3[i] = '\0';
  2610                           
  2611                           ; BSR set to: 1
  2612  010A10  0101               	movlb	1	; () banked
  2613  010A12  51F9               	movf	terminal_task@i& (0+255),w,b
  2614  010A14  0D01               	mullw	1
  2615  010A16  0ED9               	movlw	low terminal_task@op3
  2616  010A18  24F3               	addwf	prodl,w,c
  2617  010A1A  6ED9               	movwf	fsr2l,c
  2618  010A1C  0E02               	movlw	high terminal_task@op3
  2619  010A1E  20F4               	addwfc	prodh,w,c
  2620  010A20  6EDA               	movwf	fsr2h,c
  2621  010A22  0E00               	movlw	0
  2622  010A24  6EDF               	movwf	indf2,c
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2626  010A26  C18B  F0BF         	movff	terminal_task@tx,terminal_operation@tx
  2627  010A2A  C18C  F0C0         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2628  010A2E  0E14               	movlw	low terminal_task@op0
  2629  010A30  0100               	movlb	0	; () banked
  2630  010A32  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2631  010A34  0E01               	movlw	high terminal_task@op0
  2632  010A36  0100               	movlb	0	; () banked
  2633  010A38  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2634  010A3A  0E2D               	movlw	low terminal_task@op1
  2635  010A3C  0100               	movlb	0	; () banked
  2636  010A3E  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2637  010A40  0E01               	movlw	high terminal_task@op1
  2638  010A42  0100               	movlb	0	; () banked
  2639  010A44  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2640  010A46  0EC0               	movlw	low terminal_task@op2
  2641  010A48  0100               	movlb	0	; () banked
  2642  010A4A  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2643  010A4C  0E02               	movlw	high terminal_task@op2
  2644  010A4E  0100               	movlb	0	; () banked
  2645  010A50  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2646  010A52  0ED9               	movlw	low terminal_task@op3
  2647  010A54  0100               	movlb	0	; () banked
  2648  010A56  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2649  010A58  0E02               	movlw	high terminal_task@op3
  2650  010A5A  0100               	movlb	0	; () banked
  2651  010A5C  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2652  010A5E  EC55  F093         	call	_terminal_operation	;wreg free
  2653                           
  2654                           ;My_terminal.c: 38: break;
  2655  010A62  0012               	return	
  2656  010A64                     l9442:
  2657                           
  2658                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2659  010A64  0E7C               	movlw	low terminal_task@command
  2660  010A66  0100               	movlb	0	; () banked
  2661  010A68  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2662  010A6A  0E01               	movlw	high terminal_task@command
  2663  010A6C  0100               	movlb	0	; () banked
  2664  010A6E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2665  010A70  0E00               	movlw	0
  2666  010A72  0100               	movlb	0	; () banked
  2667  010A74  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2668  010A76  ECEB  F092         	call	_ringbuf_put	;wreg free
  2669                           
  2670                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2671  010A7A  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2672  010A7E  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2673  010A82  0E20               	movlw	32
  2674  010A84  0100               	movlb	0	; () banked
  2675  010A86  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2676  010A88  ECEB  F092         	call	_ringbuf_put	;wreg free
  2677                           
  2678                           ;My_terminal.c: 42: break;
  2679  010A8C  0012               	return	
  2680  010A8E                     l9444:
  2681                           
  2682                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2683  010A8E  0E7C               	movlw	low terminal_task@command
  2684  010A90  0100               	movlb	0	; () banked
  2685  010A92  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2686  010A94  0E01               	movlw	high terminal_task@command
  2687  010A96  0100               	movlb	0	; () banked
  2688  010A98  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2689  010A9A  ECB9  F099         	call	_ringbuf_backspace	;wreg free
  2690                           
  2691                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2692  010A9E  C18B  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2693  010AA2  C18C  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2694  010AA6  0EE3               	movlw	low STR_19
  2695  010AA8  0100               	movlb	0	; () banked
  2696  010AAA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2697  010AAC  0EFF               	movlw	high STR_19
  2698  010AAE  0100               	movlb	0	; () banked
  2699  010AB0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2700  010AB2  EC1E  F09C         	call	_ringbuf_put_str	;wreg free
  2701                           
  2702                           ;My_terminal.c: 46: break;
  2703  010AB6  0012               	return	
  2704  010AB8                     l9448:
  2705                           
  2706                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2707  010AB8  0E00               	movlw	0
  2708  010ABA  0101               	movlb	1	; () banked
  2709  010ABC  6FF7               	movwf	terminal_task@i_4555& (0+255),b
  2710  010ABE  D00E               	goto	l9454
  2711  010AC0                     l9450:
  2712                           
  2713                           ; BSR set to: 1
  2714  010AC0  C18B  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2715  010AC4  C18C  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2716  010AC8  0EE3               	movlw	low STR_19
  2717  010ACA  0100               	movlb	0	; () banked
  2718  010ACC  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2719  010ACE  0EFF               	movlw	high STR_19
  2720  010AD0  0100               	movlb	0	; () banked
  2721  010AD2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2722  010AD4  EC1E  F09C         	call	_ringbuf_put_str	;wreg free
  2723  010AD8  0101               	movlb	1	; () banked
  2724  010ADA  2BF7               	incf	terminal_task@i_4555& (0+255),f,b
  2725  010ADC                     l9454:
  2726                           
  2727                           ; BSR set to: 1
  2728  010ADC  0E7C               	movlw	low terminal_task@command
  2729  010ADE  0100               	movlb	0	; () banked
  2730  010AE0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2731  010AE2  0E01               	movlw	high terminal_task@command
  2732  010AE4  0100               	movlb	0	; () banked
  2733  010AE6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2734  010AE8  EC07  F08F         	call	_ringbuf_num	;wreg free
  2735  010AEC  0101               	movlb	1	; () banked
  2736  010AEE  51F7               	movf	terminal_task@i_4555& (0+255),w,b
  2737  010AF0  0101               	movlb	1	; () banked
  2738  010AF2  6F8F               	movwf	??_terminal_task& (0+255),b
  2739  010AF4  6B90               	clrf	(??_terminal_task+1)& (0+255),b
  2740  010AF6  0100               	movlb	0	; () banked
  2741  010AF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2742  010AFA  0101               	movlb	1	; () banked
  2743  010AFC  5D8F               	subwf	??_terminal_task& (0+255),w,b
  2744  010AFE  0100               	movlb	0	; () banked
  2745  010B00  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2746  010B02  0101               	movlb	1	; () banked
  2747  010B04  5990               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2748  010B06  A0D8               	btfss	status,0,c
  2749  010B08  D7DB               	goto	l9450
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2753                           
  2754                           ; BSR set to: 1
  2755  010B0A  0E7C               	movlw	low terminal_task@command
  2756  010B0C  0100               	movlb	0	; () banked
  2757  010B0E  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2758  010B10  0E01               	movlw	high terminal_task@command
  2759  010B12  0100               	movlb	0	; () banked
  2760  010B14  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2761  010B16  ECFC  F09F         	call	_ringbuf_delete	;wreg free
  2762                           
  2763                           ;My_terminal.c: 50: break;
  2764  010B1A  0012               	return	
  2765  010B1C                     l9458:
  2766                           
  2767                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2768  010B1C  0E1F               	movlw	31
  2769  010B1E  0101               	movlb	1	; () banked
  2770  010B20  65F8               	cpfsgt	terminal_task@ascii& (0+255),b
  2771  010B22  0012               	return	
  2772                           
  2773                           ; BSR set to: 1
  2774  010B24  0E7F               	movlw	127
  2775  010B26  0101               	movlb	1	; () banked
  2776  010B28  61F8               	cpfslt	terminal_task@ascii& (0+255),b
  2777  010B2A  0012               	return	
  2778                           
  2779                           ; BSR set to: 1
  2780                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2781  010B2C  0E7C               	movlw	low terminal_task@command
  2782  010B2E  0100               	movlb	0	; () banked
  2783  010B30  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2784  010B32  0E01               	movlw	high terminal_task@command
  2785  010B34  0100               	movlb	0	; () banked
  2786  010B36  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2787  010B38  C1F8  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  2788  010B3C  ECEB  F092         	call	_ringbuf_put	;wreg free
  2789                           
  2790                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2791  010B40  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2792  010B44  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2793  010B48  C1F8  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  2794  010B4C  ECEB  F092         	call	_ringbuf_put	;wreg free
  2795                           
  2796                           ;My_terminal.c: 57: }
  2797                           
  2798                           ;My_terminal.c: 55: }
  2799                           ;My_terminal.c: 56: break;
  2800  010B50  0012               	return	
  2801  010B52                     l9466:
  2802  010B52  0101               	movlb	1	; () banked
  2803  010B54  51F8               	movf	terminal_task@ascii& (0+255),w,b
  2804                           
  2805                           ; Switch size 1, requested type "space"
  2806                           ; Number of cases is 4, Range of values is 8 to 127
  2807                           ; switch strategies available:
  2808                           ; Name         Instructions Cycles
  2809                           ; simple_byte           13     7 (average)
  2810                           ;	Chosen strategy is simple_byte
  2811  010B56  0A08               	xorlw	8	; case 8
  2812  010B58  B4D8               	btfsc	status,2,c
  2813  010B5A  D799               	goto	l9444
  2814  010B5C  0A05               	xorlw	5	; case 13
  2815  010B5E  B4D8               	btfsc	status,2,c
  2816  010B60  D682               	goto	l9406
  2817  010B62  0A2D               	xorlw	45	; case 32
  2818  010B64  B4D8               	btfsc	status,2,c
  2819  010B66  D77E               	goto	l9442
  2820  010B68  0A5F               	xorlw	95	; case 127
  2821  010B6A  B4D8               	btfsc	status,2,c
  2822  010B6C  D7A5               	goto	l9448
  2823  010B6E  D7D6               	goto	l9458
  2824  010B70                     __end_of_terminal_task:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           postinc0	equ	0xFEE
  2834                           wreg	equ	0xFE8
  2835                           postdec1	equ	0xFE5
  2836                           fsr1h	equ	0xFE2
  2837                           fsr1l	equ	0xFE1
  2838                           indf2	equ	0xFDF
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _terminal_operation *****************
  2844 ;; Defined at:
  2845 ;;		line 50 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2848 ;;		 -> usb_tx(8), 
  2849 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2850 ;;		 -> terminal_task@op0(25), 
  2851 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2852 ;;		 -> terminal_task@op1(25), 
  2853 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2854 ;;		 -> terminal_task@op2(25), 
  2855 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2856 ;;		 -> terminal_task@op3(25), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2868 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;Total ram usage:       10 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:   19
  2875 ;; This function calls:
  2876 ;;		_ringbuf_put_str
  2877 ;;		_strcmp
  2878 ;;		_terminal_time
  2879 ;; This function is called by:
  2880 ;;		_terminal_task
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text2
  2885  0126AA                     __ptext2:
  2886                           	opt stack 0
  2887  0126AA                     _terminal_operation:
  2888                           	opt stack 10
  2889                           
  2890                           ;main.c: 51: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2891                           
  2892                           ;incstack = 0
  2893  0126AA  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2894  0126AE  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2895  0126B2  0ECF               	movlw	low STR_41
  2896  0126B4  0100               	movlb	0	; () banked
  2897  0126B6  6F62               	movwf	strcmp@s2& (0+255),b
  2898  0126B8  0EFF               	movlw	high STR_41
  2899  0126BA  0100               	movlb	0	; () banked
  2900  0126BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2901  0126BE  ECB2  F09C         	call	_strcmp	;wreg free
  2902  0126C2  0100               	movlb	0	; () banked
  2903  0126C4  5160               	movf	?_strcmp& (0+255),w,b
  2904  0126C6  0100               	movlb	0	; () banked
  2905  0126C8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2906  0126CA  B4D8               	btfsc	status,2,c
  2907  0126CC  D012               	goto	l9218
  2908                           
  2909                           ; BSR set to: 0
  2910  0126CE  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2911  0126D2  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2912  0126D6  0EEE               	movlw	low STR_42
  2913  0126D8  0100               	movlb	0	; () banked
  2914  0126DA  6F62               	movwf	strcmp@s2& (0+255),b
  2915  0126DC  0EFF               	movlw	high STR_42
  2916  0126DE  0100               	movlb	0	; () banked
  2917  0126E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2918  0126E2  ECB2  F09C         	call	_strcmp	;wreg free
  2919  0126E6  0100               	movlb	0	; () banked
  2920  0126E8  5160               	movf	?_strcmp& (0+255),w,b
  2921  0126EA  0100               	movlb	0	; () banked
  2922  0126EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2923  0126EE  A4D8               	btfss	status,2,c
  2924  0126F0  D00C               	goto	l9220
  2925  0126F2                     l9218:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;main.c: 52: ringbuf_put_str(tx,
  2929                           ;main.c: 53: "\t******************************\n"
  2930                           ;main.c: 54: "\t**** PIC18F27J53 template ****\n"
  2931                           ;main.c: 55: "\t**** Made by @Ryokeri14   ****\n"
  2932                           ;main.c: 56: "\t******************************\n\n"
  2933                           ;main.c: 57: "\tprint_time(t)\n"
  2934                           ;main.c: 58: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  2935                           ;main.c: 59: "\n\tfor Developper\n"
  2936                           ;main.c: 60: "\tRESET();\n"
  2937                           ;main.c: 61: "\tbootload\n"
  2938                           ;main.c: 62: );
  2939  0126F2  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2940  0126F6  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2941  0126FA  0E58               	movlw	low STR_43
  2942  0126FC  0100               	movlb	0	; () banked
  2943  0126FE  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2944  012700  0EFE               	movlw	high STR_43
  2945  012702  0100               	movlb	0	; () banked
  2946  012704  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2947  012706  EC1E  F09C         	call	_ringbuf_put_str	;wreg free
  2948  01270A                     l9220:
  2949                           
  2950                           ;main.c: 63: }
  2951                           ;main.c: 64: terminal_time(tx, op0, op1, op2);
  2952  01270A  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  2953  01270E  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2954  012712  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  2955  012716  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2956  01271A  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  2957  01271E  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2958  012722  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  2959  012726  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2960  01272A  EC2D  F082         	call	_terminal_time	;wreg free
  2961                           
  2962                           ;main.c: 65: if (!strcmp(op0, "RESET();")) {
  2963  01272E  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2964  012732  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2965  012736  0E88               	movlw	low STR_44
  2966  012738  0100               	movlb	0	; () banked
  2967  01273A  6F62               	movwf	strcmp@s2& (0+255),b
  2968  01273C  0EFF               	movlw	high STR_44
  2969  01273E  0100               	movlb	0	; () banked
  2970  012740  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2971  012742  ECB2  F09C         	call	_strcmp	;wreg free
  2972  012746  0100               	movlb	0	; () banked
  2973  012748  5160               	movf	?_strcmp& (0+255),w,b
  2974  01274A  0100               	movlb	0	; () banked
  2975  01274C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2976  01274E  B4D8               	btfsc	status,2,c
  2977                           
  2978                           ; BSR set to: 0
  2979  012750  00FF               	reset		;# 
  2980                           
  2981                           ;main.c: 67: }
  2982                           ;main.c: 68: if (!strcmp(op0, "bootload")) {
  2983  012752  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2984  012756  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2985  01275A  0E91               	movlw	low STR_45
  2986  01275C  0100               	movlb	0	; () banked
  2987  01275E  6F62               	movwf	strcmp@s2& (0+255),b
  2988  012760  0EFF               	movlw	high STR_45
  2989  012762  0100               	movlb	0	; () banked
  2990  012764  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2991  012766  ECB2  F09C         	call	_strcmp	;wreg free
  2992  01276A  0100               	movlb	0	; () banked
  2993  01276C  5160               	movf	?_strcmp& (0+255),w,b
  2994  01276E  0100               	movlb	0	; () banked
  2995  012770  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2996  012772  A4D8               	btfss	status,2,c
  2997  012774  0012               	return	
  2998                           
  2999                           ; BSR set to: 0
  3000  012776  EF0E F000          	goto	28	;# 
  3001  01277A  0012               	return	
  3002  01277C                     __end_of_terminal_operation:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           prodh	equ	0xFF4
  3009                           prodl	equ	0xFF3
  3010                           intcon	equ	0xFF2
  3011                           postinc0	equ	0xFEE
  3012                           wreg	equ	0xFE8
  3013                           postdec1	equ	0xFE5
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           fsr2h	equ	0xFDA
  3018                           fsr2l	equ	0xFD9
  3019                           status	equ	0xFD8
  3020                           
  3021 ;; *************** function _terminal_time *****************
  3022 ;; Defined at:
  3023 ;;		line 93 in file "../My_library/My_terminal.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  3026 ;;		 -> usb_tx(8), 
  3027 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  3028 ;;		 -> terminal_task@op0(25), 
  3029 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  3030 ;;		 -> terminal_task@op1(25), 
  3031 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  3032 ;;		 -> terminal_task@op2(25), 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3044 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;Total ram usage:        9 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:   18
  3051 ;; This function calls:
  3052 ;;		_atoi
  3053 ;;		_month_length
  3054 ;;		_print_time
  3055 ;;		_strcmp
  3056 ;;		_terminal_at_hand
  3057 ;; This function is called by:
  3058 ;;		_terminal_operation
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text3
  3063  01045A                     __ptext3:
  3064                           	opt stack 0
  3065  01045A                     _terminal_time:
  3066                           	opt stack 10
  3067                           
  3068                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3069                           
  3070                           ;incstack = 0
  3071  01045A  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3072  01045E  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3073  010462  0E74               	movlw	low STR_25
  3074  010464  0100               	movlb	0	; () banked
  3075  010466  6F62               	movwf	strcmp@s2& (0+255),b
  3076  010468  0EFF               	movlw	high STR_25
  3077  01046A  0100               	movlb	0	; () banked
  3078  01046C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3079  01046E  ECB2  F09C         	call	_strcmp	;wreg free
  3080  010472  0100               	movlb	0	; () banked
  3081  010474  5160               	movf	?_strcmp& (0+255),w,b
  3082  010476  0100               	movlb	0	; () banked
  3083  010478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3084  01047A  B4D8               	btfsc	status,2,c
  3085  01047C  D012               	goto	l9010
  3086                           
  3087                           ; BSR set to: 0
  3088  01047E  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3089  010482  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3090  010486  0EEC               	movlw	low (STR_27+1)
  3091  010488  0100               	movlb	0	; () banked
  3092  01048A  6F62               	movwf	strcmp@s2& (0+255),b
  3093  01048C  0EFF               	movlw	high (STR_27+1)
  3094  01048E  0100               	movlb	0	; () banked
  3095  010490  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3096  010492  ECB2  F09C         	call	_strcmp	;wreg free
  3097  010496  0100               	movlb	0	; () banked
  3098  010498  5160               	movf	?_strcmp& (0+255),w,b
  3099  01049A  0100               	movlb	0	; () banked
  3100  01049C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3101  01049E  A4D8               	btfss	status,2,c
  3102  0104A0  D006               	goto	l9012
  3103  0104A2                     l9010:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;My_terminal.c: 95: print_time(tx);
  3107  0104A2  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  3108  0104A6  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  3109  0104AA  EC47  F09A         	call	_print_time	;wreg free
  3110  0104AE                     l9012:
  3111                           
  3112                           ;My_terminal.c: 96: }
  3113                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3114  0104AE  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3115  0104B2  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3116  0104B6  0EEB               	movlw	low STR_27
  3117  0104B8  0100               	movlb	0	; () banked
  3118  0104BA  6F62               	movwf	strcmp@s2& (0+255),b
  3119  0104BC  0EFF               	movlw	high STR_27
  3120  0104BE  0100               	movlb	0	; () banked
  3121  0104C0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3122  0104C2  ECB2  F09C         	call	_strcmp	;wreg free
  3123  0104C6  0100               	movlb	0	; () banked
  3124  0104C8  5160               	movf	?_strcmp& (0+255),w,b
  3125  0104CA  0100               	movlb	0	; () banked
  3126  0104CC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3127  0104CE  B4D8               	btfsc	status,2,c
  3128  0104D0  D012               	goto	l9016
  3129                           
  3130                           ; BSR set to: 0
  3131  0104D2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3132  0104D6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3133  0104DA  0E68               	movlw	low STR_28
  3134  0104DC  0100               	movlb	0	; () banked
  3135  0104DE  6F62               	movwf	strcmp@s2& (0+255),b
  3136  0104E0  0EFF               	movlw	high STR_28
  3137  0104E2  0100               	movlb	0	; () banked
  3138  0104E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3139  0104E6  ECB2  F09C         	call	_strcmp	;wreg free
  3140  0104EA  0100               	movlb	0	; () banked
  3141  0104EC  5160               	movf	?_strcmp& (0+255),w,b
  3142  0104EE  0100               	movlb	0	; () banked
  3143  0104F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3144  0104F2  A4D8               	btfss	status,2,c
  3145  0104F4  0012               	return	
  3146  0104F6                     l9016:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3150  0104F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3151  0104FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3152  0104FE  0EE9               	movlw	low (STR_34+2)
  3153  010500  0100               	movlb	0	; () banked
  3154  010502  6F62               	movwf	strcmp@s2& (0+255),b
  3155  010504  0EFF               	movlw	high (STR_34+2)
  3156  010506  0100               	movlb	0	; () banked
  3157  010508  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3158  01050A  ECB2  F09C         	call	_strcmp	;wreg free
  3159  01050E  0100               	movlb	0	; () banked
  3160  010510  5160               	movf	?_strcmp& (0+255),w,b
  3161  010512  0100               	movlb	0	; () banked
  3162  010514  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3163  010516  B4D8               	btfsc	status,2,c
  3164  010518  D012               	goto	l9020
  3165                           
  3166                           ; BSR set to: 0
  3167  01051A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3168  01051E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3169  010522  0ED4               	movlw	low STR_30
  3170  010524  0100               	movlb	0	; () banked
  3171  010526  6F62               	movwf	strcmp@s2& (0+255),b
  3172  010528  0EFF               	movlw	high STR_30
  3173  01052A  0100               	movlb	0	; () banked
  3174  01052C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3175  01052E  ECB2  F09C         	call	_strcmp	;wreg free
  3176  010532  0100               	movlb	0	; () banked
  3177  010534  5160               	movf	?_strcmp& (0+255),w,b
  3178  010536  0100               	movlb	0	; () banked
  3179  010538  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3180  01053A  A4D8               	btfss	status,2,c
  3181  01053C  D01C               	goto	l9022
  3182  01053E                     l9020:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3186  01053E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3187  010542  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3188  010546  0E50               	movlw	low (_now+10)
  3189  010548  0100               	movlb	0	; () banked
  3190  01054A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3191  01054C  0E01               	movlw	high (_now+10)
  3192  01054E  0100               	movlb	0	; () banked
  3193  010550  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3194  010552  0E00               	movlw	0
  3195  010554  0100               	movlb	0	; () banked
  3196  010556  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3197  010558  0E63               	movlw	99
  3198  01055A  0100               	movlb	0	; () banked
  3199  01055C  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3200  01055E  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3201  010562  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3202  010566  EC15  F08E         	call	_atoi	;wreg free
  3203  01056A  0100               	movlb	0	; () banked
  3204  01056C  5166               	movf	?_atoi& (0+255),w,b
  3205  01056E  0100               	movlb	0	; () banked
  3206  010570  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3207  010572  EC50  F09C         	call	_terminal_at_hand	;wreg free
  3208  010576                     l9022:
  3209                           
  3210                           ;My_terminal.c: 100: }
  3211                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3212  010576  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3213  01057A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3214  01057E  0EF0               	movlw	low STR_31
  3215  010580  0100               	movlb	0	; () banked
  3216  010582  6F62               	movwf	strcmp@s2& (0+255),b
  3217  010584  0EFF               	movlw	high STR_31
  3218  010586  0100               	movlb	0	; () banked
  3219  010588  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3220  01058A  ECB2  F09C         	call	_strcmp	;wreg free
  3221  01058E  0100               	movlb	0	; () banked
  3222  010590  5160               	movf	?_strcmp& (0+255),w,b
  3223  010592  0100               	movlb	0	; () banked
  3224  010594  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3225  010596  B4D8               	btfsc	status,2,c
  3226  010598  D012               	goto	l9026
  3227                           
  3228                           ; BSR set to: 0
  3229  01059A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3230  01059E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3231  0105A2  0EC9               	movlw	low STR_32
  3232  0105A4  0100               	movlb	0	; () banked
  3233  0105A6  6F62               	movwf	strcmp@s2& (0+255),b
  3234  0105A8  0EFF               	movlw	high STR_32
  3235  0105AA  0100               	movlb	0	; () banked
  3236  0105AC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3237  0105AE  ECB2  F09C         	call	_strcmp	;wreg free
  3238  0105B2  0100               	movlb	0	; () banked
  3239  0105B4  5160               	movf	?_strcmp& (0+255),w,b
  3240  0105B6  0100               	movlb	0	; () banked
  3241  0105B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3242  0105BA  A4D8               	btfss	status,2,c
  3243  0105BC  D01C               	goto	l9028
  3244  0105BE                     l9026:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3248  0105BE  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3249  0105C2  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3250  0105C6  0E4F               	movlw	low (_now+9)
  3251  0105C8  0100               	movlb	0	; () banked
  3252  0105CA  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3253  0105CC  0E01               	movlw	high (_now+9)
  3254  0105CE  0100               	movlb	0	; () banked
  3255  0105D0  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3256  0105D2  0E01               	movlw	1
  3257  0105D4  0100               	movlb	0	; () banked
  3258  0105D6  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3259  0105D8  0E0C               	movlw	12
  3260  0105DA  0100               	movlb	0	; () banked
  3261  0105DC  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3262  0105DE  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3263  0105E2  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3264  0105E6  EC15  F08E         	call	_atoi	;wreg free
  3265  0105EA  0100               	movlb	0	; () banked
  3266  0105EC  5166               	movf	?_atoi& (0+255),w,b
  3267  0105EE  0100               	movlb	0	; () banked
  3268  0105F0  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3269  0105F2  EC50  F09C         	call	_terminal_at_hand	;wreg free
  3270  0105F6                     l9028:
  3271                           
  3272                           ;My_terminal.c: 103: }
  3273                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3274  0105F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3275  0105FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3276  0105FE  0EE1               	movlw	low (STR_1+3)
  3277  010600  0100               	movlb	0	; () banked
  3278  010602  6F62               	movwf	strcmp@s2& (0+255),b
  3279  010604  0EFF               	movlw	high (STR_1+3)
  3280  010606  0100               	movlb	0	; () banked
  3281  010608  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3282  01060A  ECB2  F09C         	call	_strcmp	;wreg free
  3283  01060E  0100               	movlb	0	; () banked
  3284  010610  5160               	movf	?_strcmp& (0+255),w,b
  3285  010612  0100               	movlb	0	; () banked
  3286  010614  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3287  010616  B4D8               	btfsc	status,2,c
  3288  010618  D012               	goto	l9032
  3289                           
  3290                           ; BSR set to: 0
  3291  01061A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3292  01061E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3293  010622  0EE7               	movlw	low STR_34
  3294  010624  0100               	movlb	0	; () banked
  3295  010626  6F62               	movwf	strcmp@s2& (0+255),b
  3296  010628  0EFF               	movlw	high STR_34
  3297  01062A  0100               	movlb	0	; () banked
  3298  01062C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3299  01062E  ECB2  F09C         	call	_strcmp	;wreg free
  3300  010632  0100               	movlb	0	; () banked
  3301  010634  5160               	movf	?_strcmp& (0+255),w,b
  3302  010636  0100               	movlb	0	; () banked
  3303  010638  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3304  01063A  A4D8               	btfss	status,2,c
  3305  01063C  D023               	goto	l9036
  3306  01063E                     l9032:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3310  01063E  C14F  F066         	movff	_now+9,month_length@month
  3311  010642  0101               	movlb	1	; () banked
  3312  010644  5150               	movf	(_now+10)& (0+255),w,b
  3313  010646  EC64  F090         	call	_month_length
  3314  01064A  0100               	movlb	0	; () banked
  3315  01064C  6FBE               	movwf	_terminal_time$6212& (0+255),b
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3319  01064E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3320  010652  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3321  010656  0E4E               	movlw	low (_now+8)
  3322  010658  0100               	movlb	0	; () banked
  3323  01065A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3324  01065C  0E01               	movlw	high (_now+8)
  3325  01065E  0100               	movlb	0	; () banked
  3326  010660  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3327  010662  0E01               	movlw	1
  3328  010664  0100               	movlb	0	; () banked
  3329  010666  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3330  010668  C0BE  F0B4         	movff	_terminal_time$6212,terminal_at_hand@max
  3331  01066C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3332  010670  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3333  010674  EC15  F08E         	call	_atoi	;wreg free
  3334  010678  0100               	movlb	0	; () banked
  3335  01067A  5166               	movf	?_atoi& (0+255),w,b
  3336  01067C  0100               	movlb	0	; () banked
  3337  01067E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3338  010680  EC50  F09C         	call	_terminal_at_hand	;wreg free
  3339  010684                     l9036:
  3340                           
  3341                           ;My_terminal.c: 106: }
  3342                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3343  010684  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3344  010688  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3345  01068C  0ECD               	movlw	low (STR_32+4)
  3346  01068E  0100               	movlb	0	; () banked
  3347  010690  6F62               	movwf	strcmp@s2& (0+255),b
  3348  010692  0EFF               	movlw	high (STR_32+4)
  3349  010694  0100               	movlb	0	; () banked
  3350  010696  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3351  010698  ECB2  F09C         	call	_strcmp	;wreg free
  3352  01069C  0100               	movlb	0	; () banked
  3353  01069E  5160               	movf	?_strcmp& (0+255),w,b
  3354  0106A0  0100               	movlb	0	; () banked
  3355  0106A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3356  0106A4  B4D8               	btfsc	status,2,c
  3357  0106A6  D012               	goto	l9040
  3358                           
  3359                           ; BSR set to: 0
  3360  0106A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3361  0106AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3362  0106B0  0ED9               	movlw	low STR_36
  3363  0106B2  0100               	movlb	0	; () banked
  3364  0106B4  6F62               	movwf	strcmp@s2& (0+255),b
  3365  0106B6  0EFF               	movlw	high STR_36
  3366  0106B8  0100               	movlb	0	; () banked
  3367  0106BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3368  0106BC  ECB2  F09C         	call	_strcmp	;wreg free
  3369  0106C0  0100               	movlb	0	; () banked
  3370  0106C2  5160               	movf	?_strcmp& (0+255),w,b
  3371  0106C4  0100               	movlb	0	; () banked
  3372  0106C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3373  0106C8  A4D8               	btfss	status,2,c
  3374  0106CA  D01C               	goto	l9042
  3375  0106CC                     l9040:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3379  0106CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3380  0106D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3381  0106D4  0E4C               	movlw	low (_now+6)
  3382  0106D6  0100               	movlb	0	; () banked
  3383  0106D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3384  0106DA  0E01               	movlw	high (_now+6)
  3385  0106DC  0100               	movlb	0	; () banked
  3386  0106DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3387  0106E0  0E00               	movlw	0
  3388  0106E2  0100               	movlb	0	; () banked
  3389  0106E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3390  0106E6  0E17               	movlw	23
  3391  0106E8  0100               	movlb	0	; () banked
  3392  0106EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3393  0106EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3394  0106F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3395  0106F4  EC15  F08E         	call	_atoi	;wreg free
  3396  0106F8  0100               	movlb	0	; () banked
  3397  0106FA  5166               	movf	?_atoi& (0+255),w,b
  3398  0106FC  0100               	movlb	0	; () banked
  3399  0106FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3400  010700  EC50  F09C         	call	_terminal_at_hand	;wreg free
  3401  010704                     l9042:
  3402                           
  3403                           ;My_terminal.c: 109: }
  3404                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3405  010704  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3406  010708  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3407  01070C  0EF2               	movlw	low STR_37
  3408  01070E  0100               	movlb	0	; () banked
  3409  010710  6F62               	movwf	strcmp@s2& (0+255),b
  3410  010712  0EFF               	movlw	high STR_37
  3411  010714  0100               	movlb	0	; () banked
  3412  010716  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3413  010718  ECB2  F09C         	call	_strcmp	;wreg free
  3414  01071C  0100               	movlb	0	; () banked
  3415  01071E  5160               	movf	?_strcmp& (0+255),w,b
  3416  010720  0100               	movlb	0	; () banked
  3417  010722  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3418  010724  B4D8               	btfsc	status,2,c
  3419  010726  D012               	goto	l9046
  3420                           
  3421                           ; BSR set to: 0
  3422  010728  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3423  01072C  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3424  010730  0EC2               	movlw	low STR_38
  3425  010732  0100               	movlb	0	; () banked
  3426  010734  6F62               	movwf	strcmp@s2& (0+255),b
  3427  010736  0EFF               	movlw	high STR_38
  3428  010738  0100               	movlb	0	; () banked
  3429  01073A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3430  01073C  ECB2  F09C         	call	_strcmp	;wreg free
  3431  010740  0100               	movlb	0	; () banked
  3432  010742  5160               	movf	?_strcmp& (0+255),w,b
  3433  010744  0100               	movlb	0	; () banked
  3434  010746  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3435  010748  A4D8               	btfss	status,2,c
  3436  01074A  D01C               	goto	l9048
  3437  01074C                     l9046:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3441  01074C  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3442  010750  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3443  010754  0E4B               	movlw	low (_now+5)
  3444  010756  0100               	movlb	0	; () banked
  3445  010758  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3446  01075A  0E01               	movlw	high (_now+5)
  3447  01075C  0100               	movlb	0	; () banked
  3448  01075E  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3449  010760  0E00               	movlw	0
  3450  010762  0100               	movlb	0	; () banked
  3451  010764  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3452  010766  0E3B               	movlw	59
  3453  010768  0100               	movlb	0	; () banked
  3454  01076A  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3455  01076C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3456  010770  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3457  010774  EC15  F08E         	call	_atoi	;wreg free
  3458  010778  0100               	movlb	0	; () banked
  3459  01077A  5166               	movf	?_atoi& (0+255),w,b
  3460  01077C  0100               	movlb	0	; () banked
  3461  01077E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3462  010780  EC50  F09C         	call	_terminal_at_hand	;wreg free
  3463  010784                     l9048:
  3464                           
  3465                           ;My_terminal.c: 112: }
  3466                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3467  010784  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3468  010788  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3469  01078C  0EF4               	movlw	low STR_39
  3470  01078E  0100               	movlb	0	; () banked
  3471  010790  6F62               	movwf	strcmp@s2& (0+255),b
  3472  010792  0EFF               	movlw	high STR_39
  3473  010794  0100               	movlb	0	; () banked
  3474  010796  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3475  010798  ECB2  F09C         	call	_strcmp	;wreg free
  3476  01079C  0100               	movlb	0	; () banked
  3477  01079E  5160               	movf	?_strcmp& (0+255),w,b
  3478  0107A0  0100               	movlb	0	; () banked
  3479  0107A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3480  0107A4  B4D8               	btfsc	status,2,c
  3481  0107A6  D012               	goto	l9052
  3482                           
  3483                           ; BSR set to: 0
  3484  0107A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3485  0107AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3486  0107B0  0EBB               	movlw	low STR_40
  3487  0107B2  0100               	movlb	0	; () banked
  3488  0107B4  6F62               	movwf	strcmp@s2& (0+255),b
  3489  0107B6  0EFF               	movlw	high STR_40
  3490  0107B8  0100               	movlb	0	; () banked
  3491  0107BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3492  0107BC  ECB2  F09C         	call	_strcmp	;wreg free
  3493  0107C0  0100               	movlb	0	; () banked
  3494  0107C2  5160               	movf	?_strcmp& (0+255),w,b
  3495  0107C4  0100               	movlb	0	; () banked
  3496  0107C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3497  0107C8  A4D8               	btfss	status,2,c
  3498  0107CA  0012               	return	
  3499  0107CC                     l9052:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3503  0107CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3504  0107D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3505  0107D4  0E4A               	movlw	low (_now+4)
  3506  0107D6  0100               	movlb	0	; () banked
  3507  0107D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3508  0107DA  0E01               	movlw	high (_now+4)
  3509  0107DC  0100               	movlb	0	; () banked
  3510  0107DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3511  0107E0  0E00               	movlw	0
  3512  0107E2  0100               	movlb	0	; () banked
  3513  0107E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3514  0107E6  0E3B               	movlw	59
  3515  0107E8  0100               	movlb	0	; () banked
  3516  0107EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3517  0107EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3518  0107F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3519  0107F4  EC15  F08E         	call	_atoi	;wreg free
  3520  0107F8  0100               	movlb	0	; () banked
  3521  0107FA  5166               	movf	?_atoi& (0+255),w,b
  3522  0107FC  0100               	movlb	0	; () banked
  3523  0107FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3524  010800  EC50  F09C         	call	_terminal_at_hand	;wreg free
  3525  010804  0012               	return	
  3526  010806                     __end_of_terminal_time:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodh	equ	0xFF4
  3533                           prodl	equ	0xFF3
  3534                           intcon	equ	0xFF2
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postdec1	equ	0xFE5
  3538                           fsr1h	equ	0xFE2
  3539                           fsr1l	equ	0xFE1
  3540                           indf2	equ	0xFDF
  3541                           fsr2h	equ	0xFDA
  3542                           fsr2l	equ	0xFD9
  3543                           status	equ	0xFD8
  3544                           
  3545 ;; *************** function _terminal_at_hand *****************
  3546 ;; Defined at:
  3547 ;;		line 82 in file "../My_library/My_terminal.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3550 ;;		 -> usb_tx(8), 
  3551 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3552 ;;		 -> now(14), 
  3553 ;;  min             1   83[BANK0 ] unsigned char 
  3554 ;;  max             1   84[BANK0 ] unsigned char 
  3555 ;;  value           1   85[BANK0 ] unsigned char 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;		None               void
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3567 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3571 ;;Total ram usage:        7 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:   17
  3574 ;; This function calls:
  3575 ;;		_RTCC_from_caltime
  3576 ;;		_print_time
  3577 ;;		_ringbuf_put_str
  3578 ;; This function is called by:
  3579 ;;		_terminal_time
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text4
  3584  0138A0                     __ptext4:
  3585                           	opt stack 0
  3586  0138A0                     _terminal_at_hand:
  3587                           	opt stack 10
  3588                           
  3589                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3590                           
  3591                           ;incstack = 0
  3592  0138A0  0100               	movlb	0	; () banked
  3593  0138A2  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3594  0138A4  0100               	movlb	0	; () banked
  3595  0138A6  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3596  0138A8  A0D8               	btfss	status,0,c
  3597  0138AA  D01E               	goto	l8756
  3598                           
  3599                           ; BSR set to: 0
  3600  0138AC  0100               	movlb	0	; () banked
  3601  0138AE  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3602  0138B0  0100               	movlb	0	; () banked
  3603  0138B2  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3604  0138B4  A0D8               	btfss	status,0,c
  3605  0138B6  D018               	goto	l8756
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;My_terminal.c: 84: *hand = value;
  3609  0138B8  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3610  0138BC  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3611  0138C0  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3615  0138C4  0E46               	movlw	low _now
  3616  0138C6  0100               	movlb	0	; () banked
  3617  0138C8  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3618  0138CA  0E01               	movlw	high _now
  3619  0138CC  0100               	movlb	0	; () banked
  3620  0138CE  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3621  0138D0  ECE9  F09F         	call	_RTCC_from_caltime	;wreg free
  3622                           
  3623                           ;My_terminal.c: 86: time_change_flag = 1;
  3624  0138D4  0E01               	movlw	1
  3625  0138D6  0100               	movlb	0	; () banked
  3626  0138D8  6FF9               	movwf	_time_change_flag& (0+255),b
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;My_terminal.c: 87: print_time(tx);
  3630  0138DA  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3631  0138DE  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3632  0138E2  EC47  F09A         	call	_print_time	;wreg free
  3633                           
  3634                           ;My_terminal.c: 88: } else {
  3635  0138E6  0012               	return	
  3636  0138E8                     l8756:
  3637                           
  3638                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3639  0138E8  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3640  0138EC  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3641  0138F0  0EAC               	movlw	low STR_24
  3642  0138F2  0100               	movlb	0	; () banked
  3643  0138F4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3644  0138F6  0EFF               	movlw	high STR_24
  3645  0138F8  0100               	movlb	0	; () banked
  3646  0138FA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3647  0138FC  EC1E  F09C         	call	_ringbuf_put_str	;wreg free
  3648  013900  0012               	return	
  3649  013902                     __end_of_terminal_at_hand:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           postdec1	equ	0xFE5
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           indf2	equ	0xFDF
  3664                           fsr2h	equ	0xFDA
  3665                           fsr2l	equ	0xFD9
  3666                           status	equ	0xFD8
  3667                           
  3668 ;; *************** function _print_time *****************
  3669 ;; Defined at:
  3670 ;;		line 68 in file "../My_library/My_terminal.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3673 ;;		 -> usb_tx(8), 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  str            30   49[BANK0 ] unsigned char [30]
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;Total ram usage:       32 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:   16
  3692 ;; This function calls:
  3693 ;;		_RTCC_from_RTCC
  3694 ;;		_ringbuf_put_str
  3695 ;;		_sprintf
  3696 ;; This function is called by:
  3697 ;;		_terminal_at_hand
  3698 ;;		_terminal_time
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text5
  3703  01348E                     __ptext5:
  3704                           	opt stack 0
  3705  01348E                     _print_time:
  3706                           	opt stack 10
  3707                           
  3708                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3709                           
  3710                           ;incstack = 0
  3711  01348E  0E46               	movlw	low _now
  3712  013490  0100               	movlb	0	; () banked
  3713  013492  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3714  013494  0E01               	movlw	high _now
  3715  013496  0100               	movlb	0	; () banked
  3716  013498  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3717  01349A  EC9A  F0A0         	call	_RTCC_from_RTCC	;wreg free
  3718                           
  3719                           ;My_terminal.c: 70: char str[30];
  3720                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3721                           ;My_terminal.c: 72: now.YY,
  3722                           ;My_terminal.c: 73: now.MM,
  3723                           ;My_terminal.c: 74: now.DD,
  3724                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3725                           ;My_terminal.c: 76: now.hh,
  3726                           ;My_terminal.c: 77: now.mm,
  3727                           ;My_terminal.c: 78: now.ss);
  3728  01349E  0E91               	movlw	low print_time@str
  3729  0134A0  0100               	movlb	0	; () banked
  3730  0134A2  6F6C               	movwf	sprintf@sp& (0+255),b
  3731  0134A4  0E00               	movlw	high print_time@str
  3732  0134A6  0100               	movlb	0	; () banked
  3733  0134A8  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3734  0134AA  0E43               	movlw	low STR_23
  3735  0134AC  0100               	movlb	0	; () banked
  3736  0134AE  6F6E               	movwf	sprintf@f& (0+255),b
  3737  0134B0  0EFF               	movlw	high STR_23
  3738  0134B2  0100               	movlb	0	; () banked
  3739  0134B4  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3740  0134B6  C150  F070         	movff	_now+10,?_sprintf+4
  3741  0134BA  0100               	movlb	0	; () banked
  3742  0134BC  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3743  0134BE  C14F  F072         	movff	_now+9,?_sprintf+6
  3744  0134C2  0100               	movlb	0	; () banked
  3745  0134C4  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3746  0134C6  C14E  F074         	movff	_now+8,?_sprintf+8
  3747  0134CA  0100               	movlb	0	; () banked
  3748  0134CC  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3749  0134CE  0101               	movlb	1	; () banked
  3750  0134D0  514D               	movf	(_now+7)& (0+255),w,b
  3751  0134D2  0D04               	mullw	4
  3752  0134D4  0E26               	movlw	low _weekday_3char
  3753  0134D6  24F3               	addwf	prodl,w,c
  3754  0134D8  0100               	movlb	0	; () banked
  3755  0134DA  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3756  0134DC  0EFE               	movlw	high _weekday_3char
  3757  0134DE  20F4               	addwfc	prodh,w,c
  3758  0134E0  0100               	movlb	0	; () banked
  3759  0134E2  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3760  0134E4  C14C  F078         	movff	_now+6,?_sprintf+12
  3761  0134E8  0100               	movlb	0	; () banked
  3762  0134EA  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3763  0134EC  C14B  F07A         	movff	_now+5,?_sprintf+14
  3764  0134F0  0100               	movlb	0	; () banked
  3765  0134F2  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3766  0134F4  C14A  F07C         	movff	_now+4,?_sprintf+16
  3767  0134F8  0100               	movlb	0	; () banked
  3768  0134FA  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3769  0134FC  EC00  F080         	call	_sprintf	;wreg free
  3770                           
  3771                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3772  013500  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3773  013504  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3774  013508  0E91               	movlw	low print_time@str
  3775  01350A  0100               	movlb	0	; () banked
  3776  01350C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3777  01350E  0E00               	movlw	high print_time@str
  3778  013510  0100               	movlb	0	; () banked
  3779  013512  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3780  013514  EC1E  F09C         	call	_ringbuf_put_str	;wreg free
  3781  013518  0012               	return		;funcret
  3782  01351A                     __end_of_print_time:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           intcon	equ	0xFF2
  3791                           postinc0	equ	0xFEE
  3792                           wreg	equ	0xFE8
  3793                           postdec1	equ	0xFE5
  3794                           fsr1h	equ	0xFE2
  3795                           fsr1l	equ	0xFE1
  3796                           indf2	equ	0xFDF
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _sprintf *****************
  3802 ;; Defined at:
  3803 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3806 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  3807 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3808 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  tmpval          4    0        struct .
  3811 ;;  width           2   45[BANK0 ] int 
  3812 ;;  len             2   41[BANK0 ] unsigned int 
  3813 ;;  val             2   39[BANK0 ] unsigned int 
  3814 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  3815 ;;		 -> STR_48(7), weekday_3char(28), 
  3816 ;;  ap              2   35[BANK0 ] PTR void [1]
  3817 ;;		 -> ?_sprintf(2), 
  3818 ;;  c               1   44[BANK0 ] char 
  3819 ;;  flag            1   43[BANK0 ] unsigned char 
  3820 ;;  prec            1   34[BANK0 ] char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2   12[BANK0 ] int 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3830 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3833 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;Total ram usage:       35 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:   13
  3837 ;; This function calls:
  3838 ;;		___lwdiv
  3839 ;;		___lwmod
  3840 ;;		___wmul
  3841 ;;		_isdigit
  3842 ;; This function is called by:
  3843 ;;		_print_time
  3844 ;;		_display_dec
  3845 ;;		_print_time_dec
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text6
  3850  010000                     __ptext6:
  3851                           	opt stack 0
  3852  010000                     _sprintf:
  3853                           	opt stack 12
  3854                           
  3855                           ;doprnt.c: 494: va_list ap;
  3856                           ;doprnt.c: 499: signed char c;
  3857                           ;doprnt.c: 501: int width;
  3858                           ;doprnt.c: 506: signed char prec;
  3859                           ;doprnt.c: 508: unsigned char flag;
  3860                           ;doprnt.c: 523: union {
  3861                           ;doprnt.c: 524: unsigned long vd;
  3862                           ;doprnt.c: 525: double integ;
  3863                           ;doprnt.c: 526: } tmpval;
  3864                           ;doprnt.c: 528: unsigned int val;
  3865                           ;doprnt.c: 529: unsigned len;
  3866                           ;doprnt.c: 530: const char * cp;
  3867                           ;doprnt.c: 533: *ap = __va_start();
  3868                           
  3869                           ;incstack = 0
  3870  010000  0E70               	movlw	low (?_sprintf+4)
  3871  010002  0100               	movlb	0	; () banked
  3872  010004  6F83               	movwf	sprintf@ap& (0+255),b
  3873  010006  0E00               	movlw	high (?_sprintf+4)
  3874  010008  0100               	movlb	0	; () banked
  3875  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3876                           
  3877                           ;doprnt.c: 536: while(c = *f++) {
  3878  01000C  D20F               	goto	l8648
  3879  01000E                     l8508:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;doprnt.c: 538: if(c != '%')
  3883  01000E  0E25               	movlw	37
  3884  010010  0100               	movlb	0	; () banked
  3885  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  3886  010014  B4D8               	btfsc	status,2,c
  3887  010016  D00A               	goto	l8514
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;doprnt.c: 540: {
  3891                           ;doprnt.c: 541: ((*sp++ = (c)));
  3892  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3893  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3894  010020  C08C  FFDF         	movff	sprintf@c,indf2
  3895                           
  3896                           ; BSR set to: 0
  3897  010024  0100               	movlb	0	; () banked
  3898  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3899  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3900                           
  3901                           ;doprnt.c: 542: continue;
  3902  01002A  D200               	goto	l8648
  3903  01002C                     l8514:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;doprnt.c: 543: }
  3907                           ;doprnt.c: 546: width = 0;
  3908  01002C  0E00               	movlw	0
  3909  01002E  0100               	movlb	0	; () banked
  3910  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3911  010032  0E00               	movlw	0
  3912  010034  6F8D               	movwf	sprintf@width& (0+255),b
  3913                           
  3914                           ;doprnt.c: 548: flag = 0;
  3915  010036  0E00               	movlw	0
  3916  010038  0100               	movlb	0	; () banked
  3917  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;doprnt.c: 551: switch(*f) {
  3921                           
  3922                           ;doprnt.c: 550: for(;;) {
  3923  01003C  D005               	goto	l8520
  3924  01003E                     l8516:
  3925                           
  3926                           ;doprnt.c: 580: flag |= 0x04;
  3927  01003E  0100               	movlb	0	; () banked
  3928  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  3929                           
  3930                           ;doprnt.c: 581: f++;
  3931  010042  0100               	movlb	0	; () banked
  3932  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3933  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3934  010048                     l8520:
  3935  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  3936  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3937  010050                     	if	0	;tblptru may be non-zero
  3938  010050                     	endif
  3939  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3940  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  3941  010052  6EF8               	movwf	tblptru,c
  3942  010054                     	endif
  3943  010054  0008               	tblrd		*
  3944  010056  50F5               	movf	tablat,w,c
  3945                           
  3946                           ; Switch size 1, requested type "space"
  3947                           ; Number of cases is 1, Range of values is 48 to 48
  3948                           ; switch strategies available:
  3949                           ; Name         Instructions Cycles
  3950                           ; simple_byte            4     3 (average)
  3951                           ;	Chosen strategy is simple_byte
  3952  010058  0A30               	xorlw	48	; case 48
  3953  01005A  B4D8               	btfsc	status,2,c
  3954  01005C  D7F0               	goto	l8516
  3955                           
  3956                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3957                           
  3958                           ;doprnt.c: 586: }
  3959                           
  3960                           ;doprnt.c: 585: break;
  3961  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  3962  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3963  010066                     	if	0	;tblptru may be non-zero
  3964  010066                     	endif
  3965  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3966  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  3967  010068  6EF8               	movwf	tblptru,c
  3968  01006A                     	endif
  3969  01006A  0008               	tblrd		*
  3970  01006C  50F5               	movf	tablat,w,c
  3971  01006E  EC96  F09F         	call	_isdigit
  3972  010072  A0D8               	btfss	status,0,c
  3973  010074  D0CB               	goto	l8570
  3974                           
  3975                           ;doprnt.c: 598: width = 0;
  3976  010076  0E00               	movlw	0
  3977  010078  0100               	movlb	0	; () banked
  3978  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3979  01007C  0E00               	movlw	0
  3980  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  3981  010080                     l8526:
  3982                           
  3983                           ;doprnt.c: 600: width *= 10;
  3984  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  3985  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  3986  010088  0E00               	movlw	0
  3987  01008A  0100               	movlb	0	; () banked
  3988  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3989  01008E  0E0A               	movlw	10
  3990  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3991  010092  ECD8  F09E         	call	___wmul	;wreg free
  3992  010096  C060  F08D         	movff	?___wmul,sprintf@width
  3993  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  3994                           
  3995                           ;doprnt.c: 601: width += *f++ - '0';
  3996  01009E  0ED0               	movlw	208
  3997  0100A0  0100               	movlb	0	; () banked
  3998  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  3999  0100A4  0EFF               	movlw	255
  4000  0100A6  0100               	movlb	0	; () banked
  4001  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  4002  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  4003  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4004  0100B2                     	if	0	;tblptru may be non-zero
  4005  0100B2                     	endif
  4006  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4007  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  4008  0100B4  6EF8               	movwf	tblptru,c
  4009  0100B6                     	endif
  4010  0100B6  0008               	tblrd		*
  4011  0100B8  50F5               	movf	tablat,w,c
  4012  0100BA  0100               	movlb	0	; () banked
  4013  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  4014  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  4015  0100C0  0100               	movlb	0	; () banked
  4016  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  4017  0100C4  0100               	movlb	0	; () banked
  4018  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  4019  0100C8  0100               	movlb	0	; () banked
  4020  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  4021  0100CC  0100               	movlb	0	; () banked
  4022  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  4023  0100D0  0100               	movlb	0	; () banked
  4024  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  4025  0100D4  0100               	movlb	0	; () banked
  4026  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  4027  0100D8  0100               	movlb	0	; () banked
  4028  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  4029  0100DC  0100               	movlb	0	; () banked
  4030  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  4031                           
  4032                           ; BSR set to: 0
  4033  0100E0  0100               	movlb	0	; () banked
  4034  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4035  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4039  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  4040  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4041  0100EE                     	if	0	;tblptru may be non-zero
  4042  0100EE                     	endif
  4043  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4044  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4045  0100F0  6EF8               	movwf	tblptru,c
  4046  0100F2                     	endif
  4047  0100F2  0008               	tblrd		*
  4048  0100F4  50F5               	movf	tablat,w,c
  4049  0100F6  EC96  F09F         	call	_isdigit
  4050  0100FA  A0D8               	btfss	status,0,c
  4051  0100FC  D087               	goto	l8570
  4052  0100FE  D7C0               	goto	l8526
  4053  010100                     l8534:
  4054                           
  4055                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4056  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  4057  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4058  010108  CFDE F085          	movff	postinc2,sprintf@cp
  4059  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  4060  010110  0E02               	movlw	2
  4061  010112  0100               	movlb	0	; () banked
  4062  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  4063  010116  0E00               	movlw	0
  4064  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;doprnt.c: 740: if(!cp)
  4068  01011A  0100               	movlb	0	; () banked
  4069  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  4070  01011E  0100               	movlb	0	; () banked
  4071  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4072  010122  A4D8               	btfss	status,2,c
  4073  010124  D006               	goto	l8542
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;doprnt.c: 741: cp = "(null)";
  4077  010126  0EB4               	movlw	low STR_48
  4078  010128  0100               	movlb	0	; () banked
  4079  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  4080  01012C  0EFF               	movlw	high STR_48
  4081  01012E  0100               	movlb	0	; () banked
  4082  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  4083  010132                     l8542:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;doprnt.c: 745: len = 0;
  4087  010132  0E00               	movlw	0
  4088  010134  0100               	movlb	0	; () banked
  4089  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  4090  010138  0E00               	movlw	0
  4091  01013A  6F89               	movwf	sprintf@len& (0+255),b
  4092                           
  4093                           ;doprnt.c: 746: while(cp[len])
  4094  01013C  D003               	goto	l8546
  4095  01013E                     l8544:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;doprnt.c: 747: len++;
  4099  01013E  0100               	movlb	0	; () banked
  4100  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  4101  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  4102  010144                     l8546:
  4103                           
  4104                           ; BSR set to: 0
  4105  010144  0100               	movlb	0	; () banked
  4106  010146  5189               	movf	sprintf@len& (0+255),w,b
  4107  010148  0100               	movlb	0	; () banked
  4108  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  4109  01014C  0100               	movlb	0	; () banked
  4110  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  4111  010150  0100               	movlb	0	; () banked
  4112  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4113  010154  0100               	movlb	0	; () banked
  4114  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4115  010158  0100               	movlb	0	; () banked
  4116  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  4117  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  4118  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  4119  010164                     	if	0	;tblptru may be non-zero
  4120  010164                     	endif
  4121  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4122  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  4123  010166  6EF8               	movwf	tblptru,c
  4124  010168                     	endif
  4125  010168  0008               	tblrd		*
  4126  01016A  50F5               	movf	tablat,w,c
  4127  01016C  0900               	iorlw	0
  4128  01016E  A4D8               	btfss	status,2,c
  4129  010170  D7E6               	goto	l8544
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;doprnt.c: 757: if(width > len)
  4133                           
  4134                           ; BSR set to: 0
  4135  010172  0100               	movlb	0	; () banked
  4136  010174  518D               	movf	sprintf@width& (0+255),w,b
  4137  010176  0100               	movlb	0	; () banked
  4138  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  4139  01017A  0100               	movlb	0	; () banked
  4140  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4141  01017E  0100               	movlb	0	; () banked
  4142  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  4143  010182  B0D8               	btfsc	status,0,c
  4144  010184  D009               	goto	l8552
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;doprnt.c: 758: width -= len;
  4148  010186  0100               	movlb	0	; () banked
  4149  010188  5189               	movf	sprintf@len& (0+255),w,b
  4150  01018A  0100               	movlb	0	; () banked
  4151  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  4152  01018E  0100               	movlb	0	; () banked
  4153  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4154  010192  0100               	movlb	0	; () banked
  4155  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4156  010196  D00F               	goto	l8558
  4157  010198                     l8552:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;doprnt.c: 759: else
  4161                           ;doprnt.c: 760: width = 0;
  4162  010198  0E00               	movlw	0
  4163  01019A  0100               	movlb	0	; () banked
  4164  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4165  01019E  0E00               	movlw	0
  4166  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;doprnt.c: 764: while(width--)
  4170  0101A2  D009               	goto	l8558
  4171  0101A4                     l8554:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4175  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4176  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4177  0101AC  0E20               	movlw	32
  4178  0101AE  6EDF               	movwf	indf2,c
  4179                           
  4180                           ; BSR set to: 0
  4181  0101B0  0100               	movlb	0	; () banked
  4182  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4183  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4184  0101B6                     l8558:
  4185                           
  4186                           ; BSR set to: 0
  4187  0101B6  0100               	movlb	0	; () banked
  4188  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  4189  0101BA  A0D8               	btfss	status,0,c
  4190  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4191  0101BE  0100               	movlb	0	; () banked
  4192  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  4193  0101C2  E1F0               	bnz	l8554
  4194  0101C4  0100               	movlb	0	; () banked
  4195  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  4196  0101C8  B4D8               	btfsc	status,2,c
  4197  0101CA  D014               	goto	l8566
  4198  0101CC  D7EB               	goto	l8554
  4199  0101CE                     l8560:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4203  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  4204  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  4205  0101D6                     	if	0	;tblptru may be non-zero
  4206  0101D6                     	endif
  4207  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4208  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  4209  0101D8  6EF8               	movwf	tblptru,c
  4210  0101DA                     	endif
  4211  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4212  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4213  0101E2  0008               	tblrd		*
  4214  0101E4  CFF5 FFDF          	movff	tablat,indf2
  4215                           
  4216                           ; BSR set to: 0
  4217  0101E8  0100               	movlb	0	; () banked
  4218  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  4219  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  4220                           
  4221                           ; BSR set to: 0
  4222  0101EE  0100               	movlb	0	; () banked
  4223  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4224  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4225  0101F4                     l8566:
  4226                           
  4227                           ; BSR set to: 0
  4228  0101F4  0100               	movlb	0	; () banked
  4229  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  4230  0101F8  A0D8               	btfss	status,0,c
  4231  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  4232  0101FC  0100               	movlb	0	; () banked
  4233  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  4234  010200  E1E6               	bnz	l8560
  4235  010202  0100               	movlb	0	; () banked
  4236  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  4237  010206  B4D8               	btfsc	status,2,c
  4238  010208  D111               	goto	l8648
  4239  01020A  D7E1               	goto	l8560
  4240  01020C                     l8570:
  4241  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4242  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4243  010214  0100               	movlb	0	; () banked
  4244  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4245  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4246  01021A                     	if	0	;tblptru may be non-zero
  4247  01021A                     	endif
  4248  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4249  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  4250  01021C  6EF8               	movwf	tblptru,c
  4251  01021E                     	endif
  4252  01021E  0008               	tblrd		*
  4253  010220  CFF5 F08C          	movff	tablat,sprintf@c
  4254  010224  0100               	movlb	0	; () banked
  4255  010226  518C               	movf	sprintf@c& (0+255),w,b
  4256                           
  4257                           ; Switch size 1, requested type "space"
  4258                           ; Number of cases is 4, Range of values is 0 to 115
  4259                           ; switch strategies available:
  4260                           ; Name         Instructions Cycles
  4261                           ; simple_byte           13     7 (average)
  4262                           ;	Chosen strategy is simple_byte
  4263  010228  0A00               	xorlw	0	; case 0
  4264  01022A  B4D8               	btfsc	status,2,c
  4265  01022C  D10F               	goto	l8650
  4266  01022E  0A64               	xorlw	100	; case 100
  4267  010230  B4D8               	btfsc	status,2,c
  4268  010232  D007               	goto	l8572
  4269  010234  0A0D               	xorlw	13	; case 105
  4270  010236  B4D8               	btfsc	status,2,c
  4271  010238  D004               	goto	l8572
  4272  01023A  0A1A               	xorlw	26	; case 115
  4273  01023C  B4D8               	btfsc	status,2,c
  4274  01023E  D760               	goto	l8534
  4275  010240  D0F5               	goto	l8648
  4276  010242                     l8572:
  4277                           
  4278                           ;doprnt.c: 1253: {
  4279                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4280  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  4281  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4282  01024A  CFDE F087          	movff	postinc2,sprintf@val
  4283  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  4284  010252  0E02               	movlw	2
  4285  010254  0100               	movlb	0	; () banked
  4286  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  4287  010258  0E00               	movlw	0
  4288  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;doprnt.c: 1261: if((int)val < 0) {
  4292  01025C  0100               	movlb	0	; () banked
  4293  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  4294  010260  D008               	goto	l8582
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;doprnt.c: 1262: flag |= 0x03;
  4298  010262  0E03               	movlw	3
  4299  010264  0100               	movlb	0	; () banked
  4300  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;doprnt.c: 1263: val = -val;
  4304  010268  0100               	movlb	0	; () banked
  4305  01026A  6D87               	negf	sprintf@val& (0+255),b
  4306  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  4307  01026E  B0D8               	btfsc	status,0,c
  4308  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  4309  010272                     l8582:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;doprnt.c: 1264: }
  4313                           ;doprnt.c: 1266: }
  4314                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4315  010272  0E01               	movlw	1
  4316  010274  0100               	movlb	0	; () banked
  4317  010276  6F8C               	movwf	sprintf@c& (0+255),b
  4318  010278                     l8584:
  4319                           
  4320                           ; BSR set to: 0
  4321  010278  0E05               	movlw	5
  4322  01027A  0100               	movlb	0	; () banked
  4323  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  4324  01027E  B4D8               	btfsc	status,2,c
  4325  010280  D019               	goto	l8596
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;doprnt.c: 1306: if(val < dpowers[c])
  4329                           
  4330                           ; BSR set to: 0
  4331                           
  4332                           ; BSR set to: 0
  4333  010282  0100               	movlb	0	; () banked
  4334  010284  518C               	movf	sprintf@c& (0+255),w,b
  4335  010286  0D02               	mullw	2
  4336  010288  0E69               	movlw	low _dpowers
  4337  01028A  24F3               	addwf	prodl,w,c
  4338  01028C  6EF6               	movwf	tblptrl,c
  4339  01028E  0EFD               	movlw	high _dpowers
  4340  010290  20F4               	addwfc	prodh,w,c
  4341  010292  6EF7               	movwf	tblptrh,c
  4342  010294                     	if	1	;There are 3 active tblptr bytes
  4343  010294  6AF8               	clrf	tblptru,c
  4344  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  4345  010298  22F8               	addwfc	tblptru,f,c
  4346  01029A                     	endif
  4347  01029A  0009               	tblrd		*+
  4348  01029C  50F5               	movf	tablat,w,c
  4349  01029E  0100               	movlb	0	; () banked
  4350  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  4351  0102A2  0009               	tblrd		*+
  4352  0102A4  50F5               	movf	tablat,w,c
  4353  0102A6  0100               	movlb	0	; () banked
  4354  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  4355  0102AA  A0D8               	btfss	status,0,c
  4356  0102AC  D003               	goto	l8596
  4357                           
  4358                           ; BSR set to: 0
  4359                           
  4360                           ; BSR set to: 0
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;doprnt.c: 1307: break;
  4364  0102AE  0100               	movlb	0	; () banked
  4365  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  4366  0102B2  D7E2               	goto	l8584
  4367  0102B4                     l8596:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4371  0102B4  0100               	movlb	0	; () banked
  4372  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  4373  0102B8  0100               	movlb	0	; () banked
  4374  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4375  0102BC  B4D8               	btfsc	status,2,c
  4376  0102BE  D00B               	goto	l8602
  4377                           
  4378                           ; BSR set to: 0
  4379  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4380  0102C4  0E03               	movlw	3
  4381  0102C6  0100               	movlb	0	; () banked
  4382  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  4383  0102CA  B4D8               	btfsc	status,2,c
  4384  0102CC  D004               	goto	l8602
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;doprnt.c: 1346: width--;
  4388  0102CE  0100               	movlb	0	; () banked
  4389  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  4390  0102D2  A0D8               	btfss	status,0,c
  4391  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4392  0102D6                     l8602:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;doprnt.c: 1381: if(width > c)
  4396  0102D6  0E80               	movlw	128
  4397  0102D8  0100               	movlb	0	; () banked
  4398  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4399  0102DC  0E7F               	movlw	127
  4400  0102DE  0100               	movlb	0	; () banked
  4401  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  4402  0102E2  0100               	movlb	0	; () banked
  4403  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  4404  0102E6  0100               	movlb	0	; () banked
  4405  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  4406  0102EA  0100               	movlb	0	; () banked
  4407  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4408  0102EE  0A80               	xorlw	128
  4409  0102F0  0100               	movlb	0	; () banked
  4410  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  4411  0102F4  B0D8               	btfsc	status,0,c
  4412  0102F6  D00B               	goto	l8606
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;doprnt.c: 1382: width -= c;
  4416  0102F8  0100               	movlb	0	; () banked
  4417  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  4418  0102FC  0100               	movlb	0	; () banked
  4419  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  4420  010300  0E00               	movlw	0
  4421  010302  0100               	movlb	0	; () banked
  4422  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4423  010306  0EFF               	movlw	255
  4424  010308  0100               	movlb	0	; () banked
  4425  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4426  01030C  D005               	goto	l8608
  4427  01030E                     l8606:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;doprnt.c: 1383: else
  4431                           ;doprnt.c: 1384: width = 0;
  4432  01030E  0E00               	movlw	0
  4433  010310  0100               	movlb	0	; () banked
  4434  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4435  010314  0E00               	movlw	0
  4436  010316  6F8D               	movwf	sprintf@width& (0+255),b
  4437  010318                     l8608:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;doprnt.c: 1387: if(flag & 0x04) {
  4441  010318  0100               	movlb	0	; () banked
  4442  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  4443  01031C  D024               	goto	l8624
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;doprnt.c: 1392: if(flag & 0x03)
  4447  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4448  010322  0E03               	movlw	3
  4449  010324  0100               	movlb	0	; () banked
  4450  010326  177E               	andwf	??_sprintf& (0+255),f,b
  4451  010328  B4D8               	btfsc	status,2,c
  4452  01032A  D009               	goto	l8616
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4456  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4457  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4458  010334  0E2D               	movlw	45
  4459  010336  6EDF               	movwf	indf2,c
  4460                           
  4461                           ; BSR set to: 0
  4462  010338  0100               	movlb	0	; () banked
  4463  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4464  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4465  01033E                     l8616:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;doprnt.c: 1415: if(width)
  4469  01033E  0100               	movlb	0	; () banked
  4470  010340  518D               	movf	sprintf@width& (0+255),w,b
  4471  010342  0100               	movlb	0	; () banked
  4472  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4473  010346  B4D8               	btfsc	status,2,c
  4474  010348  D037               	goto	l8638
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4478                           
  4479                           ; BSR set to: 0
  4480                           
  4481                           ;doprnt.c: 1416: do
  4482  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4483  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4484  010352  0E30               	movlw	48
  4485  010354  6EDF               	movwf	indf2,c
  4486                           
  4487                           ; BSR set to: 0
  4488  010356  0100               	movlb	0	; () banked
  4489  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4490  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;doprnt.c: 1418: while(--width);
  4494  01035C  0100               	movlb	0	; () banked
  4495  01035E  078D               	decf	sprintf@width& (0+255),f,b
  4496  010360  A0D8               	btfss	status,0,c
  4497  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4498  010364  D7EC               	goto	l8616
  4499  010366                     l8624:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;doprnt.c: 1422: {
  4503                           ;doprnt.c: 1424: if(width
  4504                           ;doprnt.c: 1428: )
  4505  010366  0100               	movlb	0	; () banked
  4506  010368  518D               	movf	sprintf@width& (0+255),w,b
  4507  01036A  0100               	movlb	0	; () banked
  4508  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4509  01036E  B4D8               	btfsc	status,2,c
  4510  010370  D013               	goto	l8632
  4511  010372                     l8626:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4515  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4516  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4517  01037A  0E20               	movlw	32
  4518  01037C  6EDF               	movwf	indf2,c
  4519                           
  4520                           ; BSR set to: 0
  4521  01037E  0100               	movlb	0	; () banked
  4522  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4523  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;doprnt.c: 1431: while(--width);
  4527  010384  0100               	movlb	0	; () banked
  4528  010386  078D               	decf	sprintf@width& (0+255),f,b
  4529  010388  A0D8               	btfss	status,0,c
  4530  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4531  01038C  0100               	movlb	0	; () banked
  4532  01038E  518D               	movf	sprintf@width& (0+255),w,b
  4533  010390  0100               	movlb	0	; () banked
  4534  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4535  010394  A4D8               	btfss	status,2,c
  4536  010396  D7ED               	goto	l8626
  4537  010398                     l8632:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;doprnt.c: 1438: if(flag & 0x03)
  4541  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4542  01039C  0E03               	movlw	3
  4543  01039E  0100               	movlb	0	; () banked
  4544  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  4545  0103A2  B4D8               	btfsc	status,2,c
  4546  0103A4  D009               	goto	l8638
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4550  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4551  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4552  0103AE  0E2D               	movlw	45
  4553  0103B0  6EDF               	movwf	indf2,c
  4554                           
  4555                           ; BSR set to: 0
  4556  0103B2  0100               	movlb	0	; () banked
  4557  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4558  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4559  0103B8                     l8638:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;doprnt.c: 1469: }
  4563                           ;doprnt.c: 1472: prec = c;
  4564  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  4565                           
  4566                           ;doprnt.c: 1474: while(prec--) {
  4567  0103BC  D031               	goto	l8646
  4568  0103BE                     l8640:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;doprnt.c: 1478: {
  4572                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4573  0103BE  0100               	movlb	0	; () banked
  4574  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  4575  0103C2  0D02               	mullw	2
  4576  0103C4  0E69               	movlw	low _dpowers
  4577  0103C6  24F3               	addwf	prodl,w,c
  4578  0103C8  6EF6               	movwf	tblptrl,c
  4579  0103CA  0EFD               	movlw	high _dpowers
  4580  0103CC  20F4               	addwfc	prodh,w,c
  4581  0103CE  6EF7               	movwf	tblptrh,c
  4582  0103D0                     	if	1	;There are 3 active tblptr bytes
  4583  0103D0  6AF8               	clrf	tblptru,c
  4584  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  4585  0103D4  22F8               	addwfc	tblptru,f,c
  4586  0103D6                     	endif
  4587  0103D6  0009               	tblrd		*+
  4588  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4589  0103DC  000A               	tblrd		*-
  4590  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4591  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  4592  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4593  0103EA  ECCE  F09A         	call	___lwdiv	;wreg free
  4594  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  4595  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  4596  0103F6  0E00               	movlw	0
  4597  0103F8  0100               	movlb	0	; () banked
  4598  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4599  0103FC  0E0A               	movlw	10
  4600  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  4601  010400  EC81  F09C         	call	___lwmod	;wreg free
  4602  010404  0100               	movlb	0	; () banked
  4603  010406  5167               	movf	?___lwmod& (0+255),w,b
  4604  010408  0F30               	addlw	48
  4605  01040A  0100               	movlb	0	; () banked
  4606  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;doprnt.c: 1523: }
  4610                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4611  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4612  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4613  010416  C08C  FFDF         	movff	sprintf@c,indf2
  4614                           
  4615                           ; BSR set to: 0
  4616  01041A  0100               	movlb	0	; () banked
  4617  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4618  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4619  010420                     l8646:
  4620                           
  4621                           ; BSR set to: 0
  4622  010420  0100               	movlb	0	; () banked
  4623  010422  0782               	decf	sprintf@prec& (0+255),f,b
  4624  010424  0100               	movlb	0	; () banked
  4625  010426  2982               	incf	sprintf@prec& (0+255),w,b
  4626  010428  A4D8               	btfss	status,2,c
  4627  01042A  D7C9               	goto	l8640
  4628  01042C                     l8648:
  4629                           
  4630                           ; BSR set to: 0
  4631  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4632  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4633  010434  0100               	movlb	0	; () banked
  4634  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4635  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4636  01043A                     	if	0	;tblptru may be non-zero
  4637  01043A                     	endif
  4638  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4639  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  4640  01043C  6EF8               	movwf	tblptru,c
  4641  01043E                     	endif
  4642  01043E  0008               	tblrd		*
  4643  010440  CFF5 F08C          	movff	tablat,sprintf@c
  4644  010444  0100               	movlb	0	; () banked
  4645  010446  518C               	movf	sprintf@c& (0+255),w,b
  4646  010448  A4D8               	btfss	status,2,c
  4647  01044A  D5E1               	goto	l8508
  4648  01044C                     l8650:
  4649                           
  4650                           ;doprnt.c: 1538: *sp = 0;
  4651  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4652  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4653  010454  0E00               	movlw	0
  4654  010456  6EDF               	movwf	indf2,c
  4655  010458  0012               	return	
  4656  01045A                     __end_of_sprintf:
  4657                           	opt stack 0
  4658                           tblptru	equ	0xFF8
  4659                           tblptrh	equ	0xFF7
  4660                           tblptrl	equ	0xFF6
  4661                           tablat	equ	0xFF5
  4662                           prodh	equ	0xFF4
  4663                           prodl	equ	0xFF3
  4664                           intcon	equ	0xFF2
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           postdec1	equ	0xFE5
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           indf2	equ	0xFDF
  4671                           postinc2	equ	0xFDE
  4672                           postdec2	equ	0xFDD
  4673                           fsr2h	equ	0xFDA
  4674                           fsr2l	equ	0xFD9
  4675                           status	equ	0xFD8
  4676                           
  4677 ;; *************** function _ringbuf_put_str *****************
  4678 ;; Defined at:
  4679 ;;		line 39 in file "../My_library/My_ringbuf.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4682 ;;		 -> usb_tx(8), 
  4683 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  4684 ;;		 -> STR_43(235), STR_24(8), print_time@str(30), STR_22(3), 
  4685 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;Total ram usage:        4 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:   14
  4704 ;; This function calls:
  4705 ;;		_ringbuf_put
  4706 ;; This function is called by:
  4707 ;;		_terminal_task
  4708 ;;		_print_time
  4709 ;;		_terminal_at_hand
  4710 ;;		_terminal_operation
  4711 ;;		_print_time_dec
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text7
  4716  01383C                     __ptext7:
  4717                           	opt stack 0
  4718  01383C                     _ringbuf_put_str:
  4719                           	opt stack 12
  4720                           
  4721                           ;My_ringbuf.c: 40: while (*str) {
  4722                           
  4723                           ;incstack = 0
  4724  01383C  D01C               	goto	l8420
  4725  01383E                     l8416:
  4726                           
  4727                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  4728  01383E  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  4729  013842  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  4730  013846  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4731  01384A  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4732  01384E  0E00               	movlw	low (__mediumconst shr (0+16))
  4733  013850  6EF8               	movwf	tblptru,c
  4734  013852  0E0E               	movlw	(high __ramtop+-1)
  4735  013854  64F7               	cpfsgt	tblptrh,c
  4736  013856  D003               	bra	u7897
  4737  013858  0008               	tblrd		*
  4738  01385A  50F5               	movf	tablat,w,c
  4739  01385C  D005               	bra	u7890
  4740  01385E                     u7897:
  4741  01385E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4742  013862  CFF7 FFEA          	movff	tblptrh,fsr0h
  4743  013866  50EF               	movf	indf0,w,c
  4744  013868                     u7890:
  4745  013868  0100               	movlb	0	; () banked
  4746  01386A  6F6A               	movwf	ringbuf_put@data& (0+255),b
  4747  01386C  ECEB  F092         	call	_ringbuf_put	;wreg free
  4748  013870  0100               	movlb	0	; () banked
  4749  013872  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  4750  013874  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  4751  013876                     l8420:
  4752  013876  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4753  01387A  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4754  01387E  0E00               	movlw	low (__mediumconst shr (0+16))
  4755  013880  6EF8               	movwf	tblptru,c
  4756  013882  0E0E               	movlw	(high __ramtop+-1)
  4757  013884  64F7               	cpfsgt	tblptrh,c
  4758  013886  D003               	bra	u7907
  4759  013888  0008               	tblrd		*
  4760  01388A  50F5               	movf	tablat,w,c
  4761  01388C  D005               	bra	u7900
  4762  01388E                     u7907:
  4763  01388E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4764  013892  CFF7 FFEA          	movff	tblptrh,fsr0h
  4765  013896  50EF               	movf	indf0,w,c
  4766  013898                     u7900:
  4767  013898  0900               	iorlw	0
  4768  01389A  B4D8               	btfsc	status,2,c
  4769  01389C  0012               	return	
  4770  01389E  D7CF               	goto	l8416
  4771  0138A0                     __end_of_ringbuf_put_str:
  4772                           	opt stack 0
  4773                           tblptru	equ	0xFF8
  4774                           tblptrh	equ	0xFF7
  4775                           tblptrl	equ	0xFF6
  4776                           tablat	equ	0xFF5
  4777                           prodh	equ	0xFF4
  4778                           prodl	equ	0xFF3
  4779                           intcon	equ	0xFF2
  4780                           indf0	equ	0xFEF
  4781                           postinc0	equ	0xFEE
  4782                           fsr0h	equ	0xFEA
  4783                           fsr0l	equ	0xFE9
  4784                           wreg	equ	0xFE8
  4785                           postdec1	equ	0xFE5
  4786                           fsr1h	equ	0xFE2
  4787                           fsr1l	equ	0xFE1
  4788                           indf2	equ	0xFDF
  4789                           postinc2	equ	0xFDE
  4790                           postdec2	equ	0xFDD
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function _RTCC_from_caltime *****************
  4796 ;; Defined at:
  4797 ;;		line 57 in file "../My_library/My_RTCC.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  tm              2   47[BANK0 ] PTR struct .
  4800 ;;		 -> now(14), 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;		None               void
  4805 ;; Registers used:
  4806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:   15
  4819 ;; This function calls:
  4820 ;;		_caltime_to_RTCC
  4821 ;;		_caltime_to_epoch
  4822 ;;		_epoch_to_caltime
  4823 ;; This function is called by:
  4824 ;;		_terminal_at_hand
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text8
  4829  013FD2                     __ptext8:
  4830                           	opt stack 0
  4831  013FD2                     _RTCC_from_caltime:
  4832                           	opt stack 11
  4833                           
  4834                           ;My_RTCC.c: 58: caltime_to_epoch(tm);
  4835                           
  4836                           ;incstack = 0
  4837  013FD2  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4838  013FD6  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4839  013FDA  ECB8  F085         	call	_caltime_to_epoch	;wreg free
  4840                           
  4841                           ;My_RTCC.c: 59: epoch_to_caltime(tm);
  4842  013FDE  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4843  013FE2  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4844  013FE6  EC41  F088         	call	_epoch_to_caltime	;wreg free
  4845                           
  4846                           ;My_RTCC.c: 60: caltime_to_RTCC(tm);
  4847  013FEA  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4848  013FEE  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4849  013FF2  ECAB  F091         	call	_caltime_to_RTCC	;wreg free
  4850  013FF6  0012               	return		;funcret
  4851  013FF8                     __end_of_RTCC_from_caltime:
  4852                           	opt stack 0
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           prodh	equ	0xFF4
  4858                           prodl	equ	0xFF3
  4859                           intcon	equ	0xFF2
  4860                           indf0	equ	0xFEF
  4861                           postinc0	equ	0xFEE
  4862                           fsr0h	equ	0xFEA
  4863                           fsr0l	equ	0xFE9
  4864                           wreg	equ	0xFE8
  4865                           postdec1	equ	0xFE5
  4866                           fsr1h	equ	0xFE2
  4867                           fsr1l	equ	0xFE1
  4868                           indf2	equ	0xFDF
  4869                           postinc2	equ	0xFDE
  4870                           postdec2	equ	0xFDD
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _strcmp *****************
  4876 ;; Defined at:
  4877 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  4880 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  4881 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  4882 ;;		 -> STR_45(9), STR_44(9), STR_42(2), STR_41(5), 
  4883 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  4884 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  4885 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  4886 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  r               1    5[BANK0 ] char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2    0[BANK0 ] int 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4898 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;Total ram usage:        6 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:   12
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_terminal_time
  4909 ;;		_terminal_operation
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text9
  4914  013964                     __ptext9:
  4915                           	opt stack 0
  4916  013964                     _strcmp:
  4917                           	opt stack 15
  4918                           
  4919                           ;incstack = 0
  4920  013964  D006               	goto	l8762
  4921  013966                     l8760:
  4922  013966  0100               	movlb	0	; () banked
  4923  013968  4B60               	infsnz	strcmp@s1& (0+255),f,b
  4924  01396A  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  4925  01396C  0100               	movlb	0	; () banked
  4926  01396E  4B62               	infsnz	strcmp@s2& (0+255),f,b
  4927  013970  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  4928  013972                     l8762:
  4929  013972  C060  FFD9         	movff	strcmp@s1,fsr2l
  4930  013976  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4931  01397A  50DF               	movf	indf2,w,c
  4932  01397C  0100               	movlb	0	; () banked
  4933  01397E  6F64               	movwf	??_strcmp& (0+255),b
  4934  013980  C062  FFF6         	movff	strcmp@s2,tblptrl
  4935  013984  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  4936  013988                     	if	0	;tblptru may be non-zero
  4937  013988                     	endif
  4938  013988                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4939  013988  0E00               	movlw	low (__mediumconst shr (0+16))
  4940  01398A  6EF8               	movwf	tblptru,c
  4941  01398C                     	endif
  4942  01398C  0008               	tblrd		*
  4943  01398E  50F5               	movf	tablat,w,c
  4944  013990  0800               	sublw	0
  4945  013992  0100               	movlb	0	; () banked
  4946  013994  2564               	addwf	??_strcmp& (0+255),w,b
  4947  013996  0100               	movlb	0	; () banked
  4948  013998  6F65               	movwf	strcmp@r& (0+255),b
  4949  01399A  0100               	movlb	0	; () banked
  4950  01399C  5165               	movf	strcmp@r& (0+255),w,b
  4951  01399E  A4D8               	btfss	status,2,c
  4952  0139A0  D007               	goto	l8766
  4953                           
  4954                           ; BSR set to: 0
  4955  0139A2  C060  FFD9         	movff	strcmp@s1,fsr2l
  4956  0139A6  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4957  0139AA  50DF               	movf	indf2,w,c
  4958  0139AC  A4D8               	btfss	status,2,c
  4959  0139AE  D7DB               	goto	l8760
  4960  0139B0                     l8766:
  4961                           
  4962                           ; BSR set to: 0
  4963  0139B0  0100               	movlb	0	; () banked
  4964  0139B2  5165               	movf	strcmp@r& (0+255),w,b
  4965  0139B4  0100               	movlb	0	; () banked
  4966  0139B6  6F60               	movwf	?_strcmp& (0+255),b
  4967  0139B8  6B61               	clrf	(?_strcmp+1)& (0+255),b
  4968  0139BA  BF60               	btfsc	?_strcmp& (0+255),7,b
  4969  0139BC  0761               	decf	(?_strcmp+1)& (0+255),f,b
  4970  0139BE  0012               	return	
  4971  0139C0                     __end_of_strcmp:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           indf0	equ	0xFEF
  4981                           postinc0	equ	0xFEE
  4982                           fsr0h	equ	0xFEA
  4983                           fsr0l	equ	0xFE9
  4984                           wreg	equ	0xFE8
  4985                           postdec1	equ	0xFE5
  4986                           fsr1h	equ	0xFE2
  4987                           fsr1l	equ	0xFE1
  4988                           indf2	equ	0xFDF
  4989                           postinc2	equ	0xFDE
  4990                           postdec2	equ	0xFDD
  4991                           fsr2h	equ	0xFDA
  4992                           fsr2l	equ	0xFD9
  4993                           status	equ	0xFD8
  4994                           
  4995 ;; *************** function _atoi *****************
  4996 ;; Defined at:
  4997 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5000 ;;		 -> terminal_task@op2(25), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  a               2   11[BANK0 ] int 
  5003 ;;  sign            1   10[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  2    6[BANK0 ] int 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5015 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;Total ram usage:        7 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:   13
  5020 ;; This function calls:
  5021 ;;		___wmul
  5022 ;;		_isdigit
  5023 ;; This function is called by:
  5024 ;;		_terminal_time
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text10
  5029  011C2A                     __ptext10:
  5030                           	opt stack 0
  5031  011C2A                     _atoi:
  5032                           	opt stack 14
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;incstack = 0
  5036  011C2A  D003               	goto	l8774
  5037  011C2C                     l8772:
  5038  011C2C  0100               	movlb	0	; () banked
  5039  011C2E  4B66               	infsnz	atoi@s& (0+255),f,b
  5040  011C30  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5041  011C32                     l8774:
  5042  011C32  C066  FFD9         	movff	atoi@s,fsr2l
  5043  011C36  C067  FFDA         	movff	atoi@s+1,fsr2h
  5044  011C3A  0E20               	movlw	32
  5045  011C3C  18DE               	xorwf	postinc2,w,c
  5046  011C3E  B4D8               	btfsc	status,2,c
  5047  011C40  D7F5               	goto	l8772
  5048  011C42  C066  FFD9         	movff	atoi@s,fsr2l
  5049  011C46  C067  FFDA         	movff	atoi@s+1,fsr2h
  5050  011C4A  0E09               	movlw	9
  5051  011C4C  18DE               	xorwf	postinc2,w,c
  5052  011C4E  B4D8               	btfsc	status,2,c
  5053  011C50  D7ED               	goto	l8772
  5054  011C52  0E00               	movlw	0
  5055  011C54  0100               	movlb	0	; () banked
  5056  011C56  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5057  011C58  0E00               	movlw	0
  5058  011C5A  6F6B               	movwf	atoi@a& (0+255),b
  5059  011C5C  0E00               	movlw	0
  5060  011C5E  0100               	movlb	0	; () banked
  5061  011C60  6F6A               	movwf	atoi@sign& (0+255),b
  5062                           
  5063                           ; BSR set to: 0
  5064  011C62  C066  FFD9         	movff	atoi@s,fsr2l
  5065  011C66  C067  FFDA         	movff	atoi@s+1,fsr2h
  5066  011C6A  0E2D               	movlw	45
  5067  011C6C  18DE               	xorwf	postinc2,w,c
  5068  011C6E  A4D8               	btfss	status,2,c
  5069  011C70  D003               	goto	l8784
  5070                           
  5071                           ; BSR set to: 0
  5072  011C72  0100               	movlb	0	; () banked
  5073  011C74  2B6A               	incf	atoi@sign& (0+255),f,b
  5074  011C76  D02E               	goto	l8790
  5075  011C78                     l8784:
  5076                           
  5077                           ; BSR set to: 0
  5078  011C78  C066  FFD9         	movff	atoi@s,fsr2l
  5079  011C7C  C067  FFDA         	movff	atoi@s+1,fsr2h
  5080  011C80  0E2B               	movlw	43
  5081  011C82  18DE               	xorwf	postinc2,w,c
  5082  011C84  A4D8               	btfss	status,2,c
  5083  011C86  D029               	goto	l8792
  5084  011C88  D025               	goto	l8790
  5085  011C8A                     l8788:
  5086  011C8A  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5087  011C8E  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5088  011C92  0E00               	movlw	0
  5089  011C94  0100               	movlb	0	; () banked
  5090  011C96  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5091  011C98  0E0A               	movlw	10
  5092  011C9A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5093  011C9C  ECD8  F09E         	call	___wmul	;wreg free
  5094  011CA0  C066  FFD9         	movff	atoi@s,fsr2l
  5095  011CA4  C067  FFDA         	movff	atoi@s+1,fsr2h
  5096  011CA8  50DF               	movf	indf2,w,c
  5097  011CAA  0100               	movlb	0	; () banked
  5098  011CAC  6F68               	movwf	??_atoi& (0+255),b
  5099  011CAE  6B69               	clrf	(??_atoi+1)& (0+255),b
  5100  011CB0  0100               	movlb	0	; () banked
  5101  011CB2  5160               	movf	?___wmul& (0+255),w,b
  5102  011CB4  0100               	movlb	0	; () banked
  5103  011CB6  2768               	addwf	??_atoi& (0+255),f,b
  5104  011CB8  0100               	movlb	0	; () banked
  5105  011CBA  5161               	movf	(?___wmul+1)& (0+255),w,b
  5106  011CBC  0100               	movlb	0	; () banked
  5107  011CBE  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5108  011CC0  0ED0               	movlw	208
  5109  011CC2  0100               	movlb	0	; () banked
  5110  011CC4  2568               	addwf	??_atoi& (0+255),w,b
  5111  011CC6  0100               	movlb	0	; () banked
  5112  011CC8  6F6B               	movwf	atoi@a& (0+255),b
  5113  011CCA  0EFF               	movlw	255
  5114  011CCC  0100               	movlb	0	; () banked
  5115  011CCE  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5116  011CD0  0100               	movlb	0	; () banked
  5117  011CD2  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5118  011CD4                     l8790:
  5119                           
  5120                           ; BSR set to: 0
  5121  011CD4  0100               	movlb	0	; () banked
  5122  011CD6  4B66               	infsnz	atoi@s& (0+255),f,b
  5123  011CD8  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5124  011CDA                     l8792:
  5125                           
  5126                           ; BSR set to: 0
  5127  011CDA  C066  FFD9         	movff	atoi@s,fsr2l
  5128  011CDE  C067  FFDA         	movff	atoi@s+1,fsr2h
  5129  011CE2  50DF               	movf	indf2,w,c
  5130  011CE4  EC96  F09F         	call	_isdigit
  5131  011CE8  B0D8               	btfsc	status,0,c
  5132  011CEA  D7CF               	goto	l8788
  5133  011CEC  0100               	movlb	0	; () banked
  5134  011CEE  516A               	movf	atoi@sign& (0+255),w,b
  5135  011CF0  0100               	movlb	0	; () banked
  5136  011CF2  B4D8               	btfsc	status,2,c
  5137  011CF4  D00E               	goto	l1742
  5138                           
  5139                           ; BSR set to: 0
  5140  011CF6  C06B  F068         	movff	atoi@a,??_atoi
  5141  011CFA  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5142  011CFE  0100               	movlb	0	; () banked
  5143  011D00  1F68               	comf	??_atoi& (0+255),f,b
  5144  011D02  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5145  011D04  4B68               	infsnz	??_atoi& (0+255),f,b
  5146  011D06  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5147  011D08  C068  F066         	movff	??_atoi,?_atoi
  5148  011D0C  C069  F067         	movff	??_atoi+1,?_atoi+1
  5149  011D10  0012               	return	
  5150  011D12                     l1742:
  5151                           
  5152                           ; BSR set to: 0
  5153  011D12  C06B  F066         	movff	atoi@a,?_atoi
  5154  011D16  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5155                           
  5156                           ; BSR set to: 0
  5157  011D1A  0012               	return		;funcret
  5158  011D1C                     __end_of_atoi:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           indf0	equ	0xFEF
  5168                           postinc0	equ	0xFEE
  5169                           fsr0h	equ	0xFEA
  5170                           fsr0l	equ	0xFE9
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           postinc2	equ	0xFDE
  5177                           postdec2	equ	0xFDD
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _isdigit *****************
  5183 ;; Defined at:
  5184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  c               1    wreg     unsigned char 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  c               1    2[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;		None               void
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;Total ram usage:        3 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:   12
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_sprintf
  5209 ;;		_atoi
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text11
  5214  013F2C                     __ptext11:
  5215                           	opt stack 0
  5216  013F2C                     _isdigit:
  5217                           	opt stack 12
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;incstack = 0
  5221                           ;isdigit@c stored from wreg
  5222  013F2C  0100               	movlb	0	; () banked
  5223  013F2E  6F62               	movwf	isdigit@c& (0+255),b
  5224  013F30  0E00               	movlw	0
  5225  013F32  0100               	movlb	0	; () banked
  5226  013F34  6F61               	movwf	_isdigit$5642& (0+255),b
  5227                           
  5228                           ; BSR set to: 0
  5229  013F36  0E3A               	movlw	58
  5230  013F38  0100               	movlb	0	; () banked
  5231  013F3A  6162               	cpfslt	isdigit@c& (0+255),b
  5232  013F3C  D007               	goto	l8362
  5233                           
  5234                           ; BSR set to: 0
  5235  013F3E  0E2F               	movlw	47
  5236  013F40  0100               	movlb	0	; () banked
  5237  013F42  6562               	cpfsgt	isdigit@c& (0+255),b
  5238  013F44  D003               	goto	l8362
  5239                           
  5240                           ; BSR set to: 0
  5241  013F46  0E01               	movlw	1
  5242  013F48  0100               	movlb	0	; () banked
  5243  013F4A  6F61               	movwf	_isdigit$5642& (0+255),b
  5244  013F4C                     l8362:
  5245                           
  5246                           ; BSR set to: 0
  5247  013F4C  C061  F060         	movff	_isdigit$5642,??_isdigit
  5248  013F50  0100               	movlb	0	; () banked
  5249  013F52  3160               	rrcf	??_isdigit& (0+255),w,b
  5250  013F54  0012               	return	
  5251  013F56                     __end_of_isdigit:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           prodh	equ	0xFF4
  5258                           prodl	equ	0xFF3
  5259                           intcon	equ	0xFF2
  5260                           indf0	equ	0xFEF
  5261                           postinc0	equ	0xFEE
  5262                           fsr0h	equ	0xFEA
  5263                           fsr0l	equ	0xFE9
  5264                           wreg	equ	0xFE8
  5265                           postdec1	equ	0xFE5
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           indf2	equ	0xFDF
  5269                           postinc2	equ	0xFDE
  5270                           postdec2	equ	0xFDD
  5271                           fsr2h	equ	0xFDA
  5272                           fsr2l	equ	0xFD9
  5273                           status	equ	0xFD8
  5274                           
  5275 ;; *************** function ___wmul *****************
  5276 ;; Defined at:
  5277 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5280 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  product         2    4[BANK0 ] unsigned int 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  2    0[BANK0 ] unsigned int 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, prodl, prodh
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5296 ;;Total ram usage:        6 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:   12
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_sprintf
  5303 ;;		_atoi
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text12
  5308  013DB0                     __ptext12:
  5309                           	opt stack 0
  5310  013DB0                     ___wmul:
  5311                           	opt stack 12
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;incstack = 0
  5315  013DB0  0100               	movlb	0	; () banked
  5316  013DB2  5160               	movf	___wmul@multiplier& (0+255),w,b
  5317  013DB4  0100               	movlb	0	; () banked
  5318  013DB6  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5319  013DB8  CFF3 F064          	movff	prodl,___wmul@product
  5320  013DBC  CFF4 F065          	movff	prodh,___wmul@product+1
  5321  013DC0  0100               	movlb	0	; () banked
  5322  013DC2  5160               	movf	___wmul@multiplier& (0+255),w,b
  5323  013DC4  0100               	movlb	0	; () banked
  5324  013DC6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5325  013DC8  50F3               	movf	prodl,w,c
  5326  013DCA  0100               	movlb	0	; () banked
  5327  013DCC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5328  013DCE  0100               	movlb	0	; () banked
  5329  013DD0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5330  013DD2  0100               	movlb	0	; () banked
  5331  013DD4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5332  013DD6  50F3               	movf	prodl,w,c
  5333  013DD8  0100               	movlb	0	; () banked
  5334  013DDA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5335                           
  5336                           ; BSR set to: 0
  5337  013DDC  C064  F060         	movff	___wmul@product,?___wmul
  5338  013DE0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  5339  013DE4  0012               	return	
  5340  013DE6                     __end_of___wmul:
  5341                           	opt stack 0
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           intcon	equ	0xFF2
  5349                           indf0	equ	0xFEF
  5350                           postinc0	equ	0xFEE
  5351                           fsr0h	equ	0xFEA
  5352                           fsr0l	equ	0xFE9
  5353                           wreg	equ	0xFE8
  5354                           postdec1	equ	0xFE5
  5355                           fsr1h	equ	0xFE2
  5356                           fsr1l	equ	0xFE1
  5357                           indf2	equ	0xFDF
  5358                           postinc2	equ	0xFDE
  5359                           postdec2	equ	0xFDD
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _ringbuf_put_num *****************
  5365 ;; Defined at:
  5366 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5369 ;;		 -> usb_tx(8), 
  5370 ;;  value           2   17[BANK0 ] const unsigned int 
  5371 ;;  digits          1   19[BANK0 ] unsigned char 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  i               1   20[BANK0 ] unsigned char 
  5374 ;;  temp            2   21[BANK0 ] unsigned int 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;		None               void
  5377 ;; Registers used:
  5378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5384 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5385 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5387 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5388 ;;Total ram usage:        8 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:   14
  5391 ;; This function calls:
  5392 ;;		___lwdiv
  5393 ;;		___lwmod
  5394 ;;		_ringbuf_put
  5395 ;; This function is called by:
  5396 ;;		_terminal_task
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text13
  5401  01351A                     __ptext13:
  5402                           	opt stack 0
  5403  01351A                     _ringbuf_put_num:
  5404                           	opt stack 15
  5405                           
  5406                           ;My_ringbuf.c: 29: while (digits--) {
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;incstack = 0
  5410  01351A  D039               	goto	l9130
  5411  01351C                     l774:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5415  01351C  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5416  013520  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5420  013524  0E00               	movlw	0
  5421  013526  0100               	movlb	0	; () banked
  5422  013528  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  5423  01352A  D011               	goto	l9124
  5424  01352C                     l9120:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;My_ringbuf.c: 32: temp /= 10;
  5428  01352C  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5429  013530  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5430  013534  0E00               	movlw	0
  5431  013536  0100               	movlb	0	; () banked
  5432  013538  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5433  01353A  0E0A               	movlw	10
  5434  01353C  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5435  01353E  ECCE  F09A         	call	___lwdiv	;wreg free
  5436  013542  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  5437  013546  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5438  01354A  0100               	movlb	0	; () banked
  5439  01354C  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  5440  01354E                     l9124:
  5441                           
  5442                           ; BSR set to: 0
  5443  01354E  0100               	movlb	0	; () banked
  5444  013550  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  5445  013552  0100               	movlb	0	; () banked
  5446  013554  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  5447  013556  A0D8               	btfss	status,0,c
  5448  013558  D7E9               	goto	l9120
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;My_ringbuf.c: 33: }
  5452                           ;My_ringbuf.c: 34: temp %= 10;
  5453                           
  5454                           ; BSR set to: 0
  5455  01355A  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5456  01355E  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5457  013562  0E00               	movlw	0
  5458  013564  0100               	movlb	0	; () banked
  5459  013566  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  5460  013568  0E0A               	movlw	10
  5461  01356A  6F69               	movwf	___lwmod@divisor& (0+255),b
  5462  01356C  EC81  F09C         	call	___lwmod	;wreg free
  5463  013570  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  5464  013574  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5465                           
  5466                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5467  013578  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5468  01357C  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5469  013580  0100               	movlb	0	; () banked
  5470  013582  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  5471  013584  0F30               	addlw	48
  5472  013586  0100               	movlb	0	; () banked
  5473  013588  6F6A               	movwf	ringbuf_put@data& (0+255),b
  5474  01358A  ECEB  F092         	call	_ringbuf_put	;wreg free
  5475  01358E                     l9130:
  5476  01358E  0100               	movlb	0	; () banked
  5477  013590  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  5478  013592  0100               	movlb	0	; () banked
  5479  013594  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  5480  013596  B4D8               	btfsc	status,2,c
  5481  013598  0012               	return	
  5482  01359A  D7C0               	goto	l774
  5483  01359C                     __end_of_ringbuf_put_num:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           indf0	equ	0xFEF
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           postdec1	equ	0xFE5
  5498                           fsr1h	equ	0xFE2
  5499                           fsr1l	equ	0xFE1
  5500                           indf2	equ	0xFDF
  5501                           postinc2	equ	0xFDE
  5502                           postdec2	equ	0xFDD
  5503                           fsr2h	equ	0xFDA
  5504                           fsr2l	equ	0xFD9
  5505                           status	equ	0xFD8
  5506                           
  5507 ;; *************** function ___lwmod *****************
  5508 ;; Defined at:
  5509 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  dividend        2    7[BANK0 ] unsigned int 
  5512 ;;  divisor         2    9[BANK0 ] unsigned int 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  counter         1   11[BANK0 ] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  2    7[BANK0 ] unsigned int 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;Total ram usage:        5 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:   12
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_ringbuf_put_num
  5535 ;;		_sprintf
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text14
  5540  013902                     __ptext14:
  5541                           	opt stack 0
  5542  013902                     ___lwmod:
  5543                           	opt stack 12
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;incstack = 0
  5547  013902  0100               	movlb	0	; () banked
  5548  013904  5169               	movf	___lwmod@divisor& (0+255),w,b
  5549  013906  0100               	movlb	0	; () banked
  5550  013908  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5551  01390A  B4D8               	btfsc	status,2,c
  5552  01390C  D026               	goto	l2002
  5553                           
  5554                           ; BSR set to: 0
  5555  01390E  0E01               	movlw	1
  5556  013910  0100               	movlb	0	; () banked
  5557  013912  6F6B               	movwf	___lwmod@counter& (0+255),b
  5558  013914  D006               	goto	l8400
  5559  013916                     l8398:
  5560                           
  5561                           ; BSR set to: 0
  5562  013916  0100               	movlb	0	; () banked
  5563  013918  90D8               	bcf	status,0,c
  5564  01391A  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  5565  01391C  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5566  01391E  0100               	movlb	0	; () banked
  5567  013920  2B6B               	incf	___lwmod@counter& (0+255),f,b
  5568  013922                     l8400:
  5569                           
  5570                           ; BSR set to: 0
  5571  013922  0100               	movlb	0	; () banked
  5572  013924  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5573  013926  D7F7               	goto	l8398
  5574  013928                     l8402:
  5575                           
  5576                           ; BSR set to: 0
  5577  013928  0100               	movlb	0	; () banked
  5578  01392A  5169               	movf	___lwmod@divisor& (0+255),w,b
  5579  01392C  0100               	movlb	0	; () banked
  5580  01392E  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  5581  013930  0100               	movlb	0	; () banked
  5582  013932  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5583  013934  0100               	movlb	0	; () banked
  5584  013936  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5585  013938  A0D8               	btfss	status,0,c
  5586  01393A  D008               	goto	l8406
  5587                           
  5588                           ; BSR set to: 0
  5589  01393C  0100               	movlb	0	; () banked
  5590  01393E  5169               	movf	___lwmod@divisor& (0+255),w,b
  5591  013940  0100               	movlb	0	; () banked
  5592  013942  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  5593  013944  0100               	movlb	0	; () banked
  5594  013946  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5595  013948  0100               	movlb	0	; () banked
  5596  01394A  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5597  01394C                     l8406:
  5598                           
  5599                           ; BSR set to: 0
  5600  01394C  0100               	movlb	0	; () banked
  5601  01394E  90D8               	bcf	status,0,c
  5602  013950  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5603  013952  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  5604                           
  5605                           ; BSR set to: 0
  5606  013954  0100               	movlb	0	; () banked
  5607  013956  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  5608  013958  D7E7               	goto	l8402
  5609  01395A                     l2002:
  5610                           
  5611                           ; BSR set to: 0
  5612  01395A  C067  F067         	movff	___lwmod@dividend,?___lwmod
  5613  01395E  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  5614                           
  5615                           ; BSR set to: 0
  5616  013962  0012               	return		;funcret
  5617  013964                     __end_of___lwmod:
  5618                           	opt stack 0
  5619                           tblptru	equ	0xFF8
  5620                           tblptrh	equ	0xFF7
  5621                           tblptrl	equ	0xFF6
  5622                           tablat	equ	0xFF5
  5623                           prodh	equ	0xFF4
  5624                           prodl	equ	0xFF3
  5625                           intcon	equ	0xFF2
  5626                           indf0	equ	0xFEF
  5627                           postinc0	equ	0xFEE
  5628                           fsr0h	equ	0xFEA
  5629                           fsr0l	equ	0xFE9
  5630                           wreg	equ	0xFE8
  5631                           postdec1	equ	0xFE5
  5632                           fsr1h	equ	0xFE2
  5633                           fsr1l	equ	0xFE1
  5634                           indf2	equ	0xFDF
  5635                           postinc2	equ	0xFDE
  5636                           postdec2	equ	0xFDD
  5637                           fsr2h	equ	0xFDA
  5638                           fsr2l	equ	0xFD9
  5639                           status	equ	0xFD8
  5640                           
  5641 ;; *************** function ___lwdiv *****************
  5642 ;; Defined at:
  5643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  dividend        2    0[BANK0 ] unsigned int 
  5646 ;;  divisor         2    2[BANK0 ] unsigned int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  quotient        2    5[BANK0 ] unsigned int 
  5649 ;;  counter         1    4[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  2    0[BANK0 ] unsigned int 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;Total ram usage:        7 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:   12
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_ringbuf_put_num
  5670 ;;		_sprintf
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text15
  5675  01359C                     __ptext15:
  5676                           	opt stack 0
  5677  01359C                     ___lwdiv:
  5678                           	opt stack 12
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;incstack = 0
  5682  01359C  0E00               	movlw	0
  5683  01359E  0100               	movlb	0	; () banked
  5684  0135A0  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5685  0135A2  0E00               	movlw	0
  5686  0135A4  6F65               	movwf	___lwdiv@quotient& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689  0135A6  0100               	movlb	0	; () banked
  5690  0135A8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5691  0135AA  0100               	movlb	0	; () banked
  5692  0135AC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5693  0135AE  B4D8               	btfsc	status,2,c
  5694  0135B0  D02C               	goto	l1992
  5695                           
  5696                           ; BSR set to: 0
  5697  0135B2  0E01               	movlw	1
  5698  0135B4  0100               	movlb	0	; () banked
  5699  0135B6  6F64               	movwf	___lwdiv@counter& (0+255),b
  5700  0135B8  D006               	goto	l8380
  5701  0135BA                     l8378:
  5702                           
  5703                           ; BSR set to: 0
  5704  0135BA  0100               	movlb	0	; () banked
  5705  0135BC  90D8               	bcf	status,0,c
  5706  0135BE  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5707  0135C0  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5708  0135C2  0100               	movlb	0	; () banked
  5709  0135C4  2B64               	incf	___lwdiv@counter& (0+255),f,b
  5710  0135C6                     l8380:
  5711                           
  5712                           ; BSR set to: 0
  5713  0135C6  0100               	movlb	0	; () banked
  5714  0135C8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5715  0135CA  D7F7               	goto	l8378
  5716  0135CC                     l8382:
  5717                           
  5718                           ; BSR set to: 0
  5719  0135CC  0100               	movlb	0	; () banked
  5720  0135CE  90D8               	bcf	status,0,c
  5721  0135D0  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  5722  0135D2  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5723                           
  5724                           ; BSR set to: 0
  5725  0135D4  0100               	movlb	0	; () banked
  5726  0135D6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5727  0135D8  0100               	movlb	0	; () banked
  5728  0135DA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5729  0135DC  0100               	movlb	0	; () banked
  5730  0135DE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5731  0135E0  0100               	movlb	0	; () banked
  5732  0135E2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5733  0135E4  A0D8               	btfss	status,0,c
  5734  0135E6  D00A               	goto	l8390
  5735                           
  5736                           ; BSR set to: 0
  5737  0135E8  0100               	movlb	0	; () banked
  5738  0135EA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5739  0135EC  0100               	movlb	0	; () banked
  5740  0135EE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5741  0135F0  0100               	movlb	0	; () banked
  5742  0135F2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5743  0135F4  0100               	movlb	0	; () banked
  5744  0135F6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5745                           
  5746                           ; BSR set to: 0
  5747  0135F8  0100               	movlb	0	; () banked
  5748  0135FA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  5749  0135FC                     l8390:
  5750                           
  5751                           ; BSR set to: 0
  5752  0135FC  0100               	movlb	0	; () banked
  5753  0135FE  90D8               	bcf	status,0,c
  5754  013600  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5755  013602  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5756                           
  5757                           ; BSR set to: 0
  5758  013604  0100               	movlb	0	; () banked
  5759  013606  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  5760  013608  D7E1               	goto	l8382
  5761  01360A                     l1992:
  5762                           
  5763                           ; BSR set to: 0
  5764  01360A  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  5765  01360E  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5766                           
  5767                           ; BSR set to: 0
  5768  013612  0012               	return		;funcret
  5769  013614                     __end_of___lwdiv:
  5770                           	opt stack 0
  5771                           tblptru	equ	0xFF8
  5772                           tblptrh	equ	0xFF7
  5773                           tblptrl	equ	0xFF6
  5774                           tablat	equ	0xFF5
  5775                           prodh	equ	0xFF4
  5776                           prodl	equ	0xFF3
  5777                           intcon	equ	0xFF2
  5778                           indf0	equ	0xFEF
  5779                           postinc0	equ	0xFEE
  5780                           fsr0h	equ	0xFEA
  5781                           fsr0l	equ	0xFE9
  5782                           wreg	equ	0xFE8
  5783                           postdec1	equ	0xFE5
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           postdec2	equ	0xFDD
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793 ;; *************** function _ringbuf_delete *****************
  5794 ;; Defined at:
  5795 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5798 ;;		 -> terminal_task@command(8), 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;		None               void
  5803 ;; Registers used:
  5804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;Total ram usage:        2 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:   12
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_terminal_task
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text16
  5825  013FF8                     __ptext16:
  5826                           	opt stack 0
  5827  013FF8                     _ringbuf_delete:
  5828                           	opt stack 17
  5829                           
  5830                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;incstack = 0
  5834  013FF8  0100               	movlb	0	; () banked
  5835  013FFA  EE20 F006          	lfsr	2,6
  5836  013FFE  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5837  014000  26D9               	addwf	fsr2l,f,c
  5838  014002  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5839  014004  22DA               	addwfc	fsr2h,f,c
  5840  014006  0100               	movlb	0	; () banked
  5841  014008  EE10 F004          	lfsr	1,4
  5842  01400C  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5843  01400E  26E1               	addwf	fsr1l,f,c
  5844  014010  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5845  014012  22E2               	addwfc	fsr1h,f,c
  5846  014014  CFDE FFE6          	movff	postinc2,postinc1
  5847  014018  CFDD FFE5          	movff	postdec2,postdec1
  5848                           
  5849                           ; BSR set to: 0
  5850  01401C  0012               	return		;funcret
  5851  01401E                     __end_of_ringbuf_delete:
  5852                           	opt stack 0
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           intcon	equ	0xFF2
  5860                           indf0	equ	0xFEF
  5861                           postinc0	equ	0xFEE
  5862                           fsr0h	equ	0xFEA
  5863                           fsr0l	equ	0xFE9
  5864                           wreg	equ	0xFE8
  5865                           postinc1	equ	0xFE6
  5866                           postdec1	equ	0xFE5
  5867                           fsr1h	equ	0xFE2
  5868                           fsr1l	equ	0xFE1
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function _ringbuf_backspace *****************
  5877 ;; Defined at:
  5878 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5881 ;;		 -> terminal_task@command(8), 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;		None               void
  5886 ;; Registers used:
  5887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;Total ram usage:        6 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:   13
  5900 ;; This function calls:
  5901 ;;		_ringbuf_num
  5902 ;; This function is called by:
  5903 ;;		_terminal_task
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text17
  5908  013372                     __ptext17:
  5909                           	opt stack 0
  5910  013372                     _ringbuf_backspace:
  5911                           	opt stack 16
  5912                           
  5913                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;incstack = 0
  5917  013372  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5918  013376  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5919  01337A  EC07  F08F         	call	_ringbuf_num	;wreg free
  5920  01337E  0100               	movlb	0	; () banked
  5921  013380  5160               	movf	?_ringbuf_num& (0+255),w,b
  5922  013382  0100               	movlb	0	; () banked
  5923  013384  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5924  013386  B4D8               	btfsc	status,2,c
  5925  013388  0012               	return	
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5929  01338A  0100               	movlb	0	; () banked
  5930  01338C  EE20 F004          	lfsr	2,4
  5931  013390  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5932  013392  26D9               	addwf	fsr2l,f,c
  5933  013394  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5934  013396  22DA               	addwfc	fsr2h,f,c
  5935  013398  50DE               	movf	postinc2,w,c
  5936  01339A  10DE               	iorwf	postinc2,w,c
  5937  01339C  B4D8               	btfsc	status,2,c
  5938  01339E  D00B               	goto	l9158
  5939                           
  5940                           ; BSR set to: 0
  5941  0133A0  0100               	movlb	0	; () banked
  5942  0133A2  EE20 F004          	lfsr	2,4
  5943  0133A6  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5944  0133A8  26D9               	addwf	fsr2l,f,c
  5945  0133AA  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5946  0133AC  22DA               	addwfc	fsr2h,f,c
  5947  0133AE  06DE               	decf	postinc2,f,c
  5948  0133B0  0E00               	movlw	0
  5949  0133B2  5ADD               	subwfb	postdec2,f,c
  5950  0133B4  0012               	return	
  5951  0133B6                     l9158:
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5955  0133B6  0EFF               	movlw	255
  5956  0133B8  0100               	movlb	0	; () banked
  5957  0133BA  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5958  0133BC  0EFF               	movlw	255
  5959  0133BE  0100               	movlb	0	; () banked
  5960  0133C0  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5961  0133C2  0100               	movlb	0	; () banked
  5962  0133C4  EE20 F002          	lfsr	2,2
  5963  0133C8  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5964  0133CA  26D9               	addwf	fsr2l,f,c
  5965  0133CC  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5966  0133CE  22DA               	addwfc	fsr2h,f,c
  5967  0133D0  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5968  0133D4  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5969  0133D8  0100               	movlb	0	; () banked
  5970  0133DA  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5971  0133DC  0100               	movlb	0	; () banked
  5972  0133DE  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5973  0133E0  0100               	movlb	0	; () banked
  5974  0133E2  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5975  0133E4  0100               	movlb	0	; () banked
  5976  0133E6  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5977  0133E8  0100               	movlb	0	; () banked
  5978  0133EA  EE20 F004          	lfsr	2,4
  5979  0133EE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5980  0133F0  26D9               	addwf	fsr2l,f,c
  5981  0133F2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5982  0133F4  22DA               	addwfc	fsr2h,f,c
  5983  0133F6  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5984  0133FA  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5985                           
  5986                           ; BSR set to: 0
  5987  0133FE  0012               	return	
  5988  013400                     __end_of_ringbuf_backspace:
  5989                           	opt stack 0
  5990                           tblptru	equ	0xFF8
  5991                           tblptrh	equ	0xFF7
  5992                           tblptrl	equ	0xFF6
  5993                           tablat	equ	0xFF5
  5994                           prodh	equ	0xFF4
  5995                           prodl	equ	0xFF3
  5996                           intcon	equ	0xFF2
  5997                           indf0	equ	0xFEF
  5998                           postinc0	equ	0xFEE
  5999                           fsr0h	equ	0xFEA
  6000                           fsr0l	equ	0xFE9
  6001                           wreg	equ	0xFE8
  6002                           postinc1	equ	0xFE6
  6003                           postdec1	equ	0xFE5
  6004                           fsr1h	equ	0xFE2
  6005                           fsr1l	equ	0xFE1
  6006                           indf2	equ	0xFDF
  6007                           postinc2	equ	0xFDE
  6008                           postdec2	equ	0xFDD
  6009                           fsr2h	equ	0xFDA
  6010                           fsr2l	equ	0xFD9
  6011                           status	equ	0xFD8
  6012                           
  6013 ;; *************** function _main_init *****************
  6014 ;; Defined at:
  6015 ;;		line 73 in file "main.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;		None               void
  6022 ;; Registers used:
  6023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;Total ram usage:        0 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:   17
  6036 ;; This function calls:
  6037 ;;		_I2C_LCD_init
  6038 ;;		_OSC_init
  6039 ;;		_RTCC_init
  6040 ;;		_UART_init
  6041 ;;		_USB_CDC_init
  6042 ;;		_timer0_init
  6043 ;;		_timer1_init
  6044 ;;		_timer3_init
  6045 ;; This function is called by:
  6046 ;;		_main
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text18
  6051  013C02                     __ptext18:
  6052                           	opt stack 0
  6053  013C02                     _main_init:
  6054                           	opt stack 13
  6055                           
  6056                           ;main.c: 74: OSC_init();
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;incstack = 0
  6060  013C02  ECC3  F0A0         	call	_OSC_init	;wreg free
  6061                           
  6062                           ;main.c: 75: TRISA = 0b00010000;
  6063  013C06  0E10               	movlw	16
  6064  013C08  6E92               	movwf	3986,c	;volatile
  6065                           
  6066                           ;main.c: 76: TRISB = 0b00110001;
  6067  013C0A  0E31               	movlw	49
  6068  013C0C  6E93               	movwf	3987,c	;volatile
  6069                           
  6070                           ;main.c: 77: TRISC = 0b10111010;
  6071  013C0E  0EBA               	movlw	186
  6072  013C10  6E94               	movwf	3988,c	;volatile
  6073                           
  6074                           ;main.c: 78: ANCON0 = 0b11111111;
  6075  013C12  010F               	movlb	15	; () banked
  6076  013C14  6948               	setf	72,b	;volatile
  6077                           
  6078                           ; BSR set to: 15
  6079                           ;main.c: 79: ANCON1 = 0b00011111;
  6080  013C16  0E1F               	movlw	31
  6081  013C18  010F               	movlb	15	; () banked
  6082  013C1A  6F49               	movwf	73,b	;volatile
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;main.c: 80: INTCON2bits.RBPU = 0;
  6086  013C1C  9EF1               	bcf	intcon2,7,c	;volatile
  6087                           
  6088                           ; BSR set to: 15
  6089                           ;main.c: 82: timer0_init(6);
  6090  013C1E  0E06               	movlw	6
  6091  013C20  EC83  F09E         	call	_timer0_init
  6092                           
  6093                           ;main.c: 83: timer1_init(0, 2);
  6094  013C24  0E02               	movlw	2
  6095  013C26  0100               	movlb	0	; () banked
  6096  013C28  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6097  013C2A  0E00               	movlw	0
  6098  013C2C  EC66  F09D         	call	_timer1_init
  6099                           
  6100                           ;main.c: 84: timer3_init(2);
  6101  013C30  0E02               	movlw	2
  6102  013C32  EC3E  F09F         	call	_timer3_init
  6103                           
  6104                           ;main.c: 85: I2C_LCD_init();
  6105  013C36  EC71  F099         	call	_I2C_LCD_init	;wreg free
  6106                           
  6107                           ;main.c: 86: RTCC_init();
  6108  013C3A  ECB4  F09B         	call	_RTCC_init	;wreg free
  6109                           
  6110                           ;main.c: 87: USB_CDC_init();
  6111  013C3E  ECBC  F0A0         	call	_USB_CDC_init	;wreg free
  6112                           
  6113                           ;main.c: 88: UART_init();
  6114  013C42  EC0F  F0A0         	call	_UART_init	;wreg free
  6115  013C46  0012               	return		;funcret
  6116  013C48                     __end_of_main_init:
  6117                           	opt stack 0
  6118                           tblptru	equ	0xFF8
  6119                           tblptrh	equ	0xFF7
  6120                           tblptrl	equ	0xFF6
  6121                           tablat	equ	0xFF5
  6122                           prodh	equ	0xFF4
  6123                           prodl	equ	0xFF3
  6124                           intcon	equ	0xFF2
  6125                           intcon2	equ	0xFF1
  6126                           indf0	equ	0xFEF
  6127                           postinc0	equ	0xFEE
  6128                           fsr0h	equ	0xFEA
  6129                           fsr0l	equ	0xFE9
  6130                           wreg	equ	0xFE8
  6131                           postinc1	equ	0xFE6
  6132                           postdec1	equ	0xFE5
  6133                           fsr1h	equ	0xFE2
  6134                           fsr1l	equ	0xFE1
  6135                           indf2	equ	0xFDF
  6136                           postinc2	equ	0xFDE
  6137                           postdec2	equ	0xFDD
  6138                           fsr2h	equ	0xFDA
  6139                           fsr2l	equ	0xFD9
  6140                           status	equ	0xFD8
  6141                           
  6142 ;; *************** function _timer3_init *****************
  6143 ;; Defined at:
  6144 ;;		line 101 in file "../My_library/My_PIC.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  prescaler       1    wreg     unsigned char 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;		None               void
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;Total ram usage:        2 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:   12
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_main_init
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text19
  6173  013E7C                     __ptext19:
  6174                           	opt stack 0
  6175  013E7C                     _timer3_init:
  6176                           	opt stack 17
  6177                           
  6178                           ;incstack = 0
  6179                           ;timer3_init@prescaler stored from wreg
  6180  013E7C  0100               	movlb	0	; () banked
  6181  013E7E  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6182                           
  6183                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6184  013E80  0E3F               	movlw	-193
  6185  013E82  1679               	andwf	3961,f,c	;volatile
  6186                           
  6187                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6188  013E84  9679               	bcf	3961,3,c	;volatile
  6189                           
  6190                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6191  013E86  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6192  013E8A  0100               	movlb	0	; () banked
  6193  013E8C  3B60               	swapf	??_timer3_init& (0+255),f,b
  6194  013E8E  5079               	movf	3961,w,c	;volatile
  6195  013E90  0100               	movlb	0	; () banked
  6196  013E92  1960               	xorwf	??_timer3_init& (0+255),w,b
  6197  013E94  0BCF               	andlw	-49
  6198  013E96  1960               	xorwf	??_timer3_init& (0+255),w,b
  6199  013E98  6E79               	movwf	3961,c	;volatile
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6203  013E9A  9E79               	bcf	3961,7,c	;volatile
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6207  013E9C  8079               	bsf	3961,0,c	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6211  013E9E  92A2               	bcf	4002,1,c	;volatile
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6215  013EA0  92A1               	bcf	4001,1,c	;volatile
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6219  013EA2  82A0               	bsf	4000,1,c	;volatile
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6223  013EA4  8CF2               	bsf	intcon,6,c	;volatile
  6224                           
  6225                           ; BSR set to: 0
  6226  013EA6  0012               	return		;funcret
  6227  013EA8                     __end_of_timer3_init:
  6228                           	opt stack 0
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           prodh	equ	0xFF4
  6234                           prodl	equ	0xFF3
  6235                           intcon	equ	0xFF2
  6236                           intcon2	equ	0xFF1
  6237                           indf0	equ	0xFEF
  6238                           postinc0	equ	0xFEE
  6239                           fsr0h	equ	0xFEA
  6240                           fsr0l	equ	0xFE9
  6241                           wreg	equ	0xFE8
  6242                           postinc1	equ	0xFE6
  6243                           postdec1	equ	0xFE5
  6244                           fsr1h	equ	0xFE2
  6245                           fsr1l	equ	0xFE1
  6246                           indf2	equ	0xFDF
  6247                           postinc2	equ	0xFDE
  6248                           postdec2	equ	0xFDD
  6249                           fsr2h	equ	0xFDA
  6250                           fsr2l	equ	0xFD9
  6251                           status	equ	0xFD8
  6252                           
  6253 ;; *************** function _timer1_init *****************
  6254 ;; Defined at:
  6255 ;;		line 70 in file "../My_library/My_PIC.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  prescaler       1    wreg     unsigned char 
  6258 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;		None               void
  6263 ;; Registers used:
  6264 ;;		wreg, status,2, status,0
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6270 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;Total ram usage:        3 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:   12
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_main_init
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text20
  6285  013ACC                     __ptext20:
  6286                           	opt stack 0
  6287  013ACC                     _timer1_init:
  6288                           	opt stack 17
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;incstack = 0
  6292                           ;timer1_init@prescaler stored from wreg
  6293  013ACC  0100               	movlb	0	; () banked
  6294  013ACE  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6295                           
  6296                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6297  013AD0  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6298  013AD4  0100               	movlb	0	; () banked
  6299  013AD6  3B61               	swapf	??_timer1_init& (0+255),f,b
  6300  013AD8  4761               	rlncf	??_timer1_init& (0+255),f,b
  6301  013ADA  4761               	rlncf	??_timer1_init& (0+255),f,b
  6302  013ADC  50CD               	movf	4045,w,c	;volatile
  6303  013ADE  0100               	movlb	0	; () banked
  6304  013AE0  1961               	xorwf	??_timer1_init& (0+255),w,b
  6305  013AE2  0B3F               	andlw	-193
  6306  013AE4  1961               	xorwf	??_timer1_init& (0+255),w,b
  6307  013AE6  6ECD               	movwf	4045,c	;volatile
  6308                           
  6309                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6310  013AE8  0E02               	movlw	2
  6311  013AEA  0100               	movlb	0	; () banked
  6312  013AEC  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6313  013AEE  A4D8               	btfss	status,2,c
  6314  013AF0  D002               	goto	l710
  6315                           
  6316                           ; BSR set to: 0
  6317  013AF2  86CD               	bsf	4045,3,c	;volatile
  6318  013AF4  D001               	goto	l9082
  6319  013AF6                     l710:
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6323  013AF6  96CD               	bcf	4045,3,c	;volatile
  6324  013AF8                     l9082:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6328  013AF8  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6329  013AFC  0100               	movlb	0	; () banked
  6330  013AFE  3B61               	swapf	??_timer1_init& (0+255),f,b
  6331  013B00  50CD               	movf	4045,w,c	;volatile
  6332  013B02  0100               	movlb	0	; () banked
  6333  013B04  1961               	xorwf	??_timer1_init& (0+255),w,b
  6334  013B06  0BCF               	andlw	-49
  6335  013B08  1961               	xorwf	??_timer1_init& (0+255),w,b
  6336  013B0A  6ECD               	movwf	4045,c	;volatile
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6340  013B0C  84CD               	bsf	4045,2,c	;volatile
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6344  013B0E  92CD               	bcf	4045,1,c	;volatile
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6348  013B10  80CD               	bsf	4045,0,c	;volatile
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6352  013B12  909F               	bcf	3999,0,c	;volatile
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6356  013B14  909E               	bcf	3998,0,c	;volatile
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6360  013B16  809D               	bsf	3997,0,c	;volatile
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6364  013B18  8CF2               	bsf	intcon,6,c	;volatile
  6365                           
  6366                           ; BSR set to: 0
  6367  013B1A  0012               	return		;funcret
  6368  013B1C                     __end_of_timer1_init:
  6369                           	opt stack 0
  6370                           tblptru	equ	0xFF8
  6371                           tblptrh	equ	0xFF7
  6372                           tblptrl	equ	0xFF6
  6373                           tablat	equ	0xFF5
  6374                           prodh	equ	0xFF4
  6375                           prodl	equ	0xFF3
  6376                           intcon	equ	0xFF2
  6377                           intcon2	equ	0xFF1
  6378                           indf0	equ	0xFEF
  6379                           postinc0	equ	0xFEE
  6380                           fsr0h	equ	0xFEA
  6381                           fsr0l	equ	0xFE9
  6382                           wreg	equ	0xFE8
  6383                           postinc1	equ	0xFE6
  6384                           postdec1	equ	0xFE5
  6385                           fsr1h	equ	0xFE2
  6386                           fsr1l	equ	0xFE1
  6387                           indf2	equ	0xFDF
  6388                           postinc2	equ	0xFDE
  6389                           postdec2	equ	0xFDD
  6390                           fsr2h	equ	0xFDA
  6391                           fsr2l	equ	0xFD9
  6392                           status	equ	0xFD8
  6393                           
  6394 ;; *************** function _timer0_init *****************
  6395 ;; Defined at:
  6396 ;;		line 34 in file "../My_library/My_PIC.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  prescaler       1    wreg     unsigned char 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;		None               void
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, status,0
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;Total ram usage:        2 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:   12
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_main_init
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text21
  6425  013D06                     __ptext21:
  6426                           	opt stack 0
  6427  013D06                     _timer0_init:
  6428                           	opt stack 17
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;incstack = 0
  6432                           ;timer0_init@prescaler stored from wreg
  6433  013D06  0100               	movlb	0	; () banked
  6434  013D08  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6435                           
  6436                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  6437  013D0A  8ED5               	bsf	4053,7,c	;volatile
  6438                           
  6439                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  6440  013D0C  8CD5               	bsf	4053,6,c	;volatile
  6441                           
  6442                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  6443  013D0E  9AD5               	bcf	4053,5,c	;volatile
  6444                           
  6445                           ;My_PIC.c: 38: if (prescaler == 0) {
  6446  013D10  0100               	movlb	0	; () banked
  6447  013D12  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6448  013D14  0100               	movlb	0	; () banked
  6449  013D16  A4D8               	btfss	status,2,c
  6450  013D18  D002               	goto	l705
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  6454  013D1A  86D5               	bsf	4053,3,c	;volatile
  6455                           
  6456                           ;My_PIC.c: 40: } else {
  6457  013D1C  D00C               	goto	l9070
  6458  013D1E                     l705:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  6462  013D1E  96D5               	bcf	4053,3,c	;volatile
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  6466  013D20  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6467  013D24  0EFF               	movlw	255
  6468  013D26  0100               	movlb	0	; () banked
  6469  013D28  2760               	addwf	??_timer0_init& (0+255),f,b
  6470  013D2A  50D5               	movf	4053,w,c	;volatile
  6471  013D2C  0100               	movlb	0	; () banked
  6472  013D2E  1960               	xorwf	??_timer0_init& (0+255),w,b
  6473  013D30  0BF8               	andlw	-8
  6474  013D32  1960               	xorwf	??_timer0_init& (0+255),w,b
  6475  013D34  6ED5               	movwf	4053,c	;volatile
  6476  013D36                     l9070:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;My_PIC.c: 43: }
  6480                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  6481  013D36  8AF2               	bsf	intcon,5,c	;volatile
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  6485  013D38  94F2               	bcf	intcon,2,c	;volatile
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  6489  013D3A  94F1               	bcf	intcon2,2,c	;volatile
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  6493  013D3C  8CF2               	bsf	intcon,6,c	;volatile
  6494                           
  6495                           ; BSR set to: 0
  6496  013D3E  0012               	return		;funcret
  6497  013D40                     __end_of_timer0_init:
  6498                           	opt stack 0
  6499                           tblptru	equ	0xFF8
  6500                           tblptrh	equ	0xFF7
  6501                           tblptrl	equ	0xFF6
  6502                           tablat	equ	0xFF5
  6503                           prodh	equ	0xFF4
  6504                           prodl	equ	0xFF3
  6505                           intcon	equ	0xFF2
  6506                           intcon2	equ	0xFF1
  6507                           indf0	equ	0xFEF
  6508                           postinc0	equ	0xFEE
  6509                           fsr0h	equ	0xFEA
  6510                           fsr0l	equ	0xFE9
  6511                           wreg	equ	0xFE8
  6512                           postinc1	equ	0xFE6
  6513                           postdec1	equ	0xFE5
  6514                           fsr1h	equ	0xFE2
  6515                           fsr1l	equ	0xFE1
  6516                           indf2	equ	0xFDF
  6517                           postinc2	equ	0xFDE
  6518                           postdec2	equ	0xFDD
  6519                           fsr2h	equ	0xFDA
  6520                           fsr2l	equ	0xFD9
  6521                           status	equ	0xFD8
  6522                           
  6523 ;; *************** function _USB_CDC_init *****************
  6524 ;; Defined at:
  6525 ;;		line 20 in file "../My_library/My_usb_cdc.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;Total ram usage:        0 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:   14
  6546 ;; This function calls:
  6547 ;;		_USBDeviceAttach
  6548 ;;		_USBDeviceInit
  6549 ;;		_USB_CDC_buffer_init
  6550 ;; This function is called by:
  6551 ;;		_main_init
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text22
  6556  014178                     __ptext22:
  6557                           	opt stack 0
  6558  014178                     _USB_CDC_init:
  6559                           	opt stack 15
  6560                           
  6561                           ;My_usb_cdc.c: 21: USBDeviceInit();
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;incstack = 0
  6565  014178  ECF7  F089         	call	_USBDeviceInit	;wreg free
  6566                           
  6567                           ;My_usb_cdc.c: 22: USBDeviceAttach();
  6568  01417C  ECA0  F09E         	call	_USBDeviceAttach	;wreg free
  6569                           
  6570                           ;My_usb_cdc.c: 23: USB_CDC_buffer_init();
  6571  014180  EC8E  F09D         	call	_USB_CDC_buffer_init	;wreg free
  6572  014184  0012               	return		;funcret
  6573  014186                     __end_of_USB_CDC_init:
  6574                           	opt stack 0
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodh	equ	0xFF4
  6580                           prodl	equ	0xFF3
  6581                           intcon	equ	0xFF2
  6582                           intcon2	equ	0xFF1
  6583                           indf0	equ	0xFEF
  6584                           postinc0	equ	0xFEE
  6585                           fsr0h	equ	0xFEA
  6586                           fsr0l	equ	0xFE9
  6587                           wreg	equ	0xFE8
  6588                           postinc1	equ	0xFE6
  6589                           postdec1	equ	0xFE5
  6590                           fsr1h	equ	0xFE2
  6591                           fsr1l	equ	0xFE1
  6592                           indf2	equ	0xFDF
  6593                           postinc2	equ	0xFDE
  6594                           postdec2	equ	0xFDD
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _USB_CDC_buffer_init *****************
  6600 ;; Defined at:
  6601 ;;		line 26 in file "../My_library/My_usb_cdc.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;		None               void
  6608 ;; Registers used:
  6609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:   13
  6622 ;; This function calls:
  6623 ;;		_ringbuf_init
  6624 ;; This function is called by:
  6625 ;;		_USB_CDC_init
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text23
  6630  013B1C                     __ptext23:
  6631                           	opt stack 0
  6632  013B1C                     _USB_CDC_buffer_init:
  6633                           	opt stack 15
  6634                           
  6635                           ;My_usb_cdc.c: 27: static uint8_t txbuf[800];
  6636                           ;My_usb_cdc.c: 28: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  6637                           
  6638                           ;incstack = 0
  6639  013B1C  0E74               	movlw	low _usb_tx
  6640  013B1E  0100               	movlb	0	; () banked
  6641  013B20  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6642  013B22  0E01               	movlw	high _usb_tx
  6643  013B24  0100               	movlb	0	; () banked
  6644  013B26  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6645  013B28  0EC8               	movlw	low USB_CDC_buffer_init@txbuf
  6646  013B2A  0100               	movlb	0	; () banked
  6647  013B2C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6648  013B2E  0E05               	movlw	high USB_CDC_buffer_init@txbuf
  6649  013B30  0100               	movlb	0	; () banked
  6650  013B32  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6651  013B34  0E03               	movlw	3
  6652  013B36  0100               	movlb	0	; () banked
  6653  013B38  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6654  013B3A  0E20               	movlw	32
  6655  013B3C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6656  013B3E  EC3C  F09D         	call	_ringbuf_init	;wreg free
  6657                           
  6658                           ;My_usb_cdc.c: 29: static uint8_t rxbuf[100];
  6659                           ;My_usb_cdc.c: 30: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  6660  013B42  0E6C               	movlw	low _usb_rx
  6661  013B44  0100               	movlb	0	; () banked
  6662  013B46  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6663  013B48  0E01               	movlw	high _usb_rx
  6664  013B4A  0100               	movlb	0	; () banked
  6665  013B4C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6666  013B4E  0E00               	movlw	low USB_CDC_buffer_init@rxbuf
  6667  013B50  0100               	movlb	0	; () banked
  6668  013B52  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6669  013B54  0E04               	movlw	high USB_CDC_buffer_init@rxbuf
  6670  013B56  0100               	movlb	0	; () banked
  6671  013B58  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6672  013B5A  0E00               	movlw	0
  6673  013B5C  0100               	movlb	0	; () banked
  6674  013B5E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6675  013B60  0E64               	movlw	100
  6676  013B62  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6677  013B64  EC3C  F09D         	call	_ringbuf_init	;wreg free
  6678  013B68  0012               	return		;funcret
  6679  013B6A                     __end_of_USB_CDC_buffer_init:
  6680                           	opt stack 0
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           prodh	equ	0xFF4
  6686                           prodl	equ	0xFF3
  6687                           intcon	equ	0xFF2
  6688                           intcon2	equ	0xFF1
  6689                           indf0	equ	0xFEF
  6690                           postinc0	equ	0xFEE
  6691                           fsr0h	equ	0xFEA
  6692                           fsr0l	equ	0xFE9
  6693                           wreg	equ	0xFE8
  6694                           postinc1	equ	0xFE6
  6695                           postdec1	equ	0xFE5
  6696                           fsr1h	equ	0xFE2
  6697                           fsr1l	equ	0xFE1
  6698                           indf2	equ	0xFDF
  6699                           postinc2	equ	0xFDE
  6700                           postdec2	equ	0xFDD
  6701                           fsr2h	equ	0xFDA
  6702                           fsr2l	equ	0xFD9
  6703                           status	equ	0xFD8
  6704                           
  6705 ;; *************** function _USBDeviceInit *****************
  6706 ;; Defined at:
  6707 ;;		line 299 in file "../My_library/usb/usb_device.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  i               1    8[BANK0 ] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;		None               void
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6725 ;;Total ram usage:        1 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:   13
  6728 ;; This function calls:
  6729 ;;		_memset
  6730 ;; This function is called by:
  6731 ;;		_USB_CDC_init
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text24
  6736  0113EE                     __ptext24:
  6737                           	opt stack 0
  6738  0113EE                     _USBDeviceInit:
  6739                           	opt stack 15
  6740                           
  6741                           ;usb_device.c: 301: uint8_t i;
  6742                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
  6743                           
  6744                           ;incstack = 0
  6745  0113EE  98A0               	bcf	4000,4,c	;volatile
  6746                           
  6747                           ;usb_device.c: 306: {UEIR = 0;};
  6748  0113F0  0E00               	movlw	0
  6749  0113F2  6E63               	movwf	3939,c	;volatile
  6750                           
  6751                           ;usb_device.c: 309: {UIR = 0;};
  6752  0113F4  0E00               	movlw	0
  6753  0113F6  6E62               	movwf	3938,c	;volatile
  6754                           
  6755                           ;usb_device.c: 312: UEP0 = 0;
  6756  0113F8  0E00               	movlw	0
  6757  0113FA  010F               	movlb	15	; () banked
  6758  0113FC  6F26               	movwf	38,b	;volatile
  6759                           
  6760                           ; BSR set to: 15
  6761                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6762  0113FE  0E27               	movlw	39
  6763  011400  0100               	movlb	0	; () banked
  6764  011402  6F60               	movwf	memset@p1& (0+255),b
  6765  011404  0E0F               	movlw	15
  6766  011406  0100               	movlb	0	; () banked
  6767  011408  6F61               	movwf	(memset@p1+1)& (0+255),b
  6768  01140A  0E00               	movlw	0
  6769  01140C  0100               	movlb	0	; () banked
  6770  01140E  6F63               	movwf	(memset@c+1)& (0+255),b
  6771  011410  0E00               	movlw	0
  6772  011412  6F62               	movwf	memset@c& (0+255),b
  6773  011414  0E00               	movlw	0
  6774  011416  0100               	movlb	0	; () banked
  6775  011418  6F65               	movwf	(memset@n+1)& (0+255),b
  6776  01141A  0E02               	movlw	2
  6777  01141C  6F64               	movwf	memset@n& (0+255),b
  6778  01141E  ECF3  F09E         	call	_memset	;wreg free
  6779                           
  6780                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6781  011422  0E16               	movlw	22
  6782  011424  010F               	movlb	15	; () banked
  6783  011426  6F39               	movwf	57,b	;volatile
  6784                           
  6785                           ; BSR set to: 15
  6786  011428  0E9F               	movlw	159
  6787  01142A  010F               	movlb	15	; () banked
  6788  01142C  6F37               	movwf	55,b	;volatile
  6789                           
  6790                           ; BSR set to: 15
  6791  01142E  0E7B               	movlw	123
  6792  011430  010F               	movlb	15	; () banked
  6793  011432  6F36               	movwf	54,b	;volatile
  6794                           
  6795                           ; BSR set to: 15
  6796                           ;usb_device.c: 319: ;
  6797                           ;usb_device.c: 322: ;
  6798                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  6799  011434  0E00               	movlw	0
  6800  011436  0100               	movlb	0	; () banked
  6801  011438  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6802  01143A                     l8812:
  6803                           
  6804                           ; BSR set to: 0
  6805  01143A  0E0B               	movlw	11
  6806  01143C  0100               	movlb	0	; () banked
  6807  01143E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6808  011440  D001               	goto	l8816
  6809  011442  D010               	goto	l146
  6810  011444                     l8816:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;usb_device.c: 326: {
  6814                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6815  011444  0100               	movlb	0	; () banked
  6816  011446  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6817  011448  0D04               	mullw	4
  6818  01144A  0E00               	movlw	0
  6819  01144C  24F3               	addwf	prodl,w,c
  6820  01144E  6ED9               	movwf	fsr2l,c
  6821  011450  0E0D               	movlw	13
  6822  011452  20F4               	addwfc	prodh,w,c
  6823  011454  6EDA               	movwf	fsr2h,c
  6824  011456  6ADE               	clrf	postinc2,c
  6825  011458  6ADE               	clrf	postinc2,c
  6826  01145A  6ADE               	clrf	postinc2,c
  6827  01145C  6ADD               	clrf	postdec2,c
  6828                           
  6829                           ; BSR set to: 0
  6830  01145E  0100               	movlb	0	; () banked
  6831  011460  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6832  011462  D7EB               	goto	l8812
  6833  011464                     l146:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;usb_device.c: 328: }
  6837                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6838  011464  8C65               	bsf	3941,6,c	;volatile
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;usb_device.c: 334: UADDR = 0x00;
  6842  011466  0E00               	movlw	0
  6843  011468  010F               	movlb	15	; () banked
  6844  01146A  6F38               	movwf	56,b	;volatile
  6845                           
  6846                           ; BSR set to: 15
  6847                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6848  01146C  9865               	bcf	3941,4,c	;volatile
  6849                           
  6850                           ; BSR set to: 15
  6851                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6852  01146E  9C65               	bcf	3941,6,c	;volatile
  6853                           
  6854                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
  6855  011470  D00C               	goto	l8836
  6856  011472                     l8828:
  6857                           
  6858                           ;usb_device.c: 344: {
  6859                           ;usb_device.c: 345: (UIR &= 0xF7);
  6860  011472  9662               	bcf	3938,3,c	;volatile
  6861                           
  6862                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  6863  011474  0E00               	movlw	0
  6864  011476  0100               	movlb	0	; () banked
  6865  011478  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  6869  01147A  0E00               	movlw	0
  6870  01147C  0100               	movlb	0	; () banked
  6871  01147E  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  6875  011480  0E00               	movlw	0
  6876  011482  0100               	movlb	0	; () banked
  6877  011484  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
  6878  011486  0E00               	movlw	0
  6879  011488  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
  6880  01148A                     l8836:
  6881  01148A  B662               	btfsc	3938,3,c	;volatile
  6882  01148C  D7F2               	goto	l8828
  6883                           
  6884                           ;usb_device.c: 350: }
  6885                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  6886  01148E  0E01               	movlw	1
  6887  011490  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6888                           
  6889                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  6890  011492  0E01               	movlw	1
  6891  011494  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6892                           
  6893                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  6894  011496  0E00               	movlw	0
  6895  011498  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
  6896                           
  6897                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  6898  01149A  0E00               	movlw	0
  6899  01149C  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  6900                           
  6901                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  6902  01149E  0E00               	movlw	0
  6903  0114A0  0100               	movlb	0	; () banked
  6904  0114A2  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6905                           
  6906                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  6907  0114A4  0E00               	movlw	0
  6908  0114A6  0100               	movlb	0	; () banked
  6909  0114A8  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6910  0114AA                     l8840:
  6911                           
  6912                           ; BSR set to: 0
  6913  0114AA  0E02               	movlw	2
  6914  0114AC  0100               	movlb	0	; () banked
  6915  0114AE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6916  0114B0  D001               	goto	l8844
  6917  0114B2  D033               	goto	l8850
  6918  0114B4                     l8844:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;usb_device.c: 364: {
  6922                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  6923  0114B4  0100               	movlb	0	; () banked
  6924  0114B6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6925  0114B8  0D02               	mullw	2
  6926  0114BA  0ED8               	movlw	low _pBDTEntryIn
  6927  0114BC  24F3               	addwf	prodl,w,c
  6928  0114BE  6ED9               	movwf	fsr2l,c
  6929  0114C0  0E00               	movlw	high _pBDTEntryIn
  6930  0114C2  20F4               	addwfc	prodh,w,c
  6931  0114C4  6EDA               	movwf	fsr2h,c
  6932  0114C6  0E00               	movlw	0
  6933  0114C8  6EDE               	movwf	postinc2,c
  6934  0114CA  0E00               	movlw	0
  6935  0114CC  6EDD               	movwf	postdec2,c
  6936                           
  6937                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  6938  0114CE  0100               	movlb	0	; () banked
  6939  0114D0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6940  0114D2  0D02               	mullw	2
  6941  0114D4  0EDE               	movlw	low _pBDTEntryOut
  6942  0114D6  24F3               	addwf	prodl,w,c
  6943  0114D8  6ED9               	movwf	fsr2l,c
  6944  0114DA  0E00               	movlw	high _pBDTEntryOut
  6945  0114DC  20F4               	addwfc	prodh,w,c
  6946  0114DE  6EDA               	movwf	fsr2h,c
  6947  0114E0  0E00               	movlw	0
  6948  0114E2  6EDE               	movwf	postinc2,c
  6949  0114E4  0E00               	movlw	0
  6950  0114E6  6EDD               	movwf	postdec2,c
  6951                           
  6952                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  6953  0114E8  0100               	movlb	0	; () banked
  6954  0114EA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6955  0114EC  0D01               	mullw	1
  6956  0114EE  0EE4               	movlw	low _ep_data_in
  6957  0114F0  24F3               	addwf	prodl,w,c
  6958  0114F2  6ED9               	movwf	fsr2l,c
  6959  0114F4  0E00               	movlw	high _ep_data_in
  6960  0114F6  20F4               	addwfc	prodh,w,c
  6961  0114F8  6EDA               	movwf	fsr2h,c
  6962  0114FA  0E00               	movlw	0
  6963  0114FC  6EDF               	movwf	indf2,c
  6964                           
  6965                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  6966  0114FE  0100               	movlb	0	; () banked
  6967  011500  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6968  011502  0D01               	mullw	1
  6969  011504  0EE7               	movlw	low _ep_data_out
  6970  011506  24F3               	addwf	prodl,w,c
  6971  011508  6ED9               	movwf	fsr2l,c
  6972  01150A  0E00               	movlw	high _ep_data_out
  6973  01150C  20F4               	addwfc	prodh,w,c
  6974  01150E  6EDA               	movwf	fsr2h,c
  6975  011510  0E00               	movlw	0
  6976  011512  6EDF               	movwf	indf2,c
  6977                           
  6978                           ; BSR set to: 0
  6979  011514  0100               	movlb	0	; () banked
  6980  011516  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6981  011518  D7C8               	goto	l8840
  6982  01151A                     l8850:
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;usb_device.c: 369: }
  6986                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6987  01151A  0E08               	movlw	8
  6988  01151C  0100               	movlb	0	; () banked
  6989  01151E  6FD8               	movwf	_pBDTEntryIn& (0+255),b
  6990  011520  0E0D               	movlw	13
  6991  011522  0100               	movlb	0	; () banked
  6992  011524  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  6996  011526  0E16               	movlw	22
  6997  011528  010F               	movlb	15	; () banked
  6998  01152A  6F26               	movwf	38,b	;volatile
  6999                           
  7000                           ; BSR set to: 15
  7001                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7002  01152C  0E0D               	movlw	13
  7003  01152E  010D               	movlb	13	; () banked
  7004  011530  6F03               	movwf	3,b	;volatile
  7005  011532  0E30               	movlw	48
  7006  011534  6F02               	movwf	2,b	;volatile
  7007                           
  7008                           ; BSR set to: 13
  7009                           ;usb_device.c: 377: BDT[0].CNT = 8;
  7010  011536  0E08               	movlw	8
  7011  011538  010D               	movlb	13	; () banked
  7012  01153A  6F01               	movwf	1,b	;volatile
  7013                           
  7014                           ; BSR set to: 13
  7015                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  7016  01153C  0E04               	movlw	4
  7017  01153E  010D               	movlb	13	; () banked
  7018  011540  6F00               	movwf	0,b	;volatile
  7019                           
  7020                           ; BSR set to: 13
  7021                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  7022  011542  010D               	movlb	13	; () banked
  7023  011544  8F00               	bsf	0,7,b	;volatile
  7024                           
  7025                           ; BSR set to: 13
  7026                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  7027  011546  0E00               	movlw	0
  7028  011548  6E54               	movwf	_USBActiveConfiguration,c	;volatile
  7029                           
  7030                           ; BSR set to: 13
  7031                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
  7032  01154A  0E00               	movlw	0
  7033  01154C  6E40               	movwf	_USBDeviceState,c	;volatile
  7034                           
  7035                           ; BSR set to: 13
  7036  01154E  0012               	return		;funcret
  7037  011550                     __end_of_USBDeviceInit:
  7038                           	opt stack 0
  7039                           tblptru	equ	0xFF8
  7040                           tblptrh	equ	0xFF7
  7041                           tblptrl	equ	0xFF6
  7042                           tablat	equ	0xFF5
  7043                           prodh	equ	0xFF4
  7044                           prodl	equ	0xFF3
  7045                           intcon	equ	0xFF2
  7046                           intcon2	equ	0xFF1
  7047                           indf0	equ	0xFEF
  7048                           postinc0	equ	0xFEE
  7049                           fsr0h	equ	0xFEA
  7050                           fsr0l	equ	0xFE9
  7051                           wreg	equ	0xFE8
  7052                           postinc1	equ	0xFE6
  7053                           postdec1	equ	0xFE5
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function _memset *****************
  7064 ;; Defined at:
  7065 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  p1              2    0[BANK0 ] PTR void 
  7068 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7069 ;;  c               2    2[BANK0 ] int 
  7070 ;;  n               2    4[BANK0 ] unsigned int 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7073 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  2    0[BANK0 ] PTR void 
  7076 ;; Registers used:
  7077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7083 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;Total ram usage:        8 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:   12
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_USBDeviceInit
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text25
  7098  013DE6                     __ptext25:
  7099                           	opt stack 0
  7100  013DE6                     _memset:
  7101                           	opt stack 15
  7102                           
  7103                           ; BSR set to: 13
  7104                           ;incstack = 0
  7105  013DE6  C060  F066         	movff	memset@p1,memset@p
  7106  013DEA  C061  F067         	movff	memset@p1+1,memset@p+1
  7107  013DEE  D009               	goto	l8696
  7108  013DF0                     l8692:
  7109  013DF0  C066  FFD9         	movff	memset@p,fsr2l
  7110  013DF4  C067  FFDA         	movff	memset@p+1,fsr2h
  7111  013DF8  C062  FFDF         	movff	memset@c,indf2
  7112  013DFC  0100               	movlb	0	; () banked
  7113  013DFE  4B66               	infsnz	memset@p& (0+255),f,b
  7114  013E00  2B67               	incf	(memset@p+1)& (0+255),f,b
  7115  013E02                     l8696:
  7116  013E02  0100               	movlb	0	; () banked
  7117  013E04  0764               	decf	memset@n& (0+255),f,b
  7118  013E06  A0D8               	btfss	status,0,c
  7119  013E08  0765               	decf	(memset@n+1)& (0+255),f,b
  7120  013E0A  0100               	movlb	0	; () banked
  7121  013E0C  2964               	incf	memset@n& (0+255),w,b
  7122  013E0E  E1F0               	bnz	l8692
  7123  013E10  0100               	movlb	0	; () banked
  7124  013E12  2965               	incf	(memset@n+1)& (0+255),w,b
  7125  013E14  B4D8               	btfsc	status,2,c
  7126  013E16  0012               	return	
  7127  013E18  D7EB               	goto	l8692
  7128  013E1A                     __end_of_memset:
  7129                           	opt stack 0
  7130                           tblptru	equ	0xFF8
  7131                           tblptrh	equ	0xFF7
  7132                           tblptrl	equ	0xFF6
  7133                           tablat	equ	0xFF5
  7134                           prodh	equ	0xFF4
  7135                           prodl	equ	0xFF3
  7136                           intcon	equ	0xFF2
  7137                           intcon2	equ	0xFF1
  7138                           indf0	equ	0xFEF
  7139                           postinc0	equ	0xFEE
  7140                           fsr0h	equ	0xFEA
  7141                           fsr0l	equ	0xFE9
  7142                           wreg	equ	0xFE8
  7143                           postinc1	equ	0xFE6
  7144                           postdec1	equ	0xFE5
  7145                           fsr1h	equ	0xFE2
  7146                           fsr1l	equ	0xFE1
  7147                           indf2	equ	0xFDF
  7148                           postinc2	equ	0xFDE
  7149                           postdec2	equ	0xFDD
  7150                           fsr2h	equ	0xFDA
  7151                           fsr2l	equ	0xFD9
  7152                           status	equ	0xFD8
  7153                           
  7154 ;; *************** function _USBDeviceAttach *****************
  7155 ;; Defined at:
  7156 ;;		line 1353 in file "../My_library/usb/usb_device.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;		None               void
  7163 ;; Registers used:
  7164 ;;		wreg, status,2
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:   12
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_USB_CDC_init
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text26
  7185  013D40                     __ptext26:
  7186                           	opt stack 0
  7187  013D40                     _USBDeviceAttach:
  7188                           	opt stack 16
  7189                           
  7190                           ;usb_device.c: 1357: {
  7191                           ;usb_device.c: 1358: if(1 == 1)
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;incstack = 0
  7195  013D40  5040               	movf	_USBDeviceState,w,c	;volatile
  7196  013D42  A4D8               	btfss	status,2,c
  7197  013D44  0012               	return	
  7198                           
  7199                           ;usb_device.c: 1359: {
  7200                           ;usb_device.c: 1361: UCON = 0;
  7201  013D46  0E00               	movlw	0
  7202  013D48  6E65               	movwf	3941,c	;volatile
  7203                           
  7204                           ;usb_device.c: 1364: UIE = 0;
  7205  013D4A  0E00               	movlw	0
  7206  013D4C  010F               	movlb	15	; () banked
  7207  013D4E  6F36               	movwf	54,b	;volatile
  7208                           
  7209                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7210  013D50  0E16               	movlw	22
  7211  013D52  010F               	movlb	15	; () banked
  7212  013D54  6F39               	movwf	57,b	;volatile
  7213  013D56  0E9F               	movlw	159
  7214  013D58  010F               	movlb	15	; () banked
  7215  013D5A  6F37               	movwf	55,b	;volatile
  7216  013D5C  0E7B               	movlw	123
  7217  013D5E  010F               	movlb	15	; () banked
  7218  013D60  6F36               	movwf	54,b	;volatile
  7219                           
  7220                           ; BSR set to: 15
  7221                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7222  013D62  8ED0               	bsf	4048,7,c	;volatile
  7223                           
  7224                           ; BSR set to: 15
  7225  013D64  88A2               	bsf	4002,4,c	;volatile
  7226                           
  7227                           ; BSR set to: 15
  7228  013D66  88A0               	bsf	4000,4,c	;volatile
  7229                           
  7230                           ; BSR set to: 15
  7231  013D68  8EF2               	bsf	intcon,7,c	;volatile
  7232                           
  7233                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7234  013D6A  D001               	goto	l207
  7235  013D6C                     l208:
  7236  013D6C  8665               	bsf	3941,3,c	;volatile
  7237  013D6E                     l207:
  7238  013D6E  A665               	btfss	3941,3,c	;volatile
  7239  013D70  D7FD               	goto	l208
  7240                           
  7241                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
  7242  013D72  0E01               	movlw	1
  7243  013D74  6E40               	movwf	_USBDeviceState,c	;volatile
  7244  013D76  0012               	return	
  7245  013D78                     __end_of_USBDeviceAttach:
  7246                           	opt stack 0
  7247                           tblptru	equ	0xFF8
  7248                           tblptrh	equ	0xFF7
  7249                           tblptrl	equ	0xFF6
  7250                           tablat	equ	0xFF5
  7251                           prodh	equ	0xFF4
  7252                           prodl	equ	0xFF3
  7253                           intcon	equ	0xFF2
  7254                           intcon2	equ	0xFF1
  7255                           indf0	equ	0xFEF
  7256                           postinc0	equ	0xFEE
  7257                           fsr0h	equ	0xFEA
  7258                           fsr0l	equ	0xFE9
  7259                           wreg	equ	0xFE8
  7260                           postinc1	equ	0xFE6
  7261                           postdec1	equ	0xFE5
  7262                           fsr1h	equ	0xFE2
  7263                           fsr1l	equ	0xFE1
  7264                           indf2	equ	0xFDF
  7265                           postinc2	equ	0xFDE
  7266                           postdec2	equ	0xFDD
  7267                           fsr2h	equ	0xFDA
  7268                           fsr2l	equ	0xFD9
  7269                           status	equ	0xFD8
  7270                           
  7271 ;; *************** function _UART_init *****************
  7272 ;; Defined at:
  7273 ;;		line 10 in file "../My_library/My_UART.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;		None               void
  7280 ;; Registers used:
  7281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:   14
  7294 ;; This function calls:
  7295 ;;		_UART_buffer_init
  7296 ;; This function is called by:
  7297 ;;		_main_init
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text27
  7302  01401E                     __ptext27:
  7303                           	opt stack 0
  7304  01401E                     _UART_init:
  7305                           	opt stack 15
  7306                           
  7307                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  7308                           
  7309                           ;incstack = 0
  7310  01401E  9CAD               	bcf	4013,6,c	;volatile
  7311                           
  7312                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  7313  014020  8AAD               	bsf	4013,5,c	;volatile
  7314                           
  7315                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  7316  014022  98AD               	bcf	4013,4,c	;volatile
  7317                           
  7318                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  7319  014024  94AD               	bcf	4013,2,c	;volatile
  7320                           
  7321                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  7322  014026  8EAC               	bsf	4012,7,c	;volatile
  7323                           
  7324                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  7325  014028  9CAC               	bcf	4012,6,c	;volatile
  7326                           
  7327                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  7328  01402A  88AC               	bsf	4012,4,c	;volatile
  7329                           
  7330                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  7331  01402C  867E               	bsf	3966,3,c	;volatile
  7332                           
  7333                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  7334  01402E  0E19               	movlw	25
  7335  014030  6EB0               	movwf	4016,c	;volatile
  7336                           
  7337                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  7338  014032  0E00               	movlw	0
  7339  014034  6E7F               	movwf	3967,c	;volatile
  7340                           
  7341                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  7342  014036  9A9F               	bcf	3999,5,c	;volatile
  7343                           
  7344                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  7345  014038  989F               	bcf	3999,4,c	;volatile
  7346                           
  7347                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  7348  01403A  8A9D               	bsf	3997,5,c	;volatile
  7349                           
  7350                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  7351  01403C  8CF2               	bsf	intcon,6,c	;volatile
  7352                           
  7353                           ;My_UART.c: 27: UART_buffer_init();
  7354  01403E  ECB5  F09D         	call	_UART_buffer_init	;wreg free
  7355  014042  0012               	return		;funcret
  7356  014044                     __end_of_UART_init:
  7357                           	opt stack 0
  7358                           tblptru	equ	0xFF8
  7359                           tblptrh	equ	0xFF7
  7360                           tblptrl	equ	0xFF6
  7361                           tablat	equ	0xFF5
  7362                           prodh	equ	0xFF4
  7363                           prodl	equ	0xFF3
  7364                           intcon	equ	0xFF2
  7365                           intcon2	equ	0xFF1
  7366                           indf0	equ	0xFEF
  7367                           postinc0	equ	0xFEE
  7368                           fsr0h	equ	0xFEA
  7369                           fsr0l	equ	0xFE9
  7370                           wreg	equ	0xFE8
  7371                           postinc1	equ	0xFE6
  7372                           postdec1	equ	0xFE5
  7373                           fsr1h	equ	0xFE2
  7374                           fsr1l	equ	0xFE1
  7375                           indf2	equ	0xFDF
  7376                           postinc2	equ	0xFDE
  7377                           postdec2	equ	0xFDD
  7378                           fsr2h	equ	0xFDA
  7379                           fsr2l	equ	0xFD9
  7380                           status	equ	0xFD8
  7381                           
  7382 ;; *************** function _UART_buffer_init *****************
  7383 ;; Defined at:
  7384 ;;		line 30 in file "../My_library/My_UART.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;		None               void
  7391 ;; Registers used:
  7392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:   13
  7405 ;; This function calls:
  7406 ;;		_ringbuf_init
  7407 ;; This function is called by:
  7408 ;;		_UART_init
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text28
  7413  013B6A                     __ptext28:
  7414                           	opt stack 0
  7415  013B6A                     _UART_buffer_init:
  7416                           	opt stack 15
  7417                           
  7418                           ;My_UART.c: 31: static uint8_t uarttx[500];
  7419                           ;My_UART.c: 32: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  7420                           
  7421                           ;incstack = 0
  7422  013B6A  0E64               	movlw	low _uart_tx
  7423  013B6C  0100               	movlb	0	; () banked
  7424  013B6E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7425  013B70  0E01               	movlw	high _uart_tx
  7426  013B72  0100               	movlb	0	; () banked
  7427  013B74  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7428  013B76  0EE8               	movlw	low UART_buffer_init@uarttx
  7429  013B78  0100               	movlb	0	; () banked
  7430  013B7A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7431  013B7C  0E08               	movlw	high UART_buffer_init@uarttx
  7432  013B7E  0100               	movlb	0	; () banked
  7433  013B80  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7434  013B82  0E01               	movlw	1
  7435  013B84  0100               	movlb	0	; () banked
  7436  013B86  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7437  013B88  0EF4               	movlw	244
  7438  013B8A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7439  013B8C  EC3C  F09D         	call	_ringbuf_init	;wreg free
  7440                           
  7441                           ;My_UART.c: 33: static uint8_t uartrx[100];
  7442                           ;My_UART.c: 34: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  7443  013B90  0E5C               	movlw	low _uart_rx
  7444  013B92  0100               	movlb	0	; () banked
  7445  013B94  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7446  013B96  0E01               	movlw	high _uart_rx
  7447  013B98  0100               	movlb	0	; () banked
  7448  013B9A  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7449  013B9C  0E00               	movlw	low UART_buffer_init@uartrx
  7450  013B9E  0100               	movlb	0	; () banked
  7451  013BA0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7452  013BA2  0E03               	movlw	high UART_buffer_init@uartrx
  7453  013BA4  0100               	movlb	0	; () banked
  7454  013BA6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7455  013BA8  0E00               	movlw	0
  7456  013BAA  0100               	movlb	0	; () banked
  7457  013BAC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7458  013BAE  0E64               	movlw	100
  7459  013BB0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7460  013BB2  EC3C  F09D         	call	_ringbuf_init	;wreg free
  7461  013BB6  0012               	return		;funcret
  7462  013BB8                     __end_of_UART_buffer_init:
  7463                           	opt stack 0
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           intcon	equ	0xFF2
  7471                           intcon2	equ	0xFF1
  7472                           indf0	equ	0xFEF
  7473                           postinc0	equ	0xFEE
  7474                           fsr0h	equ	0xFEA
  7475                           fsr0l	equ	0xFE9
  7476                           wreg	equ	0xFE8
  7477                           postinc1	equ	0xFE6
  7478                           postdec1	equ	0xFE5
  7479                           fsr1h	equ	0xFE2
  7480                           fsr1l	equ	0xFE1
  7481                           indf2	equ	0xFDF
  7482                           postinc2	equ	0xFDE
  7483                           postdec2	equ	0xFDD
  7484                           fsr2h	equ	0xFDA
  7485                           fsr2l	equ	0xFD9
  7486                           status	equ	0xFD8
  7487                           
  7488 ;; *************** function _ringbuf_init *****************
  7489 ;; Defined at:
  7490 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7493 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
  7494 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7495 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7496 ;;		 -> USB_CDC_buffer_init@rxbuf(100), USB_CDC_buffer_init@txbuf(800), UART_buffer_init@uartrx(100), UART_buffer_init@u
      +arttx(500), 
  7497 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  7498 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;		None               void
  7503 ;; Registers used:
  7504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7510 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7513 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7514 ;;Total ram usage:        6 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:   12
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_terminal_task
  7521 ;;		_UART_buffer_init
  7522 ;;		_USB_CDC_buffer_init
  7523 ;;		_ST7032_init
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text29
  7528  013A78                     __ptext29:
  7529                           	opt stack 0
  7530  013A78                     _ringbuf_init:
  7531                           	opt stack 17
  7532                           
  7533                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7534                           
  7535                           ;incstack = 0
  7536  013A78  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7537  013A7C  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7538  013A80  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7539  013A84  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7540                           
  7541                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7542  013A88  0100               	movlb	0	; () banked
  7543  013A8A  EE20 F002          	lfsr	2,2
  7544  013A8E  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7545  013A90  26D9               	addwf	fsr2l,f,c
  7546  013A92  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7547  013A94  22DA               	addwfc	fsr2h,f,c
  7548  013A96  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7549  013A9A  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;My_ringbuf.c: 8: rb->head = 0;
  7553  013A9E  0100               	movlb	0	; () banked
  7554  013AA0  EE20 F004          	lfsr	2,4
  7555  013AA4  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7556  013AA6  26D9               	addwf	fsr2l,f,c
  7557  013AA8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7558  013AAA  22DA               	addwfc	fsr2h,f,c
  7559  013AAC  0E00               	movlw	0
  7560  013AAE  6EDE               	movwf	postinc2,c
  7561  013AB0  0E00               	movlw	0
  7562  013AB2  6EDD               	movwf	postdec2,c
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;My_ringbuf.c: 9: rb->tail = 0;
  7566  013AB4  0100               	movlb	0	; () banked
  7567  013AB6  EE20 F006          	lfsr	2,6
  7568  013ABA  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7569  013ABC  26D9               	addwf	fsr2l,f,c
  7570  013ABE  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7571  013AC0  22DA               	addwfc	fsr2h,f,c
  7572  013AC2  0E00               	movlw	0
  7573  013AC4  6EDE               	movwf	postinc2,c
  7574  013AC6  0E00               	movlw	0
  7575  013AC8  6EDD               	movwf	postdec2,c
  7576                           
  7577                           ; BSR set to: 0
  7578  013ACA  0012               	return		;funcret
  7579  013ACC                     __end_of_ringbuf_init:
  7580                           	opt stack 0
  7581                           tblptru	equ	0xFF8
  7582                           tblptrh	equ	0xFF7
  7583                           tblptrl	equ	0xFF6
  7584                           tablat	equ	0xFF5
  7585                           prodh	equ	0xFF4
  7586                           prodl	equ	0xFF3
  7587                           intcon	equ	0xFF2
  7588                           intcon2	equ	0xFF1
  7589                           indf0	equ	0xFEF
  7590                           postinc0	equ	0xFEE
  7591                           fsr0h	equ	0xFEA
  7592                           fsr0l	equ	0xFE9
  7593                           wreg	equ	0xFE8
  7594                           postinc1	equ	0xFE6
  7595                           postdec1	equ	0xFE5
  7596                           fsr1h	equ	0xFE2
  7597                           fsr1l	equ	0xFE1
  7598                           indf2	equ	0xFDF
  7599                           postinc2	equ	0xFDE
  7600                           postdec2	equ	0xFDD
  7601                           fsr2h	equ	0xFDA
  7602                           fsr2l	equ	0xFD9
  7603                           status	equ	0xFD8
  7604                           
  7605 ;; *************** function _RTCC_init *****************
  7606 ;; Defined at:
  7607 ;;		line 17 in file "../My_library/My_RTCC.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;		None               void
  7614 ;; Registers used:
  7615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:   16
  7628 ;; This function calls:
  7629 ;;		_RTCC_from_RTCC
  7630 ;;		_RTCC_from_epoch
  7631 ;; This function is called by:
  7632 ;;		_main_init
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text30
  7637  013768                     __ptext30:
  7638                           	opt stack 0
  7639  013768                     _RTCC_init:
  7640                           	opt stack 13
  7641                           
  7642                           ;My_RTCC.c: 18: RTCCFGbits.RTCWREN = 1;
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;incstack = 0
  7646  013768  010F               	movlb	15	; () banked
  7647  01376A  8B3F               	bsf	63,5,b	;volatile
  7648                           
  7649                           ;My_RTCC.c: 19: if (RTCCFGbits.RTCWREN != 1) {
  7650  01376C  010F               	movlb	15	; () banked
  7651  01376E  BB3F               	btfsc	63,5,b	;volatile
  7652  013770  D006               	goto	l9168
  7653                           
  7654                           ; BSR set to: 15
  7655                           ;My_RTCC.c: 20: EECON2 = 0x55;
  7656  013772  0E55               	movlw	85
  7657  013774  6EA7               	movwf	4007,c	;volatile
  7658                           
  7659                           ;My_RTCC.c: 21: EECON2 = 0xAA;
  7660  013776  0EAA               	movlw	170
  7661  013778  6EA7               	movwf	4007,c	;volatile
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;My_RTCC.c: 22: RTCCFGbits.RTCWREN = 1;
  7665  01377A  010F               	movlb	15	; () banked
  7666  01377C  8B3F               	bsf	63,5,b	;volatile
  7667  01377E                     l9168:
  7668                           
  7669                           ; BSR set to: 15
  7670                           ;My_RTCC.c: 23: }
  7671                           ;My_RTCC.c: 24: RTCCFGbits.RTCEN = 1;
  7672  01377E  010F               	movlb	15	; () banked
  7673  013780  8F3F               	bsf	63,7,b	;volatile
  7674                           
  7675                           ; BSR set to: 15
  7676                           ;My_RTCC.c: 25: RTCCFGbits.RTCOE = 0;
  7677  013782  010F               	movlb	15	; () banked
  7678  013784  953F               	bcf	63,2,b	;volatile
  7679                           
  7680                           ; BSR set to: 15
  7681                           ;My_RTCC.c: 26: PADCFG1bits.RTSECSEL0 = 1;
  7682  013786  010F               	movlb	15	; () banked
  7683  013788  833C               	bsf	60,1,b	;volatile
  7684                           
  7685                           ; BSR set to: 15
  7686                           ;My_RTCC.c: 27: PADCFG1bits.RTSECSEL1 = 1;
  7687  01378A  010F               	movlb	15	; () banked
  7688  01378C  853C               	bsf	60,2,b	;volatile
  7689                           
  7690                           ;My_RTCC.c: 28: RTCCAL = 0x00;
  7691  01378E  0E00               	movlw	0
  7692  013790  010F               	movlb	15	; () banked
  7693  013792  6F3E               	movwf	62,b	;volatile
  7694                           
  7695                           ; BSR set to: 15
  7696                           ;My_RTCC.c: 29: T1CONbits.T1OSCEN = 1;
  7697  013794  86CD               	bsf	4045,3,c	;volatile
  7698                           
  7699                           ; BSR set to: 15
  7700                           ;My_RTCC.c: 31: RTCC_from_RTCC(&now);
  7701  013796  0E46               	movlw	low _now
  7702  013798  0100               	movlb	0	; () banked
  7703  01379A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7704  01379C  0E01               	movlw	high _now
  7705  01379E  0100               	movlb	0	; () banked
  7706  0137A0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7707  0137A2  EC9A  F0A0         	call	_RTCC_from_RTCC	;wreg free
  7708                           
  7709                           ;My_RTCC.c: 32: if (now.DD == 0) {
  7710  0137A6  0101               	movlb	1	; () banked
  7711  0137A8  514E               	movf	(_now+8)& (0+255),w,b
  7712  0137AA  A4D8               	btfss	status,2,c
  7713  0137AC  0012               	return	
  7714                           
  7715                           ; BSR set to: 1
  7716                           ;My_RTCC.c: 33: now.epoch = 0;
  7717  0137AE  0E00               	movlw	0
  7718  0137B0  0101               	movlb	1	; () banked
  7719  0137B2  6F46               	movwf	_now& (0+255),b
  7720  0137B4  0E00               	movlw	0
  7721  0137B6  6F47               	movwf	(_now+1)& (0+255),b
  7722  0137B8  0E00               	movlw	0
  7723  0137BA  6F48               	movwf	(_now+2)& (0+255),b
  7724  0137BC  0E00               	movlw	0
  7725  0137BE  6F49               	movwf	(_now+3)& (0+255),b
  7726                           
  7727                           ; BSR set to: 1
  7728                           ;My_RTCC.c: 34: RTCC_from_epoch(&now);
  7729  0137C0  0E46               	movlw	low _now
  7730  0137C2  0100               	movlb	0	; () banked
  7731  0137C4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7732  0137C6  0E01               	movlw	high _now
  7733  0137C8  0100               	movlb	0	; () banked
  7734  0137CA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7735  0137CC  EC80  F0A0         	call	_RTCC_from_epoch	;wreg free
  7736  0137D0  0012               	return	
  7737  0137D2                     __end_of_RTCC_init:
  7738                           	opt stack 0
  7739                           tblptru	equ	0xFF8
  7740                           tblptrh	equ	0xFF7
  7741                           tblptrl	equ	0xFF6
  7742                           tablat	equ	0xFF5
  7743                           prodh	equ	0xFF4
  7744                           prodl	equ	0xFF3
  7745                           intcon	equ	0xFF2
  7746                           intcon2	equ	0xFF1
  7747                           indf0	equ	0xFEF
  7748                           postinc0	equ	0xFEE
  7749                           fsr0h	equ	0xFEA
  7750                           fsr0l	equ	0xFE9
  7751                           wreg	equ	0xFE8
  7752                           postinc1	equ	0xFE6
  7753                           postdec1	equ	0xFE5
  7754                           fsr1h	equ	0xFE2
  7755                           fsr1l	equ	0xFE1
  7756                           indf2	equ	0xFDF
  7757                           postinc2	equ	0xFDE
  7758                           postdec2	equ	0xFDD
  7759                           fsr2h	equ	0xFDA
  7760                           fsr2l	equ	0xFD9
  7761                           status	equ	0xFD8
  7762                           
  7763 ;; *************** function _RTCC_from_epoch *****************
  7764 ;; Defined at:
  7765 ;;		line 63 in file "../My_library/My_RTCC.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  tm              2   47[BANK0 ] PTR struct .
  7768 ;;		 -> now(14), 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;		None
  7771 ;; Return value:  Size  Location     Type
  7772 ;;		None               void
  7773 ;; Registers used:
  7774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:        2 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:   15
  7787 ;; This function calls:
  7788 ;;		_caltime_to_RTCC
  7789 ;;		_epoch_to_caltime
  7790 ;; This function is called by:
  7791 ;;		_RTCC_init
  7792 ;;		_RTCC_adjust_time_inc
  7793 ;;		_RTCC_adjust_time_dec
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text31
  7798  014100                     __ptext31:
  7799                           	opt stack 0
  7800  014100                     _RTCC_from_epoch:
  7801                           	opt stack 13
  7802                           
  7803                           ;My_RTCC.c: 64: epoch_to_caltime(tm);
  7804                           
  7805                           ;incstack = 0
  7806  014100  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7807  014104  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7808  014108  EC41  F088         	call	_epoch_to_caltime	;wreg free
  7809                           
  7810                           ;My_RTCC.c: 65: caltime_to_RTCC(tm);
  7811  01410C  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7812  014110  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7813  014114  ECAB  F091         	call	_caltime_to_RTCC	;wreg free
  7814  014118  0012               	return		;funcret
  7815  01411A                     __end_of_RTCC_from_epoch:
  7816                           	opt stack 0
  7817                           tblptru	equ	0xFF8
  7818                           tblptrh	equ	0xFF7
  7819                           tblptrl	equ	0xFF6
  7820                           tablat	equ	0xFF5
  7821                           prodh	equ	0xFF4
  7822                           prodl	equ	0xFF3
  7823                           intcon	equ	0xFF2
  7824                           intcon2	equ	0xFF1
  7825                           indf0	equ	0xFEF
  7826                           postinc0	equ	0xFEE
  7827                           fsr0h	equ	0xFEA
  7828                           fsr0l	equ	0xFE9
  7829                           wreg	equ	0xFE8
  7830                           postinc1	equ	0xFE6
  7831                           postdec1	equ	0xFE5
  7832                           fsr1h	equ	0xFE2
  7833                           fsr1l	equ	0xFE1
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _epoch_to_caltime *****************
  7842 ;; Defined at:
  7843 ;;		line 289 in file "../My_library/My_RTCC.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  tm              2   33[BANK0 ] PTR struct .
  7846 ;;		 -> now(14), 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  num             4   43[BANK0 ] unsigned long 
  7849 ;;  day             2   39[BANK0 ] unsigned int 
  7850 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7851 ;;  month           1   42[BANK0 ] unsigned char 
  7852 ;;  year            1   41[BANK0 ] unsigned char 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;		None               void
  7855 ;; Registers used:
  7856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7863 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7865 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;Total ram usage:       14 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:   14
  7869 ;; This function calls:
  7870 ;;		_get_quot_rem
  7871 ;;		_month_length
  7872 ;; This function is called by:
  7873 ;;		_RTCC_from_caltime
  7874 ;;		_RTCC_from_epoch
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text32
  7879  011082                     __ptext32:
  7880                           	opt stack 0
  7881  011082                     _epoch_to_caltime:
  7882                           	opt stack 11
  7883                           
  7884                           ;My_RTCC.c: 292: static uint16_t day_cache = 0;
  7885                           ;My_RTCC.c: 293: static uint8_t month_cache = 1;
  7886                           ;My_RTCC.c: 294: static uint8_t year_cache = 0;
  7887                           ;My_RTCC.c: 295: uint16_t day_since_epoch;
  7888                           ;My_RTCC.c: 296: uint16_t day;
  7889                           ;My_RTCC.c: 297: uint8_t year = 0;
  7890                           
  7891                           ;incstack = 0
  7892  011082  0E00               	movlw	0
  7893  011084  0100               	movlb	0	; () banked
  7894  011086  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7895                           
  7896                           ;My_RTCC.c: 298: uint8_t month = 1;
  7897  011088  0E01               	movlw	1
  7898  01108A  0100               	movlb	0	; () banked
  7899  01108C  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;My_RTCC.c: 299: epoch_t num;
  7903                           ;My_RTCC.c: 301: num = tm->epoch;
  7904  01108E  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7905  011092  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7906  011096  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  7907  01109A  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  7908  01109E  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  7909  0110A2  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;My_RTCC.c: 302: tm->ss = get_quot_rem(&num, 60);
  7913  0110A6  0E8B               	movlw	low epoch_to_caltime@num
  7914  0110A8  0100               	movlb	0	; () banked
  7915  0110AA  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7916  0110AC  0E00               	movlw	high epoch_to_caltime@num
  7917  0110AE  0100               	movlb	0	; () banked
  7918  0110B0  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7919  0110B2  0E3C               	movlw	60
  7920  0110B4  0100               	movlb	0	; () banked
  7921  0110B6  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7922  0110B8  EC81  F092         	call	_get_quot_rem	;wreg free
  7923  0110BC  0100               	movlb	0	; () banked
  7924  0110BE  EE20 F004          	lfsr	2,4
  7925  0110C2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7926  0110C4  26D9               	addwf	fsr2l,f,c
  7927  0110C6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7928  0110C8  22DA               	addwfc	fsr2h,f,c
  7929  0110CA  0100               	movlb	0	; () banked
  7930  0110CC  C079  FFDF         	movff	?_get_quot_rem,indf2
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;My_RTCC.c: 303: tm->mm = get_quot_rem(&num, 60);
  7934  0110D0  0E8B               	movlw	low epoch_to_caltime@num
  7935  0110D2  0100               	movlb	0	; () banked
  7936  0110D4  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7937  0110D6  0E00               	movlw	high epoch_to_caltime@num
  7938  0110D8  0100               	movlb	0	; () banked
  7939  0110DA  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7940  0110DC  0E3C               	movlw	60
  7941  0110DE  0100               	movlb	0	; () banked
  7942  0110E0  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7943  0110E2  EC81  F092         	call	_get_quot_rem	;wreg free
  7944  0110E6  0100               	movlb	0	; () banked
  7945  0110E8  EE20 F005          	lfsr	2,5
  7946  0110EC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7947  0110EE  26D9               	addwf	fsr2l,f,c
  7948  0110F0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7949  0110F2  22DA               	addwfc	fsr2h,f,c
  7950  0110F4  0100               	movlb	0	; () banked
  7951  0110F6  C079  FFDF         	movff	?_get_quot_rem,indf2
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;My_RTCC.c: 304: tm->hh = get_quot_rem(&num, 24);
  7955  0110FA  0E8B               	movlw	low epoch_to_caltime@num
  7956  0110FC  0100               	movlb	0	; () banked
  7957  0110FE  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7958  011100  0E00               	movlw	high epoch_to_caltime@num
  7959  011102  0100               	movlb	0	; () banked
  7960  011104  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7961  011106  0E18               	movlw	24
  7962  011108  0100               	movlb	0	; () banked
  7963  01110A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7964  01110C  EC81  F092         	call	_get_quot_rem	;wreg free
  7965  011110  0100               	movlb	0	; () banked
  7966  011112  EE20 F006          	lfsr	2,6
  7967  011116  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7968  011118  26D9               	addwf	fsr2l,f,c
  7969  01111A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7970  01111C  22DA               	addwfc	fsr2h,f,c
  7971  01111E  0100               	movlb	0	; () banked
  7972  011120  C079  FFDF         	movff	?_get_quot_rem,indf2
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;My_RTCC.c: 305: day = num;
  7976  011124  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7977  011128  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;My_RTCC.c: 306: day_since_epoch = day;
  7981  01112C  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7982  011130  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;My_RTCC.c: 308: num += 6;
  7986  011134  0E06               	movlw	6
  7987  011136  0100               	movlb	0	; () banked
  7988  011138  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  7989  01113A  0E00               	movlw	0
  7990  01113C  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7991  01113E  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7992  011140  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;My_RTCC.c: 309: tm->EE = get_quot_rem(&num, 7);
  7996  011142  0E8B               	movlw	low epoch_to_caltime@num
  7997  011144  0100               	movlb	0	; () banked
  7998  011146  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7999  011148  0E00               	movlw	high epoch_to_caltime@num
  8000  01114A  0100               	movlb	0	; () banked
  8001  01114C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8002  01114E  0E07               	movlw	7
  8003  011150  0100               	movlb	0	; () banked
  8004  011152  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8005  011154  EC81  F092         	call	_get_quot_rem	;wreg free
  8006  011158  0100               	movlb	0	; () banked
  8007  01115A  EE20 F007          	lfsr	2,7
  8008  01115E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8009  011160  26D9               	addwf	fsr2l,f,c
  8010  011162  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8011  011164  22DA               	addwfc	fsr2h,f,c
  8012  011166  0100               	movlb	0	; () banked
  8013  011168  C079  FFDF         	movff	?_get_quot_rem,indf2
  8014                           
  8015                           ;My_RTCC.c: 318: while (day >= month_length(year, month)) {
  8016  01116C  D03F               	goto	l8464
  8017  01116E                     l971:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;My_RTCC.c: 319: LATB2 = 1;
  8021  01116E  848A               	bsf	3978,2,c	;volatile
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;My_RTCC.c: 320: day = day - month_length(year, month);
  8025  011170  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8026  011174  0100               	movlb	0	; () banked
  8027  011176  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8028  011178  EC64  F090         	call	_month_length
  8029  01117C  0100               	movlb	0	; () banked
  8030  01117E  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8031  011180  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8032  011182  0100               	movlb	0	; () banked
  8033  011184  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8034  011186  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8035  011188  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8036  01118A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8037  01118C  0100               	movlb	0	; () banked
  8038  01118E  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  8039  011190  0100               	movlb	0	; () banked
  8040  011192  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8041  011194  0100               	movlb	0	; () banked
  8042  011196  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  8043  011198  0100               	movlb	0	; () banked
  8044  01119A  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8045  01119C  0100               	movlb	0	; () banked
  8046  01119E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8047  0111A0  0100               	movlb	0	; () banked
  8048  0111A2  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;My_RTCC.c: 321: if (month == 12) {
  8052  0111A4  0E0C               	movlw	12
  8053  0111A6  0100               	movlb	0	; () banked
  8054  0111A8  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8055  0111AA  A4D8               	btfss	status,2,c
  8056  0111AC  D019               	goto	l8458
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;My_RTCC.c: 322: month = 1;
  8060  0111AE  0E01               	movlw	1
  8061  0111B0  0100               	movlb	0	; () banked
  8062  0111B2  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;My_RTCC.c: 323: year++;
  8066  0111B4  0100               	movlb	0	; () banked
  8067  0111B6  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;My_RTCC.c: 325: if (year >= 100) {
  8071  0111B8  0E63               	movlw	99
  8072  0111BA  0100               	movlb	0	; () banked
  8073  0111BC  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8074  0111BE  D012               	goto	l8460
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;My_RTCC.c: 326: tm->epoch -= 3155760000;
  8078  0111C0  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8079  0111C4  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8080  0111C8  0E80               	movlw	128
  8081  0111CA  5EDE               	subwf	postinc2,f,c
  8082  0111CC  0E13               	movlw	19
  8083  0111CE  5ADE               	subwfb	postinc2,f,c
  8084  0111D0  0E19               	movlw	25
  8085  0111D2  5ADE               	subwfb	postinc2,f,c
  8086  0111D4  0EBC               	movlw	188
  8087  0111D6  5ADE               	subwfb	postinc2,f,c
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;My_RTCC.c: 327: year = 0;
  8091  0111D8  0E00               	movlw	0
  8092  0111DA  0100               	movlb	0	; () banked
  8093  0111DC  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;My_RTCC.c: 328: }
  8097                           ;My_RTCC.c: 329: } else {
  8098  0111DE  D002               	goto	l8460
  8099  0111E0                     l8458:
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;My_RTCC.c: 330: month++;
  8103  0111E0  0100               	movlb	0	; () banked
  8104  0111E2  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  8105  0111E4                     l8460:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;My_RTCC.c: 331: }
  8109                           ;My_RTCC.c: 332: month_cache = month;
  8110  0111E4  C08A  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;My_RTCC.c: 333: year_cache = year;
  8114  0111E8  C089  F0FA         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8115  0111EC                     l8464:
  8116                           
  8117                           ; BSR set to: 0
  8118  0111EC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8119  0111F0  0100               	movlb	0	; () banked
  8120  0111F2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8121  0111F4  EC64  F090         	call	_month_length
  8122  0111F8  0100               	movlb	0	; () banked
  8123  0111FA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8124  0111FC  0100               	movlb	0	; () banked
  8125  0111FE  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  8126  011200  0100               	movlb	0	; () banked
  8127  011202  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  8128  011204  0E00               	movlw	0
  8129  011206  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8130  011208  B0D8               	btfsc	status,0,c
  8131  01120A  D7B1               	goto	l971
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;My_RTCC.c: 334: }
  8135                           ;My_RTCC.c: 335: day_cache = day_since_epoch - day;
  8136                           
  8137                           ; BSR set to: 0
  8138  01120C  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8139  011210  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8140  011214  0100               	movlb	0	; () banked
  8141  011216  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8142  011218  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8143  01121A  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8144  01121C  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8145  01121E  0100               	movlb	0	; () banked
  8146  011220  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8147  011222  0100               	movlb	0	; () banked
  8148  011224  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8149  011226  0101               	movlb	1	; () banked
  8150  011228  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8151  01122A  0100               	movlb	0	; () banked
  8152  01122C  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8153  01122E  0100               	movlb	0	; () banked
  8154  011230  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8155  011232  0101               	movlb	1	; () banked
  8156  011234  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8157                           
  8158                           ; BSR set to: 1
  8159                           ;My_RTCC.c: 336: day++;
  8160  011236  0100               	movlb	0	; () banked
  8161  011238  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8162  01123A  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;My_RTCC.c: 338: tm->YY = year;
  8166  01123C  0100               	movlb	0	; () banked
  8167  01123E  EE20 F00A          	lfsr	2,10
  8168  011242  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8169  011244  26D9               	addwf	fsr2l,f,c
  8170  011246  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8171  011248  22DA               	addwfc	fsr2h,f,c
  8172  01124A  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;My_RTCC.c: 339: tm->MM = month;
  8176  01124E  0100               	movlb	0	; () banked
  8177  011250  EE20 F009          	lfsr	2,9
  8178  011254  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8179  011256  26D9               	addwf	fsr2l,f,c
  8180  011258  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8181  01125A  22DA               	addwfc	fsr2h,f,c
  8182  01125C  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;My_RTCC.c: 340: tm->DD = day;
  8186  011260  0100               	movlb	0	; () banked
  8187  011262  EE20 F008          	lfsr	2,8
  8188  011266  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8189  011268  26D9               	addwf	fsr2l,f,c
  8190  01126A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8191  01126C  22DA               	addwfc	fsr2h,f,c
  8192  01126E  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8193                           
  8194                           ; BSR set to: 0
  8195  011272  0012               	return		;funcret
  8196  011274                     __end_of_epoch_to_caltime:
  8197                           	opt stack 0
  8198                           tblptru	equ	0xFF8
  8199                           tblptrh	equ	0xFF7
  8200                           tblptrl	equ	0xFF6
  8201                           tablat	equ	0xFF5
  8202                           prodh	equ	0xFF4
  8203                           prodl	equ	0xFF3
  8204                           intcon	equ	0xFF2
  8205                           intcon2	equ	0xFF1
  8206                           indf0	equ	0xFEF
  8207                           postinc0	equ	0xFEE
  8208                           fsr0h	equ	0xFEA
  8209                           fsr0l	equ	0xFE9
  8210                           wreg	equ	0xFE8
  8211                           postinc1	equ	0xFE6
  8212                           postdec1	equ	0xFE5
  8213                           fsr1h	equ	0xFE2
  8214                           fsr1l	equ	0xFE1
  8215                           indf2	equ	0xFDF
  8216                           postinc2	equ	0xFDE
  8217                           postdec2	equ	0xFDD
  8218                           fsr2h	equ	0xFDA
  8219                           fsr2l	equ	0xFD9
  8220                           status	equ	0xFD8
  8221                           
  8222 ;; *************** function _get_quot_rem *****************
  8223 ;; Defined at:
  8224 ;;		line 244 in file "../My_library/My_RTCC.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8227 ;;		 -> epoch_to_caltime@num(4), 
  8228 ;;  div             1   27[BANK0 ] unsigned char 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  num             4   29[BANK0 ] unsigned long 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  4   25[BANK0 ] unsigned long 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8244 ;;Total ram usage:        8 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:   13
  8247 ;; This function calls:
  8248 ;;		___lldiv
  8249 ;;		___lmul
  8250 ;; This function is called by:
  8251 ;;		_epoch_to_caltime
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text33
  8256  012502                     __ptext33:
  8257                           	opt stack 0
  8258  012502                     _get_quot_rem:
  8259                           	opt stack 11
  8260                           
  8261                           ;My_RTCC.c: 247: epoch_t num = *quot;
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;incstack = 0
  8265  012502  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8266  012506  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8267  01250A  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8268  01250E  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8269  012512  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8270  012516  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8271                           
  8272                           ;My_RTCC.c: 248: return num - (*quot = num / div) * div;
  8273  01251A  0100               	movlb	0	; () banked
  8274  01251C  517B               	movf	get_quot_rem@div& (0+255),w,b
  8275  01251E  0100               	movlb	0	; () banked
  8276  012520  6F64               	movwf	___lldiv@divisor& (0+255),b
  8277  012522  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8278  012524  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8279  012526  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8280  012528  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8281  01252C  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8282  012530  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8283  012534  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8284  012538  ECAE  F095         	call	___lldiv	;wreg free
  8285  01253C  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8286  012540  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8287  012544  0100               	movlb	0	; () banked
  8288  012546  C060  FFDE         	movff	?___lldiv,postinc2
  8289  01254A  0100               	movlb	0	; () banked
  8290  01254C  C061  FFDE         	movff	?___lldiv+1,postinc2
  8291  012550  0100               	movlb	0	; () banked
  8292  012552  C062  FFDE         	movff	?___lldiv+2,postinc2
  8293  012556  0100               	movlb	0	; () banked
  8294  012558  C063  FFDD         	movff	?___lldiv+3,postdec2
  8295  01255C  52DD               	movf	postdec2,f,c
  8296  01255E  52DD               	movf	postdec2,f,c
  8297  012560  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8298  012564  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8299  012568  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8300  01256C  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8301  012570  0100               	movlb	0	; () banked
  8302  012572  517B               	movf	get_quot_rem@div& (0+255),w,b
  8303  012574  0100               	movlb	0	; () banked
  8304  012576  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8305  012578  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8306  01257A  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8307  01257C  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8308  01257E  EC0A  F09B         	call	___lmul	;wreg free
  8309  012582  0100               	movlb	0	; () banked
  8310  012584  1F6D               	comf	?___lmul& (0+255),f,b
  8311  012586  0100               	movlb	0	; () banked
  8312  012588  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8313  01258A  0100               	movlb	0	; () banked
  8314  01258C  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8315  01258E  0100               	movlb	0	; () banked
  8316  012590  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8317  012592  0100               	movlb	0	; () banked
  8318  012594  2B6D               	incf	?___lmul& (0+255),f,b
  8319  012596  0E00               	movlw	0
  8320  012598  0100               	movlb	0	; () banked
  8321  01259A  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8322  01259C  0100               	movlb	0	; () banked
  8323  01259E  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8324  0125A0  0100               	movlb	0	; () banked
  8325  0125A2  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8326  0125A4  0100               	movlb	0	; () banked
  8327  0125A6  517D               	movf	get_quot_rem@num& (0+255),w,b
  8328  0125A8  0100               	movlb	0	; () banked
  8329  0125AA  256D               	addwf	?___lmul& (0+255),w,b
  8330  0125AC  0100               	movlb	0	; () banked
  8331  0125AE  6F79               	movwf	?_get_quot_rem& (0+255),b
  8332  0125B0  0100               	movlb	0	; () banked
  8333  0125B2  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8334  0125B4  0100               	movlb	0	; () banked
  8335  0125B6  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8336  0125B8  0100               	movlb	0	; () banked
  8337  0125BA  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8338  0125BC  0100               	movlb	0	; () banked
  8339  0125BE  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8340  0125C0  0100               	movlb	0	; () banked
  8341  0125C2  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8342  0125C4  0100               	movlb	0	; () banked
  8343  0125C6  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8344  0125C8  0100               	movlb	0	; () banked
  8345  0125CA  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8346  0125CC  0100               	movlb	0	; () banked
  8347  0125CE  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8348  0125D0  0100               	movlb	0	; () banked
  8349  0125D2  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8350  0125D4  0012               	return	
  8351  0125D6                     __end_of_get_quot_rem:
  8352                           	opt stack 0
  8353                           tblptru	equ	0xFF8
  8354                           tblptrh	equ	0xFF7
  8355                           tblptrl	equ	0xFF6
  8356                           tablat	equ	0xFF5
  8357                           prodh	equ	0xFF4
  8358                           prodl	equ	0xFF3
  8359                           intcon	equ	0xFF2
  8360                           intcon2	equ	0xFF1
  8361                           indf0	equ	0xFEF
  8362                           postinc0	equ	0xFEE
  8363                           fsr0h	equ	0xFEA
  8364                           fsr0l	equ	0xFE9
  8365                           wreg	equ	0xFE8
  8366                           postinc1	equ	0xFE6
  8367                           postdec1	equ	0xFE5
  8368                           fsr1h	equ	0xFE2
  8369                           fsr1l	equ	0xFE1
  8370                           indf2	equ	0xFDF
  8371                           postinc2	equ	0xFDE
  8372                           postdec2	equ	0xFDD
  8373                           fsr2h	equ	0xFDA
  8374                           fsr2l	equ	0xFD9
  8375                           status	equ	0xFD8
  8376                           
  8377 ;; *************** function ___lldiv *****************
  8378 ;; Defined at:
  8379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  dividend        4    0[BANK0 ] unsigned long 
  8382 ;;  divisor         4    4[BANK0 ] unsigned long 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  quotient        4    8[BANK0 ] unsigned long 
  8385 ;;  counter         1   12[BANK0 ] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  4    0[BANK0 ] unsigned long 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8395 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;Total ram usage:       13 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:   12
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_get_quot_rem
  8406 ;;		_CTMU_read
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text34
  8411  012B5C                     __ptext34:
  8412                           	opt stack 0
  8413  012B5C                     ___lldiv:
  8414                           	opt stack 11
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;incstack = 0
  8418  012B5C  0E00               	movlw	0
  8419  012B5E  0100               	movlb	0	; () banked
  8420  012B60  6F68               	movwf	___lldiv@quotient& (0+255),b
  8421  012B62  0E00               	movlw	0
  8422  012B64  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8423  012B66  0E00               	movlw	0
  8424  012B68  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8425  012B6A  0E00               	movlw	0
  8426  012B6C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8427                           
  8428                           ; BSR set to: 0
  8429  012B6E  0100               	movlb	0	; () banked
  8430  012B70  5164               	movf	___lldiv@divisor& (0+255),w,b
  8431  012B72  0100               	movlb	0	; () banked
  8432  012B74  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8433  012B76  0100               	movlb	0	; () banked
  8434  012B78  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8435  012B7A  0100               	movlb	0	; () banked
  8436  012B7C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8437  012B7E  B4D8               	btfsc	status,2,c
  8438  012B80  D042               	goto	l1939
  8439                           
  8440                           ; BSR set to: 0
  8441  012B82  0E01               	movlw	1
  8442  012B84  0100               	movlb	0	; () banked
  8443  012B86  6F6C               	movwf	___lldiv@counter& (0+255),b
  8444  012B88  D008               	goto	l8282
  8445  012B8A                     l8280:
  8446                           
  8447                           ; BSR set to: 0
  8448  012B8A  0100               	movlb	0	; () banked
  8449  012B8C  90D8               	bcf	status,0,c
  8450  012B8E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8451  012B90  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8452  012B92  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8453  012B94  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8454  012B96  0100               	movlb	0	; () banked
  8455  012B98  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8456  012B9A                     l8282:
  8457                           
  8458                           ; BSR set to: 0
  8459  012B9A  0100               	movlb	0	; () banked
  8460  012B9C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8461  012B9E  D7F5               	goto	l8280
  8462  012BA0                     l8284:
  8463                           
  8464                           ; BSR set to: 0
  8465  012BA0  0100               	movlb	0	; () banked
  8466  012BA2  90D8               	bcf	status,0,c
  8467  012BA4  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8468  012BA6  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8469  012BA8  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8470  012BAA  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8471                           
  8472                           ; BSR set to: 0
  8473  012BAC  0100               	movlb	0	; () banked
  8474  012BAE  5164               	movf	___lldiv@divisor& (0+255),w,b
  8475  012BB0  0100               	movlb	0	; () banked
  8476  012BB2  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8477  012BB4  0100               	movlb	0	; () banked
  8478  012BB6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8479  012BB8  0100               	movlb	0	; () banked
  8480  012BBA  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8481  012BBC  0100               	movlb	0	; () banked
  8482  012BBE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8483  012BC0  0100               	movlb	0	; () banked
  8484  012BC2  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8485  012BC4  0100               	movlb	0	; () banked
  8486  012BC6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8487  012BC8  0100               	movlb	0	; () banked
  8488  012BCA  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8489  012BCC  A0D8               	btfss	status,0,c
  8490  012BCE  D012               	goto	l8292
  8491                           
  8492                           ; BSR set to: 0
  8493  012BD0  0100               	movlb	0	; () banked
  8494  012BD2  5164               	movf	___lldiv@divisor& (0+255),w,b
  8495  012BD4  0100               	movlb	0	; () banked
  8496  012BD6  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8497  012BD8  0100               	movlb	0	; () banked
  8498  012BDA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8499  012BDC  0100               	movlb	0	; () banked
  8500  012BDE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8501  012BE0  0100               	movlb	0	; () banked
  8502  012BE2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8503  012BE4  0100               	movlb	0	; () banked
  8504  012BE6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8505  012BE8  0100               	movlb	0	; () banked
  8506  012BEA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8507  012BEC  0100               	movlb	0	; () banked
  8508  012BEE  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8509                           
  8510                           ; BSR set to: 0
  8511  012BF0  0100               	movlb	0	; () banked
  8512  012BF2  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8513  012BF4                     l8292:
  8514                           
  8515                           ; BSR set to: 0
  8516  012BF4  0100               	movlb	0	; () banked
  8517  012BF6  90D8               	bcf	status,0,c
  8518  012BF8  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8519  012BFA  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8520  012BFC  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8521  012BFE  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8522                           
  8523                           ; BSR set to: 0
  8524  012C00  0100               	movlb	0	; () banked
  8525  012C02  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8526  012C04  D7CD               	goto	l8284
  8527  012C06                     l1939:
  8528                           
  8529                           ; BSR set to: 0
  8530  012C06  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8531  012C0A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8532  012C0E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8533  012C12  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8534                           
  8535                           ; BSR set to: 0
  8536  012C16  0012               	return		;funcret
  8537  012C18                     __end_of___lldiv:
  8538                           	opt stack 0
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           intcon2	equ	0xFF1
  8547                           indf0	equ	0xFEF
  8548                           postinc0	equ	0xFEE
  8549                           fsr0h	equ	0xFEA
  8550                           fsr0l	equ	0xFE9
  8551                           wreg	equ	0xFE8
  8552                           postinc1	equ	0xFE6
  8553                           postdec1	equ	0xFE5
  8554                           fsr1h	equ	0xFE2
  8555                           fsr1l	equ	0xFE1
  8556                           indf2	equ	0xFDF
  8557                           postinc2	equ	0xFDE
  8558                           postdec2	equ	0xFDD
  8559                           fsr2h	equ	0xFDA
  8560                           fsr2l	equ	0xFD9
  8561                           status	equ	0xFD8
  8562                           
  8563 ;; *************** function _caltime_to_RTCC *****************
  8564 ;; Defined at:
  8565 ;;		line 269 in file "../My_library/My_RTCC.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;  tm              2    9[BANK0 ] PTR struct .
  8568 ;;		 -> now(14), 
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;		None               void
  8573 ;; Registers used:
  8574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8584 ;;Total ram usage:        2 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:   14
  8587 ;; This function calls:
  8588 ;;		_d_to_x
  8589 ;; This function is called by:
  8590 ;;		_RTCC_from_caltime
  8591 ;;		_RTCC_from_epoch
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text35
  8596  012356                     __ptext35:
  8597                           	opt stack 0
  8598  012356                     _caltime_to_RTCC:
  8599                           	opt stack 11
  8600  012356                     l958:
  8601  012356  010F               	movlb	15	; () banked
  8602  012358  B93F               	btfsc	63,4,b	;volatile
  8603  01235A  D7FD               	goto	l958
  8604                           
  8605                           ; BSR set to: 15
  8606                           ;My_RTCC.c: 271: RTCCFGbits.RTCPTR0 = 1;
  8607  01235C  010F               	movlb	15	; () banked
  8608  01235E  813F               	bsf	63,0,b	;volatile
  8609                           
  8610                           ;My_RTCC.c: 272: RTCCFGbits.RTCPTR1 = 1;
  8611  012360  010F               	movlb	15	; () banked
  8612  012362  833F               	bsf	63,1,b	;volatile
  8613                           
  8614                           ; BSR set to: 15
  8615                           ;My_RTCC.c: 273: RTCVALL = d_to_x(tm->YY);
  8616  012364  0100               	movlb	0	; () banked
  8617  012366  EE20 F00A          	lfsr	2,10
  8618  01236A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8619  01236C  26D9               	addwf	fsr2l,f,c
  8620  01236E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8621  012370  22DA               	addwfc	fsr2h,f,c
  8622  012372  50DF               	movf	indf2,w,c
  8623  012374  ECD5  F09F         	call	_d_to_x
  8624  012378  010F               	movlb	15	; () banked
  8625  01237A  6F3A               	movwf	58,b	;volatile
  8626                           
  8627                           ; BSR set to: 15
  8628                           ;My_RTCC.c: 274: RTCVALH = 0x00;
  8629  01237C  0E00               	movlw	0
  8630  01237E  010F               	movlb	15	; () banked
  8631  012380  6F3B               	movwf	59,b	;volatile
  8632                           
  8633                           ; BSR set to: 15
  8634                           ;My_RTCC.c: 275: RTCCFGbits.RTCPTR0 = 0;
  8635  012382  010F               	movlb	15	; () banked
  8636  012384  913F               	bcf	63,0,b	;volatile
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;My_RTCC.c: 276: RTCCFGbits.RTCPTR1 = 1;
  8640  012386  010F               	movlb	15	; () banked
  8641  012388  833F               	bsf	63,1,b	;volatile
  8642                           
  8643                           ; BSR set to: 15
  8644                           ;My_RTCC.c: 277: RTCVALL = d_to_x(tm->DD);
  8645  01238A  0100               	movlb	0	; () banked
  8646  01238C  EE20 F008          	lfsr	2,8
  8647  012390  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8648  012392  26D9               	addwf	fsr2l,f,c
  8649  012394  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8650  012396  22DA               	addwfc	fsr2h,f,c
  8651  012398  50DF               	movf	indf2,w,c
  8652  01239A  ECD5  F09F         	call	_d_to_x
  8653  01239E  010F               	movlb	15	; () banked
  8654  0123A0  6F3A               	movwf	58,b	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;My_RTCC.c: 278: RTCVALH = d_to_x(tm->MM);
  8658  0123A2  0100               	movlb	0	; () banked
  8659  0123A4  EE20 F009          	lfsr	2,9
  8660  0123A8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8661  0123AA  26D9               	addwf	fsr2l,f,c
  8662  0123AC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8663  0123AE  22DA               	addwfc	fsr2h,f,c
  8664  0123B0  50DF               	movf	indf2,w,c
  8665  0123B2  ECD5  F09F         	call	_d_to_x
  8666  0123B6  010F               	movlb	15	; () banked
  8667  0123B8  6F3B               	movwf	59,b	;volatile
  8668                           
  8669                           ; BSR set to: 15
  8670                           ;My_RTCC.c: 279: RTCCFGbits.RTCPTR0 = 1;
  8671  0123BA  010F               	movlb	15	; () banked
  8672  0123BC  813F               	bsf	63,0,b	;volatile
  8673                           
  8674                           ; BSR set to: 15
  8675                           ;My_RTCC.c: 280: RTCCFGbits.RTCPTR1 = 0;
  8676  0123BE  010F               	movlb	15	; () banked
  8677  0123C0  933F               	bcf	63,1,b	;volatile
  8678                           
  8679                           ; BSR set to: 15
  8680                           ;My_RTCC.c: 281: RTCVALL = d_to_x(tm->hh);
  8681  0123C2  0100               	movlb	0	; () banked
  8682  0123C4  EE20 F006          	lfsr	2,6
  8683  0123C8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8684  0123CA  26D9               	addwf	fsr2l,f,c
  8685  0123CC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8686  0123CE  22DA               	addwfc	fsr2h,f,c
  8687  0123D0  50DF               	movf	indf2,w,c
  8688  0123D2  ECD5  F09F         	call	_d_to_x
  8689  0123D6  010F               	movlb	15	; () banked
  8690  0123D8  6F3A               	movwf	58,b	;volatile
  8691                           
  8692                           ; BSR set to: 15
  8693                           ;My_RTCC.c: 282: RTCVALH = d_to_x(tm->EE);
  8694  0123DA  0100               	movlb	0	; () banked
  8695  0123DC  EE20 F007          	lfsr	2,7
  8696  0123E0  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8697  0123E2  26D9               	addwf	fsr2l,f,c
  8698  0123E4  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8699  0123E6  22DA               	addwfc	fsr2h,f,c
  8700  0123E8  50DF               	movf	indf2,w,c
  8701  0123EA  ECD5  F09F         	call	_d_to_x
  8702  0123EE  010F               	movlb	15	; () banked
  8703  0123F0  6F3B               	movwf	59,b	;volatile
  8704                           
  8705                           ; BSR set to: 15
  8706                           ;My_RTCC.c: 283: RTCCFGbits.RTCPTR0 = 0;
  8707  0123F2  010F               	movlb	15	; () banked
  8708  0123F4  913F               	bcf	63,0,b	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;My_RTCC.c: 284: RTCCFGbits.RTCPTR1 = 0;
  8712  0123F6  010F               	movlb	15	; () banked
  8713  0123F8  933F               	bcf	63,1,b	;volatile
  8714                           
  8715                           ; BSR set to: 15
  8716                           ;My_RTCC.c: 285: RTCVALL = d_to_x(tm->ss);
  8717  0123FA  0100               	movlb	0	; () banked
  8718  0123FC  EE20 F004          	lfsr	2,4
  8719  012400  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8720  012402  26D9               	addwf	fsr2l,f,c
  8721  012404  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8722  012406  22DA               	addwfc	fsr2h,f,c
  8723  012408  50DF               	movf	indf2,w,c
  8724  01240A  ECD5  F09F         	call	_d_to_x
  8725  01240E  010F               	movlb	15	; () banked
  8726  012410  6F3A               	movwf	58,b	;volatile
  8727                           
  8728                           ; BSR set to: 15
  8729                           ;My_RTCC.c: 286: RTCVALH = d_to_x(tm->mm);
  8730  012412  0100               	movlb	0	; () banked
  8731  012414  EE20 F005          	lfsr	2,5
  8732  012418  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8733  01241A  26D9               	addwf	fsr2l,f,c
  8734  01241C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8735  01241E  22DA               	addwfc	fsr2h,f,c
  8736  012420  50DF               	movf	indf2,w,c
  8737  012422  ECD5  F09F         	call	_d_to_x
  8738  012426  010F               	movlb	15	; () banked
  8739  012428  6F3B               	movwf	59,b	;volatile
  8740                           
  8741                           ; BSR set to: 15
  8742  01242A  0012               	return		;funcret
  8743  01242C                     __end_of_caltime_to_RTCC:
  8744                           	opt stack 0
  8745                           tblptru	equ	0xFF8
  8746                           tblptrh	equ	0xFF7
  8747                           tblptrl	equ	0xFF6
  8748                           tablat	equ	0xFF5
  8749                           prodh	equ	0xFF4
  8750                           prodl	equ	0xFF3
  8751                           intcon	equ	0xFF2
  8752                           intcon2	equ	0xFF1
  8753                           indf0	equ	0xFEF
  8754                           postinc0	equ	0xFEE
  8755                           fsr0h	equ	0xFEA
  8756                           fsr0l	equ	0xFE9
  8757                           wreg	equ	0xFE8
  8758                           postinc1	equ	0xFE6
  8759                           postdec1	equ	0xFE5
  8760                           fsr1h	equ	0xFE2
  8761                           fsr1l	equ	0xFE1
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8
  8768                           
  8769 ;; *************** function _d_to_x *****************
  8770 ;; Defined at:
  8771 ;;		line 234 in file "../My_library/My_RTCC.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  dec             1    wreg     unsigned char 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  dec             1    8[BANK0 ] unsigned char 
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      unsigned char 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8789 ;;Total ram usage:        1 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:   13
  8792 ;; This function calls:
  8793 ;;		___awdiv
  8794 ;; This function is called by:
  8795 ;;		_caltime_to_RTCC
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text36
  8800  013FAA                     __ptext36:
  8801                           	opt stack 0
  8802  013FAA                     _d_to_x:
  8803                           	opt stack 11
  8804                           
  8805                           ; BSR set to: 15
  8806                           ;incstack = 0
  8807                           ;d_to_x@dec stored from wreg
  8808  013FAA  0100               	movlb	0	; () banked
  8809  013FAC  6F68               	movwf	d_to_x@dec& (0+255),b
  8810                           
  8811                           ;My_RTCC.c: 237: return dec / 10 * 6 + dec;
  8812  013FAE  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8813  013FB2  0100               	movlb	0	; () banked
  8814  013FB4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8815  013FB6  0E00               	movlw	0
  8816  013FB8  0100               	movlb	0	; () banked
  8817  013FBA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8818  013FBC  0E0A               	movlw	10
  8819  013FBE  6F62               	movwf	___awdiv@divisor& (0+255),b
  8820  013FC0  EC4F  F095         	call	___awdiv	;wreg free
  8821  013FC4  0100               	movlb	0	; () banked
  8822  013FC6  5160               	movf	?___awdiv& (0+255),w,b
  8823  013FC8  0D06               	mullw	6
  8824  013FCA  50F3               	movf	prodl,w,c
  8825  013FCC  0100               	movlb	0	; () banked
  8826  013FCE  2568               	addwf	d_to_x@dec& (0+255),w,b
  8827  013FD0  0012               	return	
  8828  013FD2                     __end_of_d_to_x:
  8829                           	opt stack 0
  8830                           tblptru	equ	0xFF8
  8831                           tblptrh	equ	0xFF7
  8832                           tblptrl	equ	0xFF6
  8833                           tablat	equ	0xFF5
  8834                           prodh	equ	0xFF4
  8835                           prodl	equ	0xFF3
  8836                           intcon	equ	0xFF2
  8837                           intcon2	equ	0xFF1
  8838                           indf0	equ	0xFEF
  8839                           postinc0	equ	0xFEE
  8840                           fsr0h	equ	0xFEA
  8841                           fsr0l	equ	0xFE9
  8842                           wreg	equ	0xFE8
  8843                           postinc1	equ	0xFE6
  8844                           postdec1	equ	0xFE5
  8845                           fsr1h	equ	0xFE2
  8846                           fsr1l	equ	0xFE1
  8847                           indf2	equ	0xFDF
  8848                           postinc2	equ	0xFDE
  8849                           postdec2	equ	0xFDD
  8850                           fsr2h	equ	0xFDA
  8851                           fsr2l	equ	0xFD9
  8852                           status	equ	0xFD8
  8853                           
  8854 ;; *************** function ___awdiv *****************
  8855 ;; Defined at:
  8856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  dividend        2    0[BANK0 ] int 
  8859 ;;  divisor         2    2[BANK0 ] int 
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;  quotient        2    6[BANK0 ] int 
  8862 ;;  sign            1    5[BANK0 ] unsigned char 
  8863 ;;  counter         1    4[BANK0 ] unsigned char 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  2    0[BANK0 ] int 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;Total ram usage:        8 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:   12
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_d_to_x
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text37
  8888  012A9E                     __ptext37:
  8889                           	opt stack 0
  8890  012A9E                     ___awdiv:
  8891                           	opt stack 11
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;incstack = 0
  8895  012A9E  0E00               	movlw	0
  8896  012AA0  0100               	movlb	0	; () banked
  8897  012AA2  6F65               	movwf	___awdiv@sign& (0+255),b
  8898                           
  8899                           ; BSR set to: 0
  8900  012AA4  0100               	movlb	0	; () banked
  8901  012AA6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8902  012AA8  D008               	goto	l8238
  8903                           
  8904                           ; BSR set to: 0
  8905  012AAA  0100               	movlb	0	; () banked
  8906  012AAC  6D62               	negf	___awdiv@divisor& (0+255),b
  8907  012AAE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8908  012AB0  B0D8               	btfsc	status,0,c
  8909  012AB2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8910                           
  8911                           ; BSR set to: 0
  8912  012AB4  0E01               	movlw	1
  8913  012AB6  0100               	movlb	0	; () banked
  8914  012AB8  6F65               	movwf	___awdiv@sign& (0+255),b
  8915  012ABA                     l8238:
  8916                           
  8917                           ; BSR set to: 0
  8918  012ABA  0100               	movlb	0	; () banked
  8919  012ABC  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8920  012ABE  D008               	goto	l8244
  8921                           
  8922                           ; BSR set to: 0
  8923  012AC0  0100               	movlb	0	; () banked
  8924  012AC2  6D60               	negf	___awdiv@dividend& (0+255),b
  8925  012AC4  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8926  012AC6  B0D8               	btfsc	status,0,c
  8927  012AC8  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8928                           
  8929                           ; BSR set to: 0
  8930  012ACA  0E01               	movlw	1
  8931  012ACC  0100               	movlb	0	; () banked
  8932  012ACE  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8933  012AD0                     l8244:
  8934                           
  8935                           ; BSR set to: 0
  8936  012AD0  0E00               	movlw	0
  8937  012AD2  0100               	movlb	0	; () banked
  8938  012AD4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8939  012AD6  0E00               	movlw	0
  8940  012AD8  6F66               	movwf	___awdiv@quotient& (0+255),b
  8941                           
  8942                           ; BSR set to: 0
  8943  012ADA  0100               	movlb	0	; () banked
  8944  012ADC  5162               	movf	___awdiv@divisor& (0+255),w,b
  8945  012ADE  0100               	movlb	0	; () banked
  8946  012AE0  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8947  012AE2  B4D8               	btfsc	status,2,c
  8948  012AE4  D02C               	goto	l8266
  8949                           
  8950                           ; BSR set to: 0
  8951  012AE6  0E01               	movlw	1
  8952  012AE8  0100               	movlb	0	; () banked
  8953  012AEA  6F64               	movwf	___awdiv@counter& (0+255),b
  8954  012AEC  D006               	goto	l8252
  8955  012AEE                     l8250:
  8956                           
  8957                           ; BSR set to: 0
  8958  012AEE  0100               	movlb	0	; () banked
  8959  012AF0  90D8               	bcf	status,0,c
  8960  012AF2  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8961  012AF4  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8962  012AF6  0100               	movlb	0	; () banked
  8963  012AF8  2B64               	incf	___awdiv@counter& (0+255),f,b
  8964  012AFA                     l8252:
  8965                           
  8966                           ; BSR set to: 0
  8967  012AFA  0100               	movlb	0	; () banked
  8968  012AFC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8969  012AFE  D7F7               	goto	l8250
  8970  012B00                     l8254:
  8971                           
  8972                           ; BSR set to: 0
  8973  012B00  0100               	movlb	0	; () banked
  8974  012B02  90D8               	bcf	status,0,c
  8975  012B04  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8976  012B06  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8977                           
  8978                           ; BSR set to: 0
  8979  012B08  0100               	movlb	0	; () banked
  8980  012B0A  5162               	movf	___awdiv@divisor& (0+255),w,b
  8981  012B0C  0100               	movlb	0	; () banked
  8982  012B0E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8983  012B10  0100               	movlb	0	; () banked
  8984  012B12  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8985  012B14  0100               	movlb	0	; () banked
  8986  012B16  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8987  012B18  A0D8               	btfss	status,0,c
  8988  012B1A  D00A               	goto	l8262
  8989                           
  8990                           ; BSR set to: 0
  8991  012B1C  0100               	movlb	0	; () banked
  8992  012B1E  5162               	movf	___awdiv@divisor& (0+255),w,b
  8993  012B20  0100               	movlb	0	; () banked
  8994  012B22  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8995  012B24  0100               	movlb	0	; () banked
  8996  012B26  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8997  012B28  0100               	movlb	0	; () banked
  8998  012B2A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8999                           
  9000                           ; BSR set to: 0
  9001  012B2C  0100               	movlb	0	; () banked
  9002  012B2E  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9003  012B30                     l8262:
  9004                           
  9005                           ; BSR set to: 0
  9006  012B30  0100               	movlb	0	; () banked
  9007  012B32  90D8               	bcf	status,0,c
  9008  012B34  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9009  012B36  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9010                           
  9011                           ; BSR set to: 0
  9012  012B38  0100               	movlb	0	; () banked
  9013  012B3A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9014  012B3C  D7E1               	goto	l8254
  9015  012B3E                     l8266:
  9016                           
  9017                           ; BSR set to: 0
  9018  012B3E  0100               	movlb	0	; () banked
  9019  012B40  5165               	movf	___awdiv@sign& (0+255),w,b
  9020  012B42  0100               	movlb	0	; () banked
  9021  012B44  B4D8               	btfsc	status,2,c
  9022  012B46  D005               	goto	l8270
  9023                           
  9024                           ; BSR set to: 0
  9025  012B48  0100               	movlb	0	; () banked
  9026  012B4A  6D66               	negf	___awdiv@quotient& (0+255),b
  9027  012B4C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9028  012B4E  B0D8               	btfsc	status,0,c
  9029  012B50  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9030  012B52                     l8270:
  9031                           
  9032                           ; BSR set to: 0
  9033  012B52  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9034  012B56  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9035  012B5A  0012               	return	
  9036  012B5C                     __end_of___awdiv:
  9037                           	opt stack 0
  9038                           tblptru	equ	0xFF8
  9039                           tblptrh	equ	0xFF7
  9040                           tblptrl	equ	0xFF6
  9041                           tablat	equ	0xFF5
  9042                           prodh	equ	0xFF4
  9043                           prodl	equ	0xFF3
  9044                           intcon	equ	0xFF2
  9045                           intcon2	equ	0xFF1
  9046                           indf0	equ	0xFEF
  9047                           postinc0	equ	0xFEE
  9048                           fsr0h	equ	0xFEA
  9049                           fsr0l	equ	0xFE9
  9050                           wreg	equ	0xFE8
  9051                           postinc1	equ	0xFE6
  9052                           postdec1	equ	0xFE5
  9053                           fsr1h	equ	0xFE2
  9054                           fsr1l	equ	0xFE1
  9055                           indf2	equ	0xFDF
  9056                           postinc2	equ	0xFDE
  9057                           postdec2	equ	0xFDD
  9058                           fsr2h	equ	0xFDA
  9059                           fsr2l	equ	0xFD9
  9060                           status	equ	0xFD8
  9061                           
  9062 ;; *************** function _OSC_init *****************
  9063 ;; Defined at:
  9064 ;;		line 8 in file "../My_library/My_PIC.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;		None               void
  9071 ;; Registers used:
  9072 ;;		wreg, status,2
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:   12
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_main_init
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text38
  9093  014186                     __ptext38:
  9094                           	opt stack 0
  9095  014186                     _OSC_init:
  9096                           	opt stack 17
  9097                           
  9098                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;incstack = 0
  9102  014186  88D3               	bsf	4051,4,c	;volatile
  9103  014188  8AD3               	bsf	4051,5,c	;volatile
  9104  01418A  8CD3               	bsf	4051,6,c	;volatile
  9105                           
  9106                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  9107  01418C  8C9B               	bsf	3995,6,c	;volatile
  9108                           
  9109                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  9110  01418E  0EFC               	movlw	-4
  9111  014190  16D3               	andwf	4051,f,c	;volatile
  9112  014192  0012               	return		;funcret
  9113  014194                     __end_of_OSC_init:
  9114                           	opt stack 0
  9115                           tblptru	equ	0xFF8
  9116                           tblptrh	equ	0xFF7
  9117                           tblptrl	equ	0xFF6
  9118                           tablat	equ	0xFF5
  9119                           prodh	equ	0xFF4
  9120                           prodl	equ	0xFF3
  9121                           intcon	equ	0xFF2
  9122                           intcon2	equ	0xFF1
  9123                           indf0	equ	0xFEF
  9124                           postinc0	equ	0xFEE
  9125                           fsr0h	equ	0xFEA
  9126                           fsr0l	equ	0xFE9
  9127                           wreg	equ	0xFE8
  9128                           postinc1	equ	0xFE6
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           fsr2h	equ	0xFDA
  9136                           fsr2l	equ	0xFD9
  9137                           status	equ	0xFD8
  9138                           
  9139 ;; *************** function _I2C_LCD_init *****************
  9140 ;; Defined at:
  9141 ;;		line 211 in file "../My_library/My_ST7032.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;		None
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  i               1    9[BANK0 ] unsigned char 
  9146 ;;  i               1    8[BANK0 ] unsigned char 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;		None               void
  9149 ;; Registers used:
  9150 ;;		wreg, status,2, status,0, cstack
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9159 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;Total ram usage:        3 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:   16
  9163 ;; This function calls:
  9164 ;;		_I2C_LCD_Clear
  9165 ;;		_I2C_LCD_Command
  9166 ;;		_I2C_init_old
  9167 ;; This function is called by:
  9168 ;;		_main_init
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text39
  9173  0132E2                     __ptext39:
  9174                           	opt stack 0
  9175  0132E2                     _I2C_LCD_init:
  9176                           	opt stack 13
  9177                           
  9178                           ;My_ST7032.c: 212: I2C_init_old();
  9179                           
  9180                           ;incstack = 0
  9181  0132E2  ECB3  F0A0         	call	_I2C_init_old	;wreg free
  9182                           
  9183                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  9184  0132E6  0E00               	movlw	0
  9185  0132E8  0100               	movlb	0	; () banked
  9186  0132EA  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  9187  0132EC                     l9192:
  9188                           
  9189                           ; BSR set to: 0
  9190  0132EC  0E27               	movlw	39
  9191  0132EE  0100               	movlb	0	; () banked
  9192  0132F0  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  9193  0132F2  D001               	goto	l9196
  9194  0132F4  D00C               	goto	l9200
  9195  0132F6                     l9196:
  9196                           
  9197                           ; BSR set to: 0
  9198  0132F6  0E10               	movlw	16
  9199  0132F8  0100               	movlb	0	; () banked
  9200  0132FA  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9201  0132FC  0E94               	movlw	148
  9202  0132FE                     u9617:
  9203  0132FE  2EE8               	decfsz	wreg,f,c
  9204  013300  D7FE               	goto	u9617
  9205  013302  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9206  013304  D7FC               	goto	u9617
  9207  013306  D000               	nop2	
  9208  013308  0100               	movlb	0	; () banked
  9209  01330A  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  9210  01330C  D7EF               	goto	l9192
  9211  01330E                     l9200:
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
  9215  01330E  0E38               	movlw	56
  9216  013310  ECBC  F09E         	call	_I2C_LCD_Command
  9217                           
  9218                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
  9219  013314  0E39               	movlw	57
  9220  013316  ECBC  F09E         	call	_I2C_LCD_Command
  9221                           
  9222                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
  9223  01331A  0E14               	movlw	20
  9224  01331C  ECBC  F09E         	call	_I2C_LCD_Command
  9225                           
  9226                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
  9227  013320  0E70               	movlw	112
  9228  013322  ECBC  F09E         	call	_I2C_LCD_Command
  9229                           
  9230                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
  9231  013326  0E56               	movlw	86
  9232  013328  ECBC  F09E         	call	_I2C_LCD_Command
  9233                           
  9234                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
  9235  01332C  0E6C               	movlw	108
  9236  01332E  ECBC  F09E         	call	_I2C_LCD_Command
  9237                           
  9238                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  9239  013332  0E00               	movlw	0
  9240  013334  0100               	movlb	0	; () banked
  9241  013336  6F69               	movwf	I2C_LCD_init@i_4468& (0+255),b
  9242  013338                     l9204:
  9243                           
  9244                           ; BSR set to: 0
  9245  013338  0E27               	movlw	39
  9246  01333A  0100               	movlb	0	; () banked
  9247  01333C  6569               	cpfsgt	I2C_LCD_init@i_4468& (0+255),b
  9248  01333E  D001               	goto	l9208
  9249  013340  D00C               	goto	l9212
  9250  013342                     l9208:
  9251                           
  9252                           ; BSR set to: 0
  9253  013342  0E10               	movlw	16
  9254  013344  0100               	movlb	0	; () banked
  9255  013346  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9256  013348  0E94               	movlw	148
  9257  01334A                     u9627:
  9258  01334A  2EE8               	decfsz	wreg,f,c
  9259  01334C  D7FE               	goto	u9627
  9260  01334E  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9261  013350  D7FC               	goto	u9627
  9262  013352  D000               	nop2	
  9263  013354  0100               	movlb	0	; () banked
  9264  013356  2B69               	incf	I2C_LCD_init@i_4468& (0+255),f,b
  9265  013358  D7EF               	goto	l9204
  9266  01335A                     l9212:
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
  9270  01335A  0E38               	movlw	56
  9271  01335C  ECBC  F09E         	call	_I2C_LCD_Command
  9272                           
  9273                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
  9274  013360  0E0C               	movlw	12
  9275  013362  ECBC  F09E         	call	_I2C_LCD_Command
  9276                           
  9277                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
  9278  013366  0E06               	movlw	6
  9279  013368  ECBC  F09E         	call	_I2C_LCD_Command
  9280                           
  9281                           ;My_ST7032.c: 225: I2C_LCD_Clear();
  9282  01336C  EC8D  F0A0         	call	_I2C_LCD_Clear	;wreg free
  9283  013370  0012               	return		;funcret
  9284  013372                     __end_of_I2C_LCD_init:
  9285                           	opt stack 0
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           prodh	equ	0xFF4
  9291                           prodl	equ	0xFF3
  9292                           intcon	equ	0xFF2
  9293                           intcon2	equ	0xFF1
  9294                           indf0	equ	0xFEF
  9295                           postinc0	equ	0xFEE
  9296                           fsr0h	equ	0xFEA
  9297                           fsr0l	equ	0xFE9
  9298                           wreg	equ	0xFE8
  9299                           postinc1	equ	0xFE6
  9300                           postdec1	equ	0xFE5
  9301                           fsr1h	equ	0xFE2
  9302                           fsr1l	equ	0xFE1
  9303                           indf2	equ	0xFDF
  9304                           postinc2	equ	0xFDE
  9305                           postdec2	equ	0xFDD
  9306                           fsr2h	equ	0xFDA
  9307                           fsr2l	equ	0xFD9
  9308                           status	equ	0xFD8
  9309                           
  9310 ;; *************** function _I2C_init_old *****************
  9311 ;; Defined at:
  9312 ;;		line 62 in file "../My_library/My_I2C.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;		None
  9317 ;; Return value:  Size  Location     Type
  9318 ;;		None               void
  9319 ;; Registers used:
  9320 ;;		wreg, status,2
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9330 ;;Total ram usage:        0 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:   12
  9333 ;; This function calls:
  9334 ;;		Nothing
  9335 ;; This function is called by:
  9336 ;;		_I2C_LCD_init
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text40
  9341  014166                     __ptext40:
  9342                           	opt stack 0
  9343  014166                     _I2C_init_old:
  9344                           	opt stack 16
  9345                           
  9346                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
  9347                           
  9348                           ;incstack = 0
  9349  014166  0E80               	movlw	128
  9350  014168  6EC7               	movwf	4039,c	;volatile
  9351                           
  9352                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
  9353  01416A  0E28               	movlw	40
  9354  01416C  6EC6               	movwf	4038,c	;volatile
  9355                           
  9356                           ;My_I2C.c: 65: SSP1ADD = 0x13;
  9357  01416E  0E13               	movlw	19
  9358  014170  6EC8               	movwf	4040,c	;volatile
  9359                           
  9360                           ;My_I2C.c: 68: SSP1IF = 0;
  9361  014172  969E               	bcf	3998,3,c	;volatile
  9362                           
  9363                           ;My_I2C.c: 69: BCL1IF = 0;
  9364  014174  96A1               	bcf	4001,3,c	;volatile
  9365  014176  0012               	return		;funcret
  9366  014178                     __end_of_I2C_init_old:
  9367                           	opt stack 0
  9368                           tblptru	equ	0xFF8
  9369                           tblptrh	equ	0xFF7
  9370                           tblptrl	equ	0xFF6
  9371                           tablat	equ	0xFF5
  9372                           prodh	equ	0xFF4
  9373                           prodl	equ	0xFF3
  9374                           intcon	equ	0xFF2
  9375                           intcon2	equ	0xFF1
  9376                           indf0	equ	0xFEF
  9377                           postinc0	equ	0xFEE
  9378                           fsr0h	equ	0xFEA
  9379                           fsr0l	equ	0xFE9
  9380                           wreg	equ	0xFE8
  9381                           postinc1	equ	0xFE6
  9382                           postdec1	equ	0xFE5
  9383                           fsr1h	equ	0xFE2
  9384                           fsr1l	equ	0xFE1
  9385                           indf2	equ	0xFDF
  9386                           postinc2	equ	0xFDE
  9387                           postdec2	equ	0xFDD
  9388                           fsr2h	equ	0xFDA
  9389                           fsr2l	equ	0xFD9
  9390                           status	equ	0xFD8
  9391                           
  9392 ;; *************** function _I2C_LCD_Clear *****************
  9393 ;; Defined at:
  9394 ;;		line 154 in file "../My_library/My_ST7032.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;		None
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;		None
  9399 ;; Return value:  Size  Location     Type
  9400 ;;		None               void
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0, cstack
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9410 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;Total ram usage:        1 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:   15
  9415 ;; This function calls:
  9416 ;;		_I2C_LCD_Command
  9417 ;; This function is called by:
  9418 ;;		_I2C_LCD_init
  9419 ;;		_main
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text41
  9424  01411A                     __ptext41:
  9425                           	opt stack 0
  9426  01411A                     _I2C_LCD_Clear:
  9427                           	opt stack 13
  9428                           
  9429                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
  9430                           
  9431                           ;incstack = 0
  9432  01411A  0E01               	movlw	1
  9433  01411C  ECBC  F09E         	call	_I2C_LCD_Command
  9434                           
  9435                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  9436  014120  0E12               	movlw	18
  9437  014122  0100               	movlb	0	; () banked
  9438  014124  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  9439  014126  0E23               	movlw	35
  9440  014128                     u9637:
  9441  014128  2EE8               	decfsz	wreg,f,c
  9442  01412A  D7FE               	goto	u9637
  9443  01412C  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  9444  01412E  D7FC               	goto	u9637
  9445  014130  F000               	nop	
  9446  014132  0012               	return		;funcret
  9447  014134                     __end_of_I2C_LCD_Clear:
  9448                           	opt stack 0
  9449                           tblptru	equ	0xFF8
  9450                           tblptrh	equ	0xFF7
  9451                           tblptrl	equ	0xFF6
  9452                           tablat	equ	0xFF5
  9453                           prodh	equ	0xFF4
  9454                           prodl	equ	0xFF3
  9455                           intcon	equ	0xFF2
  9456                           intcon2	equ	0xFF1
  9457                           indf0	equ	0xFEF
  9458                           postinc0	equ	0xFEE
  9459                           fsr0h	equ	0xFEA
  9460                           fsr0l	equ	0xFE9
  9461                           wreg	equ	0xFE8
  9462                           postinc1	equ	0xFE6
  9463                           postdec1	equ	0xFE5
  9464                           fsr1h	equ	0xFE2
  9465                           fsr1l	equ	0xFE1
  9466                           indf2	equ	0xFDF
  9467                           postinc2	equ	0xFDE
  9468                           postdec2	equ	0xFDD
  9469                           fsr2h	equ	0xFDA
  9470                           fsr2l	equ	0xFD9
  9471                           status	equ	0xFD8
  9472                           
  9473 ;; *************** function _USB_CDC_task *****************
  9474 ;; Defined at:
  9475 ;;		line 39 in file "../My_library/My_usb_cdc.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;		None
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;  i               2   16[BANK0 ] unsigned int 
  9480 ;;  length          2   18[BANK0 ] unsigned int 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;		None               void
  9483 ;; Registers used:
  9484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;Total ram usage:        5 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:   15
  9497 ;; This function calls:
  9498 ;;		_USB_CDC_get
  9499 ;;		_USB_CDC_send
  9500 ;;		_ringbuf_num
  9501 ;;		_ringbuf_pop
  9502 ;;		_ringbuf_put
  9503 ;; This function is called by:
  9504 ;;		_main
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text42
  9509  011A40                     __ptext42:
  9510                           	opt stack 0
  9511  011A40                     _USB_CDC_task:
  9512                           	opt stack 15
  9513                           
  9514                           ;My_usb_cdc.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
  9515                           
  9516                           ;incstack = 0
  9517  011A40  0E20               	movlw	32
  9518  011A42  6040               	cpfslt	_USBDeviceState,c	;volatile
  9519  011A44  D001               	goto	l1375
  9520  011A46  0012               	return	
  9521  011A48                     l1375:
  9522                           
  9523                           ;My_usb_cdc.c: 63: }
  9524                           ;My_usb_cdc.c: 69: if (UCONbits.SUSPND == 1) {
  9525  011A48  B265               	btfsc	3941,1,c	;volatile
  9526  011A4A  0012               	return	
  9527                           
  9528                           ;My_usb_cdc.c: 72: }
  9529                           ;My_usb_cdc.c: 75: uint16_t length = 0;
  9530                           
  9531                           ;My_usb_cdc.c: 71: return;
  9532  011A4C  0E00               	movlw	0
  9533  011A4E  0100               	movlb	0	; () banked
  9534  011A50  6F73               	movwf	(USB_CDC_task@length+1)& (0+255),b
  9535  011A52  0E00               	movlw	0
  9536  011A54  6F72               	movwf	USB_CDC_task@length& (0+255),b
  9537                           
  9538                           ;My_usb_cdc.c: 76: while (ringbuf_num(&usb_tx)) {
  9539  011A56  D01F               	goto	l9488
  9540  011A58                     l9480:
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;My_usb_cdc.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
  9544  011A58  0E74               	movlw	low _usb_tx
  9545  011A5A  0100               	movlb	0	; () banked
  9546  011A5C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  9547  011A5E  0E01               	movlw	high _usb_tx
  9548  011A60  0100               	movlb	0	; () banked
  9549  011A62  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9550  011A64  EC25  F094         	call	_ringbuf_pop	;wreg free
  9551  011A68  0100               	movlb	0	; () banked
  9552  011A6A  6F6F               	movwf	??_USB_CDC_task& (0+255),b
  9553  011A6C  0E64               	movlw	low _writeBuffer
  9554  011A6E  0100               	movlb	0	; () banked
  9555  011A70  2572               	addwf	USB_CDC_task@length& (0+255),w,b
  9556  011A72  6ED9               	movwf	fsr2l,c
  9557  011A74  0E03               	movlw	high _writeBuffer
  9558  011A76  0100               	movlb	0	; () banked
  9559  011A78  2173               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
  9560  011A7A  6EDA               	movwf	fsr2h,c
  9561  011A7C  C06F  FFDF         	movff	??_USB_CDC_task,indf2
  9562                           
  9563                           ; BSR set to: 0
  9564  011A80  0100               	movlb	0	; () banked
  9565  011A82  4B72               	infsnz	USB_CDC_task@length& (0+255),f,b
  9566  011A84  2B73               	incf	(USB_CDC_task@length+1)& (0+255),f,b
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;My_usb_cdc.c: 78: if (length >= 64) {
  9570  011A86  0100               	movlb	0	; () banked
  9571  011A88  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  9572  011A8A  E113               	bnz	l9490
  9573  011A8C  0E40               	movlw	64
  9574  011A8E  0100               	movlb	0	; () banked
  9575  011A90  5D72               	subwf	USB_CDC_task@length& (0+255),w,b
  9576  011A92  B0D8               	btfsc	status,0,c
  9577  011A94  D00E               	goto	l9490
  9578  011A96                     l9488:
  9579                           
  9580                           ; BSR set to: 0
  9581  011A96  0E74               	movlw	low _usb_tx
  9582  011A98  0100               	movlb	0	; () banked
  9583  011A9A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9584  011A9C  0E01               	movlw	high _usb_tx
  9585  011A9E  0100               	movlb	0	; () banked
  9586  011AA0  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9587  011AA2  EC07  F08F         	call	_ringbuf_num	;wreg free
  9588  011AA6  0100               	movlb	0	; () banked
  9589  011AA8  5160               	movf	?_ringbuf_num& (0+255),w,b
  9590  011AAA  0100               	movlb	0	; () banked
  9591  011AAC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9592  011AAE  A4D8               	btfss	status,2,c
  9593  011AB0  D7D3               	goto	l9480
  9594  011AB2                     l9490:
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;My_usb_cdc.c: 80: }
  9598                           ;My_usb_cdc.c: 81: }
  9599                           ;My_usb_cdc.c: 82: if (length) {
  9600  011AB2  0100               	movlb	0	; () banked
  9601  011AB4  5172               	movf	USB_CDC_task@length& (0+255),w,b
  9602  011AB6  0100               	movlb	0	; () banked
  9603  011AB8  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  9604  011ABA  B4D8               	btfsc	status,2,c
  9605  011ABC  D006               	goto	l1382
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;My_usb_cdc.c: 83: USB_CDC_send(length);
  9609  011ABE  C072  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
  9610  011AC2  C073  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
  9611  011AC6  EC33  F0A0         	call	_USB_CDC_send	;wreg free
  9612  011ACA                     l1382:
  9613                           
  9614                           ;My_usb_cdc.c: 84: }
  9615                           ;My_usb_cdc.c: 86: length = USB_CDC_get();
  9616  011ACA  ECAB  F09F         	call	_USB_CDC_get	;wreg free
  9617  011ACE  0100               	movlb	0	; () banked
  9618  011AD0  6F6F               	movwf	??_USB_CDC_task& (0+255),b
  9619  011AD2  0100               	movlb	0	; () banked
  9620  011AD4  516F               	movf	??_USB_CDC_task& (0+255),w,b
  9621  011AD6  0100               	movlb	0	; () banked
  9622  011AD8  6F72               	movwf	USB_CDC_task@length& (0+255),b
  9623  011ADA  6B73               	clrf	(USB_CDC_task@length+1)& (0+255),b
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;My_usb_cdc.c: 87: if (length) {
  9627  011ADC  0100               	movlb	0	; () banked
  9628  011ADE  5172               	movf	USB_CDC_task@length& (0+255),w,b
  9629  011AE0  0100               	movlb	0	; () banked
  9630  011AE2  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  9631  011AE4  B4D8               	btfsc	status,2,c
  9632  011AE6  0012               	return	
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;My_usb_cdc.c: 88: for (uint16_t i = 0; i < length; i++) {
  9636  011AE8  0E00               	movlw	0
  9637  011AEA  0100               	movlb	0	; () banked
  9638  011AEC  6F71               	movwf	(USB_CDC_task@i+1)& (0+255),b
  9639  011AEE  0E00               	movlw	0
  9640  011AF0  6F70               	movwf	USB_CDC_task@i& (0+255),b
  9641  011AF2  D016               	goto	l9502
  9642  011AF4                     l9498:
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;My_usb_cdc.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
  9646  011AF4  0E6C               	movlw	low _usb_rx
  9647  011AF6  0100               	movlb	0	; () banked
  9648  011AF8  6F68               	movwf	ringbuf_put@rb& (0+255),b
  9649  011AFA  0E01               	movlw	high _usb_rx
  9650  011AFC  0100               	movlb	0	; () banked
  9651  011AFE  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  9652  011B00  0E80               	movlw	low _readBuffer
  9653  011B02  0100               	movlb	0	; () banked
  9654  011B04  2570               	addwf	USB_CDC_task@i& (0+255),w,b
  9655  011B06  6ED9               	movwf	fsr2l,c
  9656  011B08  0E02               	movlw	high _readBuffer
  9657  011B0A  0100               	movlb	0	; () banked
  9658  011B0C  2171               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
  9659  011B0E  6EDA               	movwf	fsr2h,c
  9660  011B10  50DF               	movf	indf2,w,c
  9661  011B12  0100               	movlb	0	; () banked
  9662  011B14  6F6A               	movwf	ringbuf_put@data& (0+255),b
  9663  011B16  ECEB  F092         	call	_ringbuf_put	;wreg free
  9664  011B1A  0100               	movlb	0	; () banked
  9665  011B1C  4B70               	infsnz	USB_CDC_task@i& (0+255),f,b
  9666  011B1E  2B71               	incf	(USB_CDC_task@i+1)& (0+255),f,b
  9667  011B20                     l9502:
  9668                           
  9669                           ; BSR set to: 0
  9670  011B20  0100               	movlb	0	; () banked
  9671  011B22  5172               	movf	USB_CDC_task@length& (0+255),w,b
  9672  011B24  0100               	movlb	0	; () banked
  9673  011B26  5D70               	subwf	USB_CDC_task@i& (0+255),w,b
  9674  011B28  0100               	movlb	0	; () banked
  9675  011B2A  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  9676  011B2C  0100               	movlb	0	; () banked
  9677  011B2E  5971               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
  9678  011B30  B0D8               	btfsc	status,0,c
  9679  011B32  0012               	return	
  9680  011B34  D7DF               	goto	l9498
  9681  011B36                     __end_of_USB_CDC_task:
  9682                           	opt stack 0
  9683                           tblptru	equ	0xFF8
  9684                           tblptrh	equ	0xFF7
  9685                           tblptrl	equ	0xFF6
  9686                           tablat	equ	0xFF5
  9687                           prodh	equ	0xFF4
  9688                           prodl	equ	0xFF3
  9689                           intcon	equ	0xFF2
  9690                           intcon2	equ	0xFF1
  9691                           indf0	equ	0xFEF
  9692                           postinc0	equ	0xFEE
  9693                           fsr0h	equ	0xFEA
  9694                           fsr0l	equ	0xFE9
  9695                           wreg	equ	0xFE8
  9696                           postinc1	equ	0xFE6
  9697                           postdec1	equ	0xFE5
  9698                           fsr1h	equ	0xFE2
  9699                           fsr1l	equ	0xFE1
  9700                           indf2	equ	0xFDF
  9701                           postinc2	equ	0xFDE
  9702                           postdec2	equ	0xFDD
  9703                           fsr2h	equ	0xFDA
  9704                           fsr2l	equ	0xFD9
  9705                           status	equ	0xFD8
  9706                           
  9707 ;; *************** function _ringbuf_put *****************
  9708 ;; Defined at:
  9709 ;;		line 20 in file "../My_library/My_ringbuf.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9712 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), terminal_task@command(8), 
  9713 ;;		 -> lcd_tx(8), 
  9714 ;;  data            1   10[BANK0 ] unsigned char 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;		None
  9717 ;; Return value:  Size  Location     Type
  9718 ;;		None               void
  9719 ;; Registers used:
  9720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9726 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9728 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9729 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9730 ;;Total ram usage:        7 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; Hardware stack levels required when called:   13
  9733 ;; This function calls:
  9734 ;;		_ringbuf_num
  9735 ;; This function is called by:
  9736 ;;		_ringbuf_put_num
  9737 ;;		_ringbuf_put_str
  9738 ;;		_terminal_task
  9739 ;;		_USB_CDC_task
  9740 ;;		_ST7032_command
  9741 ;;		_ST7032_put
  9742 ;;		_ST7032_create_char
  9743 ;;		_ST7032_init
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text43
  9748  0125D6                     __ptext43:
  9749                           	opt stack 0
  9750  0125D6                     _ringbuf_put:
  9751                           	opt stack 12
  9752                           
  9753                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  9754                           
  9755                           ;incstack = 0
  9756  0125D6  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  9757  0125DA  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  9758  0125DE  EC07  F08F         	call	_ringbuf_num	;wreg free
  9759  0125E2  0100               	movlb	0	; () banked
  9760  0125E4  EE20 F002          	lfsr	2,2
  9761  0125E8  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9762  0125EA  26D9               	addwf	fsr2l,f,c
  9763  0125EC  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9764  0125EE  22DA               	addwfc	fsr2h,f,c
  9765  0125F0  50DE               	movf	postinc2,w,c
  9766  0125F2  0100               	movlb	0	; () banked
  9767  0125F4  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  9768  0125F6  50DE               	movf	postinc2,w,c
  9769  0125F8  0100               	movlb	0	; () banked
  9770  0125FA  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  9771  0125FC  B0D8               	btfsc	status,0,c
  9772  0125FE  0012               	return	
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
  9776  012600  0100               	movlb	0	; () banked
  9777  012602  EE20 F004          	lfsr	2,4
  9778  012606  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9779  012608  26D9               	addwf	fsr2l,f,c
  9780  01260A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9781  01260C  22DA               	addwfc	fsr2h,f,c
  9782  01260E  CFDE F06B          	movff	postinc2,??_ringbuf_put
  9783  012612  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  9784  012616  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  9785  01261A  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  9786  01261E  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  9787  012622  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  9788  012626  0100               	movlb	0	; () banked
  9789  012628  516B               	movf	??_ringbuf_put& (0+255),w,b
  9790  01262A  0100               	movlb	0	; () banked
  9791  01262C  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  9792  01262E  6ED9               	movwf	fsr2l,c
  9793  012630  0100               	movlb	0	; () banked
  9794  012632  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  9795  012634  0100               	movlb	0	; () banked
  9796  012636  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  9797  012638  6EDA               	movwf	fsr2h,c
  9798  01263A  C06A  FFDF         	movff	ringbuf_put@data,indf2
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  9802  01263E  0100               	movlb	0	; () banked
  9803  012640  EE20 F002          	lfsr	2,2
  9804  012644  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9805  012646  26D9               	addwf	fsr2l,f,c
  9806  012648  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9807  01264A  22DA               	addwfc	fsr2h,f,c
  9808  01264C  0100               	movlb	0	; () banked
  9809  01264E  EE10 F004          	lfsr	1,4
  9810  012652  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9811  012654  26E1               	addwf	fsr1l,f,c
  9812  012656  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9813  012658  22E2               	addwfc	fsr1h,f,c
  9814  01265A  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  9815  01265E  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  9816  012662  0E01               	movlw	1
  9817  012664  0100               	movlb	0	; () banked
  9818  012666  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  9819  012668  0E00               	movlw	0
  9820  01266A  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  9821  01266C  50DE               	movf	postinc2,w,c
  9822  01266E  0100               	movlb	0	; () banked
  9823  012670  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  9824  012672  50DE               	movf	postinc2,w,c
  9825  012674  0100               	movlb	0	; () banked
  9826  012676  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  9827  012678  B0D8               	btfsc	status,0,c
  9828  01267A  D00B               	goto	l8304
  9829                           
  9830                           ; BSR set to: 0
  9831  01267C  0100               	movlb	0	; () banked
  9832  01267E  EE20 F004          	lfsr	2,4
  9833  012682  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9834  012684  26D9               	addwf	fsr2l,f,c
  9835  012686  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9836  012688  22DA               	addwfc	fsr2h,f,c
  9837  01268A  2ADE               	incf	postinc2,f,c
  9838  01268C  0E00               	movlw	0
  9839  01268E  22DD               	addwfc	postdec2,f,c
  9840  012690  0012               	return	
  9841  012692                     l8304:
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;My_ringbuf.c: 24: else rb->head = 0;
  9845  012692  0100               	movlb	0	; () banked
  9846  012694  EE20 F004          	lfsr	2,4
  9847  012698  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9848  01269A  26D9               	addwf	fsr2l,f,c
  9849  01269C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9850  01269E  22DA               	addwfc	fsr2h,f,c
  9851  0126A0  0E00               	movlw	0
  9852  0126A2  6EDE               	movwf	postinc2,c
  9853  0126A4  0E00               	movlw	0
  9854  0126A6  6EDD               	movwf	postdec2,c
  9855                           
  9856                           ; BSR set to: 0
  9857  0126A8  0012               	return	
  9858  0126AA                     __end_of_ringbuf_put:
  9859                           	opt stack 0
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           intcon2	equ	0xFF1
  9868                           indf0	equ	0xFEF
  9869                           postinc0	equ	0xFEE
  9870                           fsr0h	equ	0xFEA
  9871                           fsr0l	equ	0xFE9
  9872                           wreg	equ	0xFE8
  9873                           postinc1	equ	0xFE6
  9874                           postdec1	equ	0xFE5
  9875                           fsr1h	equ	0xFE2
  9876                           fsr1l	equ	0xFE1
  9877                           indf2	equ	0xFDF
  9878                           postinc2	equ	0xFDE
  9879                           postdec2	equ	0xFDD
  9880                           fsr2h	equ	0xFDA
  9881                           fsr2l	equ	0xFD9
  9882                           status	equ	0xFD8
  9883                           
  9884 ;; *************** function _ringbuf_pop *****************
  9885 ;; Defined at:
  9886 ;;		line 45 in file "../My_library/My_ringbuf.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9889 ;;		 -> usb_rx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
  9890 ;;		 -> lcd_tx(8), 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  ret             1   14[BANK0 ] unsigned char 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      unsigned char 
  9895 ;; Registers used:
  9896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9904 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9905 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9906 ;;Total ram usage:        7 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:   13
  9909 ;; This function calls:
  9910 ;;		_ringbuf_num
  9911 ;; This function is called by:
  9912 ;;		_terminal_task
  9913 ;;		_USB_CDC_task
  9914 ;;		_ST7032_task
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text44
  9919  01284A                     __ptext44:
  9920                           	opt stack 0
  9921  01284A                     _ringbuf_pop:
  9922                           	opt stack 16
  9923                           
  9924                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;incstack = 0
  9928  01284A  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  9929  01284E  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  9930  012852  EC07  F08F         	call	_ringbuf_num	;wreg free
  9931  012856  0100               	movlb	0	; () banked
  9932  012858  5160               	movf	?_ringbuf_num& (0+255),w,b
  9933  01285A  0100               	movlb	0	; () banked
  9934  01285C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9935  01285E  B4D8               	btfsc	status,2,c
  9936  012860  D058               	goto	l9148
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  9940  012862  0100               	movlb	0	; () banked
  9941  012864  EE20 F006          	lfsr	2,6
  9942  012868  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9943  01286A  26D9               	addwf	fsr2l,f,c
  9944  01286C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9945  01286E  22DA               	addwfc	fsr2h,f,c
  9946  012870  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  9947  012874  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  9948  012878  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  9949  01287C  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  9950  012880  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  9951  012884  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  9952  012888  0100               	movlb	0	; () banked
  9953  01288A  516A               	movf	??_ringbuf_pop& (0+255),w,b
  9954  01288C  0100               	movlb	0	; () banked
  9955  01288E  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  9956  012890  6ED9               	movwf	fsr2l,c
  9957  012892  0100               	movlb	0	; () banked
  9958  012894  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  9959  012896  0100               	movlb	0	; () banked
  9960  012898  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  9961  01289A  6EDA               	movwf	fsr2h,c
  9962  01289C  50DF               	movf	indf2,w,c
  9963  01289E  0100               	movlb	0	; () banked
  9964  0128A0  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  9968  0128A2  0100               	movlb	0	; () banked
  9969  0128A4  EE20 F002          	lfsr	2,2
  9970  0128A8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9971  0128AA  26D9               	addwf	fsr2l,f,c
  9972  0128AC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9973  0128AE  22DA               	addwfc	fsr2h,f,c
  9974  0128B0  0100               	movlb	0	; () banked
  9975  0128B2  EE10 F006          	lfsr	1,6
  9976  0128B6  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9977  0128B8  26E1               	addwf	fsr1l,f,c
  9978  0128BA  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9979  0128BC  22E2               	addwfc	fsr1h,f,c
  9980  0128BE  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  9981  0128C2  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  9982  0128C6  0E01               	movlw	1
  9983  0128C8  0100               	movlb	0	; () banked
  9984  0128CA  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  9985  0128CC  0E00               	movlw	0
  9986  0128CE  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  9987  0128D0  50DE               	movf	postinc2,w,c
  9988  0128D2  0100               	movlb	0	; () banked
  9989  0128D4  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  9990  0128D6  50DE               	movf	postinc2,w,c
  9991  0128D8  0100               	movlb	0	; () banked
  9992  0128DA  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  9993  0128DC  B0D8               	btfsc	status,0,c
  9994  0128DE  D00B               	goto	l9140
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;My_ringbuf.c: 49: rb->tail++;
  9998  0128E0  0100               	movlb	0	; () banked
  9999  0128E2  EE20 F006          	lfsr	2,6
 10000  0128E6  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10001  0128E8  26D9               	addwf	fsr2l,f,c
 10002  0128EA  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10003  0128EC  22DA               	addwfc	fsr2h,f,c
 10004  0128EE  2ADE               	incf	postinc2,f,c
 10005  0128F0  0E00               	movlw	0
 10006  0128F2  22DD               	addwfc	postdec2,f,c
 10007                           
 10008                           ;My_ringbuf.c: 50: } else {
 10009  0128F4  D00B               	goto	l9142
 10010  0128F6                     l9140:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;My_ringbuf.c: 51: rb->tail = 0;
 10014  0128F6  0100               	movlb	0	; () banked
 10015  0128F8  EE20 F006          	lfsr	2,6
 10016  0128FC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10017  0128FE  26D9               	addwf	fsr2l,f,c
 10018  012900  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10019  012902  22DA               	addwfc	fsr2h,f,c
 10020  012904  0E00               	movlw	0
 10021  012906  6EDE               	movwf	postinc2,c
 10022  012908  0E00               	movlw	0
 10023  01290A  6EDD               	movwf	postdec2,c
 10024  01290C                     l9142:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;My_ringbuf.c: 52: }
 10028                           ;My_ringbuf.c: 53: return ret;
 10029  01290C  0100               	movlb	0	; () banked
 10030  01290E  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;My_ringbuf.c: 54: } else {
 10034                           
 10035                           ; BSR set to: 0
 10036  012910  0012               	return	
 10037  012912                     l9148:
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;My_ringbuf.c: 55: return 0;
 10041  012912  0E00               	movlw	0
 10042                           
 10043                           ; BSR set to: 0
 10044  012914  0012               	return	
 10045  012916                     __end_of_ringbuf_pop:
 10046                           	opt stack 0
 10047                           tblptru	equ	0xFF8
 10048                           tblptrh	equ	0xFF7
 10049                           tblptrl	equ	0xFF6
 10050                           tablat	equ	0xFF5
 10051                           prodh	equ	0xFF4
 10052                           prodl	equ	0xFF3
 10053                           intcon	equ	0xFF2
 10054                           intcon2	equ	0xFF1
 10055                           indf0	equ	0xFEF
 10056                           postinc0	equ	0xFEE
 10057                           fsr0h	equ	0xFEA
 10058                           fsr0l	equ	0xFE9
 10059                           wreg	equ	0xFE8
 10060                           postinc1	equ	0xFE6
 10061                           postdec1	equ	0xFE5
 10062                           fsr1h	equ	0xFE2
 10063                           fsr1l	equ	0xFE1
 10064                           indf2	equ	0xFDF
 10065                           postinc2	equ	0xFDE
 10066                           postdec2	equ	0xFDD
 10067                           fsr2h	equ	0xFDA
 10068                           fsr2l	equ	0xFD9
 10069                           status	equ	0xFD8
 10070                           
 10071 ;; *************** function _USB_CDC_send *****************
 10072 ;; Defined at:
 10073 ;;		line 94 in file "../My_library/My_usb_cdc.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  length          2   12[BANK0 ] unsigned int 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;		None               void
 10080 ;; Registers used:
 10081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10091 ;;Total ram usage:        2 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:   14
 10094 ;; This function calls:
 10095 ;;		_CDCTxService
 10096 ;;		_putUSBUSART
 10097 ;; This function is called by:
 10098 ;;		_USB_CDC_task
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           	psect	text45
 10103  014066                     __ptext45:
 10104                           	opt stack 0
 10105  014066                     _USB_CDC_send:
 10106                           	opt stack 15
 10107                           
 10108                           ;My_usb_cdc.c: 95: if ((cdc_trf_state == 0) == 1) {
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;incstack = 0
 10112  014066  5044               	movf	_cdc_trf_state,w,c
 10113  014068  A4D8               	btfss	status,2,c
 10114  01406A  D00A               	goto	l9254
 10115                           
 10116                           ;My_usb_cdc.c: 96: putUSBUSART(writeBuffer, length);
 10117  01406C  0E64               	movlw	low _writeBuffer
 10118  01406E  0100               	movlb	0	; () banked
 10119  014070  6F60               	movwf	putUSBUSART@data& (0+255),b
 10120  014072  0E03               	movlw	high _writeBuffer
 10121  014074  0100               	movlb	0	; () banked
 10122  014076  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 10123  014078  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
 10124  01407C  EC22  F0A0         	call	_putUSBUSART	;wreg free
 10125  014080                     l9254:
 10126                           
 10127                           ;My_usb_cdc.c: 97: }
 10128                           ;My_usb_cdc.c: 98: CDCTxService();
 10129  014080  EC3A  F089         	call	_CDCTxService	;wreg free
 10130  014084  0012               	return		;funcret
 10131  014086                     __end_of_USB_CDC_send:
 10132                           	opt stack 0
 10133                           tblptru	equ	0xFF8
 10134                           tblptrh	equ	0xFF7
 10135                           tblptrl	equ	0xFF6
 10136                           tablat	equ	0xFF5
 10137                           prodh	equ	0xFF4
 10138                           prodl	equ	0xFF3
 10139                           intcon	equ	0xFF2
 10140                           intcon2	equ	0xFF1
 10141                           indf0	equ	0xFEF
 10142                           postinc0	equ	0xFEE
 10143                           fsr0h	equ	0xFEA
 10144                           fsr0l	equ	0xFE9
 10145                           wreg	equ	0xFE8
 10146                           postinc1	equ	0xFE6
 10147                           postdec1	equ	0xFE5
 10148                           fsr1h	equ	0xFE2
 10149                           fsr1l	equ	0xFE1
 10150                           indf2	equ	0xFDF
 10151                           postinc2	equ	0xFDE
 10152                           postdec2	equ	0xFDD
 10153                           fsr2h	equ	0xFDA
 10154                           fsr2l	equ	0xFD9
 10155                           status	equ	0xFD8
 10156                           
 10157 ;; *************** function _putUSBUSART *****************
 10158 ;; Defined at:
 10159 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10162 ;;		 -> writeBuffer(64), 
 10163 ;;  length          1    2[BANK0 ] unsigned char 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;		None               void
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10175 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10178 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10179 ;;Total ram usage:        3 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:   12
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_USB_CDC_send
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text46
 10190  014044                     __ptext46:
 10191                           	opt stack 0
 10192  014044                     _putUSBUSART:
 10193                           	opt stack 16
 10194                           
 10195                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 10196                           
 10197                           ;incstack = 0
 10198  014044  98A0               	bcf	4000,4,c	;volatile
 10199                           
 10200                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 10201  014046  5044               	movf	_cdc_trf_state,w,c
 10202  014048  A4D8               	btfss	status,2,c
 10203  01404A  D00B               	goto	l8920
 10204                           
 10205                           ;usb_device_cdc.c: 640: {
 10206                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10207  01404C  C060  F0ED         	movff	putUSBUSART@data,_pCDCSrc
 10208  014050  C061  F0EE         	movff	putUSBUSART@data+1,_pCDCSrc+1
 10209  014054  C062  F0F8         	movff	putUSBUSART@length,_cdc_tx_len
 10210  014058  0E01               	movlw	1
 10211  01405A  0100               	movlb	0	; () banked
 10212  01405C  6FF6               	movwf	_cdc_mem_type& (0+255),b
 10213                           
 10214                           ; BSR set to: 0
 10215  01405E  0E01               	movlw	1
 10216  014060  6E44               	movwf	_cdc_trf_state,c
 10217  014062                     l8920:
 10218                           
 10219                           ;usb_device_cdc.c: 642: }
 10220                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 10221  014062  88A0               	bsf	4000,4,c	;volatile
 10222  014064  0012               	return		;funcret
 10223  014066                     __end_of_putUSBUSART:
 10224                           	opt stack 0
 10225                           tblptru	equ	0xFF8
 10226                           tblptrh	equ	0xFF7
 10227                           tblptrl	equ	0xFF6
 10228                           tablat	equ	0xFF5
 10229                           prodh	equ	0xFF4
 10230                           prodl	equ	0xFF3
 10231                           intcon	equ	0xFF2
 10232                           intcon2	equ	0xFF1
 10233                           indf0	equ	0xFEF
 10234                           postinc0	equ	0xFEE
 10235                           fsr0h	equ	0xFEA
 10236                           fsr0l	equ	0xFE9
 10237                           wreg	equ	0xFE8
 10238                           postinc1	equ	0xFE6
 10239                           postdec1	equ	0xFE5
 10240                           fsr1h	equ	0xFE2
 10241                           fsr1l	equ	0xFE1
 10242                           indf2	equ	0xFDF
 10243                           postinc2	equ	0xFDE
 10244                           postdec2	equ	0xFDD
 10245                           fsr2h	equ	0xFDA
 10246                           fsr2l	equ	0xFD9
 10247                           status	equ	0xFD8
 10248                           
 10249 ;; *************** function _USB_CDC_get *****************
 10250 ;; Defined at:
 10251 ;;		line 101 in file "../My_library/My_usb_cdc.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;		None
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      unsigned char 
 10258 ;; Registers used:
 10259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10268 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10269 ;;Total ram usage:        1 bytes
 10270 ;; Hardware stack levels used:    1
 10271 ;; Hardware stack levels required when called:   14
 10272 ;; This function calls:
 10273 ;;		_CDCTxService
 10274 ;;		_getsUSBUSART
 10275 ;; This function is called by:
 10276 ;;		_USB_CDC_task
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text47
 10281  013F56                     __ptext47:
 10282                           	opt stack 0
 10283  013F56                     _USB_CDC_get:
 10284                           	opt stack 15
 10285                           
 10286                           ;My_usb_cdc.c: 102: uint8_t numBytesRead;
 10287                           ;My_usb_cdc.c: 103: if ((cdc_trf_state == 0) == 1) {
 10288                           
 10289                           ;incstack = 0
 10290  013F56  5044               	movf	_cdc_trf_state,w,c
 10291  013F58  A4D8               	btfss	status,2,c
 10292  013F5A  D00D               	goto	l1393
 10293                           
 10294                           ;My_usb_cdc.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
 10295  013F5C  0E80               	movlw	low _readBuffer
 10296  013F5E  0100               	movlb	0	; () banked
 10297  013F60  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 10298  013F62  0E02               	movlw	high _readBuffer
 10299  013F64  0100               	movlb	0	; () banked
 10300  013F66  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 10301  013F68  0E40               	movlw	64
 10302  013F6A  0100               	movlb	0	; () banked
 10303  013F6C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10304  013F6E  EC7E  F08F         	call	_getsUSBUSART	;wreg free
 10305  013F72  0100               	movlb	0	; () banked
 10306  013F74  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
 10307  013F76                     l1393:
 10308                           
 10309                           ;My_usb_cdc.c: 105: }
 10310                           ;My_usb_cdc.c: 106: CDCTxService();
 10311  013F76  EC3A  F089         	call	_CDCTxService	;wreg free
 10312                           
 10313                           ;My_usb_cdc.c: 107: return numBytesRead;
 10314  013F7A  0100               	movlb	0	; () banked
 10315  013F7C  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
 10316  013F7E  0012               	return	
 10317  013F80                     __end_of_USB_CDC_get:
 10318                           	opt stack 0
 10319                           tblptru	equ	0xFF8
 10320                           tblptrh	equ	0xFF7
 10321                           tblptrl	equ	0xFF6
 10322                           tablat	equ	0xFF5
 10323                           prodh	equ	0xFF4
 10324                           prodl	equ	0xFF3
 10325                           intcon	equ	0xFF2
 10326                           intcon2	equ	0xFF1
 10327                           indf0	equ	0xFEF
 10328                           postinc0	equ	0xFEE
 10329                           fsr0h	equ	0xFEA
 10330                           fsr0l	equ	0xFE9
 10331                           wreg	equ	0xFE8
 10332                           postinc1	equ	0xFE6
 10333                           postdec1	equ	0xFE5
 10334                           fsr1h	equ	0xFE2
 10335                           fsr1l	equ	0xFE1
 10336                           indf2	equ	0xFDF
 10337                           postinc2	equ	0xFDE
 10338                           postdec2	equ	0xFDD
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343 ;; *************** function _getsUSBUSART *****************
 10344 ;; Defined at:
 10345 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10348 ;;		 -> readBuffer(64), 
 10349 ;;  len             1    9[BANK0 ] unsigned char 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;		None
 10352 ;; Return value:  Size  Location     Type
 10353 ;;                  1    wreg      unsigned char 
 10354 ;; Registers used:
 10355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10361 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;Total ram usage:        6 bytes
 10366 ;; Hardware stack levels used:    1
 10367 ;; Hardware stack levels required when called:   13
 10368 ;; This function calls:
 10369 ;;		_USBTransferOnePacket
 10370 ;; This function is called by:
 10371 ;;		_USB_CDC_get
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text48
 10376  011EFC                     __ptext48:
 10377                           	opt stack 0
 10378  011EFC                     _getsUSBUSART:
 10379                           	opt stack 15
 10380                           
 10381                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;incstack = 0
 10385  011EFC  0E00               	movlw	0
 10386  011EFE  0100               	movlb	0	; () banked
 10387  011F00  6FF7               	movwf	_cdc_rx_len& (0+255),b
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10391  011F02  0100               	movlb	0	; () banked
 10392  011F04  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10393  011F06  0100               	movlb	0	; () banked
 10394  011F08  11F3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10395  011F0A  B4D8               	btfsc	status,2,c
 10396  011F0C  D013               	goto	l8886
 10397                           
 10398                           ; BSR set to: 0
 10399  011F0E  C0F2  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10400  011F12  C0F3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10401  011F16  0100               	movlb	0	; () banked
 10402  011F18  AEDF               	btfss	indf2,7,c
 10403  011F1A  D004               	goto	u8460
 10404  011F1C  0100               	movlb	0	; () banked
 10405  011F1E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10406  011F20  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 10407  011F22  D002               	goto	u8468
 10408  011F24                     u8460:
 10409  011F24  0100               	movlb	0	; () banked
 10410  011F26  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10411  011F28                     u8468:
 10412  011F28  0100               	movlb	0	; () banked
 10413  011F2A  516A               	movf	??_getsUSBUSART& (0+255),w,b
 10414  011F2C  0100               	movlb	0	; () banked
 10415  011F2E  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10416  011F30  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 10417  011F32  D005               	goto	l8888
 10418  011F34                     l8886:
 10419                           
 10420                           ; BSR set to: 0
 10421  011F34  0E00               	movlw	0
 10422  011F36  0100               	movlb	0	; () banked
 10423  011F38  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 10424  011F3A  0E00               	movlw	0
 10425  011F3C  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10426  011F3E                     l8888:
 10427                           
 10428                           ; BSR set to: 0
 10429  011F3E  0100               	movlb	0	; () banked
 10430  011F40  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 10431  011F42  0100               	movlb	0	; () banked
 10432  011F44  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 10433  011F46  A4D8               	btfss	status,2,c
 10434  011F48  D04B               	goto	l8904
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;usb_device_cdc.c: 547: {
 10438                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10439  011F4A  0100               	movlb	0	; () banked
 10440  011F4C  EE20 F001          	lfsr	2,1
 10441  011F50  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10442  011F52  26D9               	addwf	fsr2l,f,c
 10443  011F54  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10444  011F56  22DA               	addwfc	fsr2h,f,c
 10445  011F58  0100               	movlb	0	; () banked
 10446  011F5A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10447  011F5C  5CDE               	subwf	postinc2,w,c
 10448  011F5E  B0D8               	btfsc	status,0,c
 10449  011F60  D00A               	goto	l8894
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10453  011F62  0100               	movlb	0	; () banked
 10454  011F64  EE20 F001          	lfsr	2,1
 10455  011F68  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10456  011F6A  26D9               	addwf	fsr2l,f,c
 10457  011F6C  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10458  011F6E  22DA               	addwfc	fsr2h,f,c
 10459  011F70  50DF               	movf	indf2,w,c
 10460  011F72  0100               	movlb	0	; () banked
 10461  011F74  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10462  011F76                     l8894:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10466  011F76  0E00               	movlw	0
 10467  011F78  0100               	movlb	0	; () banked
 10468  011F7A  6FF7               	movwf	_cdc_rx_len& (0+255),b
 10469  011F7C  D018               	goto	l8900
 10470  011F7E                     l8896:
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10474  011F7E  0100               	movlb	0	; () banked
 10475  011F80  51F7               	movf	_cdc_rx_len& (0+255),w,b
 10476  011F82  0D01               	mullw	1
 10477  011F84  0E00               	movlw	low _cdc_data_rx
 10478  011F86  24F3               	addwf	prodl,w,c
 10479  011F88  6ED9               	movwf	fsr2l,c
 10480  011F8A  0E02               	movlw	high _cdc_data_rx
 10481  011F8C  20F4               	addwfc	prodh,w,c
 10482  011F8E  6EDA               	movwf	fsr2h,c
 10483  011F90  0100               	movlb	0	; () banked
 10484  011F92  51F7               	movf	_cdc_rx_len& (0+255),w,b
 10485  011F94  0D01               	mullw	1
 10486  011F96  50F3               	movf	prodl,w,c
 10487  011F98  0100               	movlb	0	; () banked
 10488  011F9A  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10489  011F9C  6EE1               	movwf	fsr1l,c
 10490  011F9E  50F4               	movf	prodh,w,c
 10491  011FA0  0100               	movlb	0	; () banked
 10492  011FA2  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10493  011FA4  6EE2               	movwf	fsr1h,c
 10494  011FA6  CFDF FFE7          	movff	indf2,indf1
 10495                           
 10496                           ; BSR set to: 0
 10497  011FAA  0100               	movlb	0	; () banked
 10498  011FAC  2BF7               	incf	_cdc_rx_len& (0+255),f,b
 10499  011FAE                     l8900:
 10500                           
 10501                           ; BSR set to: 0
 10502  011FAE  0100               	movlb	0	; () banked
 10503  011FB0  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10504  011FB2  0100               	movlb	0	; () banked
 10505  011FB4  5DF7               	subwf	_cdc_rx_len& (0+255),w,b
 10506  011FB6  A0D8               	btfss	status,0,c
 10507  011FB8  D7E2               	goto	l8896
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10511                           
 10512                           ; BSR set to: 0
 10513  011FBA  0E00               	movlw	0
 10514  011FBC  0100               	movlb	0	; () banked
 10515  011FBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10516  011FC0  0E00               	movlw	low _cdc_data_rx
 10517  011FC2  0100               	movlb	0	; () banked
 10518  011FC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10519  011FC6  0E02               	movlw	high _cdc_data_rx
 10520  011FC8  0100               	movlb	0	; () banked
 10521  011FCA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10522  011FCC  0E40               	movlw	64
 10523  011FCE  0100               	movlb	0	; () banked
 10524  011FD0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10525  011FD2  0E02               	movlw	2
 10526  011FD4  ECD3  F090         	call	_USBTransferOnePacket
 10527  011FD8  C060  F0F2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10528  011FDC  C061  F0F3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10529  011FE0                     l8904:
 10530                           
 10531                           ;usb_device_cdc.c: 567: }
 10532                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 10533  011FE0  0100               	movlb	0	; () banked
 10534  011FE2  51F7               	movf	_cdc_rx_len& (0+255),w,b
 10535  011FE4  0012               	return	
 10536  011FE6                     __end_of_getsUSBUSART:
 10537                           	opt stack 0
 10538                           tblptru	equ	0xFF8
 10539                           tblptrh	equ	0xFF7
 10540                           tblptrl	equ	0xFF6
 10541                           tablat	equ	0xFF5
 10542                           prodh	equ	0xFF4
 10543                           prodl	equ	0xFF3
 10544                           intcon	equ	0xFF2
 10545                           intcon2	equ	0xFF1
 10546                           indf0	equ	0xFEF
 10547                           postinc0	equ	0xFEE
 10548                           fsr0h	equ	0xFEA
 10549                           fsr0l	equ	0xFE9
 10550                           wreg	equ	0xFE8
 10551                           indf1	equ	0xFE7
 10552                           postinc1	equ	0xFE6
 10553                           postdec1	equ	0xFE5
 10554                           fsr1h	equ	0xFE2
 10555                           fsr1l	equ	0xFE1
 10556                           indf2	equ	0xFDF
 10557                           postinc2	equ	0xFDE
 10558                           postdec2	equ	0xFDD
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8
 10562                           
 10563 ;; *************** function _CDCTxService *****************
 10564 ;; Defined at:
 10565 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;		None
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 10570 ;;  i               1   10[BANK0 ] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;		None               void
 10573 ;; Registers used:
 10574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;Total ram usage:        5 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:   13
 10587 ;; This function calls:
 10588 ;;		_USBTransferOnePacket
 10589 ;; This function is called by:
 10590 ;;		_USB_CDC_send
 10591 ;;		_USB_CDC_get
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text49
 10596  011274                     __ptext49:
 10597                           	opt stack 0
 10598  011274                     _CDCTxService:
 10599                           	opt stack 15
 10600                           
 10601                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 10602                           ;usb_device_cdc.c: 896: uint8_t i;
 10603                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;incstack = 0
 10607  011274  98A0               	bcf	4000,4,c	;volatile
 10608                           
 10609                           ;usb_device_cdc.c: 900: {};
 10610                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 10611  011276  0100               	movlb	0	; () banked
 10612  011278  51F0               	movf	_CDCDataInHandle& (0+255),w,b
 10613  01127A  0100               	movlb	0	; () banked
 10614  01127C  11F1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 10615  01127E  B4D8               	btfsc	status,2,c
 10616  011280  D013               	goto	l8928
 10617                           
 10618                           ; BSR set to: 0
 10619  011282  C0F0  FFD9         	movff	_CDCDataInHandle,fsr2l
 10620  011286  C0F1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 10621  01128A  0100               	movlb	0	; () banked
 10622  01128C  AEDF               	btfss	indf2,7,c
 10623  01128E  D004               	goto	u8520
 10624  011290  0100               	movlb	0	; () banked
 10625  011292  6B67               	clrf	??_CDCTxService& (0+255),b
 10626  011294  2B67               	incf	??_CDCTxService& (0+255),f,b
 10627  011296  D002               	goto	u8528
 10628  011298                     u8520:
 10629  011298  0100               	movlb	0	; () banked
 10630  01129A  6B67               	clrf	??_CDCTxService& (0+255),b
 10631  01129C                     u8528:
 10632  01129C  0100               	movlb	0	; () banked
 10633  01129E  5167               	movf	??_CDCTxService& (0+255),w,b
 10634  0112A0  0100               	movlb	0	; () banked
 10635  0112A2  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10636  0112A4  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 10637  0112A6  D005               	goto	l8930
 10638  0112A8                     l8928:
 10639                           
 10640                           ; BSR set to: 0
 10641  0112A8  0E00               	movlw	0
 10642  0112AA  0100               	movlb	0	; () banked
 10643  0112AC  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 10644  0112AE  0E00               	movlw	0
 10645  0112B0  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10646  0112B2                     l8930:
 10647                           
 10648                           ; BSR set to: 0
 10649  0112B2  0100               	movlb	0	; () banked
 10650  0112B4  5168               	movf	_CDCTxService$2005& (0+255),w,b
 10651  0112B6  0100               	movlb	0	; () banked
 10652  0112B8  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 10653  0112BA  B4D8               	btfsc	status,2,c
 10654  0112BC  D002               	goto	l8934
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;usb_device_cdc.c: 903: {
 10658                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 10659  0112BE  88A0               	bsf	4000,4,c	;volatile
 10660                           
 10661                           ;usb_device_cdc.c: 905: return;
 10662  0112C0  0012               	return	
 10663  0112C2                     l8934:
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;usb_device_cdc.c: 906: }
 10667                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 10668  0112C2  0E03               	movlw	3
 10669  0112C4  1844               	xorwf	_cdc_trf_state,w,c
 10670  0112C6  A4D8               	btfss	status,2,c
 10671  0112C8  D002               	goto	l504
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 10675  0112CA  0E00               	movlw	0
 10676  0112CC  6E44               	movwf	_cdc_trf_state,c
 10677  0112CE                     l504:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 10681  0112CE  5044               	movf	_cdc_trf_state,w,c
 10682  0112D0  A4D8               	btfss	status,2,c
 10683  0112D2  D002               	goto	l8940
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;usb_device_cdc.c: 920: {
 10687                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 10688  0112D4  88A0               	bsf	4000,4,c	;volatile
 10689                           
 10690                           ;usb_device_cdc.c: 922: return;
 10691  0112D6  0012               	return	
 10692  0112D8                     l8940:
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;usb_device_cdc.c: 923: }
 10696                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 10697  0112D8  0E02               	movlw	2
 10698  0112DA  1844               	xorwf	_cdc_trf_state,w,c
 10699  0112DC  A4D8               	btfss	status,2,c
 10700  0112DE  D016               	goto	l8946
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;usb_device_cdc.c: 929: {
 10704                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 10705  0112E0  0E01               	movlw	1
 10706  0112E2  0100               	movlb	0	; () banked
 10707  0112E4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10708  0112E6  0E00               	movlw	0
 10709  0112E8  0100               	movlb	0	; () banked
 10710  0112EA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10711  0112EC  0E00               	movlw	0
 10712  0112EE  0100               	movlb	0	; () banked
 10713  0112F0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10714  0112F2  0E00               	movlw	0
 10715  0112F4  0100               	movlb	0	; () banked
 10716  0112F6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10717  0112F8  0E02               	movlw	2
 10718  0112FA  ECD3  F090         	call	_USBTransferOnePacket
 10719  0112FE  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10720  011302  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10721                           
 10722                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 10723  011306  0E03               	movlw	3
 10724  011308  6E44               	movwf	_cdc_trf_state,c
 10725                           
 10726                           ;usb_device_cdc.c: 933: }
 10727  01130A  D06F               	goto	l8990
 10728  01130C                     l8946:
 10729                           
 10730                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 10731  01130C  0444               	decf	_cdc_trf_state,w,c
 10732  01130E  A4D8               	btfss	status,2,c
 10733  011310  D06C               	goto	l8990
 10734                           
 10735                           ;usb_device_cdc.c: 935: {
 10736                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 10737  011312  0E40               	movlw	64
 10738  011314  0100               	movlb	0	; () banked
 10739  011316  65F8               	cpfsgt	_cdc_tx_len& (0+255),b
 10740  011318  D004               	goto	l509
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 10744  01131A  0E40               	movlw	64
 10745  01131C  0100               	movlb	0	; () banked
 10746  01131E  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 10747  011320  D002               	goto	l8952
 10748  011322                     l509:
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;usb_device_cdc.c: 941: else
 10752                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 10753  011322  C0F8  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 10754  011326                     l8952:
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 10758  011326  0100               	movlb	0	; () banked
 10759  011328  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 10760  01132A  0800               	sublw	0
 10761  01132C  0100               	movlb	0	; () banked
 10762  01132E  25F8               	addwf	_cdc_tx_len& (0+255),w,b
 10763  011330  0100               	movlb	0	; () banked
 10764  011332  6FF8               	movwf	_cdc_tx_len& (0+255),b
 10765                           
 10766                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 10767  011334  0E40               	movlw	low _cdc_data_tx
 10768  011336  0100               	movlb	0	; () banked
 10769  011338  6FEA               	movwf	_pCDCDst& (0+255),b
 10770  01133A  0E02               	movlw	high _cdc_data_tx
 10771  01133C  0100               	movlb	0	; () banked
 10772  01133E  6FEB               	movwf	(_pCDCDst+1)& (0+255),b
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;usb_device_cdc.c: 951: i = byte_to_send;
 10776  011340  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 10780  011344  0100               	movlb	0	; () banked
 10781  011346  51F6               	movf	_cdc_mem_type& (0+255),w,b
 10782  011348  B4D8               	btfsc	status,2,c
 10783  01134A  D013               	goto	l8968
 10784  01134C  D02A               	goto	l8978
 10785  01134E                     l8960:
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;usb_device_cdc.c: 955: {
 10789                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 10790  01134E  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 10791  011352  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 10792  011356  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 10793  01135A  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 10794  01135E  CFDF FFE7          	movff	indf2,indf1
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 10798  011362  0100               	movlb	0	; () banked
 10799  011364  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 10800  011366  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 10804  011368  0100               	movlb	0	; () banked
 10805  01136A  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 10806  01136C  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;usb_device_cdc.c: 959: i--;
 10810  01136E  0100               	movlb	0	; () banked
 10811  011370  076A               	decf	CDCTxService@i& (0+255),f,b
 10812  011372                     l8968:
 10813                           
 10814                           ; BSR set to: 0
 10815  011372  0100               	movlb	0	; () banked
 10816  011374  516A               	movf	CDCTxService@i& (0+255),w,b
 10817  011376  0100               	movlb	0	; () banked
 10818  011378  B4D8               	btfsc	status,2,c
 10819  01137A  D018               	goto	l8980
 10820  01137C  D7E8               	goto	l8960
 10821  01137E                     l8970:
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;usb_device_cdc.c: 965: {
 10825                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 10826  01137E  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 10827  011382  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 10828  011386  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 10829  01138A  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 10830  01138E  CFDF FFE7          	movff	indf2,indf1
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 10834  011392  0100               	movlb	0	; () banked
 10835  011394  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 10836  011396  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 10840  011398  0100               	movlb	0	; () banked
 10841  01139A  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 10842  01139C  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;usb_device_cdc.c: 969: i--;
 10846  01139E  0100               	movlb	0	; () banked
 10847  0113A0  076A               	decf	CDCTxService@i& (0+255),f,b
 10848  0113A2                     l8978:
 10849                           
 10850                           ; BSR set to: 0
 10851  0113A2  0100               	movlb	0	; () banked
 10852  0113A4  516A               	movf	CDCTxService@i& (0+255),w,b
 10853  0113A6  0100               	movlb	0	; () banked
 10854  0113A8  A4D8               	btfss	status,2,c
 10855  0113AA  D7E9               	goto	l8970
 10856  0113AC                     l8980:
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;usb_device_cdc.c: 970: }
 10860                           ;usb_device_cdc.c: 971: }
 10861                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 10862  0113AC  0100               	movlb	0	; () banked
 10863  0113AE  51F8               	movf	_cdc_tx_len& (0+255),w,b
 10864  0113B0  A4D8               	btfss	status,2,c
 10865  0113B2  D009               	goto	l8988
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;usb_device_cdc.c: 978: {
 10869                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 10870  0113B4  0E40               	movlw	64
 10871  0113B6  0100               	movlb	0	; () banked
 10872  0113B8  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 10873  0113BA  A4D8               	btfss	status,2,c
 10874  0113BC  D002               	goto	l8986
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 10878  0113BE  0E02               	movlw	2
 10879  0113C0  D001               	goto	L1
 10880  0113C2                     l8986:
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;usb_device_cdc.c: 981: else
 10884                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 10885  0113C2  0E03               	movlw	3
 10886  0113C4                     L1:
 10887  0113C4  6E44               	movwf	_cdc_trf_state,c
 10888  0113C6                     l8988:
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;usb_device_cdc.c: 983: }
 10892                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 10893  0113C6  0E01               	movlw	1
 10894  0113C8  0100               	movlb	0	; () banked
 10895  0113CA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10896  0113CC  0E40               	movlw	low _cdc_data_tx
 10897  0113CE  0100               	movlb	0	; () banked
 10898  0113D0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10899  0113D2  0E02               	movlw	high _cdc_data_tx
 10900  0113D4  0100               	movlb	0	; () banked
 10901  0113D6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10902  0113D8  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 10903  0113DC  0E02               	movlw	2
 10904  0113DE  ECD3  F090         	call	_USBTransferOnePacket
 10905  0113E2  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10906  0113E6  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10907  0113EA                     l8990:
 10908                           
 10909                           ;usb_device_cdc.c: 986: }
 10910                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 10911  0113EA  88A0               	bsf	4000,4,c	;volatile
 10912  0113EC  0012               	return		;funcret
 10913  0113EE                     __end_of_CDCTxService:
 10914                           	opt stack 0
 10915                           tblptru	equ	0xFF8
 10916                           tblptrh	equ	0xFF7
 10917                           tblptrl	equ	0xFF6
 10918                           tablat	equ	0xFF5
 10919                           prodh	equ	0xFF4
 10920                           prodl	equ	0xFF3
 10921                           intcon	equ	0xFF2
 10922                           intcon2	equ	0xFF1
 10923                           indf0	equ	0xFEF
 10924                           postinc0	equ	0xFEE
 10925                           fsr0h	equ	0xFEA
 10926                           fsr0l	equ	0xFE9
 10927                           wreg	equ	0xFE8
 10928                           indf1	equ	0xFE7
 10929                           postinc1	equ	0xFE6
 10930                           postdec1	equ	0xFE5
 10931                           fsr1h	equ	0xFE2
 10932                           fsr1l	equ	0xFE1
 10933                           indf2	equ	0xFDF
 10934                           postinc2	equ	0xFDE
 10935                           postdec2	equ	0xFDD
 10936                           fsr2h	equ	0xFDA
 10937                           fsr2l	equ	0xFD9
 10938                           status	equ	0xFD8
 10939                           
 10940 ;; *************** function _USBTransferOnePacket *****************
 10941 ;; Defined at:
 10942 ;;		line 996 in file "../My_library/usb/usb_device.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  ep              1    wreg     unsigned char 
 10945 ;;  dir             1    0[BANK0 ] unsigned char 
 10946 ;;  data            2    1[BANK0 ] PTR unsigned char 
 10947 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 10948 ;;  len             1    3[BANK0 ] unsigned char 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;  ep              1    4[BANK0 ] unsigned char 
 10951 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 10952 ;;		 -> NULL(0), BDT(48), 
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  2    0[BANK0 ] PTR void 
 10955 ;; Registers used:
 10956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;Total ram usage:        7 bytes
 10967 ;; Hardware stack levels used:    1
 10968 ;; Hardware stack levels required when called:   12
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		_getsUSBUSART
 10973 ;;		_CDCTxService
 10974 ;;		_USBCDCEventHandler
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text50
 10979  0121A6                     __ptext50:
 10980                           	opt stack 0
 10981  0121A6                     _USBTransferOnePacket:
 10982                           	opt stack 15
 10983                           
 10984                           ;incstack = 0
 10985                           ;USBTransferOnePacket@ep stored from wreg
 10986  0121A6  0100               	movlb	0	; () banked
 10987  0121A8  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 10988                           
 10989                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 10990                           ;usb_device.c: 1001: if(dir != 0)
 10991  0121AA  0100               	movlb	0	; () banked
 10992  0121AC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 10993  0121AE  0100               	movlb	0	; () banked
 10994  0121B0  B4D8               	btfsc	status,2,c
 10995  0121B2  D008               	goto	l8702
 10996                           
 10997                           ; BSR set to: 0
 10998                           ;usb_device.c: 1002: {
 10999                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 11000  0121B4  0100               	movlb	0	; () banked
 11001  0121B6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11002  0121B8  0D02               	mullw	2
 11003  0121BA  0ED8               	movlw	low _pBDTEntryIn
 11004  0121BC  24F3               	addwf	prodl,w,c
 11005  0121BE  6ED9               	movwf	fsr2l,c
 11006  0121C0  0E00               	movlw	high _pBDTEntryIn
 11007  0121C2  D007               	goto	L2
 11008  0121C4                     l8702:
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;usb_device.c: 1006: else
 11012                           ;usb_device.c: 1007: {
 11013                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 11014  0121C4  0100               	movlb	0	; () banked
 11015  0121C6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11016  0121C8  0D02               	mullw	2
 11017  0121CA  0EDE               	movlw	low _pBDTEntryOut
 11018  0121CC  24F3               	addwf	prodl,w,c
 11019  0121CE  6ED9               	movwf	fsr2l,c
 11020  0121D0  0E00               	movlw	high _pBDTEntryOut
 11021  0121D2                     L2:
 11022  0121D2  20F4               	addwfc	prodh,w,c
 11023  0121D4  6EDA               	movwf	fsr2h,c
 11024  0121D6  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 11025  0121DA  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;usb_device.c: 1010: }
 11029                           ;usb_device.c: 1014: if(handle == 0)
 11030                           
 11031                           ; BSR set to: 0
 11032  0121DE  0100               	movlb	0	; () banked
 11033  0121E0  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11034  0121E2  0100               	movlb	0	; () banked
 11035  0121E4  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11036  0121E6  A4D8               	btfss	status,2,c
 11037  0121E8  D007               	goto	l8710
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;usb_device.c: 1015: {
 11041                           ;usb_device.c: 1016: return 0;
 11042  0121EA  0E00               	movlw	0
 11043  0121EC  0100               	movlb	0	; () banked
 11044  0121EE  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 11045  0121F0  0E00               	movlw	0
 11046  0121F2  0100               	movlb	0	; () banked
 11047  0121F4  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 11048                           
 11049                           ; BSR set to: 0
 11050  0121F6  0012               	return	
 11051  0121F8                     l8710:
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;usb_device.c: 1017: }
 11055                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 11056  0121F8  0100               	movlb	0	; () banked
 11057  0121FA  EE20 F002          	lfsr	2,2
 11058  0121FE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11059  012200  26D9               	addwf	fsr2l,f,c
 11060  012202  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11061  012204  22DA               	addwfc	fsr2h,f,c
 11062  012206  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 11063  01220A  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 11064                           
 11065                           ;usb_device.c: 1031: handle->CNT = len;
 11066  01220E  0100               	movlb	0	; () banked
 11067  012210  EE20 F001          	lfsr	2,1
 11068  012214  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11069  012216  26D9               	addwf	fsr2l,f,c
 11070  012218  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11071  01221A  22DA               	addwfc	fsr2h,f,c
 11072  01221C  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 11076  012220  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11077  012224  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11078  012228  0E40               	movlw	64
 11079  01222A  16DF               	andwf	indf2,f,c
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 11083  01222C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11084  012230  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11085  012234  0E00               	movlw	0
 11086  012236  86DB               	bsf	plusw2,3,c
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 11090  012238  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11091  01223C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11092  012240  0E00               	movlw	0
 11093  012242  8EDB               	bsf	plusw2,7,c
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;usb_device.c: 1037: if(dir != 0)
 11097  012244  0100               	movlb	0	; () banked
 11098  012246  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11099  012248  0100               	movlb	0	; () banked
 11100  01224A  B4D8               	btfsc	status,2,c
 11101  01224C  D008               	goto	l8722
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;usb_device.c: 1038: {
 11105                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11106  01224E  0100               	movlb	0	; () banked
 11107  012250  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11108  012252  0D02               	mullw	2
 11109  012254  0ED8               	movlw	low _pBDTEntryIn
 11110  012256  24F3               	addwf	prodl,w,c
 11111  012258  6ED9               	movwf	fsr2l,c
 11112  01225A  0E00               	movlw	high _pBDTEntryIn
 11113  01225C  D007               	goto	L3
 11114  01225E                     l8722:
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;usb_device.c: 1042: else
 11118                           ;usb_device.c: 1043: {
 11119                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11120  01225E  0100               	movlb	0	; () banked
 11121  012260  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11122  012262  0D02               	mullw	2
 11123  012264  0EDE               	movlw	low _pBDTEntryOut
 11124  012266  24F3               	addwf	prodl,w,c
 11125  012268  6ED9               	movwf	fsr2l,c
 11126  01226A  0E00               	movlw	high _pBDTEntryOut
 11127  01226C                     L3:
 11128  01226C  20F4               	addwfc	prodh,w,c
 11129  01226E  6EDA               	movwf	fsr2h,c
 11130  012270  0E04               	movlw	4
 11131  012272  1ADF               	xorwf	indf2,f,c
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;usb_device.c: 1046: }
 11135                           ;usb_device.c: 1047: return (void*)handle;
 11136                           
 11137                           ; BSR set to: 0
 11138  012274  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11139  012278  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11140  01227C  0012               	return	
 11141  01227E                     __end_of_USBTransferOnePacket:
 11142                           	opt stack 0
 11143                           tblptru	equ	0xFF8
 11144                           tblptrh	equ	0xFF7
 11145                           tblptrl	equ	0xFF6
 11146                           tablat	equ	0xFF5
 11147                           prodh	equ	0xFF4
 11148                           prodl	equ	0xFF3
 11149                           intcon	equ	0xFF2
 11150                           intcon2	equ	0xFF1
 11151                           indf0	equ	0xFEF
 11152                           postinc0	equ	0xFEE
 11153                           fsr0h	equ	0xFEA
 11154                           fsr0l	equ	0xFE9
 11155                           wreg	equ	0xFE8
 11156                           indf1	equ	0xFE7
 11157                           postinc1	equ	0xFE6
 11158                           postdec1	equ	0xFE5
 11159                           fsr1h	equ	0xFE2
 11160                           fsr1l	equ	0xFE1
 11161                           indf2	equ	0xFDF
 11162                           postinc2	equ	0xFDE
 11163                           postdec2	equ	0xFDD
 11164                           plusw2	equ	0xFDB
 11165                           fsr2h	equ	0xFDA
 11166                           fsr2l	equ	0xFD9
 11167                           status	equ	0xFD8
 11168                           
 11169 ;; *************** function _UART_task *****************
 11170 ;; Defined at:
 11171 ;;		line 51 in file "../My_library/My_UART.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;		None
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;		None               void
 11178 ;; Registers used:
 11179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;Total ram usage:        0 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:   13
 11192 ;; This function calls:
 11193 ;;		_ringbuf_num
 11194 ;; This function is called by:
 11195 ;;		_main
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text51
 11200  014086                     __ptext51:
 11201                           	opt stack 0
 11202  014086                     _UART_task:
 11203                           	opt stack 17
 11204                           
 11205                           ;My_UART.c: 52: if (ringbuf_num(&uart_tx)) {
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;incstack = 0
 11209  014086  0E64               	movlw	low _uart_tx
 11210  014088  0100               	movlb	0	; () banked
 11211  01408A  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11212  01408C  0E01               	movlw	high _uart_tx
 11213  01408E  0100               	movlb	0	; () banked
 11214  014090  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11215  014092  EC07  F08F         	call	_ringbuf_num	;wreg free
 11216  014096  0100               	movlb	0	; () banked
 11217  014098  5160               	movf	?_ringbuf_num& (0+255),w,b
 11218  01409A  0100               	movlb	0	; () banked
 11219  01409C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11220  01409E  B4D8               	btfsc	status,2,c
 11221  0140A0  0012               	return	
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;My_UART.c: 53: PIE1bits.TXIE = 1;
 11225  0140A2  889D               	bsf	3997,4,c	;volatile
 11226  0140A4  0012               	return	
 11227  0140A6                     __end_of_UART_task:
 11228                           	opt stack 0
 11229                           tblptru	equ	0xFF8
 11230                           tblptrh	equ	0xFF7
 11231                           tblptrl	equ	0xFF6
 11232                           tablat	equ	0xFF5
 11233                           prodh	equ	0xFF4
 11234                           prodl	equ	0xFF3
 11235                           intcon	equ	0xFF2
 11236                           intcon2	equ	0xFF1
 11237                           indf0	equ	0xFEF
 11238                           postinc0	equ	0xFEE
 11239                           fsr0h	equ	0xFEA
 11240                           fsr0l	equ	0xFE9
 11241                           wreg	equ	0xFE8
 11242                           indf1	equ	0xFE7
 11243                           postinc1	equ	0xFE6
 11244                           postdec1	equ	0xFE5
 11245                           fsr1h	equ	0xFE2
 11246                           fsr1l	equ	0xFE1
 11247                           indf2	equ	0xFDF
 11248                           postinc2	equ	0xFDE
 11249                           postdec2	equ	0xFDD
 11250                           plusw2	equ	0xFDB
 11251                           fsr2h	equ	0xFDA
 11252                           fsr2l	equ	0xFD9
 11253                           status	equ	0xFD8
 11254                           
 11255 ;; *************** function _ringbuf_num *****************
 11256 ;; Defined at:
 11257 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11260 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
 11261 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  2    0[BANK0 ] unsigned int 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11275 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11277 ;;Total ram usage:        8 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:   12
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_ringbuf_put
 11284 ;;		_ringbuf_pop
 11285 ;;		_ringbuf_backspace
 11286 ;;		_terminal_task
 11287 ;;		_UART_task
 11288 ;;		_USB_CDC_task
 11289 ;;		_ST7032_task
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text52
 11294  011E0E                     __ptext52:
 11295                           	opt stack 0
 11296  011E0E                     _ringbuf_num:
 11297                           	opt stack 12
 11298                           
 11299                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;incstack = 0
 11303  011E0E  0100               	movlb	0	; () banked
 11304  011E10  EE20 F006          	lfsr	2,6
 11305  011E14  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11306  011E16  26D9               	addwf	fsr2l,f,c
 11307  011E18  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11308  011E1A  22DA               	addwfc	fsr2h,f,c
 11309  011E1C  0100               	movlb	0	; () banked
 11310  011E1E  EE10 F004          	lfsr	1,4
 11311  011E22  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11312  011E24  26E1               	addwf	fsr1l,f,c
 11313  011E26  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11314  011E28  22E2               	addwfc	fsr1h,f,c
 11315  011E2A  50DE               	movf	postinc2,w,c
 11316  011E2C  5CE6               	subwf	postinc1,w,c
 11317  011E2E  50DE               	movf	postinc2,w,c
 11318  011E30  58E6               	subwfb	postinc1,w,c
 11319  011E32  A0D8               	btfss	status,0,c
 11320  011E34  D028               	goto	l8200
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11324  011E36  0100               	movlb	0	; () banked
 11325  011E38  EE20 F004          	lfsr	2,4
 11326  011E3C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11327  011E3E  26D9               	addwf	fsr2l,f,c
 11328  011E40  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11329  011E42  22DA               	addwfc	fsr2h,f,c
 11330  011E44  CFDE F062          	movff	postinc2,??_ringbuf_num
 11331  011E48  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11332  011E4C  0100               	movlb	0	; () banked
 11333  011E4E  EE20 F006          	lfsr	2,6
 11334  011E52  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11335  011E54  26D9               	addwf	fsr2l,f,c
 11336  011E56  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11337  011E58  22DA               	addwfc	fsr2h,f,c
 11338  011E5A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11339  011E5E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11340  011E62  0100               	movlb	0	; () banked
 11341  011E64  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11342  011E66  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11343  011E68  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11344  011E6A  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11345  011E6C  0100               	movlb	0	; () banked
 11346  011E6E  5162               	movf	??_ringbuf_num& (0+255),w,b
 11347  011E70  0100               	movlb	0	; () banked
 11348  011E72  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11349  011E74  0100               	movlb	0	; () banked
 11350  011E76  6F60               	movwf	?_ringbuf_num& (0+255),b
 11351  011E78  0100               	movlb	0	; () banked
 11352  011E7A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11353  011E7C  0100               	movlb	0	; () banked
 11354  011E7E  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11355  011E80  0100               	movlb	0	; () banked
 11356  011E82  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;My_ringbuf.c: 15: } else {
 11360                           
 11361                           ; BSR set to: 0
 11362  011E84  0012               	return	
 11363  011E86                     l8200:
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11367  011E86  0100               	movlb	0	; () banked
 11368  011E88  EE20 F004          	lfsr	2,4
 11369  011E8C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11370  011E8E  26D9               	addwf	fsr2l,f,c
 11371  011E90  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11372  011E92  22DA               	addwfc	fsr2h,f,c
 11373  011E94  CFDE F062          	movff	postinc2,??_ringbuf_num
 11374  011E98  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11375  011E9C  0100               	movlb	0	; () banked
 11376  011E9E  EE20 F002          	lfsr	2,2
 11377  011EA2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11378  011EA4  26D9               	addwf	fsr2l,f,c
 11379  011EA6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11380  011EA8  22DA               	addwfc	fsr2h,f,c
 11381  011EAA  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11382  011EAE  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11383  011EB2  0100               	movlb	0	; () banked
 11384  011EB4  EE20 F006          	lfsr	2,6
 11385  011EB8  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11386  011EBA  26D9               	addwf	fsr2l,f,c
 11387  011EBC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11388  011EBE  22DA               	addwfc	fsr2h,f,c
 11389  011EC0  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 11390  011EC4  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 11391  011EC8  0100               	movlb	0	; () banked
 11392  011ECA  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 11393  011ECC  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 11394  011ECE  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 11395  011ED0  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 11396  011ED2  0100               	movlb	0	; () banked
 11397  011ED4  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 11398  011ED6  0100               	movlb	0	; () banked
 11399  011ED8  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 11400  011EDA  0100               	movlb	0	; () banked
 11401  011EDC  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 11402  011EDE  0100               	movlb	0	; () banked
 11403  011EE0  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 11404  011EE2  0100               	movlb	0	; () banked
 11405  011EE4  5162               	movf	??_ringbuf_num& (0+255),w,b
 11406  011EE6  0100               	movlb	0	; () banked
 11407  011EE8  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 11408  011EEA  0100               	movlb	0	; () banked
 11409  011EEC  6F60               	movwf	?_ringbuf_num& (0+255),b
 11410  011EEE  0100               	movlb	0	; () banked
 11411  011EF0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11412  011EF2  0100               	movlb	0	; () banked
 11413  011EF4  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 11414  011EF6  0100               	movlb	0	; () banked
 11415  011EF8  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11416                           
 11417                           ; BSR set to: 0
 11418  011EFA  0012               	return	
 11419  011EFC                     __end_of_ringbuf_num:
 11420                           	opt stack 0
 11421                           tblptru	equ	0xFF8
 11422                           tblptrh	equ	0xFF7
 11423                           tblptrl	equ	0xFF6
 11424                           tablat	equ	0xFF5
 11425                           prodh	equ	0xFF4
 11426                           prodl	equ	0xFF3
 11427                           intcon	equ	0xFF2
 11428                           intcon2	equ	0xFF1
 11429                           indf0	equ	0xFEF
 11430                           postinc0	equ	0xFEE
 11431                           fsr0h	equ	0xFEA
 11432                           fsr0l	equ	0xFE9
 11433                           wreg	equ	0xFE8
 11434                           indf1	equ	0xFE7
 11435                           postinc1	equ	0xFE6
 11436                           postdec1	equ	0xFE5
 11437                           fsr1h	equ	0xFE2
 11438                           fsr1l	equ	0xFE1
 11439                           indf2	equ	0xFDF
 11440                           postinc2	equ	0xFDE
 11441                           postdec2	equ	0xFDD
 11442                           plusw2	equ	0xFDB
 11443                           fsr2h	equ	0xFDA
 11444                           fsr2l	equ	0xFD9
 11445                           status	equ	0xFD8
 11446                           
 11447 ;; *************** function _RTCC_task *****************
 11448 ;; Defined at:
 11449 ;;		line 38 in file "../My_library/My_RTCC.c"
 11450 ;; Parameters:    Size  Location     Type
 11451 ;;		None
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;		None               void
 11456 ;; Registers used:
 11457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11467 ;;Total ram usage:        0 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:   16
 11470 ;; This function calls:
 11471 ;;		_RTCC_from_RTCC
 11472 ;; This function is called by:
 11473 ;;		_main
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           	psect	text53
 11478  013C8E                     __ptext53:
 11479                           	opt stack 0
 11480  013C8E                     _RTCC_task:
 11481                           	opt stack 14
 11482                           
 11483                           ;My_RTCC.c: 39: static uint8_t prev_halfsec;
 11484                           ;My_RTCC.c: 40: if (RTCCFGbits.RTCSYNC)return;
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;incstack = 0
 11488  013C8E  010F               	movlb	15	; () banked
 11489  013C90  B93F               	btfsc	63,4,b	;volatile
 11490  013C92  0012               	return	
 11491                           
 11492                           ; BSR set to: 15
 11493                           ;My_RTCC.c: 41: now.halfsec = RTCCFGbits.HALFSEC;
 11494                           
 11495                           ; BSR set to: 15
 11496                           
 11497                           ; BSR set to: 15
 11498  013C94  0E00               	movlw	0
 11499  013C96  B73F               	btfsc	63,3,b	;volatile
 11500  013C98  0E01               	movlw	1
 11501  013C9A  0101               	movlb	1	; () banked
 11502  013C9C  6F52               	movwf	(_now+12)& (0+255),b
 11503                           
 11504                           ; BSR set to: 1
 11505                           ;My_RTCC.c: 42: if (prev_halfsec != now.halfsec) {
 11506  013C9E  0100               	movlb	0	; () banked
 11507  013CA0  51F4               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 11508  013CA2  0101               	movlb	1	; () banked
 11509  013CA4  1952               	xorwf	(_now+12)& (0+255),w,b
 11510  013CA6  B4D8               	btfsc	status,2,c
 11511  013CA8  0012               	return	
 11512                           
 11513                           ; BSR set to: 1
 11514                           ;My_RTCC.c: 43: prev_halfsec = now.halfsec;
 11515  013CAA  C152  F0F4         	movff	_now+12,RTCC_task@prev_halfsec
 11516                           
 11517                           ;My_RTCC.c: 44: now.colon = now.halfsec;
 11518  013CAE  C152  F151         	movff	_now+12,_now+11
 11519                           
 11520                           ; BSR set to: 1
 11521                           ;My_RTCC.c: 45: time_change_flag = 1;
 11522  013CB2  0E01               	movlw	1
 11523  013CB4  0100               	movlb	0	; () banked
 11524  013CB6  6FF9               	movwf	_time_change_flag& (0+255),b
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;My_RTCC.c: 46: RTCC_from_RTCC(&now);
 11528  013CB8  0E46               	movlw	low _now
 11529  013CBA  0100               	movlb	0	; () banked
 11530  013CBC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 11531  013CBE  0E01               	movlw	high _now
 11532  013CC0  0100               	movlb	0	; () banked
 11533  013CC2  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 11534  013CC4  EC9A  F0A0         	call	_RTCC_from_RTCC	;wreg free
 11535  013CC8  0012               	return	
 11536  013CCA                     __end_of_RTCC_task:
 11537                           	opt stack 0
 11538                           tblptru	equ	0xFF8
 11539                           tblptrh	equ	0xFF7
 11540                           tblptrl	equ	0xFF6
 11541                           tablat	equ	0xFF5
 11542                           prodh	equ	0xFF4
 11543                           prodl	equ	0xFF3
 11544                           intcon	equ	0xFF2
 11545                           intcon2	equ	0xFF1
 11546                           indf0	equ	0xFEF
 11547                           postinc0	equ	0xFEE
 11548                           fsr0h	equ	0xFEA
 11549                           fsr0l	equ	0xFE9
 11550                           wreg	equ	0xFE8
 11551                           indf1	equ	0xFE7
 11552                           postinc1	equ	0xFE6
 11553                           postdec1	equ	0xFE5
 11554                           fsr1h	equ	0xFE2
 11555                           fsr1l	equ	0xFE1
 11556                           indf2	equ	0xFDF
 11557                           postinc2	equ	0xFDE
 11558                           postdec2	equ	0xFDD
 11559                           plusw2	equ	0xFDB
 11560                           fsr2h	equ	0xFDA
 11561                           fsr2l	equ	0xFD9
 11562                           status	equ	0xFD8
 11563                           
 11564 ;; *************** function _RTCC_from_RTCC *****************
 11565 ;; Defined at:
 11566 ;;		line 52 in file "../My_library/My_RTCC.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;  tm              2   38[BANK0 ] PTR struct .
 11569 ;;		 -> now(14), 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;		None
 11572 ;; Return value:  Size  Location     Type
 11573 ;;		None               void
 11574 ;; Registers used:
 11575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11585 ;;Total ram usage:        2 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:   15
 11588 ;; This function calls:
 11589 ;;		_RTCC_to_caltime
 11590 ;;		_caltime_to_epoch
 11591 ;; This function is called by:
 11592 ;;		_RTCC_init
 11593 ;;		_RTCC_task
 11594 ;;		_print_time
 11595 ;;		_display_time_0802
 11596 ;;		_display_time_1602
 11597 ;;		_RTCC_adjust_time_inc
 11598 ;;		_RTCC_adjust_time_dec
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           	psect	text54
 11603  014134                     __ptext54:
 11604                           	opt stack 0
 11605  014134                     _RTCC_from_RTCC:
 11606                           	opt stack 10
 11607                           
 11608                           ;My_RTCC.c: 53: RTCC_to_caltime(tm);
 11609                           
 11610                           ;incstack = 0
 11611  014134  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 11612  014138  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 11613  01413C  EC0C  F096         	call	_RTCC_to_caltime	;wreg free
 11614                           
 11615                           ;My_RTCC.c: 54: caltime_to_epoch(tm);
 11616  014140  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 11617  014144  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 11618  014148  ECB8  F085         	call	_caltime_to_epoch	;wreg free
 11619  01414C  0012               	return		;funcret
 11620  01414E                     __end_of_RTCC_from_RTCC:
 11621                           	opt stack 0
 11622                           tblptru	equ	0xFF8
 11623                           tblptrh	equ	0xFF7
 11624                           tblptrl	equ	0xFF6
 11625                           tablat	equ	0xFF5
 11626                           prodh	equ	0xFF4
 11627                           prodl	equ	0xFF3
 11628                           intcon	equ	0xFF2
 11629                           intcon2	equ	0xFF1
 11630                           indf0	equ	0xFEF
 11631                           postinc0	equ	0xFEE
 11632                           fsr0h	equ	0xFEA
 11633                           fsr0l	equ	0xFE9
 11634                           wreg	equ	0xFE8
 11635                           indf1	equ	0xFE7
 11636                           postinc1	equ	0xFE6
 11637                           postdec1	equ	0xFE5
 11638                           fsr1h	equ	0xFE2
 11639                           fsr1l	equ	0xFE1
 11640                           indf2	equ	0xFDF
 11641                           postinc2	equ	0xFDE
 11642                           postdec2	equ	0xFDD
 11643                           plusw2	equ	0xFDB
 11644                           fsr2h	equ	0xFDA
 11645                           fsr2l	equ	0xFD9
 11646                           status	equ	0xFD8
 11647                           
 11648 ;; *************** function _caltime_to_epoch *****************
 11649 ;; Defined at:
 11650 ;;		line 343 in file "../My_library/My_RTCC.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  tm              2   25[BANK0 ] PTR struct .
 11653 ;;		 -> now(14), 
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;  month           1   37[BANK0 ] unsigned char 
 11656 ;;  month           1   32[BANK0 ] unsigned char 
 11657 ;;  year            1   31[BANK0 ] unsigned char 
 11658 ;;  epoch           4   33[BANK0 ] unsigned long 
 11659 ;; Return value:  Size  Location     Type
 11660 ;;		None               void
 11661 ;; Registers used:
 11662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11663 ;; Tracked objects:
 11664 ;;		On entry : 0/0
 11665 ;;		On exit  : 0/0
 11666 ;;		Unchanged: 0/0
 11667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11670 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11671 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11672 ;;Total ram usage:       13 bytes
 11673 ;; Hardware stack levels used:    1
 11674 ;; Hardware stack levels required when called:   14
 11675 ;; This function calls:
 11676 ;;		___lmul
 11677 ;;		_month_length
 11678 ;; This function is called by:
 11679 ;;		_RTCC_from_RTCC
 11680 ;;		_RTCC_from_caltime
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text55
 11685  010B70                     __ptext55:
 11686                           	opt stack 0
 11687  010B70                     _caltime_to_epoch:
 11688                           	opt stack 10
 11689                           
 11690                           ;My_RTCC.c: 344: epoch_t epoch = 0;
 11691                           
 11692                           ;incstack = 0
 11693  010B70  0E00               	movlw	0
 11694  010B72  0100               	movlb	0	; () banked
 11695  010B74  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 11696  010B76  0E00               	movlw	0
 11697  010B78  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 11698  010B7A  0E00               	movlw	0
 11699  010B7C  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 11700  010B7E  0E00               	movlw	0
 11701  010B80  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 11702                           
 11703                           ;My_RTCC.c: 345: for (uint8_t year = 0; year < tm->YY; year++) {
 11704  010B82  0E00               	movlw	0
 11705  010B84  0100               	movlb	0	; () banked
 11706  010B86  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 11707  010B88  D037               	goto	l8328
 11708  010B8A                     l8314:
 11709                           
 11710                           ; BSR set to: 0
 11711                           ;My_RTCC.c: 346: for (uint8_t month = 1; month <= 12; month++) {
 11712  010B8A  0E01               	movlw	1
 11713  010B8C  0100               	movlb	0	; () banked
 11714  010B8E  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 11715  010B90                     l8316:
 11716                           
 11717                           ; BSR set to: 0
 11718  010B90  0E0C               	movlw	12
 11719  010B92  0100               	movlb	0	; () banked
 11720  010B94  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 11721  010B96  D001               	goto	l8320
 11722  010B98  D02D               	goto	l8326
 11723  010B9A                     l8320:
 11724                           
 11725                           ; BSR set to: 0
 11726                           ;My_RTCC.c: 347: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11727  010B9A  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 11728  010B9E  0100               	movlb	0	; () banked
 11729  010BA0  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 11730  010BA2  EC64  F090         	call	_month_length
 11731  010BA6  0100               	movlb	0	; () banked
 11732  010BA8  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11733  010BAA  0100               	movlb	0	; () banked
 11734  010BAC  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11735  010BAE  0100               	movlb	0	; () banked
 11736  010BB0  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11737  010BB2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11738  010BB4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11739  010BB6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11740  010BB8  0E80               	movlw	128
 11741  010BBA  0100               	movlb	0	; () banked
 11742  010BBC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11743  010BBE  0E51               	movlw	81
 11744  010BC0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11745  010BC2  0E01               	movlw	1
 11746  010BC4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11747  010BC6  0E00               	movlw	0
 11748  010BC8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11749  010BCA  EC0A  F09B         	call	___lmul	;wreg free
 11750  010BCE  0100               	movlb	0	; () banked
 11751  010BD0  516D               	movf	?___lmul& (0+255),w,b
 11752  010BD2  0100               	movlb	0	; () banked
 11753  010BD4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11754  010BD6  0100               	movlb	0	; () banked
 11755  010BD8  516E               	movf	(?___lmul+1)& (0+255),w,b
 11756  010BDA  0100               	movlb	0	; () banked
 11757  010BDC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11758  010BDE  0100               	movlb	0	; () banked
 11759  010BE0  516F               	movf	(?___lmul+2)& (0+255),w,b
 11760  010BE2  0100               	movlb	0	; () banked
 11761  010BE4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11762  010BE6  0100               	movlb	0	; () banked
 11763  010BE8  5170               	movf	(?___lmul+3)& (0+255),w,b
 11764  010BEA  0100               	movlb	0	; () banked
 11765  010BEC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11766                           
 11767                           ; BSR set to: 0
 11768  010BEE  0100               	movlb	0	; () banked
 11769  010BF0  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 11770  010BF2  D7CE               	goto	l8316
 11771  010BF4                     l8326:
 11772                           
 11773                           ; BSR set to: 0
 11774  010BF4  0100               	movlb	0	; () banked
 11775  010BF6  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 11776  010BF8                     l8328:
 11777                           
 11778                           ; BSR set to: 0
 11779  010BF8  0100               	movlb	0	; () banked
 11780  010BFA  EE20 F00A          	lfsr	2,10
 11781  010BFE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11782  010C00  26D9               	addwf	fsr2l,f,c
 11783  010C02  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11784  010C04  22DA               	addwfc	fsr2h,f,c
 11785  010C06  50DE               	movf	postinc2,w,c
 11786  010C08  0100               	movlb	0	; () banked
 11787  010C0A  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 11788  010C0C  A0D8               	btfss	status,0,c
 11789  010C0E  D7BD               	goto	l8314
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;My_RTCC.c: 348: }
 11793                           ;My_RTCC.c: 349: }
 11794                           ;My_RTCC.c: 350: for (uint8_t month = 1; month < tm->MM; month++) {
 11795                           
 11796                           ; BSR set to: 0
 11797  010C10  0E01               	movlw	1
 11798  010C12  0100               	movlb	0	; () banked
 11799  010C14  6F80               	movwf	caltime_to_epoch@month_4002& (0+255),b
 11800  010C16  D032               	goto	l8336
 11801  010C18                     l8332:
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;My_RTCC.c: 351: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11805  010C18  C080  F066         	movff	caltime_to_epoch@month_4002,month_length@month
 11806  010C1C  0100               	movlb	0	; () banked
 11807  010C1E  EE20 F00A          	lfsr	2,10
 11808  010C22  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11809  010C24  26D9               	addwf	fsr2l,f,c
 11810  010C26  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11811  010C28  22DA               	addwfc	fsr2h,f,c
 11812  010C2A  50DF               	movf	indf2,w,c
 11813  010C2C  EC64  F090         	call	_month_length
 11814  010C30  0100               	movlb	0	; () banked
 11815  010C32  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11816  010C34  0100               	movlb	0	; () banked
 11817  010C36  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11818  010C38  0100               	movlb	0	; () banked
 11819  010C3A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11820  010C3C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11821  010C3E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11822  010C40  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11823  010C42  0E80               	movlw	128
 11824  010C44  0100               	movlb	0	; () banked
 11825  010C46  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11826  010C48  0E51               	movlw	81
 11827  010C4A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11828  010C4C  0E01               	movlw	1
 11829  010C4E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11830  010C50  0E00               	movlw	0
 11831  010C52  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11832  010C54  EC0A  F09B         	call	___lmul	;wreg free
 11833  010C58  0100               	movlb	0	; () banked
 11834  010C5A  516D               	movf	?___lmul& (0+255),w,b
 11835  010C5C  0100               	movlb	0	; () banked
 11836  010C5E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11837  010C60  0100               	movlb	0	; () banked
 11838  010C62  516E               	movf	(?___lmul+1)& (0+255),w,b
 11839  010C64  0100               	movlb	0	; () banked
 11840  010C66  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11841  010C68  0100               	movlb	0	; () banked
 11842  010C6A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11843  010C6C  0100               	movlb	0	; () banked
 11844  010C6E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11845  010C70  0100               	movlb	0	; () banked
 11846  010C72  5170               	movf	(?___lmul+3)& (0+255),w,b
 11847  010C74  0100               	movlb	0	; () banked
 11848  010C76  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11849                           
 11850                           ; BSR set to: 0
 11851  010C78  0100               	movlb	0	; () banked
 11852  010C7A  2B80               	incf	caltime_to_epoch@month_4002& (0+255),f,b
 11853  010C7C                     l8336:
 11854                           
 11855                           ; BSR set to: 0
 11856  010C7C  0100               	movlb	0	; () banked
 11857  010C7E  EE20 F009          	lfsr	2,9
 11858  010C82  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11859  010C84  26D9               	addwf	fsr2l,f,c
 11860  010C86  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11861  010C88  22DA               	addwfc	fsr2h,f,c
 11862  010C8A  50DE               	movf	postinc2,w,c
 11863  010C8C  0100               	movlb	0	; () banked
 11864  010C8E  5D80               	subwf	caltime_to_epoch@month_4002& (0+255),w,b
 11865  010C90  A0D8               	btfss	status,0,c
 11866  010C92  D7C2               	goto	l8332
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;My_RTCC.c: 352: }
 11870                           ;My_RTCC.c: 353: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11871                           
 11872                           ; BSR set to: 0
 11873  010C94  0EFF               	movlw	255
 11874  010C96  0100               	movlb	0	; () banked
 11875  010C98  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11876  010C9A  0EFF               	movlw	255
 11877  010C9C  0100               	movlb	0	; () banked
 11878  010C9E  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11879  010CA0  0100               	movlb	0	; () banked
 11880  010CA2  EE20 F008          	lfsr	2,8
 11881  010CA6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11882  010CA8  26D9               	addwf	fsr2l,f,c
 11883  010CAA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11884  010CAC  22DA               	addwfc	fsr2h,f,c
 11885  010CAE  50DF               	movf	indf2,w,c
 11886  010CB0  0100               	movlb	0	; () banked
 11887  010CB2  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11888  010CB4  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11889  010CB6  0100               	movlb	0	; () banked
 11890  010CB8  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11891  010CBA  0100               	movlb	0	; () banked
 11892  010CBC  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11893  010CBE  0100               	movlb	0	; () banked
 11894  010CC0  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11895  010CC2  0100               	movlb	0	; () banked
 11896  010CC4  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11897  010CC6  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11898  010CCA  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11899  010CCE  0100               	movlb	0	; () banked
 11900  010CD0  0E00               	movlw	0
 11901  010CD2  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11902  010CD4  0EFF               	movlw	-1
 11903  010CD6  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 11904  010CD8  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 11905  010CDA  0E80               	movlw	128
 11906  010CDC  0100               	movlb	0	; () banked
 11907  010CDE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11908  010CE0  0E51               	movlw	81
 11909  010CE2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11910  010CE4  0E01               	movlw	1
 11911  010CE6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11912  010CE8  0E00               	movlw	0
 11913  010CEA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11914  010CEC  EC0A  F09B         	call	___lmul	;wreg free
 11915  010CF0  0100               	movlb	0	; () banked
 11916  010CF2  516D               	movf	?___lmul& (0+255),w,b
 11917  010CF4  0100               	movlb	0	; () banked
 11918  010CF6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11919  010CF8  0100               	movlb	0	; () banked
 11920  010CFA  516E               	movf	(?___lmul+1)& (0+255),w,b
 11921  010CFC  0100               	movlb	0	; () banked
 11922  010CFE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11923  010D00  0100               	movlb	0	; () banked
 11924  010D02  516F               	movf	(?___lmul+2)& (0+255),w,b
 11925  010D04  0100               	movlb	0	; () banked
 11926  010D06  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11927  010D08  0100               	movlb	0	; () banked
 11928  010D0A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11929  010D0C  0100               	movlb	0	; () banked
 11930  010D0E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11931                           
 11932                           ;My_RTCC.c: 354: epoch += ((epoch_t)60*60) * tm->hh;
 11933  010D10  0100               	movlb	0	; () banked
 11934  010D12  EE20 F006          	lfsr	2,6
 11935  010D16  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11936  010D18  26D9               	addwf	fsr2l,f,c
 11937  010D1A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11938  010D1C  22DA               	addwfc	fsr2h,f,c
 11939  010D1E  50DF               	movf	indf2,w,c
 11940  010D20  0100               	movlb	0	; () banked
 11941  010D22  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11942  010D24  0100               	movlb	0	; () banked
 11943  010D26  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11944  010D28  0100               	movlb	0	; () banked
 11945  010D2A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11946  010D2C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11947  010D2E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11948  010D30  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11949  010D32  0E10               	movlw	16
 11950  010D34  0100               	movlb	0	; () banked
 11951  010D36  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11952  010D38  0E0E               	movlw	14
 11953  010D3A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11954  010D3C  0E00               	movlw	0
 11955  010D3E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11956  010D40  0E00               	movlw	0
 11957  010D42  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11958  010D44  EC0A  F09B         	call	___lmul	;wreg free
 11959  010D48  0100               	movlb	0	; () banked
 11960  010D4A  516D               	movf	?___lmul& (0+255),w,b
 11961  010D4C  0100               	movlb	0	; () banked
 11962  010D4E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11963  010D50  0100               	movlb	0	; () banked
 11964  010D52  516E               	movf	(?___lmul+1)& (0+255),w,b
 11965  010D54  0100               	movlb	0	; () banked
 11966  010D56  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11967  010D58  0100               	movlb	0	; () banked
 11968  010D5A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11969  010D5C  0100               	movlb	0	; () banked
 11970  010D5E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11971  010D60  0100               	movlb	0	; () banked
 11972  010D62  5170               	movf	(?___lmul+3)& (0+255),w,b
 11973  010D64  0100               	movlb	0	; () banked
 11974  010D66  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11975                           
 11976                           ;My_RTCC.c: 355: epoch += ((epoch_t)60) * tm->mm;
 11977  010D68  0100               	movlb	0	; () banked
 11978  010D6A  EE20 F005          	lfsr	2,5
 11979  010D6E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11980  010D70  26D9               	addwf	fsr2l,f,c
 11981  010D72  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11982  010D74  22DA               	addwfc	fsr2h,f,c
 11983  010D76  50DF               	movf	indf2,w,c
 11984  010D78  0100               	movlb	0	; () banked
 11985  010D7A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11986  010D7C  0100               	movlb	0	; () banked
 11987  010D7E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11988  010D80  0100               	movlb	0	; () banked
 11989  010D82  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11990  010D84  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11991  010D86  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11992  010D88  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11993  010D8A  0E3C               	movlw	60
 11994  010D8C  0100               	movlb	0	; () banked
 11995  010D8E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11996  010D90  0E00               	movlw	0
 11997  010D92  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11998  010D94  0E00               	movlw	0
 11999  010D96  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12000  010D98  0E00               	movlw	0
 12001  010D9A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12002  010D9C  EC0A  F09B         	call	___lmul	;wreg free
 12003  010DA0  0100               	movlb	0	; () banked
 12004  010DA2  516D               	movf	?___lmul& (0+255),w,b
 12005  010DA4  0100               	movlb	0	; () banked
 12006  010DA6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12007  010DA8  0100               	movlb	0	; () banked
 12008  010DAA  516E               	movf	(?___lmul+1)& (0+255),w,b
 12009  010DAC  0100               	movlb	0	; () banked
 12010  010DAE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12011  010DB0  0100               	movlb	0	; () banked
 12012  010DB2  516F               	movf	(?___lmul+2)& (0+255),w,b
 12013  010DB4  0100               	movlb	0	; () banked
 12014  010DB6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12015  010DB8  0100               	movlb	0	; () banked
 12016  010DBA  5170               	movf	(?___lmul+3)& (0+255),w,b
 12017  010DBC  0100               	movlb	0	; () banked
 12018  010DBE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;My_RTCC.c: 356: epoch += tm->ss;
 12022  010DC0  0100               	movlb	0	; () banked
 12023  010DC2  EE20 F004          	lfsr	2,4
 12024  010DC6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12025  010DC8  26D9               	addwf	fsr2l,f,c
 12026  010DCA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12027  010DCC  22DA               	addwfc	fsr2h,f,c
 12028  010DCE  50DF               	movf	indf2,w,c
 12029  010DD0  0100               	movlb	0	; () banked
 12030  010DD2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12031  010DD4  0100               	movlb	0	; () banked
 12032  010DD6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12033  010DD8  0100               	movlb	0	; () banked
 12034  010DDA  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12035  010DDC  0E00               	movlw	0
 12036  010DDE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12037  010DE0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12038  010DE2  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;My_RTCC.c: 358: tm->epoch = epoch;
 12042  010DE4  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 12043  010DE8  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 12044  010DEC  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 12045  010DF0  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 12046  010DF4  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 12047  010DF8  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 12048                           
 12049                           ; BSR set to: 0
 12050  010DFC  0012               	return		;funcret
 12051  010DFE                     __end_of_caltime_to_epoch:
 12052                           	opt stack 0
 12053                           tblptru	equ	0xFF8
 12054                           tblptrh	equ	0xFF7
 12055                           tblptrl	equ	0xFF6
 12056                           tablat	equ	0xFF5
 12057                           prodh	equ	0xFF4
 12058                           prodl	equ	0xFF3
 12059                           intcon	equ	0xFF2
 12060                           intcon2	equ	0xFF1
 12061                           indf0	equ	0xFEF
 12062                           postinc0	equ	0xFEE
 12063                           fsr0h	equ	0xFEA
 12064                           fsr0l	equ	0xFE9
 12065                           wreg	equ	0xFE8
 12066                           indf1	equ	0xFE7
 12067                           postinc1	equ	0xFE6
 12068                           postdec1	equ	0xFE5
 12069                           fsr1h	equ	0xFE2
 12070                           fsr1l	equ	0xFE1
 12071                           indf2	equ	0xFDF
 12072                           postinc2	equ	0xFDE
 12073                           postdec2	equ	0xFDD
 12074                           plusw2	equ	0xFDB
 12075                           fsr2h	equ	0xFDA
 12076                           fsr2l	equ	0xFD9
 12077                           status	equ	0xFD8
 12078                           
 12079 ;; *************** function _month_length *****************
 12080 ;; Defined at:
 12081 ;;		line 68 in file "../My_library/My_RTCC.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  year            1    wreg     unsigned char 
 12084 ;;  month           1    6[BANK0 ] unsigned char 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  year            1   11[BANK0 ] unsigned char 
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      unsigned char 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12096 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12098 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12099 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12100 ;;Total ram usage:        6 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; Hardware stack levels required when called:   13
 12103 ;; This function calls:
 12104 ;;		___awmod
 12105 ;; This function is called by:
 12106 ;;		_epoch_to_caltime
 12107 ;;		_caltime_to_epoch
 12108 ;;		_terminal_time
 12109 ;;		_RTCC_adjust_time_inc
 12110 ;;		_RTCC_adjust_time_dec
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           	psect	text56
 12115  0120C8                     __ptext56:
 12116                           	opt stack 0
 12117  0120C8                     _month_length:
 12118                           	opt stack 10
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;incstack = 0
 12122                           ;month_length@year stored from wreg
 12123  0120C8  0100               	movlb	0	; () banked
 12124  0120CA  6F6B               	movwf	month_length@year& (0+255),b
 12125                           
 12126                           ;My_RTCC.c: 69: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 12127  0120CC  0E02               	movlw	2
 12128  0120CE  0100               	movlb	0	; () banked
 12129  0120D0  1966               	xorwf	month_length@month& (0+255),w,b
 12130  0120D2  A4D8               	btfss	status,2,c
 12131  0120D4  D03E               	goto	l8212
 12132                           
 12133                           ; BSR set to: 0
 12134  0120D6  C06B  F060         	movff	month_length@year,___awmod@dividend
 12135  0120DA  0100               	movlb	0	; () banked
 12136  0120DC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12137  0120DE  0E00               	movlw	0
 12138  0120E0  0100               	movlb	0	; () banked
 12139  0120E2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12140  0120E4  0E64               	movlw	100
 12141  0120E6  6F62               	movwf	___awmod@divisor& (0+255),b
 12142  0120E8  EC87  F098         	call	___awmod	;wreg free
 12143  0120EC  0100               	movlb	0	; () banked
 12144  0120EE  5160               	movf	?___awmod& (0+255),w,b
 12145  0120F0  0100               	movlb	0	; () banked
 12146  0120F2  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12147  0120F4  A4D8               	btfss	status,2,c
 12148  0120F6  D002               	goto	u7540
 12149  0120F8  0E01               	movlw	1
 12150  0120FA  D001               	goto	u7550
 12151  0120FC                     u7540:
 12152  0120FC  0E00               	movlw	0
 12153  0120FE                     u7550:
 12154  0120FE  0800               	sublw	0
 12155  012100  0100               	movlb	0	; () banked
 12156  012102  6F67               	movwf	??_month_length& (0+255),b
 12157  012104  C06B  F060         	movff	month_length@year,___awmod@dividend
 12158  012108  0100               	movlb	0	; () banked
 12159  01210A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12160  01210C  0E01               	movlw	1
 12161  01210E  0100               	movlb	0	; () banked
 12162  012110  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12163  012112  0E90               	movlw	144
 12164  012114  6F62               	movwf	___awmod@divisor& (0+255),b
 12165  012116  EC87  F098         	call	___awmod	;wreg free
 12166  01211A  0100               	movlb	0	; () banked
 12167  01211C  5160               	movf	?___awmod& (0+255),w,b
 12168  01211E  0100               	movlb	0	; () banked
 12169  012120  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12170  012122  A4D8               	btfss	status,2,c
 12171  012124  D004               	goto	u7560
 12172  012126  0100               	movlb	0	; () banked
 12173  012128  6B68               	clrf	(??_month_length+1)& (0+255),b
 12174  01212A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12175  01212C  D002               	goto	u7578
 12176  01212E                     u7560:
 12177  01212E  0100               	movlb	0	; () banked
 12178  012130  6B68               	clrf	(??_month_length+1)& (0+255),b
 12179  012132                     u7578:
 12180  012132  C06B  F069         	movff	month_length@year,??_month_length+2
 12181  012136  0E03               	movlw	3
 12182  012138  0100               	movlb	0	; () banked
 12183  01213A  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12184  01213C  A4D8               	btfss	status,2,c
 12185  01213E  D002               	goto	u7580
 12186  012140  0E01               	movlw	1
 12187  012142  D001               	goto	u7590
 12188  012144                     u7580:
 12189  012144  0E00               	movlw	0
 12190  012146                     u7590:
 12191  012146  0100               	movlb	0	; () banked
 12192  012148  2568               	addwf	(??_month_length+1)& (0+255),w,b
 12193  01214A  0100               	movlb	0	; () banked
 12194  01214C  2567               	addwf	??_month_length& (0+255),w,b
 12195  01214E  0F1C               	addlw	28
 12196                           
 12197                           ; BSR set to: 0
 12198                           
 12199                           ; BSR set to: 0
 12200  012150  0012               	return	
 12201  012152                     l8212:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;My_RTCC.c: 70: else return 31 - (((-(month & 1)^month)&13) == 4);
 12205  012152  0100               	movlb	0	; () banked
 12206  012154  5166               	movf	month_length@month& (0+255),w,b
 12207  012156  0B01               	andlw	1
 12208  012158  0100               	movlb	0	; () banked
 12209  01215A  6F67               	movwf	??_month_length& (0+255),b
 12210  01215C  6B68               	clrf	(??_month_length+1)& (0+255),b
 12211  01215E  0100               	movlb	0	; () banked
 12212  012160  1F67               	comf	??_month_length& (0+255),f,b
 12213  012162  1F68               	comf	(??_month_length+1)& (0+255),f,b
 12214  012164  4B67               	infsnz	??_month_length& (0+255),f,b
 12215  012166  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12216  012168  0100               	movlb	0	; () banked
 12217  01216A  5166               	movf	month_length@month& (0+255),w,b
 12218  01216C  0100               	movlb	0	; () banked
 12219  01216E  6F69               	movwf	(??_month_length+2)& (0+255),b
 12220  012170  6B6A               	clrf	(??_month_length+3)& (0+255),b
 12221  012172  0100               	movlb	0	; () banked
 12222  012174  5167               	movf	??_month_length& (0+255),w,b
 12223  012176  0100               	movlb	0	; () banked
 12224  012178  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 12225  01217A  0100               	movlb	0	; () banked
 12226  01217C  5168               	movf	(??_month_length+1)& (0+255),w,b
 12227  01217E  0100               	movlb	0	; () banked
 12228  012180  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 12229  012182  0E0D               	movlw	13
 12230  012184  0100               	movlb	0	; () banked
 12231  012186  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12232  012188  0E00               	movlw	0
 12233  01218A  176A               	andwf	(??_month_length+3)& (0+255),f,b
 12234  01218C  0E04               	movlw	4
 12235  01218E  0100               	movlb	0	; () banked
 12236  012190  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 12237  012192  0100               	movlb	0	; () banked
 12238  012194  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 12239  012196  A4D8               	btfss	status,2,c
 12240  012198  D002               	goto	u7600
 12241  01219A  0E01               	movlw	1
 12242  01219C  D001               	goto	u7610
 12243  01219E                     u7600:
 12244  01219E  0E00               	movlw	0
 12245  0121A0                     u7610:
 12246  0121A0  0800               	sublw	0
 12247  0121A2  0F1F               	addlw	31
 12248                           
 12249                           ; BSR set to: 0
 12250  0121A4  0012               	return	
 12251  0121A6                     __end_of_month_length:
 12252                           	opt stack 0
 12253                           tblptru	equ	0xFF8
 12254                           tblptrh	equ	0xFF7
 12255                           tblptrl	equ	0xFF6
 12256                           tablat	equ	0xFF5
 12257                           prodh	equ	0xFF4
 12258                           prodl	equ	0xFF3
 12259                           intcon	equ	0xFF2
 12260                           intcon2	equ	0xFF1
 12261                           indf0	equ	0xFEF
 12262                           postinc0	equ	0xFEE
 12263                           fsr0h	equ	0xFEA
 12264                           fsr0l	equ	0xFE9
 12265                           wreg	equ	0xFE8
 12266                           indf1	equ	0xFE7
 12267                           postinc1	equ	0xFE6
 12268                           postdec1	equ	0xFE5
 12269                           fsr1h	equ	0xFE2
 12270                           fsr1l	equ	0xFE1
 12271                           indf2	equ	0xFDF
 12272                           postinc2	equ	0xFDE
 12273                           postdec2	equ	0xFDD
 12274                           plusw2	equ	0xFDB
 12275                           fsr2h	equ	0xFDA
 12276                           fsr2l	equ	0xFD9
 12277                           status	equ	0xFD8
 12278                           
 12279 ;; *************** function ___awmod *****************
 12280 ;; Defined at:
 12281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 12282 ;; Parameters:    Size  Location     Type
 12283 ;;  dividend        2    0[BANK0 ] int 
 12284 ;;  divisor         2    2[BANK0 ] int 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  sign            1    5[BANK0 ] unsigned char 
 12287 ;;  counter         1    4[BANK0 ] unsigned char 
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  2    0[BANK0 ] int 
 12290 ;; Registers used:
 12291 ;;		wreg, status,2, status,0
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12297 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12300 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12301 ;;Total ram usage:        6 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:   12
 12304 ;; This function calls:
 12305 ;;		Nothing
 12306 ;; This function is called by:
 12307 ;;		_month_length
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           	psect	text57
 12312  01310E                     __ptext57:
 12313                           	opt stack 0
 12314  01310E                     ___awmod:
 12315                           	opt stack 10
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;incstack = 0
 12319  01310E  0E00               	movlw	0
 12320  013110  0100               	movlb	0	; () banked
 12321  013112  6F65               	movwf	___awmod@sign& (0+255),b
 12322                           
 12323                           ; BSR set to: 0
 12324  013114  0100               	movlb	0	; () banked
 12325  013116  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12326  013118  D008               	goto	l8164
 12327                           
 12328                           ; BSR set to: 0
 12329  01311A  0100               	movlb	0	; () banked
 12330  01311C  6D60               	negf	___awmod@dividend& (0+255),b
 12331  01311E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12332  013120  B0D8               	btfsc	status,0,c
 12333  013122  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12334                           
 12335                           ; BSR set to: 0
 12336  013124  0E01               	movlw	1
 12337  013126  0100               	movlb	0	; () banked
 12338  013128  6F65               	movwf	___awmod@sign& (0+255),b
 12339  01312A                     l8164:
 12340                           
 12341                           ; BSR set to: 0
 12342  01312A  0100               	movlb	0	; () banked
 12343  01312C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12344  01312E  D005               	goto	l8168
 12345                           
 12346                           ; BSR set to: 0
 12347  013130  0100               	movlb	0	; () banked
 12348  013132  6D62               	negf	___awmod@divisor& (0+255),b
 12349  013134  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12350  013136  B0D8               	btfsc	status,0,c
 12351  013138  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12352  01313A                     l8168:
 12353                           
 12354                           ; BSR set to: 0
 12355  01313A  0100               	movlb	0	; () banked
 12356  01313C  5162               	movf	___awmod@divisor& (0+255),w,b
 12357  01313E  0100               	movlb	0	; () banked
 12358  013140  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12359  013142  B4D8               	btfsc	status,2,c
 12360  013144  D026               	goto	l8184
 12361                           
 12362                           ; BSR set to: 0
 12363  013146  0E01               	movlw	1
 12364  013148  0100               	movlb	0	; () banked
 12365  01314A  6F64               	movwf	___awmod@counter& (0+255),b
 12366  01314C  D006               	goto	l8174
 12367  01314E                     l8172:
 12368                           
 12369                           ; BSR set to: 0
 12370  01314E  0100               	movlb	0	; () banked
 12371  013150  90D8               	bcf	status,0,c
 12372  013152  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12373  013154  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12374  013156  0100               	movlb	0	; () banked
 12375  013158  2B64               	incf	___awmod@counter& (0+255),f,b
 12376  01315A                     l8174:
 12377                           
 12378                           ; BSR set to: 0
 12379  01315A  0100               	movlb	0	; () banked
 12380  01315C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12381  01315E  D7F7               	goto	l8172
 12382  013160                     l8176:
 12383                           
 12384                           ; BSR set to: 0
 12385  013160  0100               	movlb	0	; () banked
 12386  013162  5162               	movf	___awmod@divisor& (0+255),w,b
 12387  013164  0100               	movlb	0	; () banked
 12388  013166  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12389  013168  0100               	movlb	0	; () banked
 12390  01316A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12391  01316C  0100               	movlb	0	; () banked
 12392  01316E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12393  013170  A0D8               	btfss	status,0,c
 12394  013172  D008               	goto	l8180
 12395                           
 12396                           ; BSR set to: 0
 12397  013174  0100               	movlb	0	; () banked
 12398  013176  5162               	movf	___awmod@divisor& (0+255),w,b
 12399  013178  0100               	movlb	0	; () banked
 12400  01317A  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12401  01317C  0100               	movlb	0	; () banked
 12402  01317E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12403  013180  0100               	movlb	0	; () banked
 12404  013182  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12405  013184                     l8180:
 12406                           
 12407                           ; BSR set to: 0
 12408  013184  0100               	movlb	0	; () banked
 12409  013186  90D8               	bcf	status,0,c
 12410  013188  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12411  01318A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12412                           
 12413                           ; BSR set to: 0
 12414  01318C  0100               	movlb	0	; () banked
 12415  01318E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12416  013190  D7E7               	goto	l8176
 12417  013192                     l8184:
 12418                           
 12419                           ; BSR set to: 0
 12420  013192  0100               	movlb	0	; () banked
 12421  013194  5165               	movf	___awmod@sign& (0+255),w,b
 12422  013196  0100               	movlb	0	; () banked
 12423  013198  B4D8               	btfsc	status,2,c
 12424  01319A  D005               	goto	l8188
 12425                           
 12426                           ; BSR set to: 0
 12427  01319C  0100               	movlb	0	; () banked
 12428  01319E  6D60               	negf	___awmod@dividend& (0+255),b
 12429  0131A0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12430  0131A2  B0D8               	btfsc	status,0,c
 12431  0131A4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12432  0131A6                     l8188:
 12433                           
 12434                           ; BSR set to: 0
 12435  0131A6  C060  F060         	movff	___awmod@dividend,?___awmod
 12436  0131AA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12437  0131AE  0012               	return	
 12438  0131B0                     __end_of___awmod:
 12439                           	opt stack 0
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           intcon	equ	0xFF2
 12447                           intcon2	equ	0xFF1
 12448                           indf0	equ	0xFEF
 12449                           postinc0	equ	0xFEE
 12450                           fsr0h	equ	0xFEA
 12451                           fsr0l	equ	0xFE9
 12452                           wreg	equ	0xFE8
 12453                           indf1	equ	0xFE7
 12454                           postinc1	equ	0xFE6
 12455                           postdec1	equ	0xFE5
 12456                           fsr1h	equ	0xFE2
 12457                           fsr1l	equ	0xFE1
 12458                           indf2	equ	0xFDF
 12459                           postinc2	equ	0xFDE
 12460                           postdec2	equ	0xFDD
 12461                           plusw2	equ	0xFDB
 12462                           fsr2h	equ	0xFDA
 12463                           fsr2l	equ	0xFD9
 12464                           status	equ	0xFD8
 12465                           
 12466 ;; *************** function ___lmul *****************
 12467 ;; Defined at:
 12468 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;  multiplier      4   13[BANK0 ] unsigned long 
 12471 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;  product         4   21[BANK0 ] unsigned long 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  4   13[BANK0 ] unsigned long 
 12476 ;; Registers used:
 12477 ;;		wreg, status,2, status,0
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12483 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12484 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12486 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12487 ;;Total ram usage:       12 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:   12
 12490 ;; This function calls:
 12491 ;;		Nothing
 12492 ;; This function is called by:
 12493 ;;		_get_quot_rem
 12494 ;;		_caltime_to_epoch
 12495 ;;		_RTCC_adjust_time_inc
 12496 ;;		_RTCC_adjust_time_dec
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500                           	psect	text58
 12501  013614                     __ptext58:
 12502                           	opt stack 0
 12503  013614                     ___lmul:
 12504                           	opt stack 11
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;incstack = 0
 12508  013614  0E00               	movlw	0
 12509  013616  0100               	movlb	0	; () banked
 12510  013618  6F75               	movwf	___lmul@product& (0+255),b
 12511  01361A  0E00               	movlw	0
 12512  01361C  6F76               	movwf	(___lmul@product+1)& (0+255),b
 12513  01361E  0E00               	movlw	0
 12514  013620  6F77               	movwf	(___lmul@product+2)& (0+255),b
 12515  013622  0E00               	movlw	0
 12516  013624  6F78               	movwf	(___lmul@product+3)& (0+255),b
 12517  013626                     l8222:
 12518                           
 12519                           ; BSR set to: 0
 12520  013626  0100               	movlb	0	; () banked
 12521  013628  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 12522  01362A  D010               	goto	l8226
 12523                           
 12524                           ; BSR set to: 0
 12525  01362C  0100               	movlb	0	; () banked
 12526  01362E  5171               	movf	___lmul@multiplicand& (0+255),w,b
 12527  013630  0100               	movlb	0	; () banked
 12528  013632  2775               	addwf	___lmul@product& (0+255),f,b
 12529  013634  0100               	movlb	0	; () banked
 12530  013636  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 12531  013638  0100               	movlb	0	; () banked
 12532  01363A  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 12533  01363C  0100               	movlb	0	; () banked
 12534  01363E  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 12535  013640  0100               	movlb	0	; () banked
 12536  013642  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 12537  013644  0100               	movlb	0	; () banked
 12538  013646  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 12539  013648  0100               	movlb	0	; () banked
 12540  01364A  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 12541  01364C                     l8226:
 12542                           
 12543                           ; BSR set to: 0
 12544  01364C  0100               	movlb	0	; () banked
 12545  01364E  90D8               	bcf	status,0,c
 12546  013650  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 12547  013652  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 12548  013654  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 12549  013656  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 12550                           
 12551                           ; BSR set to: 0
 12552  013658  0100               	movlb	0	; () banked
 12553  01365A  90D8               	bcf	status,0,c
 12554  01365C  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 12555  01365E  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 12556  013660  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 12557  013662  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 12558  013664  0100               	movlb	0	; () banked
 12559  013666  516D               	movf	___lmul@multiplier& (0+255),w,b
 12560  013668  0100               	movlb	0	; () banked
 12561  01366A  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 12562  01366C  0100               	movlb	0	; () banked
 12563  01366E  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 12564  013670  0100               	movlb	0	; () banked
 12565  013672  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 12566  013674  A4D8               	btfss	status,2,c
 12567  013676  D7D7               	goto	l8222
 12568                           
 12569                           ; BSR set to: 0
 12570  013678  C075  F06D         	movff	___lmul@product,?___lmul
 12571  01367C  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 12572  013680  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 12573  013684  C078  F070         	movff	___lmul@product+3,?___lmul+3
 12574                           
 12575                           ; BSR set to: 0
 12576  013688  0012               	return		;funcret
 12577  01368A                     __end_of___lmul:
 12578                           	opt stack 0
 12579                           tblptru	equ	0xFF8
 12580                           tblptrh	equ	0xFF7
 12581                           tblptrl	equ	0xFF6
 12582                           tablat	equ	0xFF5
 12583                           prodh	equ	0xFF4
 12584                           prodl	equ	0xFF3
 12585                           intcon	equ	0xFF2
 12586                           intcon2	equ	0xFF1
 12587                           indf0	equ	0xFEF
 12588                           postinc0	equ	0xFEE
 12589                           fsr0h	equ	0xFEA
 12590                           fsr0l	equ	0xFE9
 12591                           wreg	equ	0xFE8
 12592                           indf1	equ	0xFE7
 12593                           postinc1	equ	0xFE6
 12594                           postdec1	equ	0xFE5
 12595                           fsr1h	equ	0xFE2
 12596                           fsr1l	equ	0xFE1
 12597                           indf2	equ	0xFDF
 12598                           postinc2	equ	0xFDE
 12599                           postdec2	equ	0xFDD
 12600                           plusw2	equ	0xFDB
 12601                           fsr2h	equ	0xFDA
 12602                           fsr2l	equ	0xFD9
 12603                           status	equ	0xFD8
 12604                           
 12605 ;; *************** function _RTCC_to_caltime *****************
 12606 ;; Defined at:
 12607 ;;		line 253 in file "../My_library/My_RTCC.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  tm              2    2[BANK0 ] PTR struct .
 12610 ;;		 -> now(14), 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  dumy            1    4[BANK0 ] unsigned char 
 12613 ;; Return value:  Size  Location     Type
 12614 ;;		None               void
 12615 ;; Registers used:
 12616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12625 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12626 ;;Total ram usage:        3 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:   13
 12629 ;; This function calls:
 12630 ;;		_x_to_d
 12631 ;; This function is called by:
 12632 ;;		_RTCC_from_RTCC
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text59
 12637  012C18                     __ptext59:
 12638                           	opt stack 0
 12639  012C18                     _RTCC_to_caltime:
 12640                           	opt stack 11
 12641  012C18                     l952:
 12642  012C18  010F               	movlb	15	; () banked
 12643  012C1A  B93F               	btfsc	63,4,b	;volatile
 12644  012C1C  D7FD               	goto	l952
 12645                           
 12646                           ; BSR set to: 15
 12647                           ;My_RTCC.c: 256: RTCCFGbits.RTCPTR0 = 1;
 12648  012C1E  010F               	movlb	15	; () banked
 12649  012C20  813F               	bsf	63,0,b	;volatile
 12650                           
 12651                           ;My_RTCC.c: 257: RTCCFGbits.RTCPTR1 = 1;
 12652  012C22  010F               	movlb	15	; () banked
 12653  012C24  833F               	bsf	63,1,b	;volatile
 12654                           
 12655                           ; BSR set to: 15
 12656                           ;My_RTCC.c: 259: tm->YY = x_to_d(RTCVALL);
 12657  012C26  0100               	movlb	0	; () banked
 12658  012C28  EE20 F00A          	lfsr	2,10
 12659  012C2C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12660  012C2E  26D9               	addwf	fsr2l,f,c
 12661  012C30  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12662  012C32  22DA               	addwfc	fsr2h,f,c
 12663  012C34  010F               	movlb	15	; () banked
 12664  012C36  513A               	movf	58,w,b	;volatile
 12665  012C38  EC53  F0A0         	call	_x_to_d
 12666  012C3C  6EDF               	movwf	indf2,c
 12667                           
 12668                           ;My_RTCC.c: 260: uint8_t dumy = RTCVALH;
 12669  012C3E  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 12670                           
 12671                           ;My_RTCC.c: 261: tm->DD = x_to_d(RTCVALL);
 12672  012C42  0100               	movlb	0	; () banked
 12673  012C44  EE20 F008          	lfsr	2,8
 12674  012C48  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12675  012C4A  26D9               	addwf	fsr2l,f,c
 12676  012C4C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12677  012C4E  22DA               	addwfc	fsr2h,f,c
 12678  012C50  010F               	movlb	15	; () banked
 12679  012C52  513A               	movf	58,w,b	;volatile
 12680  012C54  EC53  F0A0         	call	_x_to_d
 12681  012C58  6EDF               	movwf	indf2,c
 12682                           
 12683                           ;My_RTCC.c: 262: tm->MM = x_to_d(RTCVALH);
 12684  012C5A  0100               	movlb	0	; () banked
 12685  012C5C  EE20 F009          	lfsr	2,9
 12686  012C60  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12687  012C62  26D9               	addwf	fsr2l,f,c
 12688  012C64  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12689  012C66  22DA               	addwfc	fsr2h,f,c
 12690  012C68  010F               	movlb	15	; () banked
 12691  012C6A  513B               	movf	59,w,b	;volatile
 12692  012C6C  EC53  F0A0         	call	_x_to_d
 12693  012C70  6EDF               	movwf	indf2,c
 12694                           
 12695                           ;My_RTCC.c: 263: tm->hh = x_to_d(RTCVALL);
 12696  012C72  0100               	movlb	0	; () banked
 12697  012C74  EE20 F006          	lfsr	2,6
 12698  012C78  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12699  012C7A  26D9               	addwf	fsr2l,f,c
 12700  012C7C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12701  012C7E  22DA               	addwfc	fsr2h,f,c
 12702  012C80  010F               	movlb	15	; () banked
 12703  012C82  513A               	movf	58,w,b	;volatile
 12704  012C84  EC53  F0A0         	call	_x_to_d
 12705  012C88  6EDF               	movwf	indf2,c
 12706                           
 12707                           ;My_RTCC.c: 264: tm->EE = x_to_d(RTCVALH);
 12708  012C8A  0100               	movlb	0	; () banked
 12709  012C8C  EE20 F007          	lfsr	2,7
 12710  012C90  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12711  012C92  26D9               	addwf	fsr2l,f,c
 12712  012C94  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12713  012C96  22DA               	addwfc	fsr2h,f,c
 12714  012C98  010F               	movlb	15	; () banked
 12715  012C9A  513B               	movf	59,w,b	;volatile
 12716  012C9C  EC53  F0A0         	call	_x_to_d
 12717  012CA0  6EDF               	movwf	indf2,c
 12718                           
 12719                           ;My_RTCC.c: 265: tm->ss = x_to_d(RTCVALL);
 12720  012CA2  0100               	movlb	0	; () banked
 12721  012CA4  EE20 F004          	lfsr	2,4
 12722  012CA8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12723  012CAA  26D9               	addwf	fsr2l,f,c
 12724  012CAC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12725  012CAE  22DA               	addwfc	fsr2h,f,c
 12726  012CB0  010F               	movlb	15	; () banked
 12727  012CB2  513A               	movf	58,w,b	;volatile
 12728  012CB4  EC53  F0A0         	call	_x_to_d
 12729  012CB8  6EDF               	movwf	indf2,c
 12730                           
 12731                           ;My_RTCC.c: 266: tm->mm = x_to_d(RTCVALH);
 12732  012CBA  0100               	movlb	0	; () banked
 12733  012CBC  EE20 F005          	lfsr	2,5
 12734  012CC0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12735  012CC2  26D9               	addwf	fsr2l,f,c
 12736  012CC4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12737  012CC6  22DA               	addwfc	fsr2h,f,c
 12738  012CC8  010F               	movlb	15	; () banked
 12739  012CCA  513B               	movf	59,w,b	;volatile
 12740  012CCC  EC53  F0A0         	call	_x_to_d
 12741  012CD0  6EDF               	movwf	indf2,c
 12742  012CD2  0012               	return		;funcret
 12743  012CD4                     __end_of_RTCC_to_caltime:
 12744                           	opt stack 0
 12745                           tblptru	equ	0xFF8
 12746                           tblptrh	equ	0xFF7
 12747                           tblptrl	equ	0xFF6
 12748                           tablat	equ	0xFF5
 12749                           prodh	equ	0xFF4
 12750                           prodl	equ	0xFF3
 12751                           intcon	equ	0xFF2
 12752                           intcon2	equ	0xFF1
 12753                           indf0	equ	0xFEF
 12754                           postinc0	equ	0xFEE
 12755                           fsr0h	equ	0xFEA
 12756                           fsr0l	equ	0xFE9
 12757                           wreg	equ	0xFE8
 12758                           indf1	equ	0xFE7
 12759                           postinc1	equ	0xFE6
 12760                           postdec1	equ	0xFE5
 12761                           fsr1h	equ	0xFE2
 12762                           fsr1l	equ	0xFE1
 12763                           indf2	equ	0xFDF
 12764                           postinc2	equ	0xFDE
 12765                           postdec2	equ	0xFDD
 12766                           plusw2	equ	0xFDB
 12767                           fsr2h	equ	0xFDA
 12768                           fsr2l	equ	0xFD9
 12769                           status	equ	0xFD8
 12770                           
 12771 ;; *************** function _x_to_d *****************
 12772 ;; Defined at:
 12773 ;;		line 240 in file "../My_library/My_RTCC.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  hex             1    wreg     unsigned char 
 12776 ;; Auto vars:     Size  Location     Type
 12777 ;;  hex             1    1[BANK0 ] unsigned char 
 12778 ;; Return value:  Size  Location     Type
 12779 ;;                  1    wreg      unsigned char 
 12780 ;; Registers used:
 12781 ;;		wreg, status,2, status,0, prodl, prodh
 12782 ;; Tracked objects:
 12783 ;;		On entry : 0/0
 12784 ;;		On exit  : 0/0
 12785 ;;		Unchanged: 0/0
 12786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12791 ;;Total ram usage:        2 bytes
 12792 ;; Hardware stack levels used:    1
 12793 ;; Hardware stack levels required when called:   12
 12794 ;; This function calls:
 12795 ;;		Nothing
 12796 ;; This function is called by:
 12797 ;;		_RTCC_to_caltime
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801                           	psect	text60
 12802  0140A6                     __ptext60:
 12803                           	opt stack 0
 12804  0140A6                     _x_to_d:
 12805                           	opt stack 11
 12806                           
 12807                           ;incstack = 0
 12808                           ;x_to_d@hex stored from wreg
 12809  0140A6  0100               	movlb	0	; () banked
 12810  0140A8  6F61               	movwf	x_to_d@hex& (0+255),b
 12811                           
 12812                           ;My_RTCC.c: 241: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12813  0140AA  C061  F060         	movff	x_to_d@hex,??_x_to_d
 12814  0140AE  0E0F               	movlw	15
 12815  0140B0  0100               	movlb	0	; () banked
 12816  0140B2  1760               	andwf	??_x_to_d& (0+255),f,b
 12817  0140B4  0100               	movlb	0	; () banked
 12818  0140B6  3961               	swapf	x_to_d@hex& (0+255),w,b
 12819  0140B8  0B0F               	andlw	15
 12820  0140BA  0B0F               	andlw	15
 12821  0140BC  0D0A               	mullw	10
 12822  0140BE  50F3               	movf	prodl,w,c
 12823  0140C0  0100               	movlb	0	; () banked
 12824  0140C2  2560               	addwf	??_x_to_d& (0+255),w,b
 12825  0140C4  0012               	return	
 12826  0140C6                     __end_of_x_to_d:
 12827                           	opt stack 0
 12828                           tblptru	equ	0xFF8
 12829                           tblptrh	equ	0xFF7
 12830                           tblptrl	equ	0xFF6
 12831                           tablat	equ	0xFF5
 12832                           prodh	equ	0xFF4
 12833                           prodl	equ	0xFF3
 12834                           intcon	equ	0xFF2
 12835                           intcon2	equ	0xFF1
 12836                           indf0	equ	0xFEF
 12837                           postinc0	equ	0xFEE
 12838                           fsr0h	equ	0xFEA
 12839                           fsr0l	equ	0xFE9
 12840                           wreg	equ	0xFE8
 12841                           indf1	equ	0xFE7
 12842                           postinc1	equ	0xFE6
 12843                           postdec1	equ	0xFE5
 12844                           fsr1h	equ	0xFE2
 12845                           fsr1l	equ	0xFE1
 12846                           indf2	equ	0xFDF
 12847                           postinc2	equ	0xFDE
 12848                           postdec2	equ	0xFDD
 12849                           plusw2	equ	0xFDB
 12850                           fsr2h	equ	0xFDA
 12851                           fsr2l	equ	0xFD9
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function _I2C_LCD_SetCursor *****************
 12855 ;; Defined at:
 12856 ;;		line 159 in file "../My_library/My_ST7032.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  col             1    wreg     unsigned char 
 12859 ;;  row             1    6[BANK0 ] unsigned char 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;  col             1    9[BANK0 ] unsigned char 
 12862 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 12863 ;; Return value:  Size  Location     Type
 12864 ;;		None               void
 12865 ;; Registers used:
 12866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12872 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12876 ;;Total ram usage:        4 bytes
 12877 ;; Hardware stack levels used:    1
 12878 ;; Hardware stack levels required when called:   15
 12879 ;; This function calls:
 12880 ;;		_I2C_LCD_Command
 12881 ;; This function is called by:
 12882 ;;		_main
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886                           	psect	text61
 12887  013EA8                     __ptext61:
 12888                           	opt stack 0
 12889  013EA8                     _I2C_LCD_SetCursor:
 12890                           	opt stack 15
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;incstack = 0
 12894                           ;I2C_LCD_SetCursor@col stored from wreg
 12895  013EA8  0100               	movlb	0	; () banked
 12896  013EAA  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 12897                           
 12898                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 12899  013EAC  C0FC  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 12900  013EB0  C0FD  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 12901                           
 12902                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 12903  013EB4  0100               	movlb	0	; () banked
 12904  013EB6  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 12905  013EB8  0D01               	mullw	1
 12906  013EBA  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 12907  013EBC  24F3               	addwf	prodl,w,c
 12908  013EBE  6ED9               	movwf	fsr2l,c
 12909  013EC0  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 12910  013EC2  20F4               	addwfc	prodh,w,c
 12911  013EC4  6EDA               	movwf	fsr2h,c
 12912  013EC6  50DF               	movf	indf2,w,c
 12913  013EC8  0100               	movlb	0	; () banked
 12914  013ECA  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 12915  013ECC  0980               	iorlw	128
 12916  013ECE  ECBC  F09E         	call	_I2C_LCD_Command
 12917  013ED2  0012               	return		;funcret
 12918  013ED4                     __end_of_I2C_LCD_SetCursor:
 12919                           	opt stack 0
 12920                           tblptru	equ	0xFF8
 12921                           tblptrh	equ	0xFF7
 12922                           tblptrl	equ	0xFF6
 12923                           tablat	equ	0xFF5
 12924                           prodh	equ	0xFF4
 12925                           prodl	equ	0xFF3
 12926                           intcon	equ	0xFF2
 12927                           intcon2	equ	0xFF1
 12928                           indf0	equ	0xFEF
 12929                           postinc0	equ	0xFEE
 12930                           fsr0h	equ	0xFEA
 12931                           fsr0l	equ	0xFE9
 12932                           wreg	equ	0xFE8
 12933                           indf1	equ	0xFE7
 12934                           postinc1	equ	0xFE6
 12935                           postdec1	equ	0xFE5
 12936                           fsr1h	equ	0xFE2
 12937                           fsr1l	equ	0xFE1
 12938                           indf2	equ	0xFDF
 12939                           postinc2	equ	0xFDE
 12940                           postdec2	equ	0xFDD
 12941                           plusw2	equ	0xFDB
 12942                           fsr2h	equ	0xFDA
 12943                           fsr2l	equ	0xFD9
 12944                           status	equ	0xFD8
 12945                           
 12946 ;; *************** function _I2C_LCD_Command *****************
 12947 ;; Defined at:
 12948 ;;		line 141 in file "../My_library/My_ST7032.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;  c               1    wreg     unsigned char 
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;  c               1    4[BANK0 ] unsigned char 
 12953 ;;  ans             1    5[BANK0 ] unsigned char 
 12954 ;; Return value:  Size  Location     Type
 12955 ;;		None               void
 12956 ;; Registers used:
 12957 ;;		wreg, status,2, status,0, cstack
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12967 ;;Total ram usage:        2 bytes
 12968 ;; Hardware stack levels used:    1
 12969 ;; Hardware stack levels required when called:   14
 12970 ;; This function calls:
 12971 ;;		_I2C_Send
 12972 ;;		_I2C_Start
 12973 ;;		_I2C_Stop
 12974 ;; This function is called by:
 12975 ;;		_I2C_LCD_Clear
 12976 ;;		_I2C_LCD_SetCursor
 12977 ;;		_I2C_LCD_init
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text62
 12982  013D78                     __ptext62:
 12983                           	opt stack 0
 12984  013D78                     _I2C_LCD_Command:
 12985                           	opt stack 14
 12986                           
 12987                           ;incstack = 0
 12988                           ;I2C_LCD_Command@c stored from wreg
 12989  013D78  0100               	movlb	0	; () banked
 12990  013D7A  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 12991                           
 12992                           ;My_ST7032.c: 142: uint8_t ans;
 12993                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 12994  013D7C  0E00               	movlw	0
 12995  013D7E  0100               	movlb	0	; () banked
 12996  013D80  6F62               	movwf	I2C_Start@rw& (0+255),b
 12997  013D82  0E3E               	movlw	62
 12998  013D84  EC26  F09F         	call	_I2C_Start
 12999  013D88  0100               	movlb	0	; () banked
 13000  013D8A  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;My_ST7032.c: 145: if (ans == 0) {
 13004  013D8C  0100               	movlb	0	; () banked
 13005  013D8E  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 13006  013D90  0100               	movlb	0	; () banked
 13007  013D92  A4D8               	btfss	status,2,c
 13008  013D94  D007               	goto	l1107
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 13012  013D96  0E80               	movlw	128
 13013  013D98  ECA7  F0A0         	call	_I2C_Send
 13014                           
 13015                           ;My_ST7032.c: 148: I2C_Send(c);
 13016  013D9C  0100               	movlb	0	; () banked
 13017  013D9E  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 13018  013DA0  ECA7  F0A0         	call	_I2C_Send
 13019  013DA4                     l1107:
 13020                           
 13021                           ;My_ST7032.c: 149: }
 13022                           ;My_ST7032.c: 150: I2C_Stop();
 13023  013DA4  ECCA  F0A0         	call	_I2C_Stop	;wreg free
 13024                           
 13025                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 13026  013DA8  0E68               	movlw	104
 13027  013DAA                     u9647:
 13028  013DAA  2EE8               	decfsz	wreg,f,c
 13029  013DAC  D7FE               	goto	u9647
 13030  013DAE  0012               	return		;funcret
 13031  013DB0                     __end_of_I2C_LCD_Command:
 13032                           	opt stack 0
 13033                           tblptru	equ	0xFF8
 13034                           tblptrh	equ	0xFF7
 13035                           tblptrl	equ	0xFF6
 13036                           tablat	equ	0xFF5
 13037                           prodh	equ	0xFF4
 13038                           prodl	equ	0xFF3
 13039                           intcon	equ	0xFF2
 13040                           intcon2	equ	0xFF1
 13041                           indf0	equ	0xFEF
 13042                           postinc0	equ	0xFEE
 13043                           fsr0h	equ	0xFEA
 13044                           fsr0l	equ	0xFE9
 13045                           wreg	equ	0xFE8
 13046                           indf1	equ	0xFE7
 13047                           postinc1	equ	0xFE6
 13048                           postdec1	equ	0xFE5
 13049                           fsr1h	equ	0xFE2
 13050                           fsr1l	equ	0xFE1
 13051                           indf2	equ	0xFDF
 13052                           postinc2	equ	0xFDE
 13053                           postdec2	equ	0xFDD
 13054                           plusw2	equ	0xFDB
 13055                           fsr2h	equ	0xFDA
 13056                           fsr2l	equ	0xFD9
 13057                           status	equ	0xFD8
 13058                           
 13059 ;; *************** function _I2C_LCD_Puts *****************
 13060 ;; Defined at:
 13061 ;;		line 178 in file "../My_library/My_ST7032.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 13064 ;;		 -> STR_47(9), STR_46(9), 
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;  ans             2    7[BANK0 ] int 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;		None               void
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13077 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13079 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13080 ;;Total ram usage:        5 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:   14
 13083 ;; This function calls:
 13084 ;;		_I2C_Send
 13085 ;;		_I2C_Start
 13086 ;;		_I2C_Stop
 13087 ;; This function is called by:
 13088 ;;		_main
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text63
 13093  0137D2                     __ptext63:
 13094                           	opt stack 0
 13095  0137D2                     _I2C_LCD_Puts:
 13096                           	opt stack 16
 13097                           
 13098                           ;My_ST7032.c: 179: int ans;
 13099                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 13100                           
 13101                           ;incstack = 0
 13102  0137D2  0E00               	movlw	0
 13103  0137D4  0100               	movlb	0	; () banked
 13104  0137D6  6F62               	movwf	I2C_Start@rw& (0+255),b
 13105  0137D8  0E3E               	movlw	62
 13106  0137DA  EC26  F09F         	call	_I2C_Start
 13107  0137DE  0100               	movlb	0	; () banked
 13108  0137E0  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 13109  0137E2  0100               	movlb	0	; () banked
 13110  0137E4  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 13111  0137E6  0100               	movlb	0	; () banked
 13112  0137E8  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 13113  0137EA  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;My_ST7032.c: 182: if (ans == 0) {
 13117  0137EC  0100               	movlb	0	; () banked
 13118  0137EE  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 13119  0137F0  0100               	movlb	0	; () banked
 13120  0137F2  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 13121  0137F4  A4D8               	btfss	status,2,c
 13122  0137F6  D01F               	goto	l9394
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 13126  0137F8  0E40               	movlw	64
 13127  0137FA  ECA7  F0A0         	call	_I2C_Send
 13128                           
 13129                           ;My_ST7032.c: 184: while (*s) {
 13130  0137FE  D010               	goto	l9392
 13131  013800                     l9386:
 13132                           
 13133                           ;My_ST7032.c: 185: I2C_Send(*s++);
 13134  013800  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13135  013804  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13136  013808                     	if	0	;tblptru may be non-zero
 13137  013808                     	endif
 13138  013808                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13139  013808  0E00               	movlw	low (__mediumconst shr (0+16))
 13140  01380A  6EF8               	movwf	tblptru,c
 13141  01380C                     	endif
 13142  01380C  0008               	tblrd		*
 13143  01380E  50F5               	movf	tablat,w,c
 13144  013810  ECA7  F0A0         	call	_I2C_Send
 13145  013814  0100               	movlb	0	; () banked
 13146  013816  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 13147  013818  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 13151  01381A  0E68               	movlw	104
 13152  01381C                     u9657:
 13153  01381C  2EE8               	decfsz	wreg,f,c
 13154  01381E  D7FE               	goto	u9657
 13155  013820                     l9392:
 13156  013820  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13157  013824  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13158  013828                     	if	0	;tblptru may be non-zero
 13159  013828                     	endif
 13160  013828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13161  013828  0E00               	movlw	low (__mediumconst shr (0+16))
 13162  01382A  6EF8               	movwf	tblptru,c
 13163  01382C                     	endif
 13164  01382C  0008               	tblrd		*
 13165  01382E  50F5               	movf	tablat,w,c
 13166  013830  0900               	iorlw	0
 13167  013832  A4D8               	btfss	status,2,c
 13168  013834  D7E5               	goto	l9386
 13169  013836                     l9394:
 13170                           
 13171                           ;My_ST7032.c: 187: }
 13172                           ;My_ST7032.c: 188: }
 13173                           ;My_ST7032.c: 189: I2C_Stop();
 13174  013836  ECCA  F0A0         	call	_I2C_Stop	;wreg free
 13175  01383A  0012               	return		;funcret
 13176  01383C                     __end_of_I2C_LCD_Puts:
 13177                           	opt stack 0
 13178                           tblptru	equ	0xFF8
 13179                           tblptrh	equ	0xFF7
 13180                           tblptrl	equ	0xFF6
 13181                           tablat	equ	0xFF5
 13182                           prodh	equ	0xFF4
 13183                           prodl	equ	0xFF3
 13184                           intcon	equ	0xFF2
 13185                           intcon2	equ	0xFF1
 13186                           indf0	equ	0xFEF
 13187                           postinc0	equ	0xFEE
 13188                           fsr0h	equ	0xFEA
 13189                           fsr0l	equ	0xFE9
 13190                           wreg	equ	0xFE8
 13191                           indf1	equ	0xFE7
 13192                           postinc1	equ	0xFE6
 13193                           postdec1	equ	0xFE5
 13194                           fsr1h	equ	0xFE2
 13195                           fsr1l	equ	0xFE1
 13196                           indf2	equ	0xFDF
 13197                           postinc2	equ	0xFDE
 13198                           postdec2	equ	0xFDD
 13199                           plusw2	equ	0xFDB
 13200                           fsr2h	equ	0xFDA
 13201                           fsr2l	equ	0xFD9
 13202                           status	equ	0xFD8
 13203                           
 13204 ;; *************** function _I2C_Stop *****************
 13205 ;; Defined at:
 13206 ;;		line 96 in file "../My_library/My_I2C.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;		None
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;		None               void
 13213 ;; Registers used:
 13214 ;;		wreg, status,2, status,0, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used:    1
 13226 ;; Hardware stack levels required when called:   13
 13227 ;; This function calls:
 13228 ;;		_I2C_IdleCheck
 13229 ;; This function is called by:
 13230 ;;		_I2C_LCD_Command
 13231 ;;		_I2C_LCD_Puts
 13232 ;;		_I2C_LCD_Putc
 13233 ;;		_I2C_LCD_CreateChar
 13234 ;; This function uses a non-reentrant model
 13235 ;;
 13236                           
 13237                           	psect	text64
 13238  014194                     __ptext64:
 13239                           	opt stack 0
 13240  014194                     _I2C_Stop:
 13241                           	opt stack 14
 13242                           
 13243                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 13244                           
 13245                           ;incstack = 0
 13246  014194  0E05               	movlw	5
 13247  014196  EC63  F0A0         	call	_I2C_IdleCheck
 13248                           
 13249                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 13250  01419A  84C5               	bsf	4037,2,c	;volatile
 13251  01419C  0012               	return		;funcret
 13252  01419E                     __end_of_I2C_Stop:
 13253                           	opt stack 0
 13254                           tblptru	equ	0xFF8
 13255                           tblptrh	equ	0xFF7
 13256                           tblptrl	equ	0xFF6
 13257                           tablat	equ	0xFF5
 13258                           prodh	equ	0xFF4
 13259                           prodl	equ	0xFF3
 13260                           intcon	equ	0xFF2
 13261                           intcon2	equ	0xFF1
 13262                           indf0	equ	0xFEF
 13263                           postinc0	equ	0xFEE
 13264                           fsr0h	equ	0xFEA
 13265                           fsr0l	equ	0xFE9
 13266                           wreg	equ	0xFE8
 13267                           indf1	equ	0xFE7
 13268                           postinc1	equ	0xFE6
 13269                           postdec1	equ	0xFE5
 13270                           fsr1h	equ	0xFE2
 13271                           fsr1l	equ	0xFE1
 13272                           indf2	equ	0xFDF
 13273                           postinc2	equ	0xFDE
 13274                           postdec2	equ	0xFDD
 13275                           plusw2	equ	0xFDB
 13276                           fsr2h	equ	0xFDA
 13277                           fsr2l	equ	0xFD9
 13278                           status	equ	0xFD8
 13279                           
 13280 ;; *************** function _I2C_Start *****************
 13281 ;; Defined at:
 13282 ;;		line 72 in file "../My_library/My_I2C.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  adrs            1    wreg     unsigned char 
 13285 ;;  rw              1    2[BANK0 ] unsigned char 
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;  adrs            1    3[BANK0 ] unsigned char 
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      unsigned char 
 13290 ;; Registers used:
 13291 ;;		wreg, status,2, status,0, cstack
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13297 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13301 ;;Total ram usage:        2 bytes
 13302 ;; Hardware stack levels used:    1
 13303 ;; Hardware stack levels required when called:   13
 13304 ;; This function calls:
 13305 ;;		_I2C_IdleCheck
 13306 ;; This function is called by:
 13307 ;;		_I2C_LCD_Command
 13308 ;;		_I2C_LCD_Puts
 13309 ;;		_I2C_LCD_Putc
 13310 ;;		_I2C_LCD_CreateChar
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314                           	psect	text65
 13315  013E4C                     __ptext65:
 13316                           	opt stack 0
 13317  013E4C                     _I2C_Start:
 13318                           	opt stack 14
 13319                           
 13320                           ;incstack = 0
 13321                           ;I2C_Start@adrs stored from wreg
 13322  013E4C  0100               	movlb	0	; () banked
 13323  013E4E  6F63               	movwf	I2C_Start@adrs& (0+255),b
 13324                           
 13325                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 13326  013E50  0E05               	movlw	5
 13327  013E52  EC63  F0A0         	call	_I2C_IdleCheck
 13328                           
 13329                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 13330  013E56  80C5               	bsf	4037,0,c	;volatile
 13331                           
 13332                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 13333  013E58  0E05               	movlw	5
 13334  013E5A  EC63  F0A0         	call	_I2C_IdleCheck
 13335                           
 13336                           ;My_I2C.c: 78: SSP1IF = 0;
 13337  013E5E  969E               	bcf	3998,3,c	;volatile
 13338                           
 13339                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 13340  013E60  0100               	movlb	0	; () banked
 13341  013E62  5163               	movf	I2C_Start@adrs& (0+255),w,b
 13342  013E64  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 13343  013E66  0100               	movlb	0	; () banked
 13344  013E68  2562               	addwf	I2C_Start@rw& (0+255),w,b
 13345  013E6A  6EC9               	movwf	4041,c	;volatile
 13346  013E6C                     l626:
 13347  013E6C  A69E               	btfss	3998,3,c	;volatile
 13348  013E6E  D7FE               	goto	l626
 13349                           
 13350                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 13351  013E70  ACC5               	btfss	4037,6,c	;volatile
 13352  013E72  D002               	goto	u8210
 13353  013E74  0E01               	movlw	1
 13354  013E76  0012               	return	
 13355  013E78                     u8210:
 13356  013E78  0E00               	movlw	0
 13357  013E7A  0012               	return	
 13358  013E7C                     __end_of_I2C_Start:
 13359                           	opt stack 0
 13360                           tblptru	equ	0xFF8
 13361                           tblptrh	equ	0xFF7
 13362                           tblptrl	equ	0xFF6
 13363                           tablat	equ	0xFF5
 13364                           prodh	equ	0xFF4
 13365                           prodl	equ	0xFF3
 13366                           intcon	equ	0xFF2
 13367                           intcon2	equ	0xFF1
 13368                           indf0	equ	0xFEF
 13369                           postinc0	equ	0xFEE
 13370                           fsr0h	equ	0xFEA
 13371                           fsr0l	equ	0xFE9
 13372                           wreg	equ	0xFE8
 13373                           indf1	equ	0xFE7
 13374                           postinc1	equ	0xFE6
 13375                           postdec1	equ	0xFE5
 13376                           fsr1h	equ	0xFE2
 13377                           fsr1l	equ	0xFE1
 13378                           indf2	equ	0xFDF
 13379                           postinc2	equ	0xFDE
 13380                           postdec2	equ	0xFDD
 13381                           plusw2	equ	0xFDB
 13382                           fsr2h	equ	0xFDA
 13383                           fsr2l	equ	0xFD9
 13384                           status	equ	0xFD8
 13385                           
 13386 ;; *************** function _I2C_Send *****************
 13387 ;; Defined at:
 13388 ;;		line 102 in file "../My_library/My_I2C.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;  data            1    wreg     unsigned char 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;  data            1    2[BANK0 ] unsigned char 
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1    wreg      unsigned char 
 13395 ;; Registers used:
 13396 ;;		wreg, status,2, status,0, cstack
 13397 ;; Tracked objects:
 13398 ;;		On entry : 0/0
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13406 ;;Total ram usage:        1 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:   13
 13409 ;; This function calls:
 13410 ;;		_I2C_IdleCheck
 13411 ;; This function is called by:
 13412 ;;		_I2C_LCD_Command
 13413 ;;		_I2C_LCD_Puts
 13414 ;;		_I2C_LCD_Putc
 13415 ;;		_I2C_LCD_CreateChar
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           	psect	text66
 13420  01414E                     __ptext66:
 13421                           	opt stack 0
 13422  01414E                     _I2C_Send:
 13423                           	opt stack 14
 13424                           
 13425                           ;incstack = 0
 13426                           ;I2C_Send@data stored from wreg
 13427  01414E  0100               	movlb	0	; () banked
 13428  014150  6F62               	movwf	I2C_Send@data& (0+255),b
 13429                           
 13430                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 13431  014152  0E05               	movlw	5
 13432  014154  EC63  F0A0         	call	_I2C_IdleCheck
 13433                           
 13434                           ;My_I2C.c: 104: SSP1IF = 0;
 13435  014158  969E               	bcf	3998,3,c	;volatile
 13436                           
 13437                           ;My_I2C.c: 105: SSP1BUF = data;
 13438  01415A  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 13439  01415E                     l641:
 13440  01415E  A69E               	btfss	3998,3,c	;volatile
 13441  014160  D7FE               	goto	l641
 13442                           
 13443                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 13444                           ;	Return value of _I2C_Send is never used
 13445  014162  50C5               	movf	4037,w,c	;volatile
 13446  014164  0012               	return	
 13447  014166                     __end_of_I2C_Send:
 13448                           	opt stack 0
 13449                           tblptru	equ	0xFF8
 13450                           tblptrh	equ	0xFF7
 13451                           tblptrl	equ	0xFF6
 13452                           tablat	equ	0xFF5
 13453                           prodh	equ	0xFF4
 13454                           prodl	equ	0xFF3
 13455                           intcon	equ	0xFF2
 13456                           intcon2	equ	0xFF1
 13457                           indf0	equ	0xFEF
 13458                           postinc0	equ	0xFEE
 13459                           fsr0h	equ	0xFEA
 13460                           fsr0l	equ	0xFE9
 13461                           wreg	equ	0xFE8
 13462                           indf1	equ	0xFE7
 13463                           postinc1	equ	0xFE6
 13464                           postdec1	equ	0xFE5
 13465                           fsr1h	equ	0xFE2
 13466                           fsr1l	equ	0xFE1
 13467                           indf2	equ	0xFDF
 13468                           postinc2	equ	0xFDE
 13469                           postdec2	equ	0xFDD
 13470                           plusw2	equ	0xFDB
 13471                           fsr2h	equ	0xFDA
 13472                           fsr2l	equ	0xFD9
 13473                           status	equ	0xFD8
 13474                           
 13475 ;; *************** function _I2C_IdleCheck *****************
 13476 ;; Defined at:
 13477 ;;		line 58 in file "../My_library/My_I2C.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;  mask            1    wreg     unsigned char 
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;  mask            1    1[BANK0 ] unsigned char 
 13482 ;; Return value:  Size  Location     Type
 13483 ;;		None               void
 13484 ;; Registers used:
 13485 ;;		wreg, status,2, status,0
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13495 ;;Total ram usage:        2 bytes
 13496 ;; Hardware stack levels used:    1
 13497 ;; Hardware stack levels required when called:   12
 13498 ;; This function calls:
 13499 ;;		Nothing
 13500 ;; This function is called by:
 13501 ;;		_I2C_Start
 13502 ;;		_I2C_Stop
 13503 ;;		_I2C_Send
 13504 ;;		_I2C_rStart
 13505 ;;		_I2C_Receive
 13506 ;; This function uses a non-reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text67
 13510  0140C6                     __ptext67:
 13511                           	opt stack 0
 13512  0140C6                     _I2C_IdleCheck:
 13513                           	opt stack 14
 13514                           
 13515                           ;incstack = 0
 13516                           ;I2C_IdleCheck@mask stored from wreg
 13517  0140C6  0100               	movlb	0	; () banked
 13518  0140C8  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 13519  0140CA                     l8412:
 13520  0140CA  50C7               	movf	4039,w,c	;volatile
 13521  0140CC  0100               	movlb	0	; () banked
 13522  0140CE  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 13523  0140D0  0100               	movlb	0	; () banked
 13524  0140D2  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 13525  0140D4  50C5               	movf	4037,w,c	;volatile
 13526  0140D6  0B1F               	andlw	31
 13527  0140D8  0100               	movlb	0	; () banked
 13528  0140DA  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 13529  0140DC  0900               	iorlw	0
 13530  0140DE  B4D8               	btfsc	status,2,c
 13531  0140E0  0012               	return	
 13532  0140E2  D7F3               	goto	l8412
 13533  0140E4                     __end_of_I2C_IdleCheck:
 13534                           	opt stack 0
 13535                           tblptru	equ	0xFF8
 13536                           tblptrh	equ	0xFF7
 13537                           tblptrl	equ	0xFF6
 13538                           tablat	equ	0xFF5
 13539                           prodh	equ	0xFF4
 13540                           prodl	equ	0xFF3
 13541                           intcon	equ	0xFF2
 13542                           intcon2	equ	0xFF1
 13543                           indf0	equ	0xFEF
 13544                           postinc0	equ	0xFEE
 13545                           fsr0h	equ	0xFEA
 13546                           fsr0l	equ	0xFE9
 13547                           wreg	equ	0xFE8
 13548                           indf1	equ	0xFE7
 13549                           postinc1	equ	0xFE6
 13550                           postdec1	equ	0xFE5
 13551                           fsr1h	equ	0xFE2
 13552                           fsr1l	equ	0xFE1
 13553                           indf2	equ	0xFDF
 13554                           postinc2	equ	0xFDE
 13555                           postdec2	equ	0xFDD
 13556                           plusw2	equ	0xFDB
 13557                           fsr2h	equ	0xFDA
 13558                           fsr2l	equ	0xFD9
 13559                           status	equ	0xFD8
 13560                           
 13561 ;; *************** function _ISR *****************
 13562 ;; Defined at:
 13563 ;;		line 34 in file "main.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;		None
 13566 ;; Auto vars:     Size  Location     Type
 13567 ;;		None
 13568 ;; Return value:  Size  Location     Type
 13569 ;;		None               void
 13570 ;; Registers used:
 13571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13572 ;; Tracked objects:
 13573 ;;		On entry : 0/0
 13574 ;;		On exit  : 0/0
 13575 ;;		Unchanged: 0/0
 13576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13579 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13580 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13581 ;;Total ram usage:       14 bytes
 13582 ;; Hardware stack levels used:    1
 13583 ;; Hardware stack levels required when called:   11
 13584 ;; This function calls:
 13585 ;;		_I2C_ISR
 13586 ;;		_UART_ISR
 13587 ;;		_USB_CDC_ISR
 13588 ;; This function is called by:
 13589 ;;		Interrupt level 2
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           	psect	intcode
 13594  000008                     __pintcode:
 13595                           	opt stack 0
 13596  000008                     _ISR:
 13597                           	opt stack 10
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;incstack = 0
 13601  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13602  00000A  CFFA F01F          	movff	pclath,??_ISR
 13603  00000E  CFFB F020          	movff	pclatu,??_ISR+1
 13604  000012  CFE9 F021          	movff	fsr0l,??_ISR+2
 13605  000016  CFEA F022          	movff	fsr0h,??_ISR+3
 13606  00001A  CFE1 F023          	movff	fsr1l,??_ISR+4
 13607  00001E  CFE2 F024          	movff	fsr1h,??_ISR+5
 13608  000022  CFD9 F025          	movff	fsr2l,??_ISR+6
 13609  000026  CFDA F026          	movff	fsr2h,??_ISR+7
 13610  00002A  CFF3 F027          	movff	prodl,??_ISR+8
 13611  00002E  CFF4 F028          	movff	prodh,??_ISR+9
 13612  000032  CFF6 F029          	movff	tblptrl,??_ISR+10
 13613  000036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 13614  00003A  CFF8 F02B          	movff	tblptru,??_ISR+12
 13615  00003E  CFF5 F02C          	movff	tablat,??_ISR+13
 13616                           
 13617                           ;main.c: 35: USB_CDC_ISR();
 13618  000042  ECCF  F0A0         	call	_USB_CDC_ISR	;wreg free
 13619                           
 13620                           ;main.c: 36: UART_ISR();
 13621  000046  ECDC  F09D         	call	_UART_ISR	;wreg free
 13622                           
 13623                           ;main.c: 37: I2C_ISR();
 13624  00004A  EC72  F0A0         	call	_I2C_ISR	;wreg free
 13625                           
 13626                           ;main.c: 38: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 13627  00004E  B4F2               	btfsc	intcon,2,c	;volatile
 13628  000050  AAF2               	btfss	intcon,5,c	;volatile
 13629  000052  D001               	goto	i2l1485
 13630                           
 13631                           ;main.c: 39: INTCONbits.T0IF = 0;
 13632  000054  94F2               	bcf	intcon,2,c	;volatile
 13633  000056                     i2l1485:
 13634                           
 13635                           ;main.c: 40: }
 13636                           ;main.c: 41: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 13637  000056  B09E               	btfsc	3998,0,c	;volatile
 13638  000058  A09D               	btfss	3997,0,c	;volatile
 13639  00005A  D003               	goto	i2l8084
 13640                           
 13641                           ;main.c: 42: PIR1bits.TMR1IF = 0;
 13642  00005C  909E               	bcf	3998,0,c	;volatile
 13643                           
 13644                           ;main.c: 43: TMR1H = 0xC0;
 13645  00005E  0EC0               	movlw	192
 13646  000060  6ECF               	movwf	4047,c	;volatile
 13647  000062                     i2l8084:
 13648                           
 13649                           ;main.c: 44: }
 13650                           ;main.c: 45: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 13651  000062  B2A1               	btfsc	4001,1,c	;volatile
 13652  000064  A2A0               	btfss	4000,1,c	;volatile
 13653  000066  D001               	goto	i2l1488
 13654                           
 13655                           ;main.c: 46: PIR2bits.TMR3IF = 0;
 13656  000068  92A1               	bcf	4001,1,c	;volatile
 13657  00006A                     i2l1488:
 13658  00006A  C02C  FFF5         	movff	??_ISR+13,tablat
 13659  00006E  C02B  FFF8         	movff	??_ISR+12,tblptru
 13660  000072  C02A  FFF7         	movff	??_ISR+11,tblptrh
 13661  000076  C029  FFF6         	movff	??_ISR+10,tblptrl
 13662  00007A  C028  FFF4         	movff	??_ISR+9,prodh
 13663  00007E  C027  FFF3         	movff	??_ISR+8,prodl
 13664  000082  C026  FFDA         	movff	??_ISR+7,fsr2h
 13665  000086  C025  FFD9         	movff	??_ISR+6,fsr2l
 13666  00008A  C024  FFE2         	movff	??_ISR+5,fsr1h
 13667  00008E  C023  FFE1         	movff	??_ISR+4,fsr1l
 13668  000092  C022  FFEA         	movff	??_ISR+3,fsr0h
 13669  000096  C021  FFE9         	movff	??_ISR+2,fsr0l
 13670  00009A  C020  FFFB         	movff	??_ISR+1,pclatu
 13671  00009E  C01F  FFFA         	movff	??_ISR,pclath
 13672  0000A2  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13673  0000A4  0011               	retfie		f
 13674  0000A6                     __end_of_ISR:
 13675                           	opt stack 0
 13676                           pclatu	equ	0xFFB
 13677                           pclath	equ	0xFFA
 13678                           tblptru	equ	0xFF8
 13679                           tblptrh	equ	0xFF7
 13680                           tblptrl	equ	0xFF6
 13681                           tablat	equ	0xFF5
 13682                           prodh	equ	0xFF4
 13683                           prodl	equ	0xFF3
 13684                           intcon	equ	0xFF2
 13685                           intcon2	equ	0xFF1
 13686                           indf0	equ	0xFEF
 13687                           postinc0	equ	0xFEE
 13688                           fsr0h	equ	0xFEA
 13689                           fsr0l	equ	0xFE9
 13690                           wreg	equ	0xFE8
 13691                           indf1	equ	0xFE7
 13692                           postinc1	equ	0xFE6
 13693                           postdec1	equ	0xFE5
 13694                           fsr1h	equ	0xFE2
 13695                           fsr1l	equ	0xFE1
 13696                           indf2	equ	0xFDF
 13697                           postinc2	equ	0xFDE
 13698                           postdec2	equ	0xFDD
 13699                           plusw2	equ	0xFDB
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8
 13703                           
 13704 ;; *************** function _USB_CDC_ISR *****************
 13705 ;; Defined at:
 13706 ;;		line 33 in file "../My_library/My_usb_cdc.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;		None               void
 13713 ;; Registers used:
 13714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13724 ;;Total ram usage:        0 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:   10
 13727 ;; This function calls:
 13728 ;;		_USBDeviceTasks
 13729 ;; This function is called by:
 13730 ;;		_ISR
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text69
 13735  01419E                     __ptext69:
 13736                           	opt stack 0
 13737  01419E                     _USB_CDC_ISR:
 13738                           	opt stack 10
 13739                           
 13740                           ;My_usb_cdc.c: 35: USBDeviceTasks();
 13741                           
 13742                           ;incstack = 0
 13743  01419E  EC4F  F08B         	call	_USBDeviceTasks	;wreg free
 13744  0141A2  0012               	return		;funcret
 13745  0141A4                     __end_of_USB_CDC_ISR:
 13746                           	opt stack 0
 13747                           pclatu	equ	0xFFB
 13748                           pclath	equ	0xFFA
 13749                           tblptru	equ	0xFF8
 13750                           tblptrh	equ	0xFF7
 13751                           tblptrl	equ	0xFF6
 13752                           tablat	equ	0xFF5
 13753                           prodh	equ	0xFF4
 13754                           prodl	equ	0xFF3
 13755                           intcon	equ	0xFF2
 13756                           intcon2	equ	0xFF1
 13757                           indf0	equ	0xFEF
 13758                           postinc0	equ	0xFEE
 13759                           fsr0h	equ	0xFEA
 13760                           fsr0l	equ	0xFE9
 13761                           wreg	equ	0xFE8
 13762                           indf1	equ	0xFE7
 13763                           postinc1	equ	0xFE6
 13764                           postdec1	equ	0xFE5
 13765                           fsr1h	equ	0xFE2
 13766                           fsr1l	equ	0xFE1
 13767                           indf2	equ	0xFDF
 13768                           postinc2	equ	0xFDE
 13769                           postdec2	equ	0xFDD
 13770                           plusw2	equ	0xFDB
 13771                           fsr2h	equ	0xFDA
 13772                           fsr2l	equ	0xFD9
 13773                           status	equ	0xFD8
 13774                           
 13775 ;; *************** function _USBDeviceTasks *****************
 13776 ;; Defined at:
 13777 ;;		line 490 in file "../My_library/usb/usb_device.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;		None
 13780 ;; Auto vars:     Size  Location     Type
 13781 ;;  i               1   29[COMRAM] unsigned char 
 13782 ;; Return value:  Size  Location     Type
 13783 ;;		None               void
 13784 ;; Registers used:
 13785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13786 ;; Tracked objects:
 13787 ;;		On entry : 0/0
 13788 ;;		On exit  : 0/0
 13789 ;;		Unchanged: 0/0
 13790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13795 ;;Total ram usage:        1 bytes
 13796 ;; Hardware stack levels used:    1
 13797 ;; Hardware stack levels required when called:    9
 13798 ;; This function calls:
 13799 ;;		_USBCtrlEPAllowStatusStage
 13800 ;;		_USBCtrlEPService
 13801 ;;		_USBStallHandler
 13802 ;;		_USBSuspend
 13803 ;;		_USBWakeFromSuspend
 13804 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13805 ;;		i2_USBDeviceInit
 13806 ;; This function is called by:
 13807 ;;		_USB_CDC_ISR
 13808 ;; This function uses a non-reentrant model
 13809 ;;
 13810                           
 13811                           	psect	text70
 13812  01169E                     __ptext70:
 13813                           	opt stack 0
 13814  01169E                     _USBDeviceTasks:
 13815                           	opt stack 10
 13816                           
 13817                           ;usb_device.c: 492: uint8_t i;
 13818                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 13819                           
 13820                           ;incstack = 0
 13821  01169E  0440               	decf	_USBDeviceState,w,c	;volatile
 13822  0116A0  B4D8               	btfsc	status,2,c
 13823                           
 13824                           ;usb_device.c: 604: {
 13825                           ;usb_device.c: 614: if(!UCONbits.SE0)
 13826  0116A2  BA65               	btfsc	3941,5,c	;volatile
 13827  0116A4  D008               	goto	i2l6996
 13828                           
 13829                           ;usb_device.c: 615: {
 13830                           ;usb_device.c: 616: {UIR = 0;};
 13831  0116A6  0E00               	movlw	0
 13832  0116A8  6E62               	movwf	3938,c	;volatile
 13833                           
 13834                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 13835  0116AA  010F               	movlb	15	; () banked
 13836  0116AC  8136               	bsf	54,0,b	;volatile
 13837                           
 13838                           ; BSR set to: 15
 13839                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 13840  0116AE  010F               	movlb	15	; () banked
 13841  0116B0  8936               	bsf	54,4,b	;volatile
 13842                           
 13843                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 13844  0116B2  0E02               	movlw	2
 13845  0116B4  6E40               	movwf	_USBDeviceState,c	;volatile
 13846  0116B6                     i2l6996:
 13847                           
 13848                           ;usb_device.c: 623: }
 13849                           ;usb_device.c: 624: }
 13850                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 13851  0116B6  A462               	btfss	3938,2,c	;volatile
 13852  0116B8  D006               	goto	i2l7004
 13853  0116BA  010F               	movlb	15	; () banked
 13854  0116BC  A536               	btfss	54,2,b	;volatile
 13855  0116BE  D003               	goto	i2l7004
 13856                           
 13857                           ; BSR set to: 15
 13858                           ;usb_device.c: 641: {
 13859                           ;usb_device.c: 642: (UIR &= 0xFB);
 13860  0116C0  9462               	bcf	3938,2,c	;volatile
 13861                           
 13862                           ; BSR set to: 15
 13863                           ;usb_device.c: 646: USBWakeFromSuspend();
 13864  0116C2  EC0D  F09F         	call	_USBWakeFromSuspend	;wreg free
 13865  0116C6                     i2l7004:
 13866                           
 13867                           ;usb_device.c: 648: }
 13868                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 13869  0116C6  A265               	btfss	3941,1,c	;volatile
 13870  0116C8  D002               	goto	i2l158
 13871                           
 13872                           ;usb_device.c: 654: {
 13873                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 13874  0116CA  98A1               	bcf	4001,4,c	;volatile
 13875                           
 13876                           ;usb_device.c: 656: return;
 13877  0116CC  0012               	return	
 13878  0116CE                     i2l158:
 13879                           
 13880                           ;usb_device.c: 657: }
 13881                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 13882  0116CE  A062               	btfss	3938,0,c	;volatile
 13883  0116D0  D009               	goto	i2l7018
 13884  0116D2  010F               	movlb	15	; () banked
 13885  0116D4  A136               	btfss	54,0,b	;volatile
 13886  0116D6  D006               	goto	i2l7018
 13887                           
 13888                           ; BSR set to: 15
 13889                           ;usb_device.c: 670: {
 13890                           ;usb_device.c: 671: USBDeviceInit();
 13891  0116D8  ECF2  F08B         	call	i2_USBDeviceInit	;wreg free
 13892                           
 13893                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 13894  0116DC  88A0               	bsf	4000,4,c	;volatile
 13895                           
 13896                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 13897  0116DE  0E04               	movlw	4
 13898  0116E0  6E40               	movwf	_USBDeviceState,c	;volatile
 13899                           
 13900                           ;usb_device.c: 687: (UIR &= 0xFE);
 13901  0116E2  9062               	bcf	3938,0,c	;volatile
 13902  0116E4                     i2l7018:
 13903                           
 13904                           ;usb_device.c: 688: }
 13905                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 13906  0116E4  A862               	btfss	3938,4,c	;volatile
 13907  0116E6  D006               	goto	i2l7026
 13908  0116E8  010F               	movlb	15	; () banked
 13909  0116EA  A936               	btfss	54,4,b	;volatile
 13910  0116EC  D003               	goto	i2l7026
 13911                           
 13912                           ; BSR set to: 15
 13913                           ;usb_device.c: 694: {
 13914                           ;usb_device.c: 699: USBSuspend();
 13915  0116EE  EC6A  F09F         	call	_USBSuspend	;wreg free
 13916                           
 13917                           ;usb_device.c: 702: (UIR &= 0xEF);
 13918  0116F2  9862               	bcf	3938,4,c	;volatile
 13919  0116F4                     i2l7026:
 13920                           
 13921                           ;usb_device.c: 703: }
 13922                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 13923  0116F4  AC62               	btfss	3938,6,c	;volatile
 13924  0116F6  D019               	goto	i2l7042
 13925                           
 13926                           ;usb_device.c: 706: {
 13927                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 13928  0116F8  010F               	movlb	15	; () banked
 13929  0116FA  AD36               	btfss	54,6,b	;volatile
 13930  0116FC  D00E               	goto	i2l7032
 13931                           
 13932                           ; BSR set to: 15
 13933                           ;usb_device.c: 708: {
 13934                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 13935  0116FE  0E00               	movlw	0
 13936  011700  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13937  011702  0E73               	movlw	115
 13938  011704  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13939  011706  0E00               	movlw	0
 13940  011708  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13941  01170A  0E00               	movlw	0
 13942  01170C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13943  01170E  0E00               	movlw	0
 13944  011710  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13945  011712  0E01               	movlw	1
 13946  011714  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13947  011716  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13948  01171A                     i2l7032:
 13949                           
 13950                           ;usb_device.c: 710: }
 13951                           ;usb_device.c: 711: (UIR &= 0xBF);
 13952  01171A  9C62               	bcf	3938,6,c	;volatile
 13953                           
 13954                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 13955  01171C  5043               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13956  01171E  A4D8               	btfss	status,2,c
 13957                           
 13958                           ;usb_device.c: 737: {
 13959                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 13960  011720  0643               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 13961                           
 13962                           ;usb_device.c: 739: }
 13963                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 13964  011722  5043               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13965  011724  B4D8               	btfsc	status,2,c
 13966                           
 13967                           ;usb_device.c: 746: {
 13968                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 13969  011726  EC8B  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13970  01172A                     i2l7042:
 13971                           
 13972                           ;usb_device.c: 748: }
 13973                           ;usb_device.c: 750: }
 13974                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 13975  01172A  AA62               	btfss	3938,5,c	;volatile
 13976  01172C  D004               	goto	i2l7048
 13977  01172E  010F               	movlb	15	; () banked
 13978  011730  BB36               	btfsc	54,5,b	;volatile
 13979                           
 13980                           ; BSR set to: 15
 13981                           ;usb_device.c: 753: {
 13982                           ;usb_device.c: 754: USBStallHandler();
 13983  011732  EC24  F09E         	call	_USBStallHandler	;wreg free
 13984  011736                     i2l7048:
 13985                           
 13986                           ;usb_device.c: 755: }
 13987                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 13988  011736  A262               	btfss	3938,1,c	;volatile
 13989  011738  D012               	goto	i2l7056
 13990  01173A  010F               	movlb	15	; () banked
 13991  01173C  A336               	btfss	54,1,b	;volatile
 13992  01173E  D00F               	goto	i2l7056
 13993                           
 13994                           ; BSR set to: 15
 13995                           ;usb_device.c: 758: {
 13996                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 13997  011740  0E7F               	movlw	127
 13998  011742  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13999  011744  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14000  011746  0E00               	movlw	0
 14001  011748  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14002  01174A  0E00               	movlw	0
 14003  01174C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14004  01174E  0E00               	movlw	0
 14005  011750  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14006  011752  0E01               	movlw	1
 14007  011754  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14008  011756  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14009                           
 14010                           ;usb_device.c: 760: {UEIR = 0;};
 14011  01175A  0E00               	movlw	0
 14012  01175C  6E63               	movwf	3939,c	;volatile
 14013  01175E                     i2l7056:
 14014                           
 14015                           ;usb_device.c: 768: }
 14016                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 14017  01175E  0E04               	movlw	4
 14018  011760  6040               	cpfslt	_USBDeviceState,c	;volatile
 14019  011762  D002               	goto	i2l168
 14020                           
 14021                           ;usb_device.c: 776: {
 14022                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 14023  011764  98A1               	bcf	4001,4,c	;volatile
 14024                           
 14025                           ;usb_device.c: 778: return;
 14026  011766  0012               	return	
 14027  011768                     i2l168:
 14028                           
 14029                           ;usb_device.c: 779: }
 14030                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 14031  011768  010F               	movlb	15	; () banked
 14032  01176A  A736               	btfss	54,3,b	;volatile
 14033  01176C  D039               	goto	i2l169
 14034                           
 14035                           ; BSR set to: 15
 14036                           ;usb_device.c: 785: {
 14037                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 14038  01176E  0E00               	movlw	0
 14039  011770  6E1E               	movwf	USBDeviceTasks@i,c
 14040  011772                     i2l7062:
 14041                           
 14042                           ; BSR set to: 15
 14043  011772  0E03               	movlw	3
 14044  011774  641E               	cpfsgt	USBDeviceTasks@i,c
 14045  011776  D001               	goto	i2l170
 14046  011778  D033               	goto	i2l169
 14047  01177A                     i2l170:
 14048                           
 14049                           ;usb_device.c: 787: {
 14050                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 14051  01177A  A662               	btfss	3938,3,c	;volatile
 14052  01177C  D031               	goto	i2l169
 14053                           
 14054                           ;usb_device.c: 789: {
 14055                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 14056  01177E  CF64 F055          	movff	3940,_USTATcopy	;volatile
 14057                           
 14058                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 14059  011782  3055               	rrcf	_USTATcopy,w,c	;volatile
 14060  011784  32E8               	rrcf	wreg,f,c
 14061  011786  32E8               	rrcf	wreg,f,c
 14062  011788  0B0F               	andlw	15
 14063  01178A  6E47               	movwf	_endpoint_number,c	;volatile
 14064                           
 14065                           ;usb_device.c: 794: (UIR &= 0xF7);
 14066  01178C  9662               	bcf	3938,3,c	;volatile
 14067                           
 14068                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 14069  01178E  B455               	btfsc	_USTATcopy,2,c	;volatile
 14070  011790  D007               	goto	i2l7076
 14071                           
 14072                           ;usb_device.c: 800: {
 14073                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 14074  011792  5047               	movf	_endpoint_number,w,c	;volatile
 14075  011794  0D01               	mullw	1
 14076  011796  0EE7               	movlw	low _ep_data_out
 14077  011798  24F3               	addwf	prodl,w,c
 14078  01179A  6ED9               	movwf	fsr2l,c
 14079  01179C  0E00               	movlw	high _ep_data_out
 14080  01179E  D006               	goto	L4
 14081  0117A0                     i2l7076:
 14082                           
 14083                           ;usb_device.c: 803: else
 14084                           ;usb_device.c: 804: {
 14085                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 14086  0117A0  5047               	movf	_endpoint_number,w,c	;volatile
 14087  0117A2  0D01               	mullw	1
 14088  0117A4  0EE4               	movlw	low _ep_data_in
 14089  0117A6  24F3               	addwf	prodl,w,c
 14090  0117A8  6ED9               	movwf	fsr2l,c
 14091  0117AA  0E00               	movlw	high _ep_data_in
 14092  0117AC                     L4:
 14093  0117AC  20F4               	addwfc	prodh,w,c
 14094  0117AE  6EDA               	movwf	fsr2h,c
 14095  0117B0  0100               	movlb	0	; () banked
 14096  0117B2  70DF               	btg	indf2,0,c
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;usb_device.c: 806: }
 14100                           ;usb_device.c: 811: if(endpoint_number == 0)
 14101                           
 14102                           ; BSR set to: 0
 14103  0117B4  5047               	movf	_endpoint_number,w,c	;volatile
 14104  0117B6  A4D8               	btfss	status,2,c
 14105  0117B8  D003               	goto	i2l7082
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;usb_device.c: 812: {
 14109                           ;usb_device.c: 813: USBCtrlEPService();
 14110  0117BA  ECBE  F093         	call	_USBCtrlEPService	;wreg free
 14111                           
 14112                           ;usb_device.c: 814: }
 14113  0117BE  D00E               	goto	i2l7084
 14114  0117C0                     i2l7082:
 14115                           
 14116                           ;usb_device.c: 815: else
 14117                           ;usb_device.c: 816: {
 14118                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14119  0117C0  0E00               	movlw	0
 14120  0117C2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14121  0117C4  0E72               	movlw	114
 14122  0117C6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14123  0117C8  0E55               	movlw	low _USTATcopy
 14124  0117CA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14125  0117CC  0E00               	movlw	high _USTATcopy
 14126  0117CE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14127  0117D0  0E00               	movlw	0
 14128  0117D2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14129  0117D4  0E00               	movlw	0
 14130  0117D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14131  0117D8  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14132  0117DC                     i2l7084:
 14133  0117DC  2A1E               	incf	USBDeviceTasks@i,f,c
 14134  0117DE  D7C9               	goto	i2l7062
 14135  0117E0                     i2l169:
 14136                           
 14137                           ;usb_device.c: 823: }
 14138                           ;usb_device.c: 824: }
 14139                           ;usb_device.c: 825: }
 14140                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 14141  0117E0  98A1               	bcf	4001,4,c	;volatile
 14142  0117E2  0012               	return		;funcret
 14143  0117E4                     __end_of_USBDeviceTasks:
 14144                           	opt stack 0
 14145                           pclatu	equ	0xFFB
 14146                           pclath	equ	0xFFA
 14147                           tblptru	equ	0xFF8
 14148                           tblptrh	equ	0xFF7
 14149                           tblptrl	equ	0xFF6
 14150                           tablat	equ	0xFF5
 14151                           prodh	equ	0xFF4
 14152                           prodl	equ	0xFF3
 14153                           intcon	equ	0xFF2
 14154                           intcon2	equ	0xFF1
 14155                           indf0	equ	0xFEF
 14156                           postinc0	equ	0xFEE
 14157                           fsr0h	equ	0xFEA
 14158                           fsr0l	equ	0xFE9
 14159                           wreg	equ	0xFE8
 14160                           indf1	equ	0xFE7
 14161                           postinc1	equ	0xFE6
 14162                           postdec1	equ	0xFE5
 14163                           fsr1h	equ	0xFE2
 14164                           fsr1l	equ	0xFE1
 14165                           indf2	equ	0xFDF
 14166                           postinc2	equ	0xFDE
 14167                           postdec2	equ	0xFDD
 14168                           plusw2	equ	0xFDB
 14169                           fsr2h	equ	0xFDA
 14170                           fsr2l	equ	0xFD9
 14171                           status	equ	0xFD8
 14172                           
 14173 ;; *************** function i2_USBDeviceInit *****************
 14174 ;; Defined at:
 14175 ;;		line 299 in file "../My_library/usb/usb_device.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;		None
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14180 ;; Return value:  Size  Location     Type
 14181 ;;		None               void
 14182 ;; Registers used:
 14183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14184 ;; Tracked objects:
 14185 ;;		On entry : 0/0
 14186 ;;		On exit  : 0/0
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;Total ram usage:        1 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:    1
 14196 ;; This function calls:
 14197 ;;		i2_memset
 14198 ;; This function is called by:
 14199 ;;		_USBDeviceTasks
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text71
 14204  0117E4                     __ptext71:
 14205                           	opt stack 0
 14206  0117E4                     i2_USBDeviceInit:
 14207                           	opt stack 17
 14208                           
 14209                           ;usb_device.c: 301: uint8_t i;
 14210                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 14211                           
 14212                           ;incstack = 0
 14213  0117E4  98A0               	bcf	4000,4,c	;volatile
 14214                           
 14215                           ;usb_device.c: 306: {UEIR = 0;};
 14216  0117E6  0E00               	movlw	0
 14217  0117E8  6E63               	movwf	3939,c	;volatile
 14218                           
 14219                           ;usb_device.c: 309: {UIR = 0;};
 14220  0117EA  0E00               	movlw	0
 14221  0117EC  6E62               	movwf	3938,c	;volatile
 14222                           
 14223                           ;usb_device.c: 312: UEP0 = 0;
 14224  0117EE  0E00               	movlw	0
 14225  0117F0  010F               	movlb	15	; () banked
 14226  0117F2  6F26               	movwf	38,b	;volatile
 14227                           
 14228                           ; BSR set to: 15
 14229                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 14230  0117F4  0E27               	movlw	39
 14231  0117F6  6E01               	movwf	i2memset@p1,c
 14232  0117F8  0E0F               	movlw	15
 14233  0117FA  6E02               	movwf	i2memset@p1+1,c
 14234  0117FC  0E00               	movlw	0
 14235  0117FE  6E04               	movwf	i2memset@c+1,c
 14236  011800  0E00               	movlw	0
 14237  011802  6E03               	movwf	i2memset@c,c
 14238  011804  0E00               	movlw	0
 14239  011806  6E06               	movwf	i2memset@n+1,c
 14240  011808  0E02               	movlw	2
 14241  01180A  6E05               	movwf	i2memset@n,c
 14242  01180C  EC80  F09F         	call	i2_memset	;wreg free
 14243                           
 14244                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14245  011810  0E16               	movlw	22
 14246  011812  010F               	movlb	15	; () banked
 14247  011814  6F39               	movwf	57,b	;volatile
 14248                           
 14249                           ; BSR set to: 15
 14250  011816  0E9F               	movlw	159
 14251  011818  010F               	movlb	15	; () banked
 14252  01181A  6F37               	movwf	55,b	;volatile
 14253                           
 14254                           ; BSR set to: 15
 14255  01181C  0E7B               	movlw	123
 14256  01181E  010F               	movlb	15	; () banked
 14257  011820  6F36               	movwf	54,b	;volatile
 14258                           
 14259                           ; BSR set to: 15
 14260                           ;usb_device.c: 319: ;
 14261                           ;usb_device.c: 322: ;
 14262                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14263  011822  0E00               	movlw	0
 14264  011824  6E09               	movwf	i2USBDeviceInit@i,c
 14265  011826                     i2l6920:
 14266                           
 14267                           ; BSR set to: 15
 14268  011826  0E0B               	movlw	11
 14269  011828  6409               	cpfsgt	i2USBDeviceInit@i,c
 14270  01182A  D001               	goto	i2l6924
 14271  01182C  D00E               	goto	i2l146
 14272  01182E                     i2l6924:
 14273                           
 14274                           ;usb_device.c: 326: {
 14275                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 14276  01182E  5009               	movf	i2USBDeviceInit@i,w,c
 14277  011830  0D04               	mullw	4
 14278  011832  0E00               	movlw	0
 14279  011834  24F3               	addwf	prodl,w,c
 14280  011836  6ED9               	movwf	fsr2l,c
 14281  011838  0E0D               	movlw	13
 14282  01183A  20F4               	addwfc	prodh,w,c
 14283  01183C  6EDA               	movwf	fsr2h,c
 14284  01183E  6ADE               	clrf	postinc2,c
 14285  011840  6ADE               	clrf	postinc2,c
 14286  011842  6ADE               	clrf	postinc2,c
 14287  011844  6ADD               	clrf	postdec2,c
 14288  011846  2A09               	incf	i2USBDeviceInit@i,f,c
 14289  011848  D7EE               	goto	i2l6920
 14290  01184A                     i2l146:
 14291                           
 14292                           ;usb_device.c: 328: }
 14293                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 14294  01184A  8C65               	bsf	3941,6,c	;volatile
 14295                           
 14296                           ;usb_device.c: 334: UADDR = 0x00;
 14297  01184C  0E00               	movlw	0
 14298  01184E  010F               	movlb	15	; () banked
 14299  011850  6F38               	movwf	56,b	;volatile
 14300                           
 14301                           ; BSR set to: 15
 14302                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 14303  011852  9865               	bcf	3941,4,c	;volatile
 14304                           
 14305                           ; BSR set to: 15
 14306                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 14307  011854  9C65               	bcf	3941,6,c	;volatile
 14308                           
 14309                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 14310  011856  D00C               	goto	i2l6944
 14311  011858                     i2l6936:
 14312                           
 14313                           ;usb_device.c: 344: {
 14314                           ;usb_device.c: 345: (UIR &= 0xF7);
 14315  011858  9662               	bcf	3938,3,c	;volatile
 14316                           
 14317                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 14318  01185A  0E00               	movlw	0
 14319  01185C  0100               	movlb	0	; () banked
 14320  01185E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14321                           
 14322                           ; BSR set to: 0
 14323                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 14324  011860  0E00               	movlw	0
 14325  011862  0100               	movlb	0	; () banked
 14326  011864  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 14330  011866  0E00               	movlw	0
 14331  011868  0100               	movlb	0	; () banked
 14332  01186A  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 14333  01186C  0E00               	movlw	0
 14334  01186E  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 14335  011870                     i2l6944:
 14336  011870  B662               	btfsc	3938,3,c	;volatile
 14337  011872  D7F2               	goto	i2l6936
 14338                           
 14339                           ;usb_device.c: 350: }
 14340                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 14341  011874  0E01               	movlw	1
 14342  011876  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14343                           
 14344                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 14345  011878  0E01               	movlw	1
 14346  01187A  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14347                           
 14348                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 14349  01187C  0E00               	movlw	0
 14350  01187E  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14351                           
 14352                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 14353  011880  0E00               	movlw	0
 14354  011882  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14355                           
 14356                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 14357  011884  0E00               	movlw	0
 14358  011886  0100               	movlb	0	; () banked
 14359  011888  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14360                           
 14361                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 14362  01188A  0E00               	movlw	0
 14363  01188C  6E09               	movwf	i2USBDeviceInit@i,c
 14364  01188E                     i2l6948:
 14365                           
 14366                           ; BSR set to: 0
 14367  01188E  0E02               	movlw	2
 14368  011890  6409               	cpfsgt	i2USBDeviceInit@i,c
 14369  011892  D001               	goto	i2l6952
 14370  011894  D02E               	goto	i2l6958
 14371  011896                     i2l6952:
 14372                           
 14373                           ;usb_device.c: 364: {
 14374                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 14375  011896  5009               	movf	i2USBDeviceInit@i,w,c
 14376  011898  0D02               	mullw	2
 14377  01189A  0ED8               	movlw	low _pBDTEntryIn
 14378  01189C  24F3               	addwf	prodl,w,c
 14379  01189E  6ED9               	movwf	fsr2l,c
 14380  0118A0  0E00               	movlw	high _pBDTEntryIn
 14381  0118A2  20F4               	addwfc	prodh,w,c
 14382  0118A4  6EDA               	movwf	fsr2h,c
 14383  0118A6  0E00               	movlw	0
 14384  0118A8  6EDE               	movwf	postinc2,c
 14385  0118AA  0E00               	movlw	0
 14386  0118AC  6EDD               	movwf	postdec2,c
 14387                           
 14388                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 14389  0118AE  5009               	movf	i2USBDeviceInit@i,w,c
 14390  0118B0  0D02               	mullw	2
 14391  0118B2  0EDE               	movlw	low _pBDTEntryOut
 14392  0118B4  24F3               	addwf	prodl,w,c
 14393  0118B6  6ED9               	movwf	fsr2l,c
 14394  0118B8  0E00               	movlw	high _pBDTEntryOut
 14395  0118BA  20F4               	addwfc	prodh,w,c
 14396  0118BC  6EDA               	movwf	fsr2h,c
 14397  0118BE  0E00               	movlw	0
 14398  0118C0  6EDE               	movwf	postinc2,c
 14399  0118C2  0E00               	movlw	0
 14400  0118C4  6EDD               	movwf	postdec2,c
 14401                           
 14402                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 14403  0118C6  5009               	movf	i2USBDeviceInit@i,w,c
 14404  0118C8  0D01               	mullw	1
 14405  0118CA  0EE4               	movlw	low _ep_data_in
 14406  0118CC  24F3               	addwf	prodl,w,c
 14407  0118CE  6ED9               	movwf	fsr2l,c
 14408  0118D0  0E00               	movlw	high _ep_data_in
 14409  0118D2  20F4               	addwfc	prodh,w,c
 14410  0118D4  6EDA               	movwf	fsr2h,c
 14411  0118D6  0E00               	movlw	0
 14412  0118D8  6EDF               	movwf	indf2,c
 14413                           
 14414                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 14415  0118DA  5009               	movf	i2USBDeviceInit@i,w,c
 14416  0118DC  0D01               	mullw	1
 14417  0118DE  0EE7               	movlw	low _ep_data_out
 14418  0118E0  24F3               	addwf	prodl,w,c
 14419  0118E2  6ED9               	movwf	fsr2l,c
 14420  0118E4  0E00               	movlw	high _ep_data_out
 14421  0118E6  20F4               	addwfc	prodh,w,c
 14422  0118E8  6EDA               	movwf	fsr2h,c
 14423  0118EA  0E00               	movlw	0
 14424  0118EC  6EDF               	movwf	indf2,c
 14425  0118EE  2A09               	incf	i2USBDeviceInit@i,f,c
 14426  0118F0  D7CE               	goto	i2l6948
 14427  0118F2                     i2l6958:
 14428                           
 14429                           ;usb_device.c: 369: }
 14430                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14431  0118F2  0E08               	movlw	8
 14432  0118F4  0100               	movlb	0	; () banked
 14433  0118F6  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 14434  0118F8  0E0D               	movlw	13
 14435  0118FA  0100               	movlb	0	; () banked
 14436  0118FC  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 14440  0118FE  0E16               	movlw	22
 14441  011900  010F               	movlb	15	; () banked
 14442  011902  6F26               	movwf	38,b	;volatile
 14443                           
 14444                           ; BSR set to: 15
 14445                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14446  011904  0E0D               	movlw	13
 14447  011906  010D               	movlb	13	; () banked
 14448  011908  6F03               	movwf	3,b	;volatile
 14449  01190A  0E30               	movlw	48
 14450  01190C  6F02               	movwf	2,b	;volatile
 14451                           
 14452                           ; BSR set to: 13
 14453                           ;usb_device.c: 377: BDT[0].CNT = 8;
 14454  01190E  0E08               	movlw	8
 14455  011910  010D               	movlb	13	; () banked
 14456  011912  6F01               	movwf	1,b	;volatile
 14457                           
 14458                           ; BSR set to: 13
 14459                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 14460  011914  0E04               	movlw	4
 14461  011916  010D               	movlb	13	; () banked
 14462  011918  6F00               	movwf	0,b	;volatile
 14463                           
 14464                           ; BSR set to: 13
 14465                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 14466  01191A  010D               	movlb	13	; () banked
 14467  01191C  8F00               	bsf	0,7,b	;volatile
 14468                           
 14469                           ; BSR set to: 13
 14470                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 14471  01191E  0E00               	movlw	0
 14472  011920  6E54               	movwf	_USBActiveConfiguration,c	;volatile
 14473                           
 14474                           ; BSR set to: 13
 14475                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 14476  011922  0E00               	movlw	0
 14477  011924  6E40               	movwf	_USBDeviceState,c	;volatile
 14478                           
 14479                           ; BSR set to: 13
 14480  011926  0012               	return		;funcret
 14481  011928                     __end_ofi2_USBDeviceInit:
 14482                           	opt stack 0
 14483                           pclatu	equ	0xFFB
 14484                           pclath	equ	0xFFA
 14485                           tblptru	equ	0xFF8
 14486                           tblptrh	equ	0xFF7
 14487                           tblptrl	equ	0xFF6
 14488                           tablat	equ	0xFF5
 14489                           prodh	equ	0xFF4
 14490                           prodl	equ	0xFF3
 14491                           intcon	equ	0xFF2
 14492                           intcon2	equ	0xFF1
 14493                           indf0	equ	0xFEF
 14494                           postinc0	equ	0xFEE
 14495                           fsr0h	equ	0xFEA
 14496                           fsr0l	equ	0xFE9
 14497                           wreg	equ	0xFE8
 14498                           indf1	equ	0xFE7
 14499                           postinc1	equ	0xFE6
 14500                           postdec1	equ	0xFE5
 14501                           fsr1h	equ	0xFE2
 14502                           fsr1l	equ	0xFE1
 14503                           indf2	equ	0xFDF
 14504                           postinc2	equ	0xFDE
 14505                           postdec2	equ	0xFDD
 14506                           plusw2	equ	0xFDB
 14507                           fsr2h	equ	0xFDA
 14508                           fsr2l	equ	0xFD9
 14509                           status	equ	0xFD8
 14510                           
 14511 ;; *************** function _USBWakeFromSuspend *****************
 14512 ;; Defined at:
 14513 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;		None
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;		None
 14518 ;; Return value:  Size  Location     Type
 14519 ;;		None               void
 14520 ;; Registers used:
 14521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14531 ;;Total ram usage:        0 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; Hardware stack levels required when called:    5
 14534 ;; This function calls:
 14535 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14536 ;; This function is called by:
 14537 ;;		_USBDeviceTasks
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	text72
 14542  013E1A                     __ptext72:
 14543                           	opt stack 0
 14544  013E1A                     _USBWakeFromSuspend:
 14545                           	opt stack 13
 14546                           
 14547                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 14548                           
 14549                           ; BSR set to: 13
 14550                           ;incstack = 0
 14551  013E1A  0E00               	movlw	0
 14552  013E1C  0100               	movlb	0	; () banked
 14553  013E1E  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 14557  013E20  0E00               	movlw	0
 14558  013E22  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14559  013E24  0E74               	movlw	116
 14560  013E26  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14561  013E28  0E00               	movlw	0
 14562  013E2A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14563  013E2C  0E00               	movlw	0
 14564  013E2E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14565  013E30  0E00               	movlw	0
 14566  013E32  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14567  013E34  0E00               	movlw	0
 14568  013E36  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14569  013E38  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14570                           
 14571                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 14572  013E3C  9265               	bcf	3941,1,c	;volatile
 14573                           
 14574                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 14575  013E3E  010F               	movlb	15	; () banked
 14576  013E40  9536               	bcf	54,2,b	;volatile
 14577                           
 14578                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 14579  013E42  D001               	goto	i2l6654
 14580  013E44                     i2l6652:
 14581                           
 14582                           ;usb_device.c: 2343: {
 14583                           ;usb_device.c: 2344: (UIR &= 0xFB);
 14584  013E44  9462               	bcf	3938,2,c	;volatile
 14585  013E46                     i2l6654:
 14586  013E46  A462               	btfss	3938,2,c	;volatile
 14587  013E48  0012               	return	
 14588  013E4A  D7FC               	goto	i2l6652
 14589  013E4C                     __end_of_USBWakeFromSuspend:
 14590                           	opt stack 0
 14591                           pclatu	equ	0xFFB
 14592                           pclath	equ	0xFFA
 14593                           tblptru	equ	0xFF8
 14594                           tblptrh	equ	0xFF7
 14595                           tblptrl	equ	0xFF6
 14596                           tablat	equ	0xFF5
 14597                           prodh	equ	0xFF4
 14598                           prodl	equ	0xFF3
 14599                           intcon	equ	0xFF2
 14600                           intcon2	equ	0xFF1
 14601                           indf0	equ	0xFEF
 14602                           postinc0	equ	0xFEE
 14603                           fsr0h	equ	0xFEA
 14604                           fsr0l	equ	0xFE9
 14605                           wreg	equ	0xFE8
 14606                           indf1	equ	0xFE7
 14607                           postinc1	equ	0xFE6
 14608                           postdec1	equ	0xFE5
 14609                           fsr1h	equ	0xFE2
 14610                           fsr1l	equ	0xFE1
 14611                           indf2	equ	0xFDF
 14612                           postinc2	equ	0xFDE
 14613                           postdec2	equ	0xFDD
 14614                           plusw2	equ	0xFDB
 14615                           fsr2h	equ	0xFDA
 14616                           fsr2l	equ	0xFD9
 14617                           status	equ	0xFD8
 14618                           
 14619 ;; *************** function _USBSuspend *****************
 14620 ;; Defined at:
 14621 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;		None
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;		None
 14626 ;; Return value:  Size  Location     Type
 14627 ;;		None               void
 14628 ;; Registers used:
 14629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14639 ;;Total ram usage:        0 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; Hardware stack levels required when called:    5
 14642 ;; This function calls:
 14643 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14644 ;; This function is called by:
 14645 ;;		_USBDeviceTasks
 14646 ;; This function uses a non-reentrant model
 14647 ;;
 14648                           
 14649                           	psect	text73
 14650  013ED4                     __ptext73:
 14651                           	opt stack 0
 14652  013ED4                     _USBSuspend:
 14653                           	opt stack 13
 14654                           
 14655                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 14656                           
 14657                           ;incstack = 0
 14658  013ED4  010F               	movlb	15	; () banked
 14659  013ED6  8536               	bsf	54,2,b	;volatile
 14660                           
 14661                           ; BSR set to: 15
 14662                           ;usb_device.c: 2272: (UIR &= 0xEF);
 14663  013ED8  9862               	bcf	3938,4,c	;volatile
 14664                           
 14665                           ; BSR set to: 15
 14666                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 14667  013EDA  8265               	bsf	3941,1,c	;volatile
 14668                           
 14669                           ; BSR set to: 15
 14670                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 14671  013EDC  0E01               	movlw	1
 14672  013EDE  0100               	movlb	0	; () banked
 14673  013EE0  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 14677  013EE2  0E00               	movlw	0
 14678  013EE4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14679  013EE6  0E75               	movlw	117
 14680  013EE8  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14681  013EEA  0E00               	movlw	0
 14682  013EEC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14683  013EEE  0E00               	movlw	0
 14684  013EF0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14685  013EF2  0E00               	movlw	0
 14686  013EF4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14687  013EF6  0E00               	movlw	0
 14688  013EF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14689  013EFA  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14690  013EFE  0012               	return		;funcret
 14691  013F00                     __end_of_USBSuspend:
 14692                           	opt stack 0
 14693                           pclatu	equ	0xFFB
 14694                           pclath	equ	0xFFA
 14695                           tblptru	equ	0xFF8
 14696                           tblptrh	equ	0xFF7
 14697                           tblptrl	equ	0xFF6
 14698                           tablat	equ	0xFF5
 14699                           prodh	equ	0xFF4
 14700                           prodl	equ	0xFF3
 14701                           intcon	equ	0xFF2
 14702                           intcon2	equ	0xFF1
 14703                           indf0	equ	0xFEF
 14704                           postinc0	equ	0xFEE
 14705                           fsr0h	equ	0xFEA
 14706                           fsr0l	equ	0xFE9
 14707                           wreg	equ	0xFE8
 14708                           indf1	equ	0xFE7
 14709                           postinc1	equ	0xFE6
 14710                           postdec1	equ	0xFE5
 14711                           fsr1h	equ	0xFE2
 14712                           fsr1l	equ	0xFE1
 14713                           indf2	equ	0xFDF
 14714                           postinc2	equ	0xFDE
 14715                           postdec2	equ	0xFDD
 14716                           plusw2	equ	0xFDB
 14717                           fsr2h	equ	0xFDA
 14718                           fsr2l	equ	0xFD9
 14719                           status	equ	0xFD8
 14720                           
 14721 ;; *************** function _USBStallHandler *****************
 14722 ;; Defined at:
 14723 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 14724 ;; Parameters:    Size  Location     Type
 14725 ;;		None
 14726 ;; Auto vars:     Size  Location     Type
 14727 ;;		None
 14728 ;; Return value:  Size  Location     Type
 14729 ;;		None               void
 14730 ;; Registers used:
 14731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14732 ;; Tracked objects:
 14733 ;;		On entry : 0/0
 14734 ;;		On exit  : 0/0
 14735 ;;		Unchanged: 0/0
 14736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14741 ;;Total ram usage:        1 bytes
 14742 ;; Hardware stack levels used:    1
 14743 ;; This function calls:
 14744 ;;		Nothing
 14745 ;; This function is called by:
 14746 ;;		_USBDeviceTasks
 14747 ;; This function uses a non-reentrant model
 14748 ;;
 14749                           
 14750                           	psect	text74
 14751  013C48                     __ptext74:
 14752                           	opt stack 0
 14753  013C48                     _USBStallHandler:
 14754                           	opt stack 18
 14755                           
 14756                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 14757                           
 14758                           ;incstack = 0
 14759  013C48  010F               	movlb	15	; () banked
 14760  013C4A  A126               	btfss	38,0,b	;volatile
 14761  013C4C  D01E               	goto	i2l308
 14762                           
 14763                           ; BSR set to: 15
 14764                           ;usb_device.c: 2216: {
 14765                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 14766  013C4E  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14767  013C52  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14768  013C56  0E80               	movlw	128
 14769  013C58  18DE               	xorwf	postinc2,w,c
 14770  013C5A  A4D8               	btfss	status,2,c
 14771  013C5C  D014               	goto	i2l6676
 14772                           
 14773                           ; BSR set to: 15
 14774  013C5E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14775  013C62  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14776  013C66  0E84               	movlw	132
 14777  013C68  18DE               	xorwf	postinc2,w,c
 14778  013C6A  A4D8               	btfss	status,2,c
 14779  013C6C  D00C               	goto	i2l6676
 14780                           
 14781                           ; BSR set to: 15
 14782                           ;usb_device.c: 2219: {
 14783                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14784  013C6E  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14785  013C72  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14786  013C76  0E0C               	movlw	12
 14787  013C78  6EDF               	movwf	indf2,c
 14788                           
 14789                           ; BSR set to: 15
 14790                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14791  013C7A  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14792  013C7E  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14793  013C82  0E00               	movlw	0
 14794  013C84  8EDB               	bsf	plusw2,7,c
 14795  013C86                     i2l6676:
 14796                           
 14797                           ; BSR set to: 15
 14798                           ;usb_device.c: 2223: }
 14799                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 14800  013C86  010F               	movlb	15	; () banked
 14801  013C88  9126               	bcf	38,0,b	;volatile
 14802  013C8A                     i2l308:
 14803                           
 14804                           ; BSR set to: 15
 14805                           ;usb_device.c: 2225: }
 14806                           ;usb_device.c: 2227: (UIR &= 0xDF);
 14807  013C8A  9A62               	bcf	3938,5,c	;volatile
 14808                           
 14809                           ; BSR set to: 15
 14810  013C8C  0012               	return		;funcret
 14811  013C8E                     __end_of_USBStallHandler:
 14812                           	opt stack 0
 14813                           pclatu	equ	0xFFB
 14814                           pclath	equ	0xFFA
 14815                           tblptru	equ	0xFF8
 14816                           tblptrh	equ	0xFF7
 14817                           tblptrl	equ	0xFF6
 14818                           tablat	equ	0xFF5
 14819                           prodh	equ	0xFF4
 14820                           prodl	equ	0xFF3
 14821                           intcon	equ	0xFF2
 14822                           intcon2	equ	0xFF1
 14823                           indf0	equ	0xFEF
 14824                           postinc0	equ	0xFEE
 14825                           fsr0h	equ	0xFEA
 14826                           fsr0l	equ	0xFE9
 14827                           wreg	equ	0xFE8
 14828                           indf1	equ	0xFE7
 14829                           postinc1	equ	0xFE6
 14830                           postdec1	equ	0xFE5
 14831                           fsr1h	equ	0xFE2
 14832                           fsr1l	equ	0xFE1
 14833                           indf2	equ	0xFDF
 14834                           postinc2	equ	0xFDE
 14835                           postdec2	equ	0xFDD
 14836                           plusw2	equ	0xFDB
 14837                           fsr2h	equ	0xFDA
 14838                           fsr2l	equ	0xFD9
 14839                           status	equ	0xFD8
 14840                           
 14841 ;; *************** function _USBCtrlEPService *****************
 14842 ;; Defined at:
 14843 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;		None
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 14848 ;; Return value:  Size  Location     Type
 14849 ;;		None               void
 14850 ;; Registers used:
 14851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14852 ;; Tracked objects:
 14853 ;;		On entry : 0/0
 14854 ;;		On exit  : 0/0
 14855 ;;		Unchanged: 0/0
 14856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14861 ;;Total ram usage:        3 bytes
 14862 ;; Hardware stack levels used:    1
 14863 ;; Hardware stack levels required when called:    8
 14864 ;; This function calls:
 14865 ;;		_USBCtrlTrfInHandler
 14866 ;;		_USBCtrlTrfOutHandler
 14867 ;;		_USBCtrlTrfSetupHandler
 14868 ;; This function is called by:
 14869 ;;		_USBDeviceTasks
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text75
 14874  01277C                     __ptext75:
 14875                           	opt stack 0
 14876  01277C                     _USBCtrlEPService:
 14877                           	opt stack 10
 14878                           
 14879                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 14880                           
 14881                           ; BSR set to: 15
 14882                           ;incstack = 0
 14883  01277C  0E2D               	movlw	45
 14884  01277E  6E43               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 14885                           
 14886                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 14887  012780  C055  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14888  012784  0EFD               	movlw	253
 14889  012786  161B               	andwf	??_USBCtrlEPService,f,c
 14890  012788  A4D8               	btfss	status,2,c
 14891  01278A  D057               	goto	i2l6710
 14892                           
 14893                           ;usb_device.c: 2381: {
 14894                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 14895  01278C  C055  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14896  012790  90D8               	bcf	status,0,c
 14897  012792  321B               	rrcf	??_USBCtrlEPService,f,c
 14898  012794  0E3F               	movlw	63
 14899  012796  161B               	andwf	??_USBCtrlEPService,f,c
 14900  012798  501B               	movf	??_USBCtrlEPService,w,c
 14901  01279A  0D04               	mullw	4
 14902  01279C  0E00               	movlw	0
 14903  01279E  24F3               	addwf	prodl,w,c
 14904  0127A0  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 14905  0127A2  0E0D               	movlw	13
 14906  0127A4  20F4               	addwfc	prodh,w,c
 14907  0127A6  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14908                           
 14909                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14910  0127A8  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14911  0127AC  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14912                           
 14913                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 14914  0127B0  0E04               	movlw	4
 14915  0127B2  1A31               	xorwf	_pBDTEntryEP0OutNext,f,c
 14916                           
 14917                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 14918  0127B4  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14919  0127B8  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14920  0127BC  30DF               	rrcf	indf2,w,c
 14921  0127BE  32E8               	rrcf	wreg,f,c
 14922  0127C0  0B0F               	andlw	15
 14923  0127C2  0A0D               	xorlw	13
 14924  0127C4  A4D8               	btfss	status,2,c
 14925  0127C6  D036               	goto	i2l6708
 14926                           
 14927                           ;usb_device.c: 2398: {
 14928                           ;usb_device.c: 2399: unsigned char setup_cnt;
 14929                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 14930  0127C8  0E00               	movlw	0
 14931  0127CA  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 14932  0127CC                     i2l6692:
 14933  0127CC  0E07               	movlw	7
 14934  0127CE  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 14935  0127D0  D001               	goto	i2l6696
 14936  0127D2  D023               	goto	i2l6704
 14937  0127D4                     i2l6696:
 14938                           
 14939                           ;usb_device.c: 2406: {
 14940                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 14941  0127D4  EE20 F002          	lfsr	2,2
 14942  0127D8  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14943  0127DA  26D9               	addwf	fsr2l,f,c
 14944  0127DC  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14945  0127DE  22DA               	addwfc	fsr2h,f,c
 14946  0127E0  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 14947  0127E4  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 14948  0127E8  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 14949  0127EC  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 14950  0127F0  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 14951  0127F2  0D01               	mullw	1
 14952  0127F4  0E30               	movlw	48
 14953  0127F6  24F3               	addwf	prodl,w,c
 14954  0127F8  6EE1               	movwf	fsr1l,c
 14955  0127FA  0E0D               	movlw	13
 14956  0127FC  20F4               	addwfc	prodh,w,c
 14957  0127FE  6EE2               	movwf	fsr1h,c
 14958  012800  CFDF FFE7          	movff	indf2,indf1
 14959                           
 14960                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 14961  012804  EE20 F002          	lfsr	2,2
 14962  012808  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14963  01280A  26D9               	addwf	fsr2l,f,c
 14964  01280C  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14965  01280E  22DA               	addwfc	fsr2h,f,c
 14966  012810  2ADE               	incf	postinc2,f,c
 14967  012812  0E00               	movlw	0
 14968  012814  22DD               	addwfc	postdec2,f,c
 14969  012816  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 14970  012818  D7D9               	goto	i2l6692
 14971  01281A                     i2l6704:
 14972                           
 14973                           ;usb_device.c: 2409: }
 14974                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14975  01281A  EE20 F002          	lfsr	2,2
 14976  01281E  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14977  012820  26D9               	addwf	fsr2l,f,c
 14978  012822  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14979  012824  22DA               	addwfc	fsr2h,f,c
 14980  012826  0E30               	movlw	48
 14981  012828  6EDE               	movwf	postinc2,c
 14982  01282A  0E0D               	movlw	13
 14983  01282C  6EDD               	movwf	postdec2,c
 14984                           
 14985                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 14986  01282E  EC00  F09A         	call	_USBCtrlTrfSetupHandler	;wreg free
 14987                           
 14988                           ;usb_device.c: 2414: }
 14989  012832  0012               	return	
 14990  012834                     i2l6708:
 14991                           
 14992                           ;usb_device.c: 2415: else
 14993                           ;usb_device.c: 2416: {
 14994                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 14995  012834  EC0E  F09D         	call	_USBCtrlTrfOutHandler	;wreg free
 14996                           
 14997                           ;usb_device.c: 2419: }
 14998                           ;usb_device.c: 2420: }
 14999  012838  0012               	return	
 15000  01283A                     i2l6710:
 15001                           
 15002                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 15003  01283A  5055               	movf	_USTATcopy,w,c	;volatile
 15004  01283C  0BFD               	andlw	253
 15005  01283E  0A04               	xorlw	4
 15006  012840  A4D8               	btfss	status,2,c
 15007  012842  0012               	return	
 15008                           
 15009                           ;usb_device.c: 2422: {
 15010                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 15011  012844  ECED  F094         	call	_USBCtrlTrfInHandler	;wreg free
 15012  012848  0012               	return	
 15013  01284A                     __end_of_USBCtrlEPService:
 15014                           	opt stack 0
 15015                           pclatu	equ	0xFFB
 15016                           pclath	equ	0xFFA
 15017                           tblptru	equ	0xFF8
 15018                           tblptrh	equ	0xFF7
 15019                           tblptrl	equ	0xFF6
 15020                           tablat	equ	0xFF5
 15021                           prodh	equ	0xFF4
 15022                           prodl	equ	0xFF3
 15023                           intcon	equ	0xFF2
 15024                           intcon2	equ	0xFF1
 15025                           indf0	equ	0xFEF
 15026                           postinc0	equ	0xFEE
 15027                           fsr0h	equ	0xFEA
 15028                           fsr0l	equ	0xFE9
 15029                           wreg	equ	0xFE8
 15030                           indf1	equ	0xFE7
 15031                           postinc1	equ	0xFE6
 15032                           postdec1	equ	0xFE5
 15033                           fsr1h	equ	0xFE2
 15034                           fsr1l	equ	0xFE1
 15035                           indf2	equ	0xFDF
 15036                           postinc2	equ	0xFDE
 15037                           postdec2	equ	0xFDD
 15038                           plusw2	equ	0xFDB
 15039                           fsr2h	equ	0xFDA
 15040                           fsr2l	equ	0xFD9
 15041                           status	equ	0xFD8
 15042                           
 15043 ;; *************** function _USBCtrlTrfSetupHandler *****************
 15044 ;; Defined at:
 15045 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 15046 ;; Parameters:    Size  Location     Type
 15047 ;;		None
 15048 ;; Auto vars:     Size  Location     Type
 15049 ;;		None
 15050 ;; Return value:  Size  Location     Type
 15051 ;;		None               void
 15052 ;; Registers used:
 15053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15054 ;; Tracked objects:
 15055 ;;		On entry : 0/0
 15056 ;;		On exit  : 0/0
 15057 ;;		Unchanged: 0/0
 15058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15063 ;;Total ram usage:        0 bytes
 15064 ;; Hardware stack levels used:    1
 15065 ;; Hardware stack levels required when called:    7
 15066 ;; This function calls:
 15067 ;;		_USBCheckStdRequest
 15068 ;;		_USBCtrlEPServiceComplete
 15069 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15070 ;; This function is called by:
 15071 ;;		_USBCtrlEPService
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text76
 15076  013400                     __ptext76:
 15077                           	opt stack 0
 15078  013400                     _USBCtrlTrfSetupHandler:
 15079                           	opt stack 10
 15080                           
 15081                           ;usb_device.c: 2475: shortPacketStatus = 0;
 15082                           
 15083                           ;incstack = 0
 15084  013400  0E00               	movlw	0
 15085  013402  6E48               	movwf	_shortPacketStatus,c	;volatile
 15086                           
 15087                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 15088  013404  0E00               	movlw	0
 15089  013406  6E3F               	movwf	_USBDeferStatusStagePacket,c	;volatile
 15090                           
 15091                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 15092  013408  0E00               	movlw	0
 15093  01340A  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15094                           
 15095                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 15096  01340C  0E00               	movlw	0
 15097  01340E  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15098                           
 15099                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 15100  013410  0E00               	movlw	0
 15101  013412  6E38               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15102                           
 15103                           ;usb_device.c: 2480: controlTransferState = 0;
 15104  013414  0E00               	movlw	0
 15105  013416  6E45               	movwf	_controlTransferState,c	;volatile
 15106                           
 15107                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15108  013418  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15109  01341C  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15110  013420  0E7F               	movlw	127
 15111  013422  16DF               	andwf	indf2,f,c
 15112                           
 15113                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15114  013424  0E04               	movlw	4
 15115  013426  0100               	movlb	0	; () banked
 15116  013428  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15120  01342A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15121  01342E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15122  013432  0E7F               	movlw	127
 15123  013434  16DF               	andwf	indf2,f,c
 15124                           
 15125                           ; BSR set to: 0
 15126                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15127  013436  0E04               	movlw	4
 15128  013438  0100               	movlb	0	; () banked
 15129  01343A  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 15130                           
 15131                           ; BSR set to: 0
 15132                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15133  01343C  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15134  013440  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15135  013444  0E7F               	movlw	127
 15136  013446  16DF               	andwf	indf2,f,c
 15137                           
 15138                           ; BSR set to: 0
 15139                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 15140  013448  0E00               	movlw	0
 15141  01344A  0100               	movlb	0	; () banked
 15142  01344C  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15143                           
 15144                           ; BSR set to: 0
 15145                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 15146  01344E  0E00               	movlw	0
 15147  013450  0100               	movlb	0	; () banked
 15148  013452  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15149  013454  0E00               	movlw	0
 15150  013456  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 15154  013458  0E00               	movlw	0
 15155  01345A  0100               	movlb	0	; () banked
 15156  01345C  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 15160  01345E  0E00               	movlw	0
 15161  013460  0100               	movlb	0	; () banked
 15162  013462  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 15163  013464  0E00               	movlw	0
 15164  013466  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;usb_device.c: 2504: USBCheckStdRequest();
 15168  013468  EC8E  F08E         	call	_USBCheckStdRequest	;wreg free
 15169                           
 15170                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 15171  01346C  0E00               	movlw	0
 15172  01346E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15173  013470  0E03               	movlw	3
 15174  013472  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15175  013474  0E00               	movlw	0
 15176  013476  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15177  013478  0E00               	movlw	0
 15178  01347A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15179  01347C  0E00               	movlw	0
 15180  01347E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15181  013480  0E00               	movlw	0
 15182  013482  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15183  013484  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15184                           
 15185                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 15186  013488  EC9B  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 15187  01348C  0012               	return		;funcret
 15188  01348E                     __end_of_USBCtrlTrfSetupHandler:
 15189                           	opt stack 0
 15190                           pclatu	equ	0xFFB
 15191                           pclath	equ	0xFFA
 15192                           tblptru	equ	0xFF8
 15193                           tblptrh	equ	0xFF7
 15194                           tblptrl	equ	0xFF6
 15195                           tablat	equ	0xFF5
 15196                           prodh	equ	0xFF4
 15197                           prodl	equ	0xFF3
 15198                           intcon	equ	0xFF2
 15199                           intcon2	equ	0xFF1
 15200                           indf0	equ	0xFEF
 15201                           postinc0	equ	0xFEE
 15202                           fsr0h	equ	0xFEA
 15203                           fsr0l	equ	0xFE9
 15204                           wreg	equ	0xFE8
 15205                           indf1	equ	0xFE7
 15206                           postinc1	equ	0xFE6
 15207                           postdec1	equ	0xFE5
 15208                           fsr1h	equ	0xFE2
 15209                           fsr1l	equ	0xFE1
 15210                           indf2	equ	0xFDF
 15211                           postinc2	equ	0xFDE
 15212                           postdec2	equ	0xFDD
 15213                           plusw2	equ	0xFDB
 15214                           fsr2h	equ	0xFDA
 15215                           fsr2l	equ	0xFD9
 15216                           status	equ	0xFD8
 15217                           
 15218 ;; *************** function _USBCtrlEPServiceComplete *****************
 15219 ;; Defined at:
 15220 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;		None               void
 15227 ;; Registers used:
 15228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    2
 15241 ;; This function calls:
 15242 ;;		_USBCtrlEPAllowDataStage
 15243 ;;		_USBCtrlEPAllowStatusStage
 15244 ;; This function is called by:
 15245 ;;		_USBCtrlTrfSetupHandler
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text77
 15250  011B36                     __ptext77:
 15251                           	opt stack 0
 15252  011B36                     _USBCtrlEPServiceComplete:
 15253                           	opt stack 14
 15254                           
 15255                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 15256                           
 15257                           ;incstack = 0
 15258  011B36  9865               	bcf	3941,4,c	;volatile
 15259                           
 15260                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 15261  011B38  0100               	movlb	0	; () banked
 15262  011B3A  BFD5               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 15263  011B3C  D039               	goto	i2l232
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;usb_device.c: 1630: {
 15267                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 15268  011B3E  0100               	movlb	0	; () banked
 15269  011B40  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 15270  011B42  D00B               	goto	i2l6232
 15271                           
 15272                           ; BSR set to: 0
 15273                           ;usb_device.c: 1632: {
 15274                           ;usb_device.c: 1633: controlTransferState = 2;
 15275  011B44  0E02               	movlw	2
 15276  011B46  6E45               	movwf	_controlTransferState,c	;volatile
 15277                           
 15278                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 15279  011B48  503E               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 15280  011B4A  B4D8               	btfsc	status,2,c
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;usb_device.c: 1645: {
 15284                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 15285  011B4C  ECD8  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15286                           
 15287                           ;usb_device.c: 1647: }
 15288                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 15289  011B50  0E00               	movlw	0
 15290  011B52  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15291                           
 15292                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 15293  011B54  0E00               	movlw	0
 15294  011B56  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15295                           
 15296                           ;usb_device.c: 1653: }
 15297  011B58  0012               	return	
 15298  011B5A                     i2l6232:
 15299                           
 15300                           ;usb_device.c: 1654: else
 15301                           ;usb_device.c: 1655: {
 15302                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 15303  011B5A  EE20 F001          	lfsr	2,1
 15304  011B5E  5031               	movf	_pBDTEntryEP0OutNext,w,c
 15305  011B60  26D9               	addwf	fsr2l,f,c
 15306  011B62  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 15307  011B64  22DA               	addwfc	fsr2h,f,c
 15308  011B66  0E08               	movlw	8
 15309  011B68  6EDF               	movwf	indf2,c
 15310                           
 15311                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15312  011B6A  EE20 F002          	lfsr	2,2
 15313  011B6E  5031               	movf	_pBDTEntryEP0OutNext,w,c
 15314  011B70  26D9               	addwf	fsr2l,f,c
 15315  011B72  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 15316  011B74  22DA               	addwfc	fsr2h,f,c
 15317  011B76  0E30               	movlw	48
 15318  011B78  6EDE               	movwf	postinc2,c
 15319  011B7A  0E0D               	movlw	13
 15320  011B7C  6EDD               	movwf	postdec2,c
 15321                           
 15322                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15323  011B7E  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15324  011B82  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15325  011B86  0E0C               	movlw	12
 15326  011B88  6EDF               	movwf	indf2,c
 15327                           
 15328                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15329  011B8A  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15330  011B8E  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15331  011B92  0E00               	movlw	0
 15332  011B94  8EDB               	bsf	plusw2,7,c
 15333                           
 15334                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 15335  011B96  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15336  011B9A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15337  011B9E  0E04               	movlw	4
 15338  011BA0  6EDF               	movwf	indf2,c
 15339                           
 15340                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15341  011BA2  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15342  011BA6  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15343  011BAA  0E00               	movlw	0
 15344  011BAC  8EDB               	bsf	plusw2,7,c
 15345                           
 15346                           ;usb_device.c: 1666: }
 15347                           ;usb_device.c: 1667: }
 15348  011BAE  0012               	return	
 15349  011BB0                     i2l232:
 15350                           
 15351                           ; BSR set to: 0
 15352                           ;usb_device.c: 1668: else
 15353                           ;usb_device.c: 1669: {
 15354                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 15355  011BB0  010D               	movlb	13	; () banked
 15356  011BB2  AF30               	btfss	48,7,b	;volatile
 15357  011BB4  D010               	goto	i2l6252
 15358                           
 15359                           ; BSR set to: 13
 15360                           ;usb_device.c: 1671: {
 15361                           ;usb_device.c: 1672: controlTransferState = 1;
 15362  011BB6  0E01               	movlw	1
 15363  011BB8  6E45               	movwf	_controlTransferState,c	;volatile
 15364                           
 15365                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 15366  011BBA  503D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 15367  011BBC  B4D8               	btfsc	status,2,c
 15368                           
 15369                           ; BSR set to: 13
 15370                           ;usb_device.c: 1687: {
 15371                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 15372  011BBE  ECD8  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15373                           
 15374                           ;usb_device.c: 1689: }
 15375                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 15376  011BC2  0E00               	movlw	0
 15377  011BC4  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15378                           
 15379                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 15380  011BC6  0E00               	movlw	0
 15381  011BC8  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15382                           
 15383                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 15384  011BCA  503F               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15385  011BCC  A4D8               	btfss	status,2,c
 15386  011BCE  0012               	return	
 15387                           
 15388                           ;usb_device.c: 1714: {
 15389                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 15390  011BD0  EC8B  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15391                           
 15392                           ;usb_device.c: 1716: }
 15393                           ;usb_device.c: 1717: }
 15394  011BD4  0012               	return	
 15395  011BD6                     i2l6252:
 15396                           
 15397                           ;usb_device.c: 1718: else
 15398                           ;usb_device.c: 1719: {
 15399                           ;usb_device.c: 1730: controlTransferState = 2;
 15400  011BD6  0E02               	movlw	2
 15401  011BD8  6E45               	movwf	_controlTransferState,c	;volatile
 15402                           
 15403                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 15404  011BDA  EE20 F001          	lfsr	2,1
 15405  011BDE  5031               	movf	_pBDTEntryEP0OutNext,w,c
 15406  011BE0  26D9               	addwf	fsr2l,f,c
 15407  011BE2  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 15408  011BE4  22DA               	addwfc	fsr2h,f,c
 15409  011BE6  0E08               	movlw	8
 15410  011BE8  6EDF               	movwf	indf2,c
 15411                           
 15412                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15413  011BEA  EE20 F002          	lfsr	2,2
 15414  011BEE  5031               	movf	_pBDTEntryEP0OutNext,w,c
 15415  011BF0  26D9               	addwf	fsr2l,f,c
 15416  011BF2  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 15417  011BF4  22DA               	addwfc	fsr2h,f,c
 15418  011BF6  0E30               	movlw	48
 15419  011BF8  6EDE               	movwf	postinc2,c
 15420  011BFA  0E0D               	movlw	13
 15421  011BFC  6EDD               	movwf	postdec2,c
 15422                           
 15423                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15424  011BFE  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15425  011C02  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15426  011C06  0E04               	movlw	4
 15427  011C08  6EDF               	movwf	indf2,c
 15428                           
 15429                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15430  011C0A  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15431  011C0E  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15432  011C12  0E00               	movlw	0
 15433  011C14  8EDB               	bsf	plusw2,7,c
 15434                           
 15435                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 15436  011C16  0E00               	movlw	0
 15437  011C18  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15438                           
 15439                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 15440  011C1A  0E00               	movlw	0
 15441  011C1C  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15442                           
 15443                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 15444  011C1E  503F               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15445  011C20  A4D8               	btfss	status,2,c
 15446  011C22  0012               	return	
 15447                           
 15448                           ;usb_device.c: 1742: {
 15449                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 15450  011C24  EC8B  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15451  011C28  0012               	return	
 15452  011C2A                     __end_of_USBCtrlEPServiceComplete:
 15453                           	opt stack 0
 15454                           pclatu	equ	0xFFB
 15455                           pclath	equ	0xFFA
 15456                           tblptru	equ	0xFF8
 15457                           tblptrh	equ	0xFF7
 15458                           tblptrl	equ	0xFF6
 15459                           tablat	equ	0xFF5
 15460                           prodh	equ	0xFF4
 15461                           prodl	equ	0xFF3
 15462                           intcon	equ	0xFF2
 15463                           intcon2	equ	0xFF1
 15464                           indf0	equ	0xFEF
 15465                           postinc0	equ	0xFEE
 15466                           fsr0h	equ	0xFEA
 15467                           fsr0l	equ	0xFE9
 15468                           wreg	equ	0xFE8
 15469                           indf1	equ	0xFE7
 15470                           postinc1	equ	0xFE6
 15471                           postdec1	equ	0xFE5
 15472                           fsr1h	equ	0xFE2
 15473                           fsr1l	equ	0xFE1
 15474                           indf2	equ	0xFDF
 15475                           postinc2	equ	0xFDE
 15476                           postdec2	equ	0xFDD
 15477                           plusw2	equ	0xFDB
 15478                           fsr2h	equ	0xFDA
 15479                           fsr2l	equ	0xFD9
 15480                           status	equ	0xFD8
 15481                           
 15482 ;; *************** function _USBCtrlEPAllowDataStage *****************
 15483 ;; Defined at:
 15484 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;		None
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;		None
 15489 ;; Return value:  Size  Location     Type
 15490 ;;		None               void
 15491 ;; Registers used:
 15492 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;Total ram usage:        0 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:    1
 15505 ;; This function calls:
 15506 ;;		_USBCtrlTrfTxService
 15507 ;; This function is called by:
 15508 ;;		_USBCtrlEPServiceComplete
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text78
 15513  0131B0                     __ptext78:
 15514                           	opt stack 0
 15515  0131B0                     _USBCtrlEPAllowDataStage:
 15516                           	opt stack 14
 15517                           
 15518                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 15519                           
 15520                           ;incstack = 0
 15521  0131B0  0E00               	movlw	0
 15522  0131B2  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15523                           
 15524                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 15525  0131B4  0E00               	movlw	0
 15526  0131B6  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15527                           
 15528                           ;usb_device.c: 1494: if(controlTransferState == 2)
 15529  0131B8  0E02               	movlw	2
 15530  0131BA  1845               	xorwf	_controlTransferState,w,c	;volatile
 15531  0131BC  A4D8               	btfss	status,2,c
 15532  0131BE  D01F               	goto	i2l5782
 15533                           
 15534                           ;usb_device.c: 1495: {
 15535                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 15536  0131C0  EE20 F001          	lfsr	2,1
 15537  0131C4  5031               	movf	_pBDTEntryEP0OutNext,w,c
 15538  0131C6  26D9               	addwf	fsr2l,f,c
 15539  0131C8  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 15540  0131CA  22DA               	addwfc	fsr2h,f,c
 15541  0131CC  0E08               	movlw	8
 15542  0131CE  6EDF               	movwf	indf2,c
 15543                           
 15544                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 15545  0131D0  EE20 F002          	lfsr	2,2
 15546  0131D4  5031               	movf	_pBDTEntryEP0OutNext,w,c
 15547  0131D6  26D9               	addwf	fsr2l,f,c
 15548  0131D8  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 15549  0131DA  22DA               	addwfc	fsr2h,f,c
 15550  0131DC  0E38               	movlw	56
 15551  0131DE  6EDE               	movwf	postinc2,c
 15552  0131E0  0E0D               	movlw	13
 15553  0131E2  6EDD               	movwf	postdec2,c
 15554                           
 15555                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15556  0131E4  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15557  0131E8  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15558  0131EC  0E48               	movlw	72
 15559  0131EE  6EDF               	movwf	indf2,c
 15560                           
 15561                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15562  0131F0  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15563  0131F4  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15564  0131F8  0E00               	movlw	0
 15565  0131FA  8EDB               	bsf	plusw2,7,c
 15566                           
 15567                           ;usb_device.c: 1501: }
 15568  0131FC  0012               	return	
 15569  0131FE                     i2l5782:
 15570                           
 15571                           ;usb_device.c: 1502: else
 15572                           ;usb_device.c: 1503: {
 15573                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 15574  0131FE  0100               	movlb	0	; () banked
 15575  013200  51D6               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 15576  013202  010D               	movlb	13	; () banked
 15577  013204  5D36               	subwf	54,w,b	;volatile
 15578  013206  0100               	movlb	0	; () banked
 15579  013208  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 15580  01320A  010D               	movlb	13	; () banked
 15581  01320C  5937               	subwfb	55,w,b	;volatile
 15582  01320E  B0D8               	btfsc	status,0,c
 15583  013210  D004               	goto	i2l5786
 15584                           
 15585                           ; BSR set to: 13
 15586                           ;usb_device.c: 1507: {
 15587                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 15588  013212  CD36 F0D6          	movff	3382,_inPipes+4	;volatile
 15589  013216  CD37 F0D7          	movff	3383,_inPipes+5	;volatile
 15590  01321A                     i2l5786:
 15591                           
 15592                           ; BSR set to: 13
 15593                           ;usb_device.c: 1509: }
 15594                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 15595  01321A  EC3F  F091         	call	_USBCtrlTrfTxService	;wreg free
 15596                           
 15597                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 15598  01321E  0100               	movlb	0	; () banked
 15599  013220  EE20 F002          	lfsr	2,2
 15600  013224  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 15601  013226  26D9               	addwf	fsr2l,f,c
 15602  013228  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 15603  01322A  22DA               	addwfc	fsr2h,f,c
 15604  01322C  0E38               	movlw	56
 15605  01322E  6EDE               	movwf	postinc2,c
 15606  013230  0E0D               	movlw	13
 15607  013232  6EDD               	movwf	postdec2,c
 15608                           
 15609                           ; BSR set to: 0
 15610                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15611  013234  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15612  013238  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15613  01323C  0E48               	movlw	72
 15614  01323E  6EDF               	movwf	indf2,c
 15615                           
 15616                           ; BSR set to: 0
 15617                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15618  013240  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15619  013244  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15620  013248  0E00               	movlw	0
 15621  01324A  8EDB               	bsf	plusw2,7,c
 15622  01324C  0012               	return	
 15623  01324E                     __end_of_USBCtrlEPAllowDataStage:
 15624                           	opt stack 0
 15625                           pclatu	equ	0xFFB
 15626                           pclath	equ	0xFFA
 15627                           tblptru	equ	0xFF8
 15628                           tblptrh	equ	0xFF7
 15629                           tblptrl	equ	0xFF6
 15630                           tablat	equ	0xFF5
 15631                           prodh	equ	0xFF4
 15632                           prodl	equ	0xFF3
 15633                           intcon	equ	0xFF2
 15634                           intcon2	equ	0xFF1
 15635                           indf0	equ	0xFEF
 15636                           postinc0	equ	0xFEE
 15637                           fsr0h	equ	0xFEA
 15638                           fsr0l	equ	0xFE9
 15639                           wreg	equ	0xFE8
 15640                           indf1	equ	0xFE7
 15641                           postinc1	equ	0xFE6
 15642                           postdec1	equ	0xFE5
 15643                           fsr1h	equ	0xFE2
 15644                           fsr1l	equ	0xFE1
 15645                           indf2	equ	0xFDF
 15646                           postinc2	equ	0xFDE
 15647                           postdec2	equ	0xFDD
 15648                           plusw2	equ	0xFDB
 15649                           fsr2h	equ	0xFDA
 15650                           fsr2l	equ	0xFD9
 15651                           status	equ	0xFD8
 15652                           
 15653 ;; *************** function _USBCheckStdRequest *****************
 15654 ;; Defined at:
 15655 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 15656 ;; Parameters:    Size  Location     Type
 15657 ;;		None
 15658 ;; Auto vars:     Size  Location     Type
 15659 ;;		None
 15660 ;; Return value:  Size  Location     Type
 15661 ;;		None               void
 15662 ;; Registers used:
 15663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15664 ;; Tracked objects:
 15665 ;;		On entry : 0/0
 15666 ;;		On exit  : 0/0
 15667 ;;		Unchanged: 0/0
 15668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;Total ram usage:        0 bytes
 15674 ;; Hardware stack levels used:    1
 15675 ;; Hardware stack levels required when called:    6
 15676 ;; This function calls:
 15677 ;;		_USBStdFeatureReqHandler
 15678 ;;		_USBStdGetDscHandler
 15679 ;;		_USBStdGetStatusHandler
 15680 ;;		_USBStdSetCfgHandler
 15681 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15682 ;; This function is called by:
 15683 ;;		_USBCtrlTrfSetupHandler
 15684 ;; This function uses a non-reentrant model
 15685 ;;
 15686                           
 15687                           	psect	text79
 15688  011D1C                     __ptext79:
 15689                           	opt stack 0
 15690  011D1C                     _USBCheckStdRequest:
 15691                           	opt stack 10
 15692                           
 15693                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 15694                           
 15695                           ;incstack = 0
 15696  011D1C  010D               	movlb	13	; () banked
 15697  011D1E  3930               	swapf	48,w,b	;volatile
 15698  011D20  32E8               	rrcf	wreg,f,c
 15699  011D22  0B03               	andlw	3
 15700  011D24  0900               	iorlw	0
 15701  011D26  A4D8               	btfss	status,2,c
 15702  011D28  0012               	return	
 15703  011D2A  D04F               	goto	i2l6350
 15704  011D2C                     i2l359:
 15705                           
 15706                           ; BSR set to: 13
 15707                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 15708  011D2C  0100               	movlb	0	; () banked
 15709  011D2E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 15713  011D30  0E08               	movlw	8
 15714  011D32  6E40               	movwf	_USBDeviceState,c	;volatile
 15715                           
 15716                           ;usb_device.c: 2700: break;
 15717  011D34  0012               	return	
 15718  011D36                     i2l6320:
 15719                           
 15720                           ;usb_device.c: 2702: USBStdGetDscHandler();
 15721  011D36  ECA8  F08A         	call	_USBStdGetDscHandler	;wreg free
 15722                           
 15723                           ;usb_device.c: 2703: break;
 15724  011D3A  0012               	return	
 15725  011D3C                     i2l6322:
 15726                           
 15727                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 15728  011D3C  ECF3  F08F         	call	_USBStdSetCfgHandler	;wreg free
 15729                           
 15730                           ;usb_device.c: 2706: break;
 15731  011D40  0012               	return	
 15732  011D42                     i2l6324:
 15733                           
 15734                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 15735  011D42  0E54               	movlw	low _USBActiveConfiguration
 15736  011D44  0100               	movlb	0	; () banked
 15737  011D46  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15738  011D48  0E00               	movlw	high _USBActiveConfiguration
 15739  011D4A  0100               	movlb	0	; () banked
 15740  011D4C  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15741                           
 15742                           ; BSR set to: 0
 15743                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15744  011D4E  0100               	movlb	0	; () banked
 15745  011D50  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 15749  011D52  0E01               	movlw	1
 15750  011D54  0100               	movlb	0	; () banked
 15751  011D56  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 15755  011D58  0100               	movlb	0	; () banked
 15756  011D5A  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15757                           
 15758                           ;usb_device.c: 2712: break;
 15759  011D5C  0012               	return	
 15760  011D5E                     i2l6332:
 15761                           
 15762                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 15763  011D5E  ECC8  F096         	call	_USBStdGetStatusHandler	;wreg free
 15764                           
 15765                           ;usb_device.c: 2715: break;
 15766  011D62  0012               	return	
 15767  011D64                     i2l6334:
 15768                           
 15769                           ;usb_device.c: 2717: case 3:
 15770                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 15771  011D64  ECFF  F086         	call	_USBStdFeatureReqHandler	;wreg free
 15772                           
 15773                           ;usb_device.c: 2719: break;
 15774  011D68  0012               	return	
 15775  011D6A                     i2l6336:
 15776                           
 15777                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 15778  011D6A  010D               	movlb	13	; () banked
 15779  011D6C  5134               	movf	52,w,b	;volatile
 15780  011D6E  0D01               	mullw	1
 15781  011D70  0E52               	movlw	low _USBAlternateInterface
 15782  011D72  24F3               	addwf	prodl,w,c
 15783  011D74  0100               	movlb	0	; () banked
 15784  011D76  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15785  011D78  0E00               	movlw	high _USBAlternateInterface
 15786  011D7A  20F4               	addwfc	prodh,w,c
 15787  011D7C  0100               	movlb	0	; () banked
 15788  011D7E  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15792  011D80  0100               	movlb	0	; () banked
 15793  011D82  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 15797  011D84  0E01               	movlw	1
 15798  011D86  0100               	movlb	0	; () banked
 15799  011D88  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 15803  011D8A  0100               	movlb	0	; () banked
 15804  011D8C  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15805                           
 15806                           ;usb_device.c: 2725: break;
 15807  011D8E  0012               	return	
 15808  011D90                     i2l368:
 15809                           
 15810                           ; BSR set to: 13
 15811                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 15812  011D90  0100               	movlb	0	; () banked
 15813  011D92  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15814                           
 15815                           ; BSR set to: 0
 15816                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 15817  011D94  010D               	movlb	13	; () banked
 15818  011D96  5134               	movf	52,w,b	;volatile
 15819  011D98  0D01               	mullw	1
 15820  011D9A  0E52               	movlw	low _USBAlternateInterface
 15821  011D9C  24F3               	addwf	prodl,w,c
 15822  011D9E  6ED9               	movwf	fsr2l,c
 15823  011DA0  0E00               	movlw	high _USBAlternateInterface
 15824  011DA2  20F4               	addwfc	prodh,w,c
 15825  011DA4  6EDA               	movwf	fsr2h,c
 15826  011DA6  CD32 FFDF          	movff	3378,indf2	;volatile
 15827                           
 15828                           ;usb_device.c: 2729: break;
 15829  011DAA  0012               	return	
 15830  011DAC                     i2l6346:
 15831                           
 15832                           ; BSR set to: 13
 15833                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 15834  011DAC  0E00               	movlw	0
 15835  011DAE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15836  011DB0  0E02               	movlw	2
 15837  011DB2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15838  011DB4  0E00               	movlw	0
 15839  011DB6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15840  011DB8  0E00               	movlw	0
 15841  011DBA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15842  011DBC  0E00               	movlw	0
 15843  011DBE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15844  011DC0  0E00               	movlw	0
 15845  011DC2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15846  011DC4  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15847                           
 15848                           ;usb_device.c: 2736: }
 15849                           
 15850                           ;usb_device.c: 2735: break;
 15851                           
 15852                           ;usb_device.c: 2734: default:
 15853                           
 15854                           ;usb_device.c: 2733: case 12:
 15855                           
 15856                           ;usb_device.c: 2732: break;
 15857  011DC8  0012               	return	
 15858  011DCA                     i2l6350:
 15859  011DCA  010D               	movlb	13	; () banked
 15860  011DCC  5131               	movf	49,w,b	;volatile
 15861                           
 15862                           ; Switch size 1, requested type "space"
 15863                           ; Number of cases is 11, Range of values is 0 to 12
 15864                           ; switch strategies available:
 15865                           ; Name         Instructions Cycles
 15866                           ; simple_byte           34    18 (average)
 15867                           ;	Chosen strategy is simple_byte
 15868  011DCE  0A00               	xorlw	0	; case 0
 15869  011DD0  B4D8               	btfsc	status,2,c
 15870  011DD2  D7C5               	goto	i2l6332
 15871  011DD4  0A01               	xorlw	1	; case 1
 15872  011DD6  B4D8               	btfsc	status,2,c
 15873  011DD8  D7C5               	goto	i2l6334
 15874  011DDA  0A02               	xorlw	2	; case 3
 15875  011DDC  B4D8               	btfsc	status,2,c
 15876  011DDE  D7C2               	goto	i2l6334
 15877  011DE0  0A06               	xorlw	6	; case 5
 15878  011DE2  B4D8               	btfsc	status,2,c
 15879  011DE4  D7A3               	goto	i2l359
 15880  011DE6  0A03               	xorlw	3	; case 6
 15881  011DE8  B4D8               	btfsc	status,2,c
 15882  011DEA  D7A5               	goto	i2l6320
 15883  011DEC  0A01               	xorlw	1	; case 7
 15884  011DEE  B4D8               	btfsc	status,2,c
 15885  011DF0  D7DD               	goto	i2l6346
 15886  011DF2  0A0F               	xorlw	15	; case 8
 15887  011DF4  B4D8               	btfsc	status,2,c
 15888  011DF6  D7A5               	goto	i2l6324
 15889  011DF8  0A01               	xorlw	1	; case 9
 15890  011DFA  B4D8               	btfsc	status,2,c
 15891  011DFC  D79F               	goto	i2l6322
 15892  011DFE  0A03               	xorlw	3	; case 10
 15893  011E00  B4D8               	btfsc	status,2,c
 15894  011E02  D7B3               	goto	i2l6336
 15895  011E04  0A01               	xorlw	1	; case 11
 15896  011E06  B4D8               	btfsc	status,2,c
 15897  011E08  D7C3               	goto	i2l368
 15898  011E0A  0A07               	xorlw	7	; case 12
 15899  011E0C  0012               	return	
 15900  011E0E                     __end_of_USBCheckStdRequest:
 15901                           	opt stack 0
 15902                           pclatu	equ	0xFFB
 15903                           pclath	equ	0xFFA
 15904                           tblptru	equ	0xFF8
 15905                           tblptrh	equ	0xFF7
 15906                           tblptrl	equ	0xFF6
 15907                           tablat	equ	0xFF5
 15908                           prodh	equ	0xFF4
 15909                           prodl	equ	0xFF3
 15910                           intcon	equ	0xFF2
 15911                           intcon2	equ	0xFF1
 15912                           indf0	equ	0xFEF
 15913                           postinc0	equ	0xFEE
 15914                           fsr0h	equ	0xFEA
 15915                           fsr0l	equ	0xFE9
 15916                           wreg	equ	0xFE8
 15917                           indf1	equ	0xFE7
 15918                           postinc1	equ	0xFE6
 15919                           postdec1	equ	0xFE5
 15920                           fsr1h	equ	0xFE2
 15921                           fsr1l	equ	0xFE1
 15922                           indf2	equ	0xFDF
 15923                           postinc2	equ	0xFDE
 15924                           postdec2	equ	0xFDD
 15925                           plusw2	equ	0xFDB
 15926                           fsr2h	equ	0xFDA
 15927                           fsr2l	equ	0xFD9
 15928                           status	equ	0xFD8
 15929                           
 15930 ;; *************** function _USBStdSetCfgHandler *****************
 15931 ;; Defined at:
 15932 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;		None
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;  i               1   20[COMRAM] unsigned char 
 15937 ;; Return value:  Size  Location     Type
 15938 ;;		None               void
 15939 ;; Registers used:
 15940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : 0/0
 15943 ;;		On exit  : 0/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15950 ;;Total ram usage:        1 bytes
 15951 ;; Hardware stack levels used:    1
 15952 ;; Hardware stack levels required when called:    5
 15953 ;; This function calls:
 15954 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15955 ;;		i2_memset
 15956 ;; This function is called by:
 15957 ;;		_USBCheckStdRequest
 15958 ;; This function uses a non-reentrant model
 15959 ;;
 15960                           
 15961                           	psect	text80
 15962  011FE6                     __ptext80:
 15963                           	opt stack 0
 15964  011FE6                     _USBStdSetCfgHandler:
 15965                           	opt stack 10
 15966                           
 15967                           ;usb_device.c: 1971: uint8_t i;
 15968                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 15969                           
 15970                           ;incstack = 0
 15971  011FE6  0100               	movlb	0	; () banked
 15972  011FE8  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15973                           
 15974                           ; BSR set to: 0
 15975                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 15976  011FEA  0E27               	movlw	39
 15977  011FEC  6E01               	movwf	i2memset@p1,c
 15978  011FEE  0E0F               	movlw	15
 15979  011FF0  6E02               	movwf	i2memset@p1+1,c
 15980  011FF2  0E00               	movlw	0
 15981  011FF4  6E04               	movwf	i2memset@c+1,c
 15982  011FF6  0E00               	movlw	0
 15983  011FF8  6E03               	movwf	i2memset@c,c
 15984  011FFA  0E00               	movlw	0
 15985  011FFC  6E06               	movwf	i2memset@n+1,c
 15986  011FFE  0E02               	movlw	2
 15987  012000  6E05               	movwf	i2memset@n,c
 15988  012002  EC80  F09F         	call	i2_memset	;wreg free
 15989                           
 15990                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15991  012006  0E00               	movlw	0
 15992  012008  6E01               	movwf	i2memset@p1,c
 15993  01200A  0E0D               	movlw	13
 15994  01200C  6E02               	movwf	i2memset@p1+1,c
 15995  01200E  0E00               	movlw	0
 15996  012010  6E04               	movwf	i2memset@c+1,c
 15997  012012  0E00               	movlw	0
 15998  012014  6E03               	movwf	i2memset@c,c
 15999  012016  0E00               	movlw	0
 16000  012018  6E06               	movwf	i2memset@n+1,c
 16001  01201A  0E30               	movlw	48
 16002  01201C  6E05               	movwf	i2memset@n,c
 16003  01201E  EC80  F09F         	call	i2_memset	;wreg free
 16004                           
 16005                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 16006  012022  8C65               	bsf	3941,6,c	;volatile
 16007                           
 16008                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 16009  012024  0E00               	movlw	0
 16010  012026  6E15               	movwf	USBStdSetCfgHandler@i,c
 16011  012028                     i2l5802:
 16012  012028  0E02               	movlw	2
 16013  01202A  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 16014  01202C  D001               	goto	i2l5806
 16015  01202E  D016               	goto	i2l5812
 16016  012030                     i2l5806:
 16017                           
 16018                           ;usb_device.c: 1989: {
 16019                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 16020  012030  5015               	movf	USBStdSetCfgHandler@i,w,c
 16021  012032  0D01               	mullw	1
 16022  012034  0EE4               	movlw	low _ep_data_in
 16023  012036  24F3               	addwf	prodl,w,c
 16024  012038  6ED9               	movwf	fsr2l,c
 16025  01203A  0E00               	movlw	high _ep_data_in
 16026  01203C  20F4               	addwfc	prodh,w,c
 16027  01203E  6EDA               	movwf	fsr2h,c
 16028  012040  0E00               	movlw	0
 16029  012042  6EDF               	movwf	indf2,c
 16030                           
 16031                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 16032  012044  5015               	movf	USBStdSetCfgHandler@i,w,c
 16033  012046  0D01               	mullw	1
 16034  012048  0EE7               	movlw	low _ep_data_out
 16035  01204A  24F3               	addwf	prodl,w,c
 16036  01204C  6ED9               	movwf	fsr2l,c
 16037  01204E  0E00               	movlw	high _ep_data_out
 16038  012050  20F4               	addwfc	prodh,w,c
 16039  012052  6EDA               	movwf	fsr2h,c
 16040  012054  0E00               	movlw	0
 16041  012056  6EDF               	movwf	indf2,c
 16042  012058  2A15               	incf	USBStdSetCfgHandler@i,f,c
 16043  01205A  D7E6               	goto	i2l5802
 16044  01205C                     i2l5812:
 16045                           
 16046                           ;usb_device.c: 1992: }
 16047                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 16048  01205C  0E52               	movlw	low _USBAlternateInterface
 16049  01205E  6E01               	movwf	i2memset@p1,c
 16050  012060  0E00               	movlw	high _USBAlternateInterface
 16051  012062  6E02               	movwf	i2memset@p1+1,c
 16052  012064  0E00               	movlw	0
 16053  012066  6E04               	movwf	i2memset@c+1,c
 16054  012068  0E00               	movlw	0
 16055  01206A  6E03               	movwf	i2memset@c,c
 16056  01206C  0E00               	movlw	0
 16057  01206E  6E06               	movwf	i2memset@n+1,c
 16058  012070  0E02               	movlw	2
 16059  012072  6E05               	movwf	i2memset@n,c
 16060  012074  EC80  F09F         	call	i2_memset	;wreg free
 16061                           
 16062                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 16063  012078  9C65               	bcf	3941,6,c	;volatile
 16064                           
 16065                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16066  01207A  0E08               	movlw	8
 16067  01207C  0100               	movlb	0	; () banked
 16068  01207E  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 16069  012080  0E0D               	movlw	13
 16070  012082  0100               	movlb	0	; () banked
 16071  012084  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16072                           
 16073                           ; BSR set to: 0
 16074                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 16075  012086  0E00               	movlw	0
 16076  012088  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 16077  01208A  0E0D               	movlw	13
 16078  01208C  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16082  01208E  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16083  012092  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 16087  012096  CD32 F054          	movff	3378,_USBActiveConfiguration	;volatile
 16088                           
 16089                           ; BSR set to: 0
 16090                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 16091  01209A  5054               	movf	_USBActiveConfiguration,w,c	;volatile
 16092  01209C  A4D8               	btfss	status,2,c
 16093  01209E  D003               	goto	i2l5828
 16094                           
 16095                           ; BSR set to: 0
 16096                           ;usb_device.c: 2011: {
 16097                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 16098  0120A0  0E10               	movlw	16
 16099  0120A2  6E40               	movwf	_USBDeviceState,c	;volatile
 16100                           
 16101                           ;usb_device.c: 2014: }
 16102  0120A4  0012               	return	
 16103  0120A6                     i2l5828:
 16104                           
 16105                           ; BSR set to: 0
 16106                           ;usb_device.c: 2015: else
 16107                           ;usb_device.c: 2016: {
 16108                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16109  0120A6  0E00               	movlw	0
 16110  0120A8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16111  0120AA  0E01               	movlw	1
 16112  0120AC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16113  0120AE  0E54               	movlw	low _USBActiveConfiguration
 16114  0120B0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16115  0120B2  0E00               	movlw	high _USBActiveConfiguration
 16116  0120B4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16117  0120B6  0E00               	movlw	0
 16118  0120B8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16119  0120BA  0E01               	movlw	1
 16120  0120BC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16121  0120BE  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16122                           
 16123                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 16124  0120C2  0E20               	movlw	32
 16125  0120C4  6E40               	movwf	_USBDeviceState,c	;volatile
 16126  0120C6  0012               	return	
 16127  0120C8                     __end_of_USBStdSetCfgHandler:
 16128                           	opt stack 0
 16129                           pclatu	equ	0xFFB
 16130                           pclath	equ	0xFFA
 16131                           tblptru	equ	0xFF8
 16132                           tblptrh	equ	0xFF7
 16133                           tblptrl	equ	0xFF6
 16134                           tablat	equ	0xFF5
 16135                           prodh	equ	0xFF4
 16136                           prodl	equ	0xFF3
 16137                           intcon	equ	0xFF2
 16138                           intcon2	equ	0xFF1
 16139                           indf0	equ	0xFEF
 16140                           postinc0	equ	0xFEE
 16141                           fsr0h	equ	0xFEA
 16142                           fsr0l	equ	0xFE9
 16143                           wreg	equ	0xFE8
 16144                           indf1	equ	0xFE7
 16145                           postinc1	equ	0xFE6
 16146                           postdec1	equ	0xFE5
 16147                           fsr1h	equ	0xFE2
 16148                           fsr1l	equ	0xFE1
 16149                           indf2	equ	0xFDF
 16150                           postinc2	equ	0xFDE
 16151                           postdec2	equ	0xFDD
 16152                           plusw2	equ	0xFDB
 16153                           fsr2h	equ	0xFDA
 16154                           fsr2l	equ	0xFD9
 16155                           status	equ	0xFD8
 16156                           
 16157 ;; *************** function i2_memset *****************
 16158 ;; Defined at:
 16159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16160 ;; Parameters:    Size  Location     Type
 16161 ;;  p1              2    0[COMRAM] PTR void 
 16162 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16163 ;;  c               2    2[COMRAM] int 
 16164 ;;  n               2    4[COMRAM] unsigned int 
 16165 ;; Auto vars:     Size  Location     Type
 16166 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16167 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  2    0[COMRAM] PTR void 
 16170 ;; Registers used:
 16171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16177 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16180 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16181 ;;Total ram usage:        8 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; This function calls:
 16184 ;;		Nothing
 16185 ;; This function is called by:
 16186 ;;		_USBStdSetCfgHandler
 16187 ;;		i2_USBDeviceInit
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           	psect	text81
 16192  013F00                     __ptext81:
 16193                           	opt stack 0
 16194  013F00                     i2_memset:
 16195                           	opt stack 17
 16196                           
 16197                           ;incstack = 0
 16198  013F00  C001  F007         	movff	i2memset@p1,i2memset@p
 16199  013F04  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 16200  013F08  D008               	goto	i2l5736
 16201  013F0A                     i2l5732:
 16202  013F0A  C007  FFD9         	movff	i2memset@p,fsr2l
 16203  013F0E  C008  FFDA         	movff	i2memset@p+1,fsr2h
 16204  013F12  C003  FFDF         	movff	i2memset@c,indf2
 16205  013F16  4A07               	infsnz	i2memset@p,f,c
 16206  013F18  2A08               	incf	i2memset@p+1,f,c
 16207  013F1A                     i2l5736:
 16208  013F1A  0605               	decf	i2memset@n,f,c
 16209  013F1C  A0D8               	btfss	status,0,c
 16210  013F1E  0606               	decf	i2memset@n+1,f,c
 16211  013F20  2805               	incf	i2memset@n,w,c
 16212  013F22  E1F3               	bnz	i2l5732
 16213  013F24  2806               	incf	i2memset@n+1,w,c
 16214  013F26  B4D8               	btfsc	status,2,c
 16215  013F28  0012               	return	
 16216  013F2A  D7EF               	goto	i2l5732
 16217  013F2C                     __end_ofi2_memset:
 16218                           	opt stack 0
 16219                           pclatu	equ	0xFFB
 16220                           pclath	equ	0xFFA
 16221                           tblptru	equ	0xFF8
 16222                           tblptrh	equ	0xFF7
 16223                           tblptrl	equ	0xFF6
 16224                           tablat	equ	0xFF5
 16225                           prodh	equ	0xFF4
 16226                           prodl	equ	0xFF3
 16227                           intcon	equ	0xFF2
 16228                           intcon2	equ	0xFF1
 16229                           indf0	equ	0xFEF
 16230                           postinc0	equ	0xFEE
 16231                           fsr0h	equ	0xFEA
 16232                           fsr0l	equ	0xFE9
 16233                           wreg	equ	0xFE8
 16234                           indf1	equ	0xFE7
 16235                           postinc1	equ	0xFE6
 16236                           postdec1	equ	0xFE5
 16237                           fsr1h	equ	0xFE2
 16238                           fsr1l	equ	0xFE1
 16239                           indf2	equ	0xFDF
 16240                           postinc2	equ	0xFDE
 16241                           postdec2	equ	0xFDD
 16242                           plusw2	equ	0xFDB
 16243                           fsr2h	equ	0xFDA
 16244                           fsr2l	equ	0xFD9
 16245                           status	equ	0xFD8
 16246                           
 16247 ;; *************** function _USBStdGetStatusHandler *****************
 16248 ;; Defined at:
 16249 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;		None
 16252 ;; Auto vars:     Size  Location     Type
 16253 ;;  p               2    1[COMRAM] PTR struct __BDT
 16254 ;;		 -> NULL(0), BDT(48), 
 16255 ;; Return value:  Size  Location     Type
 16256 ;;		None               void
 16257 ;; Registers used:
 16258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16259 ;; Tracked objects:
 16260 ;;		On entry : 0/0
 16261 ;;		On exit  : 0/0
 16262 ;;		Unchanged: 0/0
 16263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16267 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16268 ;;Total ram usage:        3 bytes
 16269 ;; Hardware stack levels used:    1
 16270 ;; This function calls:
 16271 ;;		Nothing
 16272 ;; This function is called by:
 16273 ;;		_USBCheckStdRequest
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277                           	psect	text82
 16278  012D90                     __ptext82:
 16279                           	opt stack 0
 16280  012D90                     _USBStdGetStatusHandler:
 16281                           	opt stack 15
 16282                           
 16283                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 16284                           
 16285                           ;incstack = 0
 16286  012D90  0E00               	movlw	0
 16287  012D92  010D               	movlb	13	; () banked
 16288  012D94  6F38               	movwf	56,b	;volatile
 16289                           
 16290                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 16291  012D96  0E00               	movlw	0
 16292  012D98  010D               	movlb	13	; () banked
 16293  012D9A  6F39               	movwf	57,b	;volatile
 16294                           
 16295                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 16296  012D9C  D03B               	goto	i2l5884
 16297  012D9E                     i2l295:
 16298                           
 16299                           ; BSR set to: 13
 16300                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 16301  012D9E  0100               	movlb	0	; () banked
 16302  012DA0  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16303                           
 16304                           ;usb_device.c: 2146: }
 16305                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 16306                           
 16307                           ; BSR set to: 13
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;usb_device.c: 2144: {
 16311                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 16312                           
 16313                           ;usb_device.c: 2143: if(0 == 1)
 16314  012DA2  043C               	decf	_RemoteWakeup,w,c	;volatile
 16315  012DA4  A4D8               	btfss	status,2,c
 16316  012DA6  D042               	goto	i2l298
 16317                           
 16318                           ;usb_device.c: 2149: {
 16319                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 16320  012DA8  010D               	movlb	13	; () banked
 16321  012DAA  8338               	bsf	56,1,b	;volatile
 16322                           
 16323                           ; BSR set to: 13
 16324                           ;usb_device.c: 2151: }
 16325                           ;usb_device.c: 2152: break;
 16326  012DAC  D03F               	goto	i2l298
 16327  012DAE                     i2l299:
 16328                           
 16329                           ; BSR set to: 13
 16330                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 16331  012DAE  0100               	movlb	0	; () banked
 16332  012DB0  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16333                           
 16334                           ;usb_device.c: 2155: break;
 16335  012DB2  D03C               	goto	i2l298
 16336  012DB4                     i2l300:
 16337                           
 16338                           ; BSR set to: 13
 16339                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 16340  012DB4  0100               	movlb	0	; () banked
 16341  012DB6  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16342                           
 16343                           ;usb_device.c: 2161: {
 16344                           ;usb_device.c: 2162: BDT_ENTRY *p;
 16345                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 16346  012DB8  010D               	movlb	13	; () banked
 16347  012DBA  BF34               	btfsc	52,7,b	;volatile
 16348  012DBC  D00B               	goto	i2l5874
 16349                           
 16350                           ; BSR set to: 13
 16351                           ;usb_device.c: 2165: {
 16352                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16353  012DBE  010D               	movlb	13	; () banked
 16354  012DC0  5134               	movf	52,w,b	;volatile
 16355  012DC2  0B0F               	andlw	15
 16356  012DC4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16357  012DC6  5001               	movf	??_USBStdGetStatusHandler,w,c
 16358  012DC8  0D02               	mullw	2
 16359  012DCA  0EDE               	movlw	low _pBDTEntryOut
 16360  012DCC  24F3               	addwf	prodl,w,c
 16361  012DCE  6ED9               	movwf	fsr2l,c
 16362  012DD0  0E00               	movlw	high _pBDTEntryOut
 16363  012DD2  D00A               	goto	L5
 16364  012DD4                     i2l5874:
 16365                           
 16366                           ; BSR set to: 13
 16367                           ;usb_device.c: 2168: else
 16368                           ;usb_device.c: 2169: {
 16369                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16370  012DD4  010D               	movlb	13	; () banked
 16371  012DD6  5134               	movf	52,w,b	;volatile
 16372  012DD8  0B0F               	andlw	15
 16373  012DDA  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16374  012DDC  5001               	movf	??_USBStdGetStatusHandler,w,c
 16375  012DDE  0D02               	mullw	2
 16376  012DE0  0ED8               	movlw	low _pBDTEntryIn
 16377  012DE2  24F3               	addwf	prodl,w,c
 16378  012DE4  6ED9               	movwf	fsr2l,c
 16379  012DE6  0E00               	movlw	high _pBDTEntryIn
 16380  012DE8                     L5:
 16381  012DE8  20F4               	addwfc	prodh,w,c
 16382  012DEA  6EDA               	movwf	fsr2h,c
 16383  012DEC  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 16384  012DF0  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 16385                           
 16386                           ; BSR set to: 13
 16387                           ;usb_device.c: 2171: }
 16388                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 16389                           
 16390                           ; BSR set to: 13
 16391  012DF4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16392  012DF8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16393  012DFC  AEDF               	btfss	indf2,7,c
 16394  012DFE  D016               	goto	i2l298
 16395                           
 16396                           ; BSR set to: 13
 16397  012E00  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16398  012E04  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16399  012E08  A4DF               	btfss	indf2,2,c
 16400  012E0A  D010               	goto	i2l298
 16401                           
 16402                           ; BSR set to: 13
 16403                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 16404  012E0C  0E01               	movlw	1
 16405  012E0E  010D               	movlb	13	; () banked
 16406  012E10  6F38               	movwf	56,b	;volatile
 16407                           
 16408                           ; BSR set to: 13
 16409                           ;usb_device.c: 2176: }
 16410                           ;usb_device.c: 2177: }
 16411                           
 16412                           ; BSR set to: 13
 16413                           ;usb_device.c: 2175: break;
 16414  012E12  D00C               	goto	i2l298
 16415  012E14                     i2l5884:
 16416                           
 16417                           ; BSR set to: 13
 16418  012E14  010D               	movlb	13	; () banked
 16419  012E16  5130               	movf	48,w,b	;volatile
 16420  012E18  0B1F               	andlw	31
 16421                           
 16422                           ; Switch size 1, requested type "space"
 16423                           ; Number of cases is 3, Range of values is 0 to 2
 16424                           ; switch strategies available:
 16425                           ; Name         Instructions Cycles
 16426                           ; simple_byte           10     6 (average)
 16427                           ;	Chosen strategy is simple_byte
 16428  012E1A  0A00               	xorlw	0	; case 0
 16429  012E1C  B4D8               	btfsc	status,2,c
 16430  012E1E  D7BF               	goto	i2l295
 16431  012E20  0A01               	xorlw	1	; case 1
 16432  012E22  B4D8               	btfsc	status,2,c
 16433  012E24  D7C4               	goto	i2l299
 16434  012E26  0A03               	xorlw	3	; case 2
 16435  012E28  B4D8               	btfsc	status,2,c
 16436  012E2A  D7C4               	goto	i2l300
 16437  012E2C                     i2l298:
 16438                           
 16439                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 16440  012E2C  0100               	movlb	0	; () banked
 16441  012E2E  AFD5               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 16442  012E30  0012               	return	
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;usb_device.c: 2180: {
 16446                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 16447  012E32  0E38               	movlw	56
 16448  012E34  0100               	movlb	0	; () banked
 16449  012E36  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16450  012E38  0E0D               	movlw	13
 16451  012E3A  0100               	movlb	0	; () banked
 16452  012E3C  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16453                           
 16454                           ; BSR set to: 0
 16455                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16456  012E3E  0100               	movlb	0	; () banked
 16457  012E40  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 16461  012E42  0E02               	movlw	2
 16462  012E44  0100               	movlb	0	; () banked
 16463  012E46  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16464  012E48  0012               	return	
 16465  012E4A                     __end_of_USBStdGetStatusHandler:
 16466                           	opt stack 0
 16467                           pclatu	equ	0xFFB
 16468                           pclath	equ	0xFFA
 16469                           tblptru	equ	0xFF8
 16470                           tblptrh	equ	0xFF7
 16471                           tblptrl	equ	0xFF6
 16472                           tablat	equ	0xFF5
 16473                           prodh	equ	0xFF4
 16474                           prodl	equ	0xFF3
 16475                           intcon	equ	0xFF2
 16476                           intcon2	equ	0xFF1
 16477                           indf0	equ	0xFEF
 16478                           postinc0	equ	0xFEE
 16479                           fsr0h	equ	0xFEA
 16480                           fsr0l	equ	0xFE9
 16481                           wreg	equ	0xFE8
 16482                           indf1	equ	0xFE7
 16483                           postinc1	equ	0xFE6
 16484                           postdec1	equ	0xFE5
 16485                           fsr1h	equ	0xFE2
 16486                           fsr1l	equ	0xFE1
 16487                           indf2	equ	0xFDF
 16488                           postinc2	equ	0xFDE
 16489                           postdec2	equ	0xFDD
 16490                           plusw2	equ	0xFDB
 16491                           fsr2h	equ	0xFDA
 16492                           fsr2l	equ	0xFD9
 16493                           status	equ	0xFD8
 16494                           
 16495 ;; *************** function _USBStdGetDscHandler *****************
 16496 ;; Defined at:
 16497 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;		None
 16500 ;; Auto vars:     Size  Location     Type
 16501 ;;		None
 16502 ;; Return value:  Size  Location     Type
 16503 ;;		None               void
 16504 ;; Registers used:
 16505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16506 ;; Tracked objects:
 16507 ;;		On entry : 0/0
 16508 ;;		On exit  : 0/0
 16509 ;;		Unchanged: 0/0
 16510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16515 ;;Total ram usage:        2 bytes
 16516 ;; Hardware stack levels used:    1
 16517 ;; This function calls:
 16518 ;;		Nothing
 16519 ;; This function is called by:
 16520 ;;		_USBCheckStdRequest
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           	psect	text83
 16525  011550                     __ptext83:
 16526                           	opt stack 0
 16527  011550                     _USBStdGetDscHandler:
 16528                           	opt stack 15
 16529                           
 16530                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;incstack = 0
 16534  011550  0E80               	movlw	128
 16535  011552  010D               	movlb	13	; () banked
 16536  011554  1930               	xorwf	48,w,b	;volatile
 16537  011556  A4D8               	btfss	status,2,c
 16538  011558  0012               	return	
 16539                           
 16540                           ; BSR set to: 13
 16541                           ;usb_device.c: 2047: {
 16542                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 16543  01155A  0EC0               	movlw	192
 16544  01155C  0100               	movlb	0	; () banked
 16545  01155E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16546                           
 16547                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 16548  011560  D092               	goto	i2l5862
 16549  011562                     i2l5836:
 16550                           
 16551                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 16552  011562  0E42               	movlw	low _device_dsc
 16553  011564  0100               	movlb	0	; () banked
 16554  011566  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16555  011568  0EFE               	movlw	high _device_dsc
 16556  01156A  0100               	movlb	0	; () banked
 16557  01156C  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16558                           
 16559                           ; BSR set to: 0
 16560                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 16561  01156E  0E00               	movlw	0
 16562  011570  0100               	movlb	0	; () banked
 16563  011572  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16564  011574  0E12               	movlw	18
 16565  011576  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16566                           
 16567                           ;usb_device.c: 2059: break;
 16568  011578  0012               	return	
 16569  01157A                     i2l5840:
 16570                           
 16571                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 16572  01157A  010D               	movlb	13	; () banked
 16573  01157C  5132               	movf	50,w,b	;volatile
 16574  01157E  A4D8               	btfss	status,2,c
 16575  011580  D049               	goto	i2l5848
 16576                           
 16577                           ; BSR set to: 13
 16578                           ;usb_device.c: 2065: {
 16579                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 16580  011582  010D               	movlb	13	; () banked
 16581  011584  5132               	movf	50,w,b	;volatile
 16582  011586  0D02               	mullw	2
 16583  011588  0E79               	movlw	low _USB_CD_Ptr
 16584  01158A  24F3               	addwf	prodl,w,c
 16585  01158C  6EF6               	movwf	tblptrl,c
 16586  01158E  0EFD               	movlw	high _USB_CD_Ptr
 16587  011590  20F4               	addwfc	prodh,w,c
 16588  011592  6EF7               	movwf	tblptrh,c
 16589  011594                     	if	1	;There are 3 active tblptr bytes
 16590  011594  6AF8               	clrf	tblptru,c
 16591  011596  0E00               	movlw	low (__mediumconst shr (0+16))
 16592  011598  22F8               	addwfc	tblptru,f,c
 16593  01159A                     	endif
 16594  01159A  0009               	tblrd		*+
 16595  01159C  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16596  0115A0  000A               	tblrd		*-
 16597  0115A2  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16598                           
 16599                           ; BSR set to: 13
 16600                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 16601  0115A6  0E02               	movlw	2
 16602  0115A8  0100               	movlb	0	; () banked
 16603  0115AA  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 16604  0115AC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16605  0115AE  0E00               	movlw	0
 16606  0115B0  0100               	movlb	0	; () banked
 16607  0115B2  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 16608  0115B4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16609  0115B6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16610  0115BA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16611  0115BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16612  0115C0  6EF8               	movwf	tblptru,c
 16613  0115C2  0E0E               	movlw	(high __ramtop+-1)
 16614  0115C4  64F7               	cpfsgt	tblptrh,c
 16615  0115C6  D003               	bra	i2u458_47
 16616  0115C8  0008               	tblrd		*
 16617  0115CA  50F5               	movf	tablat,w,c
 16618  0115CC  D005               	bra	i2u458_40
 16619  0115CE                     i2u458_47:
 16620  0115CE  CFF6 FFE9          	movff	tblptrl,fsr0l
 16621  0115D2  CFF7 FFEA          	movff	tblptrh,fsr0h
 16622  0115D6  50EF               	movf	indf0,w,c
 16623  0115D8                     i2u458_40:
 16624  0115D8  0100               	movlb	0	; () banked
 16625  0115DA  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 16629  0115DC  0E03               	movlw	3
 16630  0115DE  0100               	movlb	0	; () banked
 16631  0115E0  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 16632  0115E2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16633  0115E4  0E00               	movlw	0
 16634  0115E6  0100               	movlb	0	; () banked
 16635  0115E8  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 16636  0115EA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16637  0115EC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16638  0115F0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16639  0115F4  0E00               	movlw	low (__mediumconst shr (0+16))
 16640  0115F6  6EF8               	movwf	tblptru,c
 16641  0115F8  0E0E               	movlw	(high __ramtop+-1)
 16642  0115FA  64F7               	cpfsgt	tblptrh,c
 16643  0115FC  D003               	bra	i2u459_47
 16644  0115FE  0008               	tblrd		*
 16645  011600  50F5               	movf	tablat,w,c
 16646  011602  D005               	bra	i2u459_40
 16647  011604                     i2u459_47:
 16648  011604  CFF6 FFE9          	movff	tblptrl,fsr0l
 16649  011608  CFF7 FFEA          	movff	tblptrh,fsr0h
 16650  01160C  50EF               	movf	indf0,w,c
 16651  01160E                     i2u459_40:
 16652  01160E  0100               	movlb	0	; () banked
 16653  011610  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16654                           
 16655                           ;usb_device.c: 2077: }
 16656  011612  0012               	return	
 16657  011614                     i2l5848:
 16658                           
 16659                           ;usb_device.c: 2078: else
 16660                           ;usb_device.c: 2079: {
 16661                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 16662  011614  0E00               	movlw	0
 16663  011616  0100               	movlb	0	; () banked
 16664  011618  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;usb_device.c: 2081: }
 16668                           ;usb_device.c: 2082: break;
 16669  01161A  0012               	return	
 16670  01161C                     i2l5850:
 16671                           
 16672                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 16673  01161C  0E03               	movlw	3
 16674  01161E  010D               	movlb	13	; () banked
 16675  011620  6132               	cpfslt	50,b	;volatile
 16676  011622  D029               	goto	i2l5856
 16677                           
 16678                           ; BSR set to: 13
 16679                           ;usb_device.c: 2088: {
 16680                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 16681  011624  010D               	movlb	13	; () banked
 16682  011626  5132               	movf	50,w,b	;volatile
 16683  011628  0D02               	mullw	2
 16684  01162A  0E73               	movlw	low _USB_SD_Ptr
 16685  01162C  24F3               	addwf	prodl,w,c
 16686  01162E  6EF6               	movwf	tblptrl,c
 16687  011630  0EFD               	movlw	high _USB_SD_Ptr
 16688  011632  20F4               	addwfc	prodh,w,c
 16689  011634  6EF7               	movwf	tblptrh,c
 16690  011636                     	if	1	;There are 3 active tblptr bytes
 16691  011636  6AF8               	clrf	tblptru,c
 16692  011638  0E00               	movlw	low (__mediumconst shr (0+16))
 16693  01163A  22F8               	addwfc	tblptru,f,c
 16694  01163C                     	endif
 16695  01163C  0009               	tblrd		*+
 16696  01163E  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16697  011642  000A               	tblrd		*-
 16698  011644  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16699                           
 16700                           ; BSR set to: 13
 16701                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 16702  011648  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 16703  01164C  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16704  011650  0E00               	movlw	low (__mediumconst shr (0+16))
 16705  011652  6EF8               	movwf	tblptru,c
 16706  011654  0E0E               	movlw	(high __ramtop+-1)
 16707  011656  64F7               	cpfsgt	tblptrh,c
 16708  011658  D003               	bra	i2u461_47
 16709  01165A  0008               	tblrd		*
 16710  01165C  50F5               	movf	tablat,w,c
 16711  01165E  D005               	bra	i2u461_40
 16712  011660                     i2u461_47:
 16713  011660  CFF6 FFE9          	movff	tblptrl,fsr0l
 16714  011664  CFF7 FFEA          	movff	tblptrh,fsr0h
 16715  011668  50EF               	movf	indf0,w,c
 16716  01166A                     i2u461_40:
 16717  01166A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16718  01166C  5001               	movf	??_USBStdGetDscHandler,w,c
 16719  01166E  0100               	movlb	0	; () banked
 16720  011670  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16721  011672  6BD7               	clrf	(_inPipes+5)& (0+255),b	;volatile
 16722                           
 16723                           ;usb_device.c: 2093: }
 16724  011674  0012               	return	
 16725  011676                     i2l5856:
 16726                           
 16727                           ;usb_device.c: 2103: else
 16728                           ;usb_device.c: 2104: {
 16729                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 16730  011676  0E00               	movlw	0
 16731  011678  0100               	movlb	0	; () banked
 16732  01167A  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;usb_device.c: 2106: }
 16736                           ;usb_device.c: 2107: break;
 16737  01167C  0012               	return	
 16738  01167E                     i2l5858:
 16739                           
 16740                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 16741  01167E  0E00               	movlw	0
 16742  011680  0100               	movlb	0	; () banked
 16743  011682  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;usb_device.c: 2111: }
 16747                           
 16748                           ;usb_device.c: 2110: break;
 16749  011684  0012               	return	
 16750  011686                     i2l5862:
 16751                           
 16752                           ; BSR set to: 0
 16753  011686  010D               	movlb	13	; () banked
 16754  011688  5133               	movf	51,w,b	;volatile
 16755                           
 16756                           ; Switch size 1, requested type "space"
 16757                           ; Number of cases is 3, Range of values is 1 to 3
 16758                           ; switch strategies available:
 16759                           ; Name         Instructions Cycles
 16760                           ; simple_byte           10     6 (average)
 16761                           ;	Chosen strategy is simple_byte
 16762  01168A  0A01               	xorlw	1	; case 1
 16763  01168C  B4D8               	btfsc	status,2,c
 16764  01168E  D769               	goto	i2l5836
 16765  011690  0A03               	xorlw	3	; case 2
 16766  011692  B4D8               	btfsc	status,2,c
 16767  011694  D772               	goto	i2l5840
 16768  011696  0A01               	xorlw	1	; case 3
 16769  011698  B4D8               	btfsc	status,2,c
 16770  01169A  D7C0               	goto	i2l5850
 16771  01169C  D7F0               	goto	i2l5858
 16772  01169E                     __end_of_USBStdGetDscHandler:
 16773                           	opt stack 0
 16774                           pclatu	equ	0xFFB
 16775                           pclath	equ	0xFFA
 16776                           tblptru	equ	0xFF8
 16777                           tblptrh	equ	0xFF7
 16778                           tblptrl	equ	0xFF6
 16779                           tablat	equ	0xFF5
 16780                           prodh	equ	0xFF4
 16781                           prodl	equ	0xFF3
 16782                           intcon	equ	0xFF2
 16783                           intcon2	equ	0xFF1
 16784                           indf0	equ	0xFEF
 16785                           postinc0	equ	0xFEE
 16786                           fsr0h	equ	0xFEA
 16787                           fsr0l	equ	0xFE9
 16788                           wreg	equ	0xFE8
 16789                           indf1	equ	0xFE7
 16790                           postinc1	equ	0xFE6
 16791                           postdec1	equ	0xFE5
 16792                           fsr1h	equ	0xFE2
 16793                           fsr1l	equ	0xFE1
 16794                           indf2	equ	0xFDF
 16795                           postinc2	equ	0xFDE
 16796                           postdec2	equ	0xFDD
 16797                           plusw2	equ	0xFDB
 16798                           fsr2h	equ	0xFDA
 16799                           fsr2l	equ	0xFD9
 16800                           status	equ	0xFD8
 16801                           
 16802 ;; *************** function _USBStdFeatureReqHandler *****************
 16803 ;; Defined at:
 16804 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;		None
 16807 ;; Auto vars:     Size  Location     Type
 16808 ;;  p               2   24[COMRAM] PTR struct __BDT
 16809 ;;		 -> NULL(0), BDT(48), 
 16810 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 16811 ;;		 -> UEP0(1), 
 16812 ;;  current_ep_d    1   23[COMRAM] struct .
 16813 ;; Return value:  Size  Location     Type
 16814 ;;		None               void
 16815 ;; Registers used:
 16816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16817 ;; Tracked objects:
 16818 ;;		On entry : 0/0
 16819 ;;		On exit  : 0/0
 16820 ;;		Unchanged: 0/0
 16821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16823 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;Total ram usage:        6 bytes
 16827 ;; Hardware stack levels used:    1
 16828 ;; Hardware stack levels required when called:    5
 16829 ;; This function calls:
 16830 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16831 ;; This function is called by:
 16832 ;;		_USBCheckStdRequest
 16833 ;; This function uses a non-reentrant model
 16834 ;;
 16835                           
 16836                           	psect	text84
 16837  010DFE                     __ptext84:
 16838                           	opt stack 0
 16839  010DFE                     _USBStdFeatureReqHandler:
 16840                           	opt stack 10
 16841                           
 16842                           ;usb_device.c: 2760: BDT_ENTRY *p;
 16843                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 16844                           ;usb_device.c: 2765: unsigned char* pUEP;
 16845                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 16846                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 16847                           
 16848                           ;incstack = 0
 16849  010DFE  010D               	movlb	13	; () banked
 16850  010E00  0532               	decf	50,w,b	;volatile
 16851  010E02  A4D8               	btfss	status,2,c
 16852  010E04  D011               	goto	i2l374
 16853                           
 16854                           ; BSR set to: 13
 16855  010E06  010D               	movlb	13	; () banked
 16856  010E08  5130               	movf	48,w,b	;volatile
 16857  010E0A  0B1F               	andlw	31
 16858  010E0C  0900               	iorlw	0
 16859  010E0E  A4D8               	btfss	status,2,c
 16860  010E10  D00B               	goto	i2l374
 16861                           
 16862                           ; BSR set to: 13
 16863                           ;usb_device.c: 2805: {
 16864                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 16865  010E12  0100               	movlb	0	; () banked
 16866  010E14  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16867                           
 16868                           ; BSR set to: 0
 16869                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 16870  010E16  0E03               	movlw	3
 16871  010E18  010D               	movlb	13	; () banked
 16872  010E1A  1931               	xorwf	49,w,b	;volatile
 16873  010E1C  A4D8               	btfss	status,2,c
 16874  010E1E  D002               	goto	i2l5902
 16875                           
 16876                           ; BSR set to: 13
 16877                           ;usb_device.c: 2808: RemoteWakeup = 1;
 16878  010E20  0E01               	movlw	1
 16879  010E22  D001               	goto	L6
 16880  010E24                     i2l5902:
 16881                           
 16882                           ; BSR set to: 13
 16883                           ;usb_device.c: 2809: else
 16884                           ;usb_device.c: 2810: RemoteWakeup = 0;
 16885  010E24  0E00               	movlw	0
 16886  010E26                     L6:
 16887  010E26  6E3C               	movwf	_RemoteWakeup,c	;volatile
 16888  010E28                     i2l374:
 16889                           
 16890                           ; BSR set to: 13
 16891                           ;usb_device.c: 2811: }
 16892                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 16893                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 16894                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 16895                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 16896  010E28  010D               	movlb	13	; () banked
 16897  010E2A  5132               	movf	50,w,b	;volatile
 16898  010E2C  A4D8               	btfss	status,2,c
 16899  010E2E  0012               	return	
 16900                           
 16901                           ; BSR set to: 13
 16902  010E30  010D               	movlb	13	; () banked
 16903  010E32  5130               	movf	48,w,b	;volatile
 16904  010E34  0B1F               	andlw	31
 16905  010E36  0A02               	xorlw	2
 16906  010E38  A4D8               	btfss	status,2,c
 16907  010E3A  0012               	return	
 16908                           
 16909                           ; BSR set to: 13
 16910  010E3C  010D               	movlb	13	; () banked
 16911  010E3E  5134               	movf	52,w,b	;volatile
 16912  010E40  0B0F               	andlw	15
 16913  010E42  0900               	iorlw	0
 16914  010E44  B4D8               	btfsc	status,2,c
 16915  010E46  0012               	return	
 16916                           
 16917                           ; BSR set to: 13
 16918  010E48  010D               	movlb	13	; () banked
 16919  010E4A  5134               	movf	52,w,b	;volatile
 16920  010E4C  0B0F               	andlw	15
 16921  010E4E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16922  010E50  0E03               	movlw	3
 16923  010E52  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 16924  010E54  0012               	return	
 16925                           
 16926                           ; BSR set to: 13
 16927  010E56  0E20               	movlw	32
 16928  010E58  1840               	xorwf	_USBDeviceState,w,c	;volatile
 16929  010E5A  A4D8               	btfss	status,2,c
 16930  010E5C  0012               	return	
 16931                           
 16932                           ; BSR set to: 13
 16933                           ;usb_device.c: 2818: {
 16934                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 16935  010E5E  0100               	movlb	0	; () banked
 16936  010E60  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16937                           
 16938                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 16939  010E62  010D               	movlb	13	; () banked
 16940  010E64  BF34               	btfsc	52,7,b	;volatile
 16941  010E66  D01B               	goto	i2l5916
 16942                           
 16943                           ; BSR set to: 13
 16944                           ;usb_device.c: 2825: {
 16945                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16946  010E68  010D               	movlb	13	; () banked
 16947  010E6A  5134               	movf	52,w,b	;volatile
 16948  010E6C  0B0F               	andlw	15
 16949  010E6E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16950  010E70  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16951  010E72  0D02               	mullw	2
 16952  010E74  0EDE               	movlw	low _pBDTEntryOut
 16953  010E76  24F3               	addwf	prodl,w,c
 16954  010E78  6ED9               	movwf	fsr2l,c
 16955  010E7A  0E00               	movlw	high _pBDTEntryOut
 16956  010E7C  20F4               	addwfc	prodh,w,c
 16957  010E7E  6EDA               	movwf	fsr2h,c
 16958  010E80  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 16959  010E84  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16960                           
 16961                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 16962  010E88  010D               	movlb	13	; () banked
 16963  010E8A  5134               	movf	52,w,b	;volatile
 16964  010E8C  0B0F               	andlw	15
 16965  010E8E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16966  010E90  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16967  010E92  0D01               	mullw	1
 16968  010E94  0EE7               	movlw	low _ep_data_out
 16969  010E96  24F3               	addwf	prodl,w,c
 16970  010E98  6ED9               	movwf	fsr2l,c
 16971  010E9A  0E00               	movlw	high _ep_data_out
 16972  010E9C  D01A               	goto	L7
 16973  010E9E                     i2l5916:
 16974                           
 16975                           ; BSR set to: 13
 16976                           ;usb_device.c: 2829: else
 16977                           ;usb_device.c: 2830: {
 16978                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16979  010E9E  010D               	movlb	13	; () banked
 16980  010EA0  5134               	movf	52,w,b	;volatile
 16981  010EA2  0B0F               	andlw	15
 16982  010EA4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16983  010EA6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16984  010EA8  0D02               	mullw	2
 16985  010EAA  0ED8               	movlw	low _pBDTEntryIn
 16986  010EAC  24F3               	addwf	prodl,w,c
 16987  010EAE  6ED9               	movwf	fsr2l,c
 16988  010EB0  0E00               	movlw	high _pBDTEntryIn
 16989  010EB2  20F4               	addwfc	prodh,w,c
 16990  010EB4  6EDA               	movwf	fsr2h,c
 16991  010EB6  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 16992  010EBA  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16993                           
 16994                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 16995  010EBE  010D               	movlb	13	; () banked
 16996  010EC0  5134               	movf	52,w,b	;volatile
 16997  010EC2  0B0F               	andlw	15
 16998  010EC4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16999  010EC6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17000  010EC8  0D01               	mullw	1
 17001  010ECA  0EE4               	movlw	low _ep_data_in
 17002  010ECC  24F3               	addwf	prodl,w,c
 17003  010ECE  6ED9               	movwf	fsr2l,c
 17004  010ED0  0E00               	movlw	high _ep_data_in
 17005  010ED2                     L7:
 17006  010ED2  20F4               	addwfc	prodh,w,c
 17007  010ED4  6EDA               	movwf	fsr2h,c
 17008  010ED6  50DF               	movf	indf2,w,c
 17009  010ED8  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17010                           
 17011                           ; BSR set to: 13
 17012                           ;usb_device.c: 2833: }
 17013                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 17014                           
 17015                           ; BSR set to: 13
 17016  010EDA  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17017  010EDC  D002               	goto	i2l5922
 17018                           
 17019                           ; BSR set to: 13
 17020                           ;usb_device.c: 2840: {
 17021                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17022  010EDE  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 17023                           
 17024                           ;usb_device.c: 2842: }
 17025  010EE0  D001               	goto	i2l5924
 17026  010EE2                     i2l5922:
 17027                           
 17028                           ; BSR set to: 13
 17029                           ;usb_device.c: 2843: else
 17030                           ;usb_device.c: 2844: {
 17031                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17032  010EE2  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 17033  010EE4                     i2l5924:
 17034                           
 17035                           ; BSR set to: 13
 17036                           ;usb_device.c: 2846: }
 17037                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 17038  010EE4  010D               	movlb	13	; () banked
 17039  010EE6  BF34               	btfsc	52,7,b	;volatile
 17040  010EE8  D00B               	goto	i2l5928
 17041                           
 17042                           ; BSR set to: 13
 17043                           ;usb_device.c: 2852: {
 17044                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17045  010EEA  010D               	movlb	13	; () banked
 17046  010EEC  5134               	movf	52,w,b	;volatile
 17047  010EEE  0B0F               	andlw	15
 17048  010EF0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17049  010EF2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17050  010EF4  0D02               	mullw	2
 17051  010EF6  0EDE               	movlw	low _pBDTEntryOut
 17052  010EF8  24F3               	addwf	prodl,w,c
 17053  010EFA  6ED9               	movwf	fsr2l,c
 17054  010EFC  0E00               	movlw	high _pBDTEntryOut
 17055  010EFE  D00A               	goto	L8
 17056  010F00                     i2l5928:
 17057                           
 17058                           ; BSR set to: 13
 17059                           ;usb_device.c: 2855: else
 17060                           ;usb_device.c: 2856: {
 17061                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17062  010F00  010D               	movlb	13	; () banked
 17063  010F02  5134               	movf	52,w,b	;volatile
 17064  010F04  0B0F               	andlw	15
 17065  010F06  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17066  010F08  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17067  010F0A  0D02               	mullw	2
 17068  010F0C  0ED8               	movlw	low _pBDTEntryIn
 17069  010F0E  24F3               	addwf	prodl,w,c
 17070  010F10  6ED9               	movwf	fsr2l,c
 17071  010F12  0E00               	movlw	high _pBDTEntryIn
 17072  010F14                     L8:
 17073  010F14  20F4               	addwfc	prodh,w,c
 17074  010F16  6EDA               	movwf	fsr2h,c
 17075  010F18  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17076  010F1C  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17077                           
 17078                           ; BSR set to: 13
 17079                           ;usb_device.c: 2858: }
 17080                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 17081                           
 17082                           ; BSR set to: 13
 17083  010F20  0E03               	movlw	3
 17084  010F22  010D               	movlb	13	; () banked
 17085  010F24  1931               	xorwf	49,w,b	;volatile
 17086  010F26  A4D8               	btfss	status,2,c
 17087  010F28  D02F               	goto	i2l5944
 17088                           
 17089                           ; BSR set to: 13
 17090                           ;usb_device.c: 2862: {
 17091                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 17092  010F2A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17093  010F2E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17094  010F32  AEDF               	btfss	indf2,7,c
 17095  010F34  D01C               	goto	i2l5940
 17096                           
 17097                           ; BSR set to: 13
 17098                           ;usb_device.c: 2864: {
 17099                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 17100  010F36  010D               	movlb	13	; () banked
 17101  010F38  BF34               	btfsc	52,7,b	;volatile
 17102  010F3A  D00B               	goto	i2l5938
 17103                           
 17104                           ; BSR set to: 13
 17105                           ;usb_device.c: 2868: {
 17106                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17107  010F3C  010D               	movlb	13	; () banked
 17108  010F3E  5134               	movf	52,w,b	;volatile
 17109  010F40  0B0F               	andlw	15
 17110  010F42  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17111  010F44  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17112  010F46  0D01               	mullw	1
 17113  010F48  0EE7               	movlw	low _ep_data_out
 17114  010F4A  24F3               	addwf	prodl,w,c
 17115  010F4C  6ED9               	movwf	fsr2l,c
 17116  010F4E  0E00               	movlw	high _ep_data_out
 17117  010F50  D00A               	goto	L9
 17118  010F52                     i2l5938:
 17119                           
 17120                           ;usb_device.c: 2871: else
 17121                           ;usb_device.c: 2872: {
 17122                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17123  010F52  010D               	movlb	13	; () banked
 17124  010F54  5134               	movf	52,w,b	;volatile
 17125  010F56  0B0F               	andlw	15
 17126  010F58  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17127  010F5A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17128  010F5C  0D01               	mullw	1
 17129  010F5E  0EE4               	movlw	low _ep_data_in
 17130  010F60  24F3               	addwf	prodl,w,c
 17131  010F62  6ED9               	movwf	fsr2l,c
 17132  010F64  0E00               	movlw	high _ep_data_in
 17133  010F66                     L9:
 17134  010F66  20F4               	addwfc	prodh,w,c
 17135  010F68  6EDA               	movwf	fsr2h,c
 17136  010F6A  0100               	movlb	0	; () banked
 17137  010F6C  82DF               	bsf	indf2,1,c
 17138  010F6E                     i2l5940:
 17139                           
 17140                           ;usb_device.c: 2874: }
 17141                           ;usb_device.c: 2875: }
 17142                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 17143  010F6E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17144  010F72  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17145  010F76  0E00               	movlw	0
 17146  010F78  84DB               	bsf	plusw2,2,c
 17147                           
 17148                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 17149  010F7A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17150  010F7E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17151  010F82  0E00               	movlw	0
 17152  010F84  8EDB               	bsf	plusw2,7,c
 17153                           
 17154                           ;usb_device.c: 2880: }
 17155  010F86  0012               	return	
 17156  010F88                     i2l5944:
 17157                           
 17158                           ;usb_device.c: 2881: else
 17159                           ;usb_device.c: 2882: {
 17160                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17161  010F88  0E04               	movlw	4
 17162  010F8A  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 17163                           
 17164                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 17165  010F8C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17166  010F90  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17167  010F94  AEDF               	btfss	indf2,7,c
 17168  010F96  D01B               	goto	i2l5954
 17169                           
 17170                           ;usb_device.c: 2889: {
 17171                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 17172  010F98  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17173  010F9C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17174  010FA0  0E7F               	movlw	127
 17175  010FA2  16DF               	andwf	indf2,f,c
 17176                           
 17177                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 17178  010FA4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17179  010FA8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17180  010FAC  0E00               	movlw	0
 17181  010FAE  8CDB               	bsf	plusw2,6,c
 17182                           
 17183                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17184  010FB0  0E00               	movlw	0
 17185  010FB2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17186  010FB4  0E05               	movlw	5
 17187  010FB6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17188  010FB8  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17189  010FBC  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17190  010FC0  0E00               	movlw	0
 17191  010FC2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17192  010FC4  0E02               	movlw	2
 17193  010FC6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17194  010FC8  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17195                           
 17196                           ;usb_device.c: 2895: }
 17197  010FCC  D006               	goto	i2l5956
 17198  010FCE                     i2l5954:
 17199                           
 17200                           ;usb_device.c: 2896: else
 17201                           ;usb_device.c: 2897: {
 17202                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 17203  010FCE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17204  010FD2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17205  010FD6  0E00               	movlw	0
 17206  010FD8  8CDB               	bsf	plusw2,6,c
 17207  010FDA                     i2l5956:
 17208                           
 17209                           ;usb_device.c: 2900: }
 17210                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17211  010FDA  0E04               	movlw	4
 17212  010FDC  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 17213                           
 17214                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 17215  010FDE  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 17216  010FE0  D006               	goto	i2l393
 17217  010FE2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17218  010FE6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17219  010FEA  AEDF               	btfss	indf2,7,c
 17220  010FEC  D031               	goto	i2l5970
 17221  010FEE                     i2l393:
 17222                           
 17223                           ;usb_device.c: 2911: {
 17224                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 17225  010FEE  010D               	movlb	13	; () banked
 17226  010FF0  BF34               	btfsc	52,7,b	;volatile
 17227  010FF2  D00B               	goto	i2l5964
 17228                           
 17229                           ; BSR set to: 13
 17230                           ;usb_device.c: 2913: {
 17231                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17232  010FF4  010D               	movlb	13	; () banked
 17233  010FF6  5134               	movf	52,w,b	;volatile
 17234  010FF8  0B0F               	andlw	15
 17235  010FFA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17236  010FFC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17237  010FFE  0D01               	mullw	1
 17238  011000  0EE7               	movlw	low _ep_data_out
 17239  011002  24F3               	addwf	prodl,w,c
 17240  011004  6ED9               	movwf	fsr2l,c
 17241  011006  0E00               	movlw	high _ep_data_out
 17242  011008  D00A               	goto	L10
 17243  01100A                     i2l5964:
 17244                           
 17245                           ;usb_device.c: 2916: else
 17246                           ;usb_device.c: 2917: {
 17247                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17248  01100A  010D               	movlb	13	; () banked
 17249  01100C  5134               	movf	52,w,b	;volatile
 17250  01100E  0B0F               	andlw	15
 17251  011010  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17252  011012  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17253  011014  0D01               	mullw	1
 17254  011016  0EE4               	movlw	low _ep_data_in
 17255  011018  24F3               	addwf	prodl,w,c
 17256  01101A  6ED9               	movwf	fsr2l,c
 17257  01101C  0E00               	movlw	high _ep_data_in
 17258  01101E                     L10:
 17259  01101E  20F4               	addwfc	prodh,w,c
 17260  011020  6EDA               	movwf	fsr2h,c
 17261  011022  0100               	movlb	0	; () banked
 17262  011024  92DF               	bcf	indf2,1,c
 17263                           
 17264                           ; BSR set to: 0
 17265                           ;usb_device.c: 2919: }
 17266                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17267                           
 17268                           ; BSR set to: 0
 17269  011026  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17270  01102A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17271  01102E  0E3B               	movlw	59
 17272  011030  16DF               	andwf	indf2,f,c
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17276  011032  0E00               	movlw	0
 17277  011034  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17278  011036  0E05               	movlw	5
 17279  011038  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17280  01103A  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17281  01103E  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17282  011042  0E00               	movlw	0
 17283  011044  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17284  011046  0E02               	movlw	2
 17285  011048  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17286  01104A  ECE0  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17287                           
 17288                           ;usb_device.c: 2925: }
 17289  01104E  D006               	goto	i2l5972
 17290  011050                     i2l5970:
 17291                           
 17292                           ;usb_device.c: 2926: else
 17293                           ;usb_device.c: 2927: {
 17294                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17295  011050  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17296  011054  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17297  011058  0E3B               	movlw	59
 17298  01105A  16DF               	andwf	indf2,f,c
 17299  01105C                     i2l5972:
 17300                           
 17301                           ;usb_device.c: 2930: }
 17302                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 17303  01105C  010D               	movlb	13	; () banked
 17304  01105E  5134               	movf	52,w,b	;volatile
 17305  011060  0B0F               	andlw	15
 17306  011062  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17307  011064  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17308  011066  0D01               	mullw	1
 17309  011068  0E26               	movlw	38
 17310  01106A  24F3               	addwf	prodl,w,c
 17311  01106C  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 17312  01106E  0E0F               	movlw	15
 17313  011070  20F4               	addwfc	prodh,w,c
 17314  011072  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 17315                           
 17316                           ; BSR set to: 13
 17317                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 17318  011074  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 17319  011078  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 17320  01107C  0EFE               	movlw	254
 17321  01107E  16DF               	andwf	indf2,f,c
 17322                           
 17323                           ; BSR set to: 13
 17324  011080  0012               	return	
 17325  011082                     __end_of_USBStdFeatureReqHandler:
 17326                           	opt stack 0
 17327                           pclatu	equ	0xFFB
 17328                           pclath	equ	0xFFA
 17329                           tblptru	equ	0xFF8
 17330                           tblptrh	equ	0xFF7
 17331                           tblptrl	equ	0xFF6
 17332                           tablat	equ	0xFF5
 17333                           prodh	equ	0xFF4
 17334                           prodl	equ	0xFF3
 17335                           intcon	equ	0xFF2
 17336                           intcon2	equ	0xFF1
 17337                           indf0	equ	0xFEF
 17338                           postinc0	equ	0xFEE
 17339                           fsr0h	equ	0xFEA
 17340                           fsr0l	equ	0xFE9
 17341                           wreg	equ	0xFE8
 17342                           indf1	equ	0xFE7
 17343                           postinc1	equ	0xFE6
 17344                           postdec1	equ	0xFE5
 17345                           fsr1h	equ	0xFE2
 17346                           fsr1l	equ	0xFE1
 17347                           indf2	equ	0xFDF
 17348                           postinc2	equ	0xFDE
 17349                           postdec2	equ	0xFDD
 17350                           plusw2	equ	0xFDB
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 17356 ;; Defined at:
 17357 ;;		line 119 in file "../My_library/My_usb_cdc.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;  event           2   12[COMRAM] enum E70
 17360 ;;  pdata           2   14[COMRAM] PTR void 
 17361 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 17362 ;;  size            2   16[COMRAM] unsigned int 
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;		None
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      unsigned char 
 17367 ;; Registers used:
 17368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17374 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17377 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17378 ;;Total ram usage:        8 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; Hardware stack levels required when called:    4
 17381 ;; This function calls:
 17382 ;;		_APP_DeviceCDCBasicDemoInitialize
 17383 ;;		_USBCheckCDCRequest
 17384 ;; This function is called by:
 17385 ;;		_USBDeviceTasks
 17386 ;;		_USBStdSetCfgHandler
 17387 ;;		_USBSuspend
 17388 ;;		_USBWakeFromSuspend
 17389 ;;		_USBCtrlTrfSetupHandler
 17390 ;;		_USBCheckStdRequest
 17391 ;;		_USBStdFeatureReqHandler
 17392 ;; This function uses a non-reentrant model
 17393 ;;
 17394                           
 17395                           	psect	text85
 17396  0139C0                     __ptext85:
 17397                           	opt stack 0
 17398  0139C0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 17399                           	opt stack 14
 17400                           
 17401                           ;My_usb_cdc.c: 120: switch ((int) event) {
 17402                           
 17403                           ;incstack = 0
 17404  0139C0  D006               	goto	i2l5562
 17405  0139C2                     i2l5556:
 17406                           
 17407                           ;My_usb_cdc.c: 143: APP_DeviceCDCBasicDemoInitialize();
 17408  0139C2  ECC0  F09F         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 17409                           
 17410                           ;My_usb_cdc.c: 147: break;
 17411                           
 17412                           ;My_usb_cdc.c: 146: case EVENT_SET_DESCRIPTOR:
 17413                           
 17414                           ;My_usb_cdc.c: 144: break;
 17415  0139C6  0012               	return	
 17416  0139C8                     i2l5558:
 17417                           
 17418                           ;My_usb_cdc.c: 152: USBCheckCDCRequest();
 17419  0139C8  EC16  F092         	call	_USBCheckCDCRequest	;wreg free
 17420                           
 17421                           ;My_usb_cdc.c: 163: }
 17422                           
 17423                           ;My_usb_cdc.c: 162: break;
 17424                           
 17425                           ;My_usb_cdc.c: 161: default:
 17426                           
 17427                           ;My_usb_cdc.c: 159: break;
 17428                           
 17429                           ;My_usb_cdc.c: 158: case EVENT_TRANSFER_TERMINATED:
 17430                           
 17431                           ;My_usb_cdc.c: 156: break;
 17432                           
 17433                           ;My_usb_cdc.c: 155: case EVENT_BUS_ERROR:
 17434                           
 17435                           ;My_usb_cdc.c: 153: break;
 17436  0139CC  0012               	return	
 17437  0139CE                     i2l5562:
 17438  0139CE  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 17439  0139D2  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 17440                           
 17441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 17442                           ; Switch size 1, requested type "space"
 17443                           ; Number of cases is 2, Range of values is 0 to 127
 17444                           ; switch strategies available:
 17445                           ; Name         Instructions Cycles
 17446                           ; simple_byte            7     4 (average)
 17447                           ;	Chosen strategy is simple_byte
 17448  0139D6  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 17449  0139D8  0A00               	xorlw	0	; case 0
 17450  0139DA  B4D8               	btfsc	status,2,c
 17451  0139DC  D004               	goto	i2l9934
 17452  0139DE  0A7F               	xorlw	127	; case 127
 17453  0139E0  A4D8               	btfss	status,2,c
 17454  0139E2  0012               	return	
 17455  0139E4  D018               	goto	i2l9936
 17456  0139E6                     i2l9934:
 17457                           
 17458                           ; Switch size 1, requested type "space"
 17459                           ; Number of cases is 8, Range of values is 1 to 117
 17460                           ; switch strategies available:
 17461                           ; Name         Instructions Cycles
 17462                           ; simple_byte           25    13 (average)
 17463                           ;	Chosen strategy is simple_byte
 17464  0139E6  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17465  0139E8  0A01               	xorlw	1	; case 1
 17466  0139EA  B4D8               	btfsc	status,2,c
 17467  0139EC  D7EA               	goto	i2l5556
 17468  0139EE  0A03               	xorlw	3	; case 2
 17469  0139F0  B4D8               	btfsc	status,2,c
 17470  0139F2  0012               	return	
 17471  0139F4  0A01               	xorlw	1	; case 3
 17472  0139F6  B4D8               	btfsc	status,2,c
 17473  0139F8  D7E7               	goto	i2l5558
 17474  0139FA  0A06               	xorlw	6	; case 5
 17475  0139FC  B4D8               	btfsc	status,2,c
 17476  0139FE  0012               	return	
 17477  013A00  0A77               	xorlw	119	; case 114
 17478  013A02  B4D8               	btfsc	status,2,c
 17479  013A04  0012               	return	
 17480  013A06  0A01               	xorlw	1	; case 115
 17481  013A08  B4D8               	btfsc	status,2,c
 17482  013A0A  0012               	return	
 17483  013A0C  0A07               	xorlw	7	; case 116
 17484  013A0E  B4D8               	btfsc	status,2,c
 17485  013A10  0012               	return	
 17486  013A12  0A01               	xorlw	1	; case 117
 17487  013A14  0012               	return	
 17488  013A16                     i2l9936:
 17489                           
 17490                           ; Switch size 1, requested type "space"
 17491                           ; Number of cases is 1, Range of values is 255 to 255
 17492                           ; switch strategies available:
 17493                           ; Name         Instructions Cycles
 17494                           ; simple_byte            4     3 (average)
 17495                           ;	Chosen strategy is simple_byte
 17496  013A16  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17497  013A18  0AFF               	xorlw	255	; case 255
 17498  013A1A  0012               	return	
 17499  013A1C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 17500                           	opt stack 0
 17501                           pclatu	equ	0xFFB
 17502                           pclath	equ	0xFFA
 17503                           tblptru	equ	0xFF8
 17504                           tblptrh	equ	0xFF7
 17505                           tblptrl	equ	0xFF6
 17506                           tablat	equ	0xFF5
 17507                           prodh	equ	0xFF4
 17508                           prodl	equ	0xFF3
 17509                           intcon	equ	0xFF2
 17510                           intcon2	equ	0xFF1
 17511                           indf0	equ	0xFEF
 17512                           postinc0	equ	0xFEE
 17513                           fsr0h	equ	0xFEA
 17514                           fsr0l	equ	0xFE9
 17515                           wreg	equ	0xFE8
 17516                           indf1	equ	0xFE7
 17517                           postinc1	equ	0xFE6
 17518                           postdec1	equ	0xFE5
 17519                           fsr1h	equ	0xFE2
 17520                           fsr1l	equ	0xFE1
 17521                           indf2	equ	0xFDF
 17522                           postinc2	equ	0xFDE
 17523                           postdec2	equ	0xFDD
 17524                           plusw2	equ	0xFDB
 17525                           fsr2h	equ	0xFDA
 17526                           fsr2l	equ	0xFD9
 17527                           status	equ	0xFD8
 17528                           
 17529 ;; *************** function _USBCheckCDCRequest *****************
 17530 ;; Defined at:
 17531 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;		None               void
 17538 ;; Registers used:
 17539 ;;		wreg, status,2, status,0
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17549 ;;Total ram usage:        0 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17555 ;; This function uses a non-reentrant model
 17556 ;;
 17557                           
 17558                           	psect	text86
 17559  01242C                     __ptext86:
 17560                           	opt stack 0
 17561  01242C                     _USBCheckCDCRequest:
 17562                           	opt stack 17
 17563                           
 17564                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 17565                           
 17566                           ;incstack = 0
 17567  01242C  010D               	movlb	13	; () banked
 17568  01242E  5130               	movf	48,w,b	;volatile
 17569  012430  0B1F               	andlw	31
 17570  012432  06E8               	decf	wreg,f,c
 17571  012434  A4D8               	btfss	status,2,c
 17572  012436  0012               	return	
 17573                           
 17574                           ; BSR set to: 13
 17575                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 17576                           
 17577                           ; BSR set to: 13
 17578                           
 17579                           ; BSR set to: 13
 17580  012438  010D               	movlb	13	; () banked
 17581  01243A  3930               	swapf	48,w,b	;volatile
 17582  01243C  32E8               	rrcf	wreg,f,c
 17583  01243E  0B03               	andlw	3
 17584  012440  06E8               	decf	wreg,f,c
 17585  012442  A4D8               	btfss	status,2,c
 17586  012444  0012               	return	
 17587                           
 17588                           ; BSR set to: 13
 17589                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 17590                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 17591                           
 17592                           ; BSR set to: 13
 17593                           
 17594                           ; BSR set to: 13
 17595  012446  010D               	movlb	13	; () banked
 17596  012448  5134               	movf	52,w,b	;volatile
 17597  01244A  B4D8               	btfsc	status,2,c
 17598  01244C  D048               	goto	i2l5438
 17599                           
 17600                           ; BSR set to: 13
 17601  01244E  010D               	movlb	13	; () banked
 17602  012450  0534               	decf	52,w,b	;volatile
 17603  012452  A4D8               	btfss	status,2,c
 17604  012454  0012               	return	
 17605  012456  D043               	goto	i2l5438
 17606  012458                     i2l5414:
 17607                           
 17608                           ; BSR set to: 13
 17609                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17610  012458  0E54               	movlw	low _dummy_encapsulated_cmd_response
 17611  01245A  0100               	movlb	0	; () banked
 17612  01245C  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17613  01245E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17614  012460  0100               	movlb	0	; () banked
 17615  012462  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 17619  012464  0E00               	movlw	0
 17620  012466  0100               	movlb	0	; () banked
 17621  012468  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17622  01246A  0E08               	movlw	8
 17623  01246C  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17627  01246E  0100               	movlb	0	; () banked
 17628  012470  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 17632  012472  0100               	movlb	0	; () banked
 17633  012474  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17634                           
 17635                           ;usb_device_cdc.c: 232: break;
 17636  012476  0012               	return	
 17637  012478                     i2l5422:
 17638                           
 17639                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17640  012478  0E54               	movlw	low _dummy_encapsulated_cmd_response
 17641  01247A  0100               	movlb	0	; () banked
 17642  01247C  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17643  01247E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17644  012480  0100               	movlb	0	; () banked
 17645  012482  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 17649  012484  0100               	movlb	0	; () banked
 17650  012486  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17651                           
 17652                           ;usb_device_cdc.c: 237: break;
 17653  012488  0012               	return	
 17654  01248A                     i2l450:
 17655                           
 17656                           ; BSR set to: 13
 17657                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 17658  01248A  CD36 F0CD          	movff	3382,_outPipes+4	;volatile
 17659  01248E  CD37 F0CE          	movff	3383,_outPipes+5	;volatile
 17660                           
 17661                           ; BSR set to: 13
 17662                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 17663  012492  0E84               	movlw	low _line_coding
 17664  012494  0100               	movlb	0	; () banked
 17665  012496  6FC9               	movwf	_outPipes& (0+255),b	;volatile
 17666  012498  0E01               	movlw	high _line_coding
 17667  01249A  0100               	movlb	0	; () banked
 17668  01249C  6FCA               	movwf	(_outPipes+1)& (0+255),b	;volatile
 17669                           
 17670                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 17671  01249E  0E00               	movlw	0
 17672  0124A0  0100               	movlb	0	; () banked
 17673  0124A2  6FCF               	movwf	(_outPipes+6)& (0+255),b	;volatile
 17674  0124A4  0E00               	movlw	0
 17675  0124A6  0100               	movlb	0	; () banked
 17676  0124A8  6FD0               	movwf	(_outPipes+7)& (0+255),b	;volatile
 17677  0124AA  0E00               	movlw	0
 17678  0124AC  0100               	movlb	0	; () banked
 17679  0124AE  6FD1               	movwf	(_outPipes+8)& (0+255),b	;volatile
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 17683  0124B0  0100               	movlb	0	; () banked
 17684  0124B2  8FCC               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 17685                           
 17686                           ;usb_device_cdc.c: 246: break;
 17687  0124B4  0012               	return	
 17688  0124B6                     i2l5430:
 17689                           
 17690                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 17691  0124B6  0E84               	movlw	low _line_coding
 17692  0124B8  0100               	movlb	0	; () banked
 17693  0124BA  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17694  0124BC  0E01               	movlw	high _line_coding
 17695  0124BE  0100               	movlb	0	; () banked
 17696  0124C0  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17697                           
 17698                           ; BSR set to: 0
 17699  0124C2  0E00               	movlw	0
 17700  0124C4  0100               	movlb	0	; () banked
 17701  0124C6  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17702  0124C8  0E07               	movlw	7
 17703  0124CA  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17704                           
 17705                           ; BSR set to: 0
 17706  0124CC  0EC1               	movlw	193
 17707  0124CE  0100               	movlb	0	; () banked
 17708  0124D0  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17709                           
 17710                           ;usb_device_cdc.c: 253: break;
 17711  0124D2  0012               	return	
 17712  0124D4                     i2l452:
 17713                           
 17714                           ; BSR set to: 13
 17715                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 17716  0124D4  CD32 F046          	movff	3378,_control_signal_bitmap	;volatile
 17717                           
 17718                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 17719  0124D8  0100               	movlb	0	; () banked
 17720  0124DA  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17721                           
 17722                           ; BSR set to: 0
 17723                           ;usb_device_cdc.c: 315: }
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;usb_device_cdc.c: 314: break;
 17727                           
 17728                           ;usb_device_cdc.c: 313: default:
 17729                           
 17730                           ;usb_device_cdc.c: 289: break;
 17731  0124DC  0012               	return	
 17732  0124DE                     i2l5438:
 17733  0124DE  010D               	movlb	13	; () banked
 17734  0124E0  5131               	movf	49,w,b	;volatile
 17735                           
 17736                           ; Switch size 1, requested type "space"
 17737                           ; Number of cases is 5, Range of values is 0 to 34
 17738                           ; switch strategies available:
 17739                           ; Name         Instructions Cycles
 17740                           ; simple_byte           16     9 (average)
 17741                           ;	Chosen strategy is simple_byte
 17742  0124E2  0A00               	xorlw	0	; case 0
 17743  0124E4  B4D8               	btfsc	status,2,c
 17744  0124E6  D7B8               	goto	i2l5414
 17745  0124E8  0A01               	xorlw	1	; case 1
 17746  0124EA  B4D8               	btfsc	status,2,c
 17747  0124EC  D7C5               	goto	i2l5422
 17748  0124EE  0A21               	xorlw	33	; case 32
 17749  0124F0  B4D8               	btfsc	status,2,c
 17750  0124F2  D7CB               	goto	i2l450
 17751  0124F4  0A01               	xorlw	1	; case 33
 17752  0124F6  B4D8               	btfsc	status,2,c
 17753  0124F8  D7DE               	goto	i2l5430
 17754  0124FA  0A03               	xorlw	3	; case 34
 17755  0124FC  A4D8               	btfss	status,2,c
 17756  0124FE  0012               	return	
 17757  012500  D7E9               	goto	i2l452
 17758  012502                     __end_of_USBCheckCDCRequest:
 17759                           	opt stack 0
 17760                           pclatu	equ	0xFFB
 17761                           pclath	equ	0xFFA
 17762                           tblptru	equ	0xFF8
 17763                           tblptrh	equ	0xFF7
 17764                           tblptrl	equ	0xFF6
 17765                           tablat	equ	0xFF5
 17766                           prodh	equ	0xFF4
 17767                           prodl	equ	0xFF3
 17768                           intcon	equ	0xFF2
 17769                           intcon2	equ	0xFF1
 17770                           indf0	equ	0xFEF
 17771                           postinc0	equ	0xFEE
 17772                           fsr0h	equ	0xFEA
 17773                           fsr0l	equ	0xFE9
 17774                           wreg	equ	0xFE8
 17775                           indf1	equ	0xFE7
 17776                           postinc1	equ	0xFE6
 17777                           postdec1	equ	0xFE5
 17778                           fsr1h	equ	0xFE2
 17779                           fsr1l	equ	0xFE1
 17780                           indf2	equ	0xFDF
 17781                           postinc2	equ	0xFDE
 17782                           postdec2	equ	0xFDD
 17783                           plusw2	equ	0xFDB
 17784                           fsr2h	equ	0xFDA
 17785                           fsr2l	equ	0xFD9
 17786                           status	equ	0xFD8
 17787                           
 17788 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 17789 ;; Defined at:
 17790 ;;		line 110 in file "../My_library/My_usb_cdc.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;		None
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;		None
 17795 ;; Return value:  Size  Location     Type
 17796 ;;		None               void
 17797 ;; Registers used:
 17798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17799 ;; Tracked objects:
 17800 ;;		On entry : 0/0
 17801 ;;		On exit  : 0/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17808 ;;Total ram usage:        0 bytes
 17809 ;; Hardware stack levels used:    1
 17810 ;; Hardware stack levels required when called:    3
 17811 ;; This function calls:
 17812 ;;		_CDCInitEP
 17813 ;; This function is called by:
 17814 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818                           	psect	text87
 17819  013F80                     __ptext87:
 17820                           	opt stack 0
 17821  013F80                     _APP_DeviceCDCBasicDemoInitialize:
 17822                           	opt stack 14
 17823                           
 17824                           ;My_usb_cdc.c: 111: CDCInitEP();
 17825                           
 17826                           ;incstack = 0
 17827  013F80  EC7D  F09B         	call	_CDCInitEP	;wreg free
 17828                           
 17829                           ;My_usb_cdc.c: 113: line_coding.bCharFormat = 0;
 17830  013F84  0E00               	movlw	0
 17831  013F86  0101               	movlb	1	; () banked
 17832  013F88  6F88               	movwf	(_line_coding+4)& (0+255),b
 17833                           
 17834                           ; BSR set to: 1
 17835                           ;My_usb_cdc.c: 114: line_coding.bDataBits = 8;
 17836  013F8A  0E08               	movlw	8
 17837  013F8C  0101               	movlb	1	; () banked
 17838  013F8E  6F8A               	movwf	(_line_coding+6)& (0+255),b
 17839                           
 17840                           ; BSR set to: 1
 17841                           ;My_usb_cdc.c: 115: line_coding.bParityType = 0;
 17842  013F90  0E00               	movlw	0
 17843  013F92  0101               	movlb	1	; () banked
 17844  013F94  6F89               	movwf	(_line_coding+5)& (0+255),b
 17845                           
 17846                           ; BSR set to: 1
 17847                           ;My_usb_cdc.c: 116: line_coding.dwDTERate = 115200;
 17848  013F96  0E00               	movlw	0
 17849  013F98  0101               	movlb	1	; () banked
 17850  013F9A  6F84               	movwf	_line_coding& (0+255),b
 17851  013F9C  0EC2               	movlw	194
 17852  013F9E  6F85               	movwf	(_line_coding+1)& (0+255),b
 17853  013FA0  0E01               	movlw	1
 17854  013FA2  6F86               	movwf	(_line_coding+2)& (0+255),b
 17855  013FA4  0E00               	movlw	0
 17856  013FA6  6F87               	movwf	(_line_coding+3)& (0+255),b
 17857                           
 17858                           ; BSR set to: 1
 17859  013FA8  0012               	return		;funcret
 17860  013FAA                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 17861                           	opt stack 0
 17862                           pclatu	equ	0xFFB
 17863                           pclath	equ	0xFFA
 17864                           tblptru	equ	0xFF8
 17865                           tblptrh	equ	0xFF7
 17866                           tblptrl	equ	0xFF6
 17867                           tablat	equ	0xFF5
 17868                           prodh	equ	0xFF4
 17869                           prodl	equ	0xFF3
 17870                           intcon	equ	0xFF2
 17871                           intcon2	equ	0xFF1
 17872                           indf0	equ	0xFEF
 17873                           postinc0	equ	0xFEE
 17874                           fsr0h	equ	0xFEA
 17875                           fsr0l	equ	0xFE9
 17876                           wreg	equ	0xFE8
 17877                           indf1	equ	0xFE7
 17878                           postinc1	equ	0xFE6
 17879                           postdec1	equ	0xFE5
 17880                           fsr1h	equ	0xFE2
 17881                           fsr1l	equ	0xFE1
 17882                           indf2	equ	0xFDF
 17883                           postinc2	equ	0xFDE
 17884                           postdec2	equ	0xFDD
 17885                           plusw2	equ	0xFDB
 17886                           fsr2h	equ	0xFDA
 17887                           fsr2l	equ	0xFD9
 17888                           status	equ	0xFD8
 17889                           
 17890 ;; *************** function _CDCInitEP *****************
 17891 ;; Defined at:
 17892 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 17893 ;; Parameters:    Size  Location     Type
 17894 ;;		None
 17895 ;; Auto vars:     Size  Location     Type
 17896 ;;		None
 17897 ;; Return value:  Size  Location     Type
 17898 ;;		None               void
 17899 ;; Registers used:
 17900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17901 ;; Tracked objects:
 17902 ;;		On entry : 0/0
 17903 ;;		On exit  : 0/0
 17904 ;;		Unchanged: 0/0
 17905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17910 ;;Total ram usage:        0 bytes
 17911 ;; Hardware stack levels used:    1
 17912 ;; Hardware stack levels required when called:    2
 17913 ;; This function calls:
 17914 ;;		_USBEnableEndpoint
 17915 ;;		i2_USBTransferOnePacket
 17916 ;; This function is called by:
 17917 ;;		_APP_DeviceCDCBasicDemoInitialize
 17918 ;; This function uses a non-reentrant model
 17919 ;;
 17920                           
 17921                           	psect	text88
 17922  0136FA                     __ptext88:
 17923                           	opt stack 0
 17924  0136FA                     _CDCInitEP:
 17925                           	opt stack 14
 17926                           
 17927                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 17928                           
 17929                           ; BSR set to: 1
 17930                           ;incstack = 0
 17931  0136FA  0E00               	movlw	0
 17932  0136FC  0101               	movlb	1	; () banked
 17933  0136FE  6F84               	movwf	_line_coding& (0+255),b
 17934  013700  0E4B               	movlw	75
 17935  013702  6F85               	movwf	(_line_coding+1)& (0+255),b
 17936  013704  0E00               	movlw	0
 17937  013706  6F86               	movwf	(_line_coding+2)& (0+255),b
 17938  013708  0E00               	movlw	0
 17939  01370A  6F87               	movwf	(_line_coding+3)& (0+255),b
 17940                           
 17941                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 17942  01370C  0E00               	movlw	0
 17943  01370E  0101               	movlb	1	; () banked
 17944  013710  6F88               	movwf	(_line_coding+4)& (0+255),b
 17945                           
 17946                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 17947  013712  0E00               	movlw	0
 17948  013714  0101               	movlb	1	; () banked
 17949  013716  6F89               	movwf	(_line_coding+5)& (0+255),b
 17950                           
 17951                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 17952  013718  0E08               	movlw	8
 17953  01371A  0101               	movlb	1	; () banked
 17954  01371C  6F8A               	movwf	(_line_coding+6)& (0+255),b
 17955                           
 17956                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 17957  01371E  0E00               	movlw	0
 17958  013720  0100               	movlb	0	; () banked
 17959  013722  6FF7               	movwf	_cdc_rx_len& (0+255),b
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 17963  013724  0E1A               	movlw	26
 17964  013726  6E09               	movwf	USBEnableEndpoint@options,c
 17965  013728  0E01               	movlw	1
 17966  01372A  EC65  F09E         	call	_USBEnableEndpoint
 17967                           
 17968                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 17969  01372E  0E1E               	movlw	30
 17970  013730  6E09               	movwf	USBEnableEndpoint@options,c
 17971  013732  0E02               	movlw	2
 17972  013734  EC65  F09E         	call	_USBEnableEndpoint
 17973                           
 17974                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17975  013738  0E00               	movlw	0
 17976  01373A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 17977  01373C  0E00               	movlw	low _cdc_data_rx
 17978  01373E  6E02               	movwf	i2USBTransferOnePacket@data,c
 17979  013740  0E02               	movlw	high _cdc_data_rx
 17980  013742  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 17981  013744  0E40               	movlw	64
 17982  013746  6E04               	movwf	i2USBTransferOnePacket@len,c
 17983  013748  0E02               	movlw	2
 17984  01374A  EC25  F097         	call	i2_USBTransferOnePacket
 17985  01374E  C001  F0F2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 17986  013752  C002  F0F3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17987                           
 17988                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 17989  013756  0E00               	movlw	0
 17990  013758  0100               	movlb	0	; () banked
 17991  01375A  6FF0               	movwf	_CDCDataInHandle& (0+255),b
 17992  01375C  0E00               	movlw	0
 17993  01375E  0100               	movlb	0	; () banked
 17994  013760  6FF1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 17995                           
 17996                           ; BSR set to: 0
 17997                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 17998  013762  0E00               	movlw	0
 17999  013764  6E44               	movwf	_cdc_trf_state,c
 18000                           
 18001                           ; BSR set to: 0
 18002  013766  0012               	return		;funcret
 18003  013768                     __end_of_CDCInitEP:
 18004                           	opt stack 0
 18005                           pclatu	equ	0xFFB
 18006                           pclath	equ	0xFFA
 18007                           tblptru	equ	0xFF8
 18008                           tblptrh	equ	0xFF7
 18009                           tblptrl	equ	0xFF6
 18010                           tablat	equ	0xFF5
 18011                           prodh	equ	0xFF4
 18012                           prodl	equ	0xFF3
 18013                           intcon	equ	0xFF2
 18014                           intcon2	equ	0xFF1
 18015                           indf0	equ	0xFEF
 18016                           postinc0	equ	0xFEE
 18017                           fsr0h	equ	0xFEA
 18018                           fsr0l	equ	0xFE9
 18019                           wreg	equ	0xFE8
 18020                           indf1	equ	0xFE7
 18021                           postinc1	equ	0xFE6
 18022                           postdec1	equ	0xFE5
 18023                           fsr1h	equ	0xFE2
 18024                           fsr1l	equ	0xFE1
 18025                           indf2	equ	0xFDF
 18026                           postinc2	equ	0xFDE
 18027                           postdec2	equ	0xFDD
 18028                           plusw2	equ	0xFDB
 18029                           fsr2h	equ	0xFDA
 18030                           fsr2l	equ	0xFD9
 18031                           status	equ	0xFD8
 18032                           
 18033 ;; *************** function i2_USBTransferOnePacket *****************
 18034 ;; Defined at:
 18035 ;;		line 996 in file "../My_library/usb/usb_device.c"
 18036 ;; Parameters:    Size  Location     Type
 18037 ;;  ep              1    wreg     unsigned char 
 18038 ;;  dir             1    0[COMRAM] unsigned char 
 18039 ;;  data            2    1[COMRAM] PTR unsigned char 
 18040 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18041 ;;  len             1    3[COMRAM] unsigned char 
 18042 ;; Auto vars:     Size  Location     Type
 18043 ;;  ep              1    4[COMRAM] unsigned char 
 18044 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18045 ;;		 -> NULL(0), BDT(48), 
 18046 ;; Return value:  Size  Location     Type
 18047 ;;                  2    0[COMRAM] PTR void 
 18048 ;; Registers used:
 18049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18050 ;; Tracked objects:
 18051 ;;		On entry : 0/0
 18052 ;;		On exit  : 0/0
 18053 ;;		Unchanged: 0/0
 18054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18056 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18058 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18059 ;;Total ram usage:        7 bytes
 18060 ;; Hardware stack levels used:    1
 18061 ;; This function calls:
 18062 ;;		Nothing
 18063 ;; This function is called by:
 18064 ;;		_CDCInitEP
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           
 18068                           	psect	text89
 18069  012E4A                     __ptext89:
 18070                           	opt stack 0
 18071  012E4A                     i2_USBTransferOnePacket:
 18072                           	opt stack 15
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;incstack = 0
 18076                           ;i2USBTransferOnePacket@ep stored from wreg
 18077  012E4A  6E05               	movwf	i2USBTransferOnePacket@ep,c
 18078                           
 18079                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 18080                           ;usb_device.c: 1001: if(dir != 0)
 18081  012E4C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 18082  012E4E  B4D8               	btfsc	status,2,c
 18083  012E50  D007               	goto	i2l5326
 18084                           
 18085                           ;usb_device.c: 1002: {
 18086                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 18087  012E52  5005               	movf	i2USBTransferOnePacket@ep,w,c
 18088  012E54  0D02               	mullw	2
 18089  012E56  0ED8               	movlw	low _pBDTEntryIn
 18090  012E58  24F3               	addwf	prodl,w,c
 18091  012E5A  6ED9               	movwf	fsr2l,c
 18092  012E5C  0E00               	movlw	high _pBDTEntryIn
 18093  012E5E  D006               	goto	L11
 18094  012E60                     i2l5326:
 18095                           
 18096                           ;usb_device.c: 1006: else
 18097                           ;usb_device.c: 1007: {
 18098                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 18099  012E60  5005               	movf	i2USBTransferOnePacket@ep,w,c
 18100  012E62  0D02               	mullw	2
 18101  012E64  0EDE               	movlw	low _pBDTEntryOut
 18102  012E66  24F3               	addwf	prodl,w,c
 18103  012E68  6ED9               	movwf	fsr2l,c
 18104  012E6A  0E00               	movlw	high _pBDTEntryOut
 18105  012E6C                     L11:
 18106  012E6C  20F4               	addwfc	prodh,w,c
 18107  012E6E  6EDA               	movwf	fsr2h,c
 18108  012E70  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 18109  012E74  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18110                           
 18111                           ;usb_device.c: 1010: }
 18112                           ;usb_device.c: 1014: if(handle == 0)
 18113  012E78  5006               	movf	i2USBTransferOnePacket@handle,w,c
 18114  012E7A  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18115  012E7C  A4D8               	btfss	status,2,c
 18116  012E7E  D005               	goto	i2l5334
 18117                           
 18118                           ;usb_device.c: 1015: {
 18119                           ;usb_device.c: 1016: return 0;
 18120  012E80  0E00               	movlw	0
 18121  012E82  6E01               	movwf	?i2_USBTransferOnePacket,c
 18122  012E84  0E00               	movlw	0
 18123  012E86  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 18124  012E88  0012               	return	
 18125  012E8A                     i2l5334:
 18126                           
 18127                           ;usb_device.c: 1017: }
 18128                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 18129  012E8A  EE20 F002          	lfsr	2,2
 18130  012E8E  5006               	movf	i2USBTransferOnePacket@handle,w,c
 18131  012E90  26D9               	addwf	fsr2l,f,c
 18132  012E92  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 18133  012E94  22DA               	addwfc	fsr2h,f,c
 18134  012E96  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18135  012E9A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18136                           
 18137                           ;usb_device.c: 1031: handle->CNT = len;
 18138  012E9E  EE20 F001          	lfsr	2,1
 18139  012EA2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 18140  012EA4  26D9               	addwf	fsr2l,f,c
 18141  012EA6  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 18142  012EA8  22DA               	addwfc	fsr2h,f,c
 18143  012EAA  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18144                           
 18145                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 18146  012EAE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18147  012EB2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18148  012EB6  0E40               	movlw	64
 18149  012EB8  16DF               	andwf	indf2,f,c
 18150                           
 18151                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 18152  012EBA  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18153  012EBE  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18154  012EC2  0E00               	movlw	0
 18155  012EC4  86DB               	bsf	plusw2,3,c
 18156                           
 18157                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 18158  012EC6  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18159  012ECA  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18160  012ECE  0E00               	movlw	0
 18161  012ED0  8EDB               	bsf	plusw2,7,c
 18162                           
 18163                           ;usb_device.c: 1037: if(dir != 0)
 18164  012ED2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 18165  012ED4  B4D8               	btfsc	status,2,c
 18166  012ED6  D007               	goto	i2l5346
 18167                           
 18168                           ;usb_device.c: 1038: {
 18169                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18170  012ED8  5005               	movf	i2USBTransferOnePacket@ep,w,c
 18171  012EDA  0D02               	mullw	2
 18172  012EDC  0ED8               	movlw	low _pBDTEntryIn
 18173  012EDE  24F3               	addwf	prodl,w,c
 18174  012EE0  6ED9               	movwf	fsr2l,c
 18175  012EE2  0E00               	movlw	high _pBDTEntryIn
 18176  012EE4  D006               	goto	L12
 18177  012EE6                     i2l5346:
 18178                           
 18179                           ;usb_device.c: 1042: else
 18180                           ;usb_device.c: 1043: {
 18181                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18182  012EE6  5005               	movf	i2USBTransferOnePacket@ep,w,c
 18183  012EE8  0D02               	mullw	2
 18184  012EEA  0EDE               	movlw	low _pBDTEntryOut
 18185  012EEC  24F3               	addwf	prodl,w,c
 18186  012EEE  6ED9               	movwf	fsr2l,c
 18187  012EF0  0E00               	movlw	high _pBDTEntryOut
 18188  012EF2                     L12:
 18189  012EF2  20F4               	addwfc	prodh,w,c
 18190  012EF4  6EDA               	movwf	fsr2h,c
 18191  012EF6  0E04               	movlw	4
 18192  012EF8  1ADF               	xorwf	indf2,f,c
 18193                           
 18194                           ;usb_device.c: 1046: }
 18195                           ;usb_device.c: 1047: return (void*)handle;
 18196  012EFA  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18197  012EFE  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18198  012F02  0012               	return	
 18199  012F04                     __end_ofi2_USBTransferOnePacket:
 18200                           	opt stack 0
 18201                           pclatu	equ	0xFFB
 18202                           pclath	equ	0xFFA
 18203                           tblptru	equ	0xFF8
 18204                           tblptrh	equ	0xFF7
 18205                           tblptrl	equ	0xFF6
 18206                           tablat	equ	0xFF5
 18207                           prodh	equ	0xFF4
 18208                           prodl	equ	0xFF3
 18209                           intcon	equ	0xFF2
 18210                           intcon2	equ	0xFF1
 18211                           indf0	equ	0xFEF
 18212                           postinc0	equ	0xFEE
 18213                           fsr0h	equ	0xFEA
 18214                           fsr0l	equ	0xFE9
 18215                           wreg	equ	0xFE8
 18216                           indf1	equ	0xFE7
 18217                           postinc1	equ	0xFE6
 18218                           postdec1	equ	0xFE5
 18219                           fsr1h	equ	0xFE2
 18220                           fsr1l	equ	0xFE1
 18221                           indf2	equ	0xFDF
 18222                           postinc2	equ	0xFDE
 18223                           postdec2	equ	0xFDD
 18224                           plusw2	equ	0xFDB
 18225                           fsr2h	equ	0xFDA
 18226                           fsr2l	equ	0xFD9
 18227                           status	equ	0xFD8
 18228                           
 18229 ;; *************** function _USBEnableEndpoint *****************
 18230 ;; Defined at:
 18231 ;;		line 879 in file "../My_library/usb/usb_device.c"
 18232 ;; Parameters:    Size  Location     Type
 18233 ;;  ep              1    wreg     unsigned char 
 18234 ;;  options         1    8[COMRAM] unsigned char 
 18235 ;; Auto vars:     Size  Location     Type
 18236 ;;  ep              1   11[COMRAM] unsigned char 
 18237 ;;  p               2    9[COMRAM] PTR unsigned char 
 18238 ;;		 -> UEP0(1), 
 18239 ;; Return value:  Size  Location     Type
 18240 ;;		None               void
 18241 ;; Registers used:
 18242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18243 ;; Tracked objects:
 18244 ;;		On entry : 0/0
 18245 ;;		On exit  : 0/0
 18246 ;;		Unchanged: 0/0
 18247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18248 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18249 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18252 ;;Total ram usage:        4 bytes
 18253 ;; Hardware stack levels used:    1
 18254 ;; Hardware stack levels required when called:    1
 18255 ;; This function calls:
 18256 ;;		_USBConfigureEndpoint
 18257 ;; This function is called by:
 18258 ;;		_CDCInitEP
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262                           	psect	text90
 18263  013CCA                     __ptext90:
 18264                           	opt stack 0
 18265  013CCA                     _USBEnableEndpoint:
 18266                           	opt stack 14
 18267                           
 18268                           ;incstack = 0
 18269                           ;USBEnableEndpoint@ep stored from wreg
 18270  013CCA  6E0C               	movwf	USBEnableEndpoint@ep,c
 18271                           
 18272                           ;usb_device.c: 881: unsigned char* p;
 18273                           ;usb_device.c: 885: if(options & 0x04)
 18274  013CCC  A409               	btfss	USBEnableEndpoint@options,2,c
 18275  013CCE  D005               	goto	i2l5314
 18276                           
 18277                           ;usb_device.c: 886: {
 18278                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 18279  013CD0  0E00               	movlw	0
 18280  013CD2  6E01               	movwf	USBConfigureEndpoint@direction,c
 18281  013CD4  500C               	movf	USBEnableEndpoint@ep,w,c
 18282  013CD6  EC27  F099         	call	_USBConfigureEndpoint
 18283  013CDA                     i2l5314:
 18284                           
 18285                           ;usb_device.c: 888: }
 18286                           ;usb_device.c: 889: if(options & 0x02)
 18287  013CDA  A209               	btfss	USBEnableEndpoint@options,1,c
 18288  013CDC  D005               	goto	i2l5318
 18289                           
 18290                           ;usb_device.c: 890: {
 18291                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 18292  013CDE  0E01               	movlw	1
 18293  013CE0  6E01               	movwf	USBConfigureEndpoint@direction,c
 18294  013CE2  500C               	movf	USBEnableEndpoint@ep,w,c
 18295  013CE4  EC27  F099         	call	_USBConfigureEndpoint
 18296  013CE8                     i2l5318:
 18297                           
 18298                           ;usb_device.c: 892: }
 18299                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 18300  013CE8  500C               	movf	USBEnableEndpoint@ep,w,c
 18301  013CEA  0D01               	mullw	1
 18302  013CEC  0E26               	movlw	38
 18303  013CEE  24F3               	addwf	prodl,w,c
 18304  013CF0  6E0A               	movwf	USBEnableEndpoint@p,c
 18305  013CF2  0E0F               	movlw	15
 18306  013CF4  20F4               	addwfc	prodh,w,c
 18307  013CF6  6E0B               	movwf	USBEnableEndpoint@p+1,c
 18308                           
 18309                           ;usb_device.c: 902: *p = options;
 18310  013CF8  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18311  013CFC  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18312  013D00  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 18313  013D04  0012               	return		;funcret
 18314  013D06                     __end_of_USBEnableEndpoint:
 18315                           	opt stack 0
 18316                           pclatu	equ	0xFFB
 18317                           pclath	equ	0xFFA
 18318                           tblptru	equ	0xFF8
 18319                           tblptrh	equ	0xFF7
 18320                           tblptrl	equ	0xFF6
 18321                           tablat	equ	0xFF5
 18322                           prodh	equ	0xFF4
 18323                           prodl	equ	0xFF3
 18324                           intcon	equ	0xFF2
 18325                           intcon2	equ	0xFF1
 18326                           indf0	equ	0xFEF
 18327                           postinc0	equ	0xFEE
 18328                           fsr0h	equ	0xFEA
 18329                           fsr0l	equ	0xFE9
 18330                           wreg	equ	0xFE8
 18331                           indf1	equ	0xFE7
 18332                           postinc1	equ	0xFE6
 18333                           postdec1	equ	0xFE5
 18334                           fsr1h	equ	0xFE2
 18335                           fsr1l	equ	0xFE1
 18336                           indf2	equ	0xFDF
 18337                           postinc2	equ	0xFDE
 18338                           postdec2	equ	0xFDD
 18339                           plusw2	equ	0xFDB
 18340                           fsr2h	equ	0xFDA
 18341                           fsr2l	equ	0xFD9
 18342                           status	equ	0xFD8
 18343                           
 18344 ;; *************** function _USBConfigureEndpoint *****************
 18345 ;; Defined at:
 18346 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 18347 ;; Parameters:    Size  Location     Type
 18348 ;;  EPNum           1    wreg     unsigned char 
 18349 ;;  direction       1    0[COMRAM] unsigned char 
 18350 ;; Auto vars:     Size  Location     Type
 18351 ;;  EPNum           1    5[COMRAM] unsigned char 
 18352 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18353 ;;		 -> BDT(48), 
 18354 ;; Return value:  Size  Location     Type
 18355 ;;		None               void
 18356 ;; Registers used:
 18357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18358 ;; Tracked objects:
 18359 ;;		On entry : 0/0
 18360 ;;		On exit  : 0/0
 18361 ;;		Unchanged: 0/0
 18362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18366 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18367 ;;Total ram usage:        8 bytes
 18368 ;; Hardware stack levels used:    1
 18369 ;; This function calls:
 18370 ;;		Nothing
 18371 ;; This function is called by:
 18372 ;;		_USBEnableEndpoint
 18373 ;; This function uses a non-reentrant model
 18374 ;;
 18375                           
 18376                           	psect	text91
 18377  01324E                     __ptext91:
 18378                           	opt stack 0
 18379  01324E                     _USBConfigureEndpoint:
 18380                           	opt stack 14
 18381                           
 18382                           ;incstack = 0
 18383                           ;USBConfigureEndpoint@EPNum stored from wreg
 18384  01324E  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 18385                           
 18386                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 18387                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 18388  013250  0E00               	movlw	0
 18389  013252  6E07               	movwf	USBConfigureEndpoint@handle,c
 18390  013254  0E0D               	movlw	13
 18391  013256  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 18392                           
 18393                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 18394  013258  5001               	movf	USBConfigureEndpoint@direction,w,c
 18395  01325A  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 18396  01325C  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18397  01325E  90D8               	bcf	status,0,c
 18398  013260  3602               	rlcf	??_USBConfigureEndpoint,f,c
 18399  013262  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 18400  013264  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 18401  013266  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18402  013268  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18403  01326A  90D8               	bcf	status,0,c
 18404  01326C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18405  01326E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18406  013270  90D8               	bcf	status,0,c
 18407  013272  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18408  013274  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18409  013276  5002               	movf	??_USBConfigureEndpoint,w,c
 18410  013278  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 18411  01327A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 18412  01327C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 18413  01327E  90D8               	bcf	status,0,c
 18414  013280  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18415  013282  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18416  013284  90D8               	bcf	status,0,c
 18417  013286  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18418  013288  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18419  01328A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 18420  01328C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 18421  01328E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 18422  013290  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18423                           
 18424                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 18425  013292  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18426  013296  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18427  01329A  9EDF               	bcf	indf2,7,c
 18428                           
 18429                           ;usb_device.c: 1558: if(direction == 0)
 18430  01329C  5001               	movf	USBConfigureEndpoint@direction,w,c
 18431  01329E  A4D8               	btfss	status,2,c
 18432  0132A0  D007               	goto	i2l5304
 18433                           
 18434                           ;usb_device.c: 1559: {
 18435                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 18436  0132A2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 18437  0132A4  0D02               	mullw	2
 18438  0132A6  0EDE               	movlw	low _pBDTEntryOut
 18439  0132A8  24F3               	addwf	prodl,w,c
 18440  0132AA  6ED9               	movwf	fsr2l,c
 18441  0132AC  0E00               	movlw	high _pBDTEntryOut
 18442  0132AE  D006               	goto	L13
 18443  0132B0                     i2l5304:
 18444                           
 18445                           ;usb_device.c: 1562: else
 18446                           ;usb_device.c: 1563: {
 18447                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 18448  0132B0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 18449  0132B2  0D02               	mullw	2
 18450  0132B4  0ED8               	movlw	low _pBDTEntryIn
 18451  0132B6  24F3               	addwf	prodl,w,c
 18452  0132B8  6ED9               	movwf	fsr2l,c
 18453  0132BA  0E00               	movlw	high _pBDTEntryIn
 18454  0132BC                     L13:
 18455  0132BC  20F4               	addwfc	prodh,w,c
 18456  0132BE  6EDA               	movwf	fsr2h,c
 18457  0132C0  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 18458  0132C4  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 18459                           
 18460                           ;usb_device.c: 1565: }
 18461                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 18462  0132C8  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18463  0132CC  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18464  0132D0  9CDF               	bcf	indf2,6,c
 18465                           
 18466                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 18467  0132D2  EE20 F004          	lfsr	2,4
 18468  0132D6  5007               	movf	USBConfigureEndpoint@handle,w,c
 18469  0132D8  26D9               	addwf	fsr2l,f,c
 18470  0132DA  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 18471  0132DC  22DA               	addwfc	fsr2h,f,c
 18472  0132DE  8CDF               	bsf	indf2,6,c
 18473  0132E0  0012               	return		;funcret
 18474  0132E2                     __end_of_USBConfigureEndpoint:
 18475                           	opt stack 0
 18476                           pclatu	equ	0xFFB
 18477                           pclath	equ	0xFFA
 18478                           tblptru	equ	0xFF8
 18479                           tblptrh	equ	0xFF7
 18480                           tblptrl	equ	0xFF6
 18481                           tablat	equ	0xFF5
 18482                           prodh	equ	0xFF4
 18483                           prodl	equ	0xFF3
 18484                           intcon	equ	0xFF2
 18485                           intcon2	equ	0xFF1
 18486                           indf0	equ	0xFEF
 18487                           postinc0	equ	0xFEE
 18488                           fsr0h	equ	0xFEA
 18489                           fsr0l	equ	0xFE9
 18490                           wreg	equ	0xFE8
 18491                           indf1	equ	0xFE7
 18492                           postinc1	equ	0xFE6
 18493                           postdec1	equ	0xFE5
 18494                           fsr1h	equ	0xFE2
 18495                           fsr1l	equ	0xFE1
 18496                           indf2	equ	0xFDF
 18497                           postinc2	equ	0xFDE
 18498                           postdec2	equ	0xFDD
 18499                           plusw2	equ	0xFDB
 18500                           fsr2h	equ	0xFDA
 18501                           fsr2l	equ	0xFD9
 18502                           status	equ	0xFD8
 18503                           
 18504 ;; *************** function _USBCtrlTrfOutHandler *****************
 18505 ;; Defined at:
 18506 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 18507 ;; Parameters:    Size  Location     Type
 18508 ;;		None
 18509 ;; Auto vars:     Size  Location     Type
 18510 ;;		None
 18511 ;; Return value:  Size  Location     Type
 18512 ;;		None               void
 18513 ;; Registers used:
 18514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18515 ;; Tracked objects:
 18516 ;;		On entry : 0/0
 18517 ;;		On exit  : 0/0
 18518 ;;		Unchanged: 0/0
 18519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18524 ;;Total ram usage:        0 bytes
 18525 ;; Hardware stack levels used:    1
 18526 ;; Hardware stack levels required when called:    2
 18527 ;; This function calls:
 18528 ;;		_USBCtrlTrfRxService
 18529 ;; This function is called by:
 18530 ;;		_USBCtrlEPService
 18531 ;; This function uses a non-reentrant model
 18532 ;;
 18533                           
 18534                           	psect	text92
 18535  013A1C                     __ptext92:
 18536                           	opt stack 0
 18537  013A1C                     _USBCtrlTrfOutHandler:
 18538                           	opt stack 15
 18539                           
 18540                           ;usb_device.c: 2544: if(controlTransferState == 2)
 18541                           
 18542                           ;incstack = 0
 18543  013A1C  0E02               	movlw	2
 18544  013A1E  1845               	xorwf	_controlTransferState,w,c	;volatile
 18545  013A20  A4D8               	btfss	status,2,c
 18546  013A22  D003               	goto	i2l6456
 18547                           
 18548                           ;usb_device.c: 2545: {
 18549                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 18550  013A24  EC94  F08C         	call	_USBCtrlTrfRxService	;wreg free
 18551                           
 18552                           ;usb_device.c: 2547: }
 18553  013A28  0012               	return	
 18554  013A2A                     i2l6456:
 18555                           
 18556                           ;usb_device.c: 2548: else
 18557                           ;usb_device.c: 2549: {
 18558                           ;usb_device.c: 2552: controlTransferState = 0;
 18559  013A2A  0E00               	movlw	0
 18560  013A2C  6E45               	movwf	_controlTransferState,c	;volatile
 18561                           
 18562                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 18563  013A2E  5038               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 18564  013A30  A4D8               	btfss	status,2,c
 18565  013A32  D01F               	goto	i2l6464
 18566                           
 18567                           ;usb_device.c: 2560: {
 18568                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 18569  013A34  EE20 F001          	lfsr	2,1
 18570  013A38  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18571  013A3A  26D9               	addwf	fsr2l,f,c
 18572  013A3C  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18573  013A3E  22DA               	addwfc	fsr2h,f,c
 18574  013A40  0E08               	movlw	8
 18575  013A42  6EDF               	movwf	indf2,c
 18576                           
 18577                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18578  013A44  EE20 F002          	lfsr	2,2
 18579  013A48  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18580  013A4A  26D9               	addwf	fsr2l,f,c
 18581  013A4C  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18582  013A4E  22DA               	addwfc	fsr2h,f,c
 18583  013A50  0E30               	movlw	48
 18584  013A52  6EDE               	movwf	postinc2,c
 18585  013A54  0E0D               	movlw	13
 18586  013A56  6EDD               	movwf	postdec2,c
 18587                           
 18588                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18589  013A58  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18590  013A5C  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18591  013A60  0E0C               	movlw	12
 18592  013A62  6EDF               	movwf	indf2,c
 18593                           
 18594                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18595  013A64  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18596  013A68  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18597  013A6C  0E00               	movlw	0
 18598  013A6E  8EDB               	bsf	plusw2,7,c
 18599                           
 18600                           ;usb_device.c: 2565: }
 18601  013A70  0012               	return	
 18602  013A72                     i2l6464:
 18603                           
 18604                           ;usb_device.c: 2566: else
 18605                           ;usb_device.c: 2567: {
 18606                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 18607  013A72  0E00               	movlw	0
 18608  013A74  6E38               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18609  013A76  0012               	return	
 18610  013A78                     __end_of_USBCtrlTrfOutHandler:
 18611                           	opt stack 0
 18612                           pclatu	equ	0xFFB
 18613                           pclath	equ	0xFFA
 18614                           tblptru	equ	0xFF8
 18615                           tblptrh	equ	0xFF7
 18616                           tblptrl	equ	0xFF6
 18617                           tablat	equ	0xFF5
 18618                           prodh	equ	0xFF4
 18619                           prodl	equ	0xFF3
 18620                           intcon	equ	0xFF2
 18621                           intcon2	equ	0xFF1
 18622                           indf0	equ	0xFEF
 18623                           postinc0	equ	0xFEE
 18624                           fsr0h	equ	0xFEA
 18625                           fsr0l	equ	0xFE9
 18626                           wreg	equ	0xFE8
 18627                           indf1	equ	0xFE7
 18628                           postinc1	equ	0xFE6
 18629                           postdec1	equ	0xFE5
 18630                           fsr1h	equ	0xFE2
 18631                           fsr1l	equ	0xFE1
 18632                           indf2	equ	0xFDF
 18633                           postinc2	equ	0xFDE
 18634                           postdec2	equ	0xFDD
 18635                           plusw2	equ	0xFDB
 18636                           fsr2h	equ	0xFDA
 18637                           fsr2l	equ	0xFD9
 18638                           status	equ	0xFD8
 18639                           
 18640 ;; *************** function _USBCtrlTrfRxService *****************
 18641 ;; Defined at:
 18642 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 18643 ;; Parameters:    Size  Location     Type
 18644 ;;		None
 18645 ;; Auto vars:     Size  Location     Type
 18646 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18647 ;;  i               1    0[COMRAM] unsigned char 
 18648 ;; Return value:  Size  Location     Type
 18649 ;;		None               void
 18650 ;; Registers used:
 18651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18652 ;; Tracked objects:
 18653 ;;		On entry : 0/0
 18654 ;;		On exit  : 0/0
 18655 ;;		Unchanged: 0/0
 18656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18661 ;;Total ram usage:        2 bytes
 18662 ;; Hardware stack levels used:    1
 18663 ;; Hardware stack levels required when called:    1
 18664 ;; This function calls:
 18665 ;;		_USBCtrlEPAllowStatusStage
 18666 ;; This function is called by:
 18667 ;;		_USBCtrlTrfOutHandler
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text93
 18672  011928                     __ptext93:
 18673                           	opt stack 0
 18674  011928                     _USBCtrlTrfRxService:
 18675                           	opt stack 15
 18676                           
 18677                           ;usb_device.c: 1855: uint8_t byteToRead;
 18678                           ;usb_device.c: 1856: uint8_t i;
 18679                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18680                           
 18681                           ;incstack = 0
 18682  011928  EE20 F001          	lfsr	2,1
 18683  01192C  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18684  01192E  26D9               	addwf	fsr2l,f,c
 18685  011930  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18686  011932  22DA               	addwfc	fsr2h,f,c
 18687  011934  50DF               	movf	indf2,w,c
 18688  011936  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 18689                           
 18690                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 18691  011938  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18692  01193A  0100               	movlb	0	; () banked
 18693  01193C  5DCD               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 18694  01193E  0E00               	movlw	0
 18695  011940  59CE               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 18696  011942  A0D8               	btfss	status,0,c
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;usb_device.c: 1867: {
 18700                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 18701  011944  C0CD  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;usb_device.c: 1869: }
 18705                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 18706                           
 18707                           ; BSR set to: 0
 18708  011948  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18709  01194A  0100               	movlb	0	; () banked
 18710  01194C  5FCD               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 18711  01194E  0E00               	movlw	0
 18712  011950  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 18716  011952  0E00               	movlw	0
 18717  011954  6E01               	movwf	USBCtrlTrfRxService@i,c
 18718  011956  D012               	goto	i2l6286
 18719  011958                     i2l6280:
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;usb_device.c: 1876: {
 18723                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18724  011958  5001               	movf	USBCtrlTrfRxService@i,w,c
 18725  01195A  0D01               	mullw	1
 18726  01195C  0E38               	movlw	56
 18727  01195E  24F3               	addwf	prodl,w,c
 18728  011960  6ED9               	movwf	fsr2l,c
 18729  011962  0E0D               	movlw	13
 18730  011964  20F4               	addwfc	prodh,w,c
 18731  011966  6EDA               	movwf	fsr2h,c
 18732  011968  C0C9  FFE1         	movff	_outPipes,fsr1l	;volatile
 18733  01196C  C0CA  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 18734  011970  CFDF FFE7          	movff	indf2,indf1
 18735                           
 18736                           ; BSR set to: 0
 18737  011974  0100               	movlb	0	; () banked
 18738  011976  4BC9               	infsnz	_outPipes& (0+255),f,b	;volatile
 18739  011978  2BCA               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 18740                           
 18741                           ; BSR set to: 0
 18742  01197A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 18743  01197C                     i2l6286:
 18744                           
 18745                           ; BSR set to: 0
 18746  01197C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18747  01197E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 18748  011980  A0D8               	btfss	status,0,c
 18749  011982  D7EA               	goto	i2l6280
 18750                           
 18751                           ; BSR set to: 0
 18752                           ;usb_device.c: 1878: }
 18753                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 18754                           
 18755                           ; BSR set to: 0
 18756  011984  0100               	movlb	0	; () banked
 18757  011986  51CD               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 18758  011988  0100               	movlb	0	; () banked
 18759  01198A  11CE               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 18760  01198C  B4D8               	btfsc	status,2,c
 18761  01198E  D032               	goto	i2l6302
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;usb_device.c: 1883: {
 18765                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 18766  011990  EE20 F001          	lfsr	2,1
 18767  011994  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18768  011996  26D9               	addwf	fsr2l,f,c
 18769  011998  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18770  01199A  22DA               	addwfc	fsr2h,f,c
 18771  01199C  0E08               	movlw	8
 18772  01199E  6EDF               	movwf	indf2,c
 18773                           
 18774                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18775  0119A0  EE20 F002          	lfsr	2,2
 18776  0119A4  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18777  0119A6  26D9               	addwf	fsr2l,f,c
 18778  0119A8  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18779  0119AA  22DA               	addwfc	fsr2h,f,c
 18780  0119AC  0E38               	movlw	56
 18781  0119AE  6EDE               	movwf	postinc2,c
 18782  0119B0  0E0D               	movlw	13
 18783  0119B2  6EDD               	movwf	postdec2,c
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18787  0119B4  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18788  0119B8  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18789  0119BC  BCDF               	btfsc	indf2,6,c
 18790  0119BE  D00D               	goto	i2l6298
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;usb_device.c: 1887: {
 18794                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18795  0119C0  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18796  0119C4  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18797  0119C8  0E48               	movlw	72
 18798  0119CA  6EDF               	movwf	indf2,c
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18802  0119CC  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18803  0119D0  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18804  0119D4  0E00               	movlw	0
 18805  0119D6  8EDB               	bsf	plusw2,7,c
 18806                           
 18807                           ;usb_device.c: 1890: }
 18808  0119D8  0012               	return	
 18809  0119DA                     i2l6298:
 18810                           
 18811                           ; BSR set to: 0
 18812                           ;usb_device.c: 1891: else
 18813                           ;usb_device.c: 1892: {
 18814                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 18815  0119DA  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18816  0119DE  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18817  0119E2  0E08               	movlw	8
 18818  0119E4  6EDF               	movwf	indf2,c
 18819                           
 18820                           ; BSR set to: 0
 18821                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18822  0119E6  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18823  0119EA  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18824  0119EE  0E00               	movlw	0
 18825  0119F0  8EDB               	bsf	plusw2,7,c
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;usb_device.c: 1895: }
 18829                           ;usb_device.c: 1896: }
 18830  0119F2  0012               	return	
 18831  0119F4                     i2l6302:
 18832                           
 18833                           ; BSR set to: 0
 18834                           ;usb_device.c: 1897: else
 18835                           ;usb_device.c: 1898: {
 18836                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 18837  0119F4  EE20 F001          	lfsr	2,1
 18838  0119F8  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18839  0119FA  26D9               	addwf	fsr2l,f,c
 18840  0119FC  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18841  0119FE  22DA               	addwfc	fsr2h,f,c
 18842  011A00  0E08               	movlw	8
 18843  011A02  6EDF               	movwf	indf2,c
 18844                           
 18845                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18846  011A04  EE20 F002          	lfsr	2,2
 18847  011A08  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18848  011A0A  26D9               	addwf	fsr2l,f,c
 18849  011A0C  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18850  011A0E  22DA               	addwfc	fsr2h,f,c
 18851  011A10  0E30               	movlw	48
 18852  011A12  6EDE               	movwf	postinc2,c
 18853  011A14  0E0D               	movlw	13
 18854  011A16  6EDD               	movwf	postdec2,c
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18858  011A18  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18859  011A1C  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18860  011A20  0E04               	movlw	4
 18861  011A22  6EDF               	movwf	indf2,c
 18862                           
 18863                           ; BSR set to: 0
 18864                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18865  011A24  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18866  011A28  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18867  011A2C  0E00               	movlw	0
 18868  011A2E  8EDB               	bsf	plusw2,7,c
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;usb_device.c: 1927: }
 18872                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;usb_device.c: 1916: {
 18876                           ;usb_device.c: 1922: outPipes[0].pFunc();
 18877  011A30  0100               	movlb	0	; () banked
 18878  011A32  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18879                           
 18880                           ; BSR set to: 0
 18881                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 18882  011A34  503F               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18883  011A36  A4D8               	btfss	status,2,c
 18884  011A38  0012               	return	
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;usb_device.c: 1943: {
 18888                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 18889  011A3A  EC8B  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18890  011A3E  0012               	return	
 18891  011A40                     __end_of_USBCtrlTrfRxService:
 18892                           	opt stack 0
 18893                           pclatu	equ	0xFFB
 18894                           pclath	equ	0xFFA
 18895                           tblptru	equ	0xFF8
 18896                           tblptrh	equ	0xFF7
 18897                           tblptrl	equ	0xFF6
 18898                           tablat	equ	0xFF5
 18899                           prodh	equ	0xFF4
 18900                           prodl	equ	0xFF3
 18901                           intcon	equ	0xFF2
 18902                           intcon2	equ	0xFF1
 18903                           indf0	equ	0xFEF
 18904                           postinc0	equ	0xFEE
 18905                           fsr0h	equ	0xFEA
 18906                           fsr0l	equ	0xFE9
 18907                           wreg	equ	0xFE8
 18908                           indf1	equ	0xFE7
 18909                           postinc1	equ	0xFE6
 18910                           postdec1	equ	0xFE5
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           indf2	equ	0xFDF
 18914                           postinc2	equ	0xFDE
 18915                           postdec2	equ	0xFDD
 18916                           plusw2	equ	0xFDB
 18917                           fsr2h	equ	0xFDA
 18918                           fsr2l	equ	0xFD9
 18919                           status	equ	0xFD8
 18920                           
 18921 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18922 ;; Defined at:
 18923 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;		None
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;		None               void
 18930 ;; Registers used:
 18931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18941 ;;Total ram usage:        0 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; This function calls:
 18944 ;;		Nothing
 18945 ;; This function is called by:
 18946 ;;		_USBDeviceTasks
 18947 ;;		_USBCtrlEPServiceComplete
 18948 ;;		_USBCtrlTrfRxService
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952                           	psect	text94
 18953  012916                     __ptext94:
 18954                           	opt stack 0
 18955  012916                     _USBCtrlEPAllowStatusStage:
 18956                           	opt stack 15
 18957                           
 18958                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 18959                           
 18960                           ;incstack = 0
 18961  012916  5041               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 18962  012918  A4D8               	btfss	status,2,c
 18963  01291A  0012               	return	
 18964                           
 18965                           ;usb_device.c: 1425: {
 18966                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 18967  01291C  0E01               	movlw	1
 18968  01291E  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18969                           
 18970                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 18971  012920  5042               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 18972  012922  A4D8               	btfss	status,2,c
 18973  012924  0012               	return	
 18974                           
 18975                           ;usb_device.c: 1428: {
 18976                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 18977  012926  0E01               	movlw	1
 18978  012928  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18979                           
 18980                           ;usb_device.c: 1433: if(controlTransferState == 2)
 18981  01292A  0E02               	movlw	2
 18982  01292C  1845               	xorwf	_controlTransferState,w,c	;volatile
 18983  01292E  A4D8               	btfss	status,2,c
 18984  012930  D016               	goto	i2l5752
 18985                           
 18986                           ;usb_device.c: 1434: {
 18987                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 18988  012932  0100               	movlb	0	; () banked
 18989  012934  EE20 F001          	lfsr	2,1
 18990  012938  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18991  01293A  26D9               	addwf	fsr2l,f,c
 18992  01293C  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18993  01293E  22DA               	addwfc	fsr2h,f,c
 18994  012940  0E00               	movlw	0
 18995  012942  6EDF               	movwf	indf2,c
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18999  012944  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19000  012948  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19001  01294C  0E48               	movlw	72
 19002  01294E  6EDF               	movwf	indf2,c
 19003                           
 19004                           ; BSR set to: 0
 19005                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19006  012950  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19007  012954  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19008  012958  0E00               	movlw	0
 19009  01295A  8EDB               	bsf	plusw2,7,c
 19010                           
 19011                           ;usb_device.c: 1438: }
 19012  01295C  0012               	return	
 19013  01295E                     i2l5752:
 19014                           
 19015                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 19016  01295E  0445               	decf	_controlTransferState,w,c	;volatile
 19017  012960  A4D8               	btfss	status,2,c
 19018  012962  0012               	return	
 19019                           
 19020                           ;usb_device.c: 1440: {
 19021                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 19022  012964  0E00               	movlw	0
 19023  012966  6E38               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19024                           
 19025                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 19026  012968  EE20 F001          	lfsr	2,1
 19027  01296C  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 19028  01296E  26D9               	addwf	fsr2l,f,c
 19029  012970  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19030  012972  22DA               	addwfc	fsr2h,f,c
 19031  012974  0E08               	movlw	8
 19032  012976  6EDF               	movwf	indf2,c
 19033                           
 19034                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19035  012978  EE20 F002          	lfsr	2,2
 19036  01297C  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 19037  01297E  26D9               	addwf	fsr2l,f,c
 19038  012980  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19039  012982  22DA               	addwfc	fsr2h,f,c
 19040  012984  0E30               	movlw	48
 19041  012986  6EDE               	movwf	postinc2,c
 19042  012988  0E0D               	movlw	13
 19043  01298A  6EDD               	movwf	postdec2,c
 19044                           
 19045                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19046  01298C  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19047  012990  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19048  012994  0E04               	movlw	4
 19049  012996  6EDF               	movwf	indf2,c
 19050                           
 19051                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19052  012998  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19053  01299C  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19054  0129A0  0E00               	movlw	0
 19055  0129A2  8EDB               	bsf	plusw2,7,c
 19056                           
 19057                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 19058  0129A4  0E01               	movlw	1
 19059  0129A6  6E38               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19060                           
 19061                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 19062  0129A8  EE20 F001          	lfsr	2,1
 19063  0129AC  5031               	movf	_pBDTEntryEP0OutNext,w,c
 19064  0129AE  26D9               	addwf	fsr2l,f,c
 19065  0129B0  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 19066  0129B2  22DA               	addwfc	fsr2h,f,c
 19067  0129B4  0E08               	movlw	8
 19068  0129B6  6EDF               	movwf	indf2,c
 19069                           
 19070                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19071  0129B8  EE20 F002          	lfsr	2,2
 19072  0129BC  5031               	movf	_pBDTEntryEP0OutNext,w,c
 19073  0129BE  26D9               	addwf	fsr2l,f,c
 19074  0129C0  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 19075  0129C2  22DA               	addwfc	fsr2h,f,c
 19076  0129C4  0E30               	movlw	48
 19077  0129C6  6EDE               	movwf	postinc2,c
 19078  0129C8  0E0D               	movlw	13
 19079  0129CA  6EDD               	movwf	postdec2,c
 19080                           
 19081                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19082  0129CC  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19083  0129D0  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19084  0129D4  0E80               	movlw	128
 19085  0129D6  6EDF               	movwf	indf2,c
 19086  0129D8  0012               	return	
 19087  0129DA                     __end_of_USBCtrlEPAllowStatusStage:
 19088                           	opt stack 0
 19089                           pclatu	equ	0xFFB
 19090                           pclath	equ	0xFFA
 19091                           tblptru	equ	0xFF8
 19092                           tblptrh	equ	0xFF7
 19093                           tblptrl	equ	0xFF6
 19094                           tablat	equ	0xFF5
 19095                           prodh	equ	0xFF4
 19096                           prodl	equ	0xFF3
 19097                           intcon	equ	0xFF2
 19098                           intcon2	equ	0xFF1
 19099                           indf0	equ	0xFEF
 19100                           postinc0	equ	0xFEE
 19101                           fsr0h	equ	0xFEA
 19102                           fsr0l	equ	0xFE9
 19103                           wreg	equ	0xFE8
 19104                           indf1	equ	0xFE7
 19105                           postinc1	equ	0xFE6
 19106                           postdec1	equ	0xFE5
 19107                           fsr1h	equ	0xFE2
 19108                           fsr1l	equ	0xFE1
 19109                           indf2	equ	0xFDF
 19110                           postinc2	equ	0xFDE
 19111                           postdec2	equ	0xFDD
 19112                           plusw2	equ	0xFDB
 19113                           fsr2h	equ	0xFDA
 19114                           fsr2l	equ	0xFD9
 19115                           status	equ	0xFD8
 19116                           
 19117 ;; *************** function _USBCtrlTrfInHandler *****************
 19118 ;; Defined at:
 19119 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;		None
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19124 ;; Return value:  Size  Location     Type
 19125 ;;		None               void
 19126 ;; Registers used:
 19127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19137 ;;Total ram usage:        1 bytes
 19138 ;; Hardware stack levels used:    1
 19139 ;; Hardware stack levels required when called:    1
 19140 ;; This function calls:
 19141 ;;		_USBCtrlTrfTxService
 19142 ;; This function is called by:
 19143 ;;		_USBCtrlEPService
 19144 ;; This function uses a non-reentrant model
 19145 ;;
 19146                           
 19147                           	psect	text95
 19148  0129DA                     __ptext95:
 19149                           	opt stack 0
 19150  0129DA                     _USBCtrlTrfInHandler:
 19151                           	opt stack 16
 19152                           
 19153                           ;usb_device.c: 2598: uint8_t lastDTS;
 19154                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19155                           
 19156                           ;incstack = 0
 19157  0129DA  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19158  0129DE  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19159  0129E2  0E00               	movlw	0
 19160  0129E4  BCDF               	btfsc	indf2,6,c
 19161  0129E6  0E01               	movlw	1
 19162  0129E8  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19163                           
 19164                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19165  0129EA  0E04               	movlw	4
 19166  0129EC  0100               	movlb	0	; () banked
 19167  0129EE  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 19171  0129F0  0E08               	movlw	8
 19172  0129F2  1840               	xorwf	_USBDeviceState,w,c	;volatile
 19173  0129F4  A4D8               	btfss	status,2,c
 19174  0129F6  D00D               	goto	i2l6480
 19175                           
 19176                           ; BSR set to: 0
 19177                           ;usb_device.c: 2609: {
 19178                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 19179  0129F8  010D               	movlb	13	; () banked
 19180  0129FA  5132               	movf	50,w,b	;volatile
 19181  0129FC  0B7F               	andlw	127
 19182  0129FE  010F               	movlb	15	; () banked
 19183  012A00  6F38               	movwf	56,b	;volatile
 19184                           
 19185                           ; BSR set to: 15
 19186                           ;usb_device.c: 2611: if(UADDR != 0u)
 19187  012A02  010F               	movlb	15	; () banked
 19188  012A04  5138               	movf	56,w,b	;volatile
 19189  012A06  B4D8               	btfsc	status,2,c
 19190  012A08  D002               	goto	i2l6478
 19191                           
 19192                           ; BSR set to: 15
 19193                           ;usb_device.c: 2612: {
 19194                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 19195  012A0A  0E10               	movlw	16
 19196  012A0C  D001               	goto	L14
 19197  012A0E                     i2l6478:
 19198                           
 19199                           ; BSR set to: 15
 19200                           ;usb_device.c: 2615: else
 19201                           ;usb_device.c: 2616: {
 19202                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 19203  012A0E  0E04               	movlw	4
 19204  012A10                     L14:
 19205  012A10  6E40               	movwf	_USBDeviceState,c	;volatile
 19206  012A12                     i2l6480:
 19207                           
 19208                           ;usb_device.c: 2618: }
 19209                           ;usb_device.c: 2619: }
 19210                           ;usb_device.c: 2622: if(controlTransferState == 1)
 19211  012A12  0445               	decf	_controlTransferState,w,c	;volatile
 19212  012A14  A4D8               	btfss	status,2,c
 19213  012A16  D03B               	goto	i2l345
 19214                           
 19215                           ;usb_device.c: 2623: {
 19216                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19217  012A18  0100               	movlb	0	; () banked
 19218  012A1A  EE20 F002          	lfsr	2,2
 19219  012A1E  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 19220  012A20  26D9               	addwf	fsr2l,f,c
 19221  012A22  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 19222  012A24  22DA               	addwfc	fsr2h,f,c
 19223  012A26  0E38               	movlw	56
 19224  012A28  6EDE               	movwf	postinc2,c
 19225  012A2A  0E0D               	movlw	13
 19226  012A2C  6EDD               	movwf	postdec2,c
 19227                           
 19228                           ; BSR set to: 0
 19229                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 19230  012A2E  EC3F  F091         	call	_USBCtrlTrfTxService	;wreg free
 19231                           
 19232                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 19233  012A32  0E02               	movlw	2
 19234  012A34  1848               	xorwf	_shortPacketStatus,w,c	;volatile
 19235  012A36  A4D8               	btfss	status,2,c
 19236  012A38  D00D               	goto	i2l6492
 19237                           
 19238                           ;usb_device.c: 2632: {
 19239                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 19240  012A3A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19241  012A3E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19242  012A42  0E04               	movlw	4
 19243  012A44  6EDF               	movwf	indf2,c
 19244                           
 19245                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19246  012A46  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19247  012A4A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19248  012A4E  0E00               	movlw	0
 19249  012A50  8EDB               	bsf	plusw2,7,c
 19250                           
 19251                           ;usb_device.c: 2637: }
 19252  012A52  0012               	return	
 19253  012A54                     i2l6492:
 19254                           
 19255                           ;usb_device.c: 2638: else
 19256                           ;usb_device.c: 2639: {
 19257                           ;usb_device.c: 2640: if(lastDTS == 0)
 19258  012A54  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19259  012A56  A4D8               	btfss	status,2,c
 19260  012A58  D00D               	goto	i2l6498
 19261                           
 19262                           ;usb_device.c: 2641: {
 19263                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19264  012A5A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19265  012A5E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19266  012A62  0E48               	movlw	72
 19267  012A64  6EDF               	movwf	indf2,c
 19268                           
 19269                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19270  012A66  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19271  012A6A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19272  012A6E  0E00               	movlw	0
 19273  012A70  8EDB               	bsf	plusw2,7,c
 19274                           
 19275                           ;usb_device.c: 2644: }
 19276  012A72  0012               	return	
 19277  012A74                     i2l6498:
 19278                           
 19279                           ;usb_device.c: 2645: else
 19280                           ;usb_device.c: 2646: {
 19281                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19282  012A74  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19283  012A78  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19284  012A7C  0E08               	movlw	8
 19285  012A7E  6EDF               	movwf	indf2,c
 19286                           
 19287                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19288  012A80  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19289  012A84  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19290  012A88  0E00               	movlw	0
 19291  012A8A  8EDB               	bsf	plusw2,7,c
 19292                           
 19293                           ;usb_device.c: 2649: }
 19294                           ;usb_device.c: 2650: }
 19295                           ;usb_device.c: 2651: }
 19296  012A8C  0012               	return	
 19297  012A8E                     i2l345:
 19298                           
 19299                           ;usb_device.c: 2652: else
 19300                           ;usb_device.c: 2653: {
 19301                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 19302  012A8E  0100               	movlb	0	; () banked
 19303  012A90  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 19304  012A92  D002               	goto	i2l6504
 19305                           
 19306                           ; BSR set to: 0
 19307                           ;usb_device.c: 2662: }
 19308                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 19309                           
 19310                           ; BSR set to: 0
 19311                           ;usb_device.c: 2660: {
 19312                           ;usb_device.c: 2661: outPipes[0].pFunc();
 19313  012A94  0100               	movlb	0	; () banked
 19314  012A96  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 19315  012A98                     i2l6504:
 19316                           
 19317                           ; BSR set to: 0
 19318                           ;usb_device.c: 2664: }
 19319                           ;usb_device.c: 2666: controlTransferState = 0;
 19320  012A98  0E00               	movlw	0
 19321  012A9A  6E45               	movwf	_controlTransferState,c	;volatile
 19322  012A9C  0012               	return	
 19323  012A9E                     __end_of_USBCtrlTrfInHandler:
 19324                           	opt stack 0
 19325                           pclatu	equ	0xFFB
 19326                           pclath	equ	0xFFA
 19327                           tblptru	equ	0xFF8
 19328                           tblptrh	equ	0xFF7
 19329                           tblptrl	equ	0xFF6
 19330                           tablat	equ	0xFF5
 19331                           prodh	equ	0xFF4
 19332                           prodl	equ	0xFF3
 19333                           intcon	equ	0xFF2
 19334                           intcon2	equ	0xFF1
 19335                           indf0	equ	0xFEF
 19336                           postinc0	equ	0xFEE
 19337                           fsr0h	equ	0xFEA
 19338                           fsr0l	equ	0xFE9
 19339                           wreg	equ	0xFE8
 19340                           indf1	equ	0xFE7
 19341                           postinc1	equ	0xFE6
 19342                           postdec1	equ	0xFE5
 19343                           fsr1h	equ	0xFE2
 19344                           fsr1l	equ	0xFE1
 19345                           indf2	equ	0xFDF
 19346                           postinc2	equ	0xFDE
 19347                           postdec2	equ	0xFDD
 19348                           plusw2	equ	0xFDB
 19349                           fsr2h	equ	0xFDA
 19350                           fsr2l	equ	0xFD9
 19351                           status	equ	0xFD8
 19352                           
 19353 ;; *************** function _USBCtrlTrfTxService *****************
 19354 ;; Defined at:
 19355 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 19356 ;; Parameters:    Size  Location     Type
 19357 ;;		None
 19358 ;; Auto vars:     Size  Location     Type
 19359 ;;  byteToSend      1    0[COMRAM] unsigned char 
 19360 ;; Return value:  Size  Location     Type
 19361 ;;		None               void
 19362 ;; Registers used:
 19363 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19364 ;; Tracked objects:
 19365 ;;		On entry : 0/0
 19366 ;;		On exit  : 0/0
 19367 ;;		Unchanged: 0/0
 19368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;Total ram usage:        1 bytes
 19374 ;; Hardware stack levels used:    1
 19375 ;; This function calls:
 19376 ;;		Nothing
 19377 ;; This function is called by:
 19378 ;;		_USBCtrlEPAllowDataStage
 19379 ;;		_USBCtrlTrfInHandler
 19380 ;; This function uses a non-reentrant model
 19381 ;;
 19382                           
 19383                           	psect	text96
 19384  01227E                     __ptext96:
 19385                           	opt stack 0
 19386  01227E                     _USBCtrlTrfTxService:
 19387                           	opt stack 14
 19388                           
 19389                           ;usb_device.c: 1774: uint8_t byteToSend;
 19390                           ;usb_device.c: 1778: byteToSend = 8;
 19391                           
 19392                           ;incstack = 0
 19393  01227E  0E08               	movlw	8
 19394  012280  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 19395                           
 19396                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 19397  012282  0100               	movlb	0	; () banked
 19398  012284  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 19399  012286  E111               	bnz	i2l5586
 19400  012288  0E08               	movlw	8
 19401  01228A  0100               	movlb	0	; () banked
 19402  01228C  5DD6               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 19403  01228E  B0D8               	btfsc	status,0,c
 19404  012290  D00C               	goto	i2l5586
 19405                           
 19406                           ; BSR set to: 0
 19407                           ;usb_device.c: 1780: {
 19408                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 19409  012292  C0D6  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 19413  012296  5048               	movf	_shortPacketStatus,w,c	;volatile
 19414  012298  A4D8               	btfss	status,2,c
 19415  01229A  D002               	goto	i2l5582
 19416                           
 19417                           ; BSR set to: 0
 19418                           ;usb_device.c: 1789: {
 19419                           ;usb_device.c: 1790: shortPacketStatus = 1;
 19420  01229C  0E01               	movlw	1
 19421  01229E  D004               	goto	L15
 19422  0122A0                     i2l5582:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 19426  0122A0  0448               	decf	_shortPacketStatus,w,c	;volatile
 19427  0122A2  A4D8               	btfss	status,2,c
 19428  0122A4  D002               	goto	i2l5586
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;usb_device.c: 1793: {
 19432                           ;usb_device.c: 1794: shortPacketStatus = 2;
 19433  0122A6  0E02               	movlw	2
 19434  0122A8                     L15:
 19435  0122A8  6E48               	movwf	_shortPacketStatus,c	;volatile
 19436  0122AA                     i2l5586:
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;usb_device.c: 1795: }
 19440                           ;usb_device.c: 1796: }
 19441                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 19442  0122AA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19443  0122AC  0100               	movlb	0	; () banked
 19444  0122AE  5FD6               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 19445  0122B0  0E00               	movlw	0
 19446  0122B2  5BD7               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 19447                           
 19448                           ; BSR set to: 0
 19449                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 19450  0122B4  0100               	movlb	0	; () banked
 19451  0122B6  EE20 F001          	lfsr	2,1
 19452  0122BA  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 19453  0122BC  26D9               	addwf	fsr2l,f,c
 19454  0122BE  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 19455  0122C0  22DA               	addwfc	fsr2h,f,c
 19456  0122C2  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 19460  0122C6  0E38               	movlw	56
 19461  0122C8  6E33               	movwf	_pDst,c
 19462  0122CA  0E0D               	movlw	13
 19463  0122CC  6E34               	movwf	_pDst+1,c
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 19467  0122CE  0100               	movlb	0	; () banked
 19468  0122D0  A1D5               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 19469  0122D2  D01D               	goto	i2l5604
 19470  0122D4  D03C               	goto	i2l5614
 19471  0122D6                     i2l5596:
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;usb_device.c: 1813: {
 19475                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 19476  0122D6  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 19477  0122DA  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19478  0122DE  0E00               	movlw	low (__mediumconst shr (0+16))
 19479  0122E0  6EF8               	movwf	tblptru,c
 19480  0122E2  C033  FFD9         	movff	_pDst,fsr2l
 19481  0122E6  C034  FFDA         	movff	_pDst+1,fsr2h
 19482  0122EA  0E0E               	movlw	(high __ramtop+-1)
 19483  0122EC  64F7               	cpfsgt	tblptrh,c
 19484  0122EE  D003               	bra	i2u427_47
 19485  0122F0  0008               	tblrd		*
 19486  0122F2  50F5               	movf	tablat,w,c
 19487  0122F4  D005               	bra	i2u427_40
 19488  0122F6                     i2u427_47:
 19489  0122F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19490  0122FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19491  0122FE  50EF               	movf	indf0,w,c
 19492  012300                     i2u427_40:
 19493  012300  6EDF               	movwf	indf2,c
 19494  012302  0100               	movlb	0	; () banked
 19495  012304  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 19496  012306  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 19497                           
 19498                           ; BSR set to: 0
 19499  012308  4A33               	infsnz	_pDst,f,c
 19500  01230A  2A34               	incf	_pDst+1,f,c
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;usb_device.c: 1815: byteToSend--;
 19504  01230C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19505  01230E                     i2l5604:
 19506                           
 19507                           ; BSR set to: 0
 19508  01230E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19509  012310  B4D8               	btfsc	status,2,c
 19510  012312  0012               	return	
 19511  012314  D7E0               	goto	i2l5596
 19512  012316                     i2l5606:
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;usb_device.c: 1821: {
 19516                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 19517  012316  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 19518  01231A  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19519  01231E  0E00               	movlw	low (__mediumconst shr (0+16))
 19520  012320  6EF8               	movwf	tblptru,c
 19521  012322  C033  FFD9         	movff	_pDst,fsr2l
 19522  012326  C034  FFDA         	movff	_pDst+1,fsr2h
 19523  01232A  0E0E               	movlw	(high __ramtop+-1)
 19524  01232C  64F7               	cpfsgt	tblptrh,c
 19525  01232E  D003               	bra	i2u429_47
 19526  012330  0008               	tblrd		*
 19527  012332  50F5               	movf	tablat,w,c
 19528  012334  D005               	bra	i2u429_40
 19529  012336                     i2u429_47:
 19530  012336  CFF6 FFE9          	movff	tblptrl,fsr0l
 19531  01233A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19532  01233E  50EF               	movf	indf0,w,c
 19533  012340                     i2u429_40:
 19534  012340  6EDF               	movwf	indf2,c
 19535  012342  0100               	movlb	0	; () banked
 19536  012344  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 19537  012346  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 19538                           
 19539                           ; BSR set to: 0
 19540  012348  4A33               	infsnz	_pDst,f,c
 19541  01234A  2A34               	incf	_pDst+1,f,c
 19542                           
 19543                           ; BSR set to: 0
 19544                           ;usb_device.c: 1823: byteToSend--;
 19545  01234C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19546  01234E                     i2l5614:
 19547                           
 19548                           ; BSR set to: 0
 19549  01234E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19550  012350  B4D8               	btfsc	status,2,c
 19551  012352  0012               	return	
 19552  012354  D7E0               	goto	i2l5606
 19553  012356                     __end_of_USBCtrlTrfTxService:
 19554                           	opt stack 0
 19555                           pclatu	equ	0xFFB
 19556                           pclath	equ	0xFFA
 19557                           tblptru	equ	0xFF8
 19558                           tblptrh	equ	0xFF7
 19559                           tblptrl	equ	0xFF6
 19560                           tablat	equ	0xFF5
 19561                           prodh	equ	0xFF4
 19562                           prodl	equ	0xFF3
 19563                           intcon	equ	0xFF2
 19564                           intcon2	equ	0xFF1
 19565                           indf0	equ	0xFEF
 19566                           postinc0	equ	0xFEE
 19567                           fsr0h	equ	0xFEA
 19568                           fsr0l	equ	0xFE9
 19569                           wreg	equ	0xFE8
 19570                           indf1	equ	0xFE7
 19571                           postinc1	equ	0xFE6
 19572                           postdec1	equ	0xFE5
 19573                           fsr1h	equ	0xFE2
 19574                           fsr1l	equ	0xFE1
 19575                           indf2	equ	0xFDF
 19576                           postinc2	equ	0xFDE
 19577                           postdec2	equ	0xFDD
 19578                           plusw2	equ	0xFDB
 19579                           fsr2h	equ	0xFDA
 19580                           fsr2l	equ	0xFD9
 19581                           status	equ	0xFD8
 19582                           
 19583 ;; *************** function _UART_ISR *****************
 19584 ;; Defined at:
 19585 ;;		line 37 in file "../My_library/My_UART.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;		None
 19588 ;; Auto vars:     Size  Location     Type
 19589 ;;  ascii           1   15[COMRAM] unsigned char 
 19590 ;; Return value:  Size  Location     Type
 19591 ;;		None               void
 19592 ;; Registers used:
 19593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19594 ;; Tracked objects:
 19595 ;;		On entry : 0/0
 19596 ;;		On exit  : 0/0
 19597 ;;		Unchanged: 0/0
 19598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19603 ;;Total ram usage:        1 bytes
 19604 ;; Hardware stack levels used:    1
 19605 ;; Hardware stack levels required when called:    2
 19606 ;; This function calls:
 19607 ;;		i2_ringbuf_num
 19608 ;;		i2_ringbuf_pop
 19609 ;;		i2_ringbuf_put
 19610 ;; This function is called by:
 19611 ;;		_ISR
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text97
 19616  013BB8                     __ptext97:
 19617                           	opt stack 0
 19618  013BB8                     _UART_ISR:
 19619                           	opt stack 18
 19620                           
 19621                           ;My_UART.c: 38: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;incstack = 0
 19625  013BB8  B89D               	btfsc	3997,4,c	;volatile
 19626  013BBA  A89E               	btfss	3998,4,c	;volatile
 19627  013BBC  D013               	goto	i2l1305
 19628                           
 19629                           ;My_UART.c: 39: if (ringbuf_num(&uart_tx)) {
 19630  013BBE  0E64               	movlw	low _uart_tx
 19631  013BC0  6E01               	movwf	i2ringbuf_num@rb,c
 19632  013BC2  0E01               	movlw	high _uart_tx
 19633  013BC4  6E02               	movwf	i2ringbuf_num@rb+1,c
 19634  013BC6  EC6A  F096         	call	i2_ringbuf_num	;wreg free
 19635  013BCA  5001               	movf	?i2_ringbuf_num,w,c
 19636  013BCC  1002               	iorwf	?i2_ringbuf_num+1,w,c
 19637  013BCE  B4D8               	btfsc	status,2,c
 19638  013BD0  D008               	goto	i2l1306
 19639                           
 19640                           ;My_UART.c: 40: TXREG1 = ringbuf_pop(&uart_tx);
 19641  013BD2  0E64               	movlw	low _uart_tx
 19642  013BD4  6E09               	movwf	i2ringbuf_pop@rb,c
 19643  013BD6  0E01               	movlw	high _uart_tx
 19644  013BD8  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 19645  013BDA  ECDD  F097         	call	i2_ringbuf_pop	;wreg free
 19646  013BDE  6EAE               	movwf	4014,c	;volatile
 19647                           
 19648                           ;My_UART.c: 41: } else {
 19649  013BE0  D001               	goto	i2l1305
 19650  013BE2                     i2l1306:
 19651                           
 19652                           ;My_UART.c: 42: PIE1bits.TXIE = 0;
 19653  013BE2  989D               	bcf	3997,4,c	;volatile
 19654  013BE4                     i2l1305:
 19655                           
 19656                           ;My_UART.c: 43: }
 19657                           ;My_UART.c: 44: }
 19658                           ;My_UART.c: 45: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 19659  013BE4  AA9D               	btfss	3997,5,c	;volatile
 19660  013BE6  0012               	return	
 19661  013BE8  AA9E               	btfss	3998,5,c	;volatile
 19662  013BEA  0012               	return	
 19663                           
 19664                           ;My_UART.c: 46: char ascii = RCREG1;
 19665  013BEC  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 19666                           
 19667                           ;My_UART.c: 47: ringbuf_put(&uart_rx, ascii);
 19668  013BF0  0E5C               	movlw	low _uart_rx
 19669  013BF2  6E09               	movwf	i2ringbuf_put@rb,c
 19670  013BF4  0E01               	movlw	high _uart_rx
 19671  013BF6  6E0A               	movwf	i2ringbuf_put@rb+1,c
 19672  013BF8  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@data
 19673  013BFC  EC82  F097         	call	i2_ringbuf_put	;wreg free
 19674  013C00  0012               	return	
 19675  013C02                     __end_of_UART_ISR:
 19676                           	opt stack 0
 19677                           pclatu	equ	0xFFB
 19678                           pclath	equ	0xFFA
 19679                           tblptru	equ	0xFF8
 19680                           tblptrh	equ	0xFF7
 19681                           tblptrl	equ	0xFF6
 19682                           tablat	equ	0xFF5
 19683                           prodh	equ	0xFF4
 19684                           prodl	equ	0xFF3
 19685                           intcon	equ	0xFF2
 19686                           intcon2	equ	0xFF1
 19687                           indf0	equ	0xFEF
 19688                           postinc0	equ	0xFEE
 19689                           fsr0h	equ	0xFEA
 19690                           fsr0l	equ	0xFE9
 19691                           wreg	equ	0xFE8
 19692                           indf1	equ	0xFE7
 19693                           postinc1	equ	0xFE6
 19694                           postdec1	equ	0xFE5
 19695                           fsr1h	equ	0xFE2
 19696                           fsr1l	equ	0xFE1
 19697                           indf2	equ	0xFDF
 19698                           postinc2	equ	0xFDE
 19699                           postdec2	equ	0xFDD
 19700                           plusw2	equ	0xFDB
 19701                           fsr2h	equ	0xFDA
 19702                           fsr2l	equ	0xFD9
 19703                           status	equ	0xFD8
 19704                           
 19705 ;; *************** function i2_ringbuf_put *****************
 19706 ;; Defined at:
 19707 ;;		line 20 in file "../My_library/My_ringbuf.c"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19710 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), terminal_task@command(8), 
 19711 ;;		 -> lcd_tx(8), 
 19712 ;;  data            1   10[COMRAM] unsigned char 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;		None
 19715 ;; Return value:  Size  Location     Type
 19716 ;;		None               void
 19717 ;; Registers used:
 19718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19719 ;; Tracked objects:
 19720 ;;		On entry : 0/0
 19721 ;;		On exit  : 0/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19724 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19727 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19728 ;;Total ram usage:        7 bytes
 19729 ;; Hardware stack levels used:    1
 19730 ;; Hardware stack levels required when called:    1
 19731 ;; This function calls:
 19732 ;;		i2_ringbuf_num
 19733 ;; This function is called by:
 19734 ;;		_UART_ISR
 19735 ;; This function uses a non-reentrant model
 19736 ;;
 19737                           
 19738                           	psect	text98
 19739  012F04                     __ptext98:
 19740                           	opt stack 0
 19741  012F04                     i2_ringbuf_put:
 19742                           	opt stack 18
 19743                           
 19744                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 19745                           
 19746                           ;incstack = 0
 19747  012F04  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 19748  012F08  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 19749  012F0C  EC6A  F096         	call	i2_ringbuf_num	;wreg free
 19750  012F10  EE20 F002          	lfsr	2,2
 19751  012F14  5009               	movf	i2ringbuf_put@rb,w,c
 19752  012F16  26D9               	addwf	fsr2l,f,c
 19753  012F18  500A               	movf	i2ringbuf_put@rb+1,w,c
 19754  012F1A  22DA               	addwfc	fsr2h,f,c
 19755  012F1C  50DE               	movf	postinc2,w,c
 19756  012F1E  5C01               	subwf	?i2_ringbuf_num,w,c
 19757  012F20  50DE               	movf	postinc2,w,c
 19758  012F22  5802               	subwfb	?i2_ringbuf_num+1,w,c
 19759  012F24  B0D8               	btfsc	status,0,c
 19760  012F26  0012               	return	
 19761                           
 19762                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 19763  012F28  EE20 F004          	lfsr	2,4
 19764  012F2C  5009               	movf	i2ringbuf_put@rb,w,c
 19765  012F2E  26D9               	addwf	fsr2l,f,c
 19766  012F30  500A               	movf	i2ringbuf_put@rb+1,w,c
 19767  012F32  22DA               	addwfc	fsr2h,f,c
 19768  012F34  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 19769  012F38  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 19770  012F3C  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 19771  012F40  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 19772  012F44  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 19773  012F48  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 19774  012F4C  500C               	movf	??i2_ringbuf_put,w,c
 19775  012F4E  240E               	addwf	??i2_ringbuf_put+2,w,c
 19776  012F50  6ED9               	movwf	fsr2l,c
 19777  012F52  500D               	movf	??i2_ringbuf_put+1,w,c
 19778  012F54  200F               	addwfc	??i2_ringbuf_put+3,w,c
 19779  012F56  6EDA               	movwf	fsr2h,c
 19780  012F58  C00B  FFDF         	movff	i2ringbuf_put@data,indf2
 19781                           
 19782                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 19783  012F5C  EE20 F002          	lfsr	2,2
 19784  012F60  5009               	movf	i2ringbuf_put@rb,w,c
 19785  012F62  26D9               	addwf	fsr2l,f,c
 19786  012F64  500A               	movf	i2ringbuf_put@rb+1,w,c
 19787  012F66  22DA               	addwfc	fsr2h,f,c
 19788  012F68  EE10 F004          	lfsr	1,4
 19789  012F6C  5009               	movf	i2ringbuf_put@rb,w,c
 19790  012F6E  26E1               	addwf	fsr1l,f,c
 19791  012F70  500A               	movf	i2ringbuf_put@rb+1,w,c
 19792  012F72  22E2               	addwfc	fsr1h,f,c
 19793  012F74  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 19794  012F78  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 19795  012F7C  0E01               	movlw	1
 19796  012F7E  260E               	addwf	??i2_ringbuf_put+2,f,c
 19797  012F80  0E00               	movlw	0
 19798  012F82  220F               	addwfc	??i2_ringbuf_put+3,f,c
 19799  012F84  50DE               	movf	postinc2,w,c
 19800  012F86  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 19801  012F88  50DE               	movf	postinc2,w,c
 19802  012F8A  580F               	subwfb	??i2_ringbuf_put+3,w,c
 19803  012F8C  B0D8               	btfsc	status,0,c
 19804  012F8E  D00A               	goto	i2l7302
 19805  012F90  EE20 F004          	lfsr	2,4
 19806  012F94  5009               	movf	i2ringbuf_put@rb,w,c
 19807  012F96  26D9               	addwf	fsr2l,f,c
 19808  012F98  500A               	movf	i2ringbuf_put@rb+1,w,c
 19809  012F9A  22DA               	addwfc	fsr2h,f,c
 19810  012F9C  2ADE               	incf	postinc2,f,c
 19811  012F9E  0E00               	movlw	0
 19812  012FA0  22DD               	addwfc	postdec2,f,c
 19813  012FA2  0012               	return	
 19814  012FA4                     i2l7302:
 19815                           
 19816                           ;My_ringbuf.c: 24: else rb->head = 0;
 19817  012FA4  EE20 F004          	lfsr	2,4
 19818  012FA8  5009               	movf	i2ringbuf_put@rb,w,c
 19819  012FAA  26D9               	addwf	fsr2l,f,c
 19820  012FAC  500A               	movf	i2ringbuf_put@rb+1,w,c
 19821  012FAE  22DA               	addwfc	fsr2h,f,c
 19822  012FB0  0E00               	movlw	0
 19823  012FB2  6EDE               	movwf	postinc2,c
 19824  012FB4  0E00               	movlw	0
 19825  012FB6  6EDD               	movwf	postdec2,c
 19826  012FB8  0012               	return	
 19827  012FBA                     __end_ofi2_ringbuf_put:
 19828                           	opt stack 0
 19829                           pclatu	equ	0xFFB
 19830                           pclath	equ	0xFFA
 19831                           tblptru	equ	0xFF8
 19832                           tblptrh	equ	0xFF7
 19833                           tblptrl	equ	0xFF6
 19834                           tablat	equ	0xFF5
 19835                           prodh	equ	0xFF4
 19836                           prodl	equ	0xFF3
 19837                           intcon	equ	0xFF2
 19838                           intcon2	equ	0xFF1
 19839                           indf0	equ	0xFEF
 19840                           postinc0	equ	0xFEE
 19841                           fsr0h	equ	0xFEA
 19842                           fsr0l	equ	0xFE9
 19843                           wreg	equ	0xFE8
 19844                           indf1	equ	0xFE7
 19845                           postinc1	equ	0xFE6
 19846                           postdec1	equ	0xFE5
 19847                           fsr1h	equ	0xFE2
 19848                           fsr1l	equ	0xFE1
 19849                           indf2	equ	0xFDF
 19850                           postinc2	equ	0xFDE
 19851                           postdec2	equ	0xFDD
 19852                           plusw2	equ	0xFDB
 19853                           fsr2h	equ	0xFDA
 19854                           fsr2l	equ	0xFD9
 19855                           status	equ	0xFD8
 19856                           
 19857 ;; *************** function i2_ringbuf_pop *****************
 19858 ;; Defined at:
 19859 ;;		line 45 in file "../My_library/My_ringbuf.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19862 ;;		 -> usb_rx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
 19863 ;;		 -> lcd_tx(8), 
 19864 ;; Auto vars:     Size  Location     Type
 19865 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 19866 ;; Return value:  Size  Location     Type
 19867 ;;                  1    wreg      unsigned char 
 19868 ;; Registers used:
 19869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19870 ;; Tracked objects:
 19871 ;;		On entry : 0/0
 19872 ;;		On exit  : 0/0
 19873 ;;		Unchanged: 0/0
 19874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19879 ;;Total ram usage:        7 bytes
 19880 ;; Hardware stack levels used:    1
 19881 ;; Hardware stack levels required when called:    1
 19882 ;; This function calls:
 19883 ;;		i2_ringbuf_num
 19884 ;; This function is called by:
 19885 ;;		_UART_ISR
 19886 ;; This function uses a non-reentrant model
 19887 ;;
 19888                           
 19889                           	psect	text99
 19890  012FBA                     __ptext99:
 19891                           	opt stack 0
 19892  012FBA                     i2_ringbuf_pop:
 19893                           	opt stack 18
 19894                           
 19895                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 19896                           
 19897                           ;incstack = 0
 19898  012FBA  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 19899  012FBE  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 19900  012FC2  EC6A  F096         	call	i2_ringbuf_num	;wreg free
 19901  012FC6  5001               	movf	?i2_ringbuf_num,w,c
 19902  012FC8  1002               	iorwf	?i2_ringbuf_num+1,w,c
 19903  012FCA  B4D8               	btfsc	status,2,c
 19904  012FCC  D04A               	goto	i2l7320
 19905                           
 19906                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 19907  012FCE  EE20 F006          	lfsr	2,6
 19908  012FD2  5009               	movf	i2ringbuf_pop@rb,w,c
 19909  012FD4  26D9               	addwf	fsr2l,f,c
 19910  012FD6  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19911  012FD8  22DA               	addwfc	fsr2h,f,c
 19912  012FDA  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 19913  012FDE  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 19914  012FE2  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 19915  012FE6  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 19916  012FEA  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 19917  012FEE  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 19918  012FF2  500B               	movf	??i2_ringbuf_pop,w,c
 19919  012FF4  240D               	addwf	??i2_ringbuf_pop+2,w,c
 19920  012FF6  6ED9               	movwf	fsr2l,c
 19921  012FF8  500C               	movf	??i2_ringbuf_pop+1,w,c
 19922  012FFA  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 19923  012FFC  6EDA               	movwf	fsr2h,c
 19924  012FFE  50DF               	movf	indf2,w,c
 19925  013000  6E0F               	movwf	i2ringbuf_pop@ret,c
 19926                           
 19927                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 19928  013002  EE20 F002          	lfsr	2,2
 19929  013006  5009               	movf	i2ringbuf_pop@rb,w,c
 19930  013008  26D9               	addwf	fsr2l,f,c
 19931  01300A  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19932  01300C  22DA               	addwfc	fsr2h,f,c
 19933  01300E  EE10 F006          	lfsr	1,6
 19934  013012  5009               	movf	i2ringbuf_pop@rb,w,c
 19935  013014  26E1               	addwf	fsr1l,f,c
 19936  013016  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19937  013018  22E2               	addwfc	fsr1h,f,c
 19938  01301A  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 19939  01301E  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 19940  013022  0E01               	movlw	1
 19941  013024  260D               	addwf	??i2_ringbuf_pop+2,f,c
 19942  013026  0E00               	movlw	0
 19943  013028  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 19944  01302A  50DE               	movf	postinc2,w,c
 19945  01302C  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 19946  01302E  50DE               	movf	postinc2,w,c
 19947  013030  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 19948  013032  B0D8               	btfsc	status,0,c
 19949  013034  D00A               	goto	i2l7312
 19950                           
 19951                           ;My_ringbuf.c: 49: rb->tail++;
 19952  013036  EE20 F006          	lfsr	2,6
 19953  01303A  5009               	movf	i2ringbuf_pop@rb,w,c
 19954  01303C  26D9               	addwf	fsr2l,f,c
 19955  01303E  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19956  013040  22DA               	addwfc	fsr2h,f,c
 19957  013042  2ADE               	incf	postinc2,f,c
 19958  013044  0E00               	movlw	0
 19959  013046  22DD               	addwfc	postdec2,f,c
 19960                           
 19961                           ;My_ringbuf.c: 50: } else {
 19962  013048  D00A               	goto	i2l7314
 19963  01304A                     i2l7312:
 19964                           
 19965                           ;My_ringbuf.c: 51: rb->tail = 0;
 19966  01304A  EE20 F006          	lfsr	2,6
 19967  01304E  5009               	movf	i2ringbuf_pop@rb,w,c
 19968  013050  26D9               	addwf	fsr2l,f,c
 19969  013052  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19970  013054  22DA               	addwfc	fsr2h,f,c
 19971  013056  0E00               	movlw	0
 19972  013058  6EDE               	movwf	postinc2,c
 19973  01305A  0E00               	movlw	0
 19974  01305C  6EDD               	movwf	postdec2,c
 19975  01305E                     i2l7314:
 19976                           
 19977                           ;My_ringbuf.c: 52: }
 19978                           ;My_ringbuf.c: 53: return ret;
 19979  01305E  500F               	movf	i2ringbuf_pop@ret,w,c
 19980                           
 19981                           ;My_ringbuf.c: 54: } else {
 19982  013060  0012               	return	
 19983  013062                     i2l7320:
 19984                           
 19985                           ;My_ringbuf.c: 55: return 0;
 19986  013062  0E00               	movlw	0
 19987  013064  0012               	return	
 19988  013066                     __end_ofi2_ringbuf_pop:
 19989                           	opt stack 0
 19990                           pclatu	equ	0xFFB
 19991                           pclath	equ	0xFFA
 19992                           tblptru	equ	0xFF8
 19993                           tblptrh	equ	0xFF7
 19994                           tblptrl	equ	0xFF6
 19995                           tablat	equ	0xFF5
 19996                           prodh	equ	0xFF4
 19997                           prodl	equ	0xFF3
 19998                           intcon	equ	0xFF2
 19999                           intcon2	equ	0xFF1
 20000                           indf0	equ	0xFEF
 20001                           postinc0	equ	0xFEE
 20002                           fsr0h	equ	0xFEA
 20003                           fsr0l	equ	0xFE9
 20004                           wreg	equ	0xFE8
 20005                           indf1	equ	0xFE7
 20006                           postinc1	equ	0xFE6
 20007                           postdec1	equ	0xFE5
 20008                           fsr1h	equ	0xFE2
 20009                           fsr1l	equ	0xFE1
 20010                           indf2	equ	0xFDF
 20011                           postinc2	equ	0xFDE
 20012                           postdec2	equ	0xFDD
 20013                           plusw2	equ	0xFDB
 20014                           fsr2h	equ	0xFDA
 20015                           fsr2l	equ	0xFD9
 20016                           status	equ	0xFD8
 20017                           
 20018 ;; *************** function i2_ringbuf_num *****************
 20019 ;; Defined at:
 20020 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20021 ;; Parameters:    Size  Location     Type
 20022 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 20023 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
 20024 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 20025 ;; Auto vars:     Size  Location     Type
 20026 ;;		None
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  2    0[COMRAM] unsigned int 
 20029 ;; Registers used:
 20030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20038 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20040 ;;Total ram usage:        8 bytes
 20041 ;; Hardware stack levels used:    1
 20042 ;; This function calls:
 20043 ;;		Nothing
 20044 ;; This function is called by:
 20045 ;;		_UART_ISR
 20046 ;;		i2_ringbuf_put
 20047 ;;		i2_ringbuf_pop
 20048 ;; This function uses a non-reentrant model
 20049 ;;
 20050                           
 20051                           	psect	text100
 20052  012CD4                     __ptext100:
 20053                           	opt stack 0
 20054  012CD4                     i2_ringbuf_num:
 20055                           	opt stack 18
 20056                           
 20057                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20058                           
 20059                           ;incstack = 0
 20060  012CD4  EE20 F006          	lfsr	2,6
 20061  012CD8  5001               	movf	i2ringbuf_num@rb,w,c
 20062  012CDA  26D9               	addwf	fsr2l,f,c
 20063  012CDC  5002               	movf	i2ringbuf_num@rb+1,w,c
 20064  012CDE  22DA               	addwfc	fsr2h,f,c
 20065  012CE0  EE10 F004          	lfsr	1,4
 20066  012CE4  5001               	movf	i2ringbuf_num@rb,w,c
 20067  012CE6  26E1               	addwf	fsr1l,f,c
 20068  012CE8  5002               	movf	i2ringbuf_num@rb+1,w,c
 20069  012CEA  22E2               	addwfc	fsr1h,f,c
 20070  012CEC  50DE               	movf	postinc2,w,c
 20071  012CEE  5CE6               	subwf	postinc1,w,c
 20072  012CF0  50DE               	movf	postinc2,w,c
 20073  012CF2  58E6               	subwfb	postinc1,w,c
 20074  012CF4  A0D8               	btfss	status,0,c
 20075  012CF6  D01F               	goto	i2l6982
 20076                           
 20077                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20078  012CF8  EE20 F004          	lfsr	2,4
 20079  012CFC  5001               	movf	i2ringbuf_num@rb,w,c
 20080  012CFE  26D9               	addwf	fsr2l,f,c
 20081  012D00  5002               	movf	i2ringbuf_num@rb+1,w,c
 20082  012D02  22DA               	addwfc	fsr2h,f,c
 20083  012D04  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 20084  012D08  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 20085  012D0C  EE20 F006          	lfsr	2,6
 20086  012D10  5001               	movf	i2ringbuf_num@rb,w,c
 20087  012D12  26D9               	addwf	fsr2l,f,c
 20088  012D14  5002               	movf	i2ringbuf_num@rb+1,w,c
 20089  012D16  22DA               	addwfc	fsr2h,f,c
 20090  012D18  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 20091  012D1C  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 20092  012D20  1E05               	comf	??i2_ringbuf_num+2,f,c
 20093  012D22  1E06               	comf	??i2_ringbuf_num+3,f,c
 20094  012D24  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 20095  012D26  2A06               	incf	??i2_ringbuf_num+3,f,c
 20096  012D28  5003               	movf	??i2_ringbuf_num,w,c
 20097  012D2A  2405               	addwf	??i2_ringbuf_num+2,w,c
 20098  012D2C  6E01               	movwf	?i2_ringbuf_num,c
 20099  012D2E  5004               	movf	??i2_ringbuf_num+1,w,c
 20100  012D30  2006               	addwfc	??i2_ringbuf_num+3,w,c
 20101  012D32  6E02               	movwf	?i2_ringbuf_num+1,c
 20102                           
 20103                           ;My_ringbuf.c: 15: } else {
 20104  012D34  0012               	return	
 20105  012D36                     i2l6982:
 20106                           
 20107                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20108  012D36  EE20 F004          	lfsr	2,4
 20109  012D3A  5001               	movf	i2ringbuf_num@rb,w,c
 20110  012D3C  26D9               	addwf	fsr2l,f,c
 20111  012D3E  5002               	movf	i2ringbuf_num@rb+1,w,c
 20112  012D40  22DA               	addwfc	fsr2h,f,c
 20113  012D42  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 20114  012D46  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 20115  012D4A  EE20 F002          	lfsr	2,2
 20116  012D4E  5001               	movf	i2ringbuf_num@rb,w,c
 20117  012D50  26D9               	addwf	fsr2l,f,c
 20118  012D52  5002               	movf	i2ringbuf_num@rb+1,w,c
 20119  012D54  22DA               	addwfc	fsr2h,f,c
 20120  012D56  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 20121  012D5A  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 20122  012D5E  EE20 F006          	lfsr	2,6
 20123  012D62  5001               	movf	i2ringbuf_num@rb,w,c
 20124  012D64  26D9               	addwf	fsr2l,f,c
 20125  012D66  5002               	movf	i2ringbuf_num@rb+1,w,c
 20126  012D68  22DA               	addwfc	fsr2h,f,c
 20127  012D6A  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 20128  012D6E  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 20129  012D72  1E07               	comf	??i2_ringbuf_num+4,f,c
 20130  012D74  1E08               	comf	??i2_ringbuf_num+5,f,c
 20131  012D76  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 20132  012D78  2A08               	incf	??i2_ringbuf_num+5,f,c
 20133  012D7A  5005               	movf	??i2_ringbuf_num+2,w,c
 20134  012D7C  2607               	addwf	??i2_ringbuf_num+4,f,c
 20135  012D7E  5006               	movf	??i2_ringbuf_num+3,w,c
 20136  012D80  2208               	addwfc	??i2_ringbuf_num+5,f,c
 20137  012D82  5003               	movf	??i2_ringbuf_num,w,c
 20138  012D84  2407               	addwf	??i2_ringbuf_num+4,w,c
 20139  012D86  6E01               	movwf	?i2_ringbuf_num,c
 20140  012D88  5004               	movf	??i2_ringbuf_num+1,w,c
 20141  012D8A  2008               	addwfc	??i2_ringbuf_num+5,w,c
 20142  012D8C  6E02               	movwf	?i2_ringbuf_num+1,c
 20143  012D8E  0012               	return	
 20144  012D90                     __end_ofi2_ringbuf_num:
 20145                           	opt stack 0
 20146                           pclatu	equ	0xFFB
 20147                           pclath	equ	0xFFA
 20148                           tblptru	equ	0xFF8
 20149                           tblptrh	equ	0xFF7
 20150                           tblptrl	equ	0xFF6
 20151                           tablat	equ	0xFF5
 20152                           prodh	equ	0xFF4
 20153                           prodl	equ	0xFF3
 20154                           intcon	equ	0xFF2
 20155                           intcon2	equ	0xFF1
 20156                           indf0	equ	0xFEF
 20157                           postinc0	equ	0xFEE
 20158                           fsr0h	equ	0xFEA
 20159                           fsr0l	equ	0xFE9
 20160                           wreg	equ	0xFE8
 20161                           indf1	equ	0xFE7
 20162                           postinc1	equ	0xFE6
 20163                           postdec1	equ	0xFE5
 20164                           fsr1h	equ	0xFE2
 20165                           fsr1l	equ	0xFE1
 20166                           indf2	equ	0xFDF
 20167                           postinc2	equ	0xFDE
 20168                           postdec2	equ	0xFDD
 20169                           plusw2	equ	0xFDB
 20170                           fsr2h	equ	0xFDA
 20171                           fsr2l	equ	0xFD9
 20172                           status	equ	0xFD8
 20173                           
 20174 ;; *************** function _I2C_ISR *****************
 20175 ;; Defined at:
 20176 ;;		line 44 in file "../My_library/My_I2C.c"
 20177 ;; Parameters:    Size  Location     Type
 20178 ;;		None
 20179 ;; Auto vars:     Size  Location     Type
 20180 ;;		None
 20181 ;; Return value:  Size  Location     Type
 20182 ;;		None               void
 20183 ;; Registers used:
 20184 ;;		wreg, status,2
 20185 ;; Tracked objects:
 20186 ;;		On entry : 0/0
 20187 ;;		On exit  : 0/0
 20188 ;;		Unchanged: 0/0
 20189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20194 ;;Total ram usage:        0 bytes
 20195 ;; Hardware stack levels used:    1
 20196 ;; This function calls:
 20197 ;;		Nothing
 20198 ;; This function is called by:
 20199 ;;		_ISR
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           	psect	text101
 20204  0140E4                     __ptext101:
 20205                           	opt stack 0
 20206  0140E4                     _I2C_ISR:
 20207                           	opt stack 20
 20208                           
 20209                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 20210                           
 20211                           ;incstack = 0
 20212  0140E4  B69D               	btfsc	3997,3,c	;volatile
 20213  0140E6  A69E               	btfss	3998,3,c	;volatile
 20214  0140E8  D003               	goto	i2l4320
 20215                           
 20216                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
 20217  0140EA  969E               	bcf	3998,3,c	;volatile
 20218                           
 20219                           ;My_I2C.c: 47: I2C_sent_flag = 1;
 20220  0140EC  0E01               	movlw	1
 20221  0140EE  6E3B               	movwf	_I2C_sent_flag,c
 20222  0140F0                     i2l4320:
 20223                           
 20224                           ;My_I2C.c: 48: }
 20225                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 20226  0140F0  A6A0               	btfss	4000,3,c	;volatile
 20227  0140F2  0012               	return	
 20228  0140F4  A6A1               	btfss	4001,3,c	;volatile
 20229  0140F6  0012               	return	
 20230                           
 20231                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
 20232  0140F8  96A1               	bcf	4001,3,c	;volatile
 20233                           
 20234                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
 20235  0140FA  0E01               	movlw	1
 20236  0140FC  6E3A               	movwf	_I2C_cfct_flag,c
 20237  0140FE  0012               	return	
 20238  014100                     __end_of_I2C_ISR:
 20239                           	opt stack 0
 20240                           pclatu	equ	0xFFB
 20241                           pclath	equ	0xFFA
 20242                           tblptru	equ	0xFF8
 20243                           tblptrh	equ	0xFF7
 20244                           tblptrl	equ	0xFF6
 20245                           tablat	equ	0xFF5
 20246                           prodh	equ	0xFF4
 20247                           prodl	equ	0xFF3
 20248                           intcon	equ	0xFF2
 20249                           intcon2	equ	0xFF1
 20250                           indf0	equ	0xFEF
 20251                           postinc0	equ	0xFEE
 20252                           fsr0h	equ	0xFEA
 20253                           fsr0l	equ	0xFE9
 20254                           wreg	equ	0xFE8
 20255                           indf1	equ	0xFE7
 20256                           postinc1	equ	0xFE6
 20257                           postdec1	equ	0xFE5
 20258                           fsr1h	equ	0xFE2
 20259                           fsr1l	equ	0xFE1
 20260                           indf2	equ	0xFDF
 20261                           postinc2	equ	0xFDE
 20262                           postdec2	equ	0xFDD
 20263                           plusw2	equ	0xFDB
 20264                           fsr2h	equ	0xFDA
 20265                           fsr2l	equ	0xFD9
 20266                           status	equ	0xFD8
 20267                           pclatu	equ	0xFFB
 20268                           pclath	equ	0xFFA
 20269                           tblptru	equ	0xFF8
 20270                           tblptrh	equ	0xFF7
 20271                           tblptrl	equ	0xFF6
 20272                           tablat	equ	0xFF5
 20273                           prodh	equ	0xFF4
 20274                           prodl	equ	0xFF3
 20275                           intcon	equ	0xFF2
 20276                           intcon2	equ	0xFF1
 20277                           indf0	equ	0xFEF
 20278                           postinc0	equ	0xFEE
 20279                           fsr0h	equ	0xFEA
 20280                           fsr0l	equ	0xFE9
 20281                           wreg	equ	0xFE8
 20282                           indf1	equ	0xFE7
 20283                           postinc1	equ	0xFE6
 20284                           postdec1	equ	0xFE5
 20285                           fsr1h	equ	0xFE2
 20286                           fsr1l	equ	0xFE1
 20287                           indf2	equ	0xFDF
 20288                           postinc2	equ	0xFDE
 20289                           postdec2	equ	0xFDD
 20290                           plusw2	equ	0xFDB
 20291                           fsr2h	equ	0xFDA
 20292                           fsr2l	equ	0xFD9
 20293                           status	equ	0xFD8
 20294                           
 20295                           	psect	rparam
 20296  0000                     pclatu	equ	0xFFB
 20297                           pclath	equ	0xFFA
 20298                           tblptru	equ	0xFF8
 20299                           tblptrh	equ	0xFF7
 20300                           tblptrl	equ	0xFF6
 20301                           tablat	equ	0xFF5
 20302                           prodh	equ	0xFF4
 20303                           prodl	equ	0xFF3
 20304                           intcon	equ	0xFF2
 20305                           intcon2	equ	0xFF1
 20306                           indf0	equ	0xFEF
 20307                           postinc0	equ	0xFEE
 20308                           fsr0h	equ	0xFEA
 20309                           fsr0l	equ	0xFE9
 20310                           wreg	equ	0xFE8
 20311                           indf1	equ	0xFE7
 20312                           postinc1	equ	0xFE6
 20313                           postdec1	equ	0xFE5
 20314                           fsr1h	equ	0xFE2
 20315                           fsr1l	equ	0xFE1
 20316                           indf2	equ	0xFDF
 20317                           postinc2	equ	0xFDE
 20318                           postdec2	equ	0xFDD
 20319                           plusw2	equ	0xFDB
 20320                           fsr2h	equ	0xFDA
 20321                           fsr2l	equ	0xFD9
 20322                           status	equ	0xFD8
 20323                           
 20324                           	psect	temp
 20325  000058                     btemp:
 20326                           	opt stack 0
 20327  000058                     	ds	1
 20328  0000                     int$flags	set	btemp
 20329                           pclatu	equ	0xFFB
 20330                           pclath	equ	0xFFA
 20331                           tblptru	equ	0xFF8
 20332                           tblptrh	equ	0xFF7
 20333                           tblptrl	equ	0xFF6
 20334                           tablat	equ	0xFF5
 20335                           prodh	equ	0xFF4
 20336                           prodl	equ	0xFF3
 20337                           intcon	equ	0xFF2
 20338                           intcon2	equ	0xFF1
 20339                           indf0	equ	0xFEF
 20340                           postinc0	equ	0xFEE
 20341                           fsr0h	equ	0xFEA
 20342                           fsr0l	equ	0xFE9
 20343                           wreg	equ	0xFE8
 20344                           indf1	equ	0xFE7
 20345                           postinc1	equ	0xFE6
 20346                           postdec1	equ	0xFE5
 20347                           fsr1h	equ	0xFE2
 20348                           fsr1l	equ	0xFE1
 20349                           indf2	equ	0xFDF
 20350                           postinc2	equ	0xFDE
 20351                           postdec2	equ	0xFDD
 20352                           plusw2	equ	0xFDB
 20353                           fsr2h	equ	0xFDA
 20354                           fsr2l	equ	0xFD9
 20355                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    239
    Data        5
    BSS         2237
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      87
    BANK0           160    105     159
    BANK1           256    111     250
    BANK2           256      0     242
    BANK3           256      0     164
    BANK4           256      0     100
    BANK5           256      0     200
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[9]), STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_48(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), STR_46(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 235
		 -> STR_43(CODE[235]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->_ringbuf_put
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _UART_buffer_init->_ringbuf_init
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _USB_CDC_task->_ringbuf_pop
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  223015
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                          _RTCC_task
                          _UART_task
                       _USB_CDC_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  165672
                                              0 BANK1    111   107      4
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  126418
                                             95 BANK0     10     0     10
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110168
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   60702
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30837
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   12740
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10483
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    4893
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10766
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1646
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   25159
                       _I2C_LCD_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3869
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0    2328
                   _UART_buffer_init
 ---------------------------------------------------------------------------------
 (3) _UART_buffer_init                                     0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17067
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   20799
                                             15 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8721
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2659
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1372
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1372
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1064
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2     999
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33321
                                             30 COMRAM    14    14      0
                            _I2C_ISR
                           _UART_ISR
                        _USB_CDC_ISR
 ---------------------------------------------------------------------------------
 (11) _USB_CDC_ISR                                         0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) _I2C_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _main_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
       _UART_buffer_init
         _ringbuf_init
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_ISR
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     514      36       39.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      C8      16       78.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      A4      12       64.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F2      10       94.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6F      FA       7       97.7%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      57       1       92.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4B2       8        0.0%
DATA                 0      0     9C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 12 21:59:55 2016

                               _USB_SD_Ptr FD73                         __size_of_I2C_Start 0030  
                          _ringbuf_put_num 351A                            _ringbuf_put_str 383C  
                             ___awdiv@sign 0065                                         _ms 010E  
                            _USBDeviceInit 13EE                        ___wmul@multiplicand 0062  
                        ??_RTCC_from_epoch 0091                         __size_of_CDCInitEP 006E  
                             __CFG_CP0$OFF 000000       USER_USB_CALLBACK_EVENT_HANDLER@event 000D  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F                                        l207 3D6E  
                                      l208 3D6C                                        l146 1464  
              __end_of_USBStdGetDscHandler 169E                                        l504 12CE  
                                      l509 1322                                        l710 3AF6  
                                      l641 415E                                        l705 3D1E  
                                      l626 3E6C                                        _BDT 000D00  
                                      l774 351C                                        l952 2C18  
                                      l971 116E                                        l958 2356  
                                      _ISR 0008                                        _UIE 000F36  
                                      _UIR 000F62                              ?_get_quot_rem 0079  
                       caltime_to_epoch@tm 0079                            __end_of_I2C_ISR 4100  
                               _USBSuspend 3ED4                                        _now 0146  
                        _RTCC_from_caltime 3FD2                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0015                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 169E  
                               _TXSTA1bits 000FAD                             _USBDeviceState 0040  
                       ?_RTCC_from_caltime 008F                      ??_USBCtrlTrfRxService 0001  
                             _I2C_LCD_Puts 37D2                   __size_ofi2_USBDeviceInit 0144  
                           ??_getsUSBUSART 006A                   USBEnableEndpoint@options 0009  
                        ??_I2C_LCD_Command 0064                                       ?_ISR 0001  
                         _terminal_at_hand 38A0                               _I2C_LCD_init 32E2  
                                     l2002 395A                                       l1107 3DA4  
                                     l1382 1ACA                                       l1375 1A48  
                                     l1393 3F76                 USBConfigureEndpoint@handle 0007  
                                     l1742 1D12                                       l1939 2C06  
                                     l1992 360A                                       l8200 1E86  
                                     l9010 04A2                                       l8212 2152  
                                     l9020 053E                                       l9012 04AE  
                                     l8222 3626                                       l9022 0576  
                                     l8320 0B9A                                       l8304 2692  
                                     l9200 330E                                       l8400 3922  
                                     l9120 352C                                       l9040 06CC  
                                     l9032 063E                                       l9016 04F6  
                       __CFG_WPFP$PAGE_127 000000                                       l8226 364C  
                                     l8314 0B8A                                       l8250 2AEE  
                                     l8402 3928                                       l9130 358E  
                                     l9042 0704                                       l9026 05BE  
                                     l8412 40CA                                       l8180 3184  
                                     l8172 314E                                       l8164 312A  
                                     l8332 0C18                                       l8316 0B90  
                                     l9140 28F6                                       l9212 335A  
                                     l9204 3338                                       l8252 2AFA  
                                     l8244 2AD0                                       l9124 354E  
                                     l8420 3876                                       l9052 07CC  
                                     l9036 0684                                       l9028 05F6  
                                     l9220 270A                                       l8174 315A  
                                     l8326 0BF4                                       l9142 290C  
                                     l8270 2B52                                       l8262 2B30  
                                     l8254 2B00                                       l8238 2ABA  
                                     l9070 3D36                                       l8406 394C  
                                     l9046 074C                                       l8176 3160  
                                     l8184 3192                                       l8168 313A  
                                     l8336 0C7C                                       l8328 0BF8  
                                     l9208 3342                                       l8280 2B8A  
                                     l8416 383E                                       l8520 0048  
                                     l9048 0784                                       l8266 2B3E  
                                     l8282 2B9A                                       l9082 3AF8  
                                     l8362 3F4C                                       l8602 02D6  
                                     l8514 002C                                       l9218 26F2  
                                     l9410 08E6                                       l9402 083C  
                                     l8188 31A6                                       l9148 2912  
                                     l8292 2BF4                                       l8284 2BA0  
                                     l8460 11E4                                       l8380 35C6  
                                     l8516 003E                                       l8508 000E  
                                     l9420 093C                                       l9412 08EA  
                                     l8710 21F8                                       l8702 21C4  
                                     l9254 4080                                       l9502 1B20  
                                     l9158 33B6                                       l8390 35FC  
                                     l8382 35CC                                       l8606 030E  
                                     l8542 0132                                       l8534 0100  
                                     l8526 0080                                       l9406 0866  
                                     l9192 32EC                                       l8464 11EC  
                                     l9168 377E                                       l8640 03BE  
                                     l8632 0398                                       l8616 033E  
                                     l8624 0366                                       l8608 0318  
                                     l8560 01CE                                       l8552 0198  
                                     l8544 013E                                       l8722 225E  
                                     l8458 11E0                                       l8378 35BA  
                                     l8626 0372                                       l8554 01A4  
                                     l8546 0144                                       l8650 044C  
                                     l8570 020C                                       l9450 0AC0  
                                     l9442 0A64                                       l9434 09DC  
                                     l9426 098A                                       l9418 0938  
                                     l8900 1FAE                                       l9196 32F6  
                                     l8812 143A                                       l8572 0242  
                                     l9444 0A8E                                       l9436 09E0  
                                     l9428 098E                                       l8398 3916  
                                     l8646 0420                                       l8638 03B8  
                                     l8582 0272                                       l8566 01F4  
                                     l8558 01B6                                       l9454 0ADC  
                                     l9392 3820                                       l8904 1FE0  
                                     l8920 4062                                       l9480 1A58  
                                     l8840 14AA                                       l8816 1444  
                                     l8760 3966                                       l8584 0278  
                                     l8648 042C                                       l9448 0AB8  
                                     l9386 3800                                       l9394 3836  
                                     l8930 12B2                                       l9490 1AB2  
                                     l8850 151A                                       l8762 3972  
                                     l9458 0B1C                                       l9466 0B52  
                                     l8940 12D8                                       l8692 3DF0  
                                     l8844 14B4                                       l8828 1472  
                                     l8836 148A                                       l8772 1C2C  
                                     l8596 02B4                                       l8756 38E8  
                                     l8934 12C2                                       l8790 1CD4  
                                     l8774 1C32                                       l8766 39B0  
                                     l8960 134E                                       l8952 1326  
                                     l8928 12A8                                       l9488 1A96  
                                     l8696 3E02                                       l8792 1CDA  
                                     l8784 1C78                                       l8970 137E  
                                     l8946 130C                                       l9498 1AF4  
                                     l8980 13AC                                       l8788 1C8A  
                                     l8990 13EA                                       l8894 1F76  
                                     l8886 1F34                                       STR_1 FFDE  
                                     l8968 1372                                       l8896 1F7E  
                                     l8888 1F3E                                       l8986 13C2  
                                     l8978 13A2                                       l9882 36CC  
                                     STR_4 FFFA                                       l8988 13C6  
                                     l9892 36F6                                       STR_7 FFFC  
                                     STR_9 FFF8                                       u8210 3E78  
                    ??_USBCtrlTrfTxService 0001                                       u7600 219E  
                                     u7610 21A0                                       u7540 20FC  
                                     u7550 20FE                                       _UCFG 000F39  
                                     u7560 212E                                       u8520 1298  
                                     u7580 2144                                       u8460 1F24  
                                     u7900 3898                                       _UEP0 000F26  
                                     _UEP1 000F27                                       u7590 2146  
                                     u8528 129C                                       u7578 2132  
                                     u7907 388E                                       _UEIE 000F37  
                                     u8468 1F28                                       u9617 32FE  
                                     u7890 3868                                       u9627 334A  
                                     u9637 4128                                       u9647 3DAA  
                                     _UEIR 000F63                                       _UCON 000F65  
                                     u9657 381C                                       u7897 385E  
                          _CDCDataInHandle 00F0                        ??_RTCC_from_caltime 0091  
   USBStdFeatureReqHandler@current_ep_data 0018                                       _pDst 0033  
                                     _atoi 1C2A                                       _main 368A  
                 ??i2_USBTransferOnePacket 0005                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 010A  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                           __end_of_I2C_Send 4166  
                          _USBDeviceAttach 3D40                                       btemp 0058  
                   __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_I2C_Stop 419E  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00A6  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 1E0E  
                   ??_USBCtrlTrfOutHandler 0003                             terminal_task@i 01F9  
                             ___param_bank 000010                  ??_USBStdFeatureReqHandler 0015  
                            _I2C_LCD_Clear 411A                            ??_terminal_task 018F  
                          ??_terminal_time 00BE                      __end_ofi2_ringbuf_pop 3066  
                    __end_ofi2_ringbuf_num 2D90                      __end_ofi2_ringbuf_put 2FBA  
                       terminal_task@ascii 01F8                                      ??_ISR 001F  
                   __size_of_I2C_IdleCheck 001E                   ??_USBStdGetStatusHandler 0001  
                             print_time@tx 008F                             ?_USBDeviceInit 0001  
                        ??_RTCC_to_caltime 0064                              __CFG_PLLDIV$2 000000  
                             _BAUDCON1bits 000F7E                                _writeBuffer 0364  
                __end_of_RTCC_from_caltime 3FF8                                      ?_atoi 0066  
                                    ?_main 0001                             ??_get_quot_rem 007D  
                          __end_of___awdiv 2B5C                                      _ADRES 000FC3  
                                    STR_20 FFE3                                      STR_13 FFF6  
                                    STR_30 FFD4                                      STR_31 FFF0  
                                    STR_15 FFA3                                      STR_23 FF43  
                                    STR_32 FFC9                                      STR_40 FFBB  
                                    STR_24 FFAC                                      STR_33 FFE1  
                                    STR_41 FFCF                                      STR_25 FF74  
                                    STR_26 FFEC                                      STR_42 FFEE  
                                    STR_34 FFE7                                      STR_35 FFCD  
                                    STR_27 FFEB                                      STR_19 FFE3  
                                    STR_43 FE58                                      STR_36 FFD9  
                                    STR_44 FF88                                      STR_28 FF68  
                          __end_of___awmod 31B0                                      STR_29 FFE9  
                                    STR_37 FFF2                                      STR_45 FF91  
                                    STR_38 FFC2                                      STR_46 FF7F  
                                    STR_39 FFF4                                      STR_47 FF9A  
                                    STR_48 FFB4          __size_of_USBCtrlEPServiceComplete 00F4  
                          __end_of___lldiv 2C18                            ___awdiv@divisor 0062  
                   __end_of_USBDeviceTasks 17E4                                      _LATB2 007C52  
                ?_USBCtrlEPServiceComplete 0001                            __end_of___lwdiv 3614  
                          ringbuf_put@data 006A                            __end_of___lwmod 3964  
                                    i2l300 2DB4                                      i2l232 1BB0  
                                    i2l146 184A                                      i2l170 177A  
                                    i2l308 3C8A                                      i2l158 16CE  
                                    i2l168 1768                                      i2l345 2A8E  
                                    i2l169 17E0                                      i2l450 248A  
                                    i2l452 24D4                                      i2l374 0E28  
                                    i2l295 2D9E                                      i2l359 1D2C  
                                    i2l368 1D90                                      i2l393 0FEE  
                                    i2l298 2E2C                                      i2l299 2DAE  
                                    _UADDR 000F38                            ___awdiv@counter 0064  
                  ST7032_task@st7032_state 0037                                      _TMR1H 000FCF  
                         _UART_buffer_init 3B6A                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F64         __size_of_USBCtrlEPAllowStatusStage 00C4  
                      ___lmul@multiplicand 0071                             __CFG_FCMEN$OFF 000000  
                         __end_of_UART_ISR 3C02            __end_of_USBCtrlEPAllowDataStage 324E  
                                    _sd000 FE54                                      _sd001 FDBE  
                                    _sd002 FDF2                       caltime_to_epoch@year 007F  
                               i2memset@p1 0001                         __size_of_UART_init 0026  
                          __end_of_dpowers FD73                         __size_of_UART_task 0020  
                         __end_of_OSC_init 4194                            __end_of_isdigit 3F56  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003C  
                         ringbuf_delete@rb 0060                                      atoi@a 006B  
                                    atoi@s 0066                          __end_of_I2C_Start 3E7C  
                                    tablat 000FF5                                      plusw2 000FDB  
                        __end_of_CDCInitEP 3768                 __size_of_ringbuf_backspace 008E  
                                    status 000FD8                            __end_of_sprintf 045A  
                    __size_of_I2C_init_old 0012                           __end_ofi2_memset 3F2C  
                        month_length@month 0066                        _USB_CDC_buffer_init 3B1C  
                  __end_of_ringbuf_put_num 359C                    __end_of_ringbuf_put_str 38A0  
                      terminal_task@i_4555 01F7                            putUSBUSART@data 0060  
             __size_of_USBStdSetCfgHandler 00E2                             ?_I2C_LCD_Clear 0001  
                          __initialization 3066                            terminal_task@rx 018D  
                          terminal_task@tx 018B                            terminal_time@tx 00B6  
                             __end_of_atoi 1D1C                               __end_of_main 36FA  
                    _control_signal_bitmap 0046                        ringbuf_init@bufsize 0064  
                         RTCC_from_RTCC@tm 0086                                  ??_I2C_ISR 0001  
                   UART_buffer_init@uartrx 0300                     UART_buffer_init@uarttx 08E8  
                __size_of_USBCtrlEPService 00CE                              print_time@str 0091  
                                   ??_atoi 0068                                     ??_main 00C9  
                            __activetblptr 000003                            ?_USBDeviceTasks 0001  
                     ?_USB_CDC_buffer_init 0001                                ?_USBSuspend 0001  
                             _cdc_mem_type 00F6                               _I2C_init_old 4166  
                                   _BCL1IF 007D0B                              _I2C_IdleCheck 40C6  
                  __end_of_USBDeviceAttach 3D78                           _CDCDataOutHandle 00F2  
                        _getsUSBUSART$1957 006B                          _I2C_LCD_SetCursor 3EA8  
                                   _EECON2 000FA7                                     _ANCON0 000F48  
                                   _ANCON1 000F49                           ___awdiv@dividend 0060  
                       I2C_LCD_Command@ans 0065                            getsUSBUSART@len 0069  
                    __size_of_CDCTxService 017A                                     i2l1305 3BE4  
                                   i2l1306 3BE2                                     i2l1485 0056  
                           __CFG_WDTEN$OFF 000000                                     i2l4320 40F0  
                                   i2l1488 006A                                     i2l5304 32B0  
                                   i2l5314 3CDA                                     i2l7004 16C6  
                                   i2l6302 19F4                                     i2l5318 3CE8  
                                   i2l5334 2E8A                                     i2l5326 2E60  
                                   i2l5430 24B6                                     i2l5422 2478  
                                   i2l5414 2458                                     i2l6320 1D36  
                                   i2l6232 1B5A                                     i2l7032 171A  
                                   i2l5346 2EE6                                     i2l6322 1D3C  
                                   i2l7042 172A                                     i2l7026 16F4  
                                   i2l7018 16E4                                     i2l5604 230E  
                                   i2l6332 1D5E                                     i2l6324 1D42  
                                   i2l6252 1BD6                                     i2l7302 2FA4  
                                   i2l5606 2316                                     i2l5614 234E  
                                   i2l5438 24DE                                     i2l6334 1D64  
                                   i2l6350 1DCA                                     i2l7062 1772  
                                   i2l7312 304A                                     i2l7320 3062  
                                   i2l6504 2A98                                     i2l6280 1958  
                                   i2l6336 1D6A                                     i2l7056 175E  
                                   i2l7048 1736                                     i2l7314 305E  
                                   i2l5562 39CE                                     i2l5802 2028  
                                   i2l6346 1DAC                                     i2l7082 17C0  
                                   i2l5556 39C2                                     i2l5732 3F0A  
                                   i2l5812 205C                                     i2l7084 17DC  
                                   i2l7076 17A0                                     i2l5582 22A0  
                                   i2l6286 197C                                     i2l5558 39C8  
                                   i2l5902 0E24                                     i2l5806 2030  
                                   i2l6710 283A                                     i2l6480 2A12  
                                   i2l5752 295E                                     i2l6464 3A72  
                                   i2l6456 3A2A                                     i2l5840 157A  
                                   i2l5736 3F1A                                     i2l6704 281A  
                                   i2l5586 22AA                                     i2l6298 19DA  
                                   i2l5922 0EE2                                     i2l5850 161C  
                                   i2l5596 22D6                                     i2l6492 2A54  
                                   i2l5940 0F6E                                     i2l5924 0EE4  
                                   i2l5916 0E9E                                     i2l5836 1562  
                                   i2l5828 20A6                                     i2l6708 2834  
                                   i2l6652 3E44                                     i2l8084 0062  
                                   i2l6478 2A0E                                     i2l5862 1686  
                                   i2l5782 31FE                                     i2l6654 3E46  
                                   i2l5944 0F88                                     i2l5928 0F00  
                                   i2l5856 1676                                     i2l5848 1614  
                                   i2l6920 1826                                     i2l6498 2A74  
                                   i2l5970 1050                                     i2l5954 0FCE  
                                   i2l5938 0F52                                     i2l5858 167E  
                                   i2l5874 2DD4                                     i2l5786 321A  
                                   i2l5972 105C                                     i2l5964 100A  
                                   i2l5956 0FDA                                     i2l5884 2E14  
                                   i2l6692 27CC                                     i2l6676 3C86  
                                   i2l6924 182E                                     i2l6696 27D4  
                                   i2l6952 1896                                     i2l6936 1858  
                                   i2l6944 1870                                     i2l6948 188E  
                                   i2l6982 2D36                                     i2l6958 18F2  
                                   i2l6996 16B6                                     i2l9934 39E6  
                                   i2l9936 3A16                         ?_I2C_LCD_SetCursor 0066  
                                   _RCREG1 000FAF                              CDCTxService@i 006A  
                                   _RTCCAL 000F3E                                     _SPBRG1 000FB0  
                            USB_CDC_task@i 0070                                     _SSP1IF 007CF3  
                           __CFG_WPCFG$OFF 000000                                     _SSPBUF 000FC9  
                                   _TXREG1 000FAE                   i2USBTransferOnePacket@ep 0005  
                        ??i2_USBDeviceInit 0009                            i2ringbuf_pop@rb 0009  
                          i2ringbuf_num@rb 0001            __size_ofi2_USBTransferOnePacket 00BA  
                          i2ringbuf_put@rb 0009                             __CFG_WPDIS$OFF 000000  
                       _terminal_task$6211 01F5                         epoch_to_caltime@tm 0081  
                        _shortPacketStatus 0048                        ??_I2C_LCD_SetCursor 0067  
                           __CFG_XINST$OFF 000000                          ?_epoch_to_caltime 0081  
                         ringbuf_put_num@i 0074                            USBDeviceTasks@i 001E  
                    caltime_to_epoch@epoch 0081                         _terminal_time$6212 00BE  
              USBStdFeatureReqHandler@pUEP 0016                   USBTransferOnePacket@data 0061  
               USBCtrlTrfInHandler@lastDTS 0002                            ??_USBDeviceInit 0068  
                             ?_ringbuf_pop 0068                               ?_ringbuf_num 0060  
                             ?_ringbuf_put 0068                      caltime_to_epoch@month 0085  
                                   ___lmul 3614                               ?_putUSBUSART 0060  
                          _caltime_to_RTCC 2356                                     ___wmul 3DB0  
                       ??_epoch_to_caltime 0083                          __end_of_UART_init 4044  
                                ??___awdiv 0064                          __end_of_UART_task 40A6  
                                ??___awmod 0064                                     _d_to_x 3FAA  
                                ??___lldiv 0068                       __end_of_getsUSBUSART 1FE6  
                     ringbuf_put_num@value 0071                               ?_timer0_init 0001  
                        __end_of_RTCC_init 37D2                               ?_timer1_init 0060  
                                ??___lwdiv 0064                          __end_of_RTCC_task 3CCA  
                                ??___lwmod 006B                               ?_timer3_init 0001  
                                   _lcd_tx 004A                          _USBEnableEndpoint 3CCA  
          __size_of_USBStdGetStatusHandler 00BA                                     _memset 3DE6  
                                   clear_0 306E                                     clear_1 3080  
                                   clear_2 308C                                     clear_3 3098  
                                   clear_4 30A4                                     clear_5 30B0  
                                   clear_6 30BC                                     clear_7 30C8  
                          __CFG_CLKOEC$OFF 000000                           ___awdiv@quotient 0066  
                          ___awmod@divisor 0062                            ___awmod@counter 0064  
                                   _x_to_d 40A6                         ?_USBEnableEndpoint 0009  
               __size_of_RTCC_from_caltime 0026                                     _usb_rx 016C  
                                   _usb_tx 0174                                     _strcmp 3964  
                    ??_USB_CDC_buffer_init 0066              __size_of_USBTransferOnePacket 00D8  
                __size_of_caltime_to_epoch 028E                         _terminal_operation 26AA  
                             __pdataCOMRAM 0056                                  ??_isdigit 0060  
                                ?_I2C_Send 0001                               _st7032_state 0049  
                             _CDCTxService 1274                                  ?_I2C_Stop 0001  
                             __mediumconst FD68                  __end_of_I2C_LCD_SetCursor 3ED4  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                        ??_USBEnableEndpoint 000A  
                           ?_I2C_IdleCheck 0001                   USB_CDC_buffer_init@rxbuf 0400  
                 USB_CDC_buffer_init@txbuf 05C8                                  ??_sprintf 007E  
                      ?_terminal_operation 00BF                                _CtrlTrfData 000D38  
                     _controlTransferState 0045                       __CFG_LS48MHZ$SYS48X8 000000  
                               __accesstop 0060                    __end_of__initialization 3104  
                             ?_USB_CDC_ISR 0001                               __pbssBIGRAMl 05C8  
                             ?_USB_CDC_get 0001                       __end_of_get_quot_rem 25D6  
                            ___rparam_used 000001                            ??_I2C_LCD_Clear 0066  
                          _RTCC_from_epoch 4100                   __size_of_USBStallHandler 0046  
                         ?_ringbuf_put_num 006F                           ?_ringbuf_put_str 006F  
                     __CFG_WPEND$PAGE_WPFP 000000                        __size_of_USBSuspend 002C  
                         terminal_task@op0 0114                           terminal_task@op1 012D  
                         terminal_task@op2 02C0                           terminal_task@op3 02D9  
                         terminal_task@buf 0191                             __pcstackCOMRAM 0001  
                __end_of_USBEnableEndpoint 3D06                              __end_of_sd000 FE58  
                            __end_of_sd001 FDF2                              __end_of_sd002 FE26  
                         terminal_time@op0 00B8                           terminal_time@op1 00BA  
                         terminal_time@op2 00BC                               __pidataBANK0 41A4  
                                ?_UART_ISR 0001                       ??_terminal_operation 00C9  
                 __end_of_terminal_at_hand 3902           __size_of_USBCtrlEPAllowDataStage 009E  
            __size_of_USBConfigureEndpoint 0094                                  ?_OSC_init 0001  
              __end_of_USBCtrlTrfInHandler 2A9E                            __CFG_DSWDTPS$G2 000000  
                          _I2C_LCD_Command 3D78                     i2_USBTransferOnePacket 2E4A  
                     terminal_task@command 017C                              _I2C_cfct_flag 003A  
                        _CDCTxService$2005 0068                           I2C_LCD_Command@c 0064  
                               ??_I2C_Send 0062                                 ??_I2C_Stop 0062  
                               _cdc_notice 0100                    __size_of_ringbuf_delete 0026  
                                ?i2_memset 0001                                 _cdc_rx_len 00F7  
                               _cdc_tx_len 00F8                 caltime_to_epoch@month_4002 0080  
                 ??_USBCtrlTrfSetupHandler 001B                           ?_USBDeviceAttach 0001  
                   _USBStdGetStatusHandler 2D90                               sprintf@width 008D  
                       __size_of_main_init 0046                                 __pbssBANK0 00C9  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500   __end_of_APP_DeviceCDCBasicDemoInitialize 3FAA  
__size_of_APP_DeviceCDCBasicDemoInitialize 002A         ??_APP_DeviceCDCBasicDemoInitialize 000D  
        ?_APP_DeviceCDCBasicDemoInitialize 0001           _APP_DeviceCDCBasicDemoInitialize 3F80  
                  __end_of_caltime_to_RTCC 242C                            _RTCC_to_caltime 2C18  
              __size_of_USBWakeFromSuspend 0032                   __end_of_UART_buffer_init 3BB8  
                              _pBDTEntryIn 00D8           __end_of_USBCtrlEPServiceComplete 1C2A  
              __size_of_USBCheckCDCRequest 00D6                      __end_of_weekday_3char FE42  
                    RTCC_task@prev_halfsec 00F4                       USBCtrlTrfRxService@i 0001  
                                  ?___lmul 006D                                 ??_UART_ISR 0010  
                                  ?___wmul 0060                             ST7032_init@buf 0500  
                                  ?_d_to_x 0001                                 ??_OSC_init 0060  
                                  _I2C_ISR 40E4                                    ?_memset 0060  
                     I2C_LCD_SetCursor@col 0069                             ___lmul@product 0075  
                               _device_dsc FE42                       I2C_LCD_SetCursor@row 0066  
                         _USBCtrlEPService 277C                                    ?_x_to_d 0001  
                             I2C_Send@data 0062                                 _ep_data_in 00E4  
                                  ?_strcmp 0060                __end_of_USBCtrlTrfRxService 1A40  
                       _USBCheckStdRequest 1D1C                          _configDescriptor1 FD7B  
                       __CFG_OSC$INTOSCPLL 000000                            ??_I2C_IdleCheck 0060  
                               ??i2_memset 0007                __end_of_USBCtrlTrfTxService 2356  
                      _USBStdSetCfgHandler 1FE6                 __size_of_I2C_LCD_SetCursor 002C  
                   I2C_LCD_SetCursor@F8685 00FC                            __CFG_WDTPS$1024 000000  
                                  _SPBRGH1 000F7F                              _I2C_sent_flag 003B  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                     terminal_operation@tx 00BF                                    _RTCVALH 000F3B  
                                  _RTCVALL 000F3A                        ?_USBCheckStdRequest 0001  
             __size_of_USBStdGetDscHandler 014E                                    _UIEbits 000F36  
                  __end_of_RTCC_from_epoch 411A                       timer1_init@prescaler 0062  
                                  _UIRbits 000F62                           i2ringbuf_pop@ret 000F  
                         __CFG_CFGPLLEN$ON 000000                              _cdc_trf_state 0044  
                            ?_month_length 0066                        epoch_to_caltime@day 0087  
                      epoch_to_caltime@num 008B                          RTCC_from_epoch@tm 008F  
                                _I2C_Start 3E4C                                    _pCDCDst 00EA  
                                  _pCDCSrc 00ED                      __size_of_getsUSBUSART 00EA  
                                  __Hparam 0000                       ?_USBStdSetCfgHandler 0001  
                                _CDCInitEP 36FA                                    __Lparam 0000  
                  __end_of_I2C_LCD_Command 3DB0                          ringbuf_put_num@rb 006F  
               __size_of_USBEnableEndpoint 003C                          ringbuf_put_str@rb 006F  
                               _readBuffer 0280                       ??_USBCheckStdRequest 001B  
            __size_of_USBCtrlTrfOutHandler 005C                              ?_ringbuf_init 0060  
                                  ___awdiv 2A9E                            __size_of___lmul 0076  
                                  ___awmod 310E                                    ___lldiv 2B5C  
                         ??_USBDeviceTasks 001E                            __size_of___wmul 0036  
                    ringbuf_put_num@digits 0073                                    ___lwdiv 359C  
                        ??_USBStallHandler 0001                                    ___lwmod 3902  
                          __size_of_d_to_x 0028                      __end_of_terminal_task 0B70  
                    __end_of_terminal_time 0806                       __size_of_ringbuf_pop 00CC  
                     __size_of_ringbuf_num 00EE                       __size_of_ringbuf_put 00D4  
                          __CFG_STVREN$OFF 000000                          __end_of_main_init 3C48  
                     __size_of_putUSBUSART 0022                epoch_to_caltime@month_cache 00FE  
                                  __pcinit 3066                         getsUSBUSART@buffer 0067  
                          __size_of_memset 0034                  __end_of_configDescriptor1 FDBE  
                                  __ramtop 0F00                       __size_of_timer0_init 003A  
                     __size_of_timer1_init 0050                                    __ptext0 368A  
                                  __ptext1 0806                                    __ptext2 26AA  
                                  __ptext3 045A                                    __ptext4 38A0  
                                  __ptext5 348E                                    __ptext6 0000  
                                  __ptext7 383C                                    __ptext8 3FD2  
                                  __ptext9 3964                                    _inPipes 00D2  
                     __size_of_timer3_init 002C                            __size_of_x_to_d 0020  
                            I2C_LCD_Puts@s 0064                _USBDeferOUTDataStagePackets 003E  
                                _T0CONbits 000FD5                           _time_change_flag 00F9  
                         _caltime_to_epoch 0B70                            __size_of_strcmp 005C  
                             __size_of_ISR 009E                                  _T1CONbits 000FCD  
                                  _dpowers FD69                               ??_USBSuspend 0015  
                  __size_of_RTCC_from_RTCC 001A                                    _isdigit 3F2C  
                                _T3CONbits 000F79                           ___awmod@dividend 0060  
                            I2C_LCD_init@i 0068                                  _T5CONbits 000F22  
                          i2_USBDeviceInit 17E4                           i2USBDeviceInit@i 0009  
                                  _uart_rx 015C                                    _uart_tx 0164  
                       __end_of_USB_CD_Ptr FD7B                                    _sprintf 0000  
          __size_of_USBCtrlTrfSetupHandler 008E                    __end_of_RTCC_to_caltime 2CD4  
                    __size_of_get_quot_rem 00D4                       end_of_initialization 3104  
                             _getsUSBUSART 1EFC                     __size_ofi2_ringbuf_pop 00AC  
                   __size_ofi2_ringbuf_num 00BC                     __size_ofi2_ringbuf_put 00B6  
                             _CTMUCONHbits 000FB3                         __end_of_USB_SD_Ptr FD79  
                             _CTMUCONLbits 000FB2                        _pBDTEntryEP0OutNext 0031  
                           ??_month_length 0067                                    memset@c 0062  
                                  memset@n 0064                                    memset@p 0066  
          _dummy_encapsulated_cmd_response 0154                   ?_USBStdFeatureReqHandler 0001  
                         ?_caltime_to_RTCC 0069                                 ?_I2C_Start 0062  
                    ??_USBStdSetCfgHandler 0015                       __size_of_USB_CDC_ISR 0006  
                          ___lldiv@divisor 0064                       timer3_init@prescaler 0061  
                               ?_CDCInitEP 0001                            ___lldiv@counter 006C  
                     __size_of_USB_CDC_get 002A                         __end_of_USBSuspend 3F00  
                           ??_ringbuf_init 0066                    _USBCtrlEPAllowDataStage 31B0  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                   _USBCtrlEPServiceComplete 1B36  
                                  strcmp@r 0065                 _USBStatusStageEnabledFlag1 0041  
               _USBStatusStageEnabledFlag2 0042                         USBEnableEndpoint@p 000A  
                                _UART_init 401E                                  _UART_task 4086  
                         __CFG_DSBOREN$OFF 000000                                  _RTCC_init 3768  
                                _RTCC_task 3C8E                  epoch_to_caltime@day_cache 0112  
                       ST7032_cursor@F8640 0056                               _get_quot_rem 2502  
                               _print_time 348E                             _ringbuf_delete 3FF8  
                __size_of_epoch_to_caltime 01F2                           __CFG_CPUDIV$OSC1 000000  
                       _BothEP0OutUOWNsSet 0038                        RTCC_from_caltime@tm 008F  
                        __size_of_I2C_Send 0018                          __size_of_I2C_Stop 000A  
                USBConfigureEndpoint@EPNum 0006                 ?_USBCtrlEPAllowStatusStage 0001  
                            ?_USB_CDC_init 0001                              ?_USB_CDC_send 006C  
                            ?_USB_CDC_task 0001                           ?_RTCC_from_epoch 008F  
      USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                  _USTATcopy 0055  
                  timer1_init@clock_select 0060               __end_of_USBTransferOnePacket 227E  
                         __CFG_IOL1WAY$OFF 000000                          putUSBUSART@length 0062  
                      __CFG_MSSP7B_EN$MSK7 000000                           ?_I2C_LCD_Command 0001  
                           ringbuf_init@rb 0060                     _USBCtrlTrfSetupHandler 3400  
              __end_of_USB_CDC_buffer_init 3B6A                             ringbuf_pop@ret 006E  
                            i2_ringbuf_pop 2FBA                              i2_ringbuf_num 2CD4  
                  ?i2_USBTransferOnePacket 0001                              i2_ringbuf_put 2F04  
                    __end_of_USBDeviceInit 1550                          ?_terminal_at_hand 00AF  
                           __end_of___lmul 368A                             __end_of___wmul 3DE6  
                           __end_of_d_to_x 3FD2                              __pidataCOMRAM 41A7  
                        __size_of_UART_ISR 004A                    __end_ofi2_USBDeviceInit 1928  
                   __end_of_ringbuf_delete 401E                                 ?_UART_init 0001  
                       ??_terminal_at_hand 00B6                                  i2memset@c 0003  
                                i2memset@n 0005                                  i2memset@p 0007  
                               ?_UART_task 0001                             __end_of_memset 3E1A  
                               ?_RTCC_init 0001                          __size_of_OSC_init 000E  
                               ?_RTCC_task 0001                           __CFG_DSWDTEN$OFF 000000  
                        _USBBusIsSuspended 00F5                             __end_of_x_to_d 40C6  
                    epoch_to_caltime@month 008A                             __end_of_strcmp 39C0  
                      start_initialization 3066                           month_length@year 006B  
                  ?_USBStdGetStatusHandler 0001                                __end_of_ISR 00A6  
            USBCtrlTrfRxService@byteToRead 0002                              ?_I2C_LCD_Puts 0064  
                            ?_I2C_LCD_init 0001                                _cdc_data_rx 0200  
                           ??_USB_CDC_init 0069                                _cdc_data_tx 0240  
                        __size_ofi2_memset 002C                             ??_USB_CDC_send 006E  
                            UART_ISR@ascii 0010                             ??_USB_CDC_task 006F  
             __end_of_USBConfigureEndpoint 32E2                           ?_RTCC_to_caltime 0062  
          __end_of_USBStdFeatureReqHandler 1082          __end_of_USBCtrlEPAllowStatusStage 29DA  
                 __end_of_USBCtrlEPService 284A                                ??_I2C_Start 0063  
                ??_USBCtrlEPAllowDataStage 0002                                ??_CDCInitEP 000D  
                           USBDeviceInit@i 0068                          ?_UART_buffer_init 0001  
                    __end_of_I2C_LCD_Clear 4134                     _pBDTEntryEP0OutCurrent 002F  
                  USBTransferOnePacket@dir 0060                    USBTransferOnePacket@len 0063  
           __end_ofi2_USBTransferOnePacket 2F04                        ringbuf_put_num@temp 0075  
                                 ??___lmul 0075                         ??_UART_buffer_init 0066  
                           ?i2_ringbuf_pop 0009                             ?i2_ringbuf_num 0001  
                           ?i2_ringbuf_put 0009                                   ??___wmul 0064  
                      _USBStdGetDscHandler 1550                                   ??_d_to_x 0068  
              __size_of_terminal_operation 00D2                          __CFG_ADCSEL$BIT12 000000  
                              __pdataBANK0 00FC                                   ?_I2C_ISR 0001  
                                 ??_memset 0066                   __size_of_ringbuf_put_num 0082  
                 __size_of_ringbuf_put_str 0064                                   ??_x_to_d 0060  
                          ?_ringbuf_delete 0060                                   ??_strcmp 0064  
                     __end_of_month_length 21A6                             _RTCC_from_RTCC 4134  
                   _USBActiveConfiguration 0054             __end_of_USBStdGetStatusHandler 2E4A  
                              ?_print_time 008F                                __pbssCOMRAM 002D  
                      RTCC_to_caltime@dumy 0064                              __pcstackBANK0 0060  
                            __pcstackBANK1 018B               __size_of_USBCtrlTrfInHandler 00C4  
                           ??_I2C_LCD_Puts 0066                             ??_I2C_LCD_init 0067  
                     __end_of_ringbuf_init 3ACC                       ?_USBStdGetDscHandler 0001  
                             _isdigit$5642 0061                 __end_of_USBWakeFromSuspend 3E4C  
                              sprintf@flag 008B                                sprintf@prec 0082  
                          _USBStallHandler 3C48                               _pBDTEntryOut 00DE  
               __end_of_USBCheckCDCRequest 2502                   __end_of_caltime_to_epoch 0DFE  
                          millis_timer@cnt 0035                   __size_of_USBDeviceAttach 0038  
                  USB_CDC_get@numBytesRead 006D                           ___lwdiv@dividend 0060  
                                __pintcode 0008                              __pmediumconst FD68  
                                 ?___awdiv 0060                                  __ptext100 2CD4  
                                __ptext101 40E4                                   ?___awmod 0060  
                                 ?___lldiv 0060                                   ?___lwdiv 0060  
                                 ?___lwmod 0067                     __end_of_RTCC_from_RTCC 414E  
                          I2C_LCD_Puts@ans 0067                           ?i2_USBDeviceInit 0001  
                              ??_UART_init 0066                                ??_UART_task 0068  
                              ??_RTCC_init 0091                                ??_RTCC_task 0088  
                     _USBTransferOnePacket 21A6                                  _main_init 3C02  
                              I2C_Start@rw 0062                                   ?_isdigit 0001  
                         _epoch_to_caltime 1082                                   _I2C_Send 414E  
                                 _I2C_Stop 4194                       __CFG_RTCOSC$T1OSCREF 000000  
                                 _I2C_busy 0039                      __end_of_I2C_IdleCheck 40E4  
                              _PADCFG1bits 000F3C               __end_of_USBCtrlTrfOutHandler 3A78  
                      ringbuf_backspace@rb 0068                              ?_I2C_init_old 0001  
                    ??_USBStdGetDscHandler 0001                                _ep_data_out 00E7  
                         ___lwdiv@quotient 0065                      terminal_at_hand@value 00B5  
                          ST7032_task@wait 002D                                   ?_sprintf 006C  
             __size_of_USBCtrlTrfRxService 0118              USBConfigureEndpoint@direction 0001  
                                d_to_x@dec 0068                                   _CTMUCONH 000FB3  
                                 _CTMUCONL 000FB2                                   _CTMUICON 000FB1  
             __size_of_USBCtrlTrfTxService 00D8                   ringbuf_init@internal_buf 0062  
                           ___wmul@product 0064                 ??_USBCtrlEPServiceComplete 0002  
                                 _IPR1bits 000F9F                                   _IPR2bits 000FA2  
                                 _PIE1bits 000F9D                                   _PIE2bits 000FA0  
                                 _IPR5bits 000F99                                   _PIE5bits 000F91  
                      __size_of_print_time 008C                            ??i2_ringbuf_pop 000B  
                          ??i2_ringbuf_num 0003                            ??i2_ringbuf_put 000C  
                                 _PIR1bits 000F9E                                   i2u427_40 2300  
                                 _PIR2bits 000FA1                                   i2u427_47 22F6  
                                 i2u429_40 2340                                   i2u461_40 166A  
                                 i2u429_47 2336                                   i2u461_47 1660  
                                 _PIR5bits 000F98                                   i2u458_40 15D8  
               epoch_to_caltime@year_cache 00FA                                   i2u458_47 15CE  
                                 i2u459_40 160E                                   i2u459_47 1604  
                USBCtrlEPService@setup_cnt 001D                              ??_ringbuf_pop 006A  
                            ??_ringbuf_num 0062                              ??_ringbuf_put 006B  
                                 _RCONbits 000FD0                              ??_putUSBUSART 0063  
                                 _UEP0bits 000F26                 _USBDeferINDataStagePackets 003D  
                                 _UART_ISR 3BB8                      terminal_operation@op0 00C1  
                    terminal_operation@op1 00C3                      terminal_operation@op2 00C5  
                    terminal_operation@op3 00C7                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                              ??_timer0_init 0060  
                            ??_timer1_init 0061                __size_of_USBCheckStdRequest 00F2  
                            ??_timer3_init 0060                                   _SSP1STAT 000FC7  
                                 _UCONbits 000F65                       __end_of_USB_CDC_init 4186  
                     __end_of_USB_CDC_send 4086                       __end_of_USB_CDC_task 1B36  
                     _USBConfigureEndpoint 324E                                   _OSC_init 4186  
                          ?_RTCC_from_RTCC 0086                           __size_of_I2C_ISR 001C  
         __size_of_USBStdFeatureReqHandler 0284                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                          ___wmul@multiplier 0060  
                    ?_USBTransferOnePacket 0060                           __CFG_SOSCSEL$LOW 000000  
                               ?_main_init 0001                              ?_CDCTxService 0001  
                             _RemoteWakeup 003C                         I2C_LCD_init@i_4468 0069  
                                 i2_memset 3F00                          i2ringbuf_put@data 000B  
                           ??_I2C_init_old 0060                          ??_ringbuf_put_num 0074  
                        ??_ringbuf_put_str 0073                              ringbuf_pop@rb 0068  
                            ringbuf_num@rb 0060                    __end_of_USBStallHandler 3C8E  
                            I2C_Start@adrs 0063                              ringbuf_put@rb 0068  
                        ___lmul@multiplier 006D                                _INTCON2bits 000FF1  
              ??_USBCtrlEPAllowStatusStage 0001                __end_of_USBStdSetCfgHandler 20C8  
                     epoch_to_caltime@year 0089                              ??_USB_CDC_ISR 001F  
                   __size_of_terminal_task 036A                     __size_of_terminal_time 03AC  
                            ??_USB_CDC_get 006D                         __end_of_device_dsc FE54  
                  ?_USBCtrlTrfSetupHandler 0001                    USBStdGetStatusHandler@p 0002  
                                 __Hrparam 0000                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 0064                       __end_of_I2C_LCD_Puts 383C  
                                 _SetupPkt 000D30                              _weekday_3char FE26  
                     __end_of_I2C_LCD_init 3372                      __size_of_month_length 00DE  
                       ringbuf_put_str@str 0071                      ?_USBConfigureEndpoint 0001  
                 __size_of_caltime_to_RTCC 00D6                          ??_USBDeviceAttach 0060  
                         __size_of___awdiv 00BE                           __size_of___awmod 00A2  
                        I2C_IdleCheck@mask 0061                           __size_of___lldiv 00BC  
                         __size_of___lwdiv 0078                           __size_of___lwmod 0062  
                      __end_of_ringbuf_pop 2916                        __end_of_ringbuf_num 1EFC  
                      __end_of_ringbuf_put 26AA                        __end_of_putUSBUSART 4066  
                              _line_coding 0184                             ??_CDCTxService 0067  
                      __end_of_timer0_init 3D40                      __size_of_ringbuf_init 0054  
                      __end_of_timer1_init 3B1C                                 sprintf@len 0089  
                      __end_of_timer3_init 3EA8                                 sprintf@val 0087  
                         __size_of_isdigit 002A                    __size_of_USBDeviceTasks 0146  
                          ___lwdiv@divisor 0062                            ___lwdiv@counter 0064  
                     timer0_init@prescaler 0061                                   __ptext10 1C2A  
                                 __ptext11 3F2C                                   __ptext20 3ACC  
                                 __ptext12 3DB0                                   __ptext21 3D06  
                                 __ptext13 351A                                   __ptext30 3768  
                                 __ptext22 4178                                   __ptext14 3902  
                                 __ptext31 4100                                   __ptext23 3B1C  
                                 __ptext15 359C                                   __ptext40 4166  
                                 __ptext32 1082                                   __ptext24 13EE  
                                 __ptext16 3FF8                                   __ptext41 411A  
                                 __ptext33 2502                                   __ptext25 3DE6  
                                 __ptext17 3372                                   __ptext50 21A6  
                                 __ptext42 1A40                                   __ptext34 2B5C  
                                 __ptext26 3D40                                   __ptext18 3C02  
                                 __ptext51 4086                                   __ptext43 25D6  
                                 __ptext35 2356                                   __ptext27 401E  
                                 __ptext19 3E7C                                   __ptext60 40A6  
                                 __ptext52 1E0E                                   __ptext44 284A  
                                 __ptext36 3FAA                                   __ptext28 3B6A  
                                 __ptext61 3EA8                                   __ptext53 3C8E  
                                 __ptext45 4066                                   __ptext37 2A9E  
                                 __ptext29 3A78                                   __ptext70 169E  
                                 __ptext62 3D78                                   __ptext54 4134  
                                 __ptext46 4044                                   __ptext38 4186  
                                 __ptext71 17E4                                   __ptext63 37D2  
                                 __ptext55 0B70                                   __ptext47 3F56  
                                 __ptext39 32E2                                   __ptext80 1FE6  
                                 __ptext72 3E1A                                   __ptext64 4194  
                                 __ptext56 20C8                                   __ptext48 1EFC  
                                 __ptext81 3F00                                   __ptext73 3ED4  
                                 __ptext65 3E4C                                   __ptext57 310E  
                                 __ptext49 1274                                   __ptext90 3CCA  
                                 __ptext82 2D90                                   __ptext74 3C48  
                                 __ptext66 414E                                   __ptext58 3614  
                                 __ptext91 324E                                   __ptext83 1550  
                                 __ptext75 277C                                   __ptext67 40C6  
                                 __ptext59 2C18                                   __ptext92 3A1C  
                                 __ptext84 0DFE                                   __ptext76 3400  
                                 __ptext93 1928                                   __ptext85 39C0  
                                 __ptext77 1B36                                   __ptext69 419E  
                                 __ptext94 2916                                   __ptext86 242C  
                                 __ptext78 31B0                                   __ptext95 29DA  
                                 __ptext87 3F80                                   __ptext79 1D1C  
                                 __ptext96 227E                                   __ptext88 36FA  
                                 __ptext97 3BB8                                   __ptext89 2E4A  
                                 __ptext98 2F04                                   __ptext99 2FBA  
                             _SSP1CON1bits 000FC6                               _SSP1CON2bits 000FC5  
                __size_of_terminal_at_hand 0062                           __size_of_sprintf 045A  
                     terminal_at_hand@hand 00B1                              __size_of_atoi 00F2  
           __end_of_USBCtrlTrfSetupHandler 348E                              __size_of_main 0070  
                        ?_USBCtrlEPService 0001                               _month_length 20C8  
                       ??_USBCtrlEPService 001B                   __size_of_RTCC_from_epoch 001A  
                      _USBCtrlTrfInHandler 29DA                        __end_of_USB_CDC_ISR 41A4  
                      __end_of_USB_CDC_get 3F80                                   _outPipes 00C9  
                         ??_ringbuf_delete 0062                       _USBCtrlTrfOutHandler 3A1C  
                                 int$flags 0058                               _ringbuf_init 3A78  
                                 atoi@sign 006A                  _USBCtrlEPAllowStatusStage 2916  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                   ??_USBTransferOnePacket 0064                              _terminal_task 0806  
                            _terminal_time 045A                   __size_of_I2C_LCD_Command 0038  
                _USBDeferStatusStagePacket 003F                               ??_print_time 0091  
                 CDCTxService@byte_to_send 006B                                ??_main_init 0091  
             __size_of_USB_CDC_buffer_init 004E                  __size_of_UART_buffer_init 004E  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 0001              USBCtrlTrfTxService@byteToSend 0001  
             I2C_LCD_SetCursor@row_offsets 0067                                   isdigit@c 0062  
                                 memset@p1 0060                           ?_USBStallHandler 0001  
                 USBStdFeatureReqHandler@p 0019                           get_quot_rem@quot 0079  
                terminal_task@command_init 00FB                          RTCC_to_caltime@tm 0062  
                       USB_CDC_send@length 006C                                   intlevel2 0000  
                                sprintf@ap 0083                                  sprintf@cp 0085  
                                sprintf@sp 006C                     __size_of_USBDeviceInit 0162  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3A1C   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 0013           ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
          _USER_USB_CALLBACK_EVENT_HANDLER 39C0                           ___lwmod@dividend 0067  
             i2USBTransferOnePacket@handle 0006                           ___lldiv@dividend 0060  
                               _RCSTA1bits 000FAC                        terminal_at_hand@max 00B4  
                      terminal_at_hand@min 00B3                          ?_caltime_to_epoch 0079  
                        _ringbuf_backspace 3372                   __end_of_epoch_to_caltime 1274  
                 __size_of_RTCC_to_caltime 00BC                      __size_of_USB_CDC_init 000E  
                    __size_of_USB_CDC_send 0020                      __size_of_USB_CDC_task 00F6  
                       USB_CDC_task@length 0072                                 _OSCCONbits 000FD3  
               __end_of_terminal_operation 277C                         __end_of_print_time 351A  
               i2USBTransferOnePacket@data 0002                         ??_caltime_to_epoch 007B  
                       ?_ringbuf_backspace 0068                       __end_of_I2C_init_old 4178  
                   ??_USBConfigureEndpoint 0002                      ?_USBCtrlTrfOutHandler 0001  
                              _ringbuf_pop 284A                                _ringbuf_num 1E0E  
                              _ringbuf_put 25D6                                _putUSBUSART 4044  
                      _USBCtrlTrfRxService 1928                                _timer0_init 3D06  
                       _USBWakeFromSuspend 3E1A                                _timer1_init 3ACC  
                              _timer3_init 3E7C                             ?_terminal_task 018B  
                           ?_terminal_time 00B6                    _USBStdFeatureReqHandler 0DFE  
                       _USBCheckCDCRequest 242C                        _USBCtrlTrfTxService 227E  
                      ??_ringbuf_backspace 006A                            get_quot_rem@div 007B  
                          get_quot_rem@num 007D                                 _RTCCFGbits 000F3F  
                                 sprintf@c 008C                                   sprintf@f 006E  
                      ?_USBWakeFromSuspend 0001                                   strcmp@s1 0060  
                                 strcmp@s2 0062                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 0069                          caltime_to_RTCC@tm 0069  
                        ??_caltime_to_RTCC 006B                      ??_USBCtrlTrfInHandler 0002  
                    _USBAlternateInterface 0052                            ___lwmod@counter 006B  
                       terminal_at_hand@tx 00AF                        ?_USBCheckCDCRequest 0001  
                i2USBTransferOnePacket@dir 0001                  i2USBTransferOnePacket@len 0004  
                      USBEnableEndpoint@ep 000C                            _endpoint_number 0047  
                   __size_of_I2C_LCD_Clear 001A                       ?_USBCtrlTrfRxService 0001  
          epoch_to_caltime@day_since_epoch 0085                              ?_getsUSBUSART 0067  
                             _USB_CDC_init 4178                               _USB_CDC_send 4066  
                             _USB_CDC_task 1A40                   ?_USBCtrlEPAllowDataStage 0001  
                     ?_USBCtrlTrfTxService 0001                                _USB_CDC_ISR 419E  
                __end_of_ringbuf_backspace 3400               _USBStatusStageTimeoutCounter 0043  
                    __size_of_I2C_LCD_Puts 006A                                _USB_CDC_get 3F56  
                    __size_of_I2C_LCD_init 0090                       ??_USBWakeFromSuspend 0015  
               USBTransferOnePacket@handle 0065                       __end_of_CDCTxService 13EE  
                     ??_USBCheckCDCRequest 0001                                 _USB_CD_Ptr FD79  
                         ??_RTCC_from_RTCC 0088  
