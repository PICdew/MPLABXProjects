

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:34:36 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   122                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124                           	dabs	1,0xD00,48,_BDT
   125                           	dabs	1,0xD38,8,_CtrlTrfData
   126                           	dabs	1,0xD30,8,_SetupPkt
   127  0000                     
   128                           	psect	idataBANK0
   129  014128                     __pidataBANK0:
   130                           	opt stack 0
   131                           
   132                           ;initializer for ST7032_cursor@F8665
   133  014128  00                 	db	0
   134  014129  40                 	db	64
   135                           
   136                           ;initializer for epoch_to_caltime@month_cache
   137  01412A  01                 	db	1
   138                           
   139                           	psect	idataBANK1
   140  01412B                     __pidataBANK1:
   141                           	opt stack 0
   142                           
   143                           ;initializer for I2C_LCD_SetCursor@F8685
   144  01412B  00                 	db	0
   145  01412C  40                 	db	64
   146                           
   147                           	psect	mediumconst
   148  00FD68                     __pmediumconst:
   149                           	opt stack 0
   150  00FD68  00                 	db	0
   151  00FD69                     _dpowers:
   152                           	opt stack 0
   153  00FD69  0001               	dw	1
   154  00FD6B  000A               	dw	10
   155  00FD6D  0064               	dw	100
   156  00FD6F  03E8               	dw	1000
   157  00FD71  2710               	dw	10000
   158  00FD73                     __end_of_dpowers:
   159                           	opt stack 0
   160  00FD73                     _USB_SD_Ptr:
   161                           	opt stack 0
   162  00FD73  54                 	db	low _sd000
   163  00FD74  FE                 	db	high _sd000
   164  00FD75  BE                 	db	low _sd001
   165  00FD76  FD                 	db	high _sd001
   166  00FD77  F2                 	db	low _sd002
   167  00FD78  FD                 	db	high _sd002
   168  00FD79                     __end_of_USB_SD_Ptr:
   169                           	opt stack 0
   170  00FD79                     _USB_CD_Ptr:
   171                           	opt stack 0
   172  00FD79  7B                 	db	low _configDescriptor1
   173  00FD7A  FD                 	db	high _configDescriptor1
   174  00FD7B                     __end_of_USB_CD_Ptr:
   175                           	opt stack 0
   176  00FD7B                     _configDescriptor1:
   177                           	opt stack 0
   178  00FD7B  09                 	db	9
   179  00FD7C  02                 	db	2
   180  00FD7D  43                 	db	67
   181  00FD7E  00                 	db	0
   182  00FD7F  02                 	db	2
   183  00FD80  01                 	db	1
   184  00FD81  00                 	db	0
   185  00FD82  C0                 	db	192
   186  00FD83  32                 	db	50
   187  00FD84  09                 	db	9
   188  00FD85  04                 	db	4
   189  00FD86  00                 	db	0
   190  00FD87  00                 	db	0
   191  00FD88  01                 	db	1
   192  00FD89  02                 	db	2
   193  00FD8A  02                 	db	2
   194  00FD8B  01                 	db	1
   195  00FD8C  00                 	db	0
   196  00FD8D  05                 	db	5
   197  00FD8E  24                 	db	36
   198  00FD8F  00                 	db	0
   199  00FD90  10                 	db	16
   200  00FD91  01                 	db	1
   201  00FD92  04                 	db	4
   202  00FD93  24                 	db	36
   203  00FD94  02                 	db	2
   204  00FD95  02                 	db	2
   205  00FD96  05                 	db	5
   206  00FD97  24                 	db	36
   207  00FD98  06                 	db	6
   208  00FD99  00                 	db	0
   209  00FD9A  01                 	db	1
   210  00FD9B  05                 	db	5
   211  00FD9C  24                 	db	36
   212  00FD9D  01                 	db	1
   213  00FD9E  00                 	db	0
   214  00FD9F  01                 	db	1
   215  00FDA0  07                 	db	7
   216  00FDA1  05                 	db	5
   217  00FDA2  81                 	db	129
   218  00FDA3  03                 	db	3
   219  00FDA4  08                 	db	8
   220  00FDA5  00                 	db	0
   221  00FDA6  02                 	db	2
   222  00FDA7  09                 	db	9
   223  00FDA8  04                 	db	4
   224  00FDA9  01                 	db	1
   225  00FDAA  00                 	db	0
   226  00FDAB  02                 	db	2
   227  00FDAC  0A                 	db	10
   228  00FDAD  00                 	db	0
   229  00FDAE  00                 	db	0
   230  00FDAF  00                 	db	0
   231  00FDB0  07                 	db	7
   232  00FDB1  05                 	db	5
   233  00FDB2  02                 	db	2
   234  00FDB3  02                 	db	2
   235  00FDB4  40                 	db	64
   236  00FDB5  00                 	db	0
   237  00FDB6  00                 	db	0
   238  00FDB7  07                 	db	7
   239  00FDB8  05                 	db	5
   240  00FDB9  82                 	db	130
   241  00FDBA  02                 	db	2
   242  00FDBB  40                 	db	64
   243  00FDBC  00                 	db	0
   244  00FDBD  00                 	db	0
   245  00FDBE                     __end_of_configDescriptor1:
   246                           	opt stack 0
   247  00FDBE                     _sd001:
   248                           	opt stack 0
   249  00FDBE  34                 	db	52
   250  00FDBF  03                 	db	3
   251  00FDC0  004D               	dw	77
   252  00FDC2  0069               	dw	105
   253  00FDC4  0063               	dw	99
   254  00FDC6  0072               	dw	114
   255  00FDC8  006F               	dw	111
   256  00FDCA  0063               	dw	99
   257  00FDCC  0068               	dw	104
   258  00FDCE  0069               	dw	105
   259  00FDD0  0070               	dw	112
   260  00FDD2  0020               	dw	32
   261  00FDD4  0054               	dw	84
   262  00FDD6  0065               	dw	101
   263  00FDD8  0063               	dw	99
   264  00FDDA  0068               	dw	104
   265  00FDDC  006E               	dw	110
   266  00FDDE  006F               	dw	111
   267  00FDE0  006C               	dw	108
   268  00FDE2  006F               	dw	111
   269  00FDE4  0067               	dw	103
   270  00FDE6  0079               	dw	121
   271  00FDE8  0020               	dw	32
   272  00FDEA  0049               	dw	73
   273  00FDEC  006E               	dw	110
   274  00FDEE  0063               	dw	99
   275  00FDF0  002E               	dw	46
   276  00FDF2                     __end_of_sd001:
   277                           	opt stack 0
   278  00FDF2                     _sd002:
   279                           	opt stack 0
   280  00FDF2  34                 	db	52
   281  00FDF3  03                 	db	3
   282  00FDF4  0043               	dw	67
   283  00FDF6  0044               	dw	68
   284  00FDF8  0043               	dw	67
   285  00FDFA  0020               	dw	32
   286  00FDFC  0052               	dw	82
   287  00FDFE  0053               	dw	83
   288  00FE00  002D               	dw	45
   289  00FE02  0032               	dw	50
   290  00FE04  0033               	dw	51
   291  00FE06  0032               	dw	50
   292  00FE08  0020               	dw	32
   293  00FE0A  0045               	dw	69
   294  00FE0C  006D               	dw	109
   295  00FE0E  0075               	dw	117
   296  00FE10  006C               	dw	108
   297  00FE12  0061               	dw	97
   298  00FE14  0074               	dw	116
   299  00FE16  0069               	dw	105
   300  00FE18  006F               	dw	111
   301  00FE1A  006E               	dw	110
   302  00FE1C  0020               	dw	32
   303  00FE1E  0044               	dw	68
   304  00FE20  0065               	dw	101
   305  00FE22  006D               	dw	109
   306  00FE24  006F               	dw	111
   307  00FE26                     __end_of_sd002:
   308                           	opt stack 0
   309  00FE26                     _weekday_3char:
   310                           	opt stack 0
   311  00FE26  53                 	db	83
   312  00FE27  55                 	db	85
   313  00FE28  4E                 	db	78
   314  00FE29  00                 	db	0
   315  00FE2A  4D                 	db	77
   316  00FE2B  4F                 	db	79
   317  00FE2C  4E                 	db	78
   318  00FE2D  00                 	db	0
   319  00FE2E  54                 	db	84
   320  00FE2F  55                 	db	85
   321  00FE30  45                 	db	69
   322  00FE31  00                 	db	0
   323  00FE32  57                 	db	87
   324  00FE33  45                 	db	69
   325  00FE34  44                 	db	68
   326  00FE35  00                 	db	0
   327  00FE36  54                 	db	84
   328  00FE37  48                 	db	72
   329  00FE38  55                 	db	85
   330  00FE39  00                 	db	0
   331  00FE3A  46                 	db	70
   332  00FE3B  52                 	db	82
   333  00FE3C  49                 	db	73
   334  00FE3D  00                 	db	0
   335  00FE3E  53                 	db	83
   336  00FE3F  41                 	db	65
   337  00FE40  54                 	db	84
   338  00FE41  00                 	db	0
   339  00FE42                     __end_of_weekday_3char:
   340                           	opt stack 0
   341  00FE42                     _device_dsc:
   342                           	opt stack 0
   343  00FE42  12                 	db	18
   344  00FE43  01                 	db	1
   345  00FE44  0200               	dw	512
   346  00FE46  02                 	db	2
   347  00FE47  00                 	db	0
   348  00FE48  00                 	db	0
   349  00FE49  08                 	db	8
   350  00FE4A  04D8               	dw	1240
   351  00FE4C  000A               	dw	10
   352  00FE4E  0100               	dw	256
   353  00FE50  01                 	db	1
   354  00FE51  02                 	db	2
   355  00FE52  00                 	db	0
   356  00FE53  01                 	db	1
   357  00FE54                     __end_of_device_dsc:
   358                           	opt stack 0
   359  00FE54                     _sd000:
   360                           	opt stack 0
   361  00FE54  04                 	db	4
   362  00FE55  03                 	db	3
   363  00FE56  0409               	dw	1033
   364  00FE58                     __end_of_sd000:
   365                           	opt stack 0
   366  0000                     _ANCON0	set	3912
   367  0000                     _ANCON1	set	3913
   368  0000                     _PADCFG1bits	set	3900
   369  0000                     _RTCCAL	set	3902
   370  0000                     _RTCCFGbits	set	3903
   371  0000                     _RTCVALH	set	3899
   372  0000                     _RTCVALL	set	3898
   373  0000                     _T5CONbits	set	3874
   374  0000                     _UADDR	set	3896
   375  0000                     _UCFG	set	3897
   376  0000                     _UEIE	set	3895
   377  0000                     _UEP0bits	set	3878
   378  0000                     _UIE	set	3894
   379  0000                     _UIEbits	set	3894
   380  0000                     _UEP0	set	3878
   381  0000                     _UEP1	set	3879
   382  0000                     _ADRES	set	4035
   383  0000                     _ADCON0bits	set	4034
   384  0000                     _ADCON1bits	set	4033
   385  0000                     _BAUDCON1bits	set	3966
   386  0000                     _CTMUCONH	set	4019
   387  0000                     _CTMUCONHbits	set	4019
   388  0000                     _CTMUCONL	set	4018
   389  0000                     _CTMUCONLbits	set	4018
   390  0000                     _CTMUICON	set	4017
   391  0000                     _EECON2	set	4007
   392  0000                     _INTCON2bits	set	4081
   393  0000                     _INTCONbits	set	4082
   394  0000                     _IPR1bits	set	3999
   395  0000                     _IPR2bits	set	4002
   396  0000                     _IPR5bits	set	3993
   397  0000                     _OSCCONbits	set	4051
   398  0000                     _OSCTUNEbits	set	3995
   399  0000                     _PIE1bits	set	3997
   400  0000                     _PIE2bits	set	4000
   401  0000                     _PIE5bits	set	3985
   402  0000                     _PIR1bits	set	3998
   403  0000                     _PIR2bits	set	4001
   404  0000                     _PIR5bits	set	3992
   405  0000                     _RCONbits	set	4048
   406  0000                     _RCREG1	set	4015
   407  0000                     _RCSTA1bits	set	4012
   408  0000                     _SPBRG1	set	4016
   409  0000                     _SPBRGH1	set	3967
   410  0000                     _SSP1ADD	set	4040
   411  0000                     _SSP1BUF	set	4041
   412  0000                     _SSP1CON1	set	4038
   413  0000                     _SSP1CON1bits	set	4038
   414  0000                     _SSP1CON2	set	4037
   415  0000                     _SSP1CON2bits	set	4037
   416  0000                     _SSP1STAT	set	4039
   417  0000                     _SSP1STATbits	set	4039
   418  0000                     _SSPBUF	set	4041
   419  0000                     _T0CONbits	set	4053
   420  0000                     _T1CONbits	set	4045
   421  0000                     _T3CONbits	set	3961
   422  0000                     _TMR1H	set	4047
   423  0000                     _TRISA	set	3986
   424  0000                     _TRISB	set	3987
   425  0000                     _TRISC	set	3988
   426  0000                     _TXREG1	set	4014
   427  0000                     _TXSTA1bits	set	4013
   428  0000                     _UCON	set	3941
   429  0000                     _UCONbits	set	3941
   430  0000                     _UEIR	set	3939
   431  0000                     _UIR	set	3938
   432  0000                     _UIRbits	set	3938
   433  0000                     _USTAT	set	3940
   434  0000                     _BCL1IF	set	32011
   435  0000                     _LATB2	set	31826
   436  0000                     _SSP1IF	set	31987
   437  00FE58                     STR_43:
   438  00FE58  09                 	db	9
   439  00FE59  2A                 	db	42
   440  00FE5A  2A                 	db	42
   441  00FE5B  2A                 	db	42
   442  00FE5C  2A                 	db	42
   443  00FE5D  2A                 	db	42
   444  00FE5E  2A                 	db	42
   445  00FE5F  2A                 	db	42
   446  00FE60  2A                 	db	42
   447  00FE61  2A                 	db	42
   448  00FE62  2A                 	db	42
   449  00FE63  2A                 	db	42
   450  00FE64  2A                 	db	42
   451  00FE65  2A                 	db	42
   452  00FE66  2A                 	db	42
   453  00FE67  2A                 	db	42
   454  00FE68  2A                 	db	42
   455  00FE69  2A                 	db	42
   456  00FE6A  2A                 	db	42
   457  00FE6B  2A                 	db	42
   458  00FE6C  2A                 	db	42
   459  00FE6D  2A                 	db	42
   460  00FE6E  2A                 	db	42
   461  00FE6F  2A                 	db	42
   462  00FE70  2A                 	db	42
   463  00FE71  2A                 	db	42
   464  00FE72  2A                 	db	42
   465  00FE73  2A                 	db	42
   466  00FE74  2A                 	db	42
   467  00FE75  2A                 	db	42
   468  00FE76  2A                 	db	42
   469  00FE77  0A                 	db	10
   470  00FE78  09                 	db	9
   471  00FE79  2A                 	db	42
   472  00FE7A  2A                 	db	42
   473  00FE7B  2A                 	db	42
   474  00FE7C  2A                 	db	42
   475  00FE7D  20                 	db	32
   476  00FE7E  50                 	db	80	;'P'
   477  00FE7F  49                 	db	73	;'I'
   478  00FE80  43                 	db	67	;'C'
   479  00FE81  31                 	db	49	;'1'
   480  00FE82  38                 	db	56	;'8'
   481  00FE83  46                 	db	70	;'F'
   482  00FE84  32                 	db	50	;'2'
   483  00FE85  37                 	db	55	;'7'
   484  00FE86  4A                 	db	74	;'J'
   485  00FE87  35                 	db	53	;'5'
   486  00FE88  33                 	db	51	;'3'
   487  00FE89  20                 	db	32
   488  00FE8A  74                 	db	116	;'t'
   489  00FE8B  65                 	db	101	;'e'
   490  00FE8C  6D                 	db	109	;'m'
   491  00FE8D  70                 	db	112	;'p'
   492  00FE8E  6C                 	db	108	;'l'
   493  00FE8F  61                 	db	97	;'a'
   494  00FE90  74                 	db	116	;'t'
   495  00FE91  65                 	db	101	;'e'
   496  00FE92  20                 	db	32
   497  00FE93  2A                 	db	42
   498  00FE94  2A                 	db	42
   499  00FE95  2A                 	db	42
   500  00FE96  2A                 	db	42
   501  00FE97  0A                 	db	10
   502  00FE98  09                 	db	9
   503  00FE99  2A                 	db	42
   504  00FE9A  2A                 	db	42
   505  00FE9B  2A                 	db	42
   506  00FE9C  2A                 	db	42
   507  00FE9D  20                 	db	32
   508  00FE9E  4D                 	db	77	;'M'
   509  00FE9F  61                 	db	97	;'a'
   510  00FEA0  64                 	db	100	;'d'
   511  00FEA1  65                 	db	101	;'e'
   512  00FEA2  20                 	db	32
   513  00FEA3  62                 	db	98	;'b'
   514  00FEA4  79                 	db	121	;'y'
   515  00FEA5  20                 	db	32
   516  00FEA6  40                 	db	64	;'@'
   517  00FEA7  52                 	db	82	;'R'
   518  00FEA8  79                 	db	121	;'y'
   519  00FEA9  6F                 	db	111	;'o'
   520  00FEAA  6B                 	db	107	;'k'
   521  00FEAB  65                 	db	101	;'e'
   522  00FEAC  72                 	db	114	;'r'
   523  00FEAD  69                 	db	105	;'i'
   524  00FEAE  31                 	db	49	;'1'
   525  00FEAF  34                 	db	52	;'4'
   526  00FEB0  20                 	db	32
   527  00FEB1  20                 	db	32
   528  00FEB2  20                 	db	32
   529  00FEB3  2A                 	db	42
   530  00FEB4  2A                 	db	42
   531  00FEB5  2A                 	db	42
   532  00FEB6  2A                 	db	42
   533  00FEB7  0A                 	db	10
   534  00FEB8  09                 	db	9
   535  00FEB9  2A                 	db	42
   536  00FEBA  2A                 	db	42
   537  00FEBB  2A                 	db	42
   538  00FEBC  2A                 	db	42
   539  00FEBD  2A                 	db	42
   540  00FEBE  2A                 	db	42
   541  00FEBF  2A                 	db	42
   542  00FEC0  2A                 	db	42
   543  00FEC1  2A                 	db	42
   544  00FEC2  2A                 	db	42
   545  00FEC3  2A                 	db	42
   546  00FEC4  2A                 	db	42
   547  00FEC5  2A                 	db	42
   548  00FEC6  2A                 	db	42
   549  00FEC7  2A                 	db	42
   550  00FEC8  2A                 	db	42
   551  00FEC9  2A                 	db	42
   552  00FECA  2A                 	db	42
   553  00FECB  2A                 	db	42
   554  00FECC  2A                 	db	42
   555  00FECD  2A                 	db	42
   556  00FECE  2A                 	db	42
   557  00FECF  2A                 	db	42
   558  00FED0  2A                 	db	42
   559  00FED1  2A                 	db	42
   560  00FED2  2A                 	db	42
   561  00FED3  2A                 	db	42
   562  00FED4  2A                 	db	42
   563  00FED5  2A                 	db	42
   564  00FED6  2A                 	db	42
   565  00FED7  0A                 	db	10
   566  00FED8  0A                 	db	10
   567  00FED9  09                 	db	9
   568  00FEDA  70                 	db	112	;'p'
   569  00FEDB  72                 	db	114	;'r'
   570  00FEDC  69                 	db	105	;'i'
   571  00FEDD  6E                 	db	110	;'n'
   572  00FEDE  74                 	db	116	;'t'
   573  00FEDF  5F                 	db	95	;'_'
   574  00FEE0  74                 	db	116	;'t'
   575  00FEE1  69                 	db	105	;'i'
   576  00FEE2  6D                 	db	109	;'m'
   577  00FEE3  65                 	db	101	;'e'
   578  00FEE4  28                 	db	40
   579  00FEE5  74                 	db	116	;'t'
   580  00FEE6  29                 	db	41
   581  00FEE7  0A                 	db	10
   582  00FEE8  09                 	db	9
   583  00FEE9  61                 	db	97	;'a'
   584  00FEEA  64                 	db	100	;'d'
   585  00FEEB  6A                 	db	106	;'j'
   586  00FEEC  75                 	db	117	;'u'
   587  00FEED  73                 	db	115	;'s'
   588  00FEEE  74                 	db	116	;'t'
   589  00FEEF  5F                 	db	95	;'_'
   590  00FEF0  74                 	db	116	;'t'
   591  00FEF1  69                 	db	105	;'i'
   592  00FEF2  6D                 	db	109	;'m'
   593  00FEF3  65                 	db	101	;'e'
   594  00FEF4  28                 	db	40
   595  00FEF5  61                 	db	97	;'a'
   596  00FEF6  74                 	db	116	;'t'
   597  00FEF7  29                 	db	41
   598  00FEF8  20                 	db	32
   599  00FEF9  5B                 	db	91	;'['
   600  00FEFA  68                 	db	104	;'h'
   601  00FEFB  61                 	db	97	;'a'
   602  00FEFC  6E                 	db	110	;'n'
   603  00FEFD  64                 	db	100	;'d'
   604  00FEFE  3A                 	db	58	;':'
   605  00FEFF  79                 	db	121	;'y'
   606  00FF00  2C                 	db	44
   607  00FF01  4D                 	db	77	;'M'
   608  00FF02  2C                 	db	44
   609  00FF03  64                 	db	100	;'d'
   610  00FF04  2C                 	db	44
   611  00FF05  68                 	db	104	;'h'
   612  00FF06  2C                 	db	44
   613  00FF07  6D                 	db	109	;'m'
   614  00FF08  2C                 	db	44
   615  00FF09  73                 	db	115	;'s'
   616  00FF0A  5D                 	db	93	;']'
   617  00FF0B  20                 	db	32
   618  00FF0C  5B                 	db	91	;'['
   619  00FF0D  76                 	db	118	;'v'
   620  00FF0E  61                 	db	97	;'a'
   621  00FF0F  6C                 	db	108	;'l'
   622  00FF10  75                 	db	117	;'u'
   623  00FF11  65                 	db	101	;'e'
   624  00FF12  28                 	db	40
   625  00FF13  64                 	db	100	;'d'
   626  00FF14  65                 	db	101	;'e'
   627  00FF15  63                 	db	99	;'c'
   628  00FF16  69                 	db	105	;'i'
   629  00FF17  6D                 	db	109	;'m'
   630  00FF18  61                 	db	97	;'a'
   631  00FF19  6C                 	db	108	;'l'
   632  00FF1A  29                 	db	41
   633  00FF1B  5D                 	db	93	;']'
   634  00FF1C  0A                 	db	10
   635  00FF1D  0A                 	db	10
   636  00FF1E  09                 	db	9
   637  00FF1F  66                 	db	102	;'f'
   638  00FF20  6F                 	db	111	;'o'
   639  00FF21  72                 	db	114	;'r'
   640  00FF22  20                 	db	32
   641  00FF23  44                 	db	68	;'D'
   642  00FF24  65                 	db	101	;'e'
   643  00FF25  76                 	db	118	;'v'
   644  00FF26  65                 	db	101	;'e'
   645  00FF27  6C                 	db	108	;'l'
   646  00FF28  6F                 	db	111	;'o'
   647  00FF29  70                 	db	112	;'p'
   648  00FF2A  70                 	db	112	;'p'
   649  00FF2B  65                 	db	101	;'e'
   650  00FF2C  72                 	db	114	;'r'
   651  00FF2D  0A                 	db	10
   652  00FF2E  09                 	db	9
   653  00FF2F  52                 	db	82	;'R'
   654  00FF30  45                 	db	69	;'E'
   655  00FF31  53                 	db	83	;'S'
   656  00FF32  45                 	db	69	;'E'
   657  00FF33  54                 	db	84	;'T'
   658  00FF34  28                 	db	40
   659  00FF35  29                 	db	41
   660  00FF36  3B                 	db	59	;';'
   661  00FF37  0A                 	db	10
   662  00FF38  09                 	db	9
   663  00FF39  62                 	db	98	;'b'
   664  00FF3A  6F                 	db	111	;'o'
   665  00FF3B  6F                 	db	111	;'o'
   666  00FF3C  74                 	db	116	;'t'
   667  00FF3D  6C                 	db	108	;'l'
   668  00FF3E  6F                 	db	111	;'o'
   669  00FF3F  61                 	db	97	;'a'
   670  00FF40  64                 	db	100	;'d'
   671  00FF41  0A                 	db	10
   672  00FF42  00                 	db	0
   673  00FF43                     STR_23:
   674  00FF43  09                 	db	9
   675  00FF44  32                 	db	50	;'2'
   676  00FF45  30                 	db	48	;'0'
   677  00FF46  25                 	db	37
   678  00FF47  30                 	db	48	;'0'
   679  00FF48  32                 	db	50	;'2'
   680  00FF49  64                 	db	100	;'d'
   681  00FF4A  2F                 	db	47
   682  00FF4B  25                 	db	37
   683  00FF4C  30                 	db	48	;'0'
   684  00FF4D  32                 	db	50	;'2'
   685  00FF4E  64                 	db	100	;'d'
   686  00FF4F  2F                 	db	47
   687  00FF50  25                 	db	37
   688  00FF51  30                 	db	48	;'0'
   689  00FF52  32                 	db	50	;'2'
   690  00FF53  64                 	db	100	;'d'
   691  00FF54  28                 	db	40
   692  00FF55  25                 	db	37
   693  00FF56  73                 	db	115	;'s'
   694  00FF57  29                 	db	41
   695  00FF58  25                 	db	37
   696  00FF59  30                 	db	48	;'0'
   697  00FF5A  32                 	db	50	;'2'
   698  00FF5B  64                 	db	100	;'d'
   699  00FF5C  3A                 	db	58	;':'
   700  00FF5D  25                 	db	37
   701  00FF5E  30                 	db	48	;'0'
   702  00FF5F  32                 	db	50	;'2'
   703  00FF60  64                 	db	100	;'d'
   704  00FF61  2D                 	db	45
   705  00FF62  25                 	db	37
   706  00FF63  30                 	db	48	;'0'
   707  00FF64  32                 	db	50	;'2'
   708  00FF65  64                 	db	100	;'d'
   709  00FF66  0A                 	db	10
   710  00FF67  00                 	db	0
   711  00FF68                     STR_28:
   712  00FF68  61                 	db	97	;'a'
   713  00FF69  64                 	db	100	;'d'
   714  00FF6A  6A                 	db	106	;'j'
   715  00FF6B  75                 	db	117	;'u'
   716  00FF6C  73                 	db	115	;'s'
   717  00FF6D  74                 	db	116	;'t'
   718  00FF6E  5F                 	db	95	;'_'
   719  00FF6F  74                 	db	116	;'t'
   720  00FF70  69                 	db	105	;'i'
   721  00FF71  6D                 	db	109	;'m'
   722  00FF72  65                 	db	101	;'e'
   723  00FF73  00                 	db	0
   724  00FF74                     STR_25:
   725  00FF74  70                 	db	112	;'p'
   726  00FF75  72                 	db	114	;'r'
   727  00FF76  69                 	db	105	;'i'
   728  00FF77  6E                 	db	110	;'n'
   729  00FF78  74                 	db	116	;'t'
   730  00FF79  5F                 	db	95	;'_'
   731  00FF7A  74                 	db	116	;'t'
   732  00FF7B  69                 	db	105	;'i'
   733  00FF7C  6D                 	db	109	;'m'
   734  00FF7D  65                 	db	101	;'e'
   735  00FF7E  00                 	db	0
   736  00FF7F                     STR_46:
   737  00FF7F  31                 	db	49	;'1'
   738  00FF80  38                 	db	56	;'8'
   739  00FF81  46                 	db	70	;'F'
   740  00FF82  32                 	db	50	;'2'
   741  00FF83  37                 	db	55	;'7'
   742  00FF84  4A                 	db	74	;'J'
   743  00FF85  35                 	db	53	;'5'
   744  00FF86  33                 	db	51	;'3'
   745  00FF87  00                 	db	0
   746  00FF88                     STR_44:
   747  00FF88  52                 	db	82	;'R'
   748  00FF89  45                 	db	69	;'E'
   749  00FF8A  53                 	db	83	;'S'
   750  00FF8B  45                 	db	69	;'E'
   751  00FF8C  54                 	db	84	;'T'
   752  00FF8D  28                 	db	40
   753  00FF8E  29                 	db	41
   754  00FF8F  3B                 	db	59	;';'
   755  00FF90  00                 	db	0
   756  00FF91                     STR_45:
   757  00FF91  62                 	db	98	;'b'
   758  00FF92  6F                 	db	111	;'o'
   759  00FF93  6F                 	db	111	;'o'
   760  00FF94  74                 	db	116	;'t'
   761  00FF95  6C                 	db	108	;'l'
   762  00FF96  6F                 	db	111	;'o'
   763  00FF97  61                 	db	97	;'a'
   764  00FF98  64                 	db	100	;'d'
   765  00FF99  00                 	db	0
   766  00FF9A                     STR_47:
   767  00FF9A  54                 	db	84	;'T'
   768  00FF9B  65                 	db	101	;'e'
   769  00FF9C  6D                 	db	109	;'m'
   770  00FF9D  70                 	db	112	;'p'
   771  00FF9E  6C                 	db	108	;'l'
   772  00FF9F  61                 	db	97	;'a'
   773  00FFA0  74                 	db	116	;'t'
   774  00FFA1  65                 	db	101	;'e'
   775  00FFA2  00                 	db	0
   776  00FFA3                     STR_15:
   777  00FFA3  20                 	db	32
   778  00FFA4  20                 	db	32
   779  00FFA5  20                 	db	32
   780  00FFA6  20                 	db	32
   781  00FFA7  20                 	db	32
   782  00FFA8  20                 	db	32
   783  00FFA9  20                 	db	32
   784  00FFAA  20                 	db	32
   785  00FFAB  00                 	db	0
   786  00FFAC                     STR_24:
   787  00FFAC  09                 	db	9
   788  00FFAD  65                 	db	101	;'e'
   789  00FFAE  72                 	db	114	;'r'
   790  00FFAF  72                 	db	114	;'r'
   791  00FFB0  6F                 	db	111	;'o'
   792  00FFB1  72                 	db	114	;'r'
   793  00FFB2  0A                 	db	10
   794  00FFB3  00                 	db	0
   795  00FFB4                     STR_48:
   796  00FFB4  28                 	db	40
   797  00FFB5  6E                 	db	110	;'n'
   798  00FFB6  75                 	db	117	;'u'
   799  00FFB7  6C                 	db	108	;'l'
   800  00FFB8  6C                 	db	108	;'l'
   801  00FFB9  29                 	db	41
   802  00FFBA  00                 	db	0
   803  00FFBB                     STR_40:
   804  00FFBB  73                 	db	115	;'s'
   805  00FFBC  65                 	db	101	;'e'
   806  00FFBD  63                 	db	99	;'c'
   807  00FFBE  6F                 	db	111	;'o'
   808  00FFBF  6E                 	db	110	;'n'
   809  00FFC0  64                 	db	100	;'d'
   810  00FFC1  00                 	db	0
   811  00FFC2                     STR_38:
   812  00FFC2  6D                 	db	109	;'m'
   813  00FFC3  69                 	db	105	;'i'
   814  00FFC4  6E                 	db	110	;'n'
   815  00FFC5  75                 	db	117	;'u'
   816  00FFC6  74                 	db	116	;'t'
   817  00FFC7  65                 	db	101	;'e'
   818  00FFC8  00                 	db	0
   819  00FFC9                     STR_32:
   820  00FFC9  6D                 	db	109	;'m'
   821  00FFCA  6F                 	db	111	;'o'
   822  00FFCB  6E                 	db	110	;'n'
   823  00FFCC  74                 	db	116	;'t'
   824  00FFCD  68                 	db	104	;'h'
   825  00FFCE  00                 	db	0
   826  00FFCF                     STR_41:
   827  00FFCF  68                 	db	104	;'h'
   828  00FFD0  65                 	db	101	;'e'
   829  00FFD1  6C                 	db	108	;'l'
   830  00FFD2  70                 	db	112	;'p'
   831  00FFD3  00                 	db	0
   832  00FFD4                     STR_30:
   833  00FFD4  79                 	db	121	;'y'
   834  00FFD5  65                 	db	101	;'e'
   835  00FFD6  61                 	db	97	;'a'
   836  00FFD7  72                 	db	114	;'r'
   837  00FFD8  00                 	db	0
   838  00FFD9                     STR_36:
   839  00FFD9  68                 	db	104	;'h'
   840  00FFDA  6F                 	db	111	;'o'
   841  00FFDB  75                 	db	117	;'u'
   842  00FFDC  72                 	db	114	;'r'
   843  00FFDD  00                 	db	0
   844  00FFDE                     STR_1:
   845  00FFDE  25                 	db	37
   846  00FFDF  30                 	db	48	;'0'
   847  00FFE0  32                 	db	50	;'2'
   848  00FFE1  64                 	db	100	;'d'
   849  00FFE2  00                 	db	0
   850  00FFE3                     STR_19:
   851  00FFE3  08                 	db	8
   852  00FFE4  20                 	db	32
   853  00FFE5  08                 	db	8
   854  00FFE6  00                 	db	0
   855  00FFE7                     STR_34:
   856  00FFE7  64                 	db	100	;'d'
   857  00FFE8  61                 	db	97	;'a'
   858  00FFE9  79                 	db	121	;'y'
   859  00FFEA  00                 	db	0
   860  00FFEB                     STR_27:
   861  00FFEB  61                 	db	97	;'a'
   862  00FFEC  74                 	db	116	;'t'
   863  00FFED  00                 	db	0
   864  00FFEE                     STR_42:
   865  00FFEE  3F                 	db	63	;'?'
   866  00FFEF  00                 	db	0
   867  00FFF0                     STR_31:
   868  00FFF0  4D                 	db	77	;'M'
   869  00FFF1  00                 	db	0
   870  00FFF2                     STR_37:
   871  00FFF2  6D                 	db	109	;'m'
   872  00FFF3  00                 	db	0
   873  00FFF4                     STR_39:
   874  00FFF4  73                 	db	115	;'s'
   875  00FFF5  00                 	db	0
   876  00FFF6  28                 	db	40
   877  00FFF7  00                 	db	0
   878  00FFF8                     STR_9:
   879  00FFF8  2D                 	db	45
   880  00FFF9  00                 	db	0
   881  00FFFA                     STR_4:
   882  00FFFA  2F                 	db	47
   883  00FFFB  00                 	db	0
   884  00FFFC                     STR_7:
   885  00FFFC  3A                 	db	58	;':'
   886  00FFFD  00                 	db	0
   887  0000                     
   888                           ; #config settings
   889  00FFFE  00                 	db	0	; dummy byte at the end
   890  0000                     
   891                           	psect	cinit
   892  01318E                     __pcinit:
   893                           	opt stack 0
   894  01318E                     start_initialization:
   895                           	opt stack 0
   896  01318E                     __initialization:
   897                           	opt stack 0
   898                           
   899                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   900  01318E  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   901  013192  EE17 F0D0          	lfsr	1,2000
   902  013196                     clear_0:
   903  013196  6AEE               	clrf	postinc0,c
   904  013198  50E5               	movf	postdec1,w,c
   905  01319A  50E1               	movf	fsr1l,w,c
   906  01319C  E1FC               	bnz	clear_0
   907  01319E  50E2               	movf	fsr1h,w,c
   908  0131A0  E1FA               	bnz	clear_0
   909                           
   910                           ; Clear objects allocated to BANK4 (200 bytes)
   911  0131A2  EE04  F000         	lfsr	0,__pbssBANK4
   912  0131A6  0EC8               	movlw	200
   913  0131A8                     clear_1:
   914  0131A8  6AEE               	clrf	postinc0,c
   915  0131AA  06E8               	decf	wreg,f,c
   916  0131AC  E1FD               	bnz	clear_1
   917                           
   918                           ; Clear objects allocated to BANK3 (200 bytes)
   919  0131AE  EE03  F000         	lfsr	0,__pbssBANK3
   920  0131B2  0EC8               	movlw	200
   921  0131B4                     clear_2:
   922  0131B4  6AEE               	clrf	postinc0,c
   923  0131B6  06E8               	decf	wreg,f,c
   924  0131B8  E1FD               	bnz	clear_2
   925                           
   926                           ; Clear objects allocated to BANK2 (178 bytes)
   927  0131BA  EE02  F000         	lfsr	0,__pbssBANK2
   928  0131BE  0EB2               	movlw	178
   929  0131C0                     clear_3:
   930  0131C0  6AEE               	clrf	postinc0,c
   931  0131C2  06E8               	decf	wreg,f,c
   932  0131C4  E1FD               	bnz	clear_3
   933                           
   934                           ; Clear objects allocated to BANK1 (139 bytes)
   935  0131C6  EE01  F000         	lfsr	0,__pbssBANK1
   936  0131CA  0E8B               	movlw	139
   937  0131CC                     clear_4:
   938  0131CC  6AEE               	clrf	postinc0,c
   939  0131CE  06E8               	decf	wreg,f,c
   940  0131D0  E1FD               	bnz	clear_4
   941                           
   942                           ; Clear objects allocated to BANK0 (51 bytes)
   943  0131D2  EE00  F0C9         	lfsr	0,__pbssBANK0
   944  0131D6  0E33               	movlw	51
   945  0131D8                     clear_5:
   946  0131D8  6AEE               	clrf	postinc0,c
   947  0131DA  06E8               	decf	wreg,f,c
   948  0131DC  E1FD               	bnz	clear_5
   949                           
   950                           ; Clear objects allocated to COMRAM (43 bytes)
   951  0131DE  EE00  F02D         	lfsr	0,__pbssCOMRAM
   952  0131E2  0E2B               	movlw	43
   953  0131E4                     clear_6:
   954  0131E4  6AEE               	clrf	postinc0,c
   955  0131E6  06E8               	decf	wreg,f,c
   956  0131E8  E1FD               	bnz	clear_6
   957                           
   958                           ; Initialize objects allocated to BANK1 (2 bytes)
   959                           ; load TBLPTR registers with __pidataBANK1
   960  0131EA  0E2B               	movlw	low __pidataBANK1
   961  0131EC  6EF6               	movwf	tblptrl,c
   962  0131EE  0E41               	movlw	high __pidataBANK1
   963  0131F0  6EF7               	movwf	tblptrh,c
   964  0131F2  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   965  0131F4  6EF8               	movwf	tblptru,c
   966  0131F6  0009               	tblrd		*+	;fetch initializer
   967  0131F8  CFF5 F1FA          	movff	tablat,__pdataBANK1
   968  0131FC  0009               	tblrd		*+	;fetch initializer
   969  0131FE  CFF5 F1FB          	movff	tablat,__pdataBANK1+1
   970                           
   971                           ; Initialize objects allocated to BANK0 (3 bytes)
   972                           ; load TBLPTR registers with __pidataBANK0
   973  013202  0E28               	movlw	low __pidataBANK0
   974  013204  6EF6               	movwf	tblptrl,c
   975  013206  0E41               	movlw	high __pidataBANK0
   976  013208  6EF7               	movwf	tblptrh,c
   977  01320A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   978  01320C  6EF8               	movwf	tblptru,c
   979  01320E  0009               	tblrd		*+	;fetch initializer
   980  013210  CFF5 F0FC          	movff	tablat,__pdataBANK0
   981  013214  0009               	tblrd		*+	;fetch initializer
   982  013216  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   983  01321A  0009               	tblrd		*+	;fetch initializer
   984  01321C  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   985  013220                     end_of_initialization:
   986                           	opt stack 0
   987  013220                     __end_of__initialization:
   988                           	opt stack 0
   989  013220  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   990  013222  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   991  013224  0100               	movlb	0
   992  013226  EF7A  F09B         	goto	_main	;jump to C main() function
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           postinc0	equ	0xFEE
   998                           wreg	equ	0xFE8
   999                           postdec1	equ	0xFE5
  1000                           fsr1h	equ	0xFE2
  1001                           fsr1l	equ	0xFE1
  1002                           
  1003                           	psect	bssCOMRAM
  1004  00002D                     __pbssCOMRAM:
  1005                           	opt stack 0
  1006  00002D                     ST7032_task@wait:
  1007                           	opt stack 0
  1008  00002D                     	ds	2
  1009  00002F                     USBCBSendResume@delay_count:
  1010                           	opt stack 0
  1011  00002F                     	ds	2
  1012  000031                     _pBDTEntryEP0OutCurrent:
  1013                           	opt stack 0
  1014  000031                     	ds	2
  1015  000033                     _pBDTEntryEP0OutNext:
  1016                           	opt stack 0
  1017  000033                     	ds	2
  1018  000035                     _pDst:
  1019                           	opt stack 0
  1020  000035                     	ds	2
  1021  000037                     millis_timer@cnt:
  1022                           	opt stack 0
  1023  000037                     	ds	2
  1024  000039                     ST7032_task@st7032_state:
  1025                           	opt stack 0
  1026  000039                     	ds	1
  1027  00003A                     _BothEP0OutUOWNsSet:
  1028                           	opt stack 0
  1029  00003A                     	ds	1
  1030  00003B                     _I2C_busy:
  1031                           	opt stack 0
  1032  00003B                     	ds	1
  1033  00003C                     _I2C_cfct_flag:
  1034                           	opt stack 0
  1035  00003C                     	ds	1
  1036  00003D                     _I2C_sent_flag:
  1037                           	opt stack 0
  1038  00003D                     	ds	1
  1039  00003E                     _RemoteWakeup:
  1040                           	opt stack 0
  1041  00003E                     	ds	1
  1042  00003F                     _USBDeferINDataStagePackets:
  1043                           	opt stack 0
  1044  00003F                     	ds	1
  1045  000040                     _USBDeferOUTDataStagePackets:
  1046                           	opt stack 0
  1047  000040                     	ds	1
  1048  000041                     _USBDeferStatusStagePacket:
  1049                           	opt stack 0
  1050  000041                     	ds	1
  1051  000042                     _USBDeviceState:
  1052                           	opt stack 0
  1053  000042                     	ds	1
  1054  000043                     _USBStatusStageEnabledFlag1:
  1055                           	opt stack 0
  1056  000043                     	ds	1
  1057  000044                     _USBStatusStageEnabledFlag2:
  1058                           	opt stack 0
  1059  000044                     	ds	1
  1060  000045                     _USBStatusStageTimeoutCounter:
  1061                           	opt stack 0
  1062  000045                     	ds	1
  1063  000046                     _cdc_trf_state:
  1064                           	opt stack 0
  1065  000046                     	ds	1
  1066  000047                     _controlTransferState:
  1067                           	opt stack 0
  1068  000047                     	ds	1
  1069  000048                     _control_signal_bitmap:
  1070                           	opt stack 0
  1071  000048                     	ds	1
  1072  000049                     _endpoint_number:
  1073                           	opt stack 0
  1074  000049                     	ds	1
  1075  00004A                     _shortPacketStatus:
  1076                           	opt stack 0
  1077  00004A                     	ds	1
  1078  00004B                     _st7032_state:
  1079                           	opt stack 0
  1080  00004B                     	ds	1
  1081  00004C                     _lcd_tx:
  1082                           	opt stack 0
  1083  00004C                     	ds	8
  1084  000054                     _USBAlternateInterface:
  1085                           	opt stack 0
  1086  000054                     	ds	2
  1087  000056                     _USBActiveConfiguration:
  1088                           	opt stack 0
  1089  000056                     	ds	1
  1090  000057                     _USTATcopy:
  1091                           	opt stack 0
  1092  000057                     	ds	1
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           fsr1h	equ	0xFE2
  1101                           fsr1l	equ	0xFE1
  1102                           
  1103                           	psect	bssBANK0
  1104  0000C9                     __pbssBANK0:
  1105                           	opt stack 0
  1106  0000C9                     _outPipes:
  1107                           	opt stack 0
  1108  0000C9                     	ds	9
  1109  0000D2                     _inPipes:
  1110                           	opt stack 0
  1111  0000D2                     	ds	6
  1112  0000D8                     _pBDTEntryIn:
  1113                           	opt stack 0
  1114  0000D8                     	ds	6
  1115  0000DE                     _pBDTEntryOut:
  1116                           	opt stack 0
  1117  0000DE                     	ds	6
  1118  0000E4                     _ep_data_in:
  1119                           	opt stack 0
  1120  0000E4                     	ds	3
  1121  0000E7                     _ep_data_out:
  1122                           	opt stack 0
  1123  0000E7                     	ds	3
  1124  0000EA                     _pCDCDst:
  1125                           	opt stack 0
  1126  0000EA                     	ds	3
  1127  0000ED                     _pCDCSrc:
  1128                           	opt stack 0
  1129  0000ED                     	ds	3
  1130  0000F0                     _CDCDataInHandle:
  1131                           	opt stack 0
  1132  0000F0                     	ds	2
  1133  0000F2                     _CDCDataOutHandle:
  1134                           	opt stack 0
  1135  0000F2                     	ds	2
  1136  0000F4                     RTCC_task@prev_halfsec:
  1137                           	opt stack 0
  1138  0000F4                     	ds	1
  1139  0000F5                     _USBBusIsSuspended:
  1140                           	opt stack 0
  1141  0000F5                     	ds	1
  1142  0000F6                     _cdc_mem_type:
  1143                           	opt stack 0
  1144  0000F6                     	ds	1
  1145  0000F7                     _cdc_rx_len:
  1146                           	opt stack 0
  1147  0000F7                     	ds	1
  1148  0000F8                     _cdc_tx_len:
  1149                           	opt stack 0
  1150  0000F8                     	ds	1
  1151  0000F9                     _time_change_flag:
  1152                           	opt stack 0
  1153  0000F9                     	ds	1
  1154  0000FA                     epoch_to_caltime@year_cache:
  1155                           	opt stack 0
  1156  0000FA                     	ds	1
  1157  0000FB                     terminal_task@command_init:
  1158                           	opt stack 0
  1159  0000FB                     	ds	1
  1160                           tblptru	equ	0xFF8
  1161                           tblptrh	equ	0xFF7
  1162                           tblptrl	equ	0xFF6
  1163                           tablat	equ	0xFF5
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           postdec1	equ	0xFE5
  1167                           fsr1h	equ	0xFE2
  1168                           fsr1l	equ	0xFE1
  1169                           
  1170                           	psect	dataBANK0
  1171  0000FC                     __pdataBANK0:
  1172                           	opt stack 0
  1173  0000FC                     ST7032_cursor@F8665:
  1174                           	opt stack 0
  1175  0000FC                     	ds	2
  1176  0000FE                     epoch_to_caltime@month_cache:
  1177                           	opt stack 0
  1178  0000FE                     	ds	1
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1h	equ	0xFE2
  1187                           fsr1l	equ	0xFE1
  1188                           
  1189                           	psect	bssBANK1
  1190  000100                     __pbssBANK1:
  1191                           	opt stack 0
  1192  000100                     _cdc_notice:
  1193                           	opt stack 0
  1194  000100                     	ds	10
  1195  00010A                     _BaudRateGen:
  1196                           	opt stack 0
  1197  00010A                     	ds	4
  1198  00010E                     _ms:
  1199                           	opt stack 0
  1200  00010E                     	ds	4
  1201  000112                     epoch_to_caltime@day_cache:
  1202                           	opt stack 0
  1203  000112                     	ds	2
  1204  000114                     terminal_task@op0:
  1205                           	opt stack 0
  1206  000114                     	ds	25
  1207  00012D                     terminal_task@op1:
  1208                           	opt stack 0
  1209  00012D                     	ds	25
  1210  000146                     _now:
  1211                           	opt stack 0
  1212  000146                     	ds	14
  1213  000154                     _dummy_encapsulated_cmd_response:
  1214                           	opt stack 0
  1215  000154                     	ds	8
  1216  00015C                     _uart_rx:
  1217                           	opt stack 0
  1218  00015C                     	ds	8
  1219  000164                     _uart_tx:
  1220                           	opt stack 0
  1221  000164                     	ds	8
  1222  00016C                     _usb_rx:
  1223                           	opt stack 0
  1224  00016C                     	ds	8
  1225  000174                     _usb_tx:
  1226                           	opt stack 0
  1227  000174                     	ds	8
  1228  00017C                     terminal_task@command:
  1229                           	opt stack 0
  1230  00017C                     	ds	8
  1231  000184                     _line_coding:
  1232                           	opt stack 0
  1233  000184                     	ds	7
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           postdec1	equ	0xFE5
  1241                           fsr1h	equ	0xFE2
  1242                           fsr1l	equ	0xFE1
  1243                           
  1244                           	psect	dataBANK1
  1245  0001FA                     __pdataBANK1:
  1246                           	opt stack 0
  1247  0001FA                     I2C_LCD_SetCursor@F8685:
  1248                           	opt stack 0
  1249  0001FA                     	ds	2
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1h	equ	0xFE2
  1258                           fsr1l	equ	0xFE1
  1259                           
  1260                           	psect	bssBANK2
  1261  000200                     __pbssBANK2:
  1262                           	opt stack 0
  1263  000200                     _cdc_data_rx:
  1264                           	opt stack 0
  1265  000200                     	ds	64
  1266  000240                     _cdc_data_tx:
  1267                           	opt stack 0
  1268  000240                     	ds	64
  1269  000280                     terminal_task@op2:
  1270                           	opt stack 0
  1271  000280                     	ds	25
  1272  000299                     terminal_task@op3:
  1273                           	opt stack 0
  1274  000299                     	ds	25
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1h	equ	0xFE2
  1283                           fsr1l	equ	0xFE1
  1284                           
  1285                           	psect	bssBANK3
  1286  000300                     __pbssBANK3:
  1287                           	opt stack 0
  1288  000300                     main_init@uartrx:
  1289                           	opt stack 0
  1290  000300                     	ds	100
  1291  000364                     main_init@usbrx:
  1292                           	opt stack 0
  1293  000364                     	ds	100
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postdec1	equ	0xFE5
  1301                           fsr1h	equ	0xFE2
  1302                           fsr1l	equ	0xFE1
  1303                           
  1304                           	psect	bssBANK4
  1305  000400                     __pbssBANK4:
  1306                           	opt stack 0
  1307  000400                     ST7032_init@buf:
  1308                           	opt stack 0
  1309  000400                     	ds	200
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           postdec1	equ	0xFE5
  1317                           fsr1h	equ	0xFE2
  1318                           fsr1l	equ	0xFE1
  1319                           
  1320                           	psect	bssBIGRAMl
  1321  0004C8                     __pbssBIGRAMl:
  1322                           	opt stack 0
  1323  0004C8                     main_init@uarttx:
  1324                           	opt stack 0
  1325  0004C8                     	ds	1000
  1326  0008B0                     main_init@usbtx:
  1327                           	opt stack 0
  1328  0008B0                     	ds	1000
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1h	equ	0xFE2
  1337                           fsr1l	equ	0xFE1
  1338                           
  1339                           	psect	cstackBANK1
  1340  00018B                     __pcstackBANK1:
  1341                           	opt stack 0
  1342  00018B                     terminal_task@tx:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x0
  1346  00018B                     	ds	2
  1347  00018D                     terminal_task@rx:
  1348                           	opt stack 0
  1349                           
  1350                           ; 2 bytes @ 0x2
  1351  00018D                     	ds	2
  1352  00018F                     ??_terminal_task:
  1353                           
  1354                           ; 0 bytes @ 0x4
  1355  00018F                     	ds	2
  1356  000191                     terminal_task@buf:
  1357                           	opt stack 0
  1358                           
  1359                           ; 100 bytes @ 0x6
  1360  000191                     	ds	100
  1361  0001F5                     _terminal_task$6198:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x6A
  1365  0001F5                     	ds	2
  1366  0001F7                     terminal_task@i_4539:
  1367                           	opt stack 0
  1368                           
  1369                           ; 1 bytes @ 0x6C
  1370  0001F7                     	ds	1
  1371  0001F8                     terminal_task@ascii:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0x6D
  1375  0001F8                     	ds	1
  1376  0001F9                     terminal_task@i:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x6E
  1380  0001F9                     	ds	1
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           fsr1h	equ	0xFE2
  1389                           fsr1l	equ	0xFE1
  1390                           
  1391                           	psect	cstackBANK0
  1392  000060                     __pcstackBANK0:
  1393                           	opt stack 0
  1394  000060                     ??_isdigit:
  1395  000060                     ??_I2C_IdleCheck:
  1396  000060                     ??_timer0_init:
  1397  000060                     ??_timer3_init:
  1398  000060                     ??_x_to_d:
  1399  000060                     ?_strcmp:
  1400                           	opt stack 0
  1401  000060                     ?_USBTransferOnePacket:
  1402                           	opt stack 0
  1403  000060                     ?_ringbuf_num:
  1404                           	opt stack 0
  1405  000060                     ?___wmul:
  1406                           	opt stack 0
  1407  000060                     ?___awdiv:
  1408                           	opt stack 0
  1409  000060                     ?___awmod:
  1410                           	opt stack 0
  1411  000060                     ?___lwdiv:
  1412                           	opt stack 0
  1413  000060                     ?___lldiv:
  1414                           	opt stack 0
  1415  000060                     USBTransferOnePacket@dir:
  1416                           	opt stack 0
  1417  000060                     timer1_init@clock_select:
  1418                           	opt stack 0
  1419  000060                     _is_usb_available$5114:
  1420                           	opt stack 0
  1421  000060                     putUSBUSART@data:
  1422                           	opt stack 0
  1423  000060                     ringbuf_init@rb:
  1424                           	opt stack 0
  1425  000060                     ringbuf_num@rb:
  1426                           	opt stack 0
  1427  000060                     ringbuf_delete@rb:
  1428                           	opt stack 0
  1429  000060                     ___wmul@multiplier:
  1430                           	opt stack 0
  1431  000060                     ___awdiv@dividend:
  1432                           	opt stack 0
  1433  000060                     ___awmod@dividend:
  1434                           	opt stack 0
  1435  000060                     ___lwdiv@dividend:
  1436                           	opt stack 0
  1437  000060                     memset@p1:
  1438                           	opt stack 0
  1439  000060                     strcmp@s1:
  1440                           	opt stack 0
  1441  000060                     ___lldiv@dividend:
  1442                           	opt stack 0
  1443                           
  1444                           ; 4 bytes @ 0x0
  1445  000060                     	ds	1
  1446  000061                     ??_timer1_init:
  1447  000061                     I2C_IdleCheck@mask:
  1448                           	opt stack 0
  1449  000061                     timer0_init@prescaler:
  1450                           	opt stack 0
  1451  000061                     timer3_init@prescaler:
  1452                           	opt stack 0
  1453  000061                     x_to_d@hex:
  1454                           	opt stack 0
  1455  000061                     _isdigit$5614:
  1456                           	opt stack 0
  1457  000061                     USBTransferOnePacket@data:
  1458                           	opt stack 0
  1459                           
  1460                           ; 2 bytes @ 0x1
  1461  000061                     	ds	1
  1462  000062                     ??_ringbuf_num:
  1463  000062                     putUSBUSART@length:
  1464                           	opt stack 0
  1465  000062                     I2C_Start@rw:
  1466                           	opt stack 0
  1467  000062                     I2C_Send@data:
  1468                           	opt stack 0
  1469  000062                     timer1_init@prescaler:
  1470                           	opt stack 0
  1471  000062                     isdigit@c:
  1472                           	opt stack 0
  1473  000062                     ringbuf_init@internal_buf:
  1474                           	opt stack 0
  1475  000062                     RTCC_to_caltime@tm:
  1476                           	opt stack 0
  1477  000062                     ___wmul@multiplicand:
  1478                           	opt stack 0
  1479  000062                     ___awdiv@divisor:
  1480                           	opt stack 0
  1481  000062                     ___awmod@divisor:
  1482                           	opt stack 0
  1483  000062                     ___lwdiv@divisor:
  1484                           	opt stack 0
  1485  000062                     memset@c:
  1486                           	opt stack 0
  1487  000062                     strcmp@s2:
  1488                           	opt stack 0
  1489                           
  1490                           ; 2 bytes @ 0x2
  1491  000062                     	ds	1
  1492  000063                     USBTransferOnePacket@len:
  1493                           	opt stack 0
  1494  000063                     I2C_Start@adrs:
  1495                           	opt stack 0
  1496                           
  1497                           ; 1 bytes @ 0x3
  1498  000063                     	ds	1
  1499  000064                     ??_strcmp:
  1500  000064                     USBTransferOnePacket@ep:
  1501                           	opt stack 0
  1502  000064                     RTCC_to_caltime@dumy:
  1503                           	opt stack 0
  1504  000064                     I2C_LCD_Command@c:
  1505                           	opt stack 0
  1506  000064                     ___awdiv@counter:
  1507                           	opt stack 0
  1508  000064                     ___awmod@counter:
  1509                           	opt stack 0
  1510  000064                     ___lwdiv@counter:
  1511                           	opt stack 0
  1512  000064                     ringbuf_init@bufsize:
  1513                           	opt stack 0
  1514  000064                     I2C_LCD_Puts@s:
  1515                           	opt stack 0
  1516  000064                     ___wmul@product:
  1517                           	opt stack 0
  1518  000064                     memset@n:
  1519                           	opt stack 0
  1520  000064                     ___lldiv@divisor:
  1521                           	opt stack 0
  1522                           
  1523                           ; 4 bytes @ 0x4
  1524  000064                     	ds	1
  1525  000065                     I2C_LCD_Command@ans:
  1526                           	opt stack 0
  1527  000065                     ___awdiv@sign:
  1528                           	opt stack 0
  1529  000065                     ___awmod@sign:
  1530                           	opt stack 0
  1531  000065                     strcmp@r:
  1532                           	opt stack 0
  1533  000065                     USBTransferOnePacket@handle:
  1534                           	opt stack 0
  1535  000065                     ___lwdiv@quotient:
  1536                           	opt stack 0
  1537                           
  1538                           ; 2 bytes @ 0x5
  1539  000065                     	ds	1
  1540  000066                     ??_I2C_LCD_Clear:
  1541  000066                     ??_I2C_LCD_Puts:
  1542  000066                     ?_atoi:
  1543                           	opt stack 0
  1544  000066                     month_length@month:
  1545                           	opt stack 0
  1546  000066                     I2C_LCD_SetCursor@row:
  1547                           	opt stack 0
  1548  000066                     atoi@s:
  1549                           	opt stack 0
  1550  000066                     ___awdiv@quotient:
  1551                           	opt stack 0
  1552  000066                     memset@p:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0x6
  1556  000066                     	ds	1
  1557  000067                     ??_CDCTxService:
  1558  000067                     ??_month_length:
  1559  000067                     ??_I2C_LCD_init:
  1560  000067                     ?___lwmod:
  1561                           	opt stack 0
  1562  000067                     getsUSBUSART@buffer:
  1563                           	opt stack 0
  1564  000067                     I2C_LCD_SetCursor@row_offsets:
  1565                           	opt stack 0
  1566  000067                     I2C_LCD_Puts@ans:
  1567                           	opt stack 0
  1568  000067                     ___lwmod@dividend:
  1569                           	opt stack 0
  1570                           
  1571                           ; 2 bytes @ 0x7
  1572  000067                     	ds	1
  1573  000068                     ??_atoi:
  1574  000068                     USBDeviceInit@i:
  1575                           	opt stack 0
  1576  000068                     d_to_x@dec:
  1577                           	opt stack 0
  1578  000068                     I2C_LCD_init@i:
  1579                           	opt stack 0
  1580  000068                     _CDCTxService$2005:
  1581                           	opt stack 0
  1582  000068                     ringbuf_put@rb:
  1583                           	opt stack 0
  1584  000068                     ringbuf_pop@rb:
  1585                           	opt stack 0
  1586  000068                     ringbuf_backspace@rb:
  1587                           	opt stack 0
  1588  000068                     ___lldiv@quotient:
  1589                           	opt stack 0
  1590                           
  1591                           ; 4 bytes @ 0x8
  1592  000068                     	ds	1
  1593  000069                     getsUSBUSART@len:
  1594                           	opt stack 0
  1595  000069                     I2C_LCD_SetCursor@col:
  1596                           	opt stack 0
  1597  000069                     I2C_LCD_init@i_4452:
  1598                           	opt stack 0
  1599  000069                     caltime_to_RTCC@tm:
  1600                           	opt stack 0
  1601  000069                     ___lwmod@divisor:
  1602                           	opt stack 0
  1603                           
  1604                           ; 2 bytes @ 0x9
  1605  000069                     	ds	1
  1606  00006A                     ??_getsUSBUSART:
  1607  00006A                     ??_ringbuf_pop:
  1608  00006A                     ??_ringbuf_backspace:
  1609  00006A                     CDCTxService@i:
  1610                           	opt stack 0
  1611  00006A                     ringbuf_put@asciicode:
  1612                           	opt stack 0
  1613  00006A                     atoi@sign:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0xA
  1617  00006A                     	ds	1
  1618  00006B                     ??_ringbuf_put:
  1619  00006B                     CDCTxService@byte_to_send:
  1620                           	opt stack 0
  1621  00006B                     month_length@year:
  1622                           	opt stack 0
  1623  00006B                     ___lwmod@counter:
  1624                           	opt stack 0
  1625  00006B                     _getsUSBUSART$1957:
  1626                           	opt stack 0
  1627  00006B                     atoi@a:
  1628                           	opt stack 0
  1629                           
  1630                           ; 2 bytes @ 0xB
  1631  00006B                     	ds	1
  1632  00006C                     ?_sprintf:
  1633                           	opt stack 0
  1634  00006C                     ___lldiv@counter:
  1635                           	opt stack 0
  1636  00006C                     put_string_usb@s:
  1637                           	opt stack 0
  1638  00006C                     sprintf@sp:
  1639                           	opt stack 0
  1640                           
  1641                           ; 2 bytes @ 0xC
  1642  00006C                     	ds	1
  1643  00006D                     ?_get_string_usb:
  1644                           	opt stack 0
  1645  00006D                     ?___lmul:
  1646                           	opt stack 0
  1647  00006D                     get_string_usb@s:
  1648                           	opt stack 0
  1649  00006D                     ___lmul@multiplier:
  1650                           	opt stack 0
  1651                           
  1652                           ; 4 bytes @ 0xD
  1653  00006D                     	ds	1
  1654  00006E                     ringbuf_pop@ret:
  1655                           	opt stack 0
  1656  00006E                     put_string_usb@len:
  1657                           	opt stack 0
  1658  00006E                     sprintf@f:
  1659                           	opt stack 0
  1660                           
  1661                           ; 2 bytes @ 0xE
  1662  00006E                     	ds	1
  1663  00006F                     ringbuf_put_num@rb:
  1664                           	opt stack 0
  1665  00006F                     ringbuf_put_str@rb:
  1666                           	opt stack 0
  1667  00006F                     get_string_usb@len:
  1668                           	opt stack 0
  1669                           
  1670                           ; 2 bytes @ 0xF
  1671  00006F                     	ds	1
  1672  000070                     
  1673                           ; 0 bytes @ 0x10
  1674  000070                     	ds	1
  1675  000071                     ??_get_string_usb:
  1676  000071                     ringbuf_put_num@value:
  1677                           	opt stack 0
  1678  000071                     ringbuf_put_str@str:
  1679                           	opt stack 0
  1680  000071                     ___lmul@multiplicand:
  1681                           	opt stack 0
  1682                           
  1683                           ; 4 bytes @ 0x11
  1684  000071                     	ds	1
  1685  000072                     get_string_usb@rx_len:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x12
  1689  000072                     	ds	1
  1690  000073                     ringbuf_put_num@digits:
  1691                           	opt stack 0
  1692                           
  1693                           ; 1 bytes @ 0x13
  1694  000073                     	ds	1
  1695  000074                     ringbuf_put_num@i:
  1696                           	opt stack 0
  1697  000074                     USB_task@rx_len:
  1698                           	opt stack 0
  1699                           
  1700                           ; 2 bytes @ 0x14
  1701  000074                     	ds	1
  1702  000075                     ringbuf_put_num@temp:
  1703                           	opt stack 0
  1704  000075                     ___lmul@product:
  1705                           	opt stack 0
  1706                           
  1707                           ; 4 bytes @ 0x15
  1708  000075                     	ds	1
  1709  000076                     USB_task@data:
  1710                           	opt stack 0
  1711                           
  1712                           ; 1 bytes @ 0x16
  1713  000076                     	ds	3
  1714  000079                     ?_get_quot_rem:
  1715                           	opt stack 0
  1716  000079                     get_quot_rem@quot:
  1717                           	opt stack 0
  1718  000079                     caltime_to_epoch@tm:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x19
  1722  000079                     	ds	2
  1723  00007B                     ??_caltime_to_epoch:
  1724  00007B                     get_quot_rem@div:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x1B
  1728  00007B                     	ds	2
  1729  00007D                     get_quot_rem@num:
  1730                           	opt stack 0
  1731                           
  1732                           ; 4 bytes @ 0x1D
  1733  00007D                     	ds	1
  1734  00007E                     ??_sprintf:
  1735                           
  1736                           ; 0 bytes @ 0x1E
  1737  00007E                     	ds	1
  1738  00007F                     caltime_to_epoch@year:
  1739                           	opt stack 0
  1740                           
  1741                           ; 1 bytes @ 0x1F
  1742  00007F                     	ds	1
  1743  000080                     caltime_to_epoch@month_3637:
  1744                           	opt stack 0
  1745                           
  1746                           ; 1 bytes @ 0x20
  1747  000080                     	ds	1
  1748  000081                     epoch_to_caltime@tm:
  1749                           	opt stack 0
  1750  000081                     caltime_to_epoch@epoch:
  1751                           	opt stack 0
  1752                           
  1753                           ; 4 bytes @ 0x21
  1754  000081                     	ds	1
  1755  000082                     sprintf@prec:
  1756                           	opt stack 0
  1757                           
  1758                           ; 1 bytes @ 0x22
  1759  000082                     	ds	1
  1760  000083                     ??_epoch_to_caltime:
  1761  000083                     sprintf@ap:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x23
  1765  000083                     	ds	2
  1766  000085                     caltime_to_epoch@month:
  1767                           	opt stack 0
  1768  000085                     epoch_to_caltime@day_since_epoch:
  1769                           	opt stack 0
  1770  000085                     sprintf@cp:
  1771                           	opt stack 0
  1772                           
  1773                           ; 2 bytes @ 0x25
  1774  000085                     	ds	1
  1775  000086                     RTCC_from_RTCC@tm:
  1776                           	opt stack 0
  1777                           
  1778                           ; 2 bytes @ 0x26
  1779  000086                     	ds	1
  1780  000087                     epoch_to_caltime@day:
  1781                           	opt stack 0
  1782  000087                     sprintf@val:
  1783                           	opt stack 0
  1784                           
  1785                           ; 2 bytes @ 0x27
  1786  000087                     	ds	1
  1787  000088                     
  1788                           ; 0 bytes @ 0x28
  1789  000088                     	ds	1
  1790  000089                     epoch_to_caltime@year:
  1791                           	opt stack 0
  1792  000089                     sprintf@len:
  1793                           	opt stack 0
  1794                           
  1795                           ; 2 bytes @ 0x29
  1796  000089                     	ds	1
  1797  00008A                     epoch_to_caltime@month:
  1798                           	opt stack 0
  1799                           
  1800                           ; 1 bytes @ 0x2A
  1801  00008A                     	ds	1
  1802  00008B                     sprintf@flag:
  1803                           	opt stack 0
  1804  00008B                     epoch_to_caltime@num:
  1805                           	opt stack 0
  1806                           
  1807                           ; 4 bytes @ 0x2B
  1808  00008B                     	ds	1
  1809  00008C                     sprintf@c:
  1810                           	opt stack 0
  1811                           
  1812                           ; 1 bytes @ 0x2C
  1813  00008C                     	ds	1
  1814  00008D                     sprintf@width:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x2D
  1818  00008D                     	ds	2
  1819  00008F                     RTCC_from_caltime@tm:
  1820                           	opt stack 0
  1821  00008F                     RTCC_from_epoch@tm:
  1822                           	opt stack 0
  1823  00008F                     print_time@tx:
  1824                           	opt stack 0
  1825                           
  1826                           ; 2 bytes @ 0x2F
  1827  00008F                     	ds	2
  1828  000091                     print_time@str:
  1829                           	opt stack 0
  1830                           
  1831                           ; 30 bytes @ 0x31
  1832  000091                     	ds	30
  1833  0000AF                     terminal_at_hand@tx:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x4F
  1837  0000AF                     	ds	2
  1838  0000B1                     terminal_at_hand@hand:
  1839                           	opt stack 0
  1840                           
  1841                           ; 2 bytes @ 0x51
  1842  0000B1                     	ds	2
  1843  0000B3                     terminal_at_hand@min:
  1844                           	opt stack 0
  1845                           
  1846                           ; 1 bytes @ 0x53
  1847  0000B3                     	ds	1
  1848  0000B4                     terminal_at_hand@max:
  1849                           	opt stack 0
  1850                           
  1851                           ; 1 bytes @ 0x54
  1852  0000B4                     	ds	1
  1853  0000B5                     terminal_at_hand@value:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0x55
  1857  0000B5                     	ds	1
  1858  0000B6                     terminal_time@tx:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x56
  1862  0000B6                     	ds	2
  1863  0000B8                     terminal_time@op0:
  1864                           	opt stack 0
  1865                           
  1866                           ; 2 bytes @ 0x58
  1867  0000B8                     	ds	2
  1868  0000BA                     terminal_time@op1:
  1869                           	opt stack 0
  1870                           
  1871                           ; 2 bytes @ 0x5A
  1872  0000BA                     	ds	2
  1873  0000BC                     terminal_time@op2:
  1874                           	opt stack 0
  1875                           
  1876                           ; 2 bytes @ 0x5C
  1877  0000BC                     	ds	2
  1878  0000BE                     _terminal_time$6199:
  1879                           	opt stack 0
  1880                           
  1881                           ; 1 bytes @ 0x5E
  1882  0000BE                     	ds	1
  1883  0000BF                     terminal_operation@tx:
  1884                           	opt stack 0
  1885                           
  1886                           ; 2 bytes @ 0x5F
  1887  0000BF                     	ds	2
  1888  0000C1                     terminal_operation@op0:
  1889                           	opt stack 0
  1890                           
  1891                           ; 2 bytes @ 0x61
  1892  0000C1                     	ds	2
  1893  0000C3                     terminal_operation@op1:
  1894                           	opt stack 0
  1895                           
  1896                           ; 2 bytes @ 0x63
  1897  0000C3                     	ds	2
  1898  0000C5                     terminal_operation@op2:
  1899                           	opt stack 0
  1900                           
  1901                           ; 2 bytes @ 0x65
  1902  0000C5                     	ds	2
  1903  0000C7                     terminal_operation@op3:
  1904                           	opt stack 0
  1905                           
  1906                           ; 2 bytes @ 0x67
  1907  0000C7                     	ds	2
  1908  0000C9                     tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           postdec1	equ	0xFE5
  1915                           fsr1h	equ	0xFE2
  1916                           fsr1l	equ	0xFE1
  1917                           
  1918                           ; 0 bytes @ 0x69
  1919                           
  1920                           	psect	cstackCOMRAM
  1921  000001                     __pcstackCOMRAM:
  1922                           	opt stack 0
  1923  000001                     ??_USBStdGetDscHandler:
  1924  000001                     ??_USBStdGetStatusHandler:
  1925  000001                     ?i2_USBTransferOnePacket:
  1926                           	opt stack 0
  1927  000001                     ?i2_ringbuf_num:
  1928                           	opt stack 0
  1929  000001                     USBConfigureEndpoint@direction:
  1930                           	opt stack 0
  1931  000001                     USBCtrlTrfTxService@byteToSend:
  1932                           	opt stack 0
  1933  000001                     USBCtrlTrfRxService@i:
  1934                           	opt stack 0
  1935  000001                     i2USBTransferOnePacket@dir:
  1936                           	opt stack 0
  1937  000001                     i2ringbuf_num@rb:
  1938                           	opt stack 0
  1939  000001                     i2memset@p1:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x0
  1943  000001                     	ds	1
  1944  000002                     ??_USBConfigureEndpoint:
  1945  000002                     USBCtrlTrfRxService@byteToRead:
  1946                           	opt stack 0
  1947  000002                     USBCtrlTrfInHandler@lastDTS:
  1948                           	opt stack 0
  1949  000002                     USBStdGetStatusHandler@p:
  1950                           	opt stack 0
  1951  000002                     i2USBTransferOnePacket@data:
  1952                           	opt stack 0
  1953                           
  1954                           ; 2 bytes @ 0x1
  1955  000002                     	ds	1
  1956  000003                     ??i2_ringbuf_num:
  1957  000003                     i2memset@c:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x2
  1961  000003                     	ds	1
  1962  000004                     i2USBTransferOnePacket@len:
  1963                           	opt stack 0
  1964                           
  1965                           ; 1 bytes @ 0x3
  1966  000004                     	ds	1
  1967  000005                     i2USBTransferOnePacket@ep:
  1968                           	opt stack 0
  1969  000005                     i2memset@n:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x4
  1973  000005                     	ds	1
  1974  000006                     USBConfigureEndpoint@EPNum:
  1975                           	opt stack 0
  1976  000006                     i2USBTransferOnePacket@handle:
  1977                           	opt stack 0
  1978                           
  1979                           ; 2 bytes @ 0x5
  1980  000006                     	ds	1
  1981  000007                     USBConfigureEndpoint@handle:
  1982                           	opt stack 0
  1983  000007                     i2memset@p:
  1984                           	opt stack 0
  1985                           
  1986                           ; 2 bytes @ 0x6
  1987  000007                     	ds	2
  1988  000009                     USBEnableEndpoint@options:
  1989                           	opt stack 0
  1990  000009                     i2USBDeviceInit@i:
  1991                           	opt stack 0
  1992  000009                     i2ringbuf_put@rb:
  1993                           	opt stack 0
  1994  000009                     i2ringbuf_pop@rb:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x8
  1998  000009                     	ds	1
  1999  00000A                     USBEnableEndpoint@p:
  2000                           	opt stack 0
  2001                           
  2002                           ; 2 bytes @ 0x9
  2003  00000A                     	ds	1
  2004  00000B                     ??i2_ringbuf_pop:
  2005  00000B                     i2ringbuf_put@asciicode:
  2006                           	opt stack 0
  2007                           
  2008                           ; 1 bytes @ 0xA
  2009  00000B                     	ds	1
  2010  00000C                     ??i2_ringbuf_put:
  2011  00000C                     USBEnableEndpoint@ep:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0xB
  2015  00000C                     	ds	1
  2016  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0xC
  2020  00000D                     	ds	2
  2021  00000F                     i2ringbuf_pop@ret:
  2022                           	opt stack 0
  2023  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2024                           	opt stack 0
  2025                           
  2026                           ; 2 bytes @ 0xE
  2027  00000F                     	ds	1
  2028  000010                     UART_ISR@ascii:
  2029                           	opt stack 0
  2030                           
  2031                           ; 1 bytes @ 0xF
  2032  000010                     	ds	1
  2033  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x10
  2037  000011                     	ds	2
  2038  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2039                           
  2040                           ; 0 bytes @ 0x12
  2041  000013                     	ds	2
  2042  000015                     ??_USBStdFeatureReqHandler:
  2043  000015                     USBStdSetCfgHandler@i:
  2044                           	opt stack 0
  2045                           
  2046                           ; 1 bytes @ 0x14
  2047  000015                     	ds	1
  2048  000016                     USBStdFeatureReqHandler@pUEP:
  2049                           	opt stack 0
  2050                           
  2051                           ; 2 bytes @ 0x15
  2052  000016                     	ds	2
  2053  000018                     USBStdFeatureReqHandler@current_ep_data:
  2054                           	opt stack 0
  2055                           
  2056                           ; 1 bytes @ 0x17
  2057  000018                     	ds	1
  2058  000019                     USBStdFeatureReqHandler@p:
  2059                           	opt stack 0
  2060                           
  2061                           ; 2 bytes @ 0x18
  2062  000019                     	ds	2
  2063  00001B                     ??_USBCtrlEPService:
  2064  00001B                     
  2065                           ; 0 bytes @ 0x1A
  2066  00001B                     	ds	2
  2067  00001D                     USBCtrlEPService@setup_cnt:
  2068                           	opt stack 0
  2069                           
  2070                           ; 1 bytes @ 0x1C
  2071  00001D                     	ds	1
  2072  00001E                     USBDeviceTasks@i:
  2073                           	opt stack 0
  2074                           
  2075                           ; 1 bytes @ 0x1D
  2076  00001E                     	ds	1
  2077  00001F                     ??_ISR:
  2078                           
  2079                           ; 0 bytes @ 0x1E
  2080  00001F                     	ds	14
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           postdec1	equ	0xFE5
  2088                           fsr1h	equ	0xFE2
  2089                           fsr1l	equ	0xFE1
  2090                           
  2091 ;;
  2092 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2093 ;;
  2094 ;; *************** function _main *****************
  2095 ;; Defined at:
  2096 ;;		line 101 in file "main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2  1475[None  ] int 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels required when called:   20
  2116 ;; This function calls:
  2117 ;;		_I2C_LCD_Clear
  2118 ;;		_I2C_LCD_Puts
  2119 ;;		_I2C_LCD_SetCursor
  2120 ;;		_RTCC_task
  2121 ;;		_UART_task
  2122 ;;		_USB_task
  2123 ;;		_main_init
  2124 ;;		_terminal_task
  2125 ;; This function is called by:
  2126 ;;		Startup code after reset
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text0
  2131  0136F4                     __ptext0:
  2132                           	opt stack 0
  2133  0136F4                     _main:
  2134                           	opt stack 11
  2135                           
  2136                           ;main.c: 102: main_init();
  2137                           
  2138                           ;incstack = 0
  2139  0136F4  ECE9  F08F         	call	_main_init	;wreg free
  2140                           
  2141                           ;main.c: 104: I2C_LCD_Clear();
  2142  0136F8  EC56  F0A0         	call	_I2C_LCD_Clear	;wreg free
  2143                           
  2144                           ;main.c: 105: I2C_LCD_SetCursor(0, 0);
  2145  0136FC  0E00               	movlw	0
  2146  0136FE  0100               	movlb	0	; () banked
  2147  013700  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2148  013702  0E00               	movlw	0
  2149  013704  EC3D  F09F         	call	_I2C_LCD_SetCursor
  2150                           
  2151                           ;main.c: 106: I2C_LCD_Puts("18F27J53");
  2152  013708  0E7F               	movlw	low STR_46
  2153  01370A  0100               	movlb	0	; () banked
  2154  01370C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2155  01370E  0EFF               	movlw	high STR_46
  2156  013710  0100               	movlb	0	; () banked
  2157  013712  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2158  013714  EC1E  F09C         	call	_I2C_LCD_Puts	;wreg free
  2159                           
  2160                           ;main.c: 107: I2C_LCD_SetCursor(0, 1);
  2161  013718  0E01               	movlw	1
  2162  01371A  0100               	movlb	0	; () banked
  2163  01371C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2164  01371E  0E00               	movlw	0
  2165  013720  EC3D  F09F         	call	_I2C_LCD_SetCursor
  2166                           
  2167                           ;main.c: 108: I2C_LCD_Puts("Template");
  2168  013724  0E9A               	movlw	low STR_47
  2169  013726  0100               	movlb	0	; () banked
  2170  013728  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2171  01372A  0EFF               	movlw	high STR_47
  2172  01372C  0100               	movlb	0	; () banked
  2173  01372E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2174  013730  EC1E  F09C         	call	_I2C_LCD_Puts	;wreg free
  2175  013734  D015               	goto	l9818
  2176  013736                     l9808:
  2177                           
  2178                           ;main.c: 113: INTCONbits.GIE = 0;
  2179  013736  9EF2               	bcf	intcon,7,c	;volatile
  2180                           
  2181                           ;main.c: 115: USB_task();
  2182  013738  ECEE  F099         	call	_USB_task	;wreg free
  2183                           
  2184                           ;main.c: 116: UART_task();
  2185  01373C  ECF0  F09F         	call	_UART_task	;wreg free
  2186                           
  2187                           ;main.c: 117: RTCC_task();
  2188  013740  EC03  F09E         	call	_RTCC_task	;wreg free
  2189                           
  2190                           ;main.c: 118: terminal_task(&usb_tx, &usb_rx);
  2191  013744  0E74               	movlw	low _usb_tx
  2192  013746  0101               	movlb	1	; () banked
  2193  013748  6F8B               	movwf	terminal_task@tx& (0+255),b
  2194  01374A  0E01               	movlw	high _usb_tx
  2195  01374C  0101               	movlb	1	; () banked
  2196  01374E  6F8C               	movwf	(terminal_task@tx+1)& (0+255),b
  2197  013750  0E6C               	movlw	low _usb_rx
  2198  013752  0101               	movlb	1	; () banked
  2199  013754  6F8D               	movwf	terminal_task@rx& (0+255),b
  2200  013756  0E01               	movlw	high _usb_rx
  2201  013758  0101               	movlb	1	; () banked
  2202  01375A  6F8E               	movwf	(terminal_task@rx+1)& (0+255),b
  2203  01375C  EC03  F084         	call	_terminal_task	;wreg free
  2204  013760                     l9818:
  2205                           
  2206                           ;main.c: 120: INTCONbits.GIE = 1;
  2207  013760  8EF2               	bsf	intcon,7,c	;volatile
  2208  013762  D7E9               	goto	l9808
  2209  013764                     __end_of_main:
  2210                           	opt stack 0
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           intcon	equ	0xFF2
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           
  2222 ;; *************** function _terminal_task *****************
  2223 ;; Defined at:
  2224 ;;		line 8 in file "../My_library/My_terminal.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2227 ;;		 -> usb_tx(8), 
  2228 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2229 ;;		 -> usb_rx(8), 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  i               1  108[BANK1 ] unsigned char 
  2232 ;;  i               1  110[BANK1 ] unsigned char 
  2233 ;;  ascii           1  109[BANK1 ] unsigned char 
  2234 ;;  buf           100    6[BANK1 ] unsigned char [100]
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2244 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;      Totals:         0       0     111       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;Total ram usage:      111 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:   19
  2251 ;; This function calls:
  2252 ;;		_ringbuf_backspace
  2253 ;;		_ringbuf_delete
  2254 ;;		_ringbuf_init
  2255 ;;		_ringbuf_num
  2256 ;;		_ringbuf_pop
  2257 ;;		_ringbuf_put
  2258 ;;		_ringbuf_put_num
  2259 ;;		_ringbuf_put_str
  2260 ;;		_terminal_operation
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text1
  2267  010806                     __ptext1:
  2268                           	opt stack 0
  2269  010806                     _terminal_task:
  2270                           	opt stack 11
  2271                           
  2272                           ;My_terminal.c: 9: static ringbuf_t command;
  2273                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2274                           ;My_terminal.c: 11: if (command_init == 0) {
  2275                           
  2276                           ;incstack = 0
  2277  010806  0100               	movlb	0	; () banked
  2278  010808  51FB               	movf	terminal_task@command_init& (0+255),w,b
  2279  01080A  0100               	movlb	0	; () banked
  2280  01080C  A4D8               	btfss	status,2,c
  2281  01080E  D016               	goto	l9344
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;My_terminal.c: 12: command_init = 1;
  2285  010810  0E01               	movlw	1
  2286  010812  0100               	movlb	0	; () banked
  2287  010814  6FFB               	movwf	terminal_task@command_init& (0+255),b
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;My_terminal.c: 13: char buf[100];
  2291                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2292  010816  0E7C               	movlw	low terminal_task@command
  2293  010818  0100               	movlb	0	; () banked
  2294  01081A  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2295  01081C  0E01               	movlw	high terminal_task@command
  2296  01081E  0100               	movlb	0	; () banked
  2297  010820  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2298  010822  0E91               	movlw	low terminal_task@buf
  2299  010824  0100               	movlb	0	; () banked
  2300  010826  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2301  010828  0E01               	movlw	high terminal_task@buf
  2302  01082A  0100               	movlb	0	; () banked
  2303  01082C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2304  01082E  0E00               	movlw	0
  2305  010830  0100               	movlb	0	; () banked
  2306  010832  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2307  010834  0E64               	movlw	100
  2308  010836  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2309  010838  EC43  F09D         	call	_ringbuf_init	;wreg free
  2310  01083C                     l9344:
  2311                           
  2312                           ;My_terminal.c: 15: }
  2313                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2314  01083C  C18D  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2315  010840  C18E  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2316  010844  EC8C  F08E         	call	_ringbuf_num	;wreg free
  2317  010848  0100               	movlb	0	; () banked
  2318  01084A  5160               	movf	?_ringbuf_num& (0+255),w,b
  2319  01084C  0100               	movlb	0	; () banked
  2320  01084E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2321  010850  B4D8               	btfsc	status,2,c
  2322  010852  0012               	return	
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2326  010854  C18D  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2327  010858  C18E  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2328  01085C  EC19  F094         	call	_ringbuf_pop	;wreg free
  2329  010860  0101               	movlb	1	; () banked
  2330  010862  6FF8               	movwf	terminal_task@ascii& (0+255),b
  2331                           
  2332                           ;My_terminal.c: 18: switch (ascii) {
  2333  010864  D176               	goto	l9408
  2334  010866                     l9348:
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2338  010866  0E7C               	movlw	low terminal_task@command
  2339  010868  0100               	movlb	0	; () banked
  2340  01086A  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2341  01086C  0E01               	movlw	high terminal_task@command
  2342  01086E  0100               	movlb	0	; () banked
  2343  010870  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2344  010872  0E00               	movlw	0
  2345  010874  0100               	movlb	0	; () banked
  2346  010876  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2347  010878  ECDF  F092         	call	_ringbuf_put	;wreg free
  2348                           
  2349                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2350  01087C  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2351  010880  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2352  010884  0E09               	movlw	9
  2353  010886  0100               	movlb	0	; () banked
  2354  010888  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2355  01088A  ECDF  F092         	call	_ringbuf_put	;wreg free
  2356                           
  2357                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2358  01088E  0E7C               	movlw	low terminal_task@command
  2359  010890  0100               	movlb	0	; () banked
  2360  010892  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2361  010894  0E01               	movlw	high terminal_task@command
  2362  010896  0100               	movlb	0	; () banked
  2363  010898  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2364  01089A  EC8C  F08E         	call	_ringbuf_num	;wreg free
  2365  01089E  0EFF               	movlw	255
  2366  0108A0  0100               	movlb	0	; () banked
  2367  0108A2  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2368  0108A4  0101               	movlb	1	; () banked
  2369  0108A6  6FF5               	movwf	_terminal_task$6198& (0+255),b
  2370  0108A8  0EFF               	movlw	255
  2371  0108AA  0100               	movlb	0	; () banked
  2372  0108AC  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2373  0108AE  0101               	movlb	1	; () banked
  2374  0108B0  6FF6               	movwf	(_terminal_task$6198+1)& (0+255),b
  2375                           
  2376                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2377  0108B2  C18B  F06F         	movff	terminal_task@tx,ringbuf_put_num@rb
  2378  0108B6  C18C  F070         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2379  0108BA  C1F5  F071         	movff	_terminal_task$6198,ringbuf_put_num@value
  2380  0108BE  C1F6  F072         	movff	_terminal_task$6198+1,ringbuf_put_num@value+1
  2381  0108C2  0E02               	movlw	2
  2382  0108C4  0100               	movlb	0	; () banked
  2383  0108C6  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2384  0108C8  ECC2  F09A         	call	_ringbuf_put_num	;wreg free
  2385                           
  2386                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2387  0108CC  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2388  0108D0  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2389  0108D4  0E0A               	movlw	10
  2390  0108D6  0100               	movlb	0	; () banked
  2391  0108D8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2392  0108DA  ECDF  F092         	call	_ringbuf_put	;wreg free
  2393                           
  2394                           ;My_terminal.c: 24: static char op0[25];
  2395                           ;My_terminal.c: 25: static char op1[25];
  2396                           ;My_terminal.c: 26: static char op2[25];
  2397                           ;My_terminal.c: 27: static char op3[25];
  2398                           ;My_terminal.c: 28: uint8_t i;
  2399                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2400  0108DE  0E00               	movlw	0
  2401  0108E0  0101               	movlb	1	; () banked
  2402  0108E2  6FF9               	movwf	terminal_task@i& (0+255),b
  2403  0108E4  D002               	goto	l9354
  2404  0108E6                     l9352:
  2405                           
  2406                           ; BSR set to: 1
  2407  0108E6  0101               	movlb	1	; () banked
  2408  0108E8  2BF9               	incf	terminal_task@i& (0+255),f,b
  2409  0108EA                     l9354:
  2410                           
  2411                           ; BSR set to: 1
  2412  0108EA  0E7C               	movlw	low terminal_task@command
  2413  0108EC  0100               	movlb	0	; () banked
  2414  0108EE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2415  0108F0  0E01               	movlw	high terminal_task@command
  2416  0108F2  0100               	movlb	0	; () banked
  2417  0108F4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2418  0108F6  EC19  F094         	call	_ringbuf_pop	;wreg free
  2419  0108FA  0101               	movlb	1	; () banked
  2420  0108FC  6F8F               	movwf	??_terminal_task& (0+255),b
  2421  0108FE  0101               	movlb	1	; () banked
  2422  010900  51F9               	movf	terminal_task@i& (0+255),w,b
  2423  010902  0D01               	mullw	1
  2424  010904  0E14               	movlw	low terminal_task@op0
  2425  010906  24F3               	addwf	prodl,w,c
  2426  010908  6ED9               	movwf	fsr2l,c
  2427  01090A  0E01               	movlw	high terminal_task@op0
  2428  01090C  20F4               	addwfc	prodh,w,c
  2429  01090E  6EDA               	movwf	fsr2h,c
  2430  010910  C18F  FFDF         	movff	??_terminal_task,indf2
  2431  010914  50DF               	movf	indf2,w,c
  2432  010916  A4D8               	btfss	status,2,c
  2433  010918  D7E6               	goto	l9352
  2434                           
  2435                           ; BSR set to: 1
  2436                           ;My_terminal.c: 30: op0[i] = '\0';
  2437                           
  2438                           ; BSR set to: 1
  2439  01091A  0101               	movlb	1	; () banked
  2440  01091C  51F9               	movf	terminal_task@i& (0+255),w,b
  2441  01091E  0D01               	mullw	1
  2442  010920  0E14               	movlw	low terminal_task@op0
  2443  010922  24F3               	addwf	prodl,w,c
  2444  010924  6ED9               	movwf	fsr2l,c
  2445  010926  0E01               	movlw	high terminal_task@op0
  2446  010928  20F4               	addwfc	prodh,w,c
  2447  01092A  6EDA               	movwf	fsr2h,c
  2448  01092C  0E00               	movlw	0
  2449  01092E  6EDF               	movwf	indf2,c
  2450                           
  2451                           ; BSR set to: 1
  2452                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2453  010930  0E00               	movlw	0
  2454  010932  0101               	movlb	1	; () banked
  2455  010934  6FF9               	movwf	terminal_task@i& (0+255),b
  2456  010936  D002               	goto	l9362
  2457  010938                     l9360:
  2458                           
  2459                           ; BSR set to: 1
  2460  010938  0101               	movlb	1	; () banked
  2461  01093A  2BF9               	incf	terminal_task@i& (0+255),f,b
  2462  01093C                     l9362:
  2463                           
  2464                           ; BSR set to: 1
  2465  01093C  0E7C               	movlw	low terminal_task@command
  2466  01093E  0100               	movlb	0	; () banked
  2467  010940  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2468  010942  0E01               	movlw	high terminal_task@command
  2469  010944  0100               	movlb	0	; () banked
  2470  010946  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2471  010948  EC19  F094         	call	_ringbuf_pop	;wreg free
  2472  01094C  0101               	movlb	1	; () banked
  2473  01094E  6F8F               	movwf	??_terminal_task& (0+255),b
  2474  010950  0101               	movlb	1	; () banked
  2475  010952  51F9               	movf	terminal_task@i& (0+255),w,b
  2476  010954  0D01               	mullw	1
  2477  010956  0E2D               	movlw	low terminal_task@op1
  2478  010958  24F3               	addwf	prodl,w,c
  2479  01095A  6ED9               	movwf	fsr2l,c
  2480  01095C  0E01               	movlw	high terminal_task@op1
  2481  01095E  20F4               	addwfc	prodh,w,c
  2482  010960  6EDA               	movwf	fsr2h,c
  2483  010962  C18F  FFDF         	movff	??_terminal_task,indf2
  2484  010966  50DF               	movf	indf2,w,c
  2485  010968  A4D8               	btfss	status,2,c
  2486  01096A  D7E6               	goto	l9360
  2487                           
  2488                           ; BSR set to: 1
  2489                           ;My_terminal.c: 32: op1[i] = '\0';
  2490                           
  2491                           ; BSR set to: 1
  2492  01096C  0101               	movlb	1	; () banked
  2493  01096E  51F9               	movf	terminal_task@i& (0+255),w,b
  2494  010970  0D01               	mullw	1
  2495  010972  0E2D               	movlw	low terminal_task@op1
  2496  010974  24F3               	addwf	prodl,w,c
  2497  010976  6ED9               	movwf	fsr2l,c
  2498  010978  0E01               	movlw	high terminal_task@op1
  2499  01097A  20F4               	addwfc	prodh,w,c
  2500  01097C  6EDA               	movwf	fsr2h,c
  2501  01097E  0E00               	movlw	0
  2502  010980  6EDF               	movwf	indf2,c
  2503                           
  2504                           ; BSR set to: 1
  2505                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2506  010982  0E00               	movlw	0
  2507  010984  0101               	movlb	1	; () banked
  2508  010986  6FF9               	movwf	terminal_task@i& (0+255),b
  2509  010988  D002               	goto	l9370
  2510  01098A                     l9368:
  2511                           
  2512                           ; BSR set to: 1
  2513  01098A  0101               	movlb	1	; () banked
  2514  01098C  2BF9               	incf	terminal_task@i& (0+255),f,b
  2515  01098E                     l9370:
  2516                           
  2517                           ; BSR set to: 1
  2518  01098E  0E7C               	movlw	low terminal_task@command
  2519  010990  0100               	movlb	0	; () banked
  2520  010992  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2521  010994  0E01               	movlw	high terminal_task@command
  2522  010996  0100               	movlb	0	; () banked
  2523  010998  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2524  01099A  EC19  F094         	call	_ringbuf_pop	;wreg free
  2525  01099E  0101               	movlb	1	; () banked
  2526  0109A0  6F8F               	movwf	??_terminal_task& (0+255),b
  2527  0109A2  0101               	movlb	1	; () banked
  2528  0109A4  51F9               	movf	terminal_task@i& (0+255),w,b
  2529  0109A6  0D01               	mullw	1
  2530  0109A8  0E80               	movlw	low terminal_task@op2
  2531  0109AA  24F3               	addwf	prodl,w,c
  2532  0109AC  6ED9               	movwf	fsr2l,c
  2533  0109AE  0E02               	movlw	high terminal_task@op2
  2534  0109B0  20F4               	addwfc	prodh,w,c
  2535  0109B2  6EDA               	movwf	fsr2h,c
  2536  0109B4  C18F  FFDF         	movff	??_terminal_task,indf2
  2537  0109B8  50DF               	movf	indf2,w,c
  2538  0109BA  A4D8               	btfss	status,2,c
  2539  0109BC  D7E6               	goto	l9368
  2540                           
  2541                           ; BSR set to: 1
  2542                           ;My_terminal.c: 34: op2[i] = '\0';
  2543                           
  2544                           ; BSR set to: 1
  2545  0109BE  0101               	movlb	1	; () banked
  2546  0109C0  51F9               	movf	terminal_task@i& (0+255),w,b
  2547  0109C2  0D01               	mullw	1
  2548  0109C4  0E80               	movlw	low terminal_task@op2
  2549  0109C6  24F3               	addwf	prodl,w,c
  2550  0109C8  6ED9               	movwf	fsr2l,c
  2551  0109CA  0E02               	movlw	high terminal_task@op2
  2552  0109CC  20F4               	addwfc	prodh,w,c
  2553  0109CE  6EDA               	movwf	fsr2h,c
  2554  0109D0  0E00               	movlw	0
  2555  0109D2  6EDF               	movwf	indf2,c
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2559  0109D4  0E00               	movlw	0
  2560  0109D6  0101               	movlb	1	; () banked
  2561  0109D8  6FF9               	movwf	terminal_task@i& (0+255),b
  2562  0109DA  D002               	goto	l9378
  2563  0109DC                     l9376:
  2564                           
  2565                           ; BSR set to: 1
  2566  0109DC  0101               	movlb	1	; () banked
  2567  0109DE  2BF9               	incf	terminal_task@i& (0+255),f,b
  2568  0109E0                     l9378:
  2569                           
  2570                           ; BSR set to: 1
  2571  0109E0  0E7C               	movlw	low terminal_task@command
  2572  0109E2  0100               	movlb	0	; () banked
  2573  0109E4  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2574  0109E6  0E01               	movlw	high terminal_task@command
  2575  0109E8  0100               	movlb	0	; () banked
  2576  0109EA  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2577  0109EC  EC19  F094         	call	_ringbuf_pop	;wreg free
  2578  0109F0  0101               	movlb	1	; () banked
  2579  0109F2  6F8F               	movwf	??_terminal_task& (0+255),b
  2580  0109F4  0101               	movlb	1	; () banked
  2581  0109F6  51F9               	movf	terminal_task@i& (0+255),w,b
  2582  0109F8  0D01               	mullw	1
  2583  0109FA  0E99               	movlw	low terminal_task@op3
  2584  0109FC  24F3               	addwf	prodl,w,c
  2585  0109FE  6ED9               	movwf	fsr2l,c
  2586  010A00  0E02               	movlw	high terminal_task@op3
  2587  010A02  20F4               	addwfc	prodh,w,c
  2588  010A04  6EDA               	movwf	fsr2h,c
  2589  010A06  C18F  FFDF         	movff	??_terminal_task,indf2
  2590  010A0A  50DF               	movf	indf2,w,c
  2591  010A0C  A4D8               	btfss	status,2,c
  2592  010A0E  D7E6               	goto	l9376
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;My_terminal.c: 36: op3[i] = '\0';
  2596                           
  2597                           ; BSR set to: 1
  2598  010A10  0101               	movlb	1	; () banked
  2599  010A12  51F9               	movf	terminal_task@i& (0+255),w,b
  2600  010A14  0D01               	mullw	1
  2601  010A16  0E99               	movlw	low terminal_task@op3
  2602  010A18  24F3               	addwf	prodl,w,c
  2603  010A1A  6ED9               	movwf	fsr2l,c
  2604  010A1C  0E02               	movlw	high terminal_task@op3
  2605  010A1E  20F4               	addwfc	prodh,w,c
  2606  010A20  6EDA               	movwf	fsr2h,c
  2607  010A22  0E00               	movlw	0
  2608  010A24  6EDF               	movwf	indf2,c
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2612  010A26  C18B  F0BF         	movff	terminal_task@tx,terminal_operation@tx
  2613  010A2A  C18C  F0C0         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2614  010A2E  0E14               	movlw	low terminal_task@op0
  2615  010A30  0100               	movlb	0	; () banked
  2616  010A32  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2617  010A34  0E01               	movlw	high terminal_task@op0
  2618  010A36  0100               	movlb	0	; () banked
  2619  010A38  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2620  010A3A  0E2D               	movlw	low terminal_task@op1
  2621  010A3C  0100               	movlb	0	; () banked
  2622  010A3E  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2623  010A40  0E01               	movlw	high terminal_task@op1
  2624  010A42  0100               	movlb	0	; () banked
  2625  010A44  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2626  010A46  0E80               	movlw	low terminal_task@op2
  2627  010A48  0100               	movlb	0	; () banked
  2628  010A4A  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2629  010A4C  0E02               	movlw	high terminal_task@op2
  2630  010A4E  0100               	movlb	0	; () banked
  2631  010A50  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2632  010A52  0E99               	movlw	low terminal_task@op3
  2633  010A54  0100               	movlb	0	; () banked
  2634  010A56  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2635  010A58  0E02               	movlw	high terminal_task@op3
  2636  010A5A  0100               	movlb	0	; () banked
  2637  010A5C  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2638  010A5E  EC49  F093         	call	_terminal_operation	;wreg free
  2639                           
  2640                           ;My_terminal.c: 38: break;
  2641  010A62  0012               	return	
  2642  010A64                     l9384:
  2643                           
  2644                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2645  010A64  0E7C               	movlw	low terminal_task@command
  2646  010A66  0100               	movlb	0	; () banked
  2647  010A68  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2648  010A6A  0E01               	movlw	high terminal_task@command
  2649  010A6C  0100               	movlb	0	; () banked
  2650  010A6E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2651  010A70  0E00               	movlw	0
  2652  010A72  0100               	movlb	0	; () banked
  2653  010A74  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2654  010A76  ECDF  F092         	call	_ringbuf_put	;wreg free
  2655                           
  2656                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2657  010A7A  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2658  010A7E  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2659  010A82  0E20               	movlw	32
  2660  010A84  0100               	movlb	0	; () banked
  2661  010A86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2662  010A88  ECDF  F092         	call	_ringbuf_put	;wreg free
  2663                           
  2664                           ;My_terminal.c: 42: break;
  2665  010A8C  0012               	return	
  2666  010A8E                     l9386:
  2667                           
  2668                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2669  010A8E  0E7C               	movlw	low terminal_task@command
  2670  010A90  0100               	movlb	0	; () banked
  2671  010A92  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2672  010A94  0E01               	movlw	high terminal_task@command
  2673  010A96  0100               	movlb	0	; () banked
  2674  010A98  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2675  010A9A  ECA7  F099         	call	_ringbuf_backspace	;wreg free
  2676                           
  2677                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2678  010A9E  C18B  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2679  010AA2  C18C  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2680  010AA6  0EE3               	movlw	low STR_19
  2681  010AA8  0100               	movlb	0	; () banked
  2682  010AAA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2683  010AAC  0EFF               	movlw	high STR_19
  2684  010AAE  0100               	movlb	0	; () banked
  2685  010AB0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2686  010AB2  EC53  F09C         	call	_ringbuf_put_str	;wreg free
  2687                           
  2688                           ;My_terminal.c: 46: break;
  2689  010AB6  0012               	return	
  2690  010AB8                     l9390:
  2691                           
  2692                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2693  010AB8  0E00               	movlw	0
  2694  010ABA  0101               	movlb	1	; () banked
  2695  010ABC  6FF7               	movwf	terminal_task@i_4539& (0+255),b
  2696  010ABE  D00E               	goto	l9396
  2697  010AC0                     l9392:
  2698                           
  2699                           ; BSR set to: 1
  2700  010AC0  C18B  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2701  010AC4  C18C  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2702  010AC8  0EE3               	movlw	low STR_19
  2703  010ACA  0100               	movlb	0	; () banked
  2704  010ACC  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2705  010ACE  0EFF               	movlw	high STR_19
  2706  010AD0  0100               	movlb	0	; () banked
  2707  010AD2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2708  010AD4  EC53  F09C         	call	_ringbuf_put_str	;wreg free
  2709  010AD8  0101               	movlb	1	; () banked
  2710  010ADA  2BF7               	incf	terminal_task@i_4539& (0+255),f,b
  2711  010ADC                     l9396:
  2712                           
  2713                           ; BSR set to: 1
  2714  010ADC  0E7C               	movlw	low terminal_task@command
  2715  010ADE  0100               	movlb	0	; () banked
  2716  010AE0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2717  010AE2  0E01               	movlw	high terminal_task@command
  2718  010AE4  0100               	movlb	0	; () banked
  2719  010AE6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2720  010AE8  EC8C  F08E         	call	_ringbuf_num	;wreg free
  2721  010AEC  0101               	movlb	1	; () banked
  2722  010AEE  51F7               	movf	terminal_task@i_4539& (0+255),w,b
  2723  010AF0  0101               	movlb	1	; () banked
  2724  010AF2  6F8F               	movwf	??_terminal_task& (0+255),b
  2725  010AF4  6B90               	clrf	(??_terminal_task+1)& (0+255),b
  2726  010AF6  0100               	movlb	0	; () banked
  2727  010AF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2728  010AFA  0101               	movlb	1	; () banked
  2729  010AFC  5D8F               	subwf	??_terminal_task& (0+255),w,b
  2730  010AFE  0100               	movlb	0	; () banked
  2731  010B00  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2732  010B02  0101               	movlb	1	; () banked
  2733  010B04  5990               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2734  010B06  A0D8               	btfss	status,0,c
  2735  010B08  D7DB               	goto	l9392
  2736                           
  2737                           ; BSR set to: 1
  2738                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2739                           
  2740                           ; BSR set to: 1
  2741  010B0A  0E7C               	movlw	low terminal_task@command
  2742  010B0C  0100               	movlb	0	; () banked
  2743  010B0E  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2744  010B10  0E01               	movlw	high terminal_task@command
  2745  010B12  0100               	movlb	0	; () banked
  2746  010B14  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2747  010B16  ECBB  F09F         	call	_ringbuf_delete	;wreg free
  2748                           
  2749                           ;My_terminal.c: 50: break;
  2750  010B1A  0012               	return	
  2751  010B1C                     l9400:
  2752                           
  2753                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2754  010B1C  0E1F               	movlw	31
  2755  010B1E  0101               	movlb	1	; () banked
  2756  010B20  65F8               	cpfsgt	terminal_task@ascii& (0+255),b
  2757  010B22  0012               	return	
  2758                           
  2759                           ; BSR set to: 1
  2760  010B24  0E7F               	movlw	127
  2761  010B26  0101               	movlb	1	; () banked
  2762  010B28  61F8               	cpfslt	terminal_task@ascii& (0+255),b
  2763  010B2A  0012               	return	
  2764                           
  2765                           ; BSR set to: 1
  2766                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2767  010B2C  0E7C               	movlw	low terminal_task@command
  2768  010B2E  0100               	movlb	0	; () banked
  2769  010B30  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2770  010B32  0E01               	movlw	high terminal_task@command
  2771  010B34  0100               	movlb	0	; () banked
  2772  010B36  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2773  010B38  C1F8  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2774  010B3C  ECDF  F092         	call	_ringbuf_put	;wreg free
  2775                           
  2776                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2777  010B40  C18B  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2778  010B44  C18C  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2779  010B48  C1F8  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2780  010B4C  ECDF  F092         	call	_ringbuf_put	;wreg free
  2781                           
  2782                           ;My_terminal.c: 57: }
  2783                           
  2784                           ;My_terminal.c: 55: }
  2785                           ;My_terminal.c: 56: break;
  2786  010B50  0012               	return	
  2787  010B52                     l9408:
  2788  010B52  0101               	movlb	1	; () banked
  2789  010B54  51F8               	movf	terminal_task@ascii& (0+255),w,b
  2790                           
  2791                           ; Switch size 1, requested type "space"
  2792                           ; Number of cases is 4, Range of values is 8 to 127
  2793                           ; switch strategies available:
  2794                           ; Name         Instructions Cycles
  2795                           ; simple_byte           13     7 (average)
  2796                           ;	Chosen strategy is simple_byte
  2797  010B56  0A08               	xorlw	8	; case 8
  2798  010B58  B4D8               	btfsc	status,2,c
  2799  010B5A  D799               	goto	l9386
  2800  010B5C  0A05               	xorlw	5	; case 13
  2801  010B5E  B4D8               	btfsc	status,2,c
  2802  010B60  D682               	goto	l9348
  2803  010B62  0A2D               	xorlw	45	; case 32
  2804  010B64  B4D8               	btfsc	status,2,c
  2805  010B66  D77E               	goto	l9384
  2806  010B68  0A5F               	xorlw	95	; case 127
  2807  010B6A  B4D8               	btfsc	status,2,c
  2808  010B6C  D7A5               	goto	l9390
  2809  010B6E  D7D6               	goto	l9400
  2810  010B70                     __end_of_terminal_task:
  2811                           	opt stack 0
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           intcon	equ	0xFF2
  2819                           postinc0	equ	0xFEE
  2820                           wreg	equ	0xFE8
  2821                           postdec1	equ	0xFE5
  2822                           fsr1h	equ	0xFE2
  2823                           fsr1l	equ	0xFE1
  2824                           indf2	equ	0xFDF
  2825                           fsr2h	equ	0xFDA
  2826                           fsr2l	equ	0xFD9
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _terminal_operation *****************
  2830 ;; Defined at:
  2831 ;;		line 50 in file "main.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2834 ;;		 -> usb_tx(8), 
  2835 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2836 ;;		 -> terminal_task@op0(25), 
  2837 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2838 ;;		 -> terminal_task@op1(25), 
  2839 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2840 ;;		 -> terminal_task@op2(25), 
  2841 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2842 ;;		 -> terminal_task@op3(25), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2854 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;Total ram usage:       10 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:   18
  2861 ;; This function calls:
  2862 ;;		_ringbuf_put_str
  2863 ;;		_strcmp
  2864 ;;		_terminal_time
  2865 ;; This function is called by:
  2866 ;;		_terminal_task
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text2
  2871  012692                     __ptext2:
  2872                           	opt stack 0
  2873  012692                     _terminal_operation:
  2874                           	opt stack 11
  2875                           
  2876                           ;main.c: 51: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2877                           
  2878                           ;incstack = 0
  2879  012692  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2880  012696  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2881  01269A  0ECF               	movlw	low STR_41
  2882  01269C  0100               	movlb	0	; () banked
  2883  01269E  6F62               	movwf	strcmp@s2& (0+255),b
  2884  0126A0  0EFF               	movlw	high STR_41
  2885  0126A2  0100               	movlb	0	; () banked
  2886  0126A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2887  0126A6  ECE7  F09C         	call	_strcmp	;wreg free
  2888  0126AA  0100               	movlb	0	; () banked
  2889  0126AC  5160               	movf	?_strcmp& (0+255),w,b
  2890  0126AE  0100               	movlb	0	; () banked
  2891  0126B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2892  0126B2  B4D8               	btfsc	status,2,c
  2893  0126B4  D012               	goto	l9146
  2894                           
  2895                           ; BSR set to: 0
  2896  0126B6  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2897  0126BA  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2898  0126BE  0EEE               	movlw	low STR_42
  2899  0126C0  0100               	movlb	0	; () banked
  2900  0126C2  6F62               	movwf	strcmp@s2& (0+255),b
  2901  0126C4  0EFF               	movlw	high STR_42
  2902  0126C6  0100               	movlb	0	; () banked
  2903  0126C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2904  0126CA  ECE7  F09C         	call	_strcmp	;wreg free
  2905  0126CE  0100               	movlb	0	; () banked
  2906  0126D0  5160               	movf	?_strcmp& (0+255),w,b
  2907  0126D2  0100               	movlb	0	; () banked
  2908  0126D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2909  0126D6  A4D8               	btfss	status,2,c
  2910  0126D8  D00C               	goto	l9148
  2911  0126DA                     l9146:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;main.c: 52: ringbuf_put_str(tx,
  2915                           ;main.c: 53: "\t******************************\n"
  2916                           ;main.c: 54: "\t**** PIC18F27J53 template ****\n"
  2917                           ;main.c: 55: "\t**** Made by @Ryokeri14   ****\n"
  2918                           ;main.c: 56: "\t******************************\n\n"
  2919                           ;main.c: 57: "\tprint_time(t)\n"
  2920                           ;main.c: 58: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  2921                           ;main.c: 59: "\n\tfor Developper\n"
  2922                           ;main.c: 60: "\tRESET();\n"
  2923                           ;main.c: 61: "\tbootload\n"
  2924                           ;main.c: 62: );
  2925  0126DA  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2926  0126DE  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2927  0126E2  0E58               	movlw	low STR_43
  2928  0126E4  0100               	movlb	0	; () banked
  2929  0126E6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2930  0126E8  0EFE               	movlw	high STR_43
  2931  0126EA  0100               	movlb	0	; () banked
  2932  0126EC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2933  0126EE  EC53  F09C         	call	_ringbuf_put_str	;wreg free
  2934  0126F2                     l9148:
  2935                           
  2936                           ;main.c: 63: }
  2937                           ;main.c: 64: terminal_time(tx, op0, op1, op2);
  2938  0126F2  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  2939  0126F6  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2940  0126FA  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  2941  0126FE  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2942  012702  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  2943  012706  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2944  01270A  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  2945  01270E  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2946  012712  EC2D  F082         	call	_terminal_time	;wreg free
  2947                           
  2948                           ;main.c: 65: if (!strcmp(op0, "RESET();")) {
  2949  012716  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2950  01271A  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2951  01271E  0E88               	movlw	low STR_44
  2952  012720  0100               	movlb	0	; () banked
  2953  012722  6F62               	movwf	strcmp@s2& (0+255),b
  2954  012724  0EFF               	movlw	high STR_44
  2955  012726  0100               	movlb	0	; () banked
  2956  012728  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2957  01272A  ECE7  F09C         	call	_strcmp	;wreg free
  2958  01272E  0100               	movlb	0	; () banked
  2959  012730  5160               	movf	?_strcmp& (0+255),w,b
  2960  012732  0100               	movlb	0	; () banked
  2961  012734  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2962  012736  B4D8               	btfsc	status,2,c
  2963                           
  2964                           ; BSR set to: 0
  2965  012738  00FF               	reset		;# 
  2966                           
  2967                           ;main.c: 67: }
  2968                           ;main.c: 68: if (!strcmp(op0, "bootload")) {
  2969  01273A  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2970  01273E  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2971  012742  0E91               	movlw	low STR_45
  2972  012744  0100               	movlb	0	; () banked
  2973  012746  6F62               	movwf	strcmp@s2& (0+255),b
  2974  012748  0EFF               	movlw	high STR_45
  2975  01274A  0100               	movlb	0	; () banked
  2976  01274C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2977  01274E  ECE7  F09C         	call	_strcmp	;wreg free
  2978  012752  0100               	movlb	0	; () banked
  2979  012754  5160               	movf	?_strcmp& (0+255),w,b
  2980  012756  0100               	movlb	0	; () banked
  2981  012758  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2982  01275A  A4D8               	btfss	status,2,c
  2983  01275C  0012               	return	
  2984                           
  2985                           ; BSR set to: 0
  2986  01275E  EF0E F000          	goto	28	;# 
  2987  012762  0012               	return	
  2988  012764                     __end_of_terminal_operation:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1h	equ	0xFE2
  3001                           fsr1l	equ	0xFE1
  3002                           indf2	equ	0xFDF
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function _terminal_time *****************
  3008 ;; Defined at:
  3009 ;;		line 93 in file "../My_library/My_terminal.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  3012 ;;		 -> usb_tx(8), 
  3013 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  3014 ;;		 -> terminal_task@op0(25), 
  3015 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  3016 ;;		 -> terminal_task@op1(25), 
  3017 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  3018 ;;		 -> terminal_task@op2(25), 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;Total ram usage:        9 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:   17
  3037 ;; This function calls:
  3038 ;;		_atoi
  3039 ;;		_month_length
  3040 ;;		_print_time
  3041 ;;		_strcmp
  3042 ;;		_terminal_at_hand
  3043 ;; This function is called by:
  3044 ;;		_terminal_operation
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text3
  3049  01045A                     __ptext3:
  3050                           	opt stack 0
  3051  01045A                     _terminal_time:
  3052                           	opt stack 11
  3053                           
  3054                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3055                           
  3056                           ;incstack = 0
  3057  01045A  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3058  01045E  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3059  010462  0E74               	movlw	low STR_25
  3060  010464  0100               	movlb	0	; () banked
  3061  010466  6F62               	movwf	strcmp@s2& (0+255),b
  3062  010468  0EFF               	movlw	high STR_25
  3063  01046A  0100               	movlb	0	; () banked
  3064  01046C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3065  01046E  ECE7  F09C         	call	_strcmp	;wreg free
  3066  010472  0100               	movlb	0	; () banked
  3067  010474  5160               	movf	?_strcmp& (0+255),w,b
  3068  010476  0100               	movlb	0	; () banked
  3069  010478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3070  01047A  B4D8               	btfsc	status,2,c
  3071  01047C  D012               	goto	l8924
  3072                           
  3073                           ; BSR set to: 0
  3074  01047E  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3075  010482  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3076  010486  0EEC               	movlw	low (STR_27+1)
  3077  010488  0100               	movlb	0	; () banked
  3078  01048A  6F62               	movwf	strcmp@s2& (0+255),b
  3079  01048C  0EFF               	movlw	high (STR_27+1)
  3080  01048E  0100               	movlb	0	; () banked
  3081  010490  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3082  010492  ECE7  F09C         	call	_strcmp	;wreg free
  3083  010496  0100               	movlb	0	; () banked
  3084  010498  5160               	movf	?_strcmp& (0+255),w,b
  3085  01049A  0100               	movlb	0	; () banked
  3086  01049C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3087  01049E  A4D8               	btfss	status,2,c
  3088  0104A0  D006               	goto	l8926
  3089  0104A2                     l8924:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;My_terminal.c: 95: print_time(tx);
  3093  0104A2  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  3094  0104A6  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  3095  0104AA  EC7C  F09A         	call	_print_time	;wreg free
  3096  0104AE                     l8926:
  3097                           
  3098                           ;My_terminal.c: 96: }
  3099                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3100  0104AE  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3101  0104B2  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3102  0104B6  0EEB               	movlw	low STR_27
  3103  0104B8  0100               	movlb	0	; () banked
  3104  0104BA  6F62               	movwf	strcmp@s2& (0+255),b
  3105  0104BC  0EFF               	movlw	high STR_27
  3106  0104BE  0100               	movlb	0	; () banked
  3107  0104C0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3108  0104C2  ECE7  F09C         	call	_strcmp	;wreg free
  3109  0104C6  0100               	movlb	0	; () banked
  3110  0104C8  5160               	movf	?_strcmp& (0+255),w,b
  3111  0104CA  0100               	movlb	0	; () banked
  3112  0104CC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3113  0104CE  B4D8               	btfsc	status,2,c
  3114  0104D0  D012               	goto	l8930
  3115                           
  3116                           ; BSR set to: 0
  3117  0104D2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3118  0104D6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3119  0104DA  0E68               	movlw	low STR_28
  3120  0104DC  0100               	movlb	0	; () banked
  3121  0104DE  6F62               	movwf	strcmp@s2& (0+255),b
  3122  0104E0  0EFF               	movlw	high STR_28
  3123  0104E2  0100               	movlb	0	; () banked
  3124  0104E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3125  0104E6  ECE7  F09C         	call	_strcmp	;wreg free
  3126  0104EA  0100               	movlb	0	; () banked
  3127  0104EC  5160               	movf	?_strcmp& (0+255),w,b
  3128  0104EE  0100               	movlb	0	; () banked
  3129  0104F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3130  0104F2  A4D8               	btfss	status,2,c
  3131  0104F4  0012               	return	
  3132  0104F6                     l8930:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3136  0104F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3137  0104FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3138  0104FE  0EE9               	movlw	low (STR_34+2)
  3139  010500  0100               	movlb	0	; () banked
  3140  010502  6F62               	movwf	strcmp@s2& (0+255),b
  3141  010504  0EFF               	movlw	high (STR_34+2)
  3142  010506  0100               	movlb	0	; () banked
  3143  010508  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3144  01050A  ECE7  F09C         	call	_strcmp	;wreg free
  3145  01050E  0100               	movlb	0	; () banked
  3146  010510  5160               	movf	?_strcmp& (0+255),w,b
  3147  010512  0100               	movlb	0	; () banked
  3148  010514  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3149  010516  B4D8               	btfsc	status,2,c
  3150  010518  D012               	goto	l8934
  3151                           
  3152                           ; BSR set to: 0
  3153  01051A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3154  01051E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3155  010522  0ED4               	movlw	low STR_30
  3156  010524  0100               	movlb	0	; () banked
  3157  010526  6F62               	movwf	strcmp@s2& (0+255),b
  3158  010528  0EFF               	movlw	high STR_30
  3159  01052A  0100               	movlb	0	; () banked
  3160  01052C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3161  01052E  ECE7  F09C         	call	_strcmp	;wreg free
  3162  010532  0100               	movlb	0	; () banked
  3163  010534  5160               	movf	?_strcmp& (0+255),w,b
  3164  010536  0100               	movlb	0	; () banked
  3165  010538  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3166  01053A  A4D8               	btfss	status,2,c
  3167  01053C  D01C               	goto	l8936
  3168  01053E                     l8934:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3172  01053E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3173  010542  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3174  010546  0E50               	movlw	low (_now+10)
  3175  010548  0100               	movlb	0	; () banked
  3176  01054A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3177  01054C  0E01               	movlw	high (_now+10)
  3178  01054E  0100               	movlb	0	; () banked
  3179  010550  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3180  010552  0E00               	movlw	0
  3181  010554  0100               	movlb	0	; () banked
  3182  010556  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3183  010558  0E63               	movlw	99
  3184  01055A  0100               	movlb	0	; () banked
  3185  01055C  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3186  01055E  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3187  010562  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3188  010566  EC9A  F08D         	call	_atoi	;wreg free
  3189  01056A  0100               	movlb	0	; () banked
  3190  01056C  5166               	movf	?_atoi& (0+255),w,b
  3191  01056E  0100               	movlb	0	; () banked
  3192  010570  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3193  010572  EC85  F09C         	call	_terminal_at_hand	;wreg free
  3194  010576                     l8936:
  3195                           
  3196                           ;My_terminal.c: 100: }
  3197                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3198  010576  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3199  01057A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3200  01057E  0EF0               	movlw	low STR_31
  3201  010580  0100               	movlb	0	; () banked
  3202  010582  6F62               	movwf	strcmp@s2& (0+255),b
  3203  010584  0EFF               	movlw	high STR_31
  3204  010586  0100               	movlb	0	; () banked
  3205  010588  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3206  01058A  ECE7  F09C         	call	_strcmp	;wreg free
  3207  01058E  0100               	movlb	0	; () banked
  3208  010590  5160               	movf	?_strcmp& (0+255),w,b
  3209  010592  0100               	movlb	0	; () banked
  3210  010594  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3211  010596  B4D8               	btfsc	status,2,c
  3212  010598  D012               	goto	l8940
  3213                           
  3214                           ; BSR set to: 0
  3215  01059A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3216  01059E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3217  0105A2  0EC9               	movlw	low STR_32
  3218  0105A4  0100               	movlb	0	; () banked
  3219  0105A6  6F62               	movwf	strcmp@s2& (0+255),b
  3220  0105A8  0EFF               	movlw	high STR_32
  3221  0105AA  0100               	movlb	0	; () banked
  3222  0105AC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3223  0105AE  ECE7  F09C         	call	_strcmp	;wreg free
  3224  0105B2  0100               	movlb	0	; () banked
  3225  0105B4  5160               	movf	?_strcmp& (0+255),w,b
  3226  0105B6  0100               	movlb	0	; () banked
  3227  0105B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3228  0105BA  A4D8               	btfss	status,2,c
  3229  0105BC  D01C               	goto	l8942
  3230  0105BE                     l8940:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3234  0105BE  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3235  0105C2  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3236  0105C6  0E4F               	movlw	low (_now+9)
  3237  0105C8  0100               	movlb	0	; () banked
  3238  0105CA  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3239  0105CC  0E01               	movlw	high (_now+9)
  3240  0105CE  0100               	movlb	0	; () banked
  3241  0105D0  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3242  0105D2  0E01               	movlw	1
  3243  0105D4  0100               	movlb	0	; () banked
  3244  0105D6  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3245  0105D8  0E0C               	movlw	12
  3246  0105DA  0100               	movlb	0	; () banked
  3247  0105DC  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3248  0105DE  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3249  0105E2  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3250  0105E6  EC9A  F08D         	call	_atoi	;wreg free
  3251  0105EA  0100               	movlb	0	; () banked
  3252  0105EC  5166               	movf	?_atoi& (0+255),w,b
  3253  0105EE  0100               	movlb	0	; () banked
  3254  0105F0  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3255  0105F2  EC85  F09C         	call	_terminal_at_hand	;wreg free
  3256  0105F6                     l8942:
  3257                           
  3258                           ;My_terminal.c: 103: }
  3259                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3260  0105F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3261  0105FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3262  0105FE  0EE1               	movlw	low (STR_1+3)
  3263  010600  0100               	movlb	0	; () banked
  3264  010602  6F62               	movwf	strcmp@s2& (0+255),b
  3265  010604  0EFF               	movlw	high (STR_1+3)
  3266  010606  0100               	movlb	0	; () banked
  3267  010608  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3268  01060A  ECE7  F09C         	call	_strcmp	;wreg free
  3269  01060E  0100               	movlb	0	; () banked
  3270  010610  5160               	movf	?_strcmp& (0+255),w,b
  3271  010612  0100               	movlb	0	; () banked
  3272  010614  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3273  010616  B4D8               	btfsc	status,2,c
  3274  010618  D012               	goto	l8946
  3275                           
  3276                           ; BSR set to: 0
  3277  01061A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3278  01061E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3279  010622  0EE7               	movlw	low STR_34
  3280  010624  0100               	movlb	0	; () banked
  3281  010626  6F62               	movwf	strcmp@s2& (0+255),b
  3282  010628  0EFF               	movlw	high STR_34
  3283  01062A  0100               	movlb	0	; () banked
  3284  01062C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3285  01062E  ECE7  F09C         	call	_strcmp	;wreg free
  3286  010632  0100               	movlb	0	; () banked
  3287  010634  5160               	movf	?_strcmp& (0+255),w,b
  3288  010636  0100               	movlb	0	; () banked
  3289  010638  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3290  01063A  A4D8               	btfss	status,2,c
  3291  01063C  D023               	goto	l8950
  3292  01063E                     l8946:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3296  01063E  C14F  F066         	movff	_now+9,month_length@month
  3297  010642  0101               	movlb	1	; () banked
  3298  010644  5150               	movf	(_now+10)& (0+255),w,b
  3299  010646  EC58  F090         	call	_month_length
  3300  01064A  0100               	movlb	0	; () banked
  3301  01064C  6FBE               	movwf	_terminal_time$6199& (0+255),b
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3305  01064E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3306  010652  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3307  010656  0E4E               	movlw	low (_now+8)
  3308  010658  0100               	movlb	0	; () banked
  3309  01065A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3310  01065C  0E01               	movlw	high (_now+8)
  3311  01065E  0100               	movlb	0	; () banked
  3312  010660  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3313  010662  0E01               	movlw	1
  3314  010664  0100               	movlb	0	; () banked
  3315  010666  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3316  010668  C0BE  F0B4         	movff	_terminal_time$6199,terminal_at_hand@max
  3317  01066C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3318  010670  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3319  010674  EC9A  F08D         	call	_atoi	;wreg free
  3320  010678  0100               	movlb	0	; () banked
  3321  01067A  5166               	movf	?_atoi& (0+255),w,b
  3322  01067C  0100               	movlb	0	; () banked
  3323  01067E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3324  010680  EC85  F09C         	call	_terminal_at_hand	;wreg free
  3325  010684                     l8950:
  3326                           
  3327                           ;My_terminal.c: 106: }
  3328                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3329  010684  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3330  010688  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3331  01068C  0ECD               	movlw	low (STR_32+4)
  3332  01068E  0100               	movlb	0	; () banked
  3333  010690  6F62               	movwf	strcmp@s2& (0+255),b
  3334  010692  0EFF               	movlw	high (STR_32+4)
  3335  010694  0100               	movlb	0	; () banked
  3336  010696  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3337  010698  ECE7  F09C         	call	_strcmp	;wreg free
  3338  01069C  0100               	movlb	0	; () banked
  3339  01069E  5160               	movf	?_strcmp& (0+255),w,b
  3340  0106A0  0100               	movlb	0	; () banked
  3341  0106A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3342  0106A4  B4D8               	btfsc	status,2,c
  3343  0106A6  D012               	goto	l8954
  3344                           
  3345                           ; BSR set to: 0
  3346  0106A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3347  0106AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3348  0106B0  0ED9               	movlw	low STR_36
  3349  0106B2  0100               	movlb	0	; () banked
  3350  0106B4  6F62               	movwf	strcmp@s2& (0+255),b
  3351  0106B6  0EFF               	movlw	high STR_36
  3352  0106B8  0100               	movlb	0	; () banked
  3353  0106BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3354  0106BC  ECE7  F09C         	call	_strcmp	;wreg free
  3355  0106C0  0100               	movlb	0	; () banked
  3356  0106C2  5160               	movf	?_strcmp& (0+255),w,b
  3357  0106C4  0100               	movlb	0	; () banked
  3358  0106C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3359  0106C8  A4D8               	btfss	status,2,c
  3360  0106CA  D01C               	goto	l8956
  3361  0106CC                     l8954:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3365  0106CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3366  0106D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3367  0106D4  0E4C               	movlw	low (_now+6)
  3368  0106D6  0100               	movlb	0	; () banked
  3369  0106D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3370  0106DA  0E01               	movlw	high (_now+6)
  3371  0106DC  0100               	movlb	0	; () banked
  3372  0106DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3373  0106E0  0E00               	movlw	0
  3374  0106E2  0100               	movlb	0	; () banked
  3375  0106E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3376  0106E6  0E17               	movlw	23
  3377  0106E8  0100               	movlb	0	; () banked
  3378  0106EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3379  0106EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3380  0106F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3381  0106F4  EC9A  F08D         	call	_atoi	;wreg free
  3382  0106F8  0100               	movlb	0	; () banked
  3383  0106FA  5166               	movf	?_atoi& (0+255),w,b
  3384  0106FC  0100               	movlb	0	; () banked
  3385  0106FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3386  010700  EC85  F09C         	call	_terminal_at_hand	;wreg free
  3387  010704                     l8956:
  3388                           
  3389                           ;My_terminal.c: 109: }
  3390                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3391  010704  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3392  010708  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3393  01070C  0EF2               	movlw	low STR_37
  3394  01070E  0100               	movlb	0	; () banked
  3395  010710  6F62               	movwf	strcmp@s2& (0+255),b
  3396  010712  0EFF               	movlw	high STR_37
  3397  010714  0100               	movlb	0	; () banked
  3398  010716  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3399  010718  ECE7  F09C         	call	_strcmp	;wreg free
  3400  01071C  0100               	movlb	0	; () banked
  3401  01071E  5160               	movf	?_strcmp& (0+255),w,b
  3402  010720  0100               	movlb	0	; () banked
  3403  010722  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3404  010724  B4D8               	btfsc	status,2,c
  3405  010726  D012               	goto	l8960
  3406                           
  3407                           ; BSR set to: 0
  3408  010728  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3409  01072C  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3410  010730  0EC2               	movlw	low STR_38
  3411  010732  0100               	movlb	0	; () banked
  3412  010734  6F62               	movwf	strcmp@s2& (0+255),b
  3413  010736  0EFF               	movlw	high STR_38
  3414  010738  0100               	movlb	0	; () banked
  3415  01073A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3416  01073C  ECE7  F09C         	call	_strcmp	;wreg free
  3417  010740  0100               	movlb	0	; () banked
  3418  010742  5160               	movf	?_strcmp& (0+255),w,b
  3419  010744  0100               	movlb	0	; () banked
  3420  010746  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3421  010748  A4D8               	btfss	status,2,c
  3422  01074A  D01C               	goto	l8962
  3423  01074C                     l8960:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3427  01074C  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3428  010750  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3429  010754  0E4B               	movlw	low (_now+5)
  3430  010756  0100               	movlb	0	; () banked
  3431  010758  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3432  01075A  0E01               	movlw	high (_now+5)
  3433  01075C  0100               	movlb	0	; () banked
  3434  01075E  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3435  010760  0E00               	movlw	0
  3436  010762  0100               	movlb	0	; () banked
  3437  010764  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3438  010766  0E3B               	movlw	59
  3439  010768  0100               	movlb	0	; () banked
  3440  01076A  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3441  01076C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3442  010770  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3443  010774  EC9A  F08D         	call	_atoi	;wreg free
  3444  010778  0100               	movlb	0	; () banked
  3445  01077A  5166               	movf	?_atoi& (0+255),w,b
  3446  01077C  0100               	movlb	0	; () banked
  3447  01077E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3448  010780  EC85  F09C         	call	_terminal_at_hand	;wreg free
  3449  010784                     l8962:
  3450                           
  3451                           ;My_terminal.c: 112: }
  3452                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3453  010784  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3454  010788  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3455  01078C  0EF4               	movlw	low STR_39
  3456  01078E  0100               	movlb	0	; () banked
  3457  010790  6F62               	movwf	strcmp@s2& (0+255),b
  3458  010792  0EFF               	movlw	high STR_39
  3459  010794  0100               	movlb	0	; () banked
  3460  010796  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3461  010798  ECE7  F09C         	call	_strcmp	;wreg free
  3462  01079C  0100               	movlb	0	; () banked
  3463  01079E  5160               	movf	?_strcmp& (0+255),w,b
  3464  0107A0  0100               	movlb	0	; () banked
  3465  0107A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3466  0107A4  B4D8               	btfsc	status,2,c
  3467  0107A6  D012               	goto	l8966
  3468                           
  3469                           ; BSR set to: 0
  3470  0107A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3471  0107AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3472  0107B0  0EBB               	movlw	low STR_40
  3473  0107B2  0100               	movlb	0	; () banked
  3474  0107B4  6F62               	movwf	strcmp@s2& (0+255),b
  3475  0107B6  0EFF               	movlw	high STR_40
  3476  0107B8  0100               	movlb	0	; () banked
  3477  0107BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3478  0107BC  ECE7  F09C         	call	_strcmp	;wreg free
  3479  0107C0  0100               	movlb	0	; () banked
  3480  0107C2  5160               	movf	?_strcmp& (0+255),w,b
  3481  0107C4  0100               	movlb	0	; () banked
  3482  0107C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3483  0107C8  A4D8               	btfss	status,2,c
  3484  0107CA  0012               	return	
  3485  0107CC                     l8966:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3489  0107CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3490  0107D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3491  0107D4  0E4A               	movlw	low (_now+4)
  3492  0107D6  0100               	movlb	0	; () banked
  3493  0107D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3494  0107DA  0E01               	movlw	high (_now+4)
  3495  0107DC  0100               	movlb	0	; () banked
  3496  0107DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3497  0107E0  0E00               	movlw	0
  3498  0107E2  0100               	movlb	0	; () banked
  3499  0107E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3500  0107E6  0E3B               	movlw	59
  3501  0107E8  0100               	movlb	0	; () banked
  3502  0107EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3503  0107EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3504  0107F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3505  0107F4  EC9A  F08D         	call	_atoi	;wreg free
  3506  0107F8  0100               	movlb	0	; () banked
  3507  0107FA  5166               	movf	?_atoi& (0+255),w,b
  3508  0107FC  0100               	movlb	0	; () banked
  3509  0107FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3510  010800  EC85  F09C         	call	_terminal_at_hand	;wreg free
  3511  010804  0012               	return	
  3512  010806                     __end_of_terminal_time:
  3513                           	opt stack 0
  3514                           tblptru	equ	0xFF8
  3515                           tblptrh	equ	0xFF7
  3516                           tblptrl	equ	0xFF6
  3517                           tablat	equ	0xFF5
  3518                           prodh	equ	0xFF4
  3519                           prodl	equ	0xFF3
  3520                           intcon	equ	0xFF2
  3521                           postinc0	equ	0xFEE
  3522                           wreg	equ	0xFE8
  3523                           postdec1	equ	0xFE5
  3524                           fsr1h	equ	0xFE2
  3525                           fsr1l	equ	0xFE1
  3526                           indf2	equ	0xFDF
  3527                           fsr2h	equ	0xFDA
  3528                           fsr2l	equ	0xFD9
  3529                           status	equ	0xFD8
  3530                           
  3531 ;; *************** function _terminal_at_hand *****************
  3532 ;; Defined at:
  3533 ;;		line 82 in file "../My_library/My_terminal.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3536 ;;		 -> usb_tx(8), 
  3537 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3538 ;;		 -> now(14), 
  3539 ;;  min             1   83[BANK0 ] unsigned char 
  3540 ;;  max             1   84[BANK0 ] unsigned char 
  3541 ;;  value           1   85[BANK0 ] unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;		None               void
  3546 ;; Registers used:
  3547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3553 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;Total ram usage:        7 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:   16
  3560 ;; This function calls:
  3561 ;;		_RTCC_from_caltime
  3562 ;;		_print_time
  3563 ;;		_ringbuf_put_str
  3564 ;; This function is called by:
  3565 ;;		_terminal_time
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text4
  3570  01390A                     __ptext4:
  3571                           	opt stack 0
  3572  01390A                     _terminal_at_hand:
  3573                           	opt stack 11
  3574                           
  3575                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3576                           
  3577                           ;incstack = 0
  3578  01390A  0100               	movlb	0	; () banked
  3579  01390C  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3580  01390E  0100               	movlb	0	; () banked
  3581  013910  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3582  013912  A0D8               	btfss	status,0,c
  3583  013914  D01E               	goto	l8670
  3584                           
  3585                           ; BSR set to: 0
  3586  013916  0100               	movlb	0	; () banked
  3587  013918  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3588  01391A  0100               	movlb	0	; () banked
  3589  01391C  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3590  01391E  A0D8               	btfss	status,0,c
  3591  013920  D018               	goto	l8670
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;My_terminal.c: 84: *hand = value;
  3595  013922  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3596  013926  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3597  01392A  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3601  01392E  0E46               	movlw	low _now
  3602  013930  0100               	movlb	0	; () banked
  3603  013932  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3604  013934  0E01               	movlw	high _now
  3605  013936  0100               	movlb	0	; () banked
  3606  013938  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3607  01393A  ECA8  F09F         	call	_RTCC_from_caltime	;wreg free
  3608                           
  3609                           ;My_terminal.c: 86: time_change_flag = 1;
  3610  01393E  0E01               	movlw	1
  3611  013940  0100               	movlb	0	; () banked
  3612  013942  6FF9               	movwf	_time_change_flag& (0+255),b
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;My_terminal.c: 87: print_time(tx);
  3616  013944  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3617  013948  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3618  01394C  EC7C  F09A         	call	_print_time	;wreg free
  3619                           
  3620                           ;My_terminal.c: 88: } else {
  3621  013950  0012               	return	
  3622  013952                     l8670:
  3623                           
  3624                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3625  013952  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3626  013956  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3627  01395A  0EAC               	movlw	low STR_24
  3628  01395C  0100               	movlb	0	; () banked
  3629  01395E  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3630  013960  0EFF               	movlw	high STR_24
  3631  013962  0100               	movlb	0	; () banked
  3632  013964  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3633  013966  EC53  F09C         	call	_ringbuf_put_str	;wreg free
  3634  01396A  0012               	return	
  3635  01396C                     __end_of_terminal_at_hand:
  3636                           	opt stack 0
  3637                           tblptru	equ	0xFF8
  3638                           tblptrh	equ	0xFF7
  3639                           tblptrl	equ	0xFF6
  3640                           tablat	equ	0xFF5
  3641                           prodh	equ	0xFF4
  3642                           prodl	equ	0xFF3
  3643                           intcon	equ	0xFF2
  3644                           postinc0	equ	0xFEE
  3645                           wreg	equ	0xFE8
  3646                           postdec1	equ	0xFE5
  3647                           fsr1h	equ	0xFE2
  3648                           fsr1l	equ	0xFE1
  3649                           indf2	equ	0xFDF
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _print_time *****************
  3655 ;; Defined at:
  3656 ;;		line 68 in file "../My_library/My_terminal.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3659 ;;		 -> usb_tx(8), 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  str            30   49[BANK0 ] unsigned char [30]
  3662 ;; Return value:  Size  Location     Type
  3663 ;;		None               void
  3664 ;; Registers used:
  3665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;Total ram usage:       32 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:   15
  3678 ;; This function calls:
  3679 ;;		_RTCC_from_RTCC
  3680 ;;		_ringbuf_put_str
  3681 ;;		_sprintf
  3682 ;; This function is called by:
  3683 ;;		_terminal_at_hand
  3684 ;;		_terminal_time
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text5
  3689  0134F8                     __ptext5:
  3690                           	opt stack 0
  3691  0134F8                     _print_time:
  3692                           	opt stack 11
  3693                           
  3694                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3695                           
  3696                           ;incstack = 0
  3697  0134F8  0E46               	movlw	low _now
  3698  0134FA  0100               	movlb	0	; () banked
  3699  0134FC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3700  0134FE  0E01               	movlw	high _now
  3701  013500  0100               	movlb	0	; () banked
  3702  013502  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3703  013504  EC63  F0A0         	call	_RTCC_from_RTCC	;wreg free
  3704                           
  3705                           ;My_terminal.c: 70: char str[30];
  3706                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3707                           ;My_terminal.c: 72: now.YY,
  3708                           ;My_terminal.c: 73: now.MM,
  3709                           ;My_terminal.c: 74: now.DD,
  3710                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3711                           ;My_terminal.c: 76: now.hh,
  3712                           ;My_terminal.c: 77: now.mm,
  3713                           ;My_terminal.c: 78: now.ss);
  3714  013508  0E91               	movlw	low print_time@str
  3715  01350A  0100               	movlb	0	; () banked
  3716  01350C  6F6C               	movwf	sprintf@sp& (0+255),b
  3717  01350E  0E00               	movlw	high print_time@str
  3718  013510  0100               	movlb	0	; () banked
  3719  013512  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3720  013514  0E43               	movlw	low STR_23
  3721  013516  0100               	movlb	0	; () banked
  3722  013518  6F6E               	movwf	sprintf@f& (0+255),b
  3723  01351A  0EFF               	movlw	high STR_23
  3724  01351C  0100               	movlb	0	; () banked
  3725  01351E  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3726  013520  C150  F070         	movff	_now+10,?_sprintf+4
  3727  013524  0100               	movlb	0	; () banked
  3728  013526  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3729  013528  C14F  F072         	movff	_now+9,?_sprintf+6
  3730  01352C  0100               	movlb	0	; () banked
  3731  01352E  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3732  013530  C14E  F074         	movff	_now+8,?_sprintf+8
  3733  013534  0100               	movlb	0	; () banked
  3734  013536  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3735  013538  0101               	movlb	1	; () banked
  3736  01353A  514D               	movf	(_now+7)& (0+255),w,b
  3737  01353C  0D04               	mullw	4
  3738  01353E  0E26               	movlw	low _weekday_3char
  3739  013540  24F3               	addwf	prodl,w,c
  3740  013542  0100               	movlb	0	; () banked
  3741  013544  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3742  013546  0EFE               	movlw	high _weekday_3char
  3743  013548  20F4               	addwfc	prodh,w,c
  3744  01354A  0100               	movlb	0	; () banked
  3745  01354C  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3746  01354E  C14C  F078         	movff	_now+6,?_sprintf+12
  3747  013552  0100               	movlb	0	; () banked
  3748  013554  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3749  013556  C14B  F07A         	movff	_now+5,?_sprintf+14
  3750  01355A  0100               	movlb	0	; () banked
  3751  01355C  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3752  01355E  C14A  F07C         	movff	_now+4,?_sprintf+16
  3753  013562  0100               	movlb	0	; () banked
  3754  013564  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3755  013566  EC00  F080         	call	_sprintf	;wreg free
  3756                           
  3757                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3758  01356A  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3759  01356E  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3760  013572  0E91               	movlw	low print_time@str
  3761  013574  0100               	movlb	0	; () banked
  3762  013576  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3763  013578  0E00               	movlw	high print_time@str
  3764  01357A  0100               	movlb	0	; () banked
  3765  01357C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3766  01357E  EC53  F09C         	call	_ringbuf_put_str	;wreg free
  3767  013582  0012               	return		;funcret
  3768  013584                     __end_of_print_time:
  3769                           	opt stack 0
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           intcon	equ	0xFF2
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _sprintf *****************
  3788 ;; Defined at:
  3789 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3792 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  3793 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3794 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  tmpval          4    0        struct .
  3797 ;;  width           2   45[BANK0 ] int 
  3798 ;;  len             2   41[BANK0 ] unsigned int 
  3799 ;;  val             2   39[BANK0 ] unsigned int 
  3800 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  3801 ;;		 -> STR_48(7), weekday_3char(28), 
  3802 ;;  ap              2   35[BANK0 ] PTR void [1]
  3803 ;;		 -> ?_sprintf(2), 
  3804 ;;  c               1   44[BANK0 ] char 
  3805 ;;  flag            1   43[BANK0 ] unsigned char 
  3806 ;;  prec            1   34[BANK0 ] char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2   12[BANK0 ] int 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3816 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;Total ram usage:       35 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:   12
  3823 ;; This function calls:
  3824 ;;		___lwdiv
  3825 ;;		___lwmod
  3826 ;;		___wmul
  3827 ;;		_isdigit
  3828 ;; This function is called by:
  3829 ;;		_print_time
  3830 ;;		_display_dec
  3831 ;;		_print_time_dec
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text6
  3836  010000                     __ptext6:
  3837                           	opt stack 0
  3838  010000                     _sprintf:
  3839                           	opt stack 13
  3840                           
  3841                           ;doprnt.c: 494: va_list ap;
  3842                           ;doprnt.c: 499: signed char c;
  3843                           ;doprnt.c: 501: int width;
  3844                           ;doprnt.c: 506: signed char prec;
  3845                           ;doprnt.c: 508: unsigned char flag;
  3846                           ;doprnt.c: 523: union {
  3847                           ;doprnt.c: 524: unsigned long vd;
  3848                           ;doprnt.c: 525: double integ;
  3849                           ;doprnt.c: 526: } tmpval;
  3850                           ;doprnt.c: 528: unsigned int val;
  3851                           ;doprnt.c: 529: unsigned len;
  3852                           ;doprnt.c: 530: const char * cp;
  3853                           ;doprnt.c: 533: *ap = __va_start();
  3854                           
  3855                           ;incstack = 0
  3856  010000  0E70               	movlw	low (?_sprintf+4)
  3857  010002  0100               	movlb	0	; () banked
  3858  010004  6F83               	movwf	sprintf@ap& (0+255),b
  3859  010006  0E00               	movlw	high (?_sprintf+4)
  3860  010008  0100               	movlb	0	; () banked
  3861  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3862                           
  3863                           ;doprnt.c: 536: while(c = *f++) {
  3864  01000C  D20F               	goto	l8570
  3865  01000E                     l8430:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;doprnt.c: 538: if(c != '%')
  3869  01000E  0E25               	movlw	37
  3870  010010  0100               	movlb	0	; () banked
  3871  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  3872  010014  B4D8               	btfsc	status,2,c
  3873  010016  D00A               	goto	l8436
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;doprnt.c: 540: {
  3877                           ;doprnt.c: 541: ((*sp++ = (c)));
  3878  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3879  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3880  010020  C08C  FFDF         	movff	sprintf@c,indf2
  3881                           
  3882                           ; BSR set to: 0
  3883  010024  0100               	movlb	0	; () banked
  3884  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3885  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3886                           
  3887                           ;doprnt.c: 542: continue;
  3888  01002A  D200               	goto	l8570
  3889  01002C                     l8436:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;doprnt.c: 543: }
  3893                           ;doprnt.c: 546: width = 0;
  3894  01002C  0E00               	movlw	0
  3895  01002E  0100               	movlb	0	; () banked
  3896  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3897  010032  0E00               	movlw	0
  3898  010034  6F8D               	movwf	sprintf@width& (0+255),b
  3899                           
  3900                           ;doprnt.c: 548: flag = 0;
  3901  010036  0E00               	movlw	0
  3902  010038  0100               	movlb	0	; () banked
  3903  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;doprnt.c: 551: switch(*f) {
  3907                           
  3908                           ;doprnt.c: 550: for(;;) {
  3909  01003C  D005               	goto	l8442
  3910  01003E                     l8438:
  3911                           
  3912                           ;doprnt.c: 580: flag |= 0x04;
  3913  01003E  0100               	movlb	0	; () banked
  3914  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  3915                           
  3916                           ;doprnt.c: 581: f++;
  3917  010042  0100               	movlb	0	; () banked
  3918  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3919  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3920  010048                     l8442:
  3921  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  3922  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3923  010050                     	if	0	;tblptru may be non-zero
  3924  010050                     	endif
  3925  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3926  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  3927  010052  6EF8               	movwf	tblptru,c
  3928  010054                     	endif
  3929  010054  0008               	tblrd		*
  3930  010056  50F5               	movf	tablat,w,c
  3931                           
  3932                           ; Switch size 1, requested type "space"
  3933                           ; Number of cases is 1, Range of values is 48 to 48
  3934                           ; switch strategies available:
  3935                           ; Name         Instructions Cycles
  3936                           ; simple_byte            4     3 (average)
  3937                           ;	Chosen strategy is simple_byte
  3938  010058  0A30               	xorlw	48	; case 48
  3939  01005A  B4D8               	btfsc	status,2,c
  3940  01005C  D7F0               	goto	l8438
  3941                           
  3942                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3943                           
  3944                           ;doprnt.c: 586: }
  3945                           
  3946                           ;doprnt.c: 585: break;
  3947  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  3948  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3949  010066                     	if	0	;tblptru may be non-zero
  3950  010066                     	endif
  3951  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3952  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  3953  010068  6EF8               	movwf	tblptru,c
  3954  01006A                     	endif
  3955  01006A  0008               	tblrd		*
  3956  01006C  50F5               	movf	tablat,w,c
  3957  01006E  EC7F  F09F         	call	_isdigit
  3958  010072  A0D8               	btfss	status,0,c
  3959  010074  D0CB               	goto	l8492
  3960                           
  3961                           ;doprnt.c: 598: width = 0;
  3962  010076  0E00               	movlw	0
  3963  010078  0100               	movlb	0	; () banked
  3964  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3965  01007C  0E00               	movlw	0
  3966  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  3967  010080                     l8448:
  3968                           
  3969                           ;doprnt.c: 600: width *= 10;
  3970  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  3971  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  3972  010088  0E00               	movlw	0
  3973  01008A  0100               	movlb	0	; () banked
  3974  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3975  01008E  0E0A               	movlw	10
  3976  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3977  010092  EC94  F09E         	call	___wmul	;wreg free
  3978  010096  C060  F08D         	movff	?___wmul,sprintf@width
  3979  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  3980                           
  3981                           ;doprnt.c: 601: width += *f++ - '0';
  3982  01009E  0ED0               	movlw	208
  3983  0100A0  0100               	movlb	0	; () banked
  3984  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  3985  0100A4  0EFF               	movlw	255
  3986  0100A6  0100               	movlb	0	; () banked
  3987  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  3988  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  3989  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3990  0100B2                     	if	0	;tblptru may be non-zero
  3991  0100B2                     	endif
  3992  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3993  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  3994  0100B4  6EF8               	movwf	tblptru,c
  3995  0100B6                     	endif
  3996  0100B6  0008               	tblrd		*
  3997  0100B8  50F5               	movf	tablat,w,c
  3998  0100BA  0100               	movlb	0	; () banked
  3999  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  4000  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  4001  0100C0  0100               	movlb	0	; () banked
  4002  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  4003  0100C4  0100               	movlb	0	; () banked
  4004  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  4005  0100C8  0100               	movlb	0	; () banked
  4006  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  4007  0100CC  0100               	movlb	0	; () banked
  4008  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  4009  0100D0  0100               	movlb	0	; () banked
  4010  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  4011  0100D4  0100               	movlb	0	; () banked
  4012  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  4013  0100D8  0100               	movlb	0	; () banked
  4014  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  4015  0100DC  0100               	movlb	0	; () banked
  4016  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  4017                           
  4018                           ; BSR set to: 0
  4019  0100E0  0100               	movlb	0	; () banked
  4020  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4021  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4025  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  4026  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4027  0100EE                     	if	0	;tblptru may be non-zero
  4028  0100EE                     	endif
  4029  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4030  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4031  0100F0  6EF8               	movwf	tblptru,c
  4032  0100F2                     	endif
  4033  0100F2  0008               	tblrd		*
  4034  0100F4  50F5               	movf	tablat,w,c
  4035  0100F6  EC7F  F09F         	call	_isdigit
  4036  0100FA  A0D8               	btfss	status,0,c
  4037  0100FC  D087               	goto	l8492
  4038  0100FE  D7C0               	goto	l8448
  4039  010100                     l8456:
  4040                           
  4041                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4042  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  4043  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4044  010108  CFDE F085          	movff	postinc2,sprintf@cp
  4045  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  4046  010110  0E02               	movlw	2
  4047  010112  0100               	movlb	0	; () banked
  4048  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  4049  010116  0E00               	movlw	0
  4050  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;doprnt.c: 740: if(!cp)
  4054  01011A  0100               	movlb	0	; () banked
  4055  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  4056  01011E  0100               	movlb	0	; () banked
  4057  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4058  010122  A4D8               	btfss	status,2,c
  4059  010124  D006               	goto	l8464
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;doprnt.c: 741: cp = "(null)";
  4063  010126  0EB4               	movlw	low STR_48
  4064  010128  0100               	movlb	0	; () banked
  4065  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  4066  01012C  0EFF               	movlw	high STR_48
  4067  01012E  0100               	movlb	0	; () banked
  4068  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  4069  010132                     l8464:
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;doprnt.c: 745: len = 0;
  4073  010132  0E00               	movlw	0
  4074  010134  0100               	movlb	0	; () banked
  4075  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  4076  010138  0E00               	movlw	0
  4077  01013A  6F89               	movwf	sprintf@len& (0+255),b
  4078                           
  4079                           ;doprnt.c: 746: while(cp[len])
  4080  01013C  D003               	goto	l8468
  4081  01013E                     l8466:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;doprnt.c: 747: len++;
  4085  01013E  0100               	movlb	0	; () banked
  4086  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  4087  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  4088  010144                     l8468:
  4089                           
  4090                           ; BSR set to: 0
  4091  010144  0100               	movlb	0	; () banked
  4092  010146  5189               	movf	sprintf@len& (0+255),w,b
  4093  010148  0100               	movlb	0	; () banked
  4094  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  4095  01014C  0100               	movlb	0	; () banked
  4096  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  4097  010150  0100               	movlb	0	; () banked
  4098  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4099  010154  0100               	movlb	0	; () banked
  4100  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4101  010158  0100               	movlb	0	; () banked
  4102  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  4103  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  4104  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  4105  010164                     	if	0	;tblptru may be non-zero
  4106  010164                     	endif
  4107  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4108  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  4109  010166  6EF8               	movwf	tblptru,c
  4110  010168                     	endif
  4111  010168  0008               	tblrd		*
  4112  01016A  50F5               	movf	tablat,w,c
  4113  01016C  0900               	iorlw	0
  4114  01016E  A4D8               	btfss	status,2,c
  4115  010170  D7E6               	goto	l8466
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;doprnt.c: 757: if(width > len)
  4119                           
  4120                           ; BSR set to: 0
  4121  010172  0100               	movlb	0	; () banked
  4122  010174  518D               	movf	sprintf@width& (0+255),w,b
  4123  010176  0100               	movlb	0	; () banked
  4124  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  4125  01017A  0100               	movlb	0	; () banked
  4126  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4127  01017E  0100               	movlb	0	; () banked
  4128  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  4129  010182  B0D8               	btfsc	status,0,c
  4130  010184  D009               	goto	l8474
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;doprnt.c: 758: width -= len;
  4134  010186  0100               	movlb	0	; () banked
  4135  010188  5189               	movf	sprintf@len& (0+255),w,b
  4136  01018A  0100               	movlb	0	; () banked
  4137  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  4138  01018E  0100               	movlb	0	; () banked
  4139  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4140  010192  0100               	movlb	0	; () banked
  4141  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4142  010196  D00F               	goto	l8480
  4143  010198                     l8474:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;doprnt.c: 759: else
  4147                           ;doprnt.c: 760: width = 0;
  4148  010198  0E00               	movlw	0
  4149  01019A  0100               	movlb	0	; () banked
  4150  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4151  01019E  0E00               	movlw	0
  4152  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;doprnt.c: 764: while(width--)
  4156  0101A2  D009               	goto	l8480
  4157  0101A4                     l8476:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4161  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4162  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4163  0101AC  0E20               	movlw	32
  4164  0101AE  6EDF               	movwf	indf2,c
  4165                           
  4166                           ; BSR set to: 0
  4167  0101B0  0100               	movlb	0	; () banked
  4168  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4169  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4170  0101B6                     l8480:
  4171                           
  4172                           ; BSR set to: 0
  4173  0101B6  0100               	movlb	0	; () banked
  4174  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  4175  0101BA  A0D8               	btfss	status,0,c
  4176  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4177  0101BE  0100               	movlb	0	; () banked
  4178  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  4179  0101C2  E1F0               	bnz	l8476
  4180  0101C4  0100               	movlb	0	; () banked
  4181  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  4182  0101C8  B4D8               	btfsc	status,2,c
  4183  0101CA  D014               	goto	l8488
  4184  0101CC  D7EB               	goto	l8476
  4185  0101CE                     l8482:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4189  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  4190  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  4191  0101D6                     	if	0	;tblptru may be non-zero
  4192  0101D6                     	endif
  4193  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4194  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  4195  0101D8  6EF8               	movwf	tblptru,c
  4196  0101DA                     	endif
  4197  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4198  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4199  0101E2  0008               	tblrd		*
  4200  0101E4  CFF5 FFDF          	movff	tablat,indf2
  4201                           
  4202                           ; BSR set to: 0
  4203  0101E8  0100               	movlb	0	; () banked
  4204  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  4205  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  4206                           
  4207                           ; BSR set to: 0
  4208  0101EE  0100               	movlb	0	; () banked
  4209  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4210  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4211  0101F4                     l8488:
  4212                           
  4213                           ; BSR set to: 0
  4214  0101F4  0100               	movlb	0	; () banked
  4215  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  4216  0101F8  A0D8               	btfss	status,0,c
  4217  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  4218  0101FC  0100               	movlb	0	; () banked
  4219  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  4220  010200  E1E6               	bnz	l8482
  4221  010202  0100               	movlb	0	; () banked
  4222  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  4223  010206  B4D8               	btfsc	status,2,c
  4224  010208  D111               	goto	l8570
  4225  01020A  D7E1               	goto	l8482
  4226  01020C                     l8492:
  4227  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4228  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4229  010214  0100               	movlb	0	; () banked
  4230  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4231  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4232  01021A                     	if	0	;tblptru may be non-zero
  4233  01021A                     	endif
  4234  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4235  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  4236  01021C  6EF8               	movwf	tblptru,c
  4237  01021E                     	endif
  4238  01021E  0008               	tblrd		*
  4239  010220  CFF5 F08C          	movff	tablat,sprintf@c
  4240  010224  0100               	movlb	0	; () banked
  4241  010226  518C               	movf	sprintf@c& (0+255),w,b
  4242                           
  4243                           ; Switch size 1, requested type "space"
  4244                           ; Number of cases is 4, Range of values is 0 to 115
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte           13     7 (average)
  4248                           ;	Chosen strategy is simple_byte
  4249  010228  0A00               	xorlw	0	; case 0
  4250  01022A  B4D8               	btfsc	status,2,c
  4251  01022C  D10F               	goto	l8572
  4252  01022E  0A64               	xorlw	100	; case 100
  4253  010230  B4D8               	btfsc	status,2,c
  4254  010232  D007               	goto	l8494
  4255  010234  0A0D               	xorlw	13	; case 105
  4256  010236  B4D8               	btfsc	status,2,c
  4257  010238  D004               	goto	l8494
  4258  01023A  0A1A               	xorlw	26	; case 115
  4259  01023C  B4D8               	btfsc	status,2,c
  4260  01023E  D760               	goto	l8456
  4261  010240  D0F5               	goto	l8570
  4262  010242                     l8494:
  4263                           
  4264                           ;doprnt.c: 1253: {
  4265                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4266  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  4267  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4268  01024A  CFDE F087          	movff	postinc2,sprintf@val
  4269  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  4270  010252  0E02               	movlw	2
  4271  010254  0100               	movlb	0	; () banked
  4272  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  4273  010258  0E00               	movlw	0
  4274  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;doprnt.c: 1261: if((int)val < 0) {
  4278  01025C  0100               	movlb	0	; () banked
  4279  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  4280  010260  D008               	goto	l8504
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;doprnt.c: 1262: flag |= 0x03;
  4284  010262  0E03               	movlw	3
  4285  010264  0100               	movlb	0	; () banked
  4286  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;doprnt.c: 1263: val = -val;
  4290  010268  0100               	movlb	0	; () banked
  4291  01026A  6D87               	negf	sprintf@val& (0+255),b
  4292  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  4293  01026E  B0D8               	btfsc	status,0,c
  4294  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  4295  010272                     l8504:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;doprnt.c: 1264: }
  4299                           ;doprnt.c: 1266: }
  4300                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4301  010272  0E01               	movlw	1
  4302  010274  0100               	movlb	0	; () banked
  4303  010276  6F8C               	movwf	sprintf@c& (0+255),b
  4304  010278                     l8506:
  4305                           
  4306                           ; BSR set to: 0
  4307  010278  0E05               	movlw	5
  4308  01027A  0100               	movlb	0	; () banked
  4309  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  4310  01027E  B4D8               	btfsc	status,2,c
  4311  010280  D019               	goto	l8518
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;doprnt.c: 1306: if(val < dpowers[c])
  4315                           
  4316                           ; BSR set to: 0
  4317                           
  4318                           ; BSR set to: 0
  4319  010282  0100               	movlb	0	; () banked
  4320  010284  518C               	movf	sprintf@c& (0+255),w,b
  4321  010286  0D02               	mullw	2
  4322  010288  0E69               	movlw	low _dpowers
  4323  01028A  24F3               	addwf	prodl,w,c
  4324  01028C  6EF6               	movwf	tblptrl,c
  4325  01028E  0EFD               	movlw	high _dpowers
  4326  010290  20F4               	addwfc	prodh,w,c
  4327  010292  6EF7               	movwf	tblptrh,c
  4328  010294                     	if	1	;There are 3 active tblptr bytes
  4329  010294  6AF8               	clrf	tblptru,c
  4330  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  4331  010298  22F8               	addwfc	tblptru,f,c
  4332  01029A                     	endif
  4333  01029A  0009               	tblrd		*+
  4334  01029C  50F5               	movf	tablat,w,c
  4335  01029E  0100               	movlb	0	; () banked
  4336  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  4337  0102A2  0009               	tblrd		*+
  4338  0102A4  50F5               	movf	tablat,w,c
  4339  0102A6  0100               	movlb	0	; () banked
  4340  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  4341  0102AA  A0D8               	btfss	status,0,c
  4342  0102AC  D003               	goto	l8518
  4343                           
  4344                           ; BSR set to: 0
  4345                           
  4346                           ; BSR set to: 0
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;doprnt.c: 1307: break;
  4350  0102AE  0100               	movlb	0	; () banked
  4351  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  4352  0102B2  D7E2               	goto	l8506
  4353  0102B4                     l8518:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4357  0102B4  0100               	movlb	0	; () banked
  4358  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  4359  0102B8  0100               	movlb	0	; () banked
  4360  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4361  0102BC  B4D8               	btfsc	status,2,c
  4362  0102BE  D00B               	goto	l8524
  4363                           
  4364                           ; BSR set to: 0
  4365  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4366  0102C4  0E03               	movlw	3
  4367  0102C6  0100               	movlb	0	; () banked
  4368  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  4369  0102CA  B4D8               	btfsc	status,2,c
  4370  0102CC  D004               	goto	l8524
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;doprnt.c: 1346: width--;
  4374  0102CE  0100               	movlb	0	; () banked
  4375  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  4376  0102D2  A0D8               	btfss	status,0,c
  4377  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4378  0102D6                     l8524:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;doprnt.c: 1381: if(width > c)
  4382  0102D6  0E80               	movlw	128
  4383  0102D8  0100               	movlb	0	; () banked
  4384  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4385  0102DC  0E7F               	movlw	127
  4386  0102DE  0100               	movlb	0	; () banked
  4387  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  4388  0102E2  0100               	movlb	0	; () banked
  4389  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  4390  0102E6  0100               	movlb	0	; () banked
  4391  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  4392  0102EA  0100               	movlb	0	; () banked
  4393  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4394  0102EE  0A80               	xorlw	128
  4395  0102F0  0100               	movlb	0	; () banked
  4396  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  4397  0102F4  B0D8               	btfsc	status,0,c
  4398  0102F6  D00B               	goto	l8528
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;doprnt.c: 1382: width -= c;
  4402  0102F8  0100               	movlb	0	; () banked
  4403  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  4404  0102FC  0100               	movlb	0	; () banked
  4405  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  4406  010300  0E00               	movlw	0
  4407  010302  0100               	movlb	0	; () banked
  4408  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4409  010306  0EFF               	movlw	255
  4410  010308  0100               	movlb	0	; () banked
  4411  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4412  01030C  D005               	goto	l8530
  4413  01030E                     l8528:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;doprnt.c: 1383: else
  4417                           ;doprnt.c: 1384: width = 0;
  4418  01030E  0E00               	movlw	0
  4419  010310  0100               	movlb	0	; () banked
  4420  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4421  010314  0E00               	movlw	0
  4422  010316  6F8D               	movwf	sprintf@width& (0+255),b
  4423  010318                     l8530:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;doprnt.c: 1387: if(flag & 0x04) {
  4427  010318  0100               	movlb	0	; () banked
  4428  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  4429  01031C  D024               	goto	l8546
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;doprnt.c: 1392: if(flag & 0x03)
  4433  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4434  010322  0E03               	movlw	3
  4435  010324  0100               	movlb	0	; () banked
  4436  010326  177E               	andwf	??_sprintf& (0+255),f,b
  4437  010328  B4D8               	btfsc	status,2,c
  4438  01032A  D009               	goto	l8538
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4442  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4443  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4444  010334  0E2D               	movlw	45
  4445  010336  6EDF               	movwf	indf2,c
  4446                           
  4447                           ; BSR set to: 0
  4448  010338  0100               	movlb	0	; () banked
  4449  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4450  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4451  01033E                     l8538:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;doprnt.c: 1415: if(width)
  4455  01033E  0100               	movlb	0	; () banked
  4456  010340  518D               	movf	sprintf@width& (0+255),w,b
  4457  010342  0100               	movlb	0	; () banked
  4458  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4459  010346  B4D8               	btfsc	status,2,c
  4460  010348  D037               	goto	l8560
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4464                           
  4465                           ; BSR set to: 0
  4466                           
  4467                           ;doprnt.c: 1416: do
  4468  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4469  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4470  010352  0E30               	movlw	48
  4471  010354  6EDF               	movwf	indf2,c
  4472                           
  4473                           ; BSR set to: 0
  4474  010356  0100               	movlb	0	; () banked
  4475  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4476  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;doprnt.c: 1418: while(--width);
  4480  01035C  0100               	movlb	0	; () banked
  4481  01035E  078D               	decf	sprintf@width& (0+255),f,b
  4482  010360  A0D8               	btfss	status,0,c
  4483  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4484  010364  D7EC               	goto	l8538
  4485  010366                     l8546:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;doprnt.c: 1422: {
  4489                           ;doprnt.c: 1424: if(width
  4490                           ;doprnt.c: 1428: )
  4491  010366  0100               	movlb	0	; () banked
  4492  010368  518D               	movf	sprintf@width& (0+255),w,b
  4493  01036A  0100               	movlb	0	; () banked
  4494  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4495  01036E  B4D8               	btfsc	status,2,c
  4496  010370  D013               	goto	l8554
  4497  010372                     l8548:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4501  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4502  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4503  01037A  0E20               	movlw	32
  4504  01037C  6EDF               	movwf	indf2,c
  4505                           
  4506                           ; BSR set to: 0
  4507  01037E  0100               	movlb	0	; () banked
  4508  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4509  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;doprnt.c: 1431: while(--width);
  4513  010384  0100               	movlb	0	; () banked
  4514  010386  078D               	decf	sprintf@width& (0+255),f,b
  4515  010388  A0D8               	btfss	status,0,c
  4516  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4517  01038C  0100               	movlb	0	; () banked
  4518  01038E  518D               	movf	sprintf@width& (0+255),w,b
  4519  010390  0100               	movlb	0	; () banked
  4520  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4521  010394  A4D8               	btfss	status,2,c
  4522  010396  D7ED               	goto	l8548
  4523  010398                     l8554:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;doprnt.c: 1438: if(flag & 0x03)
  4527  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4528  01039C  0E03               	movlw	3
  4529  01039E  0100               	movlb	0	; () banked
  4530  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  4531  0103A2  B4D8               	btfsc	status,2,c
  4532  0103A4  D009               	goto	l8560
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4536  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4537  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4538  0103AE  0E2D               	movlw	45
  4539  0103B0  6EDF               	movwf	indf2,c
  4540                           
  4541                           ; BSR set to: 0
  4542  0103B2  0100               	movlb	0	; () banked
  4543  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4544  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4545  0103B8                     l8560:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;doprnt.c: 1469: }
  4549                           ;doprnt.c: 1472: prec = c;
  4550  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  4551                           
  4552                           ;doprnt.c: 1474: while(prec--) {
  4553  0103BC  D031               	goto	l8568
  4554  0103BE                     l8562:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;doprnt.c: 1478: {
  4558                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4559  0103BE  0100               	movlb	0	; () banked
  4560  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  4561  0103C2  0D02               	mullw	2
  4562  0103C4  0E69               	movlw	low _dpowers
  4563  0103C6  24F3               	addwf	prodl,w,c
  4564  0103C8  6EF6               	movwf	tblptrl,c
  4565  0103CA  0EFD               	movlw	high _dpowers
  4566  0103CC  20F4               	addwfc	prodh,w,c
  4567  0103CE  6EF7               	movwf	tblptrh,c
  4568  0103D0                     	if	1	;There are 3 active tblptr bytes
  4569  0103D0  6AF8               	clrf	tblptru,c
  4570  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  4571  0103D4  22F8               	addwfc	tblptru,f,c
  4572  0103D6                     	endif
  4573  0103D6  0009               	tblrd		*+
  4574  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4575  0103DC  000A               	tblrd		*-
  4576  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4577  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  4578  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4579  0103EA  EC03  F09B         	call	___lwdiv	;wreg free
  4580  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  4581  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  4582  0103F6  0E00               	movlw	0
  4583  0103F8  0100               	movlb	0	; () banked
  4584  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4585  0103FC  0E0A               	movlw	10
  4586  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  4587  010400  ECB6  F09C         	call	___lwmod	;wreg free
  4588  010404  0100               	movlb	0	; () banked
  4589  010406  5167               	movf	?___lwmod& (0+255),w,b
  4590  010408  0F30               	addlw	48
  4591  01040A  0100               	movlb	0	; () banked
  4592  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;doprnt.c: 1523: }
  4596                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4597  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4598  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4599  010416  C08C  FFDF         	movff	sprintf@c,indf2
  4600                           
  4601                           ; BSR set to: 0
  4602  01041A  0100               	movlb	0	; () banked
  4603  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4604  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4605  010420                     l8568:
  4606                           
  4607                           ; BSR set to: 0
  4608  010420  0100               	movlb	0	; () banked
  4609  010422  0782               	decf	sprintf@prec& (0+255),f,b
  4610  010424  0100               	movlb	0	; () banked
  4611  010426  2982               	incf	sprintf@prec& (0+255),w,b
  4612  010428  A4D8               	btfss	status,2,c
  4613  01042A  D7C9               	goto	l8562
  4614  01042C                     l8570:
  4615                           
  4616                           ; BSR set to: 0
  4617  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4618  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4619  010434  0100               	movlb	0	; () banked
  4620  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4621  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4622  01043A                     	if	0	;tblptru may be non-zero
  4623  01043A                     	endif
  4624  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4625  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  4626  01043C  6EF8               	movwf	tblptru,c
  4627  01043E                     	endif
  4628  01043E  0008               	tblrd		*
  4629  010440  CFF5 F08C          	movff	tablat,sprintf@c
  4630  010444  0100               	movlb	0	; () banked
  4631  010446  518C               	movf	sprintf@c& (0+255),w,b
  4632  010448  A4D8               	btfss	status,2,c
  4633  01044A  D5E1               	goto	l8430
  4634  01044C                     l8572:
  4635                           
  4636                           ;doprnt.c: 1538: *sp = 0;
  4637  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4638  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4639  010454  0E00               	movlw	0
  4640  010456  6EDF               	movwf	indf2,c
  4641  010458  0012               	return	
  4642  01045A                     __end_of_sprintf:
  4643                           	opt stack 0
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           prodh	equ	0xFF4
  4649                           prodl	equ	0xFF3
  4650                           intcon	equ	0xFF2
  4651                           postinc0	equ	0xFEE
  4652                           wreg	equ	0xFE8
  4653                           postdec1	equ	0xFE5
  4654                           fsr1h	equ	0xFE2
  4655                           fsr1l	equ	0xFE1
  4656                           indf2	equ	0xFDF
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _ringbuf_put_str *****************
  4664 ;; Defined at:
  4665 ;;		line 39 in file "../My_library/My_ringbuf.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4668 ;;		 -> usb_tx(8), 
  4669 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  4670 ;;		 -> STR_43(235), STR_24(8), print_time@str(30), STR_22(3), 
  4671 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;		None               void
  4676 ;; Registers used:
  4677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;Total ram usage:        4 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:   13
  4690 ;; This function calls:
  4691 ;;		_ringbuf_put
  4692 ;; This function is called by:
  4693 ;;		_terminal_task
  4694 ;;		_print_time
  4695 ;;		_terminal_at_hand
  4696 ;;		_terminal_operation
  4697 ;;		_print_time_dec
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text7
  4702  0138A6                     __ptext7:
  4703                           	opt stack 0
  4704  0138A6                     _ringbuf_put_str:
  4705                           	opt stack 13
  4706                           
  4707                           ;My_ringbuf.c: 40: while (*str) {
  4708                           
  4709                           ;incstack = 0
  4710  0138A6  D01C               	goto	l8342
  4711  0138A8                     l8338:
  4712                           
  4713                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  4714  0138A8  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  4715  0138AC  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  4716  0138B0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4717  0138B4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4718  0138B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4719  0138BA  6EF8               	movwf	tblptru,c
  4720  0138BC  0E0E               	movlw	(high __ramtop+-1)
  4721  0138BE  64F7               	cpfsgt	tblptrh,c
  4722  0138C0  D003               	bra	u7887
  4723  0138C2  0008               	tblrd		*
  4724  0138C4  50F5               	movf	tablat,w,c
  4725  0138C6  D005               	bra	u7880
  4726  0138C8                     u7887:
  4727  0138C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4728  0138CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4729  0138D0  50EF               	movf	indf0,w,c
  4730  0138D2                     u7880:
  4731  0138D2  0100               	movlb	0	; () banked
  4732  0138D4  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  4733  0138D6  ECDF  F092         	call	_ringbuf_put	;wreg free
  4734  0138DA  0100               	movlb	0	; () banked
  4735  0138DC  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  4736  0138DE  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  4737  0138E0                     l8342:
  4738  0138E0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4739  0138E4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4740  0138E8  0E00               	movlw	low (__mediumconst shr (0+16))
  4741  0138EA  6EF8               	movwf	tblptru,c
  4742  0138EC  0E0E               	movlw	(high __ramtop+-1)
  4743  0138EE  64F7               	cpfsgt	tblptrh,c
  4744  0138F0  D003               	bra	u7897
  4745  0138F2  0008               	tblrd		*
  4746  0138F4  50F5               	movf	tablat,w,c
  4747  0138F6  D005               	bra	u7890
  4748  0138F8                     u7897:
  4749  0138F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4750  0138FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4751  013900  50EF               	movf	indf0,w,c
  4752  013902                     u7890:
  4753  013902  0900               	iorlw	0
  4754  013904  B4D8               	btfsc	status,2,c
  4755  013906  0012               	return	
  4756  013908  D7CF               	goto	l8338
  4757  01390A                     __end_of_ringbuf_put_str:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           indf0	equ	0xFEF
  4767                           postinc0	equ	0xFEE
  4768                           fsr0h	equ	0xFEA
  4769                           fsr0l	equ	0xFE9
  4770                           wreg	equ	0xFE8
  4771                           postdec1	equ	0xFE5
  4772                           fsr1h	equ	0xFE2
  4773                           fsr1l	equ	0xFE1
  4774                           indf2	equ	0xFDF
  4775                           postinc2	equ	0xFDE
  4776                           postdec2	equ	0xFDD
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           
  4781 ;; *************** function _RTCC_from_caltime *****************
  4782 ;; Defined at:
  4783 ;;		line 204 in file "../My_library/My_RTCC.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  tm              2   47[BANK0 ] PTR struct .
  4786 ;;		 -> now(14), 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;		None               void
  4791 ;; Registers used:
  4792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4802 ;;Total ram usage:        2 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:   14
  4805 ;; This function calls:
  4806 ;;		_caltime_to_RTCC
  4807 ;;		_caltime_to_epoch
  4808 ;;		_epoch_to_caltime
  4809 ;; This function is called by:
  4810 ;;		_terminal_at_hand
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text8
  4815  013F50                     __ptext8:
  4816                           	opt stack 0
  4817  013F50                     _RTCC_from_caltime:
  4818                           	opt stack 12
  4819                           
  4820                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  4821                           
  4822                           ;incstack = 0
  4823  013F50  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4824  013F54  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4825  013F58  ECB8  F085         	call	_caltime_to_epoch	;wreg free
  4826                           
  4827                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  4828  013F5C  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4829  013F60  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4830  013F64  EC41  F088         	call	_epoch_to_caltime	;wreg free
  4831                           
  4832                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  4833  013F68  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4834  013F6C  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4835  013F70  EC9F  F091         	call	_caltime_to_RTCC	;wreg free
  4836  013F74  0012               	return		;funcret
  4837  013F76                     __end_of_RTCC_from_caltime:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           indf0	equ	0xFEF
  4847                           postinc0	equ	0xFEE
  4848                           fsr0h	equ	0xFEA
  4849                           fsr0l	equ	0xFE9
  4850                           wreg	equ	0xFE8
  4851                           postdec1	equ	0xFE5
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           indf2	equ	0xFDF
  4855                           postinc2	equ	0xFDE
  4856                           postdec2	equ	0xFDD
  4857                           fsr2h	equ	0xFDA
  4858                           fsr2l	equ	0xFD9
  4859                           status	equ	0xFD8
  4860                           
  4861 ;; *************** function _strcmp *****************
  4862 ;; Defined at:
  4863 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  4866 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  4867 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  4868 ;;		 -> STR_45(9), STR_44(9), STR_42(2), STR_41(5), 
  4869 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  4870 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  4871 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  4872 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  r               1    5[BANK0 ] char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    0[BANK0 ] int 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;Total ram usage:        6 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:   11
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_terminal_time
  4895 ;;		_terminal_operation
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text9
  4900  0139CE                     __ptext9:
  4901                           	opt stack 0
  4902  0139CE                     _strcmp:
  4903                           	opt stack 16
  4904                           
  4905                           ;incstack = 0
  4906  0139CE  D006               	goto	l8676
  4907  0139D0                     l8674:
  4908  0139D0  0100               	movlb	0	; () banked
  4909  0139D2  4B60               	infsnz	strcmp@s1& (0+255),f,b
  4910  0139D4  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  4911  0139D6  0100               	movlb	0	; () banked
  4912  0139D8  4B62               	infsnz	strcmp@s2& (0+255),f,b
  4913  0139DA  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  4914  0139DC                     l8676:
  4915  0139DC  C060  FFD9         	movff	strcmp@s1,fsr2l
  4916  0139E0  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4917  0139E4  50DF               	movf	indf2,w,c
  4918  0139E6  0100               	movlb	0	; () banked
  4919  0139E8  6F64               	movwf	??_strcmp& (0+255),b
  4920  0139EA  C062  FFF6         	movff	strcmp@s2,tblptrl
  4921  0139EE  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  4922  0139F2                     	if	0	;tblptru may be non-zero
  4923  0139F2                     	endif
  4924  0139F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4925  0139F2  0E00               	movlw	low (__mediumconst shr (0+16))
  4926  0139F4  6EF8               	movwf	tblptru,c
  4927  0139F6                     	endif
  4928  0139F6  0008               	tblrd		*
  4929  0139F8  50F5               	movf	tablat,w,c
  4930  0139FA  0800               	sublw	0
  4931  0139FC  0100               	movlb	0	; () banked
  4932  0139FE  2564               	addwf	??_strcmp& (0+255),w,b
  4933  013A00  0100               	movlb	0	; () banked
  4934  013A02  6F65               	movwf	strcmp@r& (0+255),b
  4935  013A04  0100               	movlb	0	; () banked
  4936  013A06  5165               	movf	strcmp@r& (0+255),w,b
  4937  013A08  A4D8               	btfss	status,2,c
  4938  013A0A  D007               	goto	l8680
  4939                           
  4940                           ; BSR set to: 0
  4941  013A0C  C060  FFD9         	movff	strcmp@s1,fsr2l
  4942  013A10  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4943  013A14  50DF               	movf	indf2,w,c
  4944  013A16  A4D8               	btfss	status,2,c
  4945  013A18  D7DB               	goto	l8674
  4946  013A1A                     l8680:
  4947                           
  4948                           ; BSR set to: 0
  4949  013A1A  0100               	movlb	0	; () banked
  4950  013A1C  5165               	movf	strcmp@r& (0+255),w,b
  4951  013A1E  0100               	movlb	0	; () banked
  4952  013A20  6F60               	movwf	?_strcmp& (0+255),b
  4953  013A22  6B61               	clrf	(?_strcmp+1)& (0+255),b
  4954  013A24  BF60               	btfsc	?_strcmp& (0+255),7,b
  4955  013A26  0761               	decf	(?_strcmp+1)& (0+255),f,b
  4956  013A28  0012               	return	
  4957  013A2A                     __end_of_strcmp:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           indf0	equ	0xFEF
  4967                           postinc0	equ	0xFEE
  4968                           fsr0h	equ	0xFEA
  4969                           fsr0l	equ	0xFE9
  4970                           wreg	equ	0xFE8
  4971                           postdec1	equ	0xFE5
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           indf2	equ	0xFDF
  4975                           postinc2	equ	0xFDE
  4976                           postdec2	equ	0xFDD
  4977                           fsr2h	equ	0xFDA
  4978                           fsr2l	equ	0xFD9
  4979                           status	equ	0xFD8
  4980                           
  4981 ;; *************** function _atoi *****************
  4982 ;; Defined at:
  4983 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4986 ;;		 -> terminal_task@op2(25), 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  a               2   11[BANK0 ] int 
  4989 ;;  sign            1   10[BANK0 ] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2    6[BANK0 ] int 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;Total ram usage:        7 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:   12
  5006 ;; This function calls:
  5007 ;;		___wmul
  5008 ;;		_isdigit
  5009 ;; This function is called by:
  5010 ;;		_terminal_time
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text10
  5015  011B34                     __ptext10:
  5016                           	opt stack 0
  5017  011B34                     _atoi:
  5018                           	opt stack 15
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;incstack = 0
  5022  011B34  D003               	goto	l8688
  5023  011B36                     l8686:
  5024  011B36  0100               	movlb	0	; () banked
  5025  011B38  4B66               	infsnz	atoi@s& (0+255),f,b
  5026  011B3A  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5027  011B3C                     l8688:
  5028  011B3C  C066  FFD9         	movff	atoi@s,fsr2l
  5029  011B40  C067  FFDA         	movff	atoi@s+1,fsr2h
  5030  011B44  0E20               	movlw	32
  5031  011B46  18DE               	xorwf	postinc2,w,c
  5032  011B48  B4D8               	btfsc	status,2,c
  5033  011B4A  D7F5               	goto	l8686
  5034  011B4C  C066  FFD9         	movff	atoi@s,fsr2l
  5035  011B50  C067  FFDA         	movff	atoi@s+1,fsr2h
  5036  011B54  0E09               	movlw	9
  5037  011B56  18DE               	xorwf	postinc2,w,c
  5038  011B58  B4D8               	btfsc	status,2,c
  5039  011B5A  D7ED               	goto	l8686
  5040  011B5C  0E00               	movlw	0
  5041  011B5E  0100               	movlb	0	; () banked
  5042  011B60  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5043  011B62  0E00               	movlw	0
  5044  011B64  6F6B               	movwf	atoi@a& (0+255),b
  5045  011B66  0E00               	movlw	0
  5046  011B68  0100               	movlb	0	; () banked
  5047  011B6A  6F6A               	movwf	atoi@sign& (0+255),b
  5048                           
  5049                           ; BSR set to: 0
  5050  011B6C  C066  FFD9         	movff	atoi@s,fsr2l
  5051  011B70  C067  FFDA         	movff	atoi@s+1,fsr2h
  5052  011B74  0E2D               	movlw	45
  5053  011B76  18DE               	xorwf	postinc2,w,c
  5054  011B78  A4D8               	btfss	status,2,c
  5055  011B7A  D003               	goto	l8698
  5056                           
  5057                           ; BSR set to: 0
  5058  011B7C  0100               	movlb	0	; () banked
  5059  011B7E  2B6A               	incf	atoi@sign& (0+255),f,b
  5060  011B80  D02E               	goto	l8704
  5061  011B82                     l8698:
  5062                           
  5063                           ; BSR set to: 0
  5064  011B82  C066  FFD9         	movff	atoi@s,fsr2l
  5065  011B86  C067  FFDA         	movff	atoi@s+1,fsr2h
  5066  011B8A  0E2B               	movlw	43
  5067  011B8C  18DE               	xorwf	postinc2,w,c
  5068  011B8E  A4D8               	btfss	status,2,c
  5069  011B90  D029               	goto	l8706
  5070  011B92  D025               	goto	l8704
  5071  011B94                     l8702:
  5072  011B94  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5073  011B98  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5074  011B9C  0E00               	movlw	0
  5075  011B9E  0100               	movlb	0	; () banked
  5076  011BA0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5077  011BA2  0E0A               	movlw	10
  5078  011BA4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5079  011BA6  EC94  F09E         	call	___wmul	;wreg free
  5080  011BAA  C066  FFD9         	movff	atoi@s,fsr2l
  5081  011BAE  C067  FFDA         	movff	atoi@s+1,fsr2h
  5082  011BB2  50DF               	movf	indf2,w,c
  5083  011BB4  0100               	movlb	0	; () banked
  5084  011BB6  6F68               	movwf	??_atoi& (0+255),b
  5085  011BB8  6B69               	clrf	(??_atoi+1)& (0+255),b
  5086  011BBA  0100               	movlb	0	; () banked
  5087  011BBC  5160               	movf	?___wmul& (0+255),w,b
  5088  011BBE  0100               	movlb	0	; () banked
  5089  011BC0  2768               	addwf	??_atoi& (0+255),f,b
  5090  011BC2  0100               	movlb	0	; () banked
  5091  011BC4  5161               	movf	(?___wmul+1)& (0+255),w,b
  5092  011BC6  0100               	movlb	0	; () banked
  5093  011BC8  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5094  011BCA  0ED0               	movlw	208
  5095  011BCC  0100               	movlb	0	; () banked
  5096  011BCE  2568               	addwf	??_atoi& (0+255),w,b
  5097  011BD0  0100               	movlb	0	; () banked
  5098  011BD2  6F6B               	movwf	atoi@a& (0+255),b
  5099  011BD4  0EFF               	movlw	255
  5100  011BD6  0100               	movlb	0	; () banked
  5101  011BD8  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5102  011BDA  0100               	movlb	0	; () banked
  5103  011BDC  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5104  011BDE                     l8704:
  5105                           
  5106                           ; BSR set to: 0
  5107  011BDE  0100               	movlb	0	; () banked
  5108  011BE0  4B66               	infsnz	atoi@s& (0+255),f,b
  5109  011BE2  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5110  011BE4                     l8706:
  5111                           
  5112                           ; BSR set to: 0
  5113  011BE4  C066  FFD9         	movff	atoi@s,fsr2l
  5114  011BE8  C067  FFDA         	movff	atoi@s+1,fsr2h
  5115  011BEC  50DF               	movf	indf2,w,c
  5116  011BEE  EC7F  F09F         	call	_isdigit
  5117  011BF2  B0D8               	btfsc	status,0,c
  5118  011BF4  D7CF               	goto	l8702
  5119  011BF6  0100               	movlb	0	; () banked
  5120  011BF8  516A               	movf	atoi@sign& (0+255),w,b
  5121  011BFA  0100               	movlb	0	; () banked
  5122  011BFC  B4D8               	btfsc	status,2,c
  5123  011BFE  D00E               	goto	l1716
  5124                           
  5125                           ; BSR set to: 0
  5126  011C00  C06B  F068         	movff	atoi@a,??_atoi
  5127  011C04  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5128  011C08  0100               	movlb	0	; () banked
  5129  011C0A  1F68               	comf	??_atoi& (0+255),f,b
  5130  011C0C  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5131  011C0E  4B68               	infsnz	??_atoi& (0+255),f,b
  5132  011C10  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5133  011C12  C068  F066         	movff	??_atoi,?_atoi
  5134  011C16  C069  F067         	movff	??_atoi+1,?_atoi+1
  5135  011C1A  0012               	return	
  5136  011C1C                     l1716:
  5137                           
  5138                           ; BSR set to: 0
  5139  011C1C  C06B  F066         	movff	atoi@a,?_atoi
  5140  011C20  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5141                           
  5142                           ; BSR set to: 0
  5143  011C24  0012               	return		;funcret
  5144  011C26                     __end_of_atoi:
  5145                           	opt stack 0
  5146                           tblptru	equ	0xFF8
  5147                           tblptrh	equ	0xFF7
  5148                           tblptrl	equ	0xFF6
  5149                           tablat	equ	0xFF5
  5150                           prodh	equ	0xFF4
  5151                           prodl	equ	0xFF3
  5152                           intcon	equ	0xFF2
  5153                           indf0	equ	0xFEF
  5154                           postinc0	equ	0xFEE
  5155                           fsr0h	equ	0xFEA
  5156                           fsr0l	equ	0xFE9
  5157                           wreg	equ	0xFE8
  5158                           postdec1	equ	0xFE5
  5159                           fsr1h	equ	0xFE2
  5160                           fsr1l	equ	0xFE1
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _isdigit *****************
  5169 ;; Defined at:
  5170 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  c               1    wreg     unsigned char 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  c               1    2[BANK0 ] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;		None               void
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;Total ram usage:        3 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:   11
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_sprintf
  5195 ;;		_atoi
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text11
  5200  013EFE                     __ptext11:
  5201                           	opt stack 0
  5202  013EFE                     _isdigit:
  5203                           	opt stack 13
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;incstack = 0
  5207                           ;isdigit@c stored from wreg
  5208  013EFE  0100               	movlb	0	; () banked
  5209  013F00  6F62               	movwf	isdigit@c& (0+255),b
  5210  013F02  0E00               	movlw	0
  5211  013F04  0100               	movlb	0	; () banked
  5212  013F06  6F61               	movwf	_isdigit$5614& (0+255),b
  5213                           
  5214                           ; BSR set to: 0
  5215  013F08  0E3A               	movlw	58
  5216  013F0A  0100               	movlb	0	; () banked
  5217  013F0C  6162               	cpfslt	isdigit@c& (0+255),b
  5218  013F0E  D007               	goto	l8284
  5219                           
  5220                           ; BSR set to: 0
  5221  013F10  0E2F               	movlw	47
  5222  013F12  0100               	movlb	0	; () banked
  5223  013F14  6562               	cpfsgt	isdigit@c& (0+255),b
  5224  013F16  D003               	goto	l8284
  5225                           
  5226                           ; BSR set to: 0
  5227  013F18  0E01               	movlw	1
  5228  013F1A  0100               	movlb	0	; () banked
  5229  013F1C  6F61               	movwf	_isdigit$5614& (0+255),b
  5230  013F1E                     l8284:
  5231                           
  5232                           ; BSR set to: 0
  5233  013F1E  C061  F060         	movff	_isdigit$5614,??_isdigit
  5234  013F22  0100               	movlb	0	; () banked
  5235  013F24  3160               	rrcf	??_isdigit& (0+255),w,b
  5236  013F26  0012               	return	
  5237  013F28                     __end_of_isdigit:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           prodh	equ	0xFF4
  5244                           prodl	equ	0xFF3
  5245                           intcon	equ	0xFF2
  5246                           indf0	equ	0xFEF
  5247                           postinc0	equ	0xFEE
  5248                           fsr0h	equ	0xFEA
  5249                           fsr0l	equ	0xFE9
  5250                           wreg	equ	0xFE8
  5251                           postdec1	equ	0xFE5
  5252                           fsr1h	equ	0xFE2
  5253                           fsr1l	equ	0xFE1
  5254                           indf2	equ	0xFDF
  5255                           postinc2	equ	0xFDE
  5256                           postdec2	equ	0xFDD
  5257                           fsr2h	equ	0xFDA
  5258                           fsr2l	equ	0xFD9
  5259                           status	equ	0xFD8
  5260                           
  5261 ;; *************** function ___wmul *****************
  5262 ;; Defined at:
  5263 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5266 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  product         2    4[BANK0 ] unsigned int 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2    0[BANK0 ] unsigned int 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, prodl, prodh
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5282 ;;Total ram usage:        6 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:   11
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_sprintf
  5289 ;;		_atoi
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text12
  5294  013D28                     __ptext12:
  5295                           	opt stack 0
  5296  013D28                     ___wmul:
  5297                           	opt stack 13
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;incstack = 0
  5301  013D28  0100               	movlb	0	; () banked
  5302  013D2A  5160               	movf	___wmul@multiplier& (0+255),w,b
  5303  013D2C  0100               	movlb	0	; () banked
  5304  013D2E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5305  013D30  CFF3 F064          	movff	prodl,___wmul@product
  5306  013D34  CFF4 F065          	movff	prodh,___wmul@product+1
  5307  013D38  0100               	movlb	0	; () banked
  5308  013D3A  5160               	movf	___wmul@multiplier& (0+255),w,b
  5309  013D3C  0100               	movlb	0	; () banked
  5310  013D3E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5311  013D40  50F3               	movf	prodl,w,c
  5312  013D42  0100               	movlb	0	; () banked
  5313  013D44  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5314  013D46  0100               	movlb	0	; () banked
  5315  013D48  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5316  013D4A  0100               	movlb	0	; () banked
  5317  013D4C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5318  013D4E  50F3               	movf	prodl,w,c
  5319  013D50  0100               	movlb	0	; () banked
  5320  013D52  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5321                           
  5322                           ; BSR set to: 0
  5323  013D54  C064  F060         	movff	___wmul@product,?___wmul
  5324  013D58  C065  F061         	movff	___wmul@product+1,?___wmul+1
  5325  013D5C  0012               	return	
  5326  013D5E                     __end_of___wmul:
  5327                           	opt stack 0
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           indf0	equ	0xFEF
  5336                           postinc0	equ	0xFEE
  5337                           fsr0h	equ	0xFEA
  5338                           fsr0l	equ	0xFE9
  5339                           wreg	equ	0xFE8
  5340                           postdec1	equ	0xFE5
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function _ringbuf_put_num *****************
  5351 ;; Defined at:
  5352 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5355 ;;		 -> usb_tx(8), 
  5356 ;;  value           2   17[BANK0 ] const unsigned int 
  5357 ;;  digits          1   19[BANK0 ] unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  i               1   20[BANK0 ] unsigned char 
  5360 ;;  temp            2   21[BANK0 ] unsigned int 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;		None               void
  5363 ;; Registers used:
  5364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5370 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;Total ram usage:        8 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:   13
  5377 ;; This function calls:
  5378 ;;		___lwdiv
  5379 ;;		___lwmod
  5380 ;;		_ringbuf_put
  5381 ;; This function is called by:
  5382 ;;		_terminal_task
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text13
  5387  013584                     __ptext13:
  5388                           	opt stack 0
  5389  013584                     _ringbuf_put_num:
  5390                           	opt stack 16
  5391                           
  5392                           ;My_ringbuf.c: 29: while (digits--) {
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;incstack = 0
  5396  013584  D039               	goto	l9058
  5397  013586                     l774:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5401  013586  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5402  01358A  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5406  01358E  0E00               	movlw	0
  5407  013590  0100               	movlb	0	; () banked
  5408  013592  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  5409  013594  D011               	goto	l9052
  5410  013596                     l9048:
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;My_ringbuf.c: 32: temp /= 10;
  5414  013596  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5415  01359A  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5416  01359E  0E00               	movlw	0
  5417  0135A0  0100               	movlb	0	; () banked
  5418  0135A2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5419  0135A4  0E0A               	movlw	10
  5420  0135A6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5421  0135A8  EC03  F09B         	call	___lwdiv	;wreg free
  5422  0135AC  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  5423  0135B0  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5424  0135B4  0100               	movlb	0	; () banked
  5425  0135B6  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  5426  0135B8                     l9052:
  5427                           
  5428                           ; BSR set to: 0
  5429  0135B8  0100               	movlb	0	; () banked
  5430  0135BA  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  5431  0135BC  0100               	movlb	0	; () banked
  5432  0135BE  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  5433  0135C0  A0D8               	btfss	status,0,c
  5434  0135C2  D7E9               	goto	l9048
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;My_ringbuf.c: 33: }
  5438                           ;My_ringbuf.c: 34: temp %= 10;
  5439                           
  5440                           ; BSR set to: 0
  5441  0135C4  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5442  0135C8  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5443  0135CC  0E00               	movlw	0
  5444  0135CE  0100               	movlb	0	; () banked
  5445  0135D0  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  5446  0135D2  0E0A               	movlw	10
  5447  0135D4  6F69               	movwf	___lwmod@divisor& (0+255),b
  5448  0135D6  ECB6  F09C         	call	___lwmod	;wreg free
  5449  0135DA  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  5450  0135DE  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5451                           
  5452                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5453  0135E2  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5454  0135E6  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5455  0135EA  0100               	movlb	0	; () banked
  5456  0135EC  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  5457  0135EE  0F30               	addlw	48
  5458  0135F0  0100               	movlb	0	; () banked
  5459  0135F2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5460  0135F4  ECDF  F092         	call	_ringbuf_put	;wreg free
  5461  0135F8                     l9058:
  5462  0135F8  0100               	movlb	0	; () banked
  5463  0135FA  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  5464  0135FC  0100               	movlb	0	; () banked
  5465  0135FE  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  5466  013600  B4D8               	btfsc	status,2,c
  5467  013602  0012               	return	
  5468  013604  D7C0               	goto	l774
  5469  013606                     __end_of_ringbuf_put_num:
  5470                           	opt stack 0
  5471                           tblptru	equ	0xFF8
  5472                           tblptrh	equ	0xFF7
  5473                           tblptrl	equ	0xFF6
  5474                           tablat	equ	0xFF5
  5475                           prodh	equ	0xFF4
  5476                           prodl	equ	0xFF3
  5477                           intcon	equ	0xFF2
  5478                           indf0	equ	0xFEF
  5479                           postinc0	equ	0xFEE
  5480                           fsr0h	equ	0xFEA
  5481                           fsr0l	equ	0xFE9
  5482                           wreg	equ	0xFE8
  5483                           postdec1	equ	0xFE5
  5484                           fsr1h	equ	0xFE2
  5485                           fsr1l	equ	0xFE1
  5486                           indf2	equ	0xFDF
  5487                           postinc2	equ	0xFDE
  5488                           postdec2	equ	0xFDD
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function ___lwmod *****************
  5494 ;; Defined at:
  5495 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  dividend        2    7[BANK0 ] unsigned int 
  5498 ;;  divisor         2    9[BANK0 ] unsigned int 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  counter         1   11[BANK0 ] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  2    7[BANK0 ] unsigned int 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5510 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5513 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5514 ;;Total ram usage:        5 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:   11
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_ringbuf_put_num
  5521 ;;		_sprintf
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text14
  5526  01396C                     __ptext14:
  5527                           	opt stack 0
  5528  01396C                     ___lwmod:
  5529                           	opt stack 13
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;incstack = 0
  5533  01396C  0100               	movlb	0	; () banked
  5534  01396E  5169               	movf	___lwmod@divisor& (0+255),w,b
  5535  013970  0100               	movlb	0	; () banked
  5536  013972  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5537  013974  B4D8               	btfsc	status,2,c
  5538  013976  D026               	goto	l1976
  5539                           
  5540                           ; BSR set to: 0
  5541  013978  0E01               	movlw	1
  5542  01397A  0100               	movlb	0	; () banked
  5543  01397C  6F6B               	movwf	___lwmod@counter& (0+255),b
  5544  01397E  D006               	goto	l8322
  5545  013980                     l8320:
  5546                           
  5547                           ; BSR set to: 0
  5548  013980  0100               	movlb	0	; () banked
  5549  013982  90D8               	bcf	status,0,c
  5550  013984  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  5551  013986  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5552  013988  0100               	movlb	0	; () banked
  5553  01398A  2B6B               	incf	___lwmod@counter& (0+255),f,b
  5554  01398C                     l8322:
  5555                           
  5556                           ; BSR set to: 0
  5557  01398C  0100               	movlb	0	; () banked
  5558  01398E  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5559  013990  D7F7               	goto	l8320
  5560  013992                     l8324:
  5561                           
  5562                           ; BSR set to: 0
  5563  013992  0100               	movlb	0	; () banked
  5564  013994  5169               	movf	___lwmod@divisor& (0+255),w,b
  5565  013996  0100               	movlb	0	; () banked
  5566  013998  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  5567  01399A  0100               	movlb	0	; () banked
  5568  01399C  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5569  01399E  0100               	movlb	0	; () banked
  5570  0139A0  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5571  0139A2  A0D8               	btfss	status,0,c
  5572  0139A4  D008               	goto	l8328
  5573                           
  5574                           ; BSR set to: 0
  5575  0139A6  0100               	movlb	0	; () banked
  5576  0139A8  5169               	movf	___lwmod@divisor& (0+255),w,b
  5577  0139AA  0100               	movlb	0	; () banked
  5578  0139AC  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  5579  0139AE  0100               	movlb	0	; () banked
  5580  0139B0  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5581  0139B2  0100               	movlb	0	; () banked
  5582  0139B4  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5583  0139B6                     l8328:
  5584                           
  5585                           ; BSR set to: 0
  5586  0139B6  0100               	movlb	0	; () banked
  5587  0139B8  90D8               	bcf	status,0,c
  5588  0139BA  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5589  0139BC  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  5590                           
  5591                           ; BSR set to: 0
  5592  0139BE  0100               	movlb	0	; () banked
  5593  0139C0  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  5594  0139C2  D7E7               	goto	l8324
  5595  0139C4                     l1976:
  5596                           
  5597                           ; BSR set to: 0
  5598  0139C4  C067  F067         	movff	___lwmod@dividend,?___lwmod
  5599  0139C8  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  5600                           
  5601                           ; BSR set to: 0
  5602  0139CC  0012               	return		;funcret
  5603  0139CE                     __end_of___lwmod:
  5604                           	opt stack 0
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           intcon	equ	0xFF2
  5612                           indf0	equ	0xFEF
  5613                           postinc0	equ	0xFEE
  5614                           fsr0h	equ	0xFEA
  5615                           fsr0l	equ	0xFE9
  5616                           wreg	equ	0xFE8
  5617                           postdec1	equ	0xFE5
  5618                           fsr1h	equ	0xFE2
  5619                           fsr1l	equ	0xFE1
  5620                           indf2	equ	0xFDF
  5621                           postinc2	equ	0xFDE
  5622                           postdec2	equ	0xFDD
  5623                           fsr2h	equ	0xFDA
  5624                           fsr2l	equ	0xFD9
  5625                           status	equ	0xFD8
  5626                           
  5627 ;; *************** function ___lwdiv *****************
  5628 ;; Defined at:
  5629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  dividend        2    0[BANK0 ] unsigned int 
  5632 ;;  divisor         2    2[BANK0 ] unsigned int 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  quotient        2    5[BANK0 ] unsigned int 
  5635 ;;  counter         1    4[BANK0 ] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  2    0[BANK0 ] unsigned int 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5648 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5649 ;;Total ram usage:        7 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:   11
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_ringbuf_put_num
  5656 ;;		_sprintf
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text15
  5661  013606                     __ptext15:
  5662                           	opt stack 0
  5663  013606                     ___lwdiv:
  5664                           	opt stack 13
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;incstack = 0
  5668  013606  0E00               	movlw	0
  5669  013608  0100               	movlb	0	; () banked
  5670  01360A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5671  01360C  0E00               	movlw	0
  5672  01360E  6F65               	movwf	___lwdiv@quotient& (0+255),b
  5673                           
  5674                           ; BSR set to: 0
  5675  013610  0100               	movlb	0	; () banked
  5676  013612  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5677  013614  0100               	movlb	0	; () banked
  5678  013616  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5679  013618  B4D8               	btfsc	status,2,c
  5680  01361A  D02C               	goto	l1966
  5681                           
  5682                           ; BSR set to: 0
  5683  01361C  0E01               	movlw	1
  5684  01361E  0100               	movlb	0	; () banked
  5685  013620  6F64               	movwf	___lwdiv@counter& (0+255),b
  5686  013622  D006               	goto	l8302
  5687  013624                     l8300:
  5688                           
  5689                           ; BSR set to: 0
  5690  013624  0100               	movlb	0	; () banked
  5691  013626  90D8               	bcf	status,0,c
  5692  013628  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5693  01362A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5694  01362C  0100               	movlb	0	; () banked
  5695  01362E  2B64               	incf	___lwdiv@counter& (0+255),f,b
  5696  013630                     l8302:
  5697                           
  5698                           ; BSR set to: 0
  5699  013630  0100               	movlb	0	; () banked
  5700  013632  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5701  013634  D7F7               	goto	l8300
  5702  013636                     l8304:
  5703                           
  5704                           ; BSR set to: 0
  5705  013636  0100               	movlb	0	; () banked
  5706  013638  90D8               	bcf	status,0,c
  5707  01363A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  5708  01363C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5709                           
  5710                           ; BSR set to: 0
  5711  01363E  0100               	movlb	0	; () banked
  5712  013640  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5713  013642  0100               	movlb	0	; () banked
  5714  013644  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5715  013646  0100               	movlb	0	; () banked
  5716  013648  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5717  01364A  0100               	movlb	0	; () banked
  5718  01364C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5719  01364E  A0D8               	btfss	status,0,c
  5720  013650  D00A               	goto	l8312
  5721                           
  5722                           ; BSR set to: 0
  5723  013652  0100               	movlb	0	; () banked
  5724  013654  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5725  013656  0100               	movlb	0	; () banked
  5726  013658  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5727  01365A  0100               	movlb	0	; () banked
  5728  01365C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5729  01365E  0100               	movlb	0	; () banked
  5730  013660  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5731                           
  5732                           ; BSR set to: 0
  5733  013662  0100               	movlb	0	; () banked
  5734  013664  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  5735  013666                     l8312:
  5736                           
  5737                           ; BSR set to: 0
  5738  013666  0100               	movlb	0	; () banked
  5739  013668  90D8               	bcf	status,0,c
  5740  01366A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5741  01366C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5742                           
  5743                           ; BSR set to: 0
  5744  01366E  0100               	movlb	0	; () banked
  5745  013670  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  5746  013672  D7E1               	goto	l8304
  5747  013674                     l1966:
  5748                           
  5749                           ; BSR set to: 0
  5750  013674  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  5751  013678  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5752                           
  5753                           ; BSR set to: 0
  5754  01367C  0012               	return		;funcret
  5755  01367E                     __end_of___lwdiv:
  5756                           	opt stack 0
  5757                           tblptru	equ	0xFF8
  5758                           tblptrh	equ	0xFF7
  5759                           tblptrl	equ	0xFF6
  5760                           tablat	equ	0xFF5
  5761                           prodh	equ	0xFF4
  5762                           prodl	equ	0xFF3
  5763                           intcon	equ	0xFF2
  5764                           indf0	equ	0xFEF
  5765                           postinc0	equ	0xFEE
  5766                           fsr0h	equ	0xFEA
  5767                           fsr0l	equ	0xFE9
  5768                           wreg	equ	0xFE8
  5769                           postdec1	equ	0xFE5
  5770                           fsr1h	equ	0xFE2
  5771                           fsr1l	equ	0xFE1
  5772                           indf2	equ	0xFDF
  5773                           postinc2	equ	0xFDE
  5774                           postdec2	equ	0xFDD
  5775                           fsr2h	equ	0xFDA
  5776                           fsr2l	equ	0xFD9
  5777                           status	equ	0xFD8
  5778                           
  5779 ;; *************** function _ringbuf_delete *****************
  5780 ;; Defined at:
  5781 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5784 ;;		 -> terminal_task@command(8), 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;		None               void
  5789 ;; Registers used:
  5790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;Total ram usage:        2 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:   11
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_terminal_task
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text16
  5811  013F76                     __ptext16:
  5812                           	opt stack 0
  5813  013F76                     _ringbuf_delete:
  5814                           	opt stack 18
  5815                           
  5816                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;incstack = 0
  5820  013F76  0100               	movlb	0	; () banked
  5821  013F78  EE20 F006          	lfsr	2,6
  5822  013F7C  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5823  013F7E  26D9               	addwf	fsr2l,f,c
  5824  013F80  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5825  013F82  22DA               	addwfc	fsr2h,f,c
  5826  013F84  0100               	movlb	0	; () banked
  5827  013F86  EE10 F004          	lfsr	1,4
  5828  013F8A  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5829  013F8C  26E1               	addwf	fsr1l,f,c
  5830  013F8E  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5831  013F90  22E2               	addwfc	fsr1h,f,c
  5832  013F92  CFDE FFE6          	movff	postinc2,postinc1
  5833  013F96  CFDD FFE5          	movff	postdec2,postdec1
  5834                           
  5835                           ; BSR set to: 0
  5836  013F9A  0012               	return		;funcret
  5837  013F9C                     __end_of_ringbuf_delete:
  5838                           	opt stack 0
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           intcon	equ	0xFF2
  5846                           indf0	equ	0xFEF
  5847                           postinc0	equ	0xFEE
  5848                           fsr0h	equ	0xFEA
  5849                           fsr0l	equ	0xFE9
  5850                           wreg	equ	0xFE8
  5851                           postinc1	equ	0xFE6
  5852                           postdec1	equ	0xFE5
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _ringbuf_backspace *****************
  5863 ;; Defined at:
  5864 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5867 ;;		 -> terminal_task@command(8), 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;		None               void
  5872 ;; Registers used:
  5873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;Total ram usage:        6 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:   12
  5886 ;; This function calls:
  5887 ;;		_ringbuf_num
  5888 ;; This function is called by:
  5889 ;;		_terminal_task
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text17
  5894  01334E                     __ptext17:
  5895                           	opt stack 0
  5896  01334E                     _ringbuf_backspace:
  5897                           	opt stack 17
  5898                           
  5899                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;incstack = 0
  5903  01334E  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5904  013352  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5905  013356  EC8C  F08E         	call	_ringbuf_num	;wreg free
  5906  01335A  0100               	movlb	0	; () banked
  5907  01335C  5160               	movf	?_ringbuf_num& (0+255),w,b
  5908  01335E  0100               	movlb	0	; () banked
  5909  013360  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5910  013362  B4D8               	btfsc	status,2,c
  5911  013364  0012               	return	
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5915  013366  0100               	movlb	0	; () banked
  5916  013368  EE20 F004          	lfsr	2,4
  5917  01336C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5918  01336E  26D9               	addwf	fsr2l,f,c
  5919  013370  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5920  013372  22DA               	addwfc	fsr2h,f,c
  5921  013374  50DE               	movf	postinc2,w,c
  5922  013376  10DE               	iorwf	postinc2,w,c
  5923  013378  B4D8               	btfsc	status,2,c
  5924  01337A  D00B               	goto	l9086
  5925                           
  5926                           ; BSR set to: 0
  5927  01337C  0100               	movlb	0	; () banked
  5928  01337E  EE20 F004          	lfsr	2,4
  5929  013382  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5930  013384  26D9               	addwf	fsr2l,f,c
  5931  013386  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5932  013388  22DA               	addwfc	fsr2h,f,c
  5933  01338A  06DE               	decf	postinc2,f,c
  5934  01338C  0E00               	movlw	0
  5935  01338E  5ADD               	subwfb	postdec2,f,c
  5936  013390  0012               	return	
  5937  013392                     l9086:
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5941  013392  0EFF               	movlw	255
  5942  013394  0100               	movlb	0	; () banked
  5943  013396  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5944  013398  0EFF               	movlw	255
  5945  01339A  0100               	movlb	0	; () banked
  5946  01339C  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5947  01339E  0100               	movlb	0	; () banked
  5948  0133A0  EE20 F002          	lfsr	2,2
  5949  0133A4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5950  0133A6  26D9               	addwf	fsr2l,f,c
  5951  0133A8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5952  0133AA  22DA               	addwfc	fsr2h,f,c
  5953  0133AC  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5954  0133B0  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5955  0133B4  0100               	movlb	0	; () banked
  5956  0133B6  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5957  0133B8  0100               	movlb	0	; () banked
  5958  0133BA  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5959  0133BC  0100               	movlb	0	; () banked
  5960  0133BE  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5961  0133C0  0100               	movlb	0	; () banked
  5962  0133C2  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5963  0133C4  0100               	movlb	0	; () banked
  5964  0133C6  EE20 F004          	lfsr	2,4
  5965  0133CA  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5966  0133CC  26D9               	addwf	fsr2l,f,c
  5967  0133CE  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5968  0133D0  22DA               	addwfc	fsr2h,f,c
  5969  0133D2  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5970  0133D6  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5971                           
  5972                           ; BSR set to: 0
  5973  0133DA  0012               	return	
  5974  0133DC                     __end_of_ringbuf_backspace:
  5975                           	opt stack 0
  5976                           tblptru	equ	0xFF8
  5977                           tblptrh	equ	0xFF7
  5978                           tblptrl	equ	0xFF6
  5979                           tablat	equ	0xFF5
  5980                           prodh	equ	0xFF4
  5981                           prodl	equ	0xFF3
  5982                           intcon	equ	0xFF2
  5983                           indf0	equ	0xFEF
  5984                           postinc0	equ	0xFEE
  5985                           fsr0h	equ	0xFEA
  5986                           fsr0l	equ	0xFE9
  5987                           wreg	equ	0xFE8
  5988                           postinc1	equ	0xFE6
  5989                           postdec1	equ	0xFE5
  5990                           fsr1h	equ	0xFE2
  5991                           fsr1l	equ	0xFE1
  5992                           indf2	equ	0xFDF
  5993                           postinc2	equ	0xFDE
  5994                           postdec2	equ	0xFDD
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function _main_init *****************
  6000 ;; Defined at:
  6001 ;;		line 73 in file "main.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;		None               void
  6008 ;; Registers used:
  6009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6019 ;;Total ram usage:        0 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:   16
  6022 ;; This function calls:
  6023 ;;		_I2C_LCD_init
  6024 ;;		_OSC_init
  6025 ;;		_RTCC_init
  6026 ;;		_UART_init
  6027 ;;		_USB_init
  6028 ;;		_ringbuf_init
  6029 ;;		_timer0_init
  6030 ;;		_timer1_init
  6031 ;;		_timer3_init
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text18
  6038  011FD2                     __ptext18:
  6039                           	opt stack 0
  6040  011FD2                     _main_init:
  6041                           	opt stack 14
  6042                           
  6043                           ;main.c: 74: OSC_init();
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;incstack = 0
  6047  011FD2  EC85  F0A0         	call	_OSC_init	;wreg free
  6048                           
  6049                           ;main.c: 75: TRISA = 0b00010000;
  6050  011FD6  0E10               	movlw	16
  6051  011FD8  6E92               	movwf	3986,c	;volatile
  6052                           
  6053                           ;main.c: 76: TRISB = 0b00110001;
  6054  011FDA  0E31               	movlw	49
  6055  011FDC  6E93               	movwf	3987,c	;volatile
  6056                           
  6057                           ;main.c: 77: TRISC = 0b10111010;
  6058  011FDE  0EBA               	movlw	186
  6059  011FE0  6E94               	movwf	3988,c	;volatile
  6060                           
  6061                           ;main.c: 78: ANCON0 = 0b11111111;
  6062  011FE2  010F               	movlb	15	; () banked
  6063  011FE4  6948               	setf	72,b	;volatile
  6064                           
  6065                           ; BSR set to: 15
  6066                           ;main.c: 79: ANCON1 = 0b00011111;
  6067  011FE6  0E1F               	movlw	31
  6068  011FE8  010F               	movlb	15	; () banked
  6069  011FEA  6F49               	movwf	73,b	;volatile
  6070                           
  6071                           ; BSR set to: 15
  6072                           ;main.c: 80: INTCON2bits.RBPU = 0;
  6073  011FEC  9EF1               	bcf	intcon2,7,c	;volatile
  6074                           
  6075                           ; BSR set to: 15
  6076                           ;main.c: 82: timer0_init(6);
  6077  011FEE  0E06               	movlw	6
  6078  011FF0  EC3F  F09E         	call	_timer0_init
  6079                           
  6080                           ;main.c: 83: timer1_init(0, 2);
  6081  011FF4  0E02               	movlw	2
  6082  011FF6  0100               	movlb	0	; () banked
  6083  011FF8  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6084  011FFA  0E00               	movlw	0
  6085  011FFC  EC6D  F09D         	call	_timer1_init
  6086                           
  6087                           ;main.c: 84: timer3_init(2);
  6088  012000  0E02               	movlw	2
  6089  012002  EC11  F09F         	call	_timer3_init
  6090                           
  6091                           ;main.c: 85: I2C_LCD_init();
  6092  012006  EC5F  F099         	call	_I2C_LCD_init	;wreg free
  6093                           
  6094                           ;main.c: 86: RTCC_init();
  6095  01200A  ECE9  F09B         	call	_RTCC_init	;wreg free
  6096                           
  6097                           ;main.c: 88: USB_init();
  6098  01200E  EC1F  F0A0         	call	_USB_init	;wreg free
  6099                           
  6100                           ;main.c: 89: static uint8_t usbtx[1000];
  6101                           ;main.c: 90: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  6102  012012  0E74               	movlw	low _usb_tx
  6103  012014  0100               	movlb	0	; () banked
  6104  012016  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6105  012018  0E01               	movlw	high _usb_tx
  6106  01201A  0100               	movlb	0	; () banked
  6107  01201C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6108  01201E  0EB0               	movlw	low main_init@usbtx
  6109  012020  0100               	movlb	0	; () banked
  6110  012022  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6111  012024  0E08               	movlw	high main_init@usbtx
  6112  012026  0100               	movlb	0	; () banked
  6113  012028  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6114  01202A  0E03               	movlw	3
  6115  01202C  0100               	movlb	0	; () banked
  6116  01202E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6117  012030  0EE8               	movlw	232
  6118  012032  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6119  012034  EC43  F09D         	call	_ringbuf_init	;wreg free
  6120                           
  6121                           ;main.c: 91: static uint8_t usbrx[100];
  6122                           ;main.c: 92: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  6123  012038  0E6C               	movlw	low _usb_rx
  6124  01203A  0100               	movlb	0	; () banked
  6125  01203C  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6126  01203E  0E01               	movlw	high _usb_rx
  6127  012040  0100               	movlb	0	; () banked
  6128  012042  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6129  012044  0E64               	movlw	low main_init@usbrx
  6130  012046  0100               	movlb	0	; () banked
  6131  012048  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6132  01204A  0E03               	movlw	high main_init@usbrx
  6133  01204C  0100               	movlb	0	; () banked
  6134  01204E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6135  012050  0E00               	movlw	0
  6136  012052  0100               	movlb	0	; () banked
  6137  012054  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6138  012056  0E64               	movlw	100
  6139  012058  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6140  01205A  EC43  F09D         	call	_ringbuf_init	;wreg free
  6141                           
  6142                           ;main.c: 94: UART_init();
  6143  01205E  ECCE  F09F         	call	_UART_init	;wreg free
  6144                           
  6145                           ;main.c: 95: static uint8_t uarttx[1000];
  6146                           ;main.c: 96: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  6147  012062  0E64               	movlw	low _uart_tx
  6148  012064  0100               	movlb	0	; () banked
  6149  012066  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6150  012068  0E01               	movlw	high _uart_tx
  6151  01206A  0100               	movlb	0	; () banked
  6152  01206C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6153  01206E  0EC8               	movlw	low main_init@uarttx
  6154  012070  0100               	movlb	0	; () banked
  6155  012072  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6156  012074  0E04               	movlw	high main_init@uarttx
  6157  012076  0100               	movlb	0	; () banked
  6158  012078  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6159  01207A  0E03               	movlw	3
  6160  01207C  0100               	movlb	0	; () banked
  6161  01207E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6162  012080  0EE8               	movlw	232
  6163  012082  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6164  012084  EC43  F09D         	call	_ringbuf_init	;wreg free
  6165                           
  6166                           ;main.c: 97: static uint8_t uartrx[100];
  6167                           ;main.c: 98: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  6168  012088  0E5C               	movlw	low _uart_rx
  6169  01208A  0100               	movlb	0	; () banked
  6170  01208C  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6171  01208E  0E01               	movlw	high _uart_rx
  6172  012090  0100               	movlb	0	; () banked
  6173  012092  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6174  012094  0E00               	movlw	low main_init@uartrx
  6175  012096  0100               	movlb	0	; () banked
  6176  012098  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6177  01209A  0E03               	movlw	high main_init@uartrx
  6178  01209C  0100               	movlb	0	; () banked
  6179  01209E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6180  0120A0  0E00               	movlw	0
  6181  0120A2  0100               	movlb	0	; () banked
  6182  0120A4  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6183  0120A6  0E64               	movlw	100
  6184  0120A8  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6185  0120AA  EC43  F09D         	call	_ringbuf_init	;wreg free
  6186  0120AE  0012               	return		;funcret
  6187  0120B0                     __end_of_main_init:
  6188                           	opt stack 0
  6189                           tblptru	equ	0xFF8
  6190                           tblptrh	equ	0xFF7
  6191                           tblptrl	equ	0xFF6
  6192                           tablat	equ	0xFF5
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           intcon	equ	0xFF2
  6196                           intcon2	equ	0xFF1
  6197                           indf0	equ	0xFEF
  6198                           postinc0	equ	0xFEE
  6199                           fsr0h	equ	0xFEA
  6200                           fsr0l	equ	0xFE9
  6201                           wreg	equ	0xFE8
  6202                           postinc1	equ	0xFE6
  6203                           postdec1	equ	0xFE5
  6204                           fsr1h	equ	0xFE2
  6205                           fsr1l	equ	0xFE1
  6206                           indf2	equ	0xFDF
  6207                           postinc2	equ	0xFDE
  6208                           postdec2	equ	0xFDD
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _timer3_init *****************
  6214 ;; Defined at:
  6215 ;;		line 101 in file "../My_library/My_PIC.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  prescaler       1    wreg     unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;		None               void
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6233 ;;Total ram usage:        2 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:   11
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_main_init
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text19
  6244  013E22                     __ptext19:
  6245                           	opt stack 0
  6246  013E22                     _timer3_init:
  6247                           	opt stack 18
  6248                           
  6249                           ;incstack = 0
  6250                           ;timer3_init@prescaler stored from wreg
  6251  013E22  0100               	movlb	0	; () banked
  6252  013E24  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6253                           
  6254                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6255  013E26  0E3F               	movlw	-193
  6256  013E28  1679               	andwf	3961,f,c	;volatile
  6257                           
  6258                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6259  013E2A  9679               	bcf	3961,3,c	;volatile
  6260                           
  6261                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6262  013E2C  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6263  013E30  0100               	movlb	0	; () banked
  6264  013E32  3B60               	swapf	??_timer3_init& (0+255),f,b
  6265  013E34  5079               	movf	3961,w,c	;volatile
  6266  013E36  0100               	movlb	0	; () banked
  6267  013E38  1960               	xorwf	??_timer3_init& (0+255),w,b
  6268  013E3A  0BCF               	andlw	-49
  6269  013E3C  1960               	xorwf	??_timer3_init& (0+255),w,b
  6270  013E3E  6E79               	movwf	3961,c	;volatile
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6274  013E40  9E79               	bcf	3961,7,c	;volatile
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6278  013E42  8079               	bsf	3961,0,c	;volatile
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6282  013E44  92A2               	bcf	4002,1,c	;volatile
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6286  013E46  92A1               	bcf	4001,1,c	;volatile
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6290  013E48  82A0               	bsf	4000,1,c	;volatile
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6294  013E4A  8CF2               	bsf	intcon,6,c	;volatile
  6295                           
  6296                           ; BSR set to: 0
  6297  013E4C  0012               	return		;funcret
  6298  013E4E                     __end_of_timer3_init:
  6299                           	opt stack 0
  6300                           tblptru	equ	0xFF8
  6301                           tblptrh	equ	0xFF7
  6302                           tblptrl	equ	0xFF6
  6303                           tablat	equ	0xFF5
  6304                           prodh	equ	0xFF4
  6305                           prodl	equ	0xFF3
  6306                           intcon	equ	0xFF2
  6307                           intcon2	equ	0xFF1
  6308                           indf0	equ	0xFEF
  6309                           postinc0	equ	0xFEE
  6310                           fsr0h	equ	0xFEA
  6311                           fsr0l	equ	0xFE9
  6312                           wreg	equ	0xFE8
  6313                           postinc1	equ	0xFE6
  6314                           postdec1	equ	0xFE5
  6315                           fsr1h	equ	0xFE2
  6316                           fsr1l	equ	0xFE1
  6317                           indf2	equ	0xFDF
  6318                           postinc2	equ	0xFDE
  6319                           postdec2	equ	0xFDD
  6320                           fsr2h	equ	0xFDA
  6321                           fsr2l	equ	0xFD9
  6322                           status	equ	0xFD8
  6323                           
  6324 ;; *************** function _timer1_init *****************
  6325 ;; Defined at:
  6326 ;;		line 70 in file "../My_library/My_PIC.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  prescaler       1    wreg     unsigned char 
  6329 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;		None               void
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6341 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;Total ram usage:        3 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:   11
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_main_init
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text20
  6356  013ADA                     __ptext20:
  6357                           	opt stack 0
  6358  013ADA                     _timer1_init:
  6359                           	opt stack 18
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;incstack = 0
  6363                           ;timer1_init@prescaler stored from wreg
  6364  013ADA  0100               	movlb	0	; () banked
  6365  013ADC  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6366                           
  6367                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6368  013ADE  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6369  013AE2  0100               	movlb	0	; () banked
  6370  013AE4  3B61               	swapf	??_timer1_init& (0+255),f,b
  6371  013AE6  4761               	rlncf	??_timer1_init& (0+255),f,b
  6372  013AE8  4761               	rlncf	??_timer1_init& (0+255),f,b
  6373  013AEA  50CD               	movf	4045,w,c	;volatile
  6374  013AEC  0100               	movlb	0	; () banked
  6375  013AEE  1961               	xorwf	??_timer1_init& (0+255),w,b
  6376  013AF0  0B3F               	andlw	-193
  6377  013AF2  1961               	xorwf	??_timer1_init& (0+255),w,b
  6378  013AF4  6ECD               	movwf	4045,c	;volatile
  6379                           
  6380                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6381  013AF6  0E02               	movlw	2
  6382  013AF8  0100               	movlb	0	; () banked
  6383  013AFA  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6384  013AFC  A4D8               	btfss	status,2,c
  6385  013AFE  D002               	goto	l710
  6386                           
  6387                           ; BSR set to: 0
  6388  013B00  86CD               	bsf	4045,3,c	;volatile
  6389  013B02  D001               	goto	l9002
  6390  013B04                     l710:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6394  013B04  96CD               	bcf	4045,3,c	;volatile
  6395  013B06                     l9002:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6399  013B06  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6400  013B0A  0100               	movlb	0	; () banked
  6401  013B0C  3B61               	swapf	??_timer1_init& (0+255),f,b
  6402  013B0E  50CD               	movf	4045,w,c	;volatile
  6403  013B10  0100               	movlb	0	; () banked
  6404  013B12  1961               	xorwf	??_timer1_init& (0+255),w,b
  6405  013B14  0BCF               	andlw	-49
  6406  013B16  1961               	xorwf	??_timer1_init& (0+255),w,b
  6407  013B18  6ECD               	movwf	4045,c	;volatile
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6411  013B1A  84CD               	bsf	4045,2,c	;volatile
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6415  013B1C  92CD               	bcf	4045,1,c	;volatile
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6419  013B1E  80CD               	bsf	4045,0,c	;volatile
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6423  013B20  909F               	bcf	3999,0,c	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6427  013B22  909E               	bcf	3998,0,c	;volatile
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6431  013B24  809D               	bsf	3997,0,c	;volatile
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6435  013B26  8CF2               	bsf	intcon,6,c	;volatile
  6436                           
  6437                           ; BSR set to: 0
  6438  013B28  0012               	return		;funcret
  6439  013B2A                     __end_of_timer1_init:
  6440                           	opt stack 0
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           intcon2	equ	0xFF1
  6449                           indf0	equ	0xFEF
  6450                           postinc0	equ	0xFEE
  6451                           fsr0h	equ	0xFEA
  6452                           fsr0l	equ	0xFE9
  6453                           wreg	equ	0xFE8
  6454                           postinc1	equ	0xFE6
  6455                           postdec1	equ	0xFE5
  6456                           fsr1h	equ	0xFE2
  6457                           fsr1l	equ	0xFE1
  6458                           indf2	equ	0xFDF
  6459                           postinc2	equ	0xFDE
  6460                           postdec2	equ	0xFDD
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8
  6464                           
  6465 ;; *************** function _timer0_init *****************
  6466 ;; Defined at:
  6467 ;;		line 34 in file "../My_library/My_PIC.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  prescaler       1    wreg     unsigned char 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;		None               void
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;Total ram usage:        2 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:   11
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_main_init
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text21
  6496  013C7E                     __ptext21:
  6497                           	opt stack 0
  6498  013C7E                     _timer0_init:
  6499                           	opt stack 18
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;incstack = 0
  6503                           ;timer0_init@prescaler stored from wreg
  6504  013C7E  0100               	movlb	0	; () banked
  6505  013C80  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6506                           
  6507                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  6508  013C82  8ED5               	bsf	4053,7,c	;volatile
  6509                           
  6510                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  6511  013C84  8CD5               	bsf	4053,6,c	;volatile
  6512                           
  6513                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  6514  013C86  9AD5               	bcf	4053,5,c	;volatile
  6515                           
  6516                           ;My_PIC.c: 38: if (prescaler == 0) {
  6517  013C88  0100               	movlb	0	; () banked
  6518  013C8A  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6519  013C8C  0100               	movlb	0	; () banked
  6520  013C8E  A4D8               	btfss	status,2,c
  6521  013C90  D002               	goto	l705
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  6525  013C92  86D5               	bsf	4053,3,c	;volatile
  6526                           
  6527                           ;My_PIC.c: 40: } else {
  6528  013C94  D00C               	goto	l8990
  6529  013C96                     l705:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  6533  013C96  96D5               	bcf	4053,3,c	;volatile
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  6537  013C98  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6538  013C9C  0EFF               	movlw	255
  6539  013C9E  0100               	movlb	0	; () banked
  6540  013CA0  2760               	addwf	??_timer0_init& (0+255),f,b
  6541  013CA2  50D5               	movf	4053,w,c	;volatile
  6542  013CA4  0100               	movlb	0	; () banked
  6543  013CA6  1960               	xorwf	??_timer0_init& (0+255),w,b
  6544  013CA8  0BF8               	andlw	-8
  6545  013CAA  1960               	xorwf	??_timer0_init& (0+255),w,b
  6546  013CAC  6ED5               	movwf	4053,c	;volatile
  6547  013CAE                     l8990:
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;My_PIC.c: 43: }
  6551                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  6552  013CAE  8AF2               	bsf	intcon,5,c	;volatile
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  6556  013CB0  94F2               	bcf	intcon,2,c	;volatile
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  6560  013CB2  94F1               	bcf	intcon2,2,c	;volatile
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  6564  013CB4  8CF2               	bsf	intcon,6,c	;volatile
  6565                           
  6566                           ; BSR set to: 0
  6567  013CB6  0012               	return		;funcret
  6568  013CB8                     __end_of_timer0_init:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           intcon	equ	0xFF2
  6577                           intcon2	equ	0xFF1
  6578                           indf0	equ	0xFEF
  6579                           postinc0	equ	0xFEE
  6580                           fsr0h	equ	0xFEA
  6581                           fsr0l	equ	0xFE9
  6582                           wreg	equ	0xFE8
  6583                           postinc1	equ	0xFE6
  6584                           postdec1	equ	0xFE5
  6585                           fsr1h	equ	0xFE2
  6586                           fsr1l	equ	0xFE1
  6587                           indf2	equ	0xFDF
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _ringbuf_init *****************
  6595 ;; Defined at:
  6596 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6599 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  6600 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  6601 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6602 ;;		 -> main_init@uartrx(100), main_init@uarttx(1000), main_init@usbrx(100), main_init@usbtx(1000), 
  6603 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  6604 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;		None               void
  6609 ;; Registers used:
  6610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6616 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;Total ram usage:        6 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:   11
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_terminal_task
  6627 ;;		_main_init
  6628 ;;		_ST7032_init
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text22
  6633  013A86                     __ptext22:
  6634                           	opt stack 0
  6635  013A86                     _ringbuf_init:
  6636                           	opt stack 18
  6637                           
  6638                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;incstack = 0
  6642  013A86  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  6643  013A8A  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6644  013A8E  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6645  013A92  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6646                           
  6647                           ;My_ringbuf.c: 7: rb->size = bufsize;
  6648  013A96  0100               	movlb	0	; () banked
  6649  013A98  EE20 F002          	lfsr	2,2
  6650  013A9C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6651  013A9E  26D9               	addwf	fsr2l,f,c
  6652  013AA0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6653  013AA2  22DA               	addwfc	fsr2h,f,c
  6654  013AA4  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6655  013AA8  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;My_ringbuf.c: 8: rb->head = 0;
  6659  013AAC  0100               	movlb	0	; () banked
  6660  013AAE  EE20 F004          	lfsr	2,4
  6661  013AB2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6662  013AB4  26D9               	addwf	fsr2l,f,c
  6663  013AB6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6664  013AB8  22DA               	addwfc	fsr2h,f,c
  6665  013ABA  0E00               	movlw	0
  6666  013ABC  6EDE               	movwf	postinc2,c
  6667  013ABE  0E00               	movlw	0
  6668  013AC0  6EDD               	movwf	postdec2,c
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;My_ringbuf.c: 9: rb->tail = 0;
  6672  013AC2  0100               	movlb	0	; () banked
  6673  013AC4  EE20 F006          	lfsr	2,6
  6674  013AC8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6675  013ACA  26D9               	addwf	fsr2l,f,c
  6676  013ACC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6677  013ACE  22DA               	addwfc	fsr2h,f,c
  6678  013AD0  0E00               	movlw	0
  6679  013AD2  6EDE               	movwf	postinc2,c
  6680  013AD4  0E00               	movlw	0
  6681  013AD6  6EDD               	movwf	postdec2,c
  6682                           
  6683                           ; BSR set to: 0
  6684  013AD8  0012               	return		;funcret
  6685  013ADA                     __end_of_ringbuf_init:
  6686                           	opt stack 0
  6687                           tblptru	equ	0xFF8
  6688                           tblptrh	equ	0xFF7
  6689                           tblptrl	equ	0xFF6
  6690                           tablat	equ	0xFF5
  6691                           prodh	equ	0xFF4
  6692                           prodl	equ	0xFF3
  6693                           intcon	equ	0xFF2
  6694                           intcon2	equ	0xFF1
  6695                           indf0	equ	0xFEF
  6696                           postinc0	equ	0xFEE
  6697                           fsr0h	equ	0xFEA
  6698                           fsr0l	equ	0xFE9
  6699                           wreg	equ	0xFE8
  6700                           postinc1	equ	0xFE6
  6701                           postdec1	equ	0xFE5
  6702                           fsr1h	equ	0xFE2
  6703                           fsr1l	equ	0xFE1
  6704                           indf2	equ	0xFDF
  6705                           postinc2	equ	0xFDE
  6706                           postdec2	equ	0xFDD
  6707                           fsr2h	equ	0xFDA
  6708                           fsr2l	equ	0xFD9
  6709                           status	equ	0xFD8
  6710                           
  6711 ;; *************** function _USB_init *****************
  6712 ;; Defined at:
  6713 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;		None               void
  6720 ;; Registers used:
  6721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;Total ram usage:        0 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:   13
  6734 ;; This function calls:
  6735 ;;		_USBDeviceAttach
  6736 ;;		_USBDeviceInit
  6737 ;; This function is called by:
  6738 ;;		_main_init
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text23
  6743  01403E                     __ptext23:
  6744                           	opt stack 0
  6745  01403E                     _USB_init:
  6746                           	opt stack 16
  6747                           
  6748                           ;My_usb_cdc.c: 12: USBDeviceInit();
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;incstack = 0
  6752  01403E  ECF7  F089         	call	_USBDeviceInit	;wreg free
  6753                           
  6754                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  6755  014042  EC5C  F09E         	call	_USBDeviceAttach	;wreg free
  6756                           
  6757                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  6758  014046  0E00               	movlw	0
  6759  014048  0101               	movlb	1	; () banked
  6760  01404A  6F84               	movwf	_line_coding& (0+255),b
  6761  01404C  0EC2               	movlw	194
  6762  01404E  6F85               	movwf	(_line_coding+1)& (0+255),b
  6763  014050  0E01               	movlw	1
  6764  014052  6F86               	movwf	(_line_coding+2)& (0+255),b
  6765  014054  0E00               	movlw	0
  6766  014056  6F87               	movwf	(_line_coding+3)& (0+255),b
  6767                           
  6768                           ; BSR set to: 1
  6769  014058  0012               	return		;funcret
  6770  01405A                     __end_of_USB_init:
  6771                           	opt stack 0
  6772                           tblptru	equ	0xFF8
  6773                           tblptrh	equ	0xFF7
  6774                           tblptrl	equ	0xFF6
  6775                           tablat	equ	0xFF5
  6776                           prodh	equ	0xFF4
  6777                           prodl	equ	0xFF3
  6778                           intcon	equ	0xFF2
  6779                           intcon2	equ	0xFF1
  6780                           indf0	equ	0xFEF
  6781                           postinc0	equ	0xFEE
  6782                           fsr0h	equ	0xFEA
  6783                           fsr0l	equ	0xFE9
  6784                           wreg	equ	0xFE8
  6785                           postinc1	equ	0xFE6
  6786                           postdec1	equ	0xFE5
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           indf2	equ	0xFDF
  6790                           postinc2	equ	0xFDE
  6791                           postdec2	equ	0xFDD
  6792                           fsr2h	equ	0xFDA
  6793                           fsr2l	equ	0xFD9
  6794                           status	equ	0xFD8
  6795                           
  6796 ;; *************** function _USBDeviceInit *****************
  6797 ;; Defined at:
  6798 ;;		line 298 in file "../My_library/usb/usb_device.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  i               1    8[BANK0 ] unsigned char 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;		None               void
  6805 ;; Registers used:
  6806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;Total ram usage:        1 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:   12
  6819 ;; This function calls:
  6820 ;;		_memset
  6821 ;; This function is called by:
  6822 ;;		_USB_init
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text24
  6827  0113EE                     __ptext24:
  6828                           	opt stack 0
  6829  0113EE                     _USBDeviceInit:
  6830                           	opt stack 16
  6831                           
  6832                           ;usb_device.c: 300: uint8_t i;
  6833                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;incstack = 0
  6837  0113EE  98A0               	bcf	4000,4,c	;volatile
  6838                           
  6839                           ;usb_device.c: 305: {UEIR = 0;};
  6840  0113F0  0E00               	movlw	0
  6841  0113F2  6E63               	movwf	3939,c	;volatile
  6842                           
  6843                           ;usb_device.c: 308: {UIR = 0;};
  6844  0113F4  0E00               	movlw	0
  6845  0113F6  6E62               	movwf	3938,c	;volatile
  6846                           
  6847                           ;usb_device.c: 311: UEP0 = 0;
  6848  0113F8  0E00               	movlw	0
  6849  0113FA  010F               	movlb	15	; () banked
  6850  0113FC  6F26               	movwf	38,b	;volatile
  6851                           
  6852                           ; BSR set to: 15
  6853                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  6854  0113FE  0E27               	movlw	39
  6855  011400  0100               	movlb	0	; () banked
  6856  011402  6F60               	movwf	memset@p1& (0+255),b
  6857  011404  0E0F               	movlw	15
  6858  011406  0100               	movlb	0	; () banked
  6859  011408  6F61               	movwf	(memset@p1+1)& (0+255),b
  6860  01140A  0E00               	movlw	0
  6861  01140C  0100               	movlb	0	; () banked
  6862  01140E  6F63               	movwf	(memset@c+1)& (0+255),b
  6863  011410  0E00               	movlw	0
  6864  011412  6F62               	movwf	memset@c& (0+255),b
  6865  011414  0E00               	movlw	0
  6866  011416  0100               	movlb	0	; () banked
  6867  011418  6F65               	movwf	(memset@n+1)& (0+255),b
  6868  01141A  0E02               	movlw	2
  6869  01141C  6F64               	movwf	memset@n& (0+255),b
  6870  01141E  ECAF  F09E         	call	_memset	;wreg free
  6871                           
  6872                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6873  011422  0E16               	movlw	22
  6874  011424  010F               	movlb	15	; () banked
  6875  011426  6F39               	movwf	57,b	;volatile
  6876                           
  6877                           ; BSR set to: 15
  6878  011428  0E9F               	movlw	159
  6879  01142A  010F               	movlb	15	; () banked
  6880  01142C  6F37               	movwf	55,b	;volatile
  6881                           
  6882                           ; BSR set to: 15
  6883  01142E  0E7B               	movlw	123
  6884  011430  010F               	movlb	15	; () banked
  6885  011432  6F36               	movwf	54,b	;volatile
  6886                           
  6887                           ; BSR set to: 15
  6888                           ;usb_device.c: 318: ;
  6889                           ;usb_device.c: 321: ;
  6890                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  6891  011434  0E00               	movlw	0
  6892  011436  0100               	movlb	0	; () banked
  6893  011438  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6894  01143A                     l8726:
  6895                           
  6896                           ; BSR set to: 0
  6897  01143A  0E0B               	movlw	11
  6898  01143C  0100               	movlb	0	; () banked
  6899  01143E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6900  011440  D001               	goto	l8730
  6901  011442  D010               	goto	l146
  6902  011444                     l8730:
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;usb_device.c: 325: {
  6906                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  6907  011444  0100               	movlb	0	; () banked
  6908  011446  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6909  011448  0D04               	mullw	4
  6910  01144A  0E00               	movlw	0
  6911  01144C  24F3               	addwf	prodl,w,c
  6912  01144E  6ED9               	movwf	fsr2l,c
  6913  011450  0E0D               	movlw	13
  6914  011452  20F4               	addwfc	prodh,w,c
  6915  011454  6EDA               	movwf	fsr2h,c
  6916  011456  6ADE               	clrf	postinc2,c
  6917  011458  6ADE               	clrf	postinc2,c
  6918  01145A  6ADE               	clrf	postinc2,c
  6919  01145C  6ADD               	clrf	postdec2,c
  6920                           
  6921                           ; BSR set to: 0
  6922  01145E  0100               	movlb	0	; () banked
  6923  011460  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6924  011462  D7EB               	goto	l8726
  6925  011464                     l146:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;usb_device.c: 327: }
  6929                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  6930  011464  8C65               	bsf	3941,6,c	;volatile
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;usb_device.c: 333: UADDR = 0x00;
  6934  011466  0E00               	movlw	0
  6935  011468  010F               	movlb	15	; () banked
  6936  01146A  6F38               	movwf	56,b	;volatile
  6937                           
  6938                           ; BSR set to: 15
  6939                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  6940  01146C  9865               	bcf	3941,4,c	;volatile
  6941                           
  6942                           ; BSR set to: 15
  6943                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  6944  01146E  9C65               	bcf	3941,6,c	;volatile
  6945                           
  6946                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  6947  011470  D00C               	goto	l8750
  6948  011472                     l8742:
  6949                           
  6950                           ;usb_device.c: 343: {
  6951                           ;usb_device.c: 344: (UIR &= 0xF7);
  6952  011472  9662               	bcf	3938,3,c	;volatile
  6953                           
  6954                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  6955  011474  0E00               	movlw	0
  6956  011476  0100               	movlb	0	; () banked
  6957  011478  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  6961  01147A  0E00               	movlw	0
  6962  01147C  0100               	movlb	0	; () banked
  6963  01147E  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  6967  011480  0E00               	movlw	0
  6968  011482  0100               	movlb	0	; () banked
  6969  011484  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
  6970  011486  0E00               	movlw	0
  6971  011488  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
  6972  01148A                     l8750:
  6973  01148A  B662               	btfsc	3938,3,c	;volatile
  6974  01148C  D7F2               	goto	l8742
  6975                           
  6976                           ;usb_device.c: 349: }
  6977                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  6978  01148E  0E01               	movlw	1
  6979  011490  6E43               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6980                           
  6981                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  6982  011492  0E01               	movlw	1
  6983  011494  6E44               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6984                           
  6985                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  6986  011496  0E00               	movlw	0
  6987  011498  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  6988                           
  6989                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  6990  01149A  0E00               	movlw	0
  6991  01149C  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  6992                           
  6993                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  6994  01149E  0E00               	movlw	0
  6995  0114A0  0100               	movlb	0	; () banked
  6996  0114A2  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6997                           
  6998                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  6999  0114A4  0E00               	movlw	0
  7000  0114A6  0100               	movlb	0	; () banked
  7001  0114A8  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7002  0114AA                     l8754:
  7003                           
  7004                           ; BSR set to: 0
  7005  0114AA  0E02               	movlw	2
  7006  0114AC  0100               	movlb	0	; () banked
  7007  0114AE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7008  0114B0  D001               	goto	l8758
  7009  0114B2  D033               	goto	l8764
  7010  0114B4                     l8758:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;usb_device.c: 363: {
  7014                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  7015  0114B4  0100               	movlb	0	; () banked
  7016  0114B6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7017  0114B8  0D02               	mullw	2
  7018  0114BA  0ED8               	movlw	low _pBDTEntryIn
  7019  0114BC  24F3               	addwf	prodl,w,c
  7020  0114BE  6ED9               	movwf	fsr2l,c
  7021  0114C0  0E00               	movlw	high _pBDTEntryIn
  7022  0114C2  20F4               	addwfc	prodh,w,c
  7023  0114C4  6EDA               	movwf	fsr2h,c
  7024  0114C6  0E00               	movlw	0
  7025  0114C8  6EDE               	movwf	postinc2,c
  7026  0114CA  0E00               	movlw	0
  7027  0114CC  6EDD               	movwf	postdec2,c
  7028                           
  7029                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  7030  0114CE  0100               	movlb	0	; () banked
  7031  0114D0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7032  0114D2  0D02               	mullw	2
  7033  0114D4  0EDE               	movlw	low _pBDTEntryOut
  7034  0114D6  24F3               	addwf	prodl,w,c
  7035  0114D8  6ED9               	movwf	fsr2l,c
  7036  0114DA  0E00               	movlw	high _pBDTEntryOut
  7037  0114DC  20F4               	addwfc	prodh,w,c
  7038  0114DE  6EDA               	movwf	fsr2h,c
  7039  0114E0  0E00               	movlw	0
  7040  0114E2  6EDE               	movwf	postinc2,c
  7041  0114E4  0E00               	movlw	0
  7042  0114E6  6EDD               	movwf	postdec2,c
  7043                           
  7044                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  7045  0114E8  0100               	movlb	0	; () banked
  7046  0114EA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7047  0114EC  0D01               	mullw	1
  7048  0114EE  0EE4               	movlw	low _ep_data_in
  7049  0114F0  24F3               	addwf	prodl,w,c
  7050  0114F2  6ED9               	movwf	fsr2l,c
  7051  0114F4  0E00               	movlw	high _ep_data_in
  7052  0114F6  20F4               	addwfc	prodh,w,c
  7053  0114F8  6EDA               	movwf	fsr2h,c
  7054  0114FA  0E00               	movlw	0
  7055  0114FC  6EDF               	movwf	indf2,c
  7056                           
  7057                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  7058  0114FE  0100               	movlb	0	; () banked
  7059  011500  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7060  011502  0D01               	mullw	1
  7061  011504  0EE7               	movlw	low _ep_data_out
  7062  011506  24F3               	addwf	prodl,w,c
  7063  011508  6ED9               	movwf	fsr2l,c
  7064  01150A  0E00               	movlw	high _ep_data_out
  7065  01150C  20F4               	addwfc	prodh,w,c
  7066  01150E  6EDA               	movwf	fsr2h,c
  7067  011510  0E00               	movlw	0
  7068  011512  6EDF               	movwf	indf2,c
  7069                           
  7070                           ; BSR set to: 0
  7071  011514  0100               	movlb	0	; () banked
  7072  011516  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7073  011518  D7C8               	goto	l8754
  7074  01151A                     l8764:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;usb_device.c: 368: }
  7078                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7079  01151A  0E08               	movlw	8
  7080  01151C  0100               	movlb	0	; () banked
  7081  01151E  6FD8               	movwf	_pBDTEntryIn& (0+255),b
  7082  011520  0E0D               	movlw	13
  7083  011522  0100               	movlb	0	; () banked
  7084  011524  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7088  011526  0E16               	movlw	22
  7089  011528  010F               	movlb	15	; () banked
  7090  01152A  6F26               	movwf	38,b	;volatile
  7091                           
  7092                           ; BSR set to: 15
  7093                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7094  01152C  0E0D               	movlw	13
  7095  01152E  010D               	movlb	13	; () banked
  7096  011530  6F03               	movwf	3,b	;volatile
  7097  011532  0E30               	movlw	48
  7098  011534  6F02               	movwf	2,b	;volatile
  7099                           
  7100                           ; BSR set to: 13
  7101                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7102  011536  0E08               	movlw	8
  7103  011538  010D               	movlb	13	; () banked
  7104  01153A  6F01               	movwf	1,b	;volatile
  7105                           
  7106                           ; BSR set to: 13
  7107                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7108  01153C  0E04               	movlw	4
  7109  01153E  010D               	movlb	13	; () banked
  7110  011540  6F00               	movwf	0,b	;volatile
  7111                           
  7112                           ; BSR set to: 13
  7113                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7114  011542  010D               	movlb	13	; () banked
  7115  011544  8F00               	bsf	0,7,b	;volatile
  7116                           
  7117                           ; BSR set to: 13
  7118                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7119  011546  0E00               	movlw	0
  7120  011548  6E56               	movwf	_USBActiveConfiguration,c	;volatile
  7121                           
  7122                           ; BSR set to: 13
  7123                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7124  01154A  0E00               	movlw	0
  7125  01154C  6E42               	movwf	_USBDeviceState,c	;volatile
  7126                           
  7127                           ; BSR set to: 13
  7128  01154E  0012               	return		;funcret
  7129  011550                     __end_of_USBDeviceInit:
  7130                           	opt stack 0
  7131                           tblptru	equ	0xFF8
  7132                           tblptrh	equ	0xFF7
  7133                           tblptrl	equ	0xFF6
  7134                           tablat	equ	0xFF5
  7135                           prodh	equ	0xFF4
  7136                           prodl	equ	0xFF3
  7137                           intcon	equ	0xFF2
  7138                           intcon2	equ	0xFF1
  7139                           indf0	equ	0xFEF
  7140                           postinc0	equ	0xFEE
  7141                           fsr0h	equ	0xFEA
  7142                           fsr0l	equ	0xFE9
  7143                           wreg	equ	0xFE8
  7144                           postinc1	equ	0xFE6
  7145                           postdec1	equ	0xFE5
  7146                           fsr1h	equ	0xFE2
  7147                           fsr1l	equ	0xFE1
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           postdec2	equ	0xFDD
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function _memset *****************
  7156 ;; Defined at:
  7157 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  p1              2    0[BANK0 ] PTR void 
  7160 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7161 ;;  c               2    2[BANK0 ] int 
  7162 ;;  n               2    4[BANK0 ] unsigned int 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7165 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  2    0[BANK0 ] PTR void 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7175 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7178 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7179 ;;Total ram usage:        8 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:   11
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_USBDeviceInit
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text25
  7190  013D5E                     __ptext25:
  7191                           	opt stack 0
  7192  013D5E                     _memset:
  7193                           	opt stack 16
  7194                           
  7195                           ; BSR set to: 13
  7196                           ;incstack = 0
  7197  013D5E  C060  F066         	movff	memset@p1,memset@p
  7198  013D62  C061  F067         	movff	memset@p1+1,memset@p+1
  7199  013D66  D009               	goto	l8618
  7200  013D68                     l8614:
  7201  013D68  C066  FFD9         	movff	memset@p,fsr2l
  7202  013D6C  C067  FFDA         	movff	memset@p+1,fsr2h
  7203  013D70  C062  FFDF         	movff	memset@c,indf2
  7204  013D74  0100               	movlb	0	; () banked
  7205  013D76  4B66               	infsnz	memset@p& (0+255),f,b
  7206  013D78  2B67               	incf	(memset@p+1)& (0+255),f,b
  7207  013D7A                     l8618:
  7208  013D7A  0100               	movlb	0	; () banked
  7209  013D7C  0764               	decf	memset@n& (0+255),f,b
  7210  013D7E  A0D8               	btfss	status,0,c
  7211  013D80  0765               	decf	(memset@n+1)& (0+255),f,b
  7212  013D82  0100               	movlb	0	; () banked
  7213  013D84  2964               	incf	memset@n& (0+255),w,b
  7214  013D86  E1F0               	bnz	l8614
  7215  013D88  0100               	movlb	0	; () banked
  7216  013D8A  2965               	incf	(memset@n+1)& (0+255),w,b
  7217  013D8C  B4D8               	btfsc	status,2,c
  7218  013D8E  0012               	return	
  7219  013D90  D7EB               	goto	l8614
  7220  013D92                     __end_of_memset:
  7221                           	opt stack 0
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           intcon	equ	0xFF2
  7229                           intcon2	equ	0xFF1
  7230                           indf0	equ	0xFEF
  7231                           postinc0	equ	0xFEE
  7232                           fsr0h	equ	0xFEA
  7233                           fsr0l	equ	0xFE9
  7234                           wreg	equ	0xFE8
  7235                           postinc1	equ	0xFE6
  7236                           postdec1	equ	0xFE5
  7237                           fsr1h	equ	0xFE2
  7238                           fsr1l	equ	0xFE1
  7239                           indf2	equ	0xFDF
  7240                           postinc2	equ	0xFDE
  7241                           postdec2	equ	0xFDD
  7242                           fsr2h	equ	0xFDA
  7243                           fsr2l	equ	0xFD9
  7244                           status	equ	0xFD8
  7245                           
  7246 ;; *************** function _USBDeviceAttach *****************
  7247 ;; Defined at:
  7248 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;		None               void
  7255 ;; Registers used:
  7256 ;;		wreg, status,2
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:   11
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_USB_init
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text26
  7277  013CB8                     __ptext26:
  7278                           	opt stack 0
  7279  013CB8                     _USBDeviceAttach:
  7280                           	opt stack 17
  7281                           
  7282                           ;usb_device.c: 1356: {
  7283                           ;usb_device.c: 1357: if(1 == 1)
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;incstack = 0
  7287  013CB8  5042               	movf	_USBDeviceState,w,c	;volatile
  7288  013CBA  A4D8               	btfss	status,2,c
  7289  013CBC  0012               	return	
  7290                           
  7291                           ;usb_device.c: 1358: {
  7292                           ;usb_device.c: 1360: UCON = 0;
  7293  013CBE  0E00               	movlw	0
  7294  013CC0  6E65               	movwf	3941,c	;volatile
  7295                           
  7296                           ;usb_device.c: 1363: UIE = 0;
  7297  013CC2  0E00               	movlw	0
  7298  013CC4  010F               	movlb	15	; () banked
  7299  013CC6  6F36               	movwf	54,b	;volatile
  7300                           
  7301                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7302  013CC8  0E16               	movlw	22
  7303  013CCA  010F               	movlb	15	; () banked
  7304  013CCC  6F39               	movwf	57,b	;volatile
  7305  013CCE  0E9F               	movlw	159
  7306  013CD0  010F               	movlb	15	; () banked
  7307  013CD2  6F37               	movwf	55,b	;volatile
  7308  013CD4  0E7B               	movlw	123
  7309  013CD6  010F               	movlb	15	; () banked
  7310  013CD8  6F36               	movwf	54,b	;volatile
  7311                           
  7312                           ; BSR set to: 15
  7313                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7314  013CDA  8ED0               	bsf	4048,7,c	;volatile
  7315                           
  7316                           ; BSR set to: 15
  7317  013CDC  88A2               	bsf	4002,4,c	;volatile
  7318                           
  7319                           ; BSR set to: 15
  7320  013CDE  88A0               	bsf	4000,4,c	;volatile
  7321                           
  7322                           ; BSR set to: 15
  7323  013CE0  8EF2               	bsf	intcon,7,c	;volatile
  7324                           
  7325                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7326  013CE2  D001               	goto	l207
  7327  013CE4                     l208:
  7328  013CE4  8665               	bsf	3941,3,c	;volatile
  7329  013CE6                     l207:
  7330  013CE6  A665               	btfss	3941,3,c	;volatile
  7331  013CE8  D7FD               	goto	l208
  7332                           
  7333                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  7334  013CEA  0E01               	movlw	1
  7335  013CEC  6E42               	movwf	_USBDeviceState,c	;volatile
  7336  013CEE  0012               	return	
  7337  013CF0                     __end_of_USBDeviceAttach:
  7338                           	opt stack 0
  7339                           tblptru	equ	0xFF8
  7340                           tblptrh	equ	0xFF7
  7341                           tblptrl	equ	0xFF6
  7342                           tablat	equ	0xFF5
  7343                           prodh	equ	0xFF4
  7344                           prodl	equ	0xFF3
  7345                           intcon	equ	0xFF2
  7346                           intcon2	equ	0xFF1
  7347                           indf0	equ	0xFEF
  7348                           postinc0	equ	0xFEE
  7349                           fsr0h	equ	0xFEA
  7350                           fsr0l	equ	0xFE9
  7351                           wreg	equ	0xFE8
  7352                           postinc1	equ	0xFE6
  7353                           postdec1	equ	0xFE5
  7354                           fsr1h	equ	0xFE2
  7355                           fsr1l	equ	0xFE1
  7356                           indf2	equ	0xFDF
  7357                           postinc2	equ	0xFDE
  7358                           postdec2	equ	0xFDD
  7359                           fsr2h	equ	0xFDA
  7360                           fsr2l	equ	0xFD9
  7361                           status	equ	0xFD8
  7362                           
  7363 ;; *************** function _UART_init *****************
  7364 ;; Defined at:
  7365 ;;		line 10 in file "../My_library/My_UART.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;		None               void
  7372 ;; Registers used:
  7373 ;;		wreg, status,2
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7383 ;;Total ram usage:        0 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:   11
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_main_init
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text27
  7394  013F9C                     __ptext27:
  7395                           	opt stack 0
  7396  013F9C                     _UART_init:
  7397                           	opt stack 18
  7398                           
  7399                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  7400                           
  7401                           ;incstack = 0
  7402  013F9C  9CAD               	bcf	4013,6,c	;volatile
  7403                           
  7404                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  7405  013F9E  8AAD               	bsf	4013,5,c	;volatile
  7406                           
  7407                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  7408  013FA0  98AD               	bcf	4013,4,c	;volatile
  7409                           
  7410                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  7411  013FA2  94AD               	bcf	4013,2,c	;volatile
  7412                           
  7413                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  7414  013FA4  8EAC               	bsf	4012,7,c	;volatile
  7415                           
  7416                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  7417  013FA6  9CAC               	bcf	4012,6,c	;volatile
  7418                           
  7419                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  7420  013FA8  88AC               	bsf	4012,4,c	;volatile
  7421                           
  7422                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  7423  013FAA  867E               	bsf	3966,3,c	;volatile
  7424                           
  7425                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  7426  013FAC  0E19               	movlw	25
  7427  013FAE  6EB0               	movwf	4016,c	;volatile
  7428                           
  7429                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  7430  013FB0  0E00               	movlw	0
  7431  013FB2  6E7F               	movwf	3967,c	;volatile
  7432                           
  7433                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  7434  013FB4  9A9F               	bcf	3999,5,c	;volatile
  7435                           
  7436                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  7437  013FB6  989F               	bcf	3999,4,c	;volatile
  7438                           
  7439                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  7440  013FB8  8A9D               	bsf	3997,5,c	;volatile
  7441                           
  7442                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  7443  013FBA  8CF2               	bsf	intcon,6,c	;volatile
  7444  013FBC  0012               	return		;funcret
  7445  013FBE                     __end_of_UART_init:
  7446                           	opt stack 0
  7447                           tblptru	equ	0xFF8
  7448                           tblptrh	equ	0xFF7
  7449                           tblptrl	equ	0xFF6
  7450                           tablat	equ	0xFF5
  7451                           prodh	equ	0xFF4
  7452                           prodl	equ	0xFF3
  7453                           intcon	equ	0xFF2
  7454                           intcon2	equ	0xFF1
  7455                           indf0	equ	0xFEF
  7456                           postinc0	equ	0xFEE
  7457                           fsr0h	equ	0xFEA
  7458                           fsr0l	equ	0xFE9
  7459                           wreg	equ	0xFE8
  7460                           postinc1	equ	0xFE6
  7461                           postdec1	equ	0xFE5
  7462                           fsr1h	equ	0xFE2
  7463                           fsr1l	equ	0xFE1
  7464                           indf2	equ	0xFDF
  7465                           postinc2	equ	0xFDE
  7466                           postdec2	equ	0xFDD
  7467                           fsr2h	equ	0xFDA
  7468                           fsr2l	equ	0xFD9
  7469                           status	equ	0xFD8
  7470                           
  7471 ;; *************** function _RTCC_init *****************
  7472 ;; Defined at:
  7473 ;;		line 22 in file "../My_library/My_RTCC.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;		None
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;		None               void
  7480 ;; Registers used:
  7481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7491 ;;Total ram usage:        0 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:   15
  7494 ;; This function calls:
  7495 ;;		_RTCC_from_RTCC
  7496 ;;		_RTCC_from_epoch
  7497 ;; This function is called by:
  7498 ;;		_main_init
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text28
  7503  0137D2                     __ptext28:
  7504                           	opt stack 0
  7505  0137D2                     _RTCC_init:
  7506                           	opt stack 14
  7507                           
  7508                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7509                           
  7510                           ;incstack = 0
  7511  0137D2  010F               	movlb	15	; () banked
  7512  0137D4  8B3F               	bsf	63,5,b	;volatile
  7513                           
  7514                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7515  0137D6  010F               	movlb	15	; () banked
  7516  0137D8  BB3F               	btfsc	63,5,b	;volatile
  7517  0137DA  D006               	goto	l9096
  7518                           
  7519                           ; BSR set to: 15
  7520                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7521  0137DC  0E55               	movlw	85
  7522  0137DE  6EA7               	movwf	4007,c	;volatile
  7523                           
  7524                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7525  0137E0  0EAA               	movlw	170
  7526  0137E2  6EA7               	movwf	4007,c	;volatile
  7527                           
  7528                           ; BSR set to: 15
  7529                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7530  0137E4  010F               	movlb	15	; () banked
  7531  0137E6  8B3F               	bsf	63,5,b	;volatile
  7532  0137E8                     l9096:
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;My_RTCC.c: 28: }
  7536                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7537  0137E8  010F               	movlb	15	; () banked
  7538  0137EA  8F3F               	bsf	63,7,b	;volatile
  7539                           
  7540                           ; BSR set to: 15
  7541                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7542  0137EC  010F               	movlb	15	; () banked
  7543  0137EE  953F               	bcf	63,2,b	;volatile
  7544                           
  7545                           ; BSR set to: 15
  7546                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7547  0137F0  010F               	movlb	15	; () banked
  7548  0137F2  833C               	bsf	60,1,b	;volatile
  7549                           
  7550                           ; BSR set to: 15
  7551                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7552  0137F4  010F               	movlb	15	; () banked
  7553  0137F6  853C               	bsf	60,2,b	;volatile
  7554                           
  7555                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7556  0137F8  0E00               	movlw	0
  7557  0137FA  010F               	movlb	15	; () banked
  7558  0137FC  6F3E               	movwf	62,b	;volatile
  7559                           
  7560                           ; BSR set to: 15
  7561                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7562  0137FE  86CD               	bsf	4045,3,c	;volatile
  7563                           
  7564                           ; BSR set to: 15
  7565                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  7566  013800  0E46               	movlw	low _now
  7567  013802  0100               	movlb	0	; () banked
  7568  013804  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7569  013806  0E01               	movlw	high _now
  7570  013808  0100               	movlb	0	; () banked
  7571  01380A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7572  01380C  EC63  F0A0         	call	_RTCC_from_RTCC	;wreg free
  7573                           
  7574                           ;My_RTCC.c: 37: if (now.DD == 0) {
  7575  013810  0101               	movlb	1	; () banked
  7576  013812  514E               	movf	(_now+8)& (0+255),w,b
  7577  013814  A4D8               	btfss	status,2,c
  7578  013816  0012               	return	
  7579                           
  7580                           ; BSR set to: 1
  7581                           ;My_RTCC.c: 38: now.epoch = 0;
  7582  013818  0E00               	movlw	0
  7583  01381A  0101               	movlb	1	; () banked
  7584  01381C  6F46               	movwf	_now& (0+255),b
  7585  01381E  0E00               	movlw	0
  7586  013820  6F47               	movwf	(_now+1)& (0+255),b
  7587  013822  0E00               	movlw	0
  7588  013824  6F48               	movwf	(_now+2)& (0+255),b
  7589  013826  0E00               	movlw	0
  7590  013828  6F49               	movwf	(_now+3)& (0+255),b
  7591                           
  7592                           ; BSR set to: 1
  7593                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  7594  01382A  0E46               	movlw	low _now
  7595  01382C  0100               	movlb	0	; () banked
  7596  01382E  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7597  013830  0E01               	movlw	high _now
  7598  013832  0100               	movlb	0	; () banked
  7599  013834  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7600  013836  EC49  F0A0         	call	_RTCC_from_epoch	;wreg free
  7601  01383A  0012               	return	
  7602  01383C                     __end_of_RTCC_init:
  7603                           	opt stack 0
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           intcon	equ	0xFF2
  7611                           intcon2	equ	0xFF1
  7612                           indf0	equ	0xFEF
  7613                           postinc0	equ	0xFEE
  7614                           fsr0h	equ	0xFEA
  7615                           fsr0l	equ	0xFE9
  7616                           wreg	equ	0xFE8
  7617                           postinc1	equ	0xFE6
  7618                           postdec1	equ	0xFE5
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           
  7628 ;; *************** function _RTCC_from_epoch *****************
  7629 ;; Defined at:
  7630 ;;		line 210 in file "../My_library/My_RTCC.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  tm              2   47[BANK0 ] PTR struct .
  7633 ;;		 -> now(14), 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;		None               void
  7638 ;; Registers used:
  7639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:        2 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:   14
  7652 ;; This function calls:
  7653 ;;		_caltime_to_RTCC
  7654 ;;		_epoch_to_caltime
  7655 ;; This function is called by:
  7656 ;;		_RTCC_init
  7657 ;;		_RTCC_adjust_time_inc
  7658 ;;		_RTCC_adjust_time_dec
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text29
  7663  014092                     __ptext29:
  7664                           	opt stack 0
  7665  014092                     _RTCC_from_epoch:
  7666                           	opt stack 14
  7667                           
  7668                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  7669                           
  7670                           ;incstack = 0
  7671  014092  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7672  014096  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7673  01409A  EC41  F088         	call	_epoch_to_caltime	;wreg free
  7674                           
  7675                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  7676  01409E  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7677  0140A2  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7678  0140A6  EC9F  F091         	call	_caltime_to_RTCC	;wreg free
  7679  0140AA  0012               	return		;funcret
  7680  0140AC                     __end_of_RTCC_from_epoch:
  7681                           	opt stack 0
  7682                           tblptru	equ	0xFF8
  7683                           tblptrh	equ	0xFF7
  7684                           tblptrl	equ	0xFF6
  7685                           tablat	equ	0xFF5
  7686                           prodh	equ	0xFF4
  7687                           prodl	equ	0xFF3
  7688                           intcon	equ	0xFF2
  7689                           intcon2	equ	0xFF1
  7690                           indf0	equ	0xFEF
  7691                           postinc0	equ	0xFEE
  7692                           fsr0h	equ	0xFEA
  7693                           fsr0l	equ	0xFE9
  7694                           wreg	equ	0xFE8
  7695                           postinc1	equ	0xFE6
  7696                           postdec1	equ	0xFE5
  7697                           fsr1h	equ	0xFE2
  7698                           fsr1l	equ	0xFE1
  7699                           indf2	equ	0xFDF
  7700                           postinc2	equ	0xFDE
  7701                           postdec2	equ	0xFDD
  7702                           fsr2h	equ	0xFDA
  7703                           fsr2l	equ	0xFD9
  7704                           status	equ	0xFD8
  7705                           
  7706 ;; *************** function _epoch_to_caltime *****************
  7707 ;; Defined at:
  7708 ;;		line 125 in file "../My_library/My_RTCC.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  tm              2   33[BANK0 ] PTR struct .
  7711 ;;		 -> now(14), 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  num             4   43[BANK0 ] unsigned long 
  7714 ;;  day             2   39[BANK0 ] unsigned int 
  7715 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7716 ;;  month           1   42[BANK0 ] unsigned char 
  7717 ;;  year            1   41[BANK0 ] unsigned char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;		None               void
  7720 ;; Registers used:
  7721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;Total ram usage:       14 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:   13
  7734 ;; This function calls:
  7735 ;;		_get_quot_rem
  7736 ;;		_month_length
  7737 ;; This function is called by:
  7738 ;;		_RTCC_from_caltime
  7739 ;;		_RTCC_from_epoch
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text30
  7744  011082                     __ptext30:
  7745                           	opt stack 0
  7746  011082                     _epoch_to_caltime:
  7747                           	opt stack 12
  7748                           
  7749                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  7750                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  7751                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  7752                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  7753                           ;My_RTCC.c: 132: uint16_t day;
  7754                           ;My_RTCC.c: 133: uint8_t year = 0;
  7755                           
  7756                           ;incstack = 0
  7757  011082  0E00               	movlw	0
  7758  011084  0100               	movlb	0	; () banked
  7759  011086  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7760                           
  7761                           ;My_RTCC.c: 134: uint8_t month = 1;
  7762  011088  0E01               	movlw	1
  7763  01108A  0100               	movlb	0	; () banked
  7764  01108C  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;My_RTCC.c: 135: epoch_t num;
  7768                           ;My_RTCC.c: 137: num = tm->epoch;
  7769  01108E  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7770  011092  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7771  011096  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  7772  01109A  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  7773  01109E  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  7774  0110A2  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  7778  0110A6  0E8B               	movlw	low epoch_to_caltime@num
  7779  0110A8  0100               	movlb	0	; () banked
  7780  0110AA  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7781  0110AC  0E00               	movlw	high epoch_to_caltime@num
  7782  0110AE  0100               	movlb	0	; () banked
  7783  0110B0  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7784  0110B2  0E3C               	movlw	60
  7785  0110B4  0100               	movlb	0	; () banked
  7786  0110B6  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7787  0110B8  EC75  F092         	call	_get_quot_rem	;wreg free
  7788  0110BC  0100               	movlb	0	; () banked
  7789  0110BE  EE20 F004          	lfsr	2,4
  7790  0110C2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7791  0110C4  26D9               	addwf	fsr2l,f,c
  7792  0110C6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7793  0110C8  22DA               	addwfc	fsr2h,f,c
  7794  0110CA  0100               	movlb	0	; () banked
  7795  0110CC  C079  FFDF         	movff	?_get_quot_rem,indf2
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  7799  0110D0  0E8B               	movlw	low epoch_to_caltime@num
  7800  0110D2  0100               	movlb	0	; () banked
  7801  0110D4  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7802  0110D6  0E00               	movlw	high epoch_to_caltime@num
  7803  0110D8  0100               	movlb	0	; () banked
  7804  0110DA  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7805  0110DC  0E3C               	movlw	60
  7806  0110DE  0100               	movlb	0	; () banked
  7807  0110E0  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7808  0110E2  EC75  F092         	call	_get_quot_rem	;wreg free
  7809  0110E6  0100               	movlb	0	; () banked
  7810  0110E8  EE20 F005          	lfsr	2,5
  7811  0110EC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7812  0110EE  26D9               	addwf	fsr2l,f,c
  7813  0110F0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7814  0110F2  22DA               	addwfc	fsr2h,f,c
  7815  0110F4  0100               	movlb	0	; () banked
  7816  0110F6  C079  FFDF         	movff	?_get_quot_rem,indf2
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  7820  0110FA  0E8B               	movlw	low epoch_to_caltime@num
  7821  0110FC  0100               	movlb	0	; () banked
  7822  0110FE  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7823  011100  0E00               	movlw	high epoch_to_caltime@num
  7824  011102  0100               	movlb	0	; () banked
  7825  011104  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7826  011106  0E18               	movlw	24
  7827  011108  0100               	movlb	0	; () banked
  7828  01110A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7829  01110C  EC75  F092         	call	_get_quot_rem	;wreg free
  7830  011110  0100               	movlb	0	; () banked
  7831  011112  EE20 F006          	lfsr	2,6
  7832  011116  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7833  011118  26D9               	addwf	fsr2l,f,c
  7834  01111A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7835  01111C  22DA               	addwfc	fsr2h,f,c
  7836  01111E  0100               	movlb	0	; () banked
  7837  011120  C079  FFDF         	movff	?_get_quot_rem,indf2
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;My_RTCC.c: 141: day = num;
  7841  011124  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7842  011128  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;My_RTCC.c: 142: day_since_epoch = day;
  7846  01112C  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7847  011130  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;My_RTCC.c: 144: num += 6;
  7851  011134  0E06               	movlw	6
  7852  011136  0100               	movlb	0	; () banked
  7853  011138  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  7854  01113A  0E00               	movlw	0
  7855  01113C  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7856  01113E  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7857  011140  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  7861  011142  0E8B               	movlw	low epoch_to_caltime@num
  7862  011144  0100               	movlb	0	; () banked
  7863  011146  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7864  011148  0E00               	movlw	high epoch_to_caltime@num
  7865  01114A  0100               	movlb	0	; () banked
  7866  01114C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7867  01114E  0E07               	movlw	7
  7868  011150  0100               	movlb	0	; () banked
  7869  011152  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7870  011154  EC75  F092         	call	_get_quot_rem	;wreg free
  7871  011158  0100               	movlb	0	; () banked
  7872  01115A  EE20 F007          	lfsr	2,7
  7873  01115E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7874  011160  26D9               	addwf	fsr2l,f,c
  7875  011162  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7876  011164  22DA               	addwfc	fsr2h,f,c
  7877  011166  0100               	movlb	0	; () banked
  7878  011168  C079  FFDF         	movff	?_get_quot_rem,indf2
  7879                           
  7880                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  7881  01116C  D03F               	goto	l8416
  7882  01116E                     l874:
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;My_RTCC.c: 155: LATB2 = 1;
  7886  01116E  848A               	bsf	3978,2,c	;volatile
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  7890  011170  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  7891  011174  0100               	movlb	0	; () banked
  7892  011176  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7893  011178  EC58  F090         	call	_month_length
  7894  01117C  0100               	movlb	0	; () banked
  7895  01117E  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7896  011180  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7897  011182  0100               	movlb	0	; () banked
  7898  011184  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7899  011186  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7900  011188  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7901  01118A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7902  01118C  0100               	movlb	0	; () banked
  7903  01118E  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  7904  011190  0100               	movlb	0	; () banked
  7905  011192  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7906  011194  0100               	movlb	0	; () banked
  7907  011196  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  7908  011198  0100               	movlb	0	; () banked
  7909  01119A  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7910  01119C  0100               	movlb	0	; () banked
  7911  01119E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7912  0111A0  0100               	movlb	0	; () banked
  7913  0111A2  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;My_RTCC.c: 157: if (month == 12) {
  7917  0111A4  0E0C               	movlw	12
  7918  0111A6  0100               	movlb	0	; () banked
  7919  0111A8  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7920  0111AA  A4D8               	btfss	status,2,c
  7921  0111AC  D019               	goto	l8410
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;My_RTCC.c: 158: month = 1;
  7925  0111AE  0E01               	movlw	1
  7926  0111B0  0100               	movlb	0	; () banked
  7927  0111B2  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;My_RTCC.c: 159: year++;
  7931  0111B4  0100               	movlb	0	; () banked
  7932  0111B6  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;My_RTCC.c: 161: if (year >= 100) {
  7936  0111B8  0E63               	movlw	99
  7937  0111BA  0100               	movlb	0	; () banked
  7938  0111BC  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7939  0111BE  D012               	goto	l8412
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  7943  0111C0  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7944  0111C4  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7945  0111C8  0E80               	movlw	128
  7946  0111CA  5EDE               	subwf	postinc2,f,c
  7947  0111CC  0E13               	movlw	19
  7948  0111CE  5ADE               	subwfb	postinc2,f,c
  7949  0111D0  0E19               	movlw	25
  7950  0111D2  5ADE               	subwfb	postinc2,f,c
  7951  0111D4  0EBC               	movlw	188
  7952  0111D6  5ADE               	subwfb	postinc2,f,c
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;My_RTCC.c: 163: year = 0;
  7956  0111D8  0E00               	movlw	0
  7957  0111DA  0100               	movlb	0	; () banked
  7958  0111DC  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;My_RTCC.c: 164: }
  7962                           ;My_RTCC.c: 165: } else {
  7963  0111DE  D002               	goto	l8412
  7964  0111E0                     l8410:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;My_RTCC.c: 166: month++;
  7968  0111E0  0100               	movlb	0	; () banked
  7969  0111E2  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  7970  0111E4                     l8412:
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;My_RTCC.c: 167: }
  7974                           ;My_RTCC.c: 168: month_cache = month;
  7975  0111E4  C08A  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;My_RTCC.c: 169: year_cache = year;
  7979  0111E8  C089  F0FA         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7980  0111EC                     l8416:
  7981                           
  7982                           ; BSR set to: 0
  7983  0111EC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  7984  0111F0  0100               	movlb	0	; () banked
  7985  0111F2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7986  0111F4  EC58  F090         	call	_month_length
  7987  0111F8  0100               	movlb	0	; () banked
  7988  0111FA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7989  0111FC  0100               	movlb	0	; () banked
  7990  0111FE  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  7991  011200  0100               	movlb	0	; () banked
  7992  011202  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  7993  011204  0E00               	movlw	0
  7994  011206  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7995  011208  B0D8               	btfsc	status,0,c
  7996  01120A  D7B1               	goto	l874
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;My_RTCC.c: 170: }
  8000                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  8001                           
  8002                           ; BSR set to: 0
  8003  01120C  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8004  011210  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8005  011214  0100               	movlb	0	; () banked
  8006  011216  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8007  011218  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8008  01121A  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8009  01121C  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8010  01121E  0100               	movlb	0	; () banked
  8011  011220  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8012  011222  0100               	movlb	0	; () banked
  8013  011224  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8014  011226  0101               	movlb	1	; () banked
  8015  011228  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8016  01122A  0100               	movlb	0	; () banked
  8017  01122C  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8018  01122E  0100               	movlb	0	; () banked
  8019  011230  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8020  011232  0101               	movlb	1	; () banked
  8021  011234  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8022                           
  8023                           ; BSR set to: 1
  8024                           ;My_RTCC.c: 172: day++;
  8025  011236  0100               	movlb	0	; () banked
  8026  011238  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8027  01123A  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;My_RTCC.c: 174: tm->YY = year;
  8031  01123C  0100               	movlb	0	; () banked
  8032  01123E  EE20 F00A          	lfsr	2,10
  8033  011242  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8034  011244  26D9               	addwf	fsr2l,f,c
  8035  011246  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8036  011248  22DA               	addwfc	fsr2h,f,c
  8037  01124A  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;My_RTCC.c: 175: tm->MM = month;
  8041  01124E  0100               	movlb	0	; () banked
  8042  011250  EE20 F009          	lfsr	2,9
  8043  011254  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8044  011256  26D9               	addwf	fsr2l,f,c
  8045  011258  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8046  01125A  22DA               	addwfc	fsr2h,f,c
  8047  01125C  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;My_RTCC.c: 176: tm->DD = day;
  8051  011260  0100               	movlb	0	; () banked
  8052  011262  EE20 F008          	lfsr	2,8
  8053  011266  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8054  011268  26D9               	addwf	fsr2l,f,c
  8055  01126A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8056  01126C  22DA               	addwfc	fsr2h,f,c
  8057  01126E  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8058                           
  8059                           ; BSR set to: 0
  8060  011272  0012               	return		;funcret
  8061  011274                     __end_of_epoch_to_caltime:
  8062                           	opt stack 0
  8063                           tblptru	equ	0xFF8
  8064                           tblptrh	equ	0xFF7
  8065                           tblptrl	equ	0xFF6
  8066                           tablat	equ	0xFF5
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           intcon	equ	0xFF2
  8070                           intcon2	equ	0xFF1
  8071                           indf0	equ	0xFEF
  8072                           postinc0	equ	0xFEE
  8073                           fsr0h	equ	0xFEA
  8074                           fsr0l	equ	0xFE9
  8075                           wreg	equ	0xFE8
  8076                           postinc1	equ	0xFE6
  8077                           postdec1	equ	0xFE5
  8078                           fsr1h	equ	0xFE2
  8079                           fsr1l	equ	0xFE1
  8080                           indf2	equ	0xFDF
  8081                           postinc2	equ	0xFDE
  8082                           postdec2	equ	0xFDD
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function _get_quot_rem *****************
  8088 ;; Defined at:
  8089 ;;		line 80 in file "../My_library/My_RTCC.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8092 ;;		 -> epoch_to_caltime@num(4), 
  8093 ;;  div             1   27[BANK0 ] unsigned char 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  num             4   29[BANK0 ] unsigned long 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  4   25[BANK0 ] unsigned long 
  8098 ;; Registers used:
  8099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;Total ram usage:        8 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:   12
  8112 ;; This function calls:
  8113 ;;		___lldiv
  8114 ;;		___lmul
  8115 ;; This function is called by:
  8116 ;;		_epoch_to_caltime
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text31
  8121  0124EA                     __ptext31:
  8122                           	opt stack 0
  8123  0124EA                     _get_quot_rem:
  8124                           	opt stack 12
  8125                           
  8126                           ;My_RTCC.c: 83: epoch_t num = *quot;
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;incstack = 0
  8130  0124EA  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8131  0124EE  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8132  0124F2  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8133  0124F6  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8134  0124FA  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8135  0124FE  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8136                           
  8137                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  8138  012502  0100               	movlb	0	; () banked
  8139  012504  517B               	movf	get_quot_rem@div& (0+255),w,b
  8140  012506  0100               	movlb	0	; () banked
  8141  012508  6F64               	movwf	___lldiv@divisor& (0+255),b
  8142  01250A  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8143  01250C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8144  01250E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8145  012510  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8146  012514  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8147  012518  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8148  01251C  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8149  012520  ECA2  F095         	call	___lldiv	;wreg free
  8150  012524  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8151  012528  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8152  01252C  0100               	movlb	0	; () banked
  8153  01252E  C060  FFDE         	movff	?___lldiv,postinc2
  8154  012532  0100               	movlb	0	; () banked
  8155  012534  C061  FFDE         	movff	?___lldiv+1,postinc2
  8156  012538  0100               	movlb	0	; () banked
  8157  01253A  C062  FFDE         	movff	?___lldiv+2,postinc2
  8158  01253E  0100               	movlb	0	; () banked
  8159  012540  C063  FFDD         	movff	?___lldiv+3,postdec2
  8160  012544  52DD               	movf	postdec2,f,c
  8161  012546  52DD               	movf	postdec2,f,c
  8162  012548  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8163  01254C  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8164  012550  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8165  012554  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8166  012558  0100               	movlb	0	; () banked
  8167  01255A  517B               	movf	get_quot_rem@div& (0+255),w,b
  8168  01255C  0100               	movlb	0	; () banked
  8169  01255E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8170  012560  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8171  012562  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8172  012564  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8173  012566  EC3F  F09B         	call	___lmul	;wreg free
  8174  01256A  0100               	movlb	0	; () banked
  8175  01256C  1F6D               	comf	?___lmul& (0+255),f,b
  8176  01256E  0100               	movlb	0	; () banked
  8177  012570  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8178  012572  0100               	movlb	0	; () banked
  8179  012574  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8180  012576  0100               	movlb	0	; () banked
  8181  012578  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8182  01257A  0100               	movlb	0	; () banked
  8183  01257C  2B6D               	incf	?___lmul& (0+255),f,b
  8184  01257E  0E00               	movlw	0
  8185  012580  0100               	movlb	0	; () banked
  8186  012582  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8187  012584  0100               	movlb	0	; () banked
  8188  012586  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8189  012588  0100               	movlb	0	; () banked
  8190  01258A  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8191  01258C  0100               	movlb	0	; () banked
  8192  01258E  517D               	movf	get_quot_rem@num& (0+255),w,b
  8193  012590  0100               	movlb	0	; () banked
  8194  012592  256D               	addwf	?___lmul& (0+255),w,b
  8195  012594  0100               	movlb	0	; () banked
  8196  012596  6F79               	movwf	?_get_quot_rem& (0+255),b
  8197  012598  0100               	movlb	0	; () banked
  8198  01259A  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8199  01259C  0100               	movlb	0	; () banked
  8200  01259E  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8201  0125A0  0100               	movlb	0	; () banked
  8202  0125A2  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8203  0125A4  0100               	movlb	0	; () banked
  8204  0125A6  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8205  0125A8  0100               	movlb	0	; () banked
  8206  0125AA  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8207  0125AC  0100               	movlb	0	; () banked
  8208  0125AE  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8209  0125B0  0100               	movlb	0	; () banked
  8210  0125B2  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8211  0125B4  0100               	movlb	0	; () banked
  8212  0125B6  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8213  0125B8  0100               	movlb	0	; () banked
  8214  0125BA  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8215  0125BC  0012               	return	
  8216  0125BE                     __end_of_get_quot_rem:
  8217                           	opt stack 0
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           intcon2	equ	0xFF1
  8226                           indf0	equ	0xFEF
  8227                           postinc0	equ	0xFEE
  8228                           fsr0h	equ	0xFEA
  8229                           fsr0l	equ	0xFE9
  8230                           wreg	equ	0xFE8
  8231                           postinc1	equ	0xFE6
  8232                           postdec1	equ	0xFE5
  8233                           fsr1h	equ	0xFE2
  8234                           fsr1l	equ	0xFE1
  8235                           indf2	equ	0xFDF
  8236                           postinc2	equ	0xFDE
  8237                           postdec2	equ	0xFDD
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function ___lldiv *****************
  8243 ;; Defined at:
  8244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  dividend        4    0[BANK0 ] unsigned long 
  8247 ;;  divisor         4    4[BANK0 ] unsigned long 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  quotient        4    8[BANK0 ] unsigned long 
  8250 ;;  counter         1   12[BANK0 ] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  4    0[BANK0 ] unsigned long 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8261 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8263 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8264 ;;Total ram usage:       13 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:   11
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_get_quot_rem
  8271 ;;		_CTMU_read
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text32
  8276  012B44                     __ptext32:
  8277                           	opt stack 0
  8278  012B44                     ___lldiv:
  8279                           	opt stack 12
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;incstack = 0
  8283  012B44  0E00               	movlw	0
  8284  012B46  0100               	movlb	0	; () banked
  8285  012B48  6F68               	movwf	___lldiv@quotient& (0+255),b
  8286  012B4A  0E00               	movlw	0
  8287  012B4C  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8288  012B4E  0E00               	movlw	0
  8289  012B50  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8290  012B52  0E00               	movlw	0
  8291  012B54  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8292                           
  8293                           ; BSR set to: 0
  8294  012B56  0100               	movlb	0	; () banked
  8295  012B58  5164               	movf	___lldiv@divisor& (0+255),w,b
  8296  012B5A  0100               	movlb	0	; () banked
  8297  012B5C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8298  012B5E  0100               	movlb	0	; () banked
  8299  012B60  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8300  012B62  0100               	movlb	0	; () banked
  8301  012B64  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8302  012B66  B4D8               	btfsc	status,2,c
  8303  012B68  D042               	goto	l1913
  8304                           
  8305                           ; BSR set to: 0
  8306  012B6A  0E01               	movlw	1
  8307  012B6C  0100               	movlb	0	; () banked
  8308  012B6E  6F6C               	movwf	___lldiv@counter& (0+255),b
  8309  012B70  D008               	goto	l8204
  8310  012B72                     l8202:
  8311                           
  8312                           ; BSR set to: 0
  8313  012B72  0100               	movlb	0	; () banked
  8314  012B74  90D8               	bcf	status,0,c
  8315  012B76  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8316  012B78  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8317  012B7A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8318  012B7C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8319  012B7E  0100               	movlb	0	; () banked
  8320  012B80  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8321  012B82                     l8204:
  8322                           
  8323                           ; BSR set to: 0
  8324  012B82  0100               	movlb	0	; () banked
  8325  012B84  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8326  012B86  D7F5               	goto	l8202
  8327  012B88                     l8206:
  8328                           
  8329                           ; BSR set to: 0
  8330  012B88  0100               	movlb	0	; () banked
  8331  012B8A  90D8               	bcf	status,0,c
  8332  012B8C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8333  012B8E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8334  012B90  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8335  012B92  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8336                           
  8337                           ; BSR set to: 0
  8338  012B94  0100               	movlb	0	; () banked
  8339  012B96  5164               	movf	___lldiv@divisor& (0+255),w,b
  8340  012B98  0100               	movlb	0	; () banked
  8341  012B9A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8342  012B9C  0100               	movlb	0	; () banked
  8343  012B9E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8344  012BA0  0100               	movlb	0	; () banked
  8345  012BA2  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8346  012BA4  0100               	movlb	0	; () banked
  8347  012BA6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8348  012BA8  0100               	movlb	0	; () banked
  8349  012BAA  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8350  012BAC  0100               	movlb	0	; () banked
  8351  012BAE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8352  012BB0  0100               	movlb	0	; () banked
  8353  012BB2  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8354  012BB4  A0D8               	btfss	status,0,c
  8355  012BB6  D012               	goto	l8214
  8356                           
  8357                           ; BSR set to: 0
  8358  012BB8  0100               	movlb	0	; () banked
  8359  012BBA  5164               	movf	___lldiv@divisor& (0+255),w,b
  8360  012BBC  0100               	movlb	0	; () banked
  8361  012BBE  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8362  012BC0  0100               	movlb	0	; () banked
  8363  012BC2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8364  012BC4  0100               	movlb	0	; () banked
  8365  012BC6  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8366  012BC8  0100               	movlb	0	; () banked
  8367  012BCA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8368  012BCC  0100               	movlb	0	; () banked
  8369  012BCE  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8370  012BD0  0100               	movlb	0	; () banked
  8371  012BD2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8372  012BD4  0100               	movlb	0	; () banked
  8373  012BD6  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8374                           
  8375                           ; BSR set to: 0
  8376  012BD8  0100               	movlb	0	; () banked
  8377  012BDA  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8378  012BDC                     l8214:
  8379                           
  8380                           ; BSR set to: 0
  8381  012BDC  0100               	movlb	0	; () banked
  8382  012BDE  90D8               	bcf	status,0,c
  8383  012BE0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8384  012BE2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8385  012BE4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8386  012BE6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8387                           
  8388                           ; BSR set to: 0
  8389  012BE8  0100               	movlb	0	; () banked
  8390  012BEA  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8391  012BEC  D7CD               	goto	l8206
  8392  012BEE                     l1913:
  8393                           
  8394                           ; BSR set to: 0
  8395  012BEE  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8396  012BF2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8397  012BF6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8398  012BFA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8399                           
  8400                           ; BSR set to: 0
  8401  012BFE  0012               	return		;funcret
  8402  012C00                     __end_of___lldiv:
  8403                           	opt stack 0
  8404                           tblptru	equ	0xFF8
  8405                           tblptrh	equ	0xFF7
  8406                           tblptrl	equ	0xFF6
  8407                           tablat	equ	0xFF5
  8408                           prodh	equ	0xFF4
  8409                           prodl	equ	0xFF3
  8410                           intcon	equ	0xFF2
  8411                           intcon2	equ	0xFF1
  8412                           indf0	equ	0xFEF
  8413                           postinc0	equ	0xFEE
  8414                           fsr0h	equ	0xFEA
  8415                           fsr0l	equ	0xFE9
  8416                           wreg	equ	0xFE8
  8417                           postinc1	equ	0xFE6
  8418                           postdec1	equ	0xFE5
  8419                           fsr1h	equ	0xFE2
  8420                           fsr1l	equ	0xFE1
  8421                           indf2	equ	0xFDF
  8422                           postinc2	equ	0xFDE
  8423                           postdec2	equ	0xFDD
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _caltime_to_RTCC *****************
  8429 ;; Defined at:
  8430 ;;		line 105 in file "../My_library/My_RTCC.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  tm              2    9[BANK0 ] PTR struct .
  8433 ;;		 -> now(14), 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;		None               void
  8438 ;; Registers used:
  8439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8449 ;;Total ram usage:        2 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:   13
  8452 ;; This function calls:
  8453 ;;		_d_to_x
  8454 ;; This function is called by:
  8455 ;;		_RTCC_from_caltime
  8456 ;;		_RTCC_from_epoch
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text33
  8461  01233E                     __ptext33:
  8462                           	opt stack 0
  8463  01233E                     _caltime_to_RTCC:
  8464                           	opt stack 12
  8465  01233E                     l861:
  8466  01233E  010F               	movlb	15	; () banked
  8467  012340  B93F               	btfsc	63,4,b	;volatile
  8468  012342  D7FD               	goto	l861
  8469                           
  8470                           ; BSR set to: 15
  8471                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  8472  012344  010F               	movlb	15	; () banked
  8473  012346  813F               	bsf	63,0,b	;volatile
  8474                           
  8475                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  8476  012348  010F               	movlb	15	; () banked
  8477  01234A  833F               	bsf	63,1,b	;volatile
  8478                           
  8479                           ; BSR set to: 15
  8480                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  8481  01234C  0100               	movlb	0	; () banked
  8482  01234E  EE20 F00A          	lfsr	2,10
  8483  012352  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8484  012354  26D9               	addwf	fsr2l,f,c
  8485  012356  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8486  012358  22DA               	addwfc	fsr2h,f,c
  8487  01235A  50DF               	movf	indf2,w,c
  8488  01235C  EC94  F09F         	call	_d_to_x
  8489  012360  010F               	movlb	15	; () banked
  8490  012362  6F3A               	movwf	58,b	;volatile
  8491                           
  8492                           ; BSR set to: 15
  8493                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  8494  012364  0E00               	movlw	0
  8495  012366  010F               	movlb	15	; () banked
  8496  012368  6F3B               	movwf	59,b	;volatile
  8497                           
  8498                           ; BSR set to: 15
  8499                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  8500  01236A  010F               	movlb	15	; () banked
  8501  01236C  913F               	bcf	63,0,b	;volatile
  8502                           
  8503                           ; BSR set to: 15
  8504                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  8505  01236E  010F               	movlb	15	; () banked
  8506  012370  833F               	bsf	63,1,b	;volatile
  8507                           
  8508                           ; BSR set to: 15
  8509                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  8510  012372  0100               	movlb	0	; () banked
  8511  012374  EE20 F008          	lfsr	2,8
  8512  012378  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8513  01237A  26D9               	addwf	fsr2l,f,c
  8514  01237C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8515  01237E  22DA               	addwfc	fsr2h,f,c
  8516  012380  50DF               	movf	indf2,w,c
  8517  012382  EC94  F09F         	call	_d_to_x
  8518  012386  010F               	movlb	15	; () banked
  8519  012388  6F3A               	movwf	58,b	;volatile
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  8523  01238A  0100               	movlb	0	; () banked
  8524  01238C  EE20 F009          	lfsr	2,9
  8525  012390  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8526  012392  26D9               	addwf	fsr2l,f,c
  8527  012394  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8528  012396  22DA               	addwfc	fsr2h,f,c
  8529  012398  50DF               	movf	indf2,w,c
  8530  01239A  EC94  F09F         	call	_d_to_x
  8531  01239E  010F               	movlb	15	; () banked
  8532  0123A0  6F3B               	movwf	59,b	;volatile
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  8536  0123A2  010F               	movlb	15	; () banked
  8537  0123A4  813F               	bsf	63,0,b	;volatile
  8538                           
  8539                           ; BSR set to: 15
  8540                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  8541  0123A6  010F               	movlb	15	; () banked
  8542  0123A8  933F               	bcf	63,1,b	;volatile
  8543                           
  8544                           ; BSR set to: 15
  8545                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  8546  0123AA  0100               	movlb	0	; () banked
  8547  0123AC  EE20 F006          	lfsr	2,6
  8548  0123B0  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8549  0123B2  26D9               	addwf	fsr2l,f,c
  8550  0123B4  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8551  0123B6  22DA               	addwfc	fsr2h,f,c
  8552  0123B8  50DF               	movf	indf2,w,c
  8553  0123BA  EC94  F09F         	call	_d_to_x
  8554  0123BE  010F               	movlb	15	; () banked
  8555  0123C0  6F3A               	movwf	58,b	;volatile
  8556                           
  8557                           ; BSR set to: 15
  8558                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  8559  0123C2  0100               	movlb	0	; () banked
  8560  0123C4  EE20 F007          	lfsr	2,7
  8561  0123C8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8562  0123CA  26D9               	addwf	fsr2l,f,c
  8563  0123CC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8564  0123CE  22DA               	addwfc	fsr2h,f,c
  8565  0123D0  50DF               	movf	indf2,w,c
  8566  0123D2  EC94  F09F         	call	_d_to_x
  8567  0123D6  010F               	movlb	15	; () banked
  8568  0123D8  6F3B               	movwf	59,b	;volatile
  8569                           
  8570                           ; BSR set to: 15
  8571                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  8572  0123DA  010F               	movlb	15	; () banked
  8573  0123DC  913F               	bcf	63,0,b	;volatile
  8574                           
  8575                           ; BSR set to: 15
  8576                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  8577  0123DE  010F               	movlb	15	; () banked
  8578  0123E0  933F               	bcf	63,1,b	;volatile
  8579                           
  8580                           ; BSR set to: 15
  8581                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  8582  0123E2  0100               	movlb	0	; () banked
  8583  0123E4  EE20 F004          	lfsr	2,4
  8584  0123E8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8585  0123EA  26D9               	addwf	fsr2l,f,c
  8586  0123EC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8587  0123EE  22DA               	addwfc	fsr2h,f,c
  8588  0123F0  50DF               	movf	indf2,w,c
  8589  0123F2  EC94  F09F         	call	_d_to_x
  8590  0123F6  010F               	movlb	15	; () banked
  8591  0123F8  6F3A               	movwf	58,b	;volatile
  8592                           
  8593                           ; BSR set to: 15
  8594                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  8595  0123FA  0100               	movlb	0	; () banked
  8596  0123FC  EE20 F005          	lfsr	2,5
  8597  012400  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8598  012402  26D9               	addwf	fsr2l,f,c
  8599  012404  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8600  012406  22DA               	addwfc	fsr2h,f,c
  8601  012408  50DF               	movf	indf2,w,c
  8602  01240A  EC94  F09F         	call	_d_to_x
  8603  01240E  010F               	movlb	15	; () banked
  8604  012410  6F3B               	movwf	59,b	;volatile
  8605                           
  8606                           ; BSR set to: 15
  8607  012412  0012               	return		;funcret
  8608  012414                     __end_of_caltime_to_RTCC:
  8609                           	opt stack 0
  8610                           tblptru	equ	0xFF8
  8611                           tblptrh	equ	0xFF7
  8612                           tblptrl	equ	0xFF6
  8613                           tablat	equ	0xFF5
  8614                           prodh	equ	0xFF4
  8615                           prodl	equ	0xFF3
  8616                           intcon	equ	0xFF2
  8617                           intcon2	equ	0xFF1
  8618                           indf0	equ	0xFEF
  8619                           postinc0	equ	0xFEE
  8620                           fsr0h	equ	0xFEA
  8621                           fsr0l	equ	0xFE9
  8622                           wreg	equ	0xFE8
  8623                           postinc1	equ	0xFE6
  8624                           postdec1	equ	0xFE5
  8625                           fsr1h	equ	0xFE2
  8626                           fsr1l	equ	0xFE1
  8627                           indf2	equ	0xFDF
  8628                           postinc2	equ	0xFDE
  8629                           postdec2	equ	0xFDD
  8630                           fsr2h	equ	0xFDA
  8631                           fsr2l	equ	0xFD9
  8632                           status	equ	0xFD8
  8633                           
  8634 ;; *************** function _d_to_x *****************
  8635 ;; Defined at:
  8636 ;;		line 45 in file "../My_library/My_RTCC.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  dec             1    wreg     unsigned char 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  dec             1    8[BANK0 ] unsigned char 
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      unsigned char 
  8643 ;; Registers used:
  8644 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8653 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8654 ;;Total ram usage:        1 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:   12
  8657 ;; This function calls:
  8658 ;;		___awdiv
  8659 ;; This function is called by:
  8660 ;;		_caltime_to_RTCC
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text34
  8665  013F28                     __ptext34:
  8666                           	opt stack 0
  8667  013F28                     _d_to_x:
  8668                           	opt stack 12
  8669                           
  8670                           ; BSR set to: 15
  8671                           ;incstack = 0
  8672                           ;d_to_x@dec stored from wreg
  8673  013F28  0100               	movlb	0	; () banked
  8674  013F2A  6F68               	movwf	d_to_x@dec& (0+255),b
  8675                           
  8676                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  8677  013F2C  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8678  013F30  0100               	movlb	0	; () banked
  8679  013F32  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8680  013F34  0E00               	movlw	0
  8681  013F36  0100               	movlb	0	; () banked
  8682  013F38  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8683  013F3A  0E0A               	movlw	10
  8684  013F3C  6F62               	movwf	___awdiv@divisor& (0+255),b
  8685  013F3E  EC43  F095         	call	___awdiv	;wreg free
  8686  013F42  0100               	movlb	0	; () banked
  8687  013F44  5160               	movf	?___awdiv& (0+255),w,b
  8688  013F46  0D06               	mullw	6
  8689  013F48  50F3               	movf	prodl,w,c
  8690  013F4A  0100               	movlb	0	; () banked
  8691  013F4C  2568               	addwf	d_to_x@dec& (0+255),w,b
  8692  013F4E  0012               	return	
  8693  013F50                     __end_of_d_to_x:
  8694                           	opt stack 0
  8695                           tblptru	equ	0xFF8
  8696                           tblptrh	equ	0xFF7
  8697                           tblptrl	equ	0xFF6
  8698                           tablat	equ	0xFF5
  8699                           prodh	equ	0xFF4
  8700                           prodl	equ	0xFF3
  8701                           intcon	equ	0xFF2
  8702                           intcon2	equ	0xFF1
  8703                           indf0	equ	0xFEF
  8704                           postinc0	equ	0xFEE
  8705                           fsr0h	equ	0xFEA
  8706                           fsr0l	equ	0xFE9
  8707                           wreg	equ	0xFE8
  8708                           postinc1	equ	0xFE6
  8709                           postdec1	equ	0xFE5
  8710                           fsr1h	equ	0xFE2
  8711                           fsr1l	equ	0xFE1
  8712                           indf2	equ	0xFDF
  8713                           postinc2	equ	0xFDE
  8714                           postdec2	equ	0xFDD
  8715                           fsr2h	equ	0xFDA
  8716                           fsr2l	equ	0xFD9
  8717                           status	equ	0xFD8
  8718                           
  8719 ;; *************** function ___awdiv *****************
  8720 ;; Defined at:
  8721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  dividend        2    0[BANK0 ] int 
  8724 ;;  divisor         2    2[BANK0 ] int 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  quotient        2    6[BANK0 ] int 
  8727 ;;  sign            1    5[BANK0 ] unsigned char 
  8728 ;;  counter         1    4[BANK0 ] unsigned char 
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  2    0[BANK0 ] int 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2, status,0
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8739 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8741 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;Total ram usage:        8 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:   11
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_d_to_x
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text35
  8753  012A86                     __ptext35:
  8754                           	opt stack 0
  8755  012A86                     ___awdiv:
  8756                           	opt stack 12
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;incstack = 0
  8760  012A86  0E00               	movlw	0
  8761  012A88  0100               	movlb	0	; () banked
  8762  012A8A  6F65               	movwf	___awdiv@sign& (0+255),b
  8763                           
  8764                           ; BSR set to: 0
  8765  012A8C  0100               	movlb	0	; () banked
  8766  012A8E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8767  012A90  D008               	goto	l8160
  8768                           
  8769                           ; BSR set to: 0
  8770  012A92  0100               	movlb	0	; () banked
  8771  012A94  6D62               	negf	___awdiv@divisor& (0+255),b
  8772  012A96  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8773  012A98  B0D8               	btfsc	status,0,c
  8774  012A9A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8775                           
  8776                           ; BSR set to: 0
  8777  012A9C  0E01               	movlw	1
  8778  012A9E  0100               	movlb	0	; () banked
  8779  012AA0  6F65               	movwf	___awdiv@sign& (0+255),b
  8780  012AA2                     l8160:
  8781                           
  8782                           ; BSR set to: 0
  8783  012AA2  0100               	movlb	0	; () banked
  8784  012AA4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8785  012AA6  D008               	goto	l8166
  8786                           
  8787                           ; BSR set to: 0
  8788  012AA8  0100               	movlb	0	; () banked
  8789  012AAA  6D60               	negf	___awdiv@dividend& (0+255),b
  8790  012AAC  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8791  012AAE  B0D8               	btfsc	status,0,c
  8792  012AB0  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8793                           
  8794                           ; BSR set to: 0
  8795  012AB2  0E01               	movlw	1
  8796  012AB4  0100               	movlb	0	; () banked
  8797  012AB6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8798  012AB8                     l8166:
  8799                           
  8800                           ; BSR set to: 0
  8801  012AB8  0E00               	movlw	0
  8802  012ABA  0100               	movlb	0	; () banked
  8803  012ABC  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8804  012ABE  0E00               	movlw	0
  8805  012AC0  6F66               	movwf	___awdiv@quotient& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808  012AC2  0100               	movlb	0	; () banked
  8809  012AC4  5162               	movf	___awdiv@divisor& (0+255),w,b
  8810  012AC6  0100               	movlb	0	; () banked
  8811  012AC8  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8812  012ACA  B4D8               	btfsc	status,2,c
  8813  012ACC  D02C               	goto	l8188
  8814                           
  8815                           ; BSR set to: 0
  8816  012ACE  0E01               	movlw	1
  8817  012AD0  0100               	movlb	0	; () banked
  8818  012AD2  6F64               	movwf	___awdiv@counter& (0+255),b
  8819  012AD4  D006               	goto	l8174
  8820  012AD6                     l8172:
  8821                           
  8822                           ; BSR set to: 0
  8823  012AD6  0100               	movlb	0	; () banked
  8824  012AD8  90D8               	bcf	status,0,c
  8825  012ADA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8826  012ADC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8827  012ADE  0100               	movlb	0	; () banked
  8828  012AE0  2B64               	incf	___awdiv@counter& (0+255),f,b
  8829  012AE2                     l8174:
  8830                           
  8831                           ; BSR set to: 0
  8832  012AE2  0100               	movlb	0	; () banked
  8833  012AE4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8834  012AE6  D7F7               	goto	l8172
  8835  012AE8                     l8176:
  8836                           
  8837                           ; BSR set to: 0
  8838  012AE8  0100               	movlb	0	; () banked
  8839  012AEA  90D8               	bcf	status,0,c
  8840  012AEC  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8841  012AEE  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8842                           
  8843                           ; BSR set to: 0
  8844  012AF0  0100               	movlb	0	; () banked
  8845  012AF2  5162               	movf	___awdiv@divisor& (0+255),w,b
  8846  012AF4  0100               	movlb	0	; () banked
  8847  012AF6  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8848  012AF8  0100               	movlb	0	; () banked
  8849  012AFA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8850  012AFC  0100               	movlb	0	; () banked
  8851  012AFE  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8852  012B00  A0D8               	btfss	status,0,c
  8853  012B02  D00A               	goto	l8184
  8854                           
  8855                           ; BSR set to: 0
  8856  012B04  0100               	movlb	0	; () banked
  8857  012B06  5162               	movf	___awdiv@divisor& (0+255),w,b
  8858  012B08  0100               	movlb	0	; () banked
  8859  012B0A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8860  012B0C  0100               	movlb	0	; () banked
  8861  012B0E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8862  012B10  0100               	movlb	0	; () banked
  8863  012B12  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 0
  8866  012B14  0100               	movlb	0	; () banked
  8867  012B16  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8868  012B18                     l8184:
  8869                           
  8870                           ; BSR set to: 0
  8871  012B18  0100               	movlb	0	; () banked
  8872  012B1A  90D8               	bcf	status,0,c
  8873  012B1C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8874  012B1E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8875                           
  8876                           ; BSR set to: 0
  8877  012B20  0100               	movlb	0	; () banked
  8878  012B22  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8879  012B24  D7E1               	goto	l8176
  8880  012B26                     l8188:
  8881                           
  8882                           ; BSR set to: 0
  8883  012B26  0100               	movlb	0	; () banked
  8884  012B28  5165               	movf	___awdiv@sign& (0+255),w,b
  8885  012B2A  0100               	movlb	0	; () banked
  8886  012B2C  B4D8               	btfsc	status,2,c
  8887  012B2E  D005               	goto	l8192
  8888                           
  8889                           ; BSR set to: 0
  8890  012B30  0100               	movlb	0	; () banked
  8891  012B32  6D66               	negf	___awdiv@quotient& (0+255),b
  8892  012B34  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8893  012B36  B0D8               	btfsc	status,0,c
  8894  012B38  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8895  012B3A                     l8192:
  8896                           
  8897                           ; BSR set to: 0
  8898  012B3A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8899  012B3E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8900  012B42  0012               	return	
  8901  012B44                     __end_of___awdiv:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           intcon2	equ	0xFF1
  8911                           indf0	equ	0xFEF
  8912                           postinc0	equ	0xFEE
  8913                           fsr0h	equ	0xFEA
  8914                           fsr0l	equ	0xFE9
  8915                           wreg	equ	0xFE8
  8916                           postinc1	equ	0xFE6
  8917                           postdec1	equ	0xFE5
  8918                           fsr1h	equ	0xFE2
  8919                           fsr1l	equ	0xFE1
  8920                           indf2	equ	0xFDF
  8921                           postinc2	equ	0xFDE
  8922                           postdec2	equ	0xFDD
  8923                           fsr2h	equ	0xFDA
  8924                           fsr2l	equ	0xFD9
  8925                           status	equ	0xFD8
  8926                           
  8927 ;; *************** function _OSC_init *****************
  8928 ;; Defined at:
  8929 ;;		line 8 in file "../My_library/My_PIC.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;		None
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;		None               void
  8936 ;; Registers used:
  8937 ;;		wreg, status,2
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;Total ram usage:        0 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; Hardware stack levels required when called:   11
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_main_init
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text36
  8958  01410A                     __ptext36:
  8959                           	opt stack 0
  8960  01410A                     _OSC_init:
  8961                           	opt stack 18
  8962                           
  8963                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;incstack = 0
  8967  01410A  88D3               	bsf	4051,4,c	;volatile
  8968  01410C  8AD3               	bsf	4051,5,c	;volatile
  8969  01410E  8CD3               	bsf	4051,6,c	;volatile
  8970                           
  8971                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  8972  014110  8C9B               	bsf	3995,6,c	;volatile
  8973                           
  8974                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  8975  014112  0EFC               	movlw	-4
  8976  014114  16D3               	andwf	4051,f,c	;volatile
  8977  014116  0012               	return		;funcret
  8978  014118                     __end_of_OSC_init:
  8979                           	opt stack 0
  8980                           tblptru	equ	0xFF8
  8981                           tblptrh	equ	0xFF7
  8982                           tblptrl	equ	0xFF6
  8983                           tablat	equ	0xFF5
  8984                           prodh	equ	0xFF4
  8985                           prodl	equ	0xFF3
  8986                           intcon	equ	0xFF2
  8987                           intcon2	equ	0xFF1
  8988                           indf0	equ	0xFEF
  8989                           postinc0	equ	0xFEE
  8990                           fsr0h	equ	0xFEA
  8991                           fsr0l	equ	0xFE9
  8992                           wreg	equ	0xFE8
  8993                           postinc1	equ	0xFE6
  8994                           postdec1	equ	0xFE5
  8995                           fsr1h	equ	0xFE2
  8996                           fsr1l	equ	0xFE1
  8997                           indf2	equ	0xFDF
  8998                           postinc2	equ	0xFDE
  8999                           postdec2	equ	0xFDD
  9000                           fsr2h	equ	0xFDA
  9001                           fsr2l	equ	0xFD9
  9002                           status	equ	0xFD8
  9003                           
  9004 ;; *************** function _I2C_LCD_init *****************
  9005 ;; Defined at:
  9006 ;;		line 211 in file "../My_library/My_ST7032.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  i               1    9[BANK0 ] unsigned char 
  9011 ;;  i               1    8[BANK0 ] unsigned char 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;		None               void
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;Total ram usage:        3 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:   15
  9028 ;; This function calls:
  9029 ;;		_I2C_LCD_Clear
  9030 ;;		_I2C_LCD_Command
  9031 ;;		_I2C_init_old
  9032 ;; This function is called by:
  9033 ;;		_main_init
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	text37
  9038  0132BE                     __ptext37:
  9039                           	opt stack 0
  9040  0132BE                     _I2C_LCD_init:
  9041                           	opt stack 14
  9042                           
  9043                           ;My_ST7032.c: 212: I2C_init_old();
  9044                           
  9045                           ;incstack = 0
  9046  0132BE  EC7C  F0A0         	call	_I2C_init_old	;wreg free
  9047                           
  9048                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  9049  0132C2  0E00               	movlw	0
  9050  0132C4  0100               	movlb	0	; () banked
  9051  0132C6  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  9052  0132C8                     l9120:
  9053                           
  9054                           ; BSR set to: 0
  9055  0132C8  0E27               	movlw	39
  9056  0132CA  0100               	movlb	0	; () banked
  9057  0132CC  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  9058  0132CE  D001               	goto	l9124
  9059  0132D0  D00C               	goto	l9128
  9060  0132D2                     l9124:
  9061                           
  9062                           ; BSR set to: 0
  9063  0132D2  0E10               	movlw	16
  9064  0132D4  0100               	movlb	0	; () banked
  9065  0132D6  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9066  0132D8  0E94               	movlw	148
  9067  0132DA                     u9597:
  9068  0132DA  2EE8               	decfsz	wreg,f,c
  9069  0132DC  D7FE               	goto	u9597
  9070  0132DE  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9071  0132E0  D7FC               	goto	u9597
  9072  0132E2  D000               	nop2	
  9073  0132E4  0100               	movlb	0	; () banked
  9074  0132E6  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  9075  0132E8  D7EF               	goto	l9120
  9076  0132EA                     l9128:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
  9080  0132EA  0E38               	movlw	56
  9081  0132EC  EC78  F09E         	call	_I2C_LCD_Command
  9082                           
  9083                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
  9084  0132F0  0E39               	movlw	57
  9085  0132F2  EC78  F09E         	call	_I2C_LCD_Command
  9086                           
  9087                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
  9088  0132F6  0E14               	movlw	20
  9089  0132F8  EC78  F09E         	call	_I2C_LCD_Command
  9090                           
  9091                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
  9092  0132FC  0E70               	movlw	112
  9093  0132FE  EC78  F09E         	call	_I2C_LCD_Command
  9094                           
  9095                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
  9096  013302  0E56               	movlw	86
  9097  013304  EC78  F09E         	call	_I2C_LCD_Command
  9098                           
  9099                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
  9100  013308  0E6C               	movlw	108
  9101  01330A  EC78  F09E         	call	_I2C_LCD_Command
  9102                           
  9103                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  9104  01330E  0E00               	movlw	0
  9105  013310  0100               	movlb	0	; () banked
  9106  013312  6F69               	movwf	I2C_LCD_init@i_4452& (0+255),b
  9107  013314                     l9132:
  9108                           
  9109                           ; BSR set to: 0
  9110  013314  0E27               	movlw	39
  9111  013316  0100               	movlb	0	; () banked
  9112  013318  6569               	cpfsgt	I2C_LCD_init@i_4452& (0+255),b
  9113  01331A  D001               	goto	l9136
  9114  01331C  D00C               	goto	l9140
  9115  01331E                     l9136:
  9116                           
  9117                           ; BSR set to: 0
  9118  01331E  0E10               	movlw	16
  9119  013320  0100               	movlb	0	; () banked
  9120  013322  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9121  013324  0E94               	movlw	148
  9122  013326                     u9607:
  9123  013326  2EE8               	decfsz	wreg,f,c
  9124  013328  D7FE               	goto	u9607
  9125  01332A  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9126  01332C  D7FC               	goto	u9607
  9127  01332E  D000               	nop2	
  9128  013330  0100               	movlb	0	; () banked
  9129  013332  2B69               	incf	I2C_LCD_init@i_4452& (0+255),f,b
  9130  013334  D7EF               	goto	l9132
  9131  013336                     l9140:
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
  9135  013336  0E38               	movlw	56
  9136  013338  EC78  F09E         	call	_I2C_LCD_Command
  9137                           
  9138                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
  9139  01333C  0E0C               	movlw	12
  9140  01333E  EC78  F09E         	call	_I2C_LCD_Command
  9141                           
  9142                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
  9143  013342  0E06               	movlw	6
  9144  013344  EC78  F09E         	call	_I2C_LCD_Command
  9145                           
  9146                           ;My_ST7032.c: 225: I2C_LCD_Clear();
  9147  013348  EC56  F0A0         	call	_I2C_LCD_Clear	;wreg free
  9148  01334C  0012               	return		;funcret
  9149  01334E                     __end_of_I2C_LCD_init:
  9150                           	opt stack 0
  9151                           tblptru	equ	0xFF8
  9152                           tblptrh	equ	0xFF7
  9153                           tblptrl	equ	0xFF6
  9154                           tablat	equ	0xFF5
  9155                           prodh	equ	0xFF4
  9156                           prodl	equ	0xFF3
  9157                           intcon	equ	0xFF2
  9158                           intcon2	equ	0xFF1
  9159                           indf0	equ	0xFEF
  9160                           postinc0	equ	0xFEE
  9161                           fsr0h	equ	0xFEA
  9162                           fsr0l	equ	0xFE9
  9163                           wreg	equ	0xFE8
  9164                           postinc1	equ	0xFE6
  9165                           postdec1	equ	0xFE5
  9166                           fsr1h	equ	0xFE2
  9167                           fsr1l	equ	0xFE1
  9168                           indf2	equ	0xFDF
  9169                           postinc2	equ	0xFDE
  9170                           postdec2	equ	0xFDD
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8
  9174                           
  9175 ;; *************** function _I2C_init_old *****************
  9176 ;; Defined at:
  9177 ;;		line 62 in file "../My_library/My_I2C.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;		None               void
  9184 ;; Registers used:
  9185 ;;		wreg, status,2
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:   11
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_I2C_LCD_init
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text38
  9206  0140F8                     __ptext38:
  9207                           	opt stack 0
  9208  0140F8                     _I2C_init_old:
  9209                           	opt stack 17
  9210                           
  9211                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
  9212                           
  9213                           ;incstack = 0
  9214  0140F8  0E80               	movlw	128
  9215  0140FA  6EC7               	movwf	4039,c	;volatile
  9216                           
  9217                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
  9218  0140FC  0E28               	movlw	40
  9219  0140FE  6EC6               	movwf	4038,c	;volatile
  9220                           
  9221                           ;My_I2C.c: 65: SSP1ADD = 0x13;
  9222  014100  0E13               	movlw	19
  9223  014102  6EC8               	movwf	4040,c	;volatile
  9224                           
  9225                           ;My_I2C.c: 68: SSP1IF = 0;
  9226  014104  969E               	bcf	3998,3,c	;volatile
  9227                           
  9228                           ;My_I2C.c: 69: BCL1IF = 0;
  9229  014106  96A1               	bcf	4001,3,c	;volatile
  9230  014108  0012               	return		;funcret
  9231  01410A                     __end_of_I2C_init_old:
  9232                           	opt stack 0
  9233                           tblptru	equ	0xFF8
  9234                           tblptrh	equ	0xFF7
  9235                           tblptrl	equ	0xFF6
  9236                           tablat	equ	0xFF5
  9237                           prodh	equ	0xFF4
  9238                           prodl	equ	0xFF3
  9239                           intcon	equ	0xFF2
  9240                           intcon2	equ	0xFF1
  9241                           indf0	equ	0xFEF
  9242                           postinc0	equ	0xFEE
  9243                           fsr0h	equ	0xFEA
  9244                           fsr0l	equ	0xFE9
  9245                           wreg	equ	0xFE8
  9246                           postinc1	equ	0xFE6
  9247                           postdec1	equ	0xFE5
  9248                           fsr1h	equ	0xFE2
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           postinc2	equ	0xFDE
  9252                           postdec2	equ	0xFDD
  9253                           fsr2h	equ	0xFDA
  9254                           fsr2l	equ	0xFD9
  9255                           status	equ	0xFD8
  9256                           
  9257 ;; *************** function _I2C_LCD_Clear *****************
  9258 ;; Defined at:
  9259 ;;		line 154 in file "../My_library/My_ST7032.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;		None               void
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9277 ;;Total ram usage:        1 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:   14
  9280 ;; This function calls:
  9281 ;;		_I2C_LCD_Command
  9282 ;; This function is called by:
  9283 ;;		_I2C_LCD_init
  9284 ;;		_main
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text39
  9289  0140AC                     __ptext39:
  9290                           	opt stack 0
  9291  0140AC                     _I2C_LCD_Clear:
  9292                           	opt stack 14
  9293                           
  9294                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
  9295                           
  9296                           ;incstack = 0
  9297  0140AC  0E01               	movlw	1
  9298  0140AE  EC78  F09E         	call	_I2C_LCD_Command
  9299                           
  9300                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  9301  0140B2  0E12               	movlw	18
  9302  0140B4  0100               	movlb	0	; () banked
  9303  0140B6  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  9304  0140B8  0E23               	movlw	35
  9305  0140BA                     u9617:
  9306  0140BA  2EE8               	decfsz	wreg,f,c
  9307  0140BC  D7FE               	goto	u9617
  9308  0140BE  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  9309  0140C0  D7FC               	goto	u9617
  9310  0140C2  F000               	nop	
  9311  0140C4  0012               	return		;funcret
  9312  0140C6                     __end_of_I2C_LCD_Clear:
  9313                           	opt stack 0
  9314                           tblptru	equ	0xFF8
  9315                           tblptrh	equ	0xFF7
  9316                           tblptrl	equ	0xFF6
  9317                           tablat	equ	0xFF5
  9318                           prodh	equ	0xFF4
  9319                           prodl	equ	0xFF3
  9320                           intcon	equ	0xFF2
  9321                           intcon2	equ	0xFF1
  9322                           indf0	equ	0xFEF
  9323                           postinc0	equ	0xFEE
  9324                           fsr0h	equ	0xFEA
  9325                           fsr0l	equ	0xFE9
  9326                           wreg	equ	0xFE8
  9327                           postinc1	equ	0xFE6
  9328                           postdec1	equ	0xFE5
  9329                           fsr1h	equ	0xFE2
  9330                           fsr1l	equ	0xFE1
  9331                           indf2	equ	0xFDF
  9332                           postinc2	equ	0xFDE
  9333                           postdec2	equ	0xFDD
  9334                           fsr2h	equ	0xFDA
  9335                           fsr2l	equ	0xFD9
  9336                           status	equ	0xFD8
  9337                           
  9338 ;; *************** function _USB_task *****************
  9339 ;; Defined at:
  9340 ;;		line 66 in file "../My_library/My_usb_cdc.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  rx_len          2   20[BANK0 ] int 
  9345 ;;  data            1   22[BANK0 ] unsigned char 
  9346 ;; Return value:  Size  Location     Type
  9347 ;;		None               void
  9348 ;; Registers used:
  9349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9356 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9359 ;;Total ram usage:        3 bytes
  9360 ;; Hardware stack levels used:    1
  9361 ;; Hardware stack levels required when called:   14
  9362 ;; This function calls:
  9363 ;;		_get_string_usb
  9364 ;;		_put_string_usb
  9365 ;;		_ringbuf_num
  9366 ;;		_ringbuf_pop
  9367 ;;		_ringbuf_put
  9368 ;; This function is called by:
  9369 ;;		_main
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text40
  9374  0133DC                     __ptext40:
  9375                           	opt stack 0
  9376  0133DC                     _USB_task:
  9377                           	opt stack 16
  9378                           
  9379                           ;My_usb_cdc.c: 67: char data;
  9380                           ;My_usb_cdc.c: 68: int rx_len;
  9381                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
  9382                           
  9383                           ;incstack = 0
  9384  0133DC  0E76               	movlw	low USB_task@data
  9385  0133DE  0100               	movlb	0	; () banked
  9386  0133E0  6F6D               	movwf	get_string_usb@s& (0+255),b
  9387  0133E2  0E00               	movlw	high USB_task@data
  9388  0133E4  0100               	movlb	0	; () banked
  9389  0133E6  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
  9390  0133E8  0E00               	movlw	0
  9391  0133EA  0100               	movlb	0	; () banked
  9392  0133EC  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
  9393  0133EE  0E01               	movlw	1
  9394  0133F0  6F6F               	movwf	get_string_usb@len& (0+255),b
  9395  0133F2  EC95  F09D         	call	_get_string_usb	;wreg free
  9396  0133F6  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
  9397  0133FA  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
  9398                           
  9399                           ;My_usb_cdc.c: 70: if (rx_len) {
  9400  0133FE  0100               	movlb	0	; () banked
  9401  013400  5174               	movf	USB_task@rx_len& (0+255),w,b
  9402  013402  0100               	movlb	0	; () banked
  9403  013404  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
  9404  013406  B4D8               	btfsc	status,2,c
  9405  013408  D00A               	goto	l1370
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
  9409  01340A  0E6C               	movlw	low _usb_rx
  9410  01340C  0100               	movlb	0	; () banked
  9411  01340E  6F68               	movwf	ringbuf_put@rb& (0+255),b
  9412  013410  0E01               	movlw	high _usb_rx
  9413  013412  0100               	movlb	0	; () banked
  9414  013414  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  9415  013416  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
  9416  01341A  ECDF  F092         	call	_ringbuf_put	;wreg free
  9417  01341E                     l1370:
  9418                           
  9419                           ;My_usb_cdc.c: 72: }
  9420                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
  9421  01341E  0E74               	movlw	low _usb_tx
  9422  013420  0100               	movlb	0	; () banked
  9423  013422  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9424  013424  0E01               	movlw	high _usb_tx
  9425  013426  0100               	movlb	0	; () banked
  9426  013428  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9427  01342A  EC8C  F08E         	call	_ringbuf_num	;wreg free
  9428  01342E  0100               	movlb	0	; () banked
  9429  013430  5160               	movf	?_ringbuf_num& (0+255),w,b
  9430  013432  0100               	movlb	0	; () banked
  9431  013434  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9432  013436  B4D8               	btfsc	status,2,c
  9433  013438  0012               	return	
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
  9437  01343A  0E74               	movlw	low _usb_tx
  9438  01343C  0100               	movlb	0	; () banked
  9439  01343E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  9440  013440  0E01               	movlw	high _usb_tx
  9441  013442  0100               	movlb	0	; () banked
  9442  013444  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9443  013446  EC19  F094         	call	_ringbuf_pop	;wreg free
  9444  01344A  0100               	movlb	0	; () banked
  9445  01344C  6F76               	movwf	USB_task@data& (0+255),b
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
  9449  01344E  0E76               	movlw	low USB_task@data
  9450  013450  0100               	movlb	0	; () banked
  9451  013452  6F6C               	movwf	put_string_usb@s& (0+255),b
  9452  013454  0E00               	movlw	high USB_task@data
  9453  013456  0100               	movlb	0	; () banked
  9454  013458  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
  9455  01345A  0E00               	movlw	0
  9456  01345C  0100               	movlb	0	; () banked
  9457  01345E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
  9458  013460  0E01               	movlw	1
  9459  013462  6F6E               	movwf	put_string_usb@len& (0+255),b
  9460  013464  EC27  F09F         	call	_put_string_usb	;wreg free
  9461  013468  0012               	return	
  9462  01346A                     __end_of_USB_task:
  9463                           	opt stack 0
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           intcon2	equ	0xFF1
  9472                           indf0	equ	0xFEF
  9473                           postinc0	equ	0xFEE
  9474                           fsr0h	equ	0xFEA
  9475                           fsr0l	equ	0xFE9
  9476                           wreg	equ	0xFE8
  9477                           postinc1	equ	0xFE6
  9478                           postdec1	equ	0xFE5
  9479                           fsr1h	equ	0xFE2
  9480                           fsr1l	equ	0xFE1
  9481                           indf2	equ	0xFDF
  9482                           postinc2	equ	0xFDE
  9483                           postdec2	equ	0xFDD
  9484                           fsr2h	equ	0xFDA
  9485                           fsr2l	equ	0xFD9
  9486                           status	equ	0xFD8
  9487                           
  9488 ;; *************** function _ringbuf_put *****************
  9489 ;; Defined at:
  9490 ;;		line 20 in file "../My_library/My_ringbuf.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9493 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
  9494 ;;		 -> lcd_tx(8), 
  9495 ;;  asciicode       1   10[BANK0 ] unsigned char 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;		None               void
  9500 ;; Registers used:
  9501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9507 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9511 ;;Total ram usage:        7 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:   12
  9514 ;; This function calls:
  9515 ;;		_ringbuf_num
  9516 ;; This function is called by:
  9517 ;;		_ringbuf_put_num
  9518 ;;		_ringbuf_put_str
  9519 ;;		_terminal_task
  9520 ;;		_USB_task
  9521 ;;		_ST7032_command
  9522 ;;		_ST7032_put
  9523 ;;		_ST7032_create_char
  9524 ;;		_ST7032_init
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text41
  9529  0125BE                     __ptext41:
  9530                           	opt stack 0
  9531  0125BE                     _ringbuf_put:
  9532                           	opt stack 13
  9533                           
  9534                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  9535                           
  9536                           ;incstack = 0
  9537  0125BE  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  9538  0125C2  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  9539  0125C6  EC8C  F08E         	call	_ringbuf_num	;wreg free
  9540  0125CA  0100               	movlb	0	; () banked
  9541  0125CC  EE20 F002          	lfsr	2,2
  9542  0125D0  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9543  0125D2  26D9               	addwf	fsr2l,f,c
  9544  0125D4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9545  0125D6  22DA               	addwfc	fsr2h,f,c
  9546  0125D8  50DE               	movf	postinc2,w,c
  9547  0125DA  0100               	movlb	0	; () banked
  9548  0125DC  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  9549  0125DE  50DE               	movf	postinc2,w,c
  9550  0125E0  0100               	movlb	0	; () banked
  9551  0125E2  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  9552  0125E4  B0D8               	btfsc	status,0,c
  9553  0125E6  0012               	return	
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  9557  0125E8  0100               	movlb	0	; () banked
  9558  0125EA  EE20 F004          	lfsr	2,4
  9559  0125EE  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9560  0125F0  26D9               	addwf	fsr2l,f,c
  9561  0125F2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9562  0125F4  22DA               	addwfc	fsr2h,f,c
  9563  0125F6  CFDE F06B          	movff	postinc2,??_ringbuf_put
  9564  0125FA  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  9565  0125FE  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  9566  012602  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  9567  012606  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  9568  01260A  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  9569  01260E  0100               	movlb	0	; () banked
  9570  012610  516B               	movf	??_ringbuf_put& (0+255),w,b
  9571  012612  0100               	movlb	0	; () banked
  9572  012614  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  9573  012616  6ED9               	movwf	fsr2l,c
  9574  012618  0100               	movlb	0	; () banked
  9575  01261A  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  9576  01261C  0100               	movlb	0	; () banked
  9577  01261E  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  9578  012620  6EDA               	movwf	fsr2h,c
  9579  012622  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  9583  012626  0100               	movlb	0	; () banked
  9584  012628  EE20 F002          	lfsr	2,2
  9585  01262C  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9586  01262E  26D9               	addwf	fsr2l,f,c
  9587  012630  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9588  012632  22DA               	addwfc	fsr2h,f,c
  9589  012634  0100               	movlb	0	; () banked
  9590  012636  EE10 F004          	lfsr	1,4
  9591  01263A  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9592  01263C  26E1               	addwf	fsr1l,f,c
  9593  01263E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9594  012640  22E2               	addwfc	fsr1h,f,c
  9595  012642  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  9596  012646  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  9597  01264A  0E01               	movlw	1
  9598  01264C  0100               	movlb	0	; () banked
  9599  01264E  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  9600  012650  0E00               	movlw	0
  9601  012652  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  9602  012654  50DE               	movf	postinc2,w,c
  9603  012656  0100               	movlb	0	; () banked
  9604  012658  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  9605  01265A  50DE               	movf	postinc2,w,c
  9606  01265C  0100               	movlb	0	; () banked
  9607  01265E  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  9608  012660  B0D8               	btfsc	status,0,c
  9609  012662  D00B               	goto	l8226
  9610                           
  9611                           ; BSR set to: 0
  9612  012664  0100               	movlb	0	; () banked
  9613  012666  EE20 F004          	lfsr	2,4
  9614  01266A  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9615  01266C  26D9               	addwf	fsr2l,f,c
  9616  01266E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9617  012670  22DA               	addwfc	fsr2h,f,c
  9618  012672  2ADE               	incf	postinc2,f,c
  9619  012674  0E00               	movlw	0
  9620  012676  22DD               	addwfc	postdec2,f,c
  9621  012678  0012               	return	
  9622  01267A                     l8226:
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;My_ringbuf.c: 24: else rb->head = 0;
  9626  01267A  0100               	movlb	0	; () banked
  9627  01267C  EE20 F004          	lfsr	2,4
  9628  012680  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9629  012682  26D9               	addwf	fsr2l,f,c
  9630  012684  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9631  012686  22DA               	addwfc	fsr2h,f,c
  9632  012688  0E00               	movlw	0
  9633  01268A  6EDE               	movwf	postinc2,c
  9634  01268C  0E00               	movlw	0
  9635  01268E  6EDD               	movwf	postdec2,c
  9636                           
  9637                           ; BSR set to: 0
  9638  012690  0012               	return	
  9639  012692                     __end_of_ringbuf_put:
  9640                           	opt stack 0
  9641                           tblptru	equ	0xFF8
  9642                           tblptrh	equ	0xFF7
  9643                           tblptrl	equ	0xFF6
  9644                           tablat	equ	0xFF5
  9645                           prodh	equ	0xFF4
  9646                           prodl	equ	0xFF3
  9647                           intcon	equ	0xFF2
  9648                           intcon2	equ	0xFF1
  9649                           indf0	equ	0xFEF
  9650                           postinc0	equ	0xFEE
  9651                           fsr0h	equ	0xFEA
  9652                           fsr0l	equ	0xFE9
  9653                           wreg	equ	0xFE8
  9654                           postinc1	equ	0xFE6
  9655                           postdec1	equ	0xFE5
  9656                           fsr1h	equ	0xFE2
  9657                           fsr1l	equ	0xFE1
  9658                           indf2	equ	0xFDF
  9659                           postinc2	equ	0xFDE
  9660                           postdec2	equ	0xFDD
  9661                           fsr2h	equ	0xFDA
  9662                           fsr2l	equ	0xFD9
  9663                           status	equ	0xFD8
  9664                           
  9665 ;; *************** function _ringbuf_pop *****************
  9666 ;; Defined at:
  9667 ;;		line 45 in file "../My_library/My_ringbuf.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9670 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
  9671 ;;		 -> lcd_tx(8), 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  ret             1   14[BANK0 ] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      unsigned char 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9685 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9686 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9687 ;;Total ram usage:        7 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:   12
  9690 ;; This function calls:
  9691 ;;		_ringbuf_num
  9692 ;; This function is called by:
  9693 ;;		_terminal_task
  9694 ;;		_USB_task
  9695 ;;		_ST7032_task
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text42
  9700  012832                     __ptext42:
  9701                           	opt stack 0
  9702  012832                     _ringbuf_pop:
  9703                           	opt stack 17
  9704                           
  9705                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;incstack = 0
  9709  012832  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  9710  012836  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  9711  01283A  EC8C  F08E         	call	_ringbuf_num	;wreg free
  9712  01283E  0100               	movlb	0	; () banked
  9713  012840  5160               	movf	?_ringbuf_num& (0+255),w,b
  9714  012842  0100               	movlb	0	; () banked
  9715  012844  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9716  012846  B4D8               	btfsc	status,2,c
  9717  012848  D058               	goto	l9076
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  9721  01284A  0100               	movlb	0	; () banked
  9722  01284C  EE20 F006          	lfsr	2,6
  9723  012850  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9724  012852  26D9               	addwf	fsr2l,f,c
  9725  012854  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9726  012856  22DA               	addwfc	fsr2h,f,c
  9727  012858  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  9728  01285C  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  9729  012860  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  9730  012864  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  9731  012868  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  9732  01286C  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  9733  012870  0100               	movlb	0	; () banked
  9734  012872  516A               	movf	??_ringbuf_pop& (0+255),w,b
  9735  012874  0100               	movlb	0	; () banked
  9736  012876  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  9737  012878  6ED9               	movwf	fsr2l,c
  9738  01287A  0100               	movlb	0	; () banked
  9739  01287C  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  9740  01287E  0100               	movlb	0	; () banked
  9741  012880  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  9742  012882  6EDA               	movwf	fsr2h,c
  9743  012884  50DF               	movf	indf2,w,c
  9744  012886  0100               	movlb	0	; () banked
  9745  012888  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  9749  01288A  0100               	movlb	0	; () banked
  9750  01288C  EE20 F002          	lfsr	2,2
  9751  012890  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9752  012892  26D9               	addwf	fsr2l,f,c
  9753  012894  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9754  012896  22DA               	addwfc	fsr2h,f,c
  9755  012898  0100               	movlb	0	; () banked
  9756  01289A  EE10 F006          	lfsr	1,6
  9757  01289E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9758  0128A0  26E1               	addwf	fsr1l,f,c
  9759  0128A2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9760  0128A4  22E2               	addwfc	fsr1h,f,c
  9761  0128A6  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  9762  0128AA  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  9763  0128AE  0E01               	movlw	1
  9764  0128B0  0100               	movlb	0	; () banked
  9765  0128B2  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  9766  0128B4  0E00               	movlw	0
  9767  0128B6  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  9768  0128B8  50DE               	movf	postinc2,w,c
  9769  0128BA  0100               	movlb	0	; () banked
  9770  0128BC  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  9771  0128BE  50DE               	movf	postinc2,w,c
  9772  0128C0  0100               	movlb	0	; () banked
  9773  0128C2  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  9774  0128C4  B0D8               	btfsc	status,0,c
  9775  0128C6  D00B               	goto	l9068
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;My_ringbuf.c: 49: rb->tail++;
  9779  0128C8  0100               	movlb	0	; () banked
  9780  0128CA  EE20 F006          	lfsr	2,6
  9781  0128CE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9782  0128D0  26D9               	addwf	fsr2l,f,c
  9783  0128D2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9784  0128D4  22DA               	addwfc	fsr2h,f,c
  9785  0128D6  2ADE               	incf	postinc2,f,c
  9786  0128D8  0E00               	movlw	0
  9787  0128DA  22DD               	addwfc	postdec2,f,c
  9788                           
  9789                           ;My_ringbuf.c: 50: } else {
  9790  0128DC  D00B               	goto	l9070
  9791  0128DE                     l9068:
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;My_ringbuf.c: 51: rb->tail = 0;
  9795  0128DE  0100               	movlb	0	; () banked
  9796  0128E0  EE20 F006          	lfsr	2,6
  9797  0128E4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9798  0128E6  26D9               	addwf	fsr2l,f,c
  9799  0128E8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9800  0128EA  22DA               	addwfc	fsr2h,f,c
  9801  0128EC  0E00               	movlw	0
  9802  0128EE  6EDE               	movwf	postinc2,c
  9803  0128F0  0E00               	movlw	0
  9804  0128F2  6EDD               	movwf	postdec2,c
  9805  0128F4                     l9070:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;My_ringbuf.c: 52: }
  9809                           ;My_ringbuf.c: 53: return ret;
  9810  0128F4  0100               	movlb	0	; () banked
  9811  0128F6  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;My_ringbuf.c: 54: } else {
  9815                           
  9816                           ; BSR set to: 0
  9817  0128F8  0012               	return	
  9818  0128FA                     l9076:
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;My_ringbuf.c: 55: return 0;
  9822  0128FA  0E00               	movlw	0
  9823                           
  9824                           ; BSR set to: 0
  9825  0128FC  0012               	return	
  9826  0128FE                     __end_of_ringbuf_pop:
  9827                           	opt stack 0
  9828                           tblptru	equ	0xFF8
  9829                           tblptrh	equ	0xFF7
  9830                           tblptrl	equ	0xFF6
  9831                           tablat	equ	0xFF5
  9832                           prodh	equ	0xFF4
  9833                           prodl	equ	0xFF3
  9834                           intcon	equ	0xFF2
  9835                           intcon2	equ	0xFF1
  9836                           indf0	equ	0xFEF
  9837                           postinc0	equ	0xFEE
  9838                           fsr0h	equ	0xFEA
  9839                           fsr0l	equ	0xFE9
  9840                           wreg	equ	0xFE8
  9841                           postinc1	equ	0xFE6
  9842                           postdec1	equ	0xFE5
  9843                           fsr1h	equ	0xFE2
  9844                           fsr1l	equ	0xFE1
  9845                           indf2	equ	0xFDF
  9846                           postinc2	equ	0xFDE
  9847                           postdec2	equ	0xFDD
  9848                           fsr2h	equ	0xFDA
  9849                           fsr2l	equ	0xFD9
  9850                           status	equ	0xFD8
  9851                           
  9852 ;; *************** function _put_string_usb *****************
  9853 ;; Defined at:
  9854 ;;		line 21 in file "../My_library/My_usb_cdc.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  s               2   12[BANK0 ] PTR unsigned char 
  9857 ;;		 -> USB_task@data(1), 
  9858 ;;  len             2   14[BANK0 ] int 
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  2   12[BANK0 ] int 
  9863 ;; Registers used:
  9864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9873 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9874 ;;Total ram usage:        4 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:   13
  9877 ;; This function calls:
  9878 ;;		_CDCTxService
  9879 ;;		_is_usb_available
  9880 ;;		_putUSBUSART
  9881 ;; This function is called by:
  9882 ;;		_USB_task
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886                           	psect	text43
  9887  013E4E                     __ptext43:
  9888                           	opt stack 0
  9889  013E4E                     _put_string_usb:
  9890                           	opt stack 16
  9891                           
  9892                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;incstack = 0
  9896  013E4E  EC2D  F0A0         	call	_is_usb_available	;wreg free
  9897  013E52  0900               	iorlw	0
  9898  013E54  B4D8               	btfsc	status,2,c
  9899  013E56  0012               	return	
  9900  013E58  D002               	goto	l9182
  9901  013E5A                     l9180:
  9902  013E5A  EC3A  F089         	call	_CDCTxService	;wreg free
  9903  013E5E                     l9182:
  9904  013E5E  5046               	movf	_cdc_trf_state,w,c
  9905  013E60  A4D8               	btfss	status,2,c
  9906  013E62  D7FB               	goto	l9180
  9907                           
  9908                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
  9909  013E64  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
  9910  013E68  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
  9911  013E6C  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
  9912  013E70  ECDF  F09F         	call	_putUSBUSART	;wreg free
  9913                           
  9914                           ;My_usb_cdc.c: 28: CDCTxService();
  9915  013E74  EC3A  F089         	call	_CDCTxService	;wreg free
  9916  013E78  0012               	return	
  9917  013E7A                     __end_of_put_string_usb:
  9918                           	opt stack 0
  9919                           tblptru	equ	0xFF8
  9920                           tblptrh	equ	0xFF7
  9921                           tblptrl	equ	0xFF6
  9922                           tablat	equ	0xFF5
  9923                           prodh	equ	0xFF4
  9924                           prodl	equ	0xFF3
  9925                           intcon	equ	0xFF2
  9926                           intcon2	equ	0xFF1
  9927                           indf0	equ	0xFEF
  9928                           postinc0	equ	0xFEE
  9929                           fsr0h	equ	0xFEA
  9930                           fsr0l	equ	0xFE9
  9931                           wreg	equ	0xFE8
  9932                           postinc1	equ	0xFE6
  9933                           postdec1	equ	0xFE5
  9934                           fsr1h	equ	0xFE2
  9935                           fsr1l	equ	0xFE1
  9936                           indf2	equ	0xFDF
  9937                           postinc2	equ	0xFDE
  9938                           postdec2	equ	0xFDD
  9939                           fsr2h	equ	0xFDA
  9940                           fsr2l	equ	0xFD9
  9941                           status	equ	0xFD8
  9942                           
  9943 ;; *************** function _putUSBUSART *****************
  9944 ;; Defined at:
  9945 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  data            2    0[BANK0 ] PTR unsigned char 
  9948 ;;		 -> USB_task@data(1), 
  9949 ;;  length          1    2[BANK0 ] unsigned char 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;		None               void
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9961 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9965 ;;Total ram usage:        3 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:   11
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_put_string_usb
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text44
  9976  013FBE                     __ptext44:
  9977                           	opt stack 0
  9978  013FBE                     _putUSBUSART:
  9979                           	opt stack 17
  9980                           
  9981                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  9982                           
  9983                           ;incstack = 0
  9984  013FBE  98A0               	bcf	4000,4,c	;volatile
  9985                           
  9986                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  9987  013FC0  5046               	movf	_cdc_trf_state,w,c
  9988  013FC2  A4D8               	btfss	status,2,c
  9989  013FC4  D00B               	goto	l8834
  9990                           
  9991                           ;usb_device_cdc.c: 640: {
  9992                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  9993  013FC6  C060  F0ED         	movff	putUSBUSART@data,_pCDCSrc
  9994  013FCA  C061  F0EE         	movff	putUSBUSART@data+1,_pCDCSrc+1
  9995  013FCE  C062  F0F8         	movff	putUSBUSART@length,_cdc_tx_len
  9996  013FD2  0E01               	movlw	1
  9997  013FD4  0100               	movlb	0	; () banked
  9998  013FD6  6FF6               	movwf	_cdc_mem_type& (0+255),b
  9999                           
 10000                           ; BSR set to: 0
 10001  013FD8  0E01               	movlw	1
 10002  013FDA  6E46               	movwf	_cdc_trf_state,c
 10003  013FDC                     l8834:
 10004                           
 10005                           ;usb_device_cdc.c: 642: }
 10006                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 10007  013FDC  88A0               	bsf	4000,4,c	;volatile
 10008  013FDE  0012               	return		;funcret
 10009  013FE0                     __end_of_putUSBUSART:
 10010                           	opt stack 0
 10011                           tblptru	equ	0xFF8
 10012                           tblptrh	equ	0xFF7
 10013                           tblptrl	equ	0xFF6
 10014                           tablat	equ	0xFF5
 10015                           prodh	equ	0xFF4
 10016                           prodl	equ	0xFF3
 10017                           intcon	equ	0xFF2
 10018                           intcon2	equ	0xFF1
 10019                           indf0	equ	0xFEF
 10020                           postinc0	equ	0xFEE
 10021                           fsr0h	equ	0xFEA
 10022                           fsr0l	equ	0xFE9
 10023                           wreg	equ	0xFE8
 10024                           postinc1	equ	0xFE6
 10025                           postdec1	equ	0xFE5
 10026                           fsr1h	equ	0xFE2
 10027                           fsr1l	equ	0xFE1
 10028                           indf2	equ	0xFDF
 10029                           postinc2	equ	0xFDE
 10030                           postdec2	equ	0xFDD
 10031                           fsr2h	equ	0xFDA
 10032                           fsr2l	equ	0xFD9
 10033                           status	equ	0xFD8
 10034                           
 10035 ;; *************** function _get_string_usb *****************
 10036 ;; Defined at:
 10037 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  s               2   13[BANK0 ] PTR unsigned char 
 10040 ;;		 -> USB_task@data(1), 
 10041 ;;  len             2   15[BANK0 ] int 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  rx_len          2   18[BANK0 ] int 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  2   13[BANK0 ] int 
 10046 ;; Registers used:
 10047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10057 ;;Total ram usage:        7 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:   13
 10060 ;; This function calls:
 10061 ;;		_CDCTxService
 10062 ;;		_getsUSBUSART
 10063 ;;		_is_usb_available
 10064 ;; This function is called by:
 10065 ;;		_USB_task
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           	psect	text45
 10070  013B2A                     __ptext45:
 10071                           	opt stack 0
 10072  013B2A                     _get_string_usb:
 10073                           	opt stack 16
 10074                           
 10075                           ;My_usb_cdc.c: 33: int rx_len;
 10076                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 10077                           
 10078                           ;incstack = 0
 10079  013B2A  EC2D  F0A0         	call	_is_usb_available	;wreg free
 10080  013B2E  0900               	iorlw	0
 10081  013B30  A4D8               	btfss	status,2,c
 10082  013B32  D008               	goto	l9198
 10083                           
 10084                           ;My_usb_cdc.c: 36: return 0;
 10085  013B34  0E00               	movlw	0
 10086  013B36  0100               	movlb	0	; () banked
 10087  013B38  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 10088  013B3A  0E00               	movlw	0
 10089  013B3C  6F6D               	movwf	?_get_string_usb& (0+255),b
 10090                           
 10091                           ; BSR set to: 0
 10092  013B3E  0012               	return	
 10093  013B40                     l9196:
 10094  013B40  EC3A  F089         	call	_CDCTxService	;wreg free
 10095  013B44                     l9198:
 10096  013B44  5046               	movf	_cdc_trf_state,w,c
 10097  013B46  A4D8               	btfss	status,2,c
 10098  013B48  D7FB               	goto	l9196
 10099                           
 10100                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 10101  013B4A  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 10102  013B4E  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 10103  013B52  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 10104  013B56  EC03  F08F         	call	_getsUSBUSART	;wreg free
 10105  013B5A  0100               	movlb	0	; () banked
 10106  013B5C  6F71               	movwf	??_get_string_usb& (0+255),b
 10107  013B5E  0100               	movlb	0	; () banked
 10108  013B60  5171               	movf	??_get_string_usb& (0+255),w,b
 10109  013B62  0100               	movlb	0	; () banked
 10110  013B64  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 10111  013B66  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 10112                           
 10113                           ;My_usb_cdc.c: 40: CDCTxService();
 10114  013B68  EC3A  F089         	call	_CDCTxService	;wreg free
 10115                           
 10116                           ;My_usb_cdc.c: 41: return rx_len;
 10117  013B6C  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 10118  013B70  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 10119  013B74  0012               	return	
 10120  013B76                     __end_of_get_string_usb:
 10121                           	opt stack 0
 10122                           tblptru	equ	0xFF8
 10123                           tblptrh	equ	0xFF7
 10124                           tblptrl	equ	0xFF6
 10125                           tablat	equ	0xFF5
 10126                           prodh	equ	0xFF4
 10127                           prodl	equ	0xFF3
 10128                           intcon	equ	0xFF2
 10129                           intcon2	equ	0xFF1
 10130                           indf0	equ	0xFEF
 10131                           postinc0	equ	0xFEE
 10132                           fsr0h	equ	0xFEA
 10133                           fsr0l	equ	0xFE9
 10134                           wreg	equ	0xFE8
 10135                           postinc1	equ	0xFE6
 10136                           postdec1	equ	0xFE5
 10137                           fsr1h	equ	0xFE2
 10138                           fsr1l	equ	0xFE1
 10139                           indf2	equ	0xFDF
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           fsr2h	equ	0xFDA
 10143                           fsr2l	equ	0xFD9
 10144                           status	equ	0xFD8
 10145                           
 10146 ;; *************** function _is_usb_available *****************
 10147 ;; Defined at:
 10148 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;		None
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;		None
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      unsigned char 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10165 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10166 ;;Total ram usage:        1 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:   11
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_put_string_usb
 10173 ;;		_get_string_usb
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text46
 10178  01405A                     __ptext46:
 10179                           	opt stack 0
 10180  01405A                     _is_usb_available:
 10181                           	opt stack 17
 10182                           
 10183                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 10184                           
 10185                           ;incstack = 0
 10186  01405A  0E00               	movlw	0
 10187  01405C  0100               	movlb	0	; () banked
 10188  01405E  6F60               	movwf	_is_usb_available$5114& (0+255),b
 10189                           
 10190                           ; BSR set to: 0
 10191  014060  0E1F               	movlw	31
 10192  014062  6442               	cpfsgt	_USBDeviceState,c	;volatile
 10193  014064  D005               	goto	l1338
 10194                           
 10195                           ; BSR set to: 0
 10196  014066  B265               	btfsc	3941,1,c	;volatile
 10197  014068  D003               	goto	l1338
 10198                           
 10199                           ; BSR set to: 0
 10200  01406A  0E01               	movlw	1
 10201  01406C  0100               	movlb	0	; () banked
 10202  01406E  6F60               	movwf	_is_usb_available$5114& (0+255),b
 10203  014070                     l1338:
 10204                           
 10205                           ; BSR set to: 0
 10206  014070  0100               	movlb	0	; () banked
 10207  014072  5160               	movf	_is_usb_available$5114& (0+255),w,b
 10208  014074  0012               	return	
 10209  014076                     __end_of_is_usb_available:
 10210                           	opt stack 0
 10211                           tblptru	equ	0xFF8
 10212                           tblptrh	equ	0xFF7
 10213                           tblptrl	equ	0xFF6
 10214                           tablat	equ	0xFF5
 10215                           prodh	equ	0xFF4
 10216                           prodl	equ	0xFF3
 10217                           intcon	equ	0xFF2
 10218                           intcon2	equ	0xFF1
 10219                           indf0	equ	0xFEF
 10220                           postinc0	equ	0xFEE
 10221                           fsr0h	equ	0xFEA
 10222                           fsr0l	equ	0xFE9
 10223                           wreg	equ	0xFE8
 10224                           postinc1	equ	0xFE6
 10225                           postdec1	equ	0xFE5
 10226                           fsr1h	equ	0xFE2
 10227                           fsr1l	equ	0xFE1
 10228                           indf2	equ	0xFDF
 10229                           postinc2	equ	0xFDE
 10230                           postdec2	equ	0xFDD
 10231                           fsr2h	equ	0xFDA
 10232                           fsr2l	equ	0xFD9
 10233                           status	equ	0xFD8
 10234                           
 10235 ;; *************** function _getsUSBUSART *****************
 10236 ;; Defined at:
 10237 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10240 ;;		 -> USB_task@data(1), 
 10241 ;;  len             1    9[BANK0 ] unsigned char 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      unsigned char 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10253 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10254 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10256 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10257 ;;Total ram usage:        6 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:   12
 10260 ;; This function calls:
 10261 ;;		_USBTransferOnePacket
 10262 ;; This function is called by:
 10263 ;;		_get_string_usb
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text47
 10268  011E06                     __ptext47:
 10269                           	opt stack 0
 10270  011E06                     _getsUSBUSART:
 10271                           	opt stack 16
 10272                           
 10273                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;incstack = 0
 10277  011E06  0E00               	movlw	0
 10278  011E08  0100               	movlb	0	; () banked
 10279  011E0A  6FF7               	movwf	_cdc_rx_len& (0+255),b
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10283  011E0C  0100               	movlb	0	; () banked
 10284  011E0E  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10285  011E10  0100               	movlb	0	; () banked
 10286  011E12  11F3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10287  011E14  B4D8               	btfsc	status,2,c
 10288  011E16  D013               	goto	l8800
 10289                           
 10290                           ; BSR set to: 0
 10291  011E18  C0F2  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10292  011E1C  C0F3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10293  011E20  0100               	movlb	0	; () banked
 10294  011E22  AEDF               	btfss	indf2,7,c
 10295  011E24  D004               	goto	u8450
 10296  011E26  0100               	movlb	0	; () banked
 10297  011E28  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10298  011E2A  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 10299  011E2C  D002               	goto	u8458
 10300  011E2E                     u8450:
 10301  011E2E  0100               	movlb	0	; () banked
 10302  011E30  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10303  011E32                     u8458:
 10304  011E32  0100               	movlb	0	; () banked
 10305  011E34  516A               	movf	??_getsUSBUSART& (0+255),w,b
 10306  011E36  0100               	movlb	0	; () banked
 10307  011E38  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10308  011E3A  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 10309  011E3C  D005               	goto	l8802
 10310  011E3E                     l8800:
 10311                           
 10312                           ; BSR set to: 0
 10313  011E3E  0E00               	movlw	0
 10314  011E40  0100               	movlb	0	; () banked
 10315  011E42  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 10316  011E44  0E00               	movlw	0
 10317  011E46  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10318  011E48                     l8802:
 10319                           
 10320                           ; BSR set to: 0
 10321  011E48  0100               	movlb	0	; () banked
 10322  011E4A  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 10323  011E4C  0100               	movlb	0	; () banked
 10324  011E4E  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 10325  011E50  A4D8               	btfss	status,2,c
 10326  011E52  D04B               	goto	l8818
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;usb_device_cdc.c: 547: {
 10330                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10331  011E54  0100               	movlb	0	; () banked
 10332  011E56  EE20 F001          	lfsr	2,1
 10333  011E5A  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10334  011E5C  26D9               	addwf	fsr2l,f,c
 10335  011E5E  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10336  011E60  22DA               	addwfc	fsr2h,f,c
 10337  011E62  0100               	movlb	0	; () banked
 10338  011E64  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10339  011E66  5CDE               	subwf	postinc2,w,c
 10340  011E68  B0D8               	btfsc	status,0,c
 10341  011E6A  D00A               	goto	l8808
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10345  011E6C  0100               	movlb	0	; () banked
 10346  011E6E  EE20 F001          	lfsr	2,1
 10347  011E72  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10348  011E74  26D9               	addwf	fsr2l,f,c
 10349  011E76  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10350  011E78  22DA               	addwfc	fsr2h,f,c
 10351  011E7A  50DF               	movf	indf2,w,c
 10352  011E7C  0100               	movlb	0	; () banked
 10353  011E7E  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10354  011E80                     l8808:
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10358  011E80  0E00               	movlw	0
 10359  011E82  0100               	movlb	0	; () banked
 10360  011E84  6FF7               	movwf	_cdc_rx_len& (0+255),b
 10361  011E86  D018               	goto	l8814
 10362  011E88                     l8810:
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10366  011E88  0100               	movlb	0	; () banked
 10367  011E8A  51F7               	movf	_cdc_rx_len& (0+255),w,b
 10368  011E8C  0D01               	mullw	1
 10369  011E8E  0E00               	movlw	low _cdc_data_rx
 10370  011E90  24F3               	addwf	prodl,w,c
 10371  011E92  6ED9               	movwf	fsr2l,c
 10372  011E94  0E02               	movlw	high _cdc_data_rx
 10373  011E96  20F4               	addwfc	prodh,w,c
 10374  011E98  6EDA               	movwf	fsr2h,c
 10375  011E9A  0100               	movlb	0	; () banked
 10376  011E9C  51F7               	movf	_cdc_rx_len& (0+255),w,b
 10377  011E9E  0D01               	mullw	1
 10378  011EA0  50F3               	movf	prodl,w,c
 10379  011EA2  0100               	movlb	0	; () banked
 10380  011EA4  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10381  011EA6  6EE1               	movwf	fsr1l,c
 10382  011EA8  50F4               	movf	prodh,w,c
 10383  011EAA  0100               	movlb	0	; () banked
 10384  011EAC  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10385  011EAE  6EE2               	movwf	fsr1h,c
 10386  011EB0  CFDF FFE7          	movff	indf2,indf1
 10387                           
 10388                           ; BSR set to: 0
 10389  011EB4  0100               	movlb	0	; () banked
 10390  011EB6  2BF7               	incf	_cdc_rx_len& (0+255),f,b
 10391  011EB8                     l8814:
 10392                           
 10393                           ; BSR set to: 0
 10394  011EB8  0100               	movlb	0	; () banked
 10395  011EBA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10396  011EBC  0100               	movlb	0	; () banked
 10397  011EBE  5DF7               	subwf	_cdc_rx_len& (0+255),w,b
 10398  011EC0  A0D8               	btfss	status,0,c
 10399  011EC2  D7E2               	goto	l8810
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10403                           
 10404                           ; BSR set to: 0
 10405  011EC4  0E00               	movlw	0
 10406  011EC6  0100               	movlb	0	; () banked
 10407  011EC8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10408  011ECA  0E00               	movlw	low _cdc_data_rx
 10409  011ECC  0100               	movlb	0	; () banked
 10410  011ECE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10411  011ED0  0E02               	movlw	high _cdc_data_rx
 10412  011ED2  0100               	movlb	0	; () banked
 10413  011ED4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10414  011ED6  0E40               	movlw	64
 10415  011ED8  0100               	movlb	0	; () banked
 10416  011EDA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10417  011EDC  0E02               	movlw	2
 10418  011EDE  ECC7  F090         	call	_USBTransferOnePacket
 10419  011EE2  C060  F0F2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10420  011EE6  C061  F0F3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10421  011EEA                     l8818:
 10422                           
 10423                           ;usb_device_cdc.c: 567: }
 10424                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 10425  011EEA  0100               	movlb	0	; () banked
 10426  011EEC  51F7               	movf	_cdc_rx_len& (0+255),w,b
 10427  011EEE  0012               	return	
 10428  011EF0                     __end_of_getsUSBUSART:
 10429                           	opt stack 0
 10430                           tblptru	equ	0xFF8
 10431                           tblptrh	equ	0xFF7
 10432                           tblptrl	equ	0xFF6
 10433                           tablat	equ	0xFF5
 10434                           prodh	equ	0xFF4
 10435                           prodl	equ	0xFF3
 10436                           intcon	equ	0xFF2
 10437                           intcon2	equ	0xFF1
 10438                           indf0	equ	0xFEF
 10439                           postinc0	equ	0xFEE
 10440                           fsr0h	equ	0xFEA
 10441                           fsr0l	equ	0xFE9
 10442                           wreg	equ	0xFE8
 10443                           indf1	equ	0xFE7
 10444                           postinc1	equ	0xFE6
 10445                           postdec1	equ	0xFE5
 10446                           fsr1h	equ	0xFE2
 10447                           fsr1l	equ	0xFE1
 10448                           indf2	equ	0xFDF
 10449                           postinc2	equ	0xFDE
 10450                           postdec2	equ	0xFDD
 10451                           fsr2h	equ	0xFDA
 10452                           fsr2l	equ	0xFD9
 10453                           status	equ	0xFD8
 10454                           
 10455 ;; *************** function _CDCTxService *****************
 10456 ;; Defined at:
 10457 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;		None
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 10462 ;;  i               1   10[BANK0 ] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;		None               void
 10465 ;; Registers used:
 10466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10473 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10474 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10476 ;;Total ram usage:        5 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:   12
 10479 ;; This function calls:
 10480 ;;		_USBTransferOnePacket
 10481 ;; This function is called by:
 10482 ;;		_put_string_usb
 10483 ;;		_get_string_usb
 10484 ;; This function uses a non-reentrant model
 10485 ;;
 10486                           
 10487                           	psect	text48
 10488  011274                     __ptext48:
 10489                           	opt stack 0
 10490  011274                     _CDCTxService:
 10491                           	opt stack 16
 10492                           
 10493                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 10494                           ;usb_device_cdc.c: 896: uint8_t i;
 10495                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;incstack = 0
 10499  011274  98A0               	bcf	4000,4,c	;volatile
 10500                           
 10501                           ;usb_device_cdc.c: 900: {};
 10502                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 10503  011276  0100               	movlb	0	; () banked
 10504  011278  51F0               	movf	_CDCDataInHandle& (0+255),w,b
 10505  01127A  0100               	movlb	0	; () banked
 10506  01127C  11F1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 10507  01127E  B4D8               	btfsc	status,2,c
 10508  011280  D013               	goto	l8842
 10509                           
 10510                           ; BSR set to: 0
 10511  011282  C0F0  FFD9         	movff	_CDCDataInHandle,fsr2l
 10512  011286  C0F1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 10513  01128A  0100               	movlb	0	; () banked
 10514  01128C  AEDF               	btfss	indf2,7,c
 10515  01128E  D004               	goto	u8510
 10516  011290  0100               	movlb	0	; () banked
 10517  011292  6B67               	clrf	??_CDCTxService& (0+255),b
 10518  011294  2B67               	incf	??_CDCTxService& (0+255),f,b
 10519  011296  D002               	goto	u8518
 10520  011298                     u8510:
 10521  011298  0100               	movlb	0	; () banked
 10522  01129A  6B67               	clrf	??_CDCTxService& (0+255),b
 10523  01129C                     u8518:
 10524  01129C  0100               	movlb	0	; () banked
 10525  01129E  5167               	movf	??_CDCTxService& (0+255),w,b
 10526  0112A0  0100               	movlb	0	; () banked
 10527  0112A2  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10528  0112A4  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 10529  0112A6  D005               	goto	l8844
 10530  0112A8                     l8842:
 10531                           
 10532                           ; BSR set to: 0
 10533  0112A8  0E00               	movlw	0
 10534  0112AA  0100               	movlb	0	; () banked
 10535  0112AC  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 10536  0112AE  0E00               	movlw	0
 10537  0112B0  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10538  0112B2                     l8844:
 10539                           
 10540                           ; BSR set to: 0
 10541  0112B2  0100               	movlb	0	; () banked
 10542  0112B4  5168               	movf	_CDCTxService$2005& (0+255),w,b
 10543  0112B6  0100               	movlb	0	; () banked
 10544  0112B8  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 10545  0112BA  B4D8               	btfsc	status,2,c
 10546  0112BC  D002               	goto	l8848
 10547                           
 10548                           ; BSR set to: 0
 10549                           ;usb_device_cdc.c: 903: {
 10550                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 10551  0112BE  88A0               	bsf	4000,4,c	;volatile
 10552                           
 10553                           ;usb_device_cdc.c: 905: return;
 10554  0112C0  0012               	return	
 10555  0112C2                     l8848:
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;usb_device_cdc.c: 906: }
 10559                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 10560  0112C2  0E03               	movlw	3
 10561  0112C4  1846               	xorwf	_cdc_trf_state,w,c
 10562  0112C6  A4D8               	btfss	status,2,c
 10563  0112C8  D002               	goto	l504
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 10567  0112CA  0E00               	movlw	0
 10568  0112CC  6E46               	movwf	_cdc_trf_state,c
 10569  0112CE                     l504:
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 10573  0112CE  5046               	movf	_cdc_trf_state,w,c
 10574  0112D0  A4D8               	btfss	status,2,c
 10575  0112D2  D002               	goto	l8854
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;usb_device_cdc.c: 920: {
 10579                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 10580  0112D4  88A0               	bsf	4000,4,c	;volatile
 10581                           
 10582                           ;usb_device_cdc.c: 922: return;
 10583  0112D6  0012               	return	
 10584  0112D8                     l8854:
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;usb_device_cdc.c: 923: }
 10588                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 10589  0112D8  0E02               	movlw	2
 10590  0112DA  1846               	xorwf	_cdc_trf_state,w,c
 10591  0112DC  A4D8               	btfss	status,2,c
 10592  0112DE  D016               	goto	l8860
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;usb_device_cdc.c: 929: {
 10596                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 10597  0112E0  0E01               	movlw	1
 10598  0112E2  0100               	movlb	0	; () banked
 10599  0112E4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10600  0112E6  0E00               	movlw	0
 10601  0112E8  0100               	movlb	0	; () banked
 10602  0112EA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10603  0112EC  0E00               	movlw	0
 10604  0112EE  0100               	movlb	0	; () banked
 10605  0112F0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10606  0112F2  0E00               	movlw	0
 10607  0112F4  0100               	movlb	0	; () banked
 10608  0112F6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10609  0112F8  0E02               	movlw	2
 10610  0112FA  ECC7  F090         	call	_USBTransferOnePacket
 10611  0112FE  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10612  011302  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10613                           
 10614                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 10615  011306  0E03               	movlw	3
 10616  011308  6E46               	movwf	_cdc_trf_state,c
 10617                           
 10618                           ;usb_device_cdc.c: 933: }
 10619  01130A  D06F               	goto	l8904
 10620  01130C                     l8860:
 10621                           
 10622                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 10623  01130C  0446               	decf	_cdc_trf_state,w,c
 10624  01130E  A4D8               	btfss	status,2,c
 10625  011310  D06C               	goto	l8904
 10626                           
 10627                           ;usb_device_cdc.c: 935: {
 10628                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 10629  011312  0E40               	movlw	64
 10630  011314  0100               	movlb	0	; () banked
 10631  011316  65F8               	cpfsgt	_cdc_tx_len& (0+255),b
 10632  011318  D004               	goto	l509
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 10636  01131A  0E40               	movlw	64
 10637  01131C  0100               	movlb	0	; () banked
 10638  01131E  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 10639  011320  D002               	goto	l8866
 10640  011322                     l509:
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;usb_device_cdc.c: 941: else
 10644                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 10645  011322  C0F8  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 10646  011326                     l8866:
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 10650  011326  0100               	movlb	0	; () banked
 10651  011328  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 10652  01132A  0800               	sublw	0
 10653  01132C  0100               	movlb	0	; () banked
 10654  01132E  25F8               	addwf	_cdc_tx_len& (0+255),w,b
 10655  011330  0100               	movlb	0	; () banked
 10656  011332  6FF8               	movwf	_cdc_tx_len& (0+255),b
 10657                           
 10658                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 10659  011334  0E40               	movlw	low _cdc_data_tx
 10660  011336  0100               	movlb	0	; () banked
 10661  011338  6FEA               	movwf	_pCDCDst& (0+255),b
 10662  01133A  0E02               	movlw	high _cdc_data_tx
 10663  01133C  0100               	movlb	0	; () banked
 10664  01133E  6FEB               	movwf	(_pCDCDst+1)& (0+255),b
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;usb_device_cdc.c: 951: i = byte_to_send;
 10668  011340  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 10672  011344  0100               	movlb	0	; () banked
 10673  011346  51F6               	movf	_cdc_mem_type& (0+255),w,b
 10674  011348  B4D8               	btfsc	status,2,c
 10675  01134A  D013               	goto	l8882
 10676  01134C  D02A               	goto	l8892
 10677  01134E                     l8874:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;usb_device_cdc.c: 955: {
 10681                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 10682  01134E  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 10683  011352  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 10684  011356  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 10685  01135A  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 10686  01135E  CFDF FFE7          	movff	indf2,indf1
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 10690  011362  0100               	movlb	0	; () banked
 10691  011364  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 10692  011366  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 10696  011368  0100               	movlb	0	; () banked
 10697  01136A  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 10698  01136C  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;usb_device_cdc.c: 959: i--;
 10702  01136E  0100               	movlb	0	; () banked
 10703  011370  076A               	decf	CDCTxService@i& (0+255),f,b
 10704  011372                     l8882:
 10705                           
 10706                           ; BSR set to: 0
 10707  011372  0100               	movlb	0	; () banked
 10708  011374  516A               	movf	CDCTxService@i& (0+255),w,b
 10709  011376  0100               	movlb	0	; () banked
 10710  011378  B4D8               	btfsc	status,2,c
 10711  01137A  D018               	goto	l8894
 10712  01137C  D7E8               	goto	l8874
 10713  01137E                     l8884:
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;usb_device_cdc.c: 965: {
 10717                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 10718  01137E  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 10719  011382  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 10720  011386  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 10721  01138A  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 10722  01138E  CFDF FFE7          	movff	indf2,indf1
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 10726  011392  0100               	movlb	0	; () banked
 10727  011394  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 10728  011396  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 10732  011398  0100               	movlb	0	; () banked
 10733  01139A  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 10734  01139C  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;usb_device_cdc.c: 969: i--;
 10738  01139E  0100               	movlb	0	; () banked
 10739  0113A0  076A               	decf	CDCTxService@i& (0+255),f,b
 10740  0113A2                     l8892:
 10741                           
 10742                           ; BSR set to: 0
 10743  0113A2  0100               	movlb	0	; () banked
 10744  0113A4  516A               	movf	CDCTxService@i& (0+255),w,b
 10745  0113A6  0100               	movlb	0	; () banked
 10746  0113A8  A4D8               	btfss	status,2,c
 10747  0113AA  D7E9               	goto	l8884
 10748  0113AC                     l8894:
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;usb_device_cdc.c: 970: }
 10752                           ;usb_device_cdc.c: 971: }
 10753                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 10754  0113AC  0100               	movlb	0	; () banked
 10755  0113AE  51F8               	movf	_cdc_tx_len& (0+255),w,b
 10756  0113B0  A4D8               	btfss	status,2,c
 10757  0113B2  D009               	goto	l8902
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;usb_device_cdc.c: 978: {
 10761                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 10762  0113B4  0E40               	movlw	64
 10763  0113B6  0100               	movlb	0	; () banked
 10764  0113B8  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 10765  0113BA  A4D8               	btfss	status,2,c
 10766  0113BC  D002               	goto	l8900
 10767                           
 10768                           ; BSR set to: 0
 10769                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 10770  0113BE  0E02               	movlw	2
 10771  0113C0  D001               	goto	L1
 10772  0113C2                     l8900:
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;usb_device_cdc.c: 981: else
 10776                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 10777  0113C2  0E03               	movlw	3
 10778  0113C4                     L1:
 10779  0113C4  6E46               	movwf	_cdc_trf_state,c
 10780  0113C6                     l8902:
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;usb_device_cdc.c: 983: }
 10784                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 10785  0113C6  0E01               	movlw	1
 10786  0113C8  0100               	movlb	0	; () banked
 10787  0113CA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10788  0113CC  0E40               	movlw	low _cdc_data_tx
 10789  0113CE  0100               	movlb	0	; () banked
 10790  0113D0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10791  0113D2  0E02               	movlw	high _cdc_data_tx
 10792  0113D4  0100               	movlb	0	; () banked
 10793  0113D6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10794  0113D8  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 10795  0113DC  0E02               	movlw	2
 10796  0113DE  ECC7  F090         	call	_USBTransferOnePacket
 10797  0113E2  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10798  0113E6  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10799  0113EA                     l8904:
 10800                           
 10801                           ;usb_device_cdc.c: 986: }
 10802                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 10803  0113EA  88A0               	bsf	4000,4,c	;volatile
 10804  0113EC  0012               	return		;funcret
 10805  0113EE                     __end_of_CDCTxService:
 10806                           	opt stack 0
 10807                           tblptru	equ	0xFF8
 10808                           tblptrh	equ	0xFF7
 10809                           tblptrl	equ	0xFF6
 10810                           tablat	equ	0xFF5
 10811                           prodh	equ	0xFF4
 10812                           prodl	equ	0xFF3
 10813                           intcon	equ	0xFF2
 10814                           intcon2	equ	0xFF1
 10815                           indf0	equ	0xFEF
 10816                           postinc0	equ	0xFEE
 10817                           fsr0h	equ	0xFEA
 10818                           fsr0l	equ	0xFE9
 10819                           wreg	equ	0xFE8
 10820                           indf1	equ	0xFE7
 10821                           postinc1	equ	0xFE6
 10822                           postdec1	equ	0xFE5
 10823                           fsr1h	equ	0xFE2
 10824                           fsr1l	equ	0xFE1
 10825                           indf2	equ	0xFDF
 10826                           postinc2	equ	0xFDE
 10827                           postdec2	equ	0xFDD
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8
 10831                           
 10832 ;; *************** function _USBTransferOnePacket *****************
 10833 ;; Defined at:
 10834 ;;		line 995 in file "../My_library/usb/usb_device.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  ep              1    wreg     unsigned char 
 10837 ;;  dir             1    0[BANK0 ] unsigned char 
 10838 ;;  data            2    1[BANK0 ] PTR unsigned char 
 10839 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 10840 ;;  len             1    3[BANK0 ] unsigned char 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  ep              1    4[BANK0 ] unsigned char 
 10843 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 10844 ;;		 -> NULL(0), BDT(48), 
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  2    0[BANK0 ] PTR void 
 10847 ;; Registers used:
 10848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10854 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10855 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10857 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10858 ;;Total ram usage:        7 bytes
 10859 ;; Hardware stack levels used:    1
 10860 ;; Hardware stack levels required when called:   11
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_getsUSBUSART
 10865 ;;		_CDCTxService
 10866 ;;		_USBCDCEventHandler
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           	psect	text49
 10871  01218E                     __ptext49:
 10872                           	opt stack 0
 10873  01218E                     _USBTransferOnePacket:
 10874                           	opt stack 16
 10875                           
 10876                           ;incstack = 0
 10877                           ;USBTransferOnePacket@ep stored from wreg
 10878  01218E  0100               	movlb	0	; () banked
 10879  012190  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 10880                           
 10881                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 10882                           ;usb_device.c: 1000: if(dir != 0)
 10883  012192  0100               	movlb	0	; () banked
 10884  012194  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 10885  012196  0100               	movlb	0	; () banked
 10886  012198  B4D8               	btfsc	status,2,c
 10887  01219A  D008               	goto	l8624
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;usb_device.c: 1001: {
 10891                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 10892  01219C  0100               	movlb	0	; () banked
 10893  01219E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 10894  0121A0  0D02               	mullw	2
 10895  0121A2  0ED8               	movlw	low _pBDTEntryIn
 10896  0121A4  24F3               	addwf	prodl,w,c
 10897  0121A6  6ED9               	movwf	fsr2l,c
 10898  0121A8  0E00               	movlw	high _pBDTEntryIn
 10899  0121AA  D007               	goto	L2
 10900  0121AC                     l8624:
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;usb_device.c: 1005: else
 10904                           ;usb_device.c: 1006: {
 10905                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 10906  0121AC  0100               	movlb	0	; () banked
 10907  0121AE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 10908  0121B0  0D02               	mullw	2
 10909  0121B2  0EDE               	movlw	low _pBDTEntryOut
 10910  0121B4  24F3               	addwf	prodl,w,c
 10911  0121B6  6ED9               	movwf	fsr2l,c
 10912  0121B8  0E00               	movlw	high _pBDTEntryOut
 10913  0121BA                     L2:
 10914  0121BA  20F4               	addwfc	prodh,w,c
 10915  0121BC  6EDA               	movwf	fsr2h,c
 10916  0121BE  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 10917  0121C2  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;usb_device.c: 1009: }
 10921                           ;usb_device.c: 1013: if(handle == 0)
 10922                           
 10923                           ; BSR set to: 0
 10924  0121C6  0100               	movlb	0	; () banked
 10925  0121C8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 10926  0121CA  0100               	movlb	0	; () banked
 10927  0121CC  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 10928  0121CE  A4D8               	btfss	status,2,c
 10929  0121D0  D007               	goto	l8632
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;usb_device.c: 1014: {
 10933                           ;usb_device.c: 1015: return 0;
 10934  0121D2  0E00               	movlw	0
 10935  0121D4  0100               	movlb	0	; () banked
 10936  0121D6  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 10937  0121D8  0E00               	movlw	0
 10938  0121DA  0100               	movlb	0	; () banked
 10939  0121DC  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 10940                           
 10941                           ; BSR set to: 0
 10942  0121DE  0012               	return	
 10943  0121E0                     l8632:
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;usb_device.c: 1016: }
 10947                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 10948  0121E0  0100               	movlb	0	; () banked
 10949  0121E2  EE20 F002          	lfsr	2,2
 10950  0121E6  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 10951  0121E8  26D9               	addwf	fsr2l,f,c
 10952  0121EA  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 10953  0121EC  22DA               	addwfc	fsr2h,f,c
 10954  0121EE  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 10955  0121F2  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 10956                           
 10957                           ;usb_device.c: 1030: handle->CNT = len;
 10958  0121F6  0100               	movlb	0	; () banked
 10959  0121F8  EE20 F001          	lfsr	2,1
 10960  0121FC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 10961  0121FE  26D9               	addwf	fsr2l,f,c
 10962  012200  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 10963  012202  22DA               	addwfc	fsr2h,f,c
 10964  012204  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 10968  012208  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 10969  01220C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 10970  012210  0E40               	movlw	64
 10971  012212  16DF               	andwf	indf2,f,c
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 10975  012214  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 10976  012218  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 10977  01221C  0E00               	movlw	0
 10978  01221E  86DB               	bsf	plusw2,3,c
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 10982  012220  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 10983  012224  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 10984  012228  0E00               	movlw	0
 10985  01222A  8EDB               	bsf	plusw2,7,c
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;usb_device.c: 1036: if(dir != 0)
 10989  01222C  0100               	movlb	0	; () banked
 10990  01222E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 10991  012230  0100               	movlb	0	; () banked
 10992  012232  B4D8               	btfsc	status,2,c
 10993  012234  D008               	goto	l8644
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;usb_device.c: 1037: {
 10997                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 10998  012236  0100               	movlb	0	; () banked
 10999  012238  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11000  01223A  0D02               	mullw	2
 11001  01223C  0ED8               	movlw	low _pBDTEntryIn
 11002  01223E  24F3               	addwf	prodl,w,c
 11003  012240  6ED9               	movwf	fsr2l,c
 11004  012242  0E00               	movlw	high _pBDTEntryIn
 11005  012244  D007               	goto	L3
 11006  012246                     l8644:
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;usb_device.c: 1041: else
 11010                           ;usb_device.c: 1042: {
 11011                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11012  012246  0100               	movlb	0	; () banked
 11013  012248  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11014  01224A  0D02               	mullw	2
 11015  01224C  0EDE               	movlw	low _pBDTEntryOut
 11016  01224E  24F3               	addwf	prodl,w,c
 11017  012250  6ED9               	movwf	fsr2l,c
 11018  012252  0E00               	movlw	high _pBDTEntryOut
 11019  012254                     L3:
 11020  012254  20F4               	addwfc	prodh,w,c
 11021  012256  6EDA               	movwf	fsr2h,c
 11022  012258  0E04               	movlw	4
 11023  01225A  1ADF               	xorwf	indf2,f,c
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;usb_device.c: 1045: }
 11027                           ;usb_device.c: 1046: return (void*)handle;
 11028                           
 11029                           ; BSR set to: 0
 11030  01225C  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11031  012260  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11032  012264  0012               	return	
 11033  012266                     __end_of_USBTransferOnePacket:
 11034                           	opt stack 0
 11035                           tblptru	equ	0xFF8
 11036                           tblptrh	equ	0xFF7
 11037                           tblptrl	equ	0xFF6
 11038                           tablat	equ	0xFF5
 11039                           prodh	equ	0xFF4
 11040                           prodl	equ	0xFF3
 11041                           intcon	equ	0xFF2
 11042                           intcon2	equ	0xFF1
 11043                           indf0	equ	0xFEF
 11044                           postinc0	equ	0xFEE
 11045                           fsr0h	equ	0xFEA
 11046                           fsr0l	equ	0xFE9
 11047                           wreg	equ	0xFE8
 11048                           indf1	equ	0xFE7
 11049                           postinc1	equ	0xFE6
 11050                           postdec1	equ	0xFE5
 11051                           fsr1h	equ	0xFE2
 11052                           fsr1l	equ	0xFE1
 11053                           indf2	equ	0xFDF
 11054                           postinc2	equ	0xFDE
 11055                           postdec2	equ	0xFDD
 11056                           plusw2	equ	0xFDB
 11057                           fsr2h	equ	0xFDA
 11058                           fsr2l	equ	0xFD9
 11059                           status	equ	0xFD8
 11060                           
 11061 ;; *************** function _UART_task *****************
 11062 ;; Defined at:
 11063 ;;		line 43 in file "../My_library/My_UART.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;		None               void
 11070 ;; Registers used:
 11071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11081 ;;Total ram usage:        0 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:   12
 11084 ;; This function calls:
 11085 ;;		_ringbuf_num
 11086 ;; This function is called by:
 11087 ;;		_main
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           	psect	text50
 11092  013FE0                     __ptext50:
 11093                           	opt stack 0
 11094  013FE0                     _UART_task:
 11095                           	opt stack 18
 11096                           
 11097                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;incstack = 0
 11101  013FE0  0E64               	movlw	low _uart_tx
 11102  013FE2  0100               	movlb	0	; () banked
 11103  013FE4  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11104  013FE6  0E01               	movlw	high _uart_tx
 11105  013FE8  0100               	movlb	0	; () banked
 11106  013FEA  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11107  013FEC  EC8C  F08E         	call	_ringbuf_num	;wreg free
 11108  013FF0  0100               	movlb	0	; () banked
 11109  013FF2  5160               	movf	?_ringbuf_num& (0+255),w,b
 11110  013FF4  0100               	movlb	0	; () banked
 11111  013FF6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11112  013FF8  B4D8               	btfsc	status,2,c
 11113  013FFA  0012               	return	
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 11117  013FFC  889D               	bsf	3997,4,c	;volatile
 11118  013FFE  0012               	return	
 11119  014000                     __end_of_UART_task:
 11120                           	opt stack 0
 11121                           tblptru	equ	0xFF8
 11122                           tblptrh	equ	0xFF7
 11123                           tblptrl	equ	0xFF6
 11124                           tablat	equ	0xFF5
 11125                           prodh	equ	0xFF4
 11126                           prodl	equ	0xFF3
 11127                           intcon	equ	0xFF2
 11128                           intcon2	equ	0xFF1
 11129                           indf0	equ	0xFEF
 11130                           postinc0	equ	0xFEE
 11131                           fsr0h	equ	0xFEA
 11132                           fsr0l	equ	0xFE9
 11133                           wreg	equ	0xFE8
 11134                           indf1	equ	0xFE7
 11135                           postinc1	equ	0xFE6
 11136                           postdec1	equ	0xFE5
 11137                           fsr1h	equ	0xFE2
 11138                           fsr1l	equ	0xFE1
 11139                           indf2	equ	0xFDF
 11140                           postinc2	equ	0xFDE
 11141                           postdec2	equ	0xFDD
 11142                           plusw2	equ	0xFDB
 11143                           fsr2h	equ	0xFDA
 11144                           fsr2l	equ	0xFD9
 11145                           status	equ	0xFD8
 11146                           
 11147 ;; *************** function _ringbuf_num *****************
 11148 ;; Defined at:
 11149 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11152 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 11153 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;		None
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  2    0[BANK0 ] unsigned int 
 11158 ;; Registers used:
 11159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11167 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11169 ;;Total ram usage:        8 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:   11
 11172 ;; This function calls:
 11173 ;;		Nothing
 11174 ;; This function is called by:
 11175 ;;		_ringbuf_put
 11176 ;;		_ringbuf_pop
 11177 ;;		_ringbuf_backspace
 11178 ;;		_terminal_task
 11179 ;;		_UART_task
 11180 ;;		_USB_task
 11181 ;;		_ST7032_task
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185                           	psect	text51
 11186  011D18                     __ptext51:
 11187                           	opt stack 0
 11188  011D18                     _ringbuf_num:
 11189                           	opt stack 13
 11190                           
 11191                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;incstack = 0
 11195  011D18  0100               	movlb	0	; () banked
 11196  011D1A  EE20 F006          	lfsr	2,6
 11197  011D1E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11198  011D20  26D9               	addwf	fsr2l,f,c
 11199  011D22  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11200  011D24  22DA               	addwfc	fsr2h,f,c
 11201  011D26  0100               	movlb	0	; () banked
 11202  011D28  EE10 F004          	lfsr	1,4
 11203  011D2C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11204  011D2E  26E1               	addwf	fsr1l,f,c
 11205  011D30  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11206  011D32  22E2               	addwfc	fsr1h,f,c
 11207  011D34  50DE               	movf	postinc2,w,c
 11208  011D36  5CE6               	subwf	postinc1,w,c
 11209  011D38  50DE               	movf	postinc2,w,c
 11210  011D3A  58E6               	subwfb	postinc1,w,c
 11211  011D3C  A0D8               	btfss	status,0,c
 11212  011D3E  D028               	goto	l8122
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11216  011D40  0100               	movlb	0	; () banked
 11217  011D42  EE20 F004          	lfsr	2,4
 11218  011D46  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11219  011D48  26D9               	addwf	fsr2l,f,c
 11220  011D4A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11221  011D4C  22DA               	addwfc	fsr2h,f,c
 11222  011D4E  CFDE F062          	movff	postinc2,??_ringbuf_num
 11223  011D52  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11224  011D56  0100               	movlb	0	; () banked
 11225  011D58  EE20 F006          	lfsr	2,6
 11226  011D5C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11227  011D5E  26D9               	addwf	fsr2l,f,c
 11228  011D60  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11229  011D62  22DA               	addwfc	fsr2h,f,c
 11230  011D64  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11231  011D68  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11232  011D6C  0100               	movlb	0	; () banked
 11233  011D6E  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11234  011D70  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11235  011D72  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11236  011D74  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11237  011D76  0100               	movlb	0	; () banked
 11238  011D78  5162               	movf	??_ringbuf_num& (0+255),w,b
 11239  011D7A  0100               	movlb	0	; () banked
 11240  011D7C  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11241  011D7E  0100               	movlb	0	; () banked
 11242  011D80  6F60               	movwf	?_ringbuf_num& (0+255),b
 11243  011D82  0100               	movlb	0	; () banked
 11244  011D84  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11245  011D86  0100               	movlb	0	; () banked
 11246  011D88  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11247  011D8A  0100               	movlb	0	; () banked
 11248  011D8C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;My_ringbuf.c: 15: } else {
 11252                           
 11253                           ; BSR set to: 0
 11254  011D8E  0012               	return	
 11255  011D90                     l8122:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11259  011D90  0100               	movlb	0	; () banked
 11260  011D92  EE20 F004          	lfsr	2,4
 11261  011D96  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11262  011D98  26D9               	addwf	fsr2l,f,c
 11263  011D9A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11264  011D9C  22DA               	addwfc	fsr2h,f,c
 11265  011D9E  CFDE F062          	movff	postinc2,??_ringbuf_num
 11266  011DA2  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11267  011DA6  0100               	movlb	0	; () banked
 11268  011DA8  EE20 F002          	lfsr	2,2
 11269  011DAC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11270  011DAE  26D9               	addwf	fsr2l,f,c
 11271  011DB0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11272  011DB2  22DA               	addwfc	fsr2h,f,c
 11273  011DB4  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11274  011DB8  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11275  011DBC  0100               	movlb	0	; () banked
 11276  011DBE  EE20 F006          	lfsr	2,6
 11277  011DC2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11278  011DC4  26D9               	addwf	fsr2l,f,c
 11279  011DC6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11280  011DC8  22DA               	addwfc	fsr2h,f,c
 11281  011DCA  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 11282  011DCE  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 11283  011DD2  0100               	movlb	0	; () banked
 11284  011DD4  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 11285  011DD6  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 11286  011DD8  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 11287  011DDA  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 11288  011DDC  0100               	movlb	0	; () banked
 11289  011DDE  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 11290  011DE0  0100               	movlb	0	; () banked
 11291  011DE2  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 11292  011DE4  0100               	movlb	0	; () banked
 11293  011DE6  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 11294  011DE8  0100               	movlb	0	; () banked
 11295  011DEA  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 11296  011DEC  0100               	movlb	0	; () banked
 11297  011DEE  5162               	movf	??_ringbuf_num& (0+255),w,b
 11298  011DF0  0100               	movlb	0	; () banked
 11299  011DF2  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 11300  011DF4  0100               	movlb	0	; () banked
 11301  011DF6  6F60               	movwf	?_ringbuf_num& (0+255),b
 11302  011DF8  0100               	movlb	0	; () banked
 11303  011DFA  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11304  011DFC  0100               	movlb	0	; () banked
 11305  011DFE  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 11306  011E00  0100               	movlb	0	; () banked
 11307  011E02  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11308                           
 11309                           ; BSR set to: 0
 11310  011E04  0012               	return	
 11311  011E06                     __end_of_ringbuf_num:
 11312                           	opt stack 0
 11313                           tblptru	equ	0xFF8
 11314                           tblptrh	equ	0xFF7
 11315                           tblptrl	equ	0xFF6
 11316                           tablat	equ	0xFF5
 11317                           prodh	equ	0xFF4
 11318                           prodl	equ	0xFF3
 11319                           intcon	equ	0xFF2
 11320                           intcon2	equ	0xFF1
 11321                           indf0	equ	0xFEF
 11322                           postinc0	equ	0xFEE
 11323                           fsr0h	equ	0xFEA
 11324                           fsr0l	equ	0xFE9
 11325                           wreg	equ	0xFE8
 11326                           indf1	equ	0xFE7
 11327                           postinc1	equ	0xFE6
 11328                           postdec1	equ	0xFE5
 11329                           fsr1h	equ	0xFE2
 11330                           fsr1l	equ	0xFE1
 11331                           indf2	equ	0xFDF
 11332                           postinc2	equ	0xFDE
 11333                           postdec2	equ	0xFDD
 11334                           plusw2	equ	0xFDB
 11335                           fsr2h	equ	0xFDA
 11336                           fsr2l	equ	0xFD9
 11337                           status	equ	0xFD8
 11338                           
 11339 ;; *************** function _RTCC_task *****************
 11340 ;; Defined at:
 11341 ;;		line 352 in file "../My_library/My_RTCC.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;		None
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;		None               void
 11348 ;; Registers used:
 11349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11359 ;;Total ram usage:        0 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:   15
 11362 ;; This function calls:
 11363 ;;		_RTCC_from_RTCC
 11364 ;; This function is called by:
 11365 ;;		_main
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text52
 11370  013C06                     __ptext52:
 11371                           	opt stack 0
 11372  013C06                     _RTCC_task:
 11373                           	opt stack 15
 11374                           
 11375                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 11376                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 11377                           
 11378                           ; BSR set to: 0
 11379                           ;incstack = 0
 11380  013C06  010F               	movlb	15	; () banked
 11381  013C08  B93F               	btfsc	63,4,b	;volatile
 11382  013C0A  0012               	return	
 11383                           
 11384                           ; BSR set to: 15
 11385                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 11386                           
 11387                           ; BSR set to: 15
 11388                           
 11389                           ; BSR set to: 15
 11390  013C0C  0E00               	movlw	0
 11391  013C0E  B73F               	btfsc	63,3,b	;volatile
 11392  013C10  0E01               	movlw	1
 11393  013C12  0101               	movlb	1	; () banked
 11394  013C14  6F52               	movwf	(_now+12)& (0+255),b
 11395                           
 11396                           ; BSR set to: 1
 11397                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 11398  013C16  0100               	movlb	0	; () banked
 11399  013C18  51F4               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 11400  013C1A  0101               	movlb	1	; () banked
 11401  013C1C  1952               	xorwf	(_now+12)& (0+255),w,b
 11402  013C1E  B4D8               	btfsc	status,2,c
 11403  013C20  0012               	return	
 11404                           
 11405                           ; BSR set to: 1
 11406                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 11407  013C22  C152  F0F4         	movff	_now+12,RTCC_task@prev_halfsec
 11408                           
 11409                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 11410  013C26  C152  F151         	movff	_now+12,_now+11
 11411                           
 11412                           ; BSR set to: 1
 11413                           ;My_RTCC.c: 359: time_change_flag = 1;
 11414  013C2A  0E01               	movlw	1
 11415  013C2C  0100               	movlb	0	; () banked
 11416  013C2E  6FF9               	movwf	_time_change_flag& (0+255),b
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 11420  013C30  0E46               	movlw	low _now
 11421  013C32  0100               	movlb	0	; () banked
 11422  013C34  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 11423  013C36  0E01               	movlw	high _now
 11424  013C38  0100               	movlb	0	; () banked
 11425  013C3A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 11426  013C3C  EC63  F0A0         	call	_RTCC_from_RTCC	;wreg free
 11427  013C40  0012               	return	
 11428  013C42                     __end_of_RTCC_task:
 11429                           	opt stack 0
 11430                           tblptru	equ	0xFF8
 11431                           tblptrh	equ	0xFF7
 11432                           tblptrl	equ	0xFF6
 11433                           tablat	equ	0xFF5
 11434                           prodh	equ	0xFF4
 11435                           prodl	equ	0xFF3
 11436                           intcon	equ	0xFF2
 11437                           intcon2	equ	0xFF1
 11438                           indf0	equ	0xFEF
 11439                           postinc0	equ	0xFEE
 11440                           fsr0h	equ	0xFEA
 11441                           fsr0l	equ	0xFE9
 11442                           wreg	equ	0xFE8
 11443                           indf1	equ	0xFE7
 11444                           postinc1	equ	0xFE6
 11445                           postdec1	equ	0xFE5
 11446                           fsr1h	equ	0xFE2
 11447                           fsr1l	equ	0xFE1
 11448                           indf2	equ	0xFDF
 11449                           postinc2	equ	0xFDE
 11450                           postdec2	equ	0xFDD
 11451                           plusw2	equ	0xFDB
 11452                           fsr2h	equ	0xFDA
 11453                           fsr2l	equ	0xFD9
 11454                           status	equ	0xFD8
 11455                           
 11456 ;; *************** function _RTCC_from_RTCC *****************
 11457 ;; Defined at:
 11458 ;;		line 199 in file "../My_library/My_RTCC.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;  tm              2   38[BANK0 ] PTR struct .
 11461 ;;		 -> now(14), 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;		None               void
 11466 ;; Registers used:
 11467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11473 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;Total ram usage:        2 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:   14
 11480 ;; This function calls:
 11481 ;;		_RTCC_to_caltime
 11482 ;;		_caltime_to_epoch
 11483 ;; This function is called by:
 11484 ;;		_RTCC_init
 11485 ;;		_RTCC_task
 11486 ;;		_print_time
 11487 ;;		_display_time_0802
 11488 ;;		_display_time_1602
 11489 ;;		_RTCC_adjust_time_inc
 11490 ;;		_RTCC_adjust_time_dec
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text53
 11495  0140C6                     __ptext53:
 11496                           	opt stack 0
 11497  0140C6                     _RTCC_from_RTCC:
 11498                           	opt stack 11
 11499                           
 11500                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 11501                           
 11502                           ;incstack = 0
 11503  0140C6  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 11504  0140CA  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 11505  0140CE  EC00  F096         	call	_RTCC_to_caltime	;wreg free
 11506                           
 11507                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 11508  0140D2  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 11509  0140D6  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 11510  0140DA  ECB8  F085         	call	_caltime_to_epoch	;wreg free
 11511  0140DE  0012               	return		;funcret
 11512  0140E0                     __end_of_RTCC_from_RTCC:
 11513                           	opt stack 0
 11514                           tblptru	equ	0xFF8
 11515                           tblptrh	equ	0xFF7
 11516                           tblptrl	equ	0xFF6
 11517                           tablat	equ	0xFF5
 11518                           prodh	equ	0xFF4
 11519                           prodl	equ	0xFF3
 11520                           intcon	equ	0xFF2
 11521                           intcon2	equ	0xFF1
 11522                           indf0	equ	0xFEF
 11523                           postinc0	equ	0xFEE
 11524                           fsr0h	equ	0xFEA
 11525                           fsr0l	equ	0xFE9
 11526                           wreg	equ	0xFE8
 11527                           indf1	equ	0xFE7
 11528                           postinc1	equ	0xFE6
 11529                           postdec1	equ	0xFE5
 11530                           fsr1h	equ	0xFE2
 11531                           fsr1l	equ	0xFE1
 11532                           indf2	equ	0xFDF
 11533                           postinc2	equ	0xFDE
 11534                           postdec2	equ	0xFDD
 11535                           plusw2	equ	0xFDB
 11536                           fsr2h	equ	0xFDA
 11537                           fsr2l	equ	0xFD9
 11538                           status	equ	0xFD8
 11539                           
 11540 ;; *************** function _caltime_to_epoch *****************
 11541 ;; Defined at:
 11542 ;;		line 179 in file "../My_library/My_RTCC.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  tm              2   25[BANK0 ] PTR struct .
 11545 ;;		 -> now(14), 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  month           1   37[BANK0 ] unsigned char 
 11548 ;;  month           1   32[BANK0 ] unsigned char 
 11549 ;;  year            1   31[BANK0 ] unsigned char 
 11550 ;;  epoch           4   33[BANK0 ] unsigned long 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;		None               void
 11553 ;; Registers used:
 11554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11561 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11562 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11563 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11564 ;;Total ram usage:       13 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:   13
 11567 ;; This function calls:
 11568 ;;		___lmul
 11569 ;;		_month_length
 11570 ;; This function is called by:
 11571 ;;		_RTCC_from_RTCC
 11572 ;;		_RTCC_from_caltime
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text54
 11577  010B70                     __ptext54:
 11578                           	opt stack 0
 11579  010B70                     _caltime_to_epoch:
 11580                           	opt stack 11
 11581                           
 11582                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 11583                           
 11584                           ;incstack = 0
 11585  010B70  0E00               	movlw	0
 11586  010B72  0100               	movlb	0	; () banked
 11587  010B74  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 11588  010B76  0E00               	movlw	0
 11589  010B78  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 11590  010B7A  0E00               	movlw	0
 11591  010B7C  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 11592  010B7E  0E00               	movlw	0
 11593  010B80  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 11594                           
 11595                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 11596  010B82  0E00               	movlw	0
 11597  010B84  0100               	movlb	0	; () banked
 11598  010B86  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 11599  010B88  D037               	goto	l8260
 11600  010B8A                     l8246:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 11604  010B8A  0E01               	movlw	1
 11605  010B8C  0100               	movlb	0	; () banked
 11606  010B8E  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 11607  010B90                     l8248:
 11608                           
 11609                           ; BSR set to: 0
 11610  010B90  0E0C               	movlw	12
 11611  010B92  0100               	movlb	0	; () banked
 11612  010B94  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 11613  010B96  D001               	goto	l8252
 11614  010B98  D02D               	goto	l8258
 11615  010B9A                     l8252:
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11619  010B9A  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 11620  010B9E  0100               	movlb	0	; () banked
 11621  010BA0  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 11622  010BA2  EC58  F090         	call	_month_length
 11623  010BA6  0100               	movlb	0	; () banked
 11624  010BA8  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11625  010BAA  0100               	movlb	0	; () banked
 11626  010BAC  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11627  010BAE  0100               	movlb	0	; () banked
 11628  010BB0  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11629  010BB2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11630  010BB4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11631  010BB6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11632  010BB8  0E80               	movlw	128
 11633  010BBA  0100               	movlb	0	; () banked
 11634  010BBC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11635  010BBE  0E51               	movlw	81
 11636  010BC0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11637  010BC2  0E01               	movlw	1
 11638  010BC4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11639  010BC6  0E00               	movlw	0
 11640  010BC8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11641  010BCA  EC3F  F09B         	call	___lmul	;wreg free
 11642  010BCE  0100               	movlb	0	; () banked
 11643  010BD0  516D               	movf	?___lmul& (0+255),w,b
 11644  010BD2  0100               	movlb	0	; () banked
 11645  010BD4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11646  010BD6  0100               	movlb	0	; () banked
 11647  010BD8  516E               	movf	(?___lmul+1)& (0+255),w,b
 11648  010BDA  0100               	movlb	0	; () banked
 11649  010BDC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11650  010BDE  0100               	movlb	0	; () banked
 11651  010BE0  516F               	movf	(?___lmul+2)& (0+255),w,b
 11652  010BE2  0100               	movlb	0	; () banked
 11653  010BE4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11654  010BE6  0100               	movlb	0	; () banked
 11655  010BE8  5170               	movf	(?___lmul+3)& (0+255),w,b
 11656  010BEA  0100               	movlb	0	; () banked
 11657  010BEC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11658                           
 11659                           ; BSR set to: 0
 11660  010BEE  0100               	movlb	0	; () banked
 11661  010BF0  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 11662  010BF2  D7CE               	goto	l8248
 11663  010BF4                     l8258:
 11664                           
 11665                           ; BSR set to: 0
 11666  010BF4  0100               	movlb	0	; () banked
 11667  010BF6  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 11668  010BF8                     l8260:
 11669                           
 11670                           ; BSR set to: 0
 11671  010BF8  0100               	movlb	0	; () banked
 11672  010BFA  EE20 F00A          	lfsr	2,10
 11673  010BFE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11674  010C00  26D9               	addwf	fsr2l,f,c
 11675  010C02  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11676  010C04  22DA               	addwfc	fsr2h,f,c
 11677  010C06  50DE               	movf	postinc2,w,c
 11678  010C08  0100               	movlb	0	; () banked
 11679  010C0A  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 11680  010C0C  A0D8               	btfss	status,0,c
 11681  010C0E  D7BD               	goto	l8246
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;My_RTCC.c: 184: }
 11685                           ;My_RTCC.c: 185: }
 11686                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 11687                           
 11688                           ; BSR set to: 0
 11689  010C10  0E01               	movlw	1
 11690  010C12  0100               	movlb	0	; () banked
 11691  010C14  6F80               	movwf	caltime_to_epoch@month_3637& (0+255),b
 11692  010C16  D032               	goto	l8268
 11693  010C18                     l8264:
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11697  010C18  C080  F066         	movff	caltime_to_epoch@month_3637,month_length@month
 11698  010C1C  0100               	movlb	0	; () banked
 11699  010C1E  EE20 F00A          	lfsr	2,10
 11700  010C22  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11701  010C24  26D9               	addwf	fsr2l,f,c
 11702  010C26  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11703  010C28  22DA               	addwfc	fsr2h,f,c
 11704  010C2A  50DF               	movf	indf2,w,c
 11705  010C2C  EC58  F090         	call	_month_length
 11706  010C30  0100               	movlb	0	; () banked
 11707  010C32  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11708  010C34  0100               	movlb	0	; () banked
 11709  010C36  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11710  010C38  0100               	movlb	0	; () banked
 11711  010C3A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11712  010C3C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11713  010C3E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11714  010C40  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11715  010C42  0E80               	movlw	128
 11716  010C44  0100               	movlb	0	; () banked
 11717  010C46  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11718  010C48  0E51               	movlw	81
 11719  010C4A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11720  010C4C  0E01               	movlw	1
 11721  010C4E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11722  010C50  0E00               	movlw	0
 11723  010C52  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11724  010C54  EC3F  F09B         	call	___lmul	;wreg free
 11725  010C58  0100               	movlb	0	; () banked
 11726  010C5A  516D               	movf	?___lmul& (0+255),w,b
 11727  010C5C  0100               	movlb	0	; () banked
 11728  010C5E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11729  010C60  0100               	movlb	0	; () banked
 11730  010C62  516E               	movf	(?___lmul+1)& (0+255),w,b
 11731  010C64  0100               	movlb	0	; () banked
 11732  010C66  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11733  010C68  0100               	movlb	0	; () banked
 11734  010C6A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11735  010C6C  0100               	movlb	0	; () banked
 11736  010C6E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11737  010C70  0100               	movlb	0	; () banked
 11738  010C72  5170               	movf	(?___lmul+3)& (0+255),w,b
 11739  010C74  0100               	movlb	0	; () banked
 11740  010C76  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 0
 11743  010C78  0100               	movlb	0	; () banked
 11744  010C7A  2B80               	incf	caltime_to_epoch@month_3637& (0+255),f,b
 11745  010C7C                     l8268:
 11746                           
 11747                           ; BSR set to: 0
 11748  010C7C  0100               	movlb	0	; () banked
 11749  010C7E  EE20 F009          	lfsr	2,9
 11750  010C82  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11751  010C84  26D9               	addwf	fsr2l,f,c
 11752  010C86  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11753  010C88  22DA               	addwfc	fsr2h,f,c
 11754  010C8A  50DE               	movf	postinc2,w,c
 11755  010C8C  0100               	movlb	0	; () banked
 11756  010C8E  5D80               	subwf	caltime_to_epoch@month_3637& (0+255),w,b
 11757  010C90  A0D8               	btfss	status,0,c
 11758  010C92  D7C2               	goto	l8264
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;My_RTCC.c: 188: }
 11762                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11763                           
 11764                           ; BSR set to: 0
 11765  010C94  0EFF               	movlw	255
 11766  010C96  0100               	movlb	0	; () banked
 11767  010C98  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11768  010C9A  0EFF               	movlw	255
 11769  010C9C  0100               	movlb	0	; () banked
 11770  010C9E  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11771  010CA0  0100               	movlb	0	; () banked
 11772  010CA2  EE20 F008          	lfsr	2,8
 11773  010CA6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11774  010CA8  26D9               	addwf	fsr2l,f,c
 11775  010CAA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11776  010CAC  22DA               	addwfc	fsr2h,f,c
 11777  010CAE  50DF               	movf	indf2,w,c
 11778  010CB0  0100               	movlb	0	; () banked
 11779  010CB2  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11780  010CB4  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11781  010CB6  0100               	movlb	0	; () banked
 11782  010CB8  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11783  010CBA  0100               	movlb	0	; () banked
 11784  010CBC  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11785  010CBE  0100               	movlb	0	; () banked
 11786  010CC0  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11787  010CC2  0100               	movlb	0	; () banked
 11788  010CC4  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11789  010CC6  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11790  010CCA  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11791  010CCE  0100               	movlb	0	; () banked
 11792  010CD0  0E00               	movlw	0
 11793  010CD2  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11794  010CD4  0EFF               	movlw	-1
 11795  010CD6  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 11796  010CD8  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 11797  010CDA  0E80               	movlw	128
 11798  010CDC  0100               	movlb	0	; () banked
 11799  010CDE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11800  010CE0  0E51               	movlw	81
 11801  010CE2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11802  010CE4  0E01               	movlw	1
 11803  010CE6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11804  010CE8  0E00               	movlw	0
 11805  010CEA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11806  010CEC  EC3F  F09B         	call	___lmul	;wreg free
 11807  010CF0  0100               	movlb	0	; () banked
 11808  010CF2  516D               	movf	?___lmul& (0+255),w,b
 11809  010CF4  0100               	movlb	0	; () banked
 11810  010CF6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11811  010CF8  0100               	movlb	0	; () banked
 11812  010CFA  516E               	movf	(?___lmul+1)& (0+255),w,b
 11813  010CFC  0100               	movlb	0	; () banked
 11814  010CFE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11815  010D00  0100               	movlb	0	; () banked
 11816  010D02  516F               	movf	(?___lmul+2)& (0+255),w,b
 11817  010D04  0100               	movlb	0	; () banked
 11818  010D06  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11819  010D08  0100               	movlb	0	; () banked
 11820  010D0A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11821  010D0C  0100               	movlb	0	; () banked
 11822  010D0E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11823                           
 11824                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 11825  010D10  0100               	movlb	0	; () banked
 11826  010D12  EE20 F006          	lfsr	2,6
 11827  010D16  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11828  010D18  26D9               	addwf	fsr2l,f,c
 11829  010D1A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11830  010D1C  22DA               	addwfc	fsr2h,f,c
 11831  010D1E  50DF               	movf	indf2,w,c
 11832  010D20  0100               	movlb	0	; () banked
 11833  010D22  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11834  010D24  0100               	movlb	0	; () banked
 11835  010D26  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11836  010D28  0100               	movlb	0	; () banked
 11837  010D2A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11838  010D2C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11839  010D2E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11840  010D30  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11841  010D32  0E10               	movlw	16
 11842  010D34  0100               	movlb	0	; () banked
 11843  010D36  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11844  010D38  0E0E               	movlw	14
 11845  010D3A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11846  010D3C  0E00               	movlw	0
 11847  010D3E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11848  010D40  0E00               	movlw	0
 11849  010D42  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11850  010D44  EC3F  F09B         	call	___lmul	;wreg free
 11851  010D48  0100               	movlb	0	; () banked
 11852  010D4A  516D               	movf	?___lmul& (0+255),w,b
 11853  010D4C  0100               	movlb	0	; () banked
 11854  010D4E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11855  010D50  0100               	movlb	0	; () banked
 11856  010D52  516E               	movf	(?___lmul+1)& (0+255),w,b
 11857  010D54  0100               	movlb	0	; () banked
 11858  010D56  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11859  010D58  0100               	movlb	0	; () banked
 11860  010D5A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11861  010D5C  0100               	movlb	0	; () banked
 11862  010D5E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11863  010D60  0100               	movlb	0	; () banked
 11864  010D62  5170               	movf	(?___lmul+3)& (0+255),w,b
 11865  010D64  0100               	movlb	0	; () banked
 11866  010D66  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11867                           
 11868                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 11869  010D68  0100               	movlb	0	; () banked
 11870  010D6A  EE20 F005          	lfsr	2,5
 11871  010D6E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11872  010D70  26D9               	addwf	fsr2l,f,c
 11873  010D72  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11874  010D74  22DA               	addwfc	fsr2h,f,c
 11875  010D76  50DF               	movf	indf2,w,c
 11876  010D78  0100               	movlb	0	; () banked
 11877  010D7A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11878  010D7C  0100               	movlb	0	; () banked
 11879  010D7E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11880  010D80  0100               	movlb	0	; () banked
 11881  010D82  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11882  010D84  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11883  010D86  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11884  010D88  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11885  010D8A  0E3C               	movlw	60
 11886  010D8C  0100               	movlb	0	; () banked
 11887  010D8E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11888  010D90  0E00               	movlw	0
 11889  010D92  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11890  010D94  0E00               	movlw	0
 11891  010D96  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11892  010D98  0E00               	movlw	0
 11893  010D9A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11894  010D9C  EC3F  F09B         	call	___lmul	;wreg free
 11895  010DA0  0100               	movlb	0	; () banked
 11896  010DA2  516D               	movf	?___lmul& (0+255),w,b
 11897  010DA4  0100               	movlb	0	; () banked
 11898  010DA6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11899  010DA8  0100               	movlb	0	; () banked
 11900  010DAA  516E               	movf	(?___lmul+1)& (0+255),w,b
 11901  010DAC  0100               	movlb	0	; () banked
 11902  010DAE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11903  010DB0  0100               	movlb	0	; () banked
 11904  010DB2  516F               	movf	(?___lmul+2)& (0+255),w,b
 11905  010DB4  0100               	movlb	0	; () banked
 11906  010DB6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11907  010DB8  0100               	movlb	0	; () banked
 11908  010DBA  5170               	movf	(?___lmul+3)& (0+255),w,b
 11909  010DBC  0100               	movlb	0	; () banked
 11910  010DBE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;My_RTCC.c: 192: epoch += tm->ss;
 11914  010DC0  0100               	movlb	0	; () banked
 11915  010DC2  EE20 F004          	lfsr	2,4
 11916  010DC6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11917  010DC8  26D9               	addwf	fsr2l,f,c
 11918  010DCA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11919  010DCC  22DA               	addwfc	fsr2h,f,c
 11920  010DCE  50DF               	movf	indf2,w,c
 11921  010DD0  0100               	movlb	0	; () banked
 11922  010DD2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11923  010DD4  0100               	movlb	0	; () banked
 11924  010DD6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11925  010DD8  0100               	movlb	0	; () banked
 11926  010DDA  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11927  010DDC  0E00               	movlw	0
 11928  010DDE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11929  010DE0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11930  010DE2  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;My_RTCC.c: 194: tm->epoch = epoch;
 11934  010DE4  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 11935  010DE8  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 11936  010DEC  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 11937  010DF0  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 11938  010DF4  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 11939  010DF8  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 11940                           
 11941                           ; BSR set to: 0
 11942  010DFC  0012               	return		;funcret
 11943  010DFE                     __end_of_caltime_to_epoch:
 11944                           	opt stack 0
 11945                           tblptru	equ	0xFF8
 11946                           tblptrh	equ	0xFF7
 11947                           tblptrl	equ	0xFF6
 11948                           tablat	equ	0xFF5
 11949                           prodh	equ	0xFF4
 11950                           prodl	equ	0xFF3
 11951                           intcon	equ	0xFF2
 11952                           intcon2	equ	0xFF1
 11953                           indf0	equ	0xFEF
 11954                           postinc0	equ	0xFEE
 11955                           fsr0h	equ	0xFEA
 11956                           fsr0l	equ	0xFE9
 11957                           wreg	equ	0xFE8
 11958                           indf1	equ	0xFE7
 11959                           postinc1	equ	0xFE6
 11960                           postdec1	equ	0xFE5
 11961                           fsr1h	equ	0xFE2
 11962                           fsr1l	equ	0xFE1
 11963                           indf2	equ	0xFDF
 11964                           postinc2	equ	0xFDE
 11965                           postdec2	equ	0xFDD
 11966                           plusw2	equ	0xFDB
 11967                           fsr2h	equ	0xFDA
 11968                           fsr2l	equ	0xFD9
 11969                           status	equ	0xFD8
 11970                           
 11971 ;; *************** function _month_length *****************
 11972 ;; Defined at:
 11973 ;;		line 55 in file "../My_library/My_RTCC.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  year            1    wreg     unsigned char 
 11976 ;;  month           1    6[BANK0 ] unsigned char 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  year            1   11[BANK0 ] unsigned char 
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      unsigned char 
 11981 ;; Registers used:
 11982 ;;		wreg, status,2, status,0, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11988 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11991 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11992 ;;Total ram usage:        6 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:   12
 11995 ;; This function calls:
 11996 ;;		___awmod
 11997 ;; This function is called by:
 11998 ;;		_epoch_to_caltime
 11999 ;;		_caltime_to_epoch
 12000 ;;		_terminal_time
 12001 ;;		_RTCC_adjust_time_inc
 12002 ;;		_RTCC_adjust_time_dec
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           	psect	text55
 12007  0120B0                     __ptext55:
 12008                           	opt stack 0
 12009  0120B0                     _month_length:
 12010                           	opt stack 11
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;incstack = 0
 12014                           ;month_length@year stored from wreg
 12015  0120B0  0100               	movlb	0	; () banked
 12016  0120B2  6F6B               	movwf	month_length@year& (0+255),b
 12017                           
 12018                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 12019  0120B4  0E02               	movlw	2
 12020  0120B6  0100               	movlb	0	; () banked
 12021  0120B8  1966               	xorwf	month_length@month& (0+255),w,b
 12022  0120BA  A4D8               	btfss	status,2,c
 12023  0120BC  D03E               	goto	l8138
 12024                           
 12025                           ; BSR set to: 0
 12026  0120BE  C06B  F060         	movff	month_length@year,___awmod@dividend
 12027  0120C2  0100               	movlb	0	; () banked
 12028  0120C4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12029  0120C6  0E00               	movlw	0
 12030  0120C8  0100               	movlb	0	; () banked
 12031  0120CA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12032  0120CC  0E64               	movlw	100
 12033  0120CE  6F62               	movwf	___awmod@divisor& (0+255),b
 12034  0120D0  EC27  F098         	call	___awmod	;wreg free
 12035  0120D4  0100               	movlb	0	; () banked
 12036  0120D6  5160               	movf	?___awmod& (0+255),w,b
 12037  0120D8  0100               	movlb	0	; () banked
 12038  0120DA  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12039  0120DC  A4D8               	btfss	status,2,c
 12040  0120DE  D002               	goto	u7530
 12041  0120E0  0E01               	movlw	1
 12042  0120E2  D001               	goto	u7540
 12043  0120E4                     u7530:
 12044  0120E4  0E00               	movlw	0
 12045  0120E6                     u7540:
 12046  0120E6  0800               	sublw	0
 12047  0120E8  0100               	movlb	0	; () banked
 12048  0120EA  6F67               	movwf	??_month_length& (0+255),b
 12049  0120EC  C06B  F060         	movff	month_length@year,___awmod@dividend
 12050  0120F0  0100               	movlb	0	; () banked
 12051  0120F2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12052  0120F4  0E01               	movlw	1
 12053  0120F6  0100               	movlb	0	; () banked
 12054  0120F8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12055  0120FA  0E90               	movlw	144
 12056  0120FC  6F62               	movwf	___awmod@divisor& (0+255),b
 12057  0120FE  EC27  F098         	call	___awmod	;wreg free
 12058  012102  0100               	movlb	0	; () banked
 12059  012104  5160               	movf	?___awmod& (0+255),w,b
 12060  012106  0100               	movlb	0	; () banked
 12061  012108  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12062  01210A  A4D8               	btfss	status,2,c
 12063  01210C  D004               	goto	u7550
 12064  01210E  0100               	movlb	0	; () banked
 12065  012110  6B68               	clrf	(??_month_length+1)& (0+255),b
 12066  012112  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12067  012114  D002               	goto	u7568
 12068  012116                     u7550:
 12069  012116  0100               	movlb	0	; () banked
 12070  012118  6B68               	clrf	(??_month_length+1)& (0+255),b
 12071  01211A                     u7568:
 12072  01211A  C06B  F069         	movff	month_length@year,??_month_length+2
 12073  01211E  0E03               	movlw	3
 12074  012120  0100               	movlb	0	; () banked
 12075  012122  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12076  012124  A4D8               	btfss	status,2,c
 12077  012126  D002               	goto	u7570
 12078  012128  0E01               	movlw	1
 12079  01212A  D001               	goto	u7580
 12080  01212C                     u7570:
 12081  01212C  0E00               	movlw	0
 12082  01212E                     u7580:
 12083  01212E  0100               	movlb	0	; () banked
 12084  012130  2568               	addwf	(??_month_length+1)& (0+255),w,b
 12085  012132  0100               	movlb	0	; () banked
 12086  012134  2567               	addwf	??_month_length& (0+255),w,b
 12087  012136  0F1C               	addlw	28
 12088                           
 12089                           ; BSR set to: 0
 12090                           
 12091                           ; BSR set to: 0
 12092  012138  0012               	return	
 12093  01213A                     l8138:
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 12097  01213A  0100               	movlb	0	; () banked
 12098  01213C  5166               	movf	month_length@month& (0+255),w,b
 12099  01213E  0B01               	andlw	1
 12100  012140  0100               	movlb	0	; () banked
 12101  012142  6F67               	movwf	??_month_length& (0+255),b
 12102  012144  6B68               	clrf	(??_month_length+1)& (0+255),b
 12103  012146  0100               	movlb	0	; () banked
 12104  012148  1F67               	comf	??_month_length& (0+255),f,b
 12105  01214A  1F68               	comf	(??_month_length+1)& (0+255),f,b
 12106  01214C  4B67               	infsnz	??_month_length& (0+255),f,b
 12107  01214E  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12108  012150  0100               	movlb	0	; () banked
 12109  012152  5166               	movf	month_length@month& (0+255),w,b
 12110  012154  0100               	movlb	0	; () banked
 12111  012156  6F69               	movwf	(??_month_length+2)& (0+255),b
 12112  012158  6B6A               	clrf	(??_month_length+3)& (0+255),b
 12113  01215A  0100               	movlb	0	; () banked
 12114  01215C  5167               	movf	??_month_length& (0+255),w,b
 12115  01215E  0100               	movlb	0	; () banked
 12116  012160  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 12117  012162  0100               	movlb	0	; () banked
 12118  012164  5168               	movf	(??_month_length+1)& (0+255),w,b
 12119  012166  0100               	movlb	0	; () banked
 12120  012168  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 12121  01216A  0E0D               	movlw	13
 12122  01216C  0100               	movlb	0	; () banked
 12123  01216E  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12124  012170  0E00               	movlw	0
 12125  012172  176A               	andwf	(??_month_length+3)& (0+255),f,b
 12126  012174  0E04               	movlw	4
 12127  012176  0100               	movlb	0	; () banked
 12128  012178  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 12129  01217A  0100               	movlb	0	; () banked
 12130  01217C  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 12131  01217E  A4D8               	btfss	status,2,c
 12132  012180  D002               	goto	u7590
 12133  012182  0E01               	movlw	1
 12134  012184  D001               	goto	u7600
 12135  012186                     u7590:
 12136  012186  0E00               	movlw	0
 12137  012188                     u7600:
 12138  012188  0800               	sublw	0
 12139  01218A  0F1F               	addlw	31
 12140                           
 12141                           ; BSR set to: 0
 12142  01218C  0012               	return	
 12143  01218E                     __end_of_month_length:
 12144                           	opt stack 0
 12145                           tblptru	equ	0xFF8
 12146                           tblptrh	equ	0xFF7
 12147                           tblptrl	equ	0xFF6
 12148                           tablat	equ	0xFF5
 12149                           prodh	equ	0xFF4
 12150                           prodl	equ	0xFF3
 12151                           intcon	equ	0xFF2
 12152                           intcon2	equ	0xFF1
 12153                           indf0	equ	0xFEF
 12154                           postinc0	equ	0xFEE
 12155                           fsr0h	equ	0xFEA
 12156                           fsr0l	equ	0xFE9
 12157                           wreg	equ	0xFE8
 12158                           indf1	equ	0xFE7
 12159                           postinc1	equ	0xFE6
 12160                           postdec1	equ	0xFE5
 12161                           fsr1h	equ	0xFE2
 12162                           fsr1l	equ	0xFE1
 12163                           indf2	equ	0xFDF
 12164                           postinc2	equ	0xFDE
 12165                           postdec2	equ	0xFDD
 12166                           plusw2	equ	0xFDB
 12167                           fsr2h	equ	0xFDA
 12168                           fsr2l	equ	0xFD9
 12169                           status	equ	0xFD8
 12170                           
 12171 ;; *************** function ___awmod *****************
 12172 ;; Defined at:
 12173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;  dividend        2    0[BANK0 ] int 
 12176 ;;  divisor         2    2[BANK0 ] int 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;  sign            1    5[BANK0 ] unsigned char 
 12179 ;;  counter         1    4[BANK0 ] unsigned char 
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  2    0[BANK0 ] int 
 12182 ;; Registers used:
 12183 ;;		wreg, status,2, status,0
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;Total ram usage:        6 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:   11
 12196 ;; This function calls:
 12197 ;;		Nothing
 12198 ;; This function is called by:
 12199 ;;		_month_length
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           	psect	text56
 12204  01304E                     __ptext56:
 12205                           	opt stack 0
 12206  01304E                     ___awmod:
 12207                           	opt stack 11
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;incstack = 0
 12211  01304E  0E00               	movlw	0
 12212  013050  0100               	movlb	0	; () banked
 12213  013052  6F65               	movwf	___awmod@sign& (0+255),b
 12214                           
 12215                           ; BSR set to: 0
 12216  013054  0100               	movlb	0	; () banked
 12217  013056  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12218  013058  D008               	goto	l8086
 12219                           
 12220                           ; BSR set to: 0
 12221  01305A  0100               	movlb	0	; () banked
 12222  01305C  6D60               	negf	___awmod@dividend& (0+255),b
 12223  01305E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12224  013060  B0D8               	btfsc	status,0,c
 12225  013062  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12226                           
 12227                           ; BSR set to: 0
 12228  013064  0E01               	movlw	1
 12229  013066  0100               	movlb	0	; () banked
 12230  013068  6F65               	movwf	___awmod@sign& (0+255),b
 12231  01306A                     l8086:
 12232                           
 12233                           ; BSR set to: 0
 12234  01306A  0100               	movlb	0	; () banked
 12235  01306C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12236  01306E  D005               	goto	l8090
 12237                           
 12238                           ; BSR set to: 0
 12239  013070  0100               	movlb	0	; () banked
 12240  013072  6D62               	negf	___awmod@divisor& (0+255),b
 12241  013074  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12242  013076  B0D8               	btfsc	status,0,c
 12243  013078  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12244  01307A                     l8090:
 12245                           
 12246                           ; BSR set to: 0
 12247  01307A  0100               	movlb	0	; () banked
 12248  01307C  5162               	movf	___awmod@divisor& (0+255),w,b
 12249  01307E  0100               	movlb	0	; () banked
 12250  013080  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12251  013082  B4D8               	btfsc	status,2,c
 12252  013084  D026               	goto	l8106
 12253                           
 12254                           ; BSR set to: 0
 12255  013086  0E01               	movlw	1
 12256  013088  0100               	movlb	0	; () banked
 12257  01308A  6F64               	movwf	___awmod@counter& (0+255),b
 12258  01308C  D006               	goto	l8096
 12259  01308E                     l8094:
 12260                           
 12261                           ; BSR set to: 0
 12262  01308E  0100               	movlb	0	; () banked
 12263  013090  90D8               	bcf	status,0,c
 12264  013092  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12265  013094  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12266  013096  0100               	movlb	0	; () banked
 12267  013098  2B64               	incf	___awmod@counter& (0+255),f,b
 12268  01309A                     l8096:
 12269                           
 12270                           ; BSR set to: 0
 12271  01309A  0100               	movlb	0	; () banked
 12272  01309C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12273  01309E  D7F7               	goto	l8094
 12274  0130A0                     l8098:
 12275                           
 12276                           ; BSR set to: 0
 12277  0130A0  0100               	movlb	0	; () banked
 12278  0130A2  5162               	movf	___awmod@divisor& (0+255),w,b
 12279  0130A4  0100               	movlb	0	; () banked
 12280  0130A6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12281  0130A8  0100               	movlb	0	; () banked
 12282  0130AA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12283  0130AC  0100               	movlb	0	; () banked
 12284  0130AE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12285  0130B0  A0D8               	btfss	status,0,c
 12286  0130B2  D008               	goto	l8102
 12287                           
 12288                           ; BSR set to: 0
 12289  0130B4  0100               	movlb	0	; () banked
 12290  0130B6  5162               	movf	___awmod@divisor& (0+255),w,b
 12291  0130B8  0100               	movlb	0	; () banked
 12292  0130BA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12293  0130BC  0100               	movlb	0	; () banked
 12294  0130BE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12295  0130C0  0100               	movlb	0	; () banked
 12296  0130C2  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12297  0130C4                     l8102:
 12298                           
 12299                           ; BSR set to: 0
 12300  0130C4  0100               	movlb	0	; () banked
 12301  0130C6  90D8               	bcf	status,0,c
 12302  0130C8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12303  0130CA  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12304                           
 12305                           ; BSR set to: 0
 12306  0130CC  0100               	movlb	0	; () banked
 12307  0130CE  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12308  0130D0  D7E7               	goto	l8098
 12309  0130D2                     l8106:
 12310                           
 12311                           ; BSR set to: 0
 12312  0130D2  0100               	movlb	0	; () banked
 12313  0130D4  5165               	movf	___awmod@sign& (0+255),w,b
 12314  0130D6  0100               	movlb	0	; () banked
 12315  0130D8  B4D8               	btfsc	status,2,c
 12316  0130DA  D005               	goto	l8110
 12317                           
 12318                           ; BSR set to: 0
 12319  0130DC  0100               	movlb	0	; () banked
 12320  0130DE  6D60               	negf	___awmod@dividend& (0+255),b
 12321  0130E0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12322  0130E2  B0D8               	btfsc	status,0,c
 12323  0130E4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12324  0130E6                     l8110:
 12325                           
 12326                           ; BSR set to: 0
 12327  0130E6  C060  F060         	movff	___awmod@dividend,?___awmod
 12328  0130EA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12329  0130EE  0012               	return	
 12330  0130F0                     __end_of___awmod:
 12331                           	opt stack 0
 12332                           tblptru	equ	0xFF8
 12333                           tblptrh	equ	0xFF7
 12334                           tblptrl	equ	0xFF6
 12335                           tablat	equ	0xFF5
 12336                           prodh	equ	0xFF4
 12337                           prodl	equ	0xFF3
 12338                           intcon	equ	0xFF2
 12339                           intcon2	equ	0xFF1
 12340                           indf0	equ	0xFEF
 12341                           postinc0	equ	0xFEE
 12342                           fsr0h	equ	0xFEA
 12343                           fsr0l	equ	0xFE9
 12344                           wreg	equ	0xFE8
 12345                           indf1	equ	0xFE7
 12346                           postinc1	equ	0xFE6
 12347                           postdec1	equ	0xFE5
 12348                           fsr1h	equ	0xFE2
 12349                           fsr1l	equ	0xFE1
 12350                           indf2	equ	0xFDF
 12351                           postinc2	equ	0xFDE
 12352                           postdec2	equ	0xFDD
 12353                           plusw2	equ	0xFDB
 12354                           fsr2h	equ	0xFDA
 12355                           fsr2l	equ	0xFD9
 12356                           status	equ	0xFD8
 12357                           
 12358 ;; *************** function ___lmul *****************
 12359 ;; Defined at:
 12360 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  multiplier      4   13[BANK0 ] unsigned long 
 12363 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  product         4   21[BANK0 ] unsigned long 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  4   13[BANK0 ] unsigned long 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12375 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12378 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12379 ;;Total ram usage:       12 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:   11
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_get_quot_rem
 12386 ;;		_caltime_to_epoch
 12387 ;;		_RTCC_adjust_time_inc
 12388 ;;		_RTCC_adjust_time_dec
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text57
 12393  01367E                     __ptext57:
 12394                           	opt stack 0
 12395  01367E                     ___lmul:
 12396                           	opt stack 12
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;incstack = 0
 12400  01367E  0E00               	movlw	0
 12401  013680  0100               	movlb	0	; () banked
 12402  013682  6F75               	movwf	___lmul@product& (0+255),b
 12403  013684  0E00               	movlw	0
 12404  013686  6F76               	movwf	(___lmul@product+1)& (0+255),b
 12405  013688  0E00               	movlw	0
 12406  01368A  6F77               	movwf	(___lmul@product+2)& (0+255),b
 12407  01368C  0E00               	movlw	0
 12408  01368E  6F78               	movwf	(___lmul@product+3)& (0+255),b
 12409  013690                     l8144:
 12410                           
 12411                           ; BSR set to: 0
 12412  013690  0100               	movlb	0	; () banked
 12413  013692  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 12414  013694  D010               	goto	l8148
 12415                           
 12416                           ; BSR set to: 0
 12417  013696  0100               	movlb	0	; () banked
 12418  013698  5171               	movf	___lmul@multiplicand& (0+255),w,b
 12419  01369A  0100               	movlb	0	; () banked
 12420  01369C  2775               	addwf	___lmul@product& (0+255),f,b
 12421  01369E  0100               	movlb	0	; () banked
 12422  0136A0  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 12423  0136A2  0100               	movlb	0	; () banked
 12424  0136A4  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 12425  0136A6  0100               	movlb	0	; () banked
 12426  0136A8  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 12427  0136AA  0100               	movlb	0	; () banked
 12428  0136AC  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 12429  0136AE  0100               	movlb	0	; () banked
 12430  0136B0  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 12431  0136B2  0100               	movlb	0	; () banked
 12432  0136B4  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 12433  0136B6                     l8148:
 12434                           
 12435                           ; BSR set to: 0
 12436  0136B6  0100               	movlb	0	; () banked
 12437  0136B8  90D8               	bcf	status,0,c
 12438  0136BA  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 12439  0136BC  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 12440  0136BE  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 12441  0136C0  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 12442                           
 12443                           ; BSR set to: 0
 12444  0136C2  0100               	movlb	0	; () banked
 12445  0136C4  90D8               	bcf	status,0,c
 12446  0136C6  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 12447  0136C8  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 12448  0136CA  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 12449  0136CC  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 12450  0136CE  0100               	movlb	0	; () banked
 12451  0136D0  516D               	movf	___lmul@multiplier& (0+255),w,b
 12452  0136D2  0100               	movlb	0	; () banked
 12453  0136D4  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 12454  0136D6  0100               	movlb	0	; () banked
 12455  0136D8  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 12456  0136DA  0100               	movlb	0	; () banked
 12457  0136DC  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 12458  0136DE  A4D8               	btfss	status,2,c
 12459  0136E0  D7D7               	goto	l8144
 12460                           
 12461                           ; BSR set to: 0
 12462  0136E2  C075  F06D         	movff	___lmul@product,?___lmul
 12463  0136E6  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 12464  0136EA  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 12465  0136EE  C078  F070         	movff	___lmul@product+3,?___lmul+3
 12466                           
 12467                           ; BSR set to: 0
 12468  0136F2  0012               	return		;funcret
 12469  0136F4                     __end_of___lmul:
 12470                           	opt stack 0
 12471                           tblptru	equ	0xFF8
 12472                           tblptrh	equ	0xFF7
 12473                           tblptrl	equ	0xFF6
 12474                           tablat	equ	0xFF5
 12475                           prodh	equ	0xFF4
 12476                           prodl	equ	0xFF3
 12477                           intcon	equ	0xFF2
 12478                           intcon2	equ	0xFF1
 12479                           indf0	equ	0xFEF
 12480                           postinc0	equ	0xFEE
 12481                           fsr0h	equ	0xFEA
 12482                           fsr0l	equ	0xFE9
 12483                           wreg	equ	0xFE8
 12484                           indf1	equ	0xFE7
 12485                           postinc1	equ	0xFE6
 12486                           postdec1	equ	0xFE5
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           indf2	equ	0xFDF
 12490                           postinc2	equ	0xFDE
 12491                           postdec2	equ	0xFDD
 12492                           plusw2	equ	0xFDB
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function _RTCC_to_caltime *****************
 12498 ;; Defined at:
 12499 ;;		line 89 in file "../My_library/My_RTCC.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  tm              2    2[BANK0 ] PTR struct .
 12502 ;;		 -> now(14), 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;  dumy            1    4[BANK0 ] unsigned char 
 12505 ;; Return value:  Size  Location     Type
 12506 ;;		None               void
 12507 ;; Registers used:
 12508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12517 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12518 ;;Total ram usage:        3 bytes
 12519 ;; Hardware stack levels used:    1
 12520 ;; Hardware stack levels required when called:   12
 12521 ;; This function calls:
 12522 ;;		_x_to_d
 12523 ;; This function is called by:
 12524 ;;		_RTCC_from_RTCC
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           	psect	text58
 12529  012C00                     __ptext58:
 12530                           	opt stack 0
 12531  012C00                     _RTCC_to_caltime:
 12532                           	opt stack 12
 12533  012C00                     l855:
 12534  012C00  010F               	movlb	15	; () banked
 12535  012C02  B93F               	btfsc	63,4,b	;volatile
 12536  012C04  D7FD               	goto	l855
 12537                           
 12538                           ; BSR set to: 15
 12539                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 12540  012C06  010F               	movlb	15	; () banked
 12541  012C08  813F               	bsf	63,0,b	;volatile
 12542                           
 12543                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 12544  012C0A  010F               	movlb	15	; () banked
 12545  012C0C  833F               	bsf	63,1,b	;volatile
 12546                           
 12547                           ; BSR set to: 15
 12548                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 12549  012C0E  0100               	movlb	0	; () banked
 12550  012C10  EE20 F00A          	lfsr	2,10
 12551  012C14  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12552  012C16  26D9               	addwf	fsr2l,f,c
 12553  012C18  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12554  012C1A  22DA               	addwfc	fsr2h,f,c
 12555  012C1C  010F               	movlb	15	; () banked
 12556  012C1E  513A               	movf	58,w,b	;volatile
 12557  012C20  EC00  F0A0         	call	_x_to_d
 12558  012C24  6EDF               	movwf	indf2,c
 12559                           
 12560                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 12561  012C26  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 12562                           
 12563                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 12564  012C2A  0100               	movlb	0	; () banked
 12565  012C2C  EE20 F008          	lfsr	2,8
 12566  012C30  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12567  012C32  26D9               	addwf	fsr2l,f,c
 12568  012C34  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12569  012C36  22DA               	addwfc	fsr2h,f,c
 12570  012C38  010F               	movlb	15	; () banked
 12571  012C3A  513A               	movf	58,w,b	;volatile
 12572  012C3C  EC00  F0A0         	call	_x_to_d
 12573  012C40  6EDF               	movwf	indf2,c
 12574                           
 12575                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 12576  012C42  0100               	movlb	0	; () banked
 12577  012C44  EE20 F009          	lfsr	2,9
 12578  012C48  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12579  012C4A  26D9               	addwf	fsr2l,f,c
 12580  012C4C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12581  012C4E  22DA               	addwfc	fsr2h,f,c
 12582  012C50  010F               	movlb	15	; () banked
 12583  012C52  513B               	movf	59,w,b	;volatile
 12584  012C54  EC00  F0A0         	call	_x_to_d
 12585  012C58  6EDF               	movwf	indf2,c
 12586                           
 12587                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 12588  012C5A  0100               	movlb	0	; () banked
 12589  012C5C  EE20 F006          	lfsr	2,6
 12590  012C60  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12591  012C62  26D9               	addwf	fsr2l,f,c
 12592  012C64  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12593  012C66  22DA               	addwfc	fsr2h,f,c
 12594  012C68  010F               	movlb	15	; () banked
 12595  012C6A  513A               	movf	58,w,b	;volatile
 12596  012C6C  EC00  F0A0         	call	_x_to_d
 12597  012C70  6EDF               	movwf	indf2,c
 12598                           
 12599                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 12600  012C72  0100               	movlb	0	; () banked
 12601  012C74  EE20 F007          	lfsr	2,7
 12602  012C78  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12603  012C7A  26D9               	addwf	fsr2l,f,c
 12604  012C7C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12605  012C7E  22DA               	addwfc	fsr2h,f,c
 12606  012C80  010F               	movlb	15	; () banked
 12607  012C82  513B               	movf	59,w,b	;volatile
 12608  012C84  EC00  F0A0         	call	_x_to_d
 12609  012C88  6EDF               	movwf	indf2,c
 12610                           
 12611                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 12612  012C8A  0100               	movlb	0	; () banked
 12613  012C8C  EE20 F004          	lfsr	2,4
 12614  012C90  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12615  012C92  26D9               	addwf	fsr2l,f,c
 12616  012C94  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12617  012C96  22DA               	addwfc	fsr2h,f,c
 12618  012C98  010F               	movlb	15	; () banked
 12619  012C9A  513A               	movf	58,w,b	;volatile
 12620  012C9C  EC00  F0A0         	call	_x_to_d
 12621  012CA0  6EDF               	movwf	indf2,c
 12622                           
 12623                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 12624  012CA2  0100               	movlb	0	; () banked
 12625  012CA4  EE20 F005          	lfsr	2,5
 12626  012CA8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12627  012CAA  26D9               	addwf	fsr2l,f,c
 12628  012CAC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12629  012CAE  22DA               	addwfc	fsr2h,f,c
 12630  012CB0  010F               	movlb	15	; () banked
 12631  012CB2  513B               	movf	59,w,b	;volatile
 12632  012CB4  EC00  F0A0         	call	_x_to_d
 12633  012CB8  6EDF               	movwf	indf2,c
 12634  012CBA  0012               	return		;funcret
 12635  012CBC                     __end_of_RTCC_to_caltime:
 12636                           	opt stack 0
 12637                           tblptru	equ	0xFF8
 12638                           tblptrh	equ	0xFF7
 12639                           tblptrl	equ	0xFF6
 12640                           tablat	equ	0xFF5
 12641                           prodh	equ	0xFF4
 12642                           prodl	equ	0xFF3
 12643                           intcon	equ	0xFF2
 12644                           intcon2	equ	0xFF1
 12645                           indf0	equ	0xFEF
 12646                           postinc0	equ	0xFEE
 12647                           fsr0h	equ	0xFEA
 12648                           fsr0l	equ	0xFE9
 12649                           wreg	equ	0xFE8
 12650                           indf1	equ	0xFE7
 12651                           postinc1	equ	0xFE6
 12652                           postdec1	equ	0xFE5
 12653                           fsr1h	equ	0xFE2
 12654                           fsr1l	equ	0xFE1
 12655                           indf2	equ	0xFDF
 12656                           postinc2	equ	0xFDE
 12657                           postdec2	equ	0xFDD
 12658                           plusw2	equ	0xFDB
 12659                           fsr2h	equ	0xFDA
 12660                           fsr2l	equ	0xFD9
 12661                           status	equ	0xFD8
 12662                           
 12663 ;; *************** function _x_to_d *****************
 12664 ;; Defined at:
 12665 ;;		line 51 in file "../My_library/My_RTCC.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;  hex             1    wreg     unsigned char 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  hex             1    1[BANK0 ] unsigned char 
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      unsigned char 
 12672 ;; Registers used:
 12673 ;;		wreg, status,2, status,0, prodl, prodh
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12683 ;;Total ram usage:        2 bytes
 12684 ;; Hardware stack levels used:    1
 12685 ;; Hardware stack levels required when called:   11
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		_RTCC_to_caltime
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           	psect	text59
 12694  014000                     __ptext59:
 12695                           	opt stack 0
 12696  014000                     _x_to_d:
 12697                           	opt stack 12
 12698                           
 12699                           ;incstack = 0
 12700                           ;x_to_d@hex stored from wreg
 12701  014000  0100               	movlb	0	; () banked
 12702  014002  6F61               	movwf	x_to_d@hex& (0+255),b
 12703                           
 12704                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12705  014004  C061  F060         	movff	x_to_d@hex,??_x_to_d
 12706  014008  0E0F               	movlw	15
 12707  01400A  0100               	movlb	0	; () banked
 12708  01400C  1760               	andwf	??_x_to_d& (0+255),f,b
 12709  01400E  0100               	movlb	0	; () banked
 12710  014010  3961               	swapf	x_to_d@hex& (0+255),w,b
 12711  014012  0B0F               	andlw	15
 12712  014014  0B0F               	andlw	15
 12713  014016  0D0A               	mullw	10
 12714  014018  50F3               	movf	prodl,w,c
 12715  01401A  0100               	movlb	0	; () banked
 12716  01401C  2560               	addwf	??_x_to_d& (0+255),w,b
 12717  01401E  0012               	return	
 12718  014020                     __end_of_x_to_d:
 12719                           	opt stack 0
 12720                           tblptru	equ	0xFF8
 12721                           tblptrh	equ	0xFF7
 12722                           tblptrl	equ	0xFF6
 12723                           tablat	equ	0xFF5
 12724                           prodh	equ	0xFF4
 12725                           prodl	equ	0xFF3
 12726                           intcon	equ	0xFF2
 12727                           intcon2	equ	0xFF1
 12728                           indf0	equ	0xFEF
 12729                           postinc0	equ	0xFEE
 12730                           fsr0h	equ	0xFEA
 12731                           fsr0l	equ	0xFE9
 12732                           wreg	equ	0xFE8
 12733                           indf1	equ	0xFE7
 12734                           postinc1	equ	0xFE6
 12735                           postdec1	equ	0xFE5
 12736                           fsr1h	equ	0xFE2
 12737                           fsr1l	equ	0xFE1
 12738                           indf2	equ	0xFDF
 12739                           postinc2	equ	0xFDE
 12740                           postdec2	equ	0xFDD
 12741                           plusw2	equ	0xFDB
 12742                           fsr2h	equ	0xFDA
 12743                           fsr2l	equ	0xFD9
 12744                           status	equ	0xFD8
 12745                           
 12746 ;; *************** function _I2C_LCD_SetCursor *****************
 12747 ;; Defined at:
 12748 ;;		line 159 in file "../My_library/My_ST7032.c"
 12749 ;; Parameters:    Size  Location     Type
 12750 ;;  col             1    wreg     unsigned char 
 12751 ;;  row             1    6[BANK0 ] unsigned char 
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;  col             1    9[BANK0 ] unsigned char 
 12754 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 12755 ;; Return value:  Size  Location     Type
 12756 ;;		None               void
 12757 ;; Registers used:
 12758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12764 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12768 ;;Total ram usage:        4 bytes
 12769 ;; Hardware stack levels used:    1
 12770 ;; Hardware stack levels required when called:   14
 12771 ;; This function calls:
 12772 ;;		_I2C_LCD_Command
 12773 ;; This function is called by:
 12774 ;;		_main
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           	psect	text60
 12779  013E7A                     __ptext60:
 12780                           	opt stack 0
 12781  013E7A                     _I2C_LCD_SetCursor:
 12782                           	opt stack 16
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;incstack = 0
 12786                           ;I2C_LCD_SetCursor@col stored from wreg
 12787  013E7A  0100               	movlb	0	; () banked
 12788  013E7C  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 12789                           
 12790                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 12791  013E7E  C1FA  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 12792  013E82  C1FB  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 12793                           
 12794                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 12795  013E86  0100               	movlb	0	; () banked
 12796  013E88  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 12797  013E8A  0D01               	mullw	1
 12798  013E8C  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 12799  013E8E  24F3               	addwf	prodl,w,c
 12800  013E90  6ED9               	movwf	fsr2l,c
 12801  013E92  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 12802  013E94  20F4               	addwfc	prodh,w,c
 12803  013E96  6EDA               	movwf	fsr2h,c
 12804  013E98  50DF               	movf	indf2,w,c
 12805  013E9A  0100               	movlb	0	; () banked
 12806  013E9C  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 12807  013E9E  0980               	iorlw	128
 12808  013EA0  EC78  F09E         	call	_I2C_LCD_Command
 12809  013EA4  0012               	return		;funcret
 12810  013EA6                     __end_of_I2C_LCD_SetCursor:
 12811                           	opt stack 0
 12812                           tblptru	equ	0xFF8
 12813                           tblptrh	equ	0xFF7
 12814                           tblptrl	equ	0xFF6
 12815                           tablat	equ	0xFF5
 12816                           prodh	equ	0xFF4
 12817                           prodl	equ	0xFF3
 12818                           intcon	equ	0xFF2
 12819                           intcon2	equ	0xFF1
 12820                           indf0	equ	0xFEF
 12821                           postinc0	equ	0xFEE
 12822                           fsr0h	equ	0xFEA
 12823                           fsr0l	equ	0xFE9
 12824                           wreg	equ	0xFE8
 12825                           indf1	equ	0xFE7
 12826                           postinc1	equ	0xFE6
 12827                           postdec1	equ	0xFE5
 12828                           fsr1h	equ	0xFE2
 12829                           fsr1l	equ	0xFE1
 12830                           indf2	equ	0xFDF
 12831                           postinc2	equ	0xFDE
 12832                           postdec2	equ	0xFDD
 12833                           plusw2	equ	0xFDB
 12834                           fsr2h	equ	0xFDA
 12835                           fsr2l	equ	0xFD9
 12836                           status	equ	0xFD8
 12837                           
 12838 ;; *************** function _I2C_LCD_Command *****************
 12839 ;; Defined at:
 12840 ;;		line 141 in file "../My_library/My_ST7032.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;  c               1    wreg     unsigned char 
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;  c               1    4[BANK0 ] unsigned char 
 12845 ;;  ans             1    5[BANK0 ] unsigned char 
 12846 ;; Return value:  Size  Location     Type
 12847 ;;		None               void
 12848 ;; Registers used:
 12849 ;;		wreg, status,2, status,0, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12859 ;;Total ram usage:        2 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:   13
 12862 ;; This function calls:
 12863 ;;		_I2C_Send
 12864 ;;		_I2C_Start
 12865 ;;		_I2C_Stop
 12866 ;; This function is called by:
 12867 ;;		_I2C_LCD_Clear
 12868 ;;		_I2C_LCD_SetCursor
 12869 ;;		_I2C_LCD_init
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           	psect	text61
 12874  013CF0                     __ptext61:
 12875                           	opt stack 0
 12876  013CF0                     _I2C_LCD_Command:
 12877                           	opt stack 15
 12878                           
 12879                           ;incstack = 0
 12880                           ;I2C_LCD_Command@c stored from wreg
 12881  013CF0  0100               	movlb	0	; () banked
 12882  013CF2  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 12883                           
 12884                           ;My_ST7032.c: 142: uint8_t ans;
 12885                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 12886  013CF4  0E00               	movlw	0
 12887  013CF6  0100               	movlb	0	; () banked
 12888  013CF8  6F62               	movwf	I2C_Start@rw& (0+255),b
 12889  013CFA  0E3E               	movlw	62
 12890  013CFC  ECE2  F09E         	call	_I2C_Start
 12891  013D00  0100               	movlb	0	; () banked
 12892  013D02  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;My_ST7032.c: 145: if (ans == 0) {
 12896  013D04  0100               	movlb	0	; () banked
 12897  013D06  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 12898  013D08  0100               	movlb	0	; () banked
 12899  013D0A  A4D8               	btfss	status,2,c
 12900  013D0C  D007               	goto	l1099
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 12904  013D0E  0E80               	movlw	128
 12905  013D10  EC70  F0A0         	call	_I2C_Send
 12906                           
 12907                           ;My_ST7032.c: 148: I2C_Send(c);
 12908  013D14  0100               	movlb	0	; () banked
 12909  013D16  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 12910  013D18  EC70  F0A0         	call	_I2C_Send
 12911  013D1C                     l1099:
 12912                           
 12913                           ;My_ST7032.c: 149: }
 12914                           ;My_ST7032.c: 150: I2C_Stop();
 12915  013D1C  EC8C  F0A0         	call	_I2C_Stop	;wreg free
 12916                           
 12917                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 12918  013D20  0E68               	movlw	104
 12919  013D22                     u9627:
 12920  013D22  2EE8               	decfsz	wreg,f,c
 12921  013D24  D7FE               	goto	u9627
 12922  013D26  0012               	return		;funcret
 12923  013D28                     __end_of_I2C_LCD_Command:
 12924                           	opt stack 0
 12925                           tblptru	equ	0xFF8
 12926                           tblptrh	equ	0xFF7
 12927                           tblptrl	equ	0xFF6
 12928                           tablat	equ	0xFF5
 12929                           prodh	equ	0xFF4
 12930                           prodl	equ	0xFF3
 12931                           intcon	equ	0xFF2
 12932                           intcon2	equ	0xFF1
 12933                           indf0	equ	0xFEF
 12934                           postinc0	equ	0xFEE
 12935                           fsr0h	equ	0xFEA
 12936                           fsr0l	equ	0xFE9
 12937                           wreg	equ	0xFE8
 12938                           indf1	equ	0xFE7
 12939                           postinc1	equ	0xFE6
 12940                           postdec1	equ	0xFE5
 12941                           fsr1h	equ	0xFE2
 12942                           fsr1l	equ	0xFE1
 12943                           indf2	equ	0xFDF
 12944                           postinc2	equ	0xFDE
 12945                           postdec2	equ	0xFDD
 12946                           plusw2	equ	0xFDB
 12947                           fsr2h	equ	0xFDA
 12948                           fsr2l	equ	0xFD9
 12949                           status	equ	0xFD8
 12950                           
 12951 ;; *************** function _I2C_LCD_Puts *****************
 12952 ;; Defined at:
 12953 ;;		line 178 in file "../My_library/My_ST7032.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 12956 ;;		 -> STR_47(9), STR_46(9), 
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;  ans             2    7[BANK0 ] int 
 12959 ;; Return value:  Size  Location     Type
 12960 ;;		None               void
 12961 ;; Registers used:
 12962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12972 ;;Total ram usage:        5 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; Hardware stack levels required when called:   13
 12975 ;; This function calls:
 12976 ;;		_I2C_Send
 12977 ;;		_I2C_Start
 12978 ;;		_I2C_Stop
 12979 ;; This function is called by:
 12980 ;;		_main
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text62
 12985  01383C                     __ptext62:
 12986                           	opt stack 0
 12987  01383C                     _I2C_LCD_Puts:
 12988                           	opt stack 17
 12989                           
 12990                           ;My_ST7032.c: 179: int ans;
 12991                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 12992                           
 12993                           ;incstack = 0
 12994  01383C  0E00               	movlw	0
 12995  01383E  0100               	movlb	0	; () banked
 12996  013840  6F62               	movwf	I2C_Start@rw& (0+255),b
 12997  013842  0E3E               	movlw	62
 12998  013844  ECE2  F09E         	call	_I2C_Start
 12999  013848  0100               	movlb	0	; () banked
 13000  01384A  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 13001  01384C  0100               	movlb	0	; () banked
 13002  01384E  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 13003  013850  0100               	movlb	0	; () banked
 13004  013852  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 13005  013854  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;My_ST7032.c: 182: if (ans == 0) {
 13009  013856  0100               	movlb	0	; () banked
 13010  013858  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 13011  01385A  0100               	movlb	0	; () banked
 13012  01385C  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 13013  01385E  A4D8               	btfss	status,2,c
 13014  013860  D01F               	goto	l9336
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 13018  013862  0E40               	movlw	64
 13019  013864  EC70  F0A0         	call	_I2C_Send
 13020                           
 13021                           ;My_ST7032.c: 184: while (*s) {
 13022  013868  D010               	goto	l9334
 13023  01386A                     l9328:
 13024                           
 13025                           ;My_ST7032.c: 185: I2C_Send(*s++);
 13026  01386A  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13027  01386E  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13028  013872                     	if	0	;tblptru may be non-zero
 13029  013872                     	endif
 13030  013872                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13031  013872  0E00               	movlw	low (__mediumconst shr (0+16))
 13032  013874  6EF8               	movwf	tblptru,c
 13033  013876                     	endif
 13034  013876  0008               	tblrd		*
 13035  013878  50F5               	movf	tablat,w,c
 13036  01387A  EC70  F0A0         	call	_I2C_Send
 13037  01387E  0100               	movlb	0	; () banked
 13038  013880  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 13039  013882  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 13043  013884  0E68               	movlw	104
 13044  013886                     u9637:
 13045  013886  2EE8               	decfsz	wreg,f,c
 13046  013888  D7FE               	goto	u9637
 13047  01388A                     l9334:
 13048  01388A  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13049  01388E  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13050  013892                     	if	0	;tblptru may be non-zero
 13051  013892                     	endif
 13052  013892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13053  013892  0E00               	movlw	low (__mediumconst shr (0+16))
 13054  013894  6EF8               	movwf	tblptru,c
 13055  013896                     	endif
 13056  013896  0008               	tblrd		*
 13057  013898  50F5               	movf	tablat,w,c
 13058  01389A  0900               	iorlw	0
 13059  01389C  A4D8               	btfss	status,2,c
 13060  01389E  D7E5               	goto	l9328
 13061  0138A0                     l9336:
 13062                           
 13063                           ;My_ST7032.c: 187: }
 13064                           ;My_ST7032.c: 188: }
 13065                           ;My_ST7032.c: 189: I2C_Stop();
 13066  0138A0  EC8C  F0A0         	call	_I2C_Stop	;wreg free
 13067  0138A4  0012               	return		;funcret
 13068  0138A6                     __end_of_I2C_LCD_Puts:
 13069                           	opt stack 0
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           intcon2	equ	0xFF1
 13078                           indf0	equ	0xFEF
 13079                           postinc0	equ	0xFEE
 13080                           fsr0h	equ	0xFEA
 13081                           fsr0l	equ	0xFE9
 13082                           wreg	equ	0xFE8
 13083                           indf1	equ	0xFE7
 13084                           postinc1	equ	0xFE6
 13085                           postdec1	equ	0xFE5
 13086                           fsr1h	equ	0xFE2
 13087                           fsr1l	equ	0xFE1
 13088                           indf2	equ	0xFDF
 13089                           postinc2	equ	0xFDE
 13090                           postdec2	equ	0xFDD
 13091                           plusw2	equ	0xFDB
 13092                           fsr2h	equ	0xFDA
 13093                           fsr2l	equ	0xFD9
 13094                           status	equ	0xFD8
 13095                           
 13096 ;; *************** function _I2C_Stop *****************
 13097 ;; Defined at:
 13098 ;;		line 96 in file "../My_library/My_I2C.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;		None
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;		None
 13103 ;; Return value:  Size  Location     Type
 13104 ;;		None               void
 13105 ;; Registers used:
 13106 ;;		wreg, status,2, status,0, cstack
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13116 ;;Total ram usage:        0 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:   12
 13119 ;; This function calls:
 13120 ;;		_I2C_IdleCheck
 13121 ;; This function is called by:
 13122 ;;		_I2C_LCD_Command
 13123 ;;		_I2C_LCD_Puts
 13124 ;;		_I2C_LCD_Putc
 13125 ;;		_I2C_LCD_CreateChar
 13126 ;; This function uses a non-reentrant model
 13127 ;;
 13128                           
 13129                           	psect	text63
 13130  014118                     __ptext63:
 13131                           	opt stack 0
 13132  014118                     _I2C_Stop:
 13133                           	opt stack 15
 13134                           
 13135                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 13136                           
 13137                           ;incstack = 0
 13138  014118  0E05               	movlw	5
 13139  01411A  EC10  F0A0         	call	_I2C_IdleCheck
 13140                           
 13141                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 13142  01411E  84C5               	bsf	4037,2,c	;volatile
 13143  014120  0012               	return		;funcret
 13144  014122                     __end_of_I2C_Stop:
 13145                           	opt stack 0
 13146                           tblptru	equ	0xFF8
 13147                           tblptrh	equ	0xFF7
 13148                           tblptrl	equ	0xFF6
 13149                           tablat	equ	0xFF5
 13150                           prodh	equ	0xFF4
 13151                           prodl	equ	0xFF3
 13152                           intcon	equ	0xFF2
 13153                           intcon2	equ	0xFF1
 13154                           indf0	equ	0xFEF
 13155                           postinc0	equ	0xFEE
 13156                           fsr0h	equ	0xFEA
 13157                           fsr0l	equ	0xFE9
 13158                           wreg	equ	0xFE8
 13159                           indf1	equ	0xFE7
 13160                           postinc1	equ	0xFE6
 13161                           postdec1	equ	0xFE5
 13162                           fsr1h	equ	0xFE2
 13163                           fsr1l	equ	0xFE1
 13164                           indf2	equ	0xFDF
 13165                           postinc2	equ	0xFDE
 13166                           postdec2	equ	0xFDD
 13167                           plusw2	equ	0xFDB
 13168                           fsr2h	equ	0xFDA
 13169                           fsr2l	equ	0xFD9
 13170                           status	equ	0xFD8
 13171                           
 13172 ;; *************** function _I2C_Start *****************
 13173 ;; Defined at:
 13174 ;;		line 72 in file "../My_library/My_I2C.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  adrs            1    wreg     unsigned char 
 13177 ;;  rw              1    2[BANK0 ] unsigned char 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;  adrs            1    3[BANK0 ] unsigned char 
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  1    wreg      unsigned char 
 13182 ;; Registers used:
 13183 ;;		wreg, status,2, status,0, cstack
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13189 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13193 ;;Total ram usage:        2 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:   12
 13196 ;; This function calls:
 13197 ;;		_I2C_IdleCheck
 13198 ;; This function is called by:
 13199 ;;		_I2C_LCD_Command
 13200 ;;		_I2C_LCD_Puts
 13201 ;;		_I2C_LCD_Putc
 13202 ;;		_I2C_LCD_CreateChar
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text64
 13207  013DC4                     __ptext64:
 13208                           	opt stack 0
 13209  013DC4                     _I2C_Start:
 13210                           	opt stack 15
 13211                           
 13212                           ;incstack = 0
 13213                           ;I2C_Start@adrs stored from wreg
 13214  013DC4  0100               	movlb	0	; () banked
 13215  013DC6  6F63               	movwf	I2C_Start@adrs& (0+255),b
 13216                           
 13217                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 13218  013DC8  0E05               	movlw	5
 13219  013DCA  EC10  F0A0         	call	_I2C_IdleCheck
 13220                           
 13221                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 13222  013DCE  80C5               	bsf	4037,0,c	;volatile
 13223                           
 13224                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 13225  013DD0  0E05               	movlw	5
 13226  013DD2  EC10  F0A0         	call	_I2C_IdleCheck
 13227                           
 13228                           ;My_I2C.c: 78: SSP1IF = 0;
 13229  013DD6  969E               	bcf	3998,3,c	;volatile
 13230                           
 13231                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 13232  013DD8  0100               	movlb	0	; () banked
 13233  013DDA  5163               	movf	I2C_Start@adrs& (0+255),w,b
 13234  013DDC  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 13235  013DDE  0100               	movlb	0	; () banked
 13236  013DE0  2562               	addwf	I2C_Start@rw& (0+255),w,b
 13237  013DE2  6EC9               	movwf	4041,c	;volatile
 13238  013DE4                     l626:
 13239  013DE4  A69E               	btfss	3998,3,c	;volatile
 13240  013DE6  D7FE               	goto	l626
 13241                           
 13242                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 13243  013DE8  ACC5               	btfss	4037,6,c	;volatile
 13244  013DEA  D002               	goto	u8200
 13245  013DEC  0E01               	movlw	1
 13246  013DEE  0012               	return	
 13247  013DF0                     u8200:
 13248  013DF0  0E00               	movlw	0
 13249  013DF2  0012               	return	
 13250  013DF4                     __end_of_I2C_Start:
 13251                           	opt stack 0
 13252                           tblptru	equ	0xFF8
 13253                           tblptrh	equ	0xFF7
 13254                           tblptrl	equ	0xFF6
 13255                           tablat	equ	0xFF5
 13256                           prodh	equ	0xFF4
 13257                           prodl	equ	0xFF3
 13258                           intcon	equ	0xFF2
 13259                           intcon2	equ	0xFF1
 13260                           indf0	equ	0xFEF
 13261                           postinc0	equ	0xFEE
 13262                           fsr0h	equ	0xFEA
 13263                           fsr0l	equ	0xFE9
 13264                           wreg	equ	0xFE8
 13265                           indf1	equ	0xFE7
 13266                           postinc1	equ	0xFE6
 13267                           postdec1	equ	0xFE5
 13268                           fsr1h	equ	0xFE2
 13269                           fsr1l	equ	0xFE1
 13270                           indf2	equ	0xFDF
 13271                           postinc2	equ	0xFDE
 13272                           postdec2	equ	0xFDD
 13273                           plusw2	equ	0xFDB
 13274                           fsr2h	equ	0xFDA
 13275                           fsr2l	equ	0xFD9
 13276                           status	equ	0xFD8
 13277                           
 13278 ;; *************** function _I2C_Send *****************
 13279 ;; Defined at:
 13280 ;;		line 102 in file "../My_library/My_I2C.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;  data            1    wreg     unsigned char 
 13283 ;; Auto vars:     Size  Location     Type
 13284 ;;  data            1    2[BANK0 ] unsigned char 
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  1    wreg      unsigned char 
 13287 ;; Registers used:
 13288 ;;		wreg, status,2, status,0, cstack
 13289 ;; Tracked objects:
 13290 ;;		On entry : 0/0
 13291 ;;		On exit  : 0/0
 13292 ;;		Unchanged: 0/0
 13293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13297 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13298 ;;Total ram usage:        1 bytes
 13299 ;; Hardware stack levels used:    1
 13300 ;; Hardware stack levels required when called:   12
 13301 ;; This function calls:
 13302 ;;		_I2C_IdleCheck
 13303 ;; This function is called by:
 13304 ;;		_I2C_LCD_Command
 13305 ;;		_I2C_LCD_Puts
 13306 ;;		_I2C_LCD_Putc
 13307 ;;		_I2C_LCD_CreateChar
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           	psect	text65
 13312  0140E0                     __ptext65:
 13313                           	opt stack 0
 13314  0140E0                     _I2C_Send:
 13315                           	opt stack 15
 13316                           
 13317                           ;incstack = 0
 13318                           ;I2C_Send@data stored from wreg
 13319  0140E0  0100               	movlb	0	; () banked
 13320  0140E2  6F62               	movwf	I2C_Send@data& (0+255),b
 13321                           
 13322                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 13323  0140E4  0E05               	movlw	5
 13324  0140E6  EC10  F0A0         	call	_I2C_IdleCheck
 13325                           
 13326                           ;My_I2C.c: 104: SSP1IF = 0;
 13327  0140EA  969E               	bcf	3998,3,c	;volatile
 13328                           
 13329                           ;My_I2C.c: 105: SSP1BUF = data;
 13330  0140EC  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 13331  0140F0                     l641:
 13332  0140F0  A69E               	btfss	3998,3,c	;volatile
 13333  0140F2  D7FE               	goto	l641
 13334                           
 13335                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 13336                           ;	Return value of _I2C_Send is never used
 13337  0140F4  50C5               	movf	4037,w,c	;volatile
 13338  0140F6  0012               	return	
 13339  0140F8                     __end_of_I2C_Send:
 13340                           	opt stack 0
 13341                           tblptru	equ	0xFF8
 13342                           tblptrh	equ	0xFF7
 13343                           tblptrl	equ	0xFF6
 13344                           tablat	equ	0xFF5
 13345                           prodh	equ	0xFF4
 13346                           prodl	equ	0xFF3
 13347                           intcon	equ	0xFF2
 13348                           intcon2	equ	0xFF1
 13349                           indf0	equ	0xFEF
 13350                           postinc0	equ	0xFEE
 13351                           fsr0h	equ	0xFEA
 13352                           fsr0l	equ	0xFE9
 13353                           wreg	equ	0xFE8
 13354                           indf1	equ	0xFE7
 13355                           postinc1	equ	0xFE6
 13356                           postdec1	equ	0xFE5
 13357                           fsr1h	equ	0xFE2
 13358                           fsr1l	equ	0xFE1
 13359                           indf2	equ	0xFDF
 13360                           postinc2	equ	0xFDE
 13361                           postdec2	equ	0xFDD
 13362                           plusw2	equ	0xFDB
 13363                           fsr2h	equ	0xFDA
 13364                           fsr2l	equ	0xFD9
 13365                           status	equ	0xFD8
 13366                           
 13367 ;; *************** function _I2C_IdleCheck *****************
 13368 ;; Defined at:
 13369 ;;		line 58 in file "../My_library/My_I2C.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  mask            1    wreg     unsigned char 
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;  mask            1    1[BANK0 ] unsigned char 
 13374 ;; Return value:  Size  Location     Type
 13375 ;;		None               void
 13376 ;; Registers used:
 13377 ;;		wreg, status,2, status,0
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13387 ;;Total ram usage:        2 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:   11
 13390 ;; This function calls:
 13391 ;;		Nothing
 13392 ;; This function is called by:
 13393 ;;		_I2C_Start
 13394 ;;		_I2C_Stop
 13395 ;;		_I2C_Send
 13396 ;;		_I2C_rStart
 13397 ;;		_I2C_Receive
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           	psect	text66
 13402  014020                     __ptext66:
 13403                           	opt stack 0
 13404  014020                     _I2C_IdleCheck:
 13405                           	opt stack 15
 13406                           
 13407                           ;incstack = 0
 13408                           ;I2C_IdleCheck@mask stored from wreg
 13409  014020  0100               	movlb	0	; () banked
 13410  014022  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 13411  014024                     l8334:
 13412  014024  50C7               	movf	4039,w,c	;volatile
 13413  014026  0100               	movlb	0	; () banked
 13414  014028  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 13415  01402A  0100               	movlb	0	; () banked
 13416  01402C  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 13417  01402E  50C5               	movf	4037,w,c	;volatile
 13418  014030  0B1F               	andlw	31
 13419  014032  0100               	movlb	0	; () banked
 13420  014034  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 13421  014036  0900               	iorlw	0
 13422  014038  B4D8               	btfsc	status,2,c
 13423  01403A  0012               	return	
 13424  01403C  D7F3               	goto	l8334
 13425  01403E                     __end_of_I2C_IdleCheck:
 13426                           	opt stack 0
 13427                           tblptru	equ	0xFF8
 13428                           tblptrh	equ	0xFF7
 13429                           tblptrl	equ	0xFF6
 13430                           tablat	equ	0xFF5
 13431                           prodh	equ	0xFF4
 13432                           prodl	equ	0xFF3
 13433                           intcon	equ	0xFF2
 13434                           intcon2	equ	0xFF1
 13435                           indf0	equ	0xFEF
 13436                           postinc0	equ	0xFEE
 13437                           fsr0h	equ	0xFEA
 13438                           fsr0l	equ	0xFE9
 13439                           wreg	equ	0xFE8
 13440                           indf1	equ	0xFE7
 13441                           postinc1	equ	0xFE6
 13442                           postdec1	equ	0xFE5
 13443                           fsr1h	equ	0xFE2
 13444                           fsr1l	equ	0xFE1
 13445                           indf2	equ	0xFDF
 13446                           postinc2	equ	0xFDE
 13447                           postdec2	equ	0xFDD
 13448                           plusw2	equ	0xFDB
 13449                           fsr2h	equ	0xFDA
 13450                           fsr2l	equ	0xFD9
 13451                           status	equ	0xFD8
 13452                           
 13453 ;; *************** function _ISR *****************
 13454 ;; Defined at:
 13455 ;;		line 34 in file "main.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;		None
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;		None
 13460 ;; Return value:  Size  Location     Type
 13461 ;;		None               void
 13462 ;; Registers used:
 13463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13471 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13472 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13473 ;;Total ram usage:       14 bytes
 13474 ;; Hardware stack levels used:    1
 13475 ;; Hardware stack levels required when called:   10
 13476 ;; This function calls:
 13477 ;;		_I2C_ISR
 13478 ;;		_UART_ISR
 13479 ;;		_USB_ISR
 13480 ;; This function is called by:
 13481 ;;		Interrupt level 2
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	intcode
 13486  000008                     __pintcode:
 13487                           	opt stack 0
 13488  000008                     _ISR:
 13489                           	opt stack 11
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;incstack = 0
 13493  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13494  00000A  CFFA F01F          	movff	pclath,??_ISR
 13495  00000E  CFFB F020          	movff	pclatu,??_ISR+1
 13496  000012  CFE9 F021          	movff	fsr0l,??_ISR+2
 13497  000016  CFEA F022          	movff	fsr0h,??_ISR+3
 13498  00001A  CFE1 F023          	movff	fsr1l,??_ISR+4
 13499  00001E  CFE2 F024          	movff	fsr1h,??_ISR+5
 13500  000022  CFD9 F025          	movff	fsr2l,??_ISR+6
 13501  000026  CFDA F026          	movff	fsr2h,??_ISR+7
 13502  00002A  CFF3 F027          	movff	prodl,??_ISR+8
 13503  00002E  CFF4 F028          	movff	prodh,??_ISR+9
 13504  000032  CFF6 F029          	movff	tblptrl,??_ISR+10
 13505  000036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 13506  00003A  CFF8 F02B          	movff	tblptru,??_ISR+12
 13507  00003E  CFF5 F02C          	movff	tablat,??_ISR+13
 13508                           
 13509                           ;main.c: 35: USB_ISR();
 13510  000042  EC91  F0A0         	call	_USB_ISR	;wreg free
 13511                           
 13512                           ;main.c: 36: UART_ISR();
 13513  000046  ECBB  F09D         	call	_UART_ISR	;wreg free
 13514                           
 13515                           ;main.c: 37: I2C_ISR();
 13516  00004A  EC3B  F0A0         	call	_I2C_ISR	;wreg free
 13517                           
 13518                           ;main.c: 38: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 13519  00004E  B4F2               	btfsc	intcon,2,c	;volatile
 13520  000050  AAF2               	btfss	intcon,5,c	;volatile
 13521  000052  D001               	goto	i2l1451
 13522                           
 13523                           ;main.c: 39: INTCONbits.T0IF = 0;
 13524  000054  94F2               	bcf	intcon,2,c	;volatile
 13525  000056                     i2l1451:
 13526                           
 13527                           ;main.c: 40: }
 13528                           ;main.c: 41: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 13529  000056  B09E               	btfsc	3998,0,c	;volatile
 13530  000058  A09D               	btfss	3997,0,c	;volatile
 13531  00005A  D003               	goto	i2l8026
 13532                           
 13533                           ;main.c: 42: PIR1bits.TMR1IF = 0;
 13534  00005C  909E               	bcf	3998,0,c	;volatile
 13535                           
 13536                           ;main.c: 43: TMR1H = 0xC0;
 13537  00005E  0EC0               	movlw	192
 13538  000060  6ECF               	movwf	4047,c	;volatile
 13539  000062                     i2l8026:
 13540                           
 13541                           ;main.c: 44: }
 13542                           ;main.c: 45: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 13543  000062  B2A1               	btfsc	4001,1,c	;volatile
 13544  000064  A2A0               	btfss	4000,1,c	;volatile
 13545  000066  D001               	goto	i2l1454
 13546                           
 13547                           ;main.c: 46: PIR2bits.TMR3IF = 0;
 13548  000068  92A1               	bcf	4001,1,c	;volatile
 13549  00006A                     i2l1454:
 13550  00006A  C02C  FFF5         	movff	??_ISR+13,tablat
 13551  00006E  C02B  FFF8         	movff	??_ISR+12,tblptru
 13552  000072  C02A  FFF7         	movff	??_ISR+11,tblptrh
 13553  000076  C029  FFF6         	movff	??_ISR+10,tblptrl
 13554  00007A  C028  FFF4         	movff	??_ISR+9,prodh
 13555  00007E  C027  FFF3         	movff	??_ISR+8,prodl
 13556  000082  C026  FFDA         	movff	??_ISR+7,fsr2h
 13557  000086  C025  FFD9         	movff	??_ISR+6,fsr2l
 13558  00008A  C024  FFE2         	movff	??_ISR+5,fsr1h
 13559  00008E  C023  FFE1         	movff	??_ISR+4,fsr1l
 13560  000092  C022  FFEA         	movff	??_ISR+3,fsr0h
 13561  000096  C021  FFE9         	movff	??_ISR+2,fsr0l
 13562  00009A  C020  FFFB         	movff	??_ISR+1,pclatu
 13563  00009E  C01F  FFFA         	movff	??_ISR,pclath
 13564  0000A2  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13565  0000A4  0011               	retfie		f
 13566  0000A6                     __end_of_ISR:
 13567                           	opt stack 0
 13568                           pclatu	equ	0xFFB
 13569                           pclath	equ	0xFFA
 13570                           tblptru	equ	0xFF8
 13571                           tblptrh	equ	0xFF7
 13572                           tblptrl	equ	0xFF6
 13573                           tablat	equ	0xFF5
 13574                           prodh	equ	0xFF4
 13575                           prodl	equ	0xFF3
 13576                           intcon	equ	0xFF2
 13577                           intcon2	equ	0xFF1
 13578                           indf0	equ	0xFEF
 13579                           postinc0	equ	0xFEE
 13580                           fsr0h	equ	0xFEA
 13581                           fsr0l	equ	0xFE9
 13582                           wreg	equ	0xFE8
 13583                           indf1	equ	0xFE7
 13584                           postinc1	equ	0xFE6
 13585                           postdec1	equ	0xFE5
 13586                           fsr1h	equ	0xFE2
 13587                           fsr1l	equ	0xFE1
 13588                           indf2	equ	0xFDF
 13589                           postinc2	equ	0xFDE
 13590                           postdec2	equ	0xFDD
 13591                           plusw2	equ	0xFDB
 13592                           fsr2h	equ	0xFDA
 13593                           fsr2l	equ	0xFD9
 13594                           status	equ	0xFD8
 13595                           
 13596 ;; *************** function _USB_ISR *****************
 13597 ;; Defined at:
 13598 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;		None
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;		None
 13603 ;; Return value:  Size  Location     Type
 13604 ;;		None               void
 13605 ;; Registers used:
 13606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13607 ;; Tracked objects:
 13608 ;;		On entry : 0/0
 13609 ;;		On exit  : 0/0
 13610 ;;		Unchanged: 0/0
 13611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13616 ;;Total ram usage:        0 bytes
 13617 ;; Hardware stack levels used:    1
 13618 ;; Hardware stack levels required when called:    9
 13619 ;; This function calls:
 13620 ;;		_USBDeviceTasks
 13621 ;; This function is called by:
 13622 ;;		_ISR
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625                           
 13626                           	psect	text68
 13627  014122                     __ptext68:
 13628                           	opt stack 0
 13629  014122                     _USB_ISR:
 13630                           	opt stack 11
 13631                           
 13632                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 13633                           
 13634                           ;incstack = 0
 13635  014122  EC4F  F08B         	call	_USBDeviceTasks	;wreg free
 13636  014126  0012               	return		;funcret
 13637  014128                     __end_of_USB_ISR:
 13638                           	opt stack 0
 13639                           pclatu	equ	0xFFB
 13640                           pclath	equ	0xFFA
 13641                           tblptru	equ	0xFF8
 13642                           tblptrh	equ	0xFF7
 13643                           tblptrl	equ	0xFF6
 13644                           tablat	equ	0xFF5
 13645                           prodh	equ	0xFF4
 13646                           prodl	equ	0xFF3
 13647                           intcon	equ	0xFF2
 13648                           intcon2	equ	0xFF1
 13649                           indf0	equ	0xFEF
 13650                           postinc0	equ	0xFEE
 13651                           fsr0h	equ	0xFEA
 13652                           fsr0l	equ	0xFE9
 13653                           wreg	equ	0xFE8
 13654                           indf1	equ	0xFE7
 13655                           postinc1	equ	0xFE6
 13656                           postdec1	equ	0xFE5
 13657                           fsr1h	equ	0xFE2
 13658                           fsr1l	equ	0xFE1
 13659                           indf2	equ	0xFDF
 13660                           postinc2	equ	0xFDE
 13661                           postdec2	equ	0xFDD
 13662                           plusw2	equ	0xFDB
 13663                           fsr2h	equ	0xFDA
 13664                           fsr2l	equ	0xFD9
 13665                           status	equ	0xFD8
 13666                           
 13667 ;; *************** function _USBDeviceTasks *****************
 13668 ;; Defined at:
 13669 ;;		line 489 in file "../My_library/usb/usb_device.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;		None
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;  i               1   29[COMRAM] unsigned char 
 13674 ;; Return value:  Size  Location     Type
 13675 ;;		None               void
 13676 ;; Registers used:
 13677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13687 ;;Total ram usage:        1 bytes
 13688 ;; Hardware stack levels used:    1
 13689 ;; Hardware stack levels required when called:    8
 13690 ;; This function calls:
 13691 ;;		_USBCtrlEPAllowStatusStage
 13692 ;;		_USBCtrlEPService
 13693 ;;		_USBStallHandler
 13694 ;;		_USBSuspend
 13695 ;;		_USBWakeFromSuspend
 13696 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13697 ;;		i2_USBDeviceInit
 13698 ;; This function is called by:
 13699 ;;		_USB_ISR
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           	psect	text69
 13704  01169E                     __ptext69:
 13705                           	opt stack 0
 13706  01169E                     _USBDeviceTasks:
 13707                           	opt stack 11
 13708                           
 13709                           ;usb_device.c: 491: uint8_t i;
 13710                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 13711                           
 13712                           ;incstack = 0
 13713  01169E  0442               	decf	_USBDeviceState,w,c	;volatile
 13714  0116A0  B4D8               	btfsc	status,2,c
 13715                           
 13716                           ;usb_device.c: 603: {
 13717                           ;usb_device.c: 613: if(!UCONbits.SE0)
 13718  0116A2  BA65               	btfsc	3941,5,c	;volatile
 13719  0116A4  D008               	goto	i2l6932
 13720                           
 13721                           ;usb_device.c: 614: {
 13722                           ;usb_device.c: 615: {UIR = 0;};
 13723  0116A6  0E00               	movlw	0
 13724  0116A8  6E62               	movwf	3938,c	;volatile
 13725                           
 13726                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 13727  0116AA  010F               	movlb	15	; () banked
 13728  0116AC  8136               	bsf	54,0,b	;volatile
 13729                           
 13730                           ; BSR set to: 15
 13731                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 13732  0116AE  010F               	movlb	15	; () banked
 13733  0116B0  8936               	bsf	54,4,b	;volatile
 13734                           
 13735                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 13736  0116B2  0E02               	movlw	2
 13737  0116B4  6E42               	movwf	_USBDeviceState,c	;volatile
 13738  0116B6                     i2l6932:
 13739                           
 13740                           ;usb_device.c: 622: }
 13741                           ;usb_device.c: 623: }
 13742                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 13743  0116B6  A462               	btfss	3938,2,c	;volatile
 13744  0116B8  D006               	goto	i2l6940
 13745  0116BA  010F               	movlb	15	; () banked
 13746  0116BC  A536               	btfss	54,2,b	;volatile
 13747  0116BE  D003               	goto	i2l6940
 13748                           
 13749                           ; BSR set to: 15
 13750                           ;usb_device.c: 640: {
 13751                           ;usb_device.c: 641: (UIR &= 0xFB);
 13752  0116C0  9462               	bcf	3938,2,c	;volatile
 13753                           
 13754                           ; BSR set to: 15
 13755                           ;usb_device.c: 645: USBWakeFromSuspend();
 13756  0116C2  ECC9  F09E         	call	_USBWakeFromSuspend	;wreg free
 13757  0116C6                     i2l6940:
 13758                           
 13759                           ;usb_device.c: 647: }
 13760                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 13761  0116C6  A265               	btfss	3941,1,c	;volatile
 13762  0116C8  D002               	goto	i2l158
 13763                           
 13764                           ;usb_device.c: 653: {
 13765                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 13766  0116CA  98A1               	bcf	4001,4,c	;volatile
 13767                           
 13768                           ;usb_device.c: 655: return;
 13769  0116CC  0012               	return	
 13770  0116CE                     i2l158:
 13771                           
 13772                           ;usb_device.c: 656: }
 13773                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 13774  0116CE  A062               	btfss	3938,0,c	;volatile
 13775  0116D0  D009               	goto	i2l6954
 13776  0116D2  010F               	movlb	15	; () banked
 13777  0116D4  A136               	btfss	54,0,b	;volatile
 13778  0116D6  D006               	goto	i2l6954
 13779                           
 13780                           ; BSR set to: 15
 13781                           ;usb_device.c: 669: {
 13782                           ;usb_device.c: 670: USBDeviceInit();
 13783  0116D8  ECF2  F08B         	call	i2_USBDeviceInit	;wreg free
 13784                           
 13785                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 13786  0116DC  88A0               	bsf	4000,4,c	;volatile
 13787                           
 13788                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 13789  0116DE  0E04               	movlw	4
 13790  0116E0  6E42               	movwf	_USBDeviceState,c	;volatile
 13791                           
 13792                           ;usb_device.c: 686: (UIR &= 0xFE);
 13793  0116E2  9062               	bcf	3938,0,c	;volatile
 13794  0116E4                     i2l6954:
 13795                           
 13796                           ;usb_device.c: 687: }
 13797                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 13798  0116E4  A862               	btfss	3938,4,c	;volatile
 13799  0116E6  D006               	goto	i2l6962
 13800  0116E8  010F               	movlb	15	; () banked
 13801  0116EA  A936               	btfss	54,4,b	;volatile
 13802  0116EC  D003               	goto	i2l6962
 13803                           
 13804                           ; BSR set to: 15
 13805                           ;usb_device.c: 693: {
 13806                           ;usb_device.c: 698: USBSuspend();
 13807  0116EE  EC53  F09F         	call	_USBSuspend	;wreg free
 13808                           
 13809                           ;usb_device.c: 701: (UIR &= 0xEF);
 13810  0116F2  9862               	bcf	3938,4,c	;volatile
 13811  0116F4                     i2l6962:
 13812                           
 13813                           ;usb_device.c: 702: }
 13814                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 13815  0116F4  AC62               	btfss	3938,6,c	;volatile
 13816  0116F6  D019               	goto	i2l6978
 13817                           
 13818                           ;usb_device.c: 705: {
 13819                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 13820  0116F8  010F               	movlb	15	; () banked
 13821  0116FA  AD36               	btfss	54,6,b	;volatile
 13822  0116FC  D00E               	goto	i2l6968
 13823                           
 13824                           ; BSR set to: 15
 13825                           ;usb_device.c: 707: {
 13826                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 13827  0116FE  0E00               	movlw	0
 13828  011700  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13829  011702  0E73               	movlw	115
 13830  011704  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13831  011706  0E00               	movlw	0
 13832  011708  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13833  01170A  0E00               	movlw	0
 13834  01170C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13835  01170E  0E00               	movlw	0
 13836  011710  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13837  011712  0E01               	movlw	1
 13838  011714  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13839  011716  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13840  01171A                     i2l6968:
 13841                           
 13842                           ;usb_device.c: 709: }
 13843                           ;usb_device.c: 710: (UIR &= 0xBF);
 13844  01171A  9C62               	bcf	3938,6,c	;volatile
 13845                           
 13846                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 13847  01171C  5045               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13848  01171E  A4D8               	btfss	status,2,c
 13849                           
 13850                           ;usb_device.c: 736: {
 13851                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 13852  011720  0645               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 13853                           
 13854                           ;usb_device.c: 738: }
 13855                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 13856  011722  5045               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13857  011724  B4D8               	btfsc	status,2,c
 13858                           
 13859                           ;usb_device.c: 745: {
 13860                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 13861  011726  EC7F  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13862  01172A                     i2l6978:
 13863                           
 13864                           ;usb_device.c: 747: }
 13865                           ;usb_device.c: 749: }
 13866                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 13867  01172A  AA62               	btfss	3938,5,c	;volatile
 13868  01172C  D004               	goto	i2l6984
 13869  01172E  010F               	movlb	15	; () banked
 13870  011730  BB36               	btfsc	54,5,b	;volatile
 13871                           
 13872                           ; BSR set to: 15
 13873                           ;usb_device.c: 752: {
 13874                           ;usb_device.c: 753: USBStallHandler();
 13875  011732  ECE0  F09D         	call	_USBStallHandler	;wreg free
 13876  011736                     i2l6984:
 13877                           
 13878                           ;usb_device.c: 754: }
 13879                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 13880  011736  A262               	btfss	3938,1,c	;volatile
 13881  011738  D012               	goto	i2l6992
 13882  01173A  010F               	movlb	15	; () banked
 13883  01173C  A336               	btfss	54,1,b	;volatile
 13884  01173E  D00F               	goto	i2l6992
 13885                           
 13886                           ; BSR set to: 15
 13887                           ;usb_device.c: 757: {
 13888                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 13889  011740  0E7F               	movlw	127
 13890  011742  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13891  011744  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13892  011746  0E00               	movlw	0
 13893  011748  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13894  01174A  0E00               	movlw	0
 13895  01174C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13896  01174E  0E00               	movlw	0
 13897  011750  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13898  011752  0E01               	movlw	1
 13899  011754  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13900  011756  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13901                           
 13902                           ;usb_device.c: 759: {UEIR = 0;};
 13903  01175A  0E00               	movlw	0
 13904  01175C  6E63               	movwf	3939,c	;volatile
 13905  01175E                     i2l6992:
 13906                           
 13907                           ;usb_device.c: 767: }
 13908                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 13909  01175E  0E04               	movlw	4
 13910  011760  6042               	cpfslt	_USBDeviceState,c	;volatile
 13911  011762  D002               	goto	i2l168
 13912                           
 13913                           ;usb_device.c: 775: {
 13914                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 13915  011764  98A1               	bcf	4001,4,c	;volatile
 13916                           
 13917                           ;usb_device.c: 777: return;
 13918  011766  0012               	return	
 13919  011768                     i2l168:
 13920                           
 13921                           ;usb_device.c: 778: }
 13922                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 13923  011768  010F               	movlb	15	; () banked
 13924  01176A  A736               	btfss	54,3,b	;volatile
 13925  01176C  D039               	goto	i2l169
 13926                           
 13927                           ; BSR set to: 15
 13928                           ;usb_device.c: 784: {
 13929                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 13930  01176E  0E00               	movlw	0
 13931  011770  6E1E               	movwf	USBDeviceTasks@i,c
 13932  011772                     i2l6998:
 13933                           
 13934                           ; BSR set to: 15
 13935  011772  0E03               	movlw	3
 13936  011774  641E               	cpfsgt	USBDeviceTasks@i,c
 13937  011776  D001               	goto	i2l170
 13938  011778  D033               	goto	i2l169
 13939  01177A                     i2l170:
 13940                           
 13941                           ;usb_device.c: 786: {
 13942                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 13943  01177A  A662               	btfss	3938,3,c	;volatile
 13944  01177C  D031               	goto	i2l169
 13945                           
 13946                           ;usb_device.c: 788: {
 13947                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 13948  01177E  CF64 F057          	movff	3940,_USTATcopy	;volatile
 13949                           
 13950                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 13951  011782  3057               	rrcf	_USTATcopy,w,c	;volatile
 13952  011784  32E8               	rrcf	wreg,f,c
 13953  011786  32E8               	rrcf	wreg,f,c
 13954  011788  0B0F               	andlw	15
 13955  01178A  6E49               	movwf	_endpoint_number,c	;volatile
 13956                           
 13957                           ;usb_device.c: 793: (UIR &= 0xF7);
 13958  01178C  9662               	bcf	3938,3,c	;volatile
 13959                           
 13960                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 13961  01178E  B457               	btfsc	_USTATcopy,2,c	;volatile
 13962  011790  D007               	goto	i2l7012
 13963                           
 13964                           ;usb_device.c: 799: {
 13965                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 13966  011792  5049               	movf	_endpoint_number,w,c	;volatile
 13967  011794  0D01               	mullw	1
 13968  011796  0EE7               	movlw	low _ep_data_out
 13969  011798  24F3               	addwf	prodl,w,c
 13970  01179A  6ED9               	movwf	fsr2l,c
 13971  01179C  0E00               	movlw	high _ep_data_out
 13972  01179E  D006               	goto	L4
 13973  0117A0                     i2l7012:
 13974                           
 13975                           ;usb_device.c: 802: else
 13976                           ;usb_device.c: 803: {
 13977                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 13978  0117A0  5049               	movf	_endpoint_number,w,c	;volatile
 13979  0117A2  0D01               	mullw	1
 13980  0117A4  0EE4               	movlw	low _ep_data_in
 13981  0117A6  24F3               	addwf	prodl,w,c
 13982  0117A8  6ED9               	movwf	fsr2l,c
 13983  0117AA  0E00               	movlw	high _ep_data_in
 13984  0117AC                     L4:
 13985  0117AC  20F4               	addwfc	prodh,w,c
 13986  0117AE  6EDA               	movwf	fsr2h,c
 13987  0117B0  0100               	movlb	0	; () banked
 13988  0117B2  70DF               	btg	indf2,0,c
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;usb_device.c: 805: }
 13992                           ;usb_device.c: 810: if(endpoint_number == 0)
 13993                           
 13994                           ; BSR set to: 0
 13995  0117B4  5049               	movf	_endpoint_number,w,c	;volatile
 13996  0117B6  A4D8               	btfss	status,2,c
 13997  0117B8  D003               	goto	i2l7018
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;usb_device.c: 811: {
 14001                           ;usb_device.c: 812: USBCtrlEPService();
 14002  0117BA  ECB2  F093         	call	_USBCtrlEPService	;wreg free
 14003                           
 14004                           ;usb_device.c: 813: }
 14005  0117BE  D00E               	goto	i2l7020
 14006  0117C0                     i2l7018:
 14007                           
 14008                           ;usb_device.c: 814: else
 14009                           ;usb_device.c: 815: {
 14010                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14011  0117C0  0E00               	movlw	0
 14012  0117C2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14013  0117C4  0E72               	movlw	114
 14014  0117C6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14015  0117C8  0E57               	movlw	low _USTATcopy
 14016  0117CA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14017  0117CC  0E00               	movlw	high _USTATcopy
 14018  0117CE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14019  0117D0  0E00               	movlw	0
 14020  0117D2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14021  0117D4  0E00               	movlw	0
 14022  0117D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14023  0117D8  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14024  0117DC                     i2l7020:
 14025  0117DC  2A1E               	incf	USBDeviceTasks@i,f,c
 14026  0117DE  D7C9               	goto	i2l6998
 14027  0117E0                     i2l169:
 14028                           
 14029                           ;usb_device.c: 822: }
 14030                           ;usb_device.c: 823: }
 14031                           ;usb_device.c: 824: }
 14032                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 14033  0117E0  98A1               	bcf	4001,4,c	;volatile
 14034  0117E2  0012               	return		;funcret
 14035  0117E4                     __end_of_USBDeviceTasks:
 14036                           	opt stack 0
 14037                           pclatu	equ	0xFFB
 14038                           pclath	equ	0xFFA
 14039                           tblptru	equ	0xFF8
 14040                           tblptrh	equ	0xFF7
 14041                           tblptrl	equ	0xFF6
 14042                           tablat	equ	0xFF5
 14043                           prodh	equ	0xFF4
 14044                           prodl	equ	0xFF3
 14045                           intcon	equ	0xFF2
 14046                           intcon2	equ	0xFF1
 14047                           indf0	equ	0xFEF
 14048                           postinc0	equ	0xFEE
 14049                           fsr0h	equ	0xFEA
 14050                           fsr0l	equ	0xFE9
 14051                           wreg	equ	0xFE8
 14052                           indf1	equ	0xFE7
 14053                           postinc1	equ	0xFE6
 14054                           postdec1	equ	0xFE5
 14055                           fsr1h	equ	0xFE2
 14056                           fsr1l	equ	0xFE1
 14057                           indf2	equ	0xFDF
 14058                           postinc2	equ	0xFDE
 14059                           postdec2	equ	0xFDD
 14060                           plusw2	equ	0xFDB
 14061                           fsr2h	equ	0xFDA
 14062                           fsr2l	equ	0xFD9
 14063                           status	equ	0xFD8
 14064                           
 14065 ;; *************** function i2_USBDeviceInit *****************
 14066 ;; Defined at:
 14067 ;;		line 298 in file "../My_library/usb/usb_device.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;		None
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14072 ;; Return value:  Size  Location     Type
 14073 ;;		None               void
 14074 ;; Registers used:
 14075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14085 ;;Total ram usage:        1 bytes
 14086 ;; Hardware stack levels used:    1
 14087 ;; Hardware stack levels required when called:    1
 14088 ;; This function calls:
 14089 ;;		i2_memset
 14090 ;; This function is called by:
 14091 ;;		_USBDeviceTasks
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text70
 14096  0117E4                     __ptext70:
 14097                           	opt stack 0
 14098  0117E4                     i2_USBDeviceInit:
 14099                           	opt stack 17
 14100                           
 14101                           ;usb_device.c: 300: uint8_t i;
 14102                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14103                           
 14104                           ;incstack = 0
 14105  0117E4  98A0               	bcf	4000,4,c	;volatile
 14106                           
 14107                           ;usb_device.c: 305: {UEIR = 0;};
 14108  0117E6  0E00               	movlw	0
 14109  0117E8  6E63               	movwf	3939,c	;volatile
 14110                           
 14111                           ;usb_device.c: 308: {UIR = 0;};
 14112  0117EA  0E00               	movlw	0
 14113  0117EC  6E62               	movwf	3938,c	;volatile
 14114                           
 14115                           ;usb_device.c: 311: UEP0 = 0;
 14116  0117EE  0E00               	movlw	0
 14117  0117F0  010F               	movlb	15	; () banked
 14118  0117F2  6F26               	movwf	38,b	;volatile
 14119                           
 14120                           ; BSR set to: 15
 14121                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14122  0117F4  0E27               	movlw	39
 14123  0117F6  6E01               	movwf	i2memset@p1,c
 14124  0117F8  0E0F               	movlw	15
 14125  0117FA  6E02               	movwf	i2memset@p1+1,c
 14126  0117FC  0E00               	movlw	0
 14127  0117FE  6E04               	movwf	i2memset@c+1,c
 14128  011800  0E00               	movlw	0
 14129  011802  6E03               	movwf	i2memset@c,c
 14130  011804  0E00               	movlw	0
 14131  011806  6E06               	movwf	i2memset@n+1,c
 14132  011808  0E02               	movlw	2
 14133  01180A  6E05               	movwf	i2memset@n,c
 14134  01180C  EC69  F09F         	call	i2_memset	;wreg free
 14135                           
 14136                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14137  011810  0E16               	movlw	22
 14138  011812  010F               	movlb	15	; () banked
 14139  011814  6F39               	movwf	57,b	;volatile
 14140                           
 14141                           ; BSR set to: 15
 14142  011816  0E9F               	movlw	159
 14143  011818  010F               	movlb	15	; () banked
 14144  01181A  6F37               	movwf	55,b	;volatile
 14145                           
 14146                           ; BSR set to: 15
 14147  01181C  0E7B               	movlw	123
 14148  01181E  010F               	movlb	15	; () banked
 14149  011820  6F36               	movwf	54,b	;volatile
 14150                           
 14151                           ; BSR set to: 15
 14152                           ;usb_device.c: 318: ;
 14153                           ;usb_device.c: 321: ;
 14154                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14155  011822  0E00               	movlw	0
 14156  011824  6E09               	movwf	i2USBDeviceInit@i,c
 14157  011826                     i2l6856:
 14158                           
 14159                           ; BSR set to: 15
 14160  011826  0E0B               	movlw	11
 14161  011828  6409               	cpfsgt	i2USBDeviceInit@i,c
 14162  01182A  D001               	goto	i2l6860
 14163  01182C  D00E               	goto	i2l146
 14164  01182E                     i2l6860:
 14165                           
 14166                           ;usb_device.c: 325: {
 14167                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14168  01182E  5009               	movf	i2USBDeviceInit@i,w,c
 14169  011830  0D04               	mullw	4
 14170  011832  0E00               	movlw	0
 14171  011834  24F3               	addwf	prodl,w,c
 14172  011836  6ED9               	movwf	fsr2l,c
 14173  011838  0E0D               	movlw	13
 14174  01183A  20F4               	addwfc	prodh,w,c
 14175  01183C  6EDA               	movwf	fsr2h,c
 14176  01183E  6ADE               	clrf	postinc2,c
 14177  011840  6ADE               	clrf	postinc2,c
 14178  011842  6ADE               	clrf	postinc2,c
 14179  011844  6ADD               	clrf	postdec2,c
 14180  011846  2A09               	incf	i2USBDeviceInit@i,f,c
 14181  011848  D7EE               	goto	i2l6856
 14182  01184A                     i2l146:
 14183                           
 14184                           ;usb_device.c: 327: }
 14185                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14186  01184A  8C65               	bsf	3941,6,c	;volatile
 14187                           
 14188                           ;usb_device.c: 333: UADDR = 0x00;
 14189  01184C  0E00               	movlw	0
 14190  01184E  010F               	movlb	15	; () banked
 14191  011850  6F38               	movwf	56,b	;volatile
 14192                           
 14193                           ; BSR set to: 15
 14194                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14195  011852  9865               	bcf	3941,4,c	;volatile
 14196                           
 14197                           ; BSR set to: 15
 14198                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14199  011854  9C65               	bcf	3941,6,c	;volatile
 14200                           
 14201                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14202  011856  D00C               	goto	i2l6880
 14203  011858                     i2l6872:
 14204                           
 14205                           ;usb_device.c: 343: {
 14206                           ;usb_device.c: 344: (UIR &= 0xF7);
 14207  011858  9662               	bcf	3938,3,c	;volatile
 14208                           
 14209                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14210  01185A  0E00               	movlw	0
 14211  01185C  0100               	movlb	0	; () banked
 14212  01185E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14216  011860  0E00               	movlw	0
 14217  011862  0100               	movlb	0	; () banked
 14218  011864  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14222  011866  0E00               	movlw	0
 14223  011868  0100               	movlb	0	; () banked
 14224  01186A  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 14225  01186C  0E00               	movlw	0
 14226  01186E  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 14227  011870                     i2l6880:
 14228  011870  B662               	btfsc	3938,3,c	;volatile
 14229  011872  D7F2               	goto	i2l6872
 14230                           
 14231                           ;usb_device.c: 349: }
 14232                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14233  011874  0E01               	movlw	1
 14234  011876  6E43               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14235                           
 14236                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14237  011878  0E01               	movlw	1
 14238  01187A  6E44               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14239                           
 14240                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14241  01187C  0E00               	movlw	0
 14242  01187E  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14243                           
 14244                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14245  011880  0E00               	movlw	0
 14246  011882  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14247                           
 14248                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14249  011884  0E00               	movlw	0
 14250  011886  0100               	movlb	0	; () banked
 14251  011888  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14252                           
 14253                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14254  01188A  0E00               	movlw	0
 14255  01188C  6E09               	movwf	i2USBDeviceInit@i,c
 14256  01188E                     i2l6884:
 14257                           
 14258                           ; BSR set to: 0
 14259  01188E  0E02               	movlw	2
 14260  011890  6409               	cpfsgt	i2USBDeviceInit@i,c
 14261  011892  D001               	goto	i2l6888
 14262  011894  D02E               	goto	i2l6894
 14263  011896                     i2l6888:
 14264                           
 14265                           ;usb_device.c: 363: {
 14266                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14267  011896  5009               	movf	i2USBDeviceInit@i,w,c
 14268  011898  0D02               	mullw	2
 14269  01189A  0ED8               	movlw	low _pBDTEntryIn
 14270  01189C  24F3               	addwf	prodl,w,c
 14271  01189E  6ED9               	movwf	fsr2l,c
 14272  0118A0  0E00               	movlw	high _pBDTEntryIn
 14273  0118A2  20F4               	addwfc	prodh,w,c
 14274  0118A4  6EDA               	movwf	fsr2h,c
 14275  0118A6  0E00               	movlw	0
 14276  0118A8  6EDE               	movwf	postinc2,c
 14277  0118AA  0E00               	movlw	0
 14278  0118AC  6EDD               	movwf	postdec2,c
 14279                           
 14280                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14281  0118AE  5009               	movf	i2USBDeviceInit@i,w,c
 14282  0118B0  0D02               	mullw	2
 14283  0118B2  0EDE               	movlw	low _pBDTEntryOut
 14284  0118B4  24F3               	addwf	prodl,w,c
 14285  0118B6  6ED9               	movwf	fsr2l,c
 14286  0118B8  0E00               	movlw	high _pBDTEntryOut
 14287  0118BA  20F4               	addwfc	prodh,w,c
 14288  0118BC  6EDA               	movwf	fsr2h,c
 14289  0118BE  0E00               	movlw	0
 14290  0118C0  6EDE               	movwf	postinc2,c
 14291  0118C2  0E00               	movlw	0
 14292  0118C4  6EDD               	movwf	postdec2,c
 14293                           
 14294                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14295  0118C6  5009               	movf	i2USBDeviceInit@i,w,c
 14296  0118C8  0D01               	mullw	1
 14297  0118CA  0EE4               	movlw	low _ep_data_in
 14298  0118CC  24F3               	addwf	prodl,w,c
 14299  0118CE  6ED9               	movwf	fsr2l,c
 14300  0118D0  0E00               	movlw	high _ep_data_in
 14301  0118D2  20F4               	addwfc	prodh,w,c
 14302  0118D4  6EDA               	movwf	fsr2h,c
 14303  0118D6  0E00               	movlw	0
 14304  0118D8  6EDF               	movwf	indf2,c
 14305                           
 14306                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14307  0118DA  5009               	movf	i2USBDeviceInit@i,w,c
 14308  0118DC  0D01               	mullw	1
 14309  0118DE  0EE7               	movlw	low _ep_data_out
 14310  0118E0  24F3               	addwf	prodl,w,c
 14311  0118E2  6ED9               	movwf	fsr2l,c
 14312  0118E4  0E00               	movlw	high _ep_data_out
 14313  0118E6  20F4               	addwfc	prodh,w,c
 14314  0118E8  6EDA               	movwf	fsr2h,c
 14315  0118EA  0E00               	movlw	0
 14316  0118EC  6EDF               	movwf	indf2,c
 14317  0118EE  2A09               	incf	i2USBDeviceInit@i,f,c
 14318  0118F0  D7CE               	goto	i2l6884
 14319  0118F2                     i2l6894:
 14320                           
 14321                           ;usb_device.c: 368: }
 14322                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14323  0118F2  0E08               	movlw	8
 14324  0118F4  0100               	movlb	0	; () banked
 14325  0118F6  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 14326  0118F8  0E0D               	movlw	13
 14327  0118FA  0100               	movlb	0	; () banked
 14328  0118FC  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14329                           
 14330                           ; BSR set to: 0
 14331                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 14332  0118FE  0E16               	movlw	22
 14333  011900  010F               	movlb	15	; () banked
 14334  011902  6F26               	movwf	38,b	;volatile
 14335                           
 14336                           ; BSR set to: 15
 14337                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14338  011904  0E0D               	movlw	13
 14339  011906  010D               	movlb	13	; () banked
 14340  011908  6F03               	movwf	3,b	;volatile
 14341  01190A  0E30               	movlw	48
 14342  01190C  6F02               	movwf	2,b	;volatile
 14343                           
 14344                           ; BSR set to: 13
 14345                           ;usb_device.c: 376: BDT[0].CNT = 8;
 14346  01190E  0E08               	movlw	8
 14347  011910  010D               	movlb	13	; () banked
 14348  011912  6F01               	movwf	1,b	;volatile
 14349                           
 14350                           ; BSR set to: 13
 14351                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 14352  011914  0E04               	movlw	4
 14353  011916  010D               	movlb	13	; () banked
 14354  011918  6F00               	movwf	0,b	;volatile
 14355                           
 14356                           ; BSR set to: 13
 14357                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 14358  01191A  010D               	movlb	13	; () banked
 14359  01191C  8F00               	bsf	0,7,b	;volatile
 14360                           
 14361                           ; BSR set to: 13
 14362                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 14363  01191E  0E00               	movlw	0
 14364  011920  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 14365                           
 14366                           ; BSR set to: 13
 14367                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 14368  011922  0E00               	movlw	0
 14369  011924  6E42               	movwf	_USBDeviceState,c	;volatile
 14370                           
 14371                           ; BSR set to: 13
 14372  011926  0012               	return		;funcret
 14373  011928                     __end_ofi2_USBDeviceInit:
 14374                           	opt stack 0
 14375                           pclatu	equ	0xFFB
 14376                           pclath	equ	0xFFA
 14377                           tblptru	equ	0xFF8
 14378                           tblptrh	equ	0xFF7
 14379                           tblptrl	equ	0xFF6
 14380                           tablat	equ	0xFF5
 14381                           prodh	equ	0xFF4
 14382                           prodl	equ	0xFF3
 14383                           intcon	equ	0xFF2
 14384                           intcon2	equ	0xFF1
 14385                           indf0	equ	0xFEF
 14386                           postinc0	equ	0xFEE
 14387                           fsr0h	equ	0xFEA
 14388                           fsr0l	equ	0xFE9
 14389                           wreg	equ	0xFE8
 14390                           indf1	equ	0xFE7
 14391                           postinc1	equ	0xFE6
 14392                           postdec1	equ	0xFE5
 14393                           fsr1h	equ	0xFE2
 14394                           fsr1l	equ	0xFE1
 14395                           indf2	equ	0xFDF
 14396                           postinc2	equ	0xFDE
 14397                           postdec2	equ	0xFDD
 14398                           plusw2	equ	0xFDB
 14399                           fsr2h	equ	0xFDA
 14400                           fsr2l	equ	0xFD9
 14401                           status	equ	0xFD8
 14402                           
 14403 ;; *************** function _USBWakeFromSuspend *****************
 14404 ;; Defined at:
 14405 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;		None
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;		None
 14410 ;; Return value:  Size  Location     Type
 14411 ;;		None               void
 14412 ;; Registers used:
 14413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;Total ram usage:        0 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    4
 14426 ;; This function calls:
 14427 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14428 ;; This function is called by:
 14429 ;;		_USBDeviceTasks
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text71
 14434  013D92                     __ptext71:
 14435                           	opt stack 0
 14436  013D92                     _USBWakeFromSuspend:
 14437                           	opt stack 14
 14438                           
 14439                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 14440                           
 14441                           ; BSR set to: 13
 14442                           ;incstack = 0
 14443  013D92  0E00               	movlw	0
 14444  013D94  0100               	movlb	0	; () banked
 14445  013D96  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14446                           
 14447                           ; BSR set to: 0
 14448                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 14449  013D98  0E00               	movlw	0
 14450  013D9A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14451  013D9C  0E74               	movlw	116
 14452  013D9E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14453  013DA0  0E00               	movlw	0
 14454  013DA2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14455  013DA4  0E00               	movlw	0
 14456  013DA6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14457  013DA8  0E00               	movlw	0
 14458  013DAA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14459  013DAC  0E00               	movlw	0
 14460  013DAE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14461  013DB0  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14462                           
 14463                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 14464  013DB4  9265               	bcf	3941,1,c	;volatile
 14465                           
 14466                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 14467  013DB6  010F               	movlb	15	; () banked
 14468  013DB8  9536               	bcf	54,2,b	;volatile
 14469                           
 14470                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 14471  013DBA  D001               	goto	i2l6584
 14472  013DBC                     i2l6582:
 14473                           
 14474                           ;usb_device.c: 2342: {
 14475                           ;usb_device.c: 2343: (UIR &= 0xFB);
 14476  013DBC  9462               	bcf	3938,2,c	;volatile
 14477  013DBE                     i2l6584:
 14478  013DBE  A462               	btfss	3938,2,c	;volatile
 14479  013DC0  0012               	return	
 14480  013DC2  D7FC               	goto	i2l6582
 14481  013DC4                     __end_of_USBWakeFromSuspend:
 14482                           	opt stack 0
 14483                           pclatu	equ	0xFFB
 14484                           pclath	equ	0xFFA
 14485                           tblptru	equ	0xFF8
 14486                           tblptrh	equ	0xFF7
 14487                           tblptrl	equ	0xFF6
 14488                           tablat	equ	0xFF5
 14489                           prodh	equ	0xFF4
 14490                           prodl	equ	0xFF3
 14491                           intcon	equ	0xFF2
 14492                           intcon2	equ	0xFF1
 14493                           indf0	equ	0xFEF
 14494                           postinc0	equ	0xFEE
 14495                           fsr0h	equ	0xFEA
 14496                           fsr0l	equ	0xFE9
 14497                           wreg	equ	0xFE8
 14498                           indf1	equ	0xFE7
 14499                           postinc1	equ	0xFE6
 14500                           postdec1	equ	0xFE5
 14501                           fsr1h	equ	0xFE2
 14502                           fsr1l	equ	0xFE1
 14503                           indf2	equ	0xFDF
 14504                           postinc2	equ	0xFDE
 14505                           postdec2	equ	0xFDD
 14506                           plusw2	equ	0xFDB
 14507                           fsr2h	equ	0xFDA
 14508                           fsr2l	equ	0xFD9
 14509                           status	equ	0xFD8
 14510                           
 14511 ;; *************** function _USBSuspend *****************
 14512 ;; Defined at:
 14513 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;		None
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;		None
 14518 ;; Return value:  Size  Location     Type
 14519 ;;		None               void
 14520 ;; Registers used:
 14521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14531 ;;Total ram usage:        0 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; Hardware stack levels required when called:    4
 14534 ;; This function calls:
 14535 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14536 ;; This function is called by:
 14537 ;;		_USBDeviceTasks
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	text72
 14542  013EA6                     __ptext72:
 14543                           	opt stack 0
 14544  013EA6                     _USBSuspend:
 14545                           	opt stack 14
 14546                           
 14547                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 14548                           
 14549                           ;incstack = 0
 14550  013EA6  010F               	movlb	15	; () banked
 14551  013EA8  8536               	bsf	54,2,b	;volatile
 14552                           
 14553                           ; BSR set to: 15
 14554                           ;usb_device.c: 2271: (UIR &= 0xEF);
 14555  013EAA  9862               	bcf	3938,4,c	;volatile
 14556                           
 14557                           ; BSR set to: 15
 14558                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 14559  013EAC  8265               	bsf	3941,1,c	;volatile
 14560                           
 14561                           ; BSR set to: 15
 14562                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 14563  013EAE  0E01               	movlw	1
 14564  013EB0  0100               	movlb	0	; () banked
 14565  013EB2  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 14569  013EB4  0E00               	movlw	0
 14570  013EB6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14571  013EB8  0E75               	movlw	117
 14572  013EBA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14573  013EBC  0E00               	movlw	0
 14574  013EBE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14575  013EC0  0E00               	movlw	0
 14576  013EC2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14577  013EC4  0E00               	movlw	0
 14578  013EC6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14579  013EC8  0E00               	movlw	0
 14580  013ECA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14581  013ECC  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14582  013ED0  0012               	return		;funcret
 14583  013ED2                     __end_of_USBSuspend:
 14584                           	opt stack 0
 14585                           pclatu	equ	0xFFB
 14586                           pclath	equ	0xFFA
 14587                           tblptru	equ	0xFF8
 14588                           tblptrh	equ	0xFF7
 14589                           tblptrl	equ	0xFF6
 14590                           tablat	equ	0xFF5
 14591                           prodh	equ	0xFF4
 14592                           prodl	equ	0xFF3
 14593                           intcon	equ	0xFF2
 14594                           intcon2	equ	0xFF1
 14595                           indf0	equ	0xFEF
 14596                           postinc0	equ	0xFEE
 14597                           fsr0h	equ	0xFEA
 14598                           fsr0l	equ	0xFE9
 14599                           wreg	equ	0xFE8
 14600                           indf1	equ	0xFE7
 14601                           postinc1	equ	0xFE6
 14602                           postdec1	equ	0xFE5
 14603                           fsr1h	equ	0xFE2
 14604                           fsr1l	equ	0xFE1
 14605                           indf2	equ	0xFDF
 14606                           postinc2	equ	0xFDE
 14607                           postdec2	equ	0xFDD
 14608                           plusw2	equ	0xFDB
 14609                           fsr2h	equ	0xFDA
 14610                           fsr2l	equ	0xFD9
 14611                           status	equ	0xFD8
 14612                           
 14613 ;; *************** function _USBStallHandler *****************
 14614 ;; Defined at:
 14615 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;		None
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;		None
 14620 ;; Return value:  Size  Location     Type
 14621 ;;		None               void
 14622 ;; Registers used:
 14623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14624 ;; Tracked objects:
 14625 ;;		On entry : 0/0
 14626 ;;		On exit  : 0/0
 14627 ;;		Unchanged: 0/0
 14628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14633 ;;Total ram usage:        1 bytes
 14634 ;; Hardware stack levels used:    1
 14635 ;; This function calls:
 14636 ;;		Nothing
 14637 ;; This function is called by:
 14638 ;;		_USBDeviceTasks
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text73
 14643  013BC0                     __ptext73:
 14644                           	opt stack 0
 14645  013BC0                     _USBStallHandler:
 14646                           	opt stack 18
 14647                           
 14648                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 14649                           
 14650                           ;incstack = 0
 14651  013BC0  010F               	movlb	15	; () banked
 14652  013BC2  A126               	btfss	38,0,b	;volatile
 14653  013BC4  D01E               	goto	i2l308
 14654                           
 14655                           ; BSR set to: 15
 14656                           ;usb_device.c: 2215: {
 14657                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 14658  013BC6  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14659  013BCA  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14660  013BCE  0E80               	movlw	128
 14661  013BD0  18DE               	xorwf	postinc2,w,c
 14662  013BD2  A4D8               	btfss	status,2,c
 14663  013BD4  D014               	goto	i2l6606
 14664                           
 14665                           ; BSR set to: 15
 14666  013BD6  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14667  013BDA  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14668  013BDE  0E84               	movlw	132
 14669  013BE0  18DE               	xorwf	postinc2,w,c
 14670  013BE2  A4D8               	btfss	status,2,c
 14671  013BE4  D00C               	goto	i2l6606
 14672                           
 14673                           ; BSR set to: 15
 14674                           ;usb_device.c: 2218: {
 14675                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14676  013BE6  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14677  013BEA  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14678  013BEE  0E0C               	movlw	12
 14679  013BF0  6EDF               	movwf	indf2,c
 14680                           
 14681                           ; BSR set to: 15
 14682                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14683  013BF2  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14684  013BF6  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14685  013BFA  0E00               	movlw	0
 14686  013BFC  8EDB               	bsf	plusw2,7,c
 14687  013BFE                     i2l6606:
 14688                           
 14689                           ; BSR set to: 15
 14690                           ;usb_device.c: 2222: }
 14691                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 14692  013BFE  010F               	movlb	15	; () banked
 14693  013C00  9126               	bcf	38,0,b	;volatile
 14694  013C02                     i2l308:
 14695                           
 14696                           ; BSR set to: 15
 14697                           ;usb_device.c: 2224: }
 14698                           ;usb_device.c: 2226: (UIR &= 0xDF);
 14699  013C02  9A62               	bcf	3938,5,c	;volatile
 14700                           
 14701                           ; BSR set to: 15
 14702  013C04  0012               	return		;funcret
 14703  013C06                     __end_of_USBStallHandler:
 14704                           	opt stack 0
 14705                           pclatu	equ	0xFFB
 14706                           pclath	equ	0xFFA
 14707                           tblptru	equ	0xFF8
 14708                           tblptrh	equ	0xFF7
 14709                           tblptrl	equ	0xFF6
 14710                           tablat	equ	0xFF5
 14711                           prodh	equ	0xFF4
 14712                           prodl	equ	0xFF3
 14713                           intcon	equ	0xFF2
 14714                           intcon2	equ	0xFF1
 14715                           indf0	equ	0xFEF
 14716                           postinc0	equ	0xFEE
 14717                           fsr0h	equ	0xFEA
 14718                           fsr0l	equ	0xFE9
 14719                           wreg	equ	0xFE8
 14720                           indf1	equ	0xFE7
 14721                           postinc1	equ	0xFE6
 14722                           postdec1	equ	0xFE5
 14723                           fsr1h	equ	0xFE2
 14724                           fsr1l	equ	0xFE1
 14725                           indf2	equ	0xFDF
 14726                           postinc2	equ	0xFDE
 14727                           postdec2	equ	0xFDD
 14728                           plusw2	equ	0xFDB
 14729                           fsr2h	equ	0xFDA
 14730                           fsr2l	equ	0xFD9
 14731                           status	equ	0xFD8
 14732                           
 14733 ;; *************** function _USBCtrlEPService *****************
 14734 ;; Defined at:
 14735 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;		None
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 14740 ;; Return value:  Size  Location     Type
 14741 ;;		None               void
 14742 ;; Registers used:
 14743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14744 ;; Tracked objects:
 14745 ;;		On entry : 0/0
 14746 ;;		On exit  : 0/0
 14747 ;;		Unchanged: 0/0
 14748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14753 ;;Total ram usage:        3 bytes
 14754 ;; Hardware stack levels used:    1
 14755 ;; Hardware stack levels required when called:    7
 14756 ;; This function calls:
 14757 ;;		_USBCtrlTrfInHandler
 14758 ;;		_USBCtrlTrfOutHandler
 14759 ;;		_USBCtrlTrfSetupHandler
 14760 ;; This function is called by:
 14761 ;;		_USBDeviceTasks
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765                           	psect	text74
 14766  012764                     __ptext74:
 14767                           	opt stack 0
 14768  012764                     _USBCtrlEPService:
 14769                           	opt stack 11
 14770                           
 14771                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 14772                           
 14773                           ; BSR set to: 15
 14774                           ;incstack = 0
 14775  012764  0E2D               	movlw	45
 14776  012766  6E45               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 14777                           
 14778                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 14779  012768  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14780  01276C  0EFD               	movlw	253
 14781  01276E  161B               	andwf	??_USBCtrlEPService,f,c
 14782  012770  A4D8               	btfss	status,2,c
 14783  012772  D057               	goto	i2l6640
 14784                           
 14785                           ;usb_device.c: 2380: {
 14786                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 14787  012774  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14788  012778  90D8               	bcf	status,0,c
 14789  01277A  321B               	rrcf	??_USBCtrlEPService,f,c
 14790  01277C  0E3F               	movlw	63
 14791  01277E  161B               	andwf	??_USBCtrlEPService,f,c
 14792  012780  501B               	movf	??_USBCtrlEPService,w,c
 14793  012782  0D04               	mullw	4
 14794  012784  0E00               	movlw	0
 14795  012786  24F3               	addwf	prodl,w,c
 14796  012788  6E31               	movwf	_pBDTEntryEP0OutCurrent,c
 14797  01278A  0E0D               	movlw	13
 14798  01278C  20F4               	addwfc	prodh,w,c
 14799  01278E  6E32               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14800                           
 14801                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14802  012790  C031  F033         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14803  012794  C032  F034         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14804                           
 14805                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 14806  012798  0E04               	movlw	4
 14807  01279A  1A33               	xorwf	_pBDTEntryEP0OutNext,f,c
 14808                           
 14809                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 14810  01279C  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14811  0127A0  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14812  0127A4  30DF               	rrcf	indf2,w,c
 14813  0127A6  32E8               	rrcf	wreg,f,c
 14814  0127A8  0B0F               	andlw	15
 14815  0127AA  0A0D               	xorlw	13
 14816  0127AC  A4D8               	btfss	status,2,c
 14817  0127AE  D036               	goto	i2l6638
 14818                           
 14819                           ;usb_device.c: 2397: {
 14820                           ;usb_device.c: 2398: unsigned char setup_cnt;
 14821                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 14822  0127B0  0E00               	movlw	0
 14823  0127B2  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 14824  0127B4                     i2l6622:
 14825  0127B4  0E07               	movlw	7
 14826  0127B6  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 14827  0127B8  D001               	goto	i2l6626
 14828  0127BA  D023               	goto	i2l6634
 14829  0127BC                     i2l6626:
 14830                           
 14831                           ;usb_device.c: 2405: {
 14832                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 14833  0127BC  EE20 F002          	lfsr	2,2
 14834  0127C0  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
 14835  0127C2  26D9               	addwf	fsr2l,f,c
 14836  0127C4  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14837  0127C6  22DA               	addwfc	fsr2h,f,c
 14838  0127C8  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 14839  0127CC  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 14840  0127D0  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 14841  0127D4  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 14842  0127D8  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 14843  0127DA  0D01               	mullw	1
 14844  0127DC  0E30               	movlw	48
 14845  0127DE  24F3               	addwf	prodl,w,c
 14846  0127E0  6EE1               	movwf	fsr1l,c
 14847  0127E2  0E0D               	movlw	13
 14848  0127E4  20F4               	addwfc	prodh,w,c
 14849  0127E6  6EE2               	movwf	fsr1h,c
 14850  0127E8  CFDF FFE7          	movff	indf2,indf1
 14851                           
 14852                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 14853  0127EC  EE20 F002          	lfsr	2,2
 14854  0127F0  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
 14855  0127F2  26D9               	addwf	fsr2l,f,c
 14856  0127F4  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14857  0127F6  22DA               	addwfc	fsr2h,f,c
 14858  0127F8  2ADE               	incf	postinc2,f,c
 14859  0127FA  0E00               	movlw	0
 14860  0127FC  22DD               	addwfc	postdec2,f,c
 14861  0127FE  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 14862  012800  D7D9               	goto	i2l6622
 14863  012802                     i2l6634:
 14864                           
 14865                           ;usb_device.c: 2408: }
 14866                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14867  012802  EE20 F002          	lfsr	2,2
 14868  012806  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
 14869  012808  26D9               	addwf	fsr2l,f,c
 14870  01280A  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14871  01280C  22DA               	addwfc	fsr2h,f,c
 14872  01280E  0E30               	movlw	48
 14873  012810  6EDE               	movwf	postinc2,c
 14874  012812  0E0D               	movlw	13
 14875  012814  6EDD               	movwf	postdec2,c
 14876                           
 14877                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 14878  012816  EC35  F09A         	call	_USBCtrlTrfSetupHandler	;wreg free
 14879                           
 14880                           ;usb_device.c: 2413: }
 14881  01281A  0012               	return	
 14882  01281C                     i2l6638:
 14883                           
 14884                           ;usb_device.c: 2414: else
 14885                           ;usb_device.c: 2415: {
 14886                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 14887  01281C  EC15  F09D         	call	_USBCtrlTrfOutHandler	;wreg free
 14888                           
 14889                           ;usb_device.c: 2418: }
 14890                           ;usb_device.c: 2419: }
 14891  012820  0012               	return	
 14892  012822                     i2l6640:
 14893                           
 14894                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 14895  012822  5057               	movf	_USTATcopy,w,c	;volatile
 14896  012824  0BFD               	andlw	253
 14897  012826  0A04               	xorlw	4
 14898  012828  A4D8               	btfss	status,2,c
 14899  01282A  0012               	return	
 14900                           
 14901                           ;usb_device.c: 2421: {
 14902                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 14903  01282C  ECE1  F094         	call	_USBCtrlTrfInHandler	;wreg free
 14904  012830  0012               	return	
 14905  012832                     __end_of_USBCtrlEPService:
 14906                           	opt stack 0
 14907                           pclatu	equ	0xFFB
 14908                           pclath	equ	0xFFA
 14909                           tblptru	equ	0xFF8
 14910                           tblptrh	equ	0xFF7
 14911                           tblptrl	equ	0xFF6
 14912                           tablat	equ	0xFF5
 14913                           prodh	equ	0xFF4
 14914                           prodl	equ	0xFF3
 14915                           intcon	equ	0xFF2
 14916                           intcon2	equ	0xFF1
 14917                           indf0	equ	0xFEF
 14918                           postinc0	equ	0xFEE
 14919                           fsr0h	equ	0xFEA
 14920                           fsr0l	equ	0xFE9
 14921                           wreg	equ	0xFE8
 14922                           indf1	equ	0xFE7
 14923                           postinc1	equ	0xFE6
 14924                           postdec1	equ	0xFE5
 14925                           fsr1h	equ	0xFE2
 14926                           fsr1l	equ	0xFE1
 14927                           indf2	equ	0xFDF
 14928                           postinc2	equ	0xFDE
 14929                           postdec2	equ	0xFDD
 14930                           plusw2	equ	0xFDB
 14931                           fsr2h	equ	0xFDA
 14932                           fsr2l	equ	0xFD9
 14933                           status	equ	0xFD8
 14934                           
 14935 ;; *************** function _USBCtrlTrfSetupHandler *****************
 14936 ;; Defined at:
 14937 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 14938 ;; Parameters:    Size  Location     Type
 14939 ;;		None
 14940 ;; Auto vars:     Size  Location     Type
 14941 ;;		None
 14942 ;; Return value:  Size  Location     Type
 14943 ;;		None               void
 14944 ;; Registers used:
 14945 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14955 ;;Total ram usage:        0 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:    6
 14958 ;; This function calls:
 14959 ;;		_USBCheckStdRequest
 14960 ;;		_USBCtrlEPServiceComplete
 14961 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14962 ;; This function is called by:
 14963 ;;		_USBCtrlEPService
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text75
 14968  01346A                     __ptext75:
 14969                           	opt stack 0
 14970  01346A                     _USBCtrlTrfSetupHandler:
 14971                           	opt stack 11
 14972                           
 14973                           ;usb_device.c: 2474: shortPacketStatus = 0;
 14974                           
 14975                           ;incstack = 0
 14976  01346A  0E00               	movlw	0
 14977  01346C  6E4A               	movwf	_shortPacketStatus,c	;volatile
 14978                           
 14979                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 14980  01346E  0E00               	movlw	0
 14981  013470  6E41               	movwf	_USBDeferStatusStagePacket,c	;volatile
 14982                           
 14983                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 14984  013472  0E00               	movlw	0
 14985  013474  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14986                           
 14987                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 14988  013476  0E00               	movlw	0
 14989  013478  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14990                           
 14991                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 14992  01347A  0E00               	movlw	0
 14993  01347C  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14994                           
 14995                           ;usb_device.c: 2479: controlTransferState = 0;
 14996  01347E  0E00               	movlw	0
 14997  013480  6E47               	movwf	_controlTransferState,c	;volatile
 14998                           
 14999                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15000  013482  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15001  013486  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15002  01348A  0E7F               	movlw	127
 15003  01348C  16DF               	andwf	indf2,f,c
 15004                           
 15005                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15006  01348E  0E04               	movlw	4
 15007  013490  0100               	movlb	0	; () banked
 15008  013492  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15012  013494  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15013  013498  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15014  01349C  0E7F               	movlw	127
 15015  01349E  16DF               	andwf	indf2,f,c
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15019  0134A0  0E04               	movlw	4
 15020  0134A2  0100               	movlb	0	; () banked
 15021  0134A4  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15025  0134A6  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15026  0134AA  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15027  0134AE  0E7F               	movlw	127
 15028  0134B0  16DF               	andwf	indf2,f,c
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 15032  0134B2  0E00               	movlw	0
 15033  0134B4  0100               	movlb	0	; () banked
 15034  0134B6  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15035                           
 15036                           ; BSR set to: 0
 15037                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 15038  0134B8  0E00               	movlw	0
 15039  0134BA  0100               	movlb	0	; () banked
 15040  0134BC  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15041  0134BE  0E00               	movlw	0
 15042  0134C0  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15043                           
 15044                           ; BSR set to: 0
 15045                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 15046  0134C2  0E00               	movlw	0
 15047  0134C4  0100               	movlb	0	; () banked
 15048  0134C6  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 15052  0134C8  0E00               	movlw	0
 15053  0134CA  0100               	movlb	0	; () banked
 15054  0134CC  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 15055  0134CE  0E00               	movlw	0
 15056  0134D0  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;usb_device.c: 2503: USBCheckStdRequest();
 15060  0134D2  EC13  F08E         	call	_USBCheckStdRequest	;wreg free
 15061                           
 15062                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 15063  0134D6  0E00               	movlw	0
 15064  0134D8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15065  0134DA  0E03               	movlw	3
 15066  0134DC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15067  0134DE  0E00               	movlw	0
 15068  0134E0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15069  0134E2  0E00               	movlw	0
 15070  0134E4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15071  0134E6  0E00               	movlw	0
 15072  0134E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15073  0134EA  0E00               	movlw	0
 15074  0134EC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15075  0134EE  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15076                           
 15077                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 15078  0134F2  EC20  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 15079  0134F6  0012               	return		;funcret
 15080  0134F8                     __end_of_USBCtrlTrfSetupHandler:
 15081                           	opt stack 0
 15082                           pclatu	equ	0xFFB
 15083                           pclath	equ	0xFFA
 15084                           tblptru	equ	0xFF8
 15085                           tblptrh	equ	0xFF7
 15086                           tblptrl	equ	0xFF6
 15087                           tablat	equ	0xFF5
 15088                           prodh	equ	0xFF4
 15089                           prodl	equ	0xFF3
 15090                           intcon	equ	0xFF2
 15091                           intcon2	equ	0xFF1
 15092                           indf0	equ	0xFEF
 15093                           postinc0	equ	0xFEE
 15094                           fsr0h	equ	0xFEA
 15095                           fsr0l	equ	0xFE9
 15096                           wreg	equ	0xFE8
 15097                           indf1	equ	0xFE7
 15098                           postinc1	equ	0xFE6
 15099                           postdec1	equ	0xFE5
 15100                           fsr1h	equ	0xFE2
 15101                           fsr1l	equ	0xFE1
 15102                           indf2	equ	0xFDF
 15103                           postinc2	equ	0xFDE
 15104                           postdec2	equ	0xFDD
 15105                           plusw2	equ	0xFDB
 15106                           fsr2h	equ	0xFDA
 15107                           fsr2l	equ	0xFD9
 15108                           status	equ	0xFD8
 15109                           
 15110 ;; *************** function _USBCtrlEPServiceComplete *****************
 15111 ;; Defined at:
 15112 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 15113 ;; Parameters:    Size  Location     Type
 15114 ;;		None
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;		None               void
 15119 ;; Registers used:
 15120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15130 ;;Total ram usage:        0 bytes
 15131 ;; Hardware stack levels used:    1
 15132 ;; Hardware stack levels required when called:    2
 15133 ;; This function calls:
 15134 ;;		_USBCtrlEPAllowDataStage
 15135 ;;		_USBCtrlEPAllowStatusStage
 15136 ;; This function is called by:
 15137 ;;		_USBCtrlTrfSetupHandler
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text76
 15142  011A40                     __ptext76:
 15143                           	opt stack 0
 15144  011A40                     _USBCtrlEPServiceComplete:
 15145                           	opt stack 14
 15146                           
 15147                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 15148                           
 15149                           ;incstack = 0
 15150  011A40  9865               	bcf	3941,4,c	;volatile
 15151                           
 15152                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 15153  011A42  0100               	movlb	0	; () banked
 15154  011A44  BFD5               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 15155  011A46  D039               	goto	i2l232
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;usb_device.c: 1629: {
 15159                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 15160  011A48  0100               	movlb	0	; () banked
 15161  011A4A  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 15162  011A4C  D00B               	goto	i2l6170
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;usb_device.c: 1631: {
 15166                           ;usb_device.c: 1632: controlTransferState = 2;
 15167  011A4E  0E02               	movlw	2
 15168  011A50  6E47               	movwf	_controlTransferState,c	;volatile
 15169                           
 15170                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 15171  011A52  5040               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 15172  011A54  B4D8               	btfsc	status,2,c
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;usb_device.c: 1644: {
 15176                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 15177  011A56  EC78  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15178                           
 15179                           ;usb_device.c: 1646: }
 15180                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 15181  011A5A  0E00               	movlw	0
 15182  011A5C  6E44               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15183                           
 15184                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 15185  011A5E  0E00               	movlw	0
 15186  011A60  6E43               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15187                           
 15188                           ;usb_device.c: 1652: }
 15189  011A62  0012               	return	
 15190  011A64                     i2l6170:
 15191                           
 15192                           ;usb_device.c: 1653: else
 15193                           ;usb_device.c: 1654: {
 15194                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 15195  011A64  EE20 F001          	lfsr	2,1
 15196  011A68  5033               	movf	_pBDTEntryEP0OutNext,w,c
 15197  011A6A  26D9               	addwf	fsr2l,f,c
 15198  011A6C  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 15199  011A6E  22DA               	addwfc	fsr2h,f,c
 15200  011A70  0E08               	movlw	8
 15201  011A72  6EDF               	movwf	indf2,c
 15202                           
 15203                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15204  011A74  EE20 F002          	lfsr	2,2
 15205  011A78  5033               	movf	_pBDTEntryEP0OutNext,w,c
 15206  011A7A  26D9               	addwf	fsr2l,f,c
 15207  011A7C  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 15208  011A7E  22DA               	addwfc	fsr2h,f,c
 15209  011A80  0E30               	movlw	48
 15210  011A82  6EDE               	movwf	postinc2,c
 15211  011A84  0E0D               	movlw	13
 15212  011A86  6EDD               	movwf	postdec2,c
 15213                           
 15214                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15215  011A88  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15216  011A8C  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15217  011A90  0E0C               	movlw	12
 15218  011A92  6EDF               	movwf	indf2,c
 15219                           
 15220                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15221  011A94  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15222  011A98  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15223  011A9C  0E00               	movlw	0
 15224  011A9E  8EDB               	bsf	plusw2,7,c
 15225                           
 15226                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 15227  011AA0  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15228  011AA4  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15229  011AA8  0E04               	movlw	4
 15230  011AAA  6EDF               	movwf	indf2,c
 15231                           
 15232                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15233  011AAC  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15234  011AB0  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15235  011AB4  0E00               	movlw	0
 15236  011AB6  8EDB               	bsf	plusw2,7,c
 15237                           
 15238                           ;usb_device.c: 1665: }
 15239                           ;usb_device.c: 1666: }
 15240  011AB8  0012               	return	
 15241  011ABA                     i2l232:
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;usb_device.c: 1667: else
 15245                           ;usb_device.c: 1668: {
 15246                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 15247  011ABA  010D               	movlb	13	; () banked
 15248  011ABC  AF30               	btfss	48,7,b	;volatile
 15249  011ABE  D010               	goto	i2l6190
 15250                           
 15251                           ; BSR set to: 13
 15252                           ;usb_device.c: 1670: {
 15253                           ;usb_device.c: 1671: controlTransferState = 1;
 15254  011AC0  0E01               	movlw	1
 15255  011AC2  6E47               	movwf	_controlTransferState,c	;volatile
 15256                           
 15257                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 15258  011AC4  503F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 15259  011AC6  B4D8               	btfsc	status,2,c
 15260                           
 15261                           ; BSR set to: 13
 15262                           ;usb_device.c: 1686: {
 15263                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 15264  011AC8  EC78  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15265                           
 15266                           ;usb_device.c: 1688: }
 15267                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 15268  011ACC  0E00               	movlw	0
 15269  011ACE  6E44               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15270                           
 15271                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 15272  011AD0  0E00               	movlw	0
 15273  011AD2  6E43               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15274                           
 15275                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 15276  011AD4  5041               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15277  011AD6  A4D8               	btfss	status,2,c
 15278  011AD8  0012               	return	
 15279                           
 15280                           ;usb_device.c: 1713: {
 15281                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 15282  011ADA  EC7F  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15283                           
 15284                           ;usb_device.c: 1715: }
 15285                           ;usb_device.c: 1716: }
 15286  011ADE  0012               	return	
 15287  011AE0                     i2l6190:
 15288                           
 15289                           ;usb_device.c: 1717: else
 15290                           ;usb_device.c: 1718: {
 15291                           ;usb_device.c: 1729: controlTransferState = 2;
 15292  011AE0  0E02               	movlw	2
 15293  011AE2  6E47               	movwf	_controlTransferState,c	;volatile
 15294                           
 15295                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 15296  011AE4  EE20 F001          	lfsr	2,1
 15297  011AE8  5033               	movf	_pBDTEntryEP0OutNext,w,c
 15298  011AEA  26D9               	addwf	fsr2l,f,c
 15299  011AEC  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 15300  011AEE  22DA               	addwfc	fsr2h,f,c
 15301  011AF0  0E08               	movlw	8
 15302  011AF2  6EDF               	movwf	indf2,c
 15303                           
 15304                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15305  011AF4  EE20 F002          	lfsr	2,2
 15306  011AF8  5033               	movf	_pBDTEntryEP0OutNext,w,c
 15307  011AFA  26D9               	addwf	fsr2l,f,c
 15308  011AFC  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 15309  011AFE  22DA               	addwfc	fsr2h,f,c
 15310  011B00  0E30               	movlw	48
 15311  011B02  6EDE               	movwf	postinc2,c
 15312  011B04  0E0D               	movlw	13
 15313  011B06  6EDD               	movwf	postdec2,c
 15314                           
 15315                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15316  011B08  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15317  011B0C  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15318  011B10  0E04               	movlw	4
 15319  011B12  6EDF               	movwf	indf2,c
 15320                           
 15321                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15322  011B14  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15323  011B18  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15324  011B1C  0E00               	movlw	0
 15325  011B1E  8EDB               	bsf	plusw2,7,c
 15326                           
 15327                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 15328  011B20  0E00               	movlw	0
 15329  011B22  6E44               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15330                           
 15331                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 15332  011B24  0E00               	movlw	0
 15333  011B26  6E43               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15334                           
 15335                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 15336  011B28  5041               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15337  011B2A  A4D8               	btfss	status,2,c
 15338  011B2C  0012               	return	
 15339                           
 15340                           ;usb_device.c: 1741: {
 15341                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 15342  011B2E  EC7F  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15343  011B32  0012               	return	
 15344  011B34                     __end_of_USBCtrlEPServiceComplete:
 15345                           	opt stack 0
 15346                           pclatu	equ	0xFFB
 15347                           pclath	equ	0xFFA
 15348                           tblptru	equ	0xFF8
 15349                           tblptrh	equ	0xFF7
 15350                           tblptrl	equ	0xFF6
 15351                           tablat	equ	0xFF5
 15352                           prodh	equ	0xFF4
 15353                           prodl	equ	0xFF3
 15354                           intcon	equ	0xFF2
 15355                           intcon2	equ	0xFF1
 15356                           indf0	equ	0xFEF
 15357                           postinc0	equ	0xFEE
 15358                           fsr0h	equ	0xFEA
 15359                           fsr0l	equ	0xFE9
 15360                           wreg	equ	0xFE8
 15361                           indf1	equ	0xFE7
 15362                           postinc1	equ	0xFE6
 15363                           postdec1	equ	0xFE5
 15364                           fsr1h	equ	0xFE2
 15365                           fsr1l	equ	0xFE1
 15366                           indf2	equ	0xFDF
 15367                           postinc2	equ	0xFDE
 15368                           postdec2	equ	0xFDD
 15369                           plusw2	equ	0xFDB
 15370                           fsr2h	equ	0xFDA
 15371                           fsr2l	equ	0xFD9
 15372                           status	equ	0xFD8
 15373                           
 15374 ;; *************** function _USBCtrlEPAllowDataStage *****************
 15375 ;; Defined at:
 15376 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;		None
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;		None
 15381 ;; Return value:  Size  Location     Type
 15382 ;;		None               void
 15383 ;; Registers used:
 15384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15394 ;;Total ram usage:        0 bytes
 15395 ;; Hardware stack levels used:    1
 15396 ;; Hardware stack levels required when called:    1
 15397 ;; This function calls:
 15398 ;;		_USBCtrlTrfTxService
 15399 ;; This function is called by:
 15400 ;;		_USBCtrlEPServiceComplete
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404                           	psect	text77
 15405  0130F0                     __ptext77:
 15406                           	opt stack 0
 15407  0130F0                     _USBCtrlEPAllowDataStage:
 15408                           	opt stack 14
 15409                           
 15410                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 15411                           
 15412                           ;incstack = 0
 15413  0130F0  0E00               	movlw	0
 15414  0130F2  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15415                           
 15416                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 15417  0130F4  0E00               	movlw	0
 15418  0130F6  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15419                           
 15420                           ;usb_device.c: 1493: if(controlTransferState == 2)
 15421  0130F8  0E02               	movlw	2
 15422  0130FA  1847               	xorwf	_controlTransferState,w,c	;volatile
 15423  0130FC  A4D8               	btfss	status,2,c
 15424  0130FE  D01F               	goto	i2l5720
 15425                           
 15426                           ;usb_device.c: 1494: {
 15427                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 15428  013100  EE20 F001          	lfsr	2,1
 15429  013104  5033               	movf	_pBDTEntryEP0OutNext,w,c
 15430  013106  26D9               	addwf	fsr2l,f,c
 15431  013108  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 15432  01310A  22DA               	addwfc	fsr2h,f,c
 15433  01310C  0E08               	movlw	8
 15434  01310E  6EDF               	movwf	indf2,c
 15435                           
 15436                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 15437  013110  EE20 F002          	lfsr	2,2
 15438  013114  5033               	movf	_pBDTEntryEP0OutNext,w,c
 15439  013116  26D9               	addwf	fsr2l,f,c
 15440  013118  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 15441  01311A  22DA               	addwfc	fsr2h,f,c
 15442  01311C  0E38               	movlw	56
 15443  01311E  6EDE               	movwf	postinc2,c
 15444  013120  0E0D               	movlw	13
 15445  013122  6EDD               	movwf	postdec2,c
 15446                           
 15447                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15448  013124  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15449  013128  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15450  01312C  0E48               	movlw	72
 15451  01312E  6EDF               	movwf	indf2,c
 15452                           
 15453                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15454  013130  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15455  013134  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15456  013138  0E00               	movlw	0
 15457  01313A  8EDB               	bsf	plusw2,7,c
 15458                           
 15459                           ;usb_device.c: 1500: }
 15460  01313C  0012               	return	
 15461  01313E                     i2l5720:
 15462                           
 15463                           ;usb_device.c: 1501: else
 15464                           ;usb_device.c: 1502: {
 15465                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 15466  01313E  0100               	movlb	0	; () banked
 15467  013140  51D6               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 15468  013142  010D               	movlb	13	; () banked
 15469  013144  5D36               	subwf	54,w,b	;volatile
 15470  013146  0100               	movlb	0	; () banked
 15471  013148  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 15472  01314A  010D               	movlb	13	; () banked
 15473  01314C  5937               	subwfb	55,w,b	;volatile
 15474  01314E  B0D8               	btfsc	status,0,c
 15475  013150  D004               	goto	i2l5724
 15476                           
 15477                           ; BSR set to: 13
 15478                           ;usb_device.c: 1506: {
 15479                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 15480  013152  CD36 F0D6          	movff	3382,_inPipes+4	;volatile
 15481  013156  CD37 F0D7          	movff	3383,_inPipes+5	;volatile
 15482  01315A                     i2l5724:
 15483                           
 15484                           ; BSR set to: 13
 15485                           ;usb_device.c: 1508: }
 15486                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 15487  01315A  EC33  F091         	call	_USBCtrlTrfTxService	;wreg free
 15488                           
 15489                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 15490  01315E  0100               	movlb	0	; () banked
 15491  013160  EE20 F002          	lfsr	2,2
 15492  013164  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 15493  013166  26D9               	addwf	fsr2l,f,c
 15494  013168  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 15495  01316A  22DA               	addwfc	fsr2h,f,c
 15496  01316C  0E38               	movlw	56
 15497  01316E  6EDE               	movwf	postinc2,c
 15498  013170  0E0D               	movlw	13
 15499  013172  6EDD               	movwf	postdec2,c
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15503  013174  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15504  013178  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15505  01317C  0E48               	movlw	72
 15506  01317E  6EDF               	movwf	indf2,c
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15510  013180  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15511  013184  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15512  013188  0E00               	movlw	0
 15513  01318A  8EDB               	bsf	plusw2,7,c
 15514  01318C  0012               	return	
 15515  01318E                     __end_of_USBCtrlEPAllowDataStage:
 15516                           	opt stack 0
 15517                           pclatu	equ	0xFFB
 15518                           pclath	equ	0xFFA
 15519                           tblptru	equ	0xFF8
 15520                           tblptrh	equ	0xFF7
 15521                           tblptrl	equ	0xFF6
 15522                           tablat	equ	0xFF5
 15523                           prodh	equ	0xFF4
 15524                           prodl	equ	0xFF3
 15525                           intcon	equ	0xFF2
 15526                           intcon2	equ	0xFF1
 15527                           indf0	equ	0xFEF
 15528                           postinc0	equ	0xFEE
 15529                           fsr0h	equ	0xFEA
 15530                           fsr0l	equ	0xFE9
 15531                           wreg	equ	0xFE8
 15532                           indf1	equ	0xFE7
 15533                           postinc1	equ	0xFE6
 15534                           postdec1	equ	0xFE5
 15535                           fsr1h	equ	0xFE2
 15536                           fsr1l	equ	0xFE1
 15537                           indf2	equ	0xFDF
 15538                           postinc2	equ	0xFDE
 15539                           postdec2	equ	0xFDD
 15540                           plusw2	equ	0xFDB
 15541                           fsr2h	equ	0xFDA
 15542                           fsr2l	equ	0xFD9
 15543                           status	equ	0xFD8
 15544                           
 15545 ;; *************** function _USBCheckStdRequest *****************
 15546 ;; Defined at:
 15547 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;		None
 15550 ;; Auto vars:     Size  Location     Type
 15551 ;;		None
 15552 ;; Return value:  Size  Location     Type
 15553 ;;		None               void
 15554 ;; Registers used:
 15555 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15556 ;; Tracked objects:
 15557 ;;		On entry : 0/0
 15558 ;;		On exit  : 0/0
 15559 ;;		Unchanged: 0/0
 15560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15565 ;;Total ram usage:        0 bytes
 15566 ;; Hardware stack levels used:    1
 15567 ;; Hardware stack levels required when called:    5
 15568 ;; This function calls:
 15569 ;;		_USBStdFeatureReqHandler
 15570 ;;		_USBStdGetDscHandler
 15571 ;;		_USBStdGetStatusHandler
 15572 ;;		_USBStdSetCfgHandler
 15573 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15574 ;; This function is called by:
 15575 ;;		_USBCtrlTrfSetupHandler
 15576 ;; This function uses a non-reentrant model
 15577 ;;
 15578                           
 15579                           	psect	text78
 15580  011C26                     __ptext78:
 15581                           	opt stack 0
 15582  011C26                     _USBCheckStdRequest:
 15583                           	opt stack 11
 15584                           
 15585                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 15586                           
 15587                           ;incstack = 0
 15588  011C26  010D               	movlb	13	; () banked
 15589  011C28  3930               	swapf	48,w,b	;volatile
 15590  011C2A  32E8               	rrcf	wreg,f,c
 15591  011C2C  0B03               	andlw	3
 15592  011C2E  0900               	iorlw	0
 15593  011C30  A4D8               	btfss	status,2,c
 15594  011C32  0012               	return	
 15595  011C34  D04F               	goto	i2l6288
 15596  011C36                     i2l359:
 15597                           
 15598                           ; BSR set to: 13
 15599                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 15600  011C36  0100               	movlb	0	; () banked
 15601  011C38  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 15605  011C3A  0E08               	movlw	8
 15606  011C3C  6E42               	movwf	_USBDeviceState,c	;volatile
 15607                           
 15608                           ;usb_device.c: 2699: break;
 15609  011C3E  0012               	return	
 15610  011C40                     i2l6258:
 15611                           
 15612                           ;usb_device.c: 2701: USBStdGetDscHandler();
 15613  011C40  ECA8  F08A         	call	_USBStdGetDscHandler	;wreg free
 15614                           
 15615                           ;usb_device.c: 2702: break;
 15616  011C44  0012               	return	
 15617  011C46                     i2l6260:
 15618                           
 15619                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 15620  011C46  EC78  F08F         	call	_USBStdSetCfgHandler	;wreg free
 15621                           
 15622                           ;usb_device.c: 2705: break;
 15623  011C4A  0012               	return	
 15624  011C4C                     i2l6262:
 15625                           
 15626                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 15627  011C4C  0E56               	movlw	low _USBActiveConfiguration
 15628  011C4E  0100               	movlb	0	; () banked
 15629  011C50  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15630  011C52  0E00               	movlw	high _USBActiveConfiguration
 15631  011C54  0100               	movlb	0	; () banked
 15632  011C56  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15633                           
 15634                           ; BSR set to: 0
 15635                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15636  011C58  0100               	movlb	0	; () banked
 15637  011C5A  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15638                           
 15639                           ; BSR set to: 0
 15640                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 15641  011C5C  0E01               	movlw	1
 15642  011C5E  0100               	movlb	0	; () banked
 15643  011C60  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 15647  011C62  0100               	movlb	0	; () banked
 15648  011C64  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15649                           
 15650                           ;usb_device.c: 2711: break;
 15651  011C66  0012               	return	
 15652  011C68                     i2l6270:
 15653                           
 15654                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 15655  011C68  ECBC  F096         	call	_USBStdGetStatusHandler	;wreg free
 15656                           
 15657                           ;usb_device.c: 2714: break;
 15658  011C6C  0012               	return	
 15659  011C6E                     i2l6272:
 15660                           
 15661                           ;usb_device.c: 2716: case 3:
 15662                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 15663  011C6E  ECFF  F086         	call	_USBStdFeatureReqHandler	;wreg free
 15664                           
 15665                           ;usb_device.c: 2718: break;
 15666  011C72  0012               	return	
 15667  011C74                     i2l6274:
 15668                           
 15669                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 15670  011C74  010D               	movlb	13	; () banked
 15671  011C76  5134               	movf	52,w,b	;volatile
 15672  011C78  0D01               	mullw	1
 15673  011C7A  0E54               	movlw	low _USBAlternateInterface
 15674  011C7C  24F3               	addwf	prodl,w,c
 15675  011C7E  0100               	movlb	0	; () banked
 15676  011C80  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15677  011C82  0E00               	movlw	high _USBAlternateInterface
 15678  011C84  20F4               	addwfc	prodh,w,c
 15679  011C86  0100               	movlb	0	; () banked
 15680  011C88  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15681                           
 15682                           ; BSR set to: 0
 15683                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15684  011C8A  0100               	movlb	0	; () banked
 15685  011C8C  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15686                           
 15687                           ; BSR set to: 0
 15688                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 15689  011C8E  0E01               	movlw	1
 15690  011C90  0100               	movlb	0	; () banked
 15691  011C92  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 15695  011C94  0100               	movlb	0	; () banked
 15696  011C96  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15697                           
 15698                           ;usb_device.c: 2724: break;
 15699  011C98  0012               	return	
 15700  011C9A                     i2l368:
 15701                           
 15702                           ; BSR set to: 13
 15703                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 15704  011C9A  0100               	movlb	0	; () banked
 15705  011C9C  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 15709  011C9E  010D               	movlb	13	; () banked
 15710  011CA0  5134               	movf	52,w,b	;volatile
 15711  011CA2  0D01               	mullw	1
 15712  011CA4  0E54               	movlw	low _USBAlternateInterface
 15713  011CA6  24F3               	addwf	prodl,w,c
 15714  011CA8  6ED9               	movwf	fsr2l,c
 15715  011CAA  0E00               	movlw	high _USBAlternateInterface
 15716  011CAC  20F4               	addwfc	prodh,w,c
 15717  011CAE  6EDA               	movwf	fsr2h,c
 15718  011CB0  CD32 FFDF          	movff	3378,indf2	;volatile
 15719                           
 15720                           ;usb_device.c: 2728: break;
 15721  011CB4  0012               	return	
 15722  011CB6                     i2l6284:
 15723                           
 15724                           ; BSR set to: 13
 15725                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 15726  011CB6  0E00               	movlw	0
 15727  011CB8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15728  011CBA  0E02               	movlw	2
 15729  011CBC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15730  011CBE  0E00               	movlw	0
 15731  011CC0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15732  011CC2  0E00               	movlw	0
 15733  011CC4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15734  011CC6  0E00               	movlw	0
 15735  011CC8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15736  011CCA  0E00               	movlw	0
 15737  011CCC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15738  011CCE  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15739                           
 15740                           ;usb_device.c: 2735: }
 15741                           
 15742                           ;usb_device.c: 2734: break;
 15743                           
 15744                           ;usb_device.c: 2733: default:
 15745                           
 15746                           ;usb_device.c: 2732: case 12:
 15747                           
 15748                           ;usb_device.c: 2731: break;
 15749  011CD2  0012               	return	
 15750  011CD4                     i2l6288:
 15751  011CD4  010D               	movlb	13	; () banked
 15752  011CD6  5131               	movf	49,w,b	;volatile
 15753                           
 15754                           ; Switch size 1, requested type "space"
 15755                           ; Number of cases is 11, Range of values is 0 to 12
 15756                           ; switch strategies available:
 15757                           ; Name         Instructions Cycles
 15758                           ; simple_byte           34    18 (average)
 15759                           ;	Chosen strategy is simple_byte
 15760  011CD8  0A00               	xorlw	0	; case 0
 15761  011CDA  B4D8               	btfsc	status,2,c
 15762  011CDC  D7C5               	goto	i2l6270
 15763  011CDE  0A01               	xorlw	1	; case 1
 15764  011CE0  B4D8               	btfsc	status,2,c
 15765  011CE2  D7C5               	goto	i2l6272
 15766  011CE4  0A02               	xorlw	2	; case 3
 15767  011CE6  B4D8               	btfsc	status,2,c
 15768  011CE8  D7C2               	goto	i2l6272
 15769  011CEA  0A06               	xorlw	6	; case 5
 15770  011CEC  B4D8               	btfsc	status,2,c
 15771  011CEE  D7A3               	goto	i2l359
 15772  011CF0  0A03               	xorlw	3	; case 6
 15773  011CF2  B4D8               	btfsc	status,2,c
 15774  011CF4  D7A5               	goto	i2l6258
 15775  011CF6  0A01               	xorlw	1	; case 7
 15776  011CF8  B4D8               	btfsc	status,2,c
 15777  011CFA  D7DD               	goto	i2l6284
 15778  011CFC  0A0F               	xorlw	15	; case 8
 15779  011CFE  B4D8               	btfsc	status,2,c
 15780  011D00  D7A5               	goto	i2l6262
 15781  011D02  0A01               	xorlw	1	; case 9
 15782  011D04  B4D8               	btfsc	status,2,c
 15783  011D06  D79F               	goto	i2l6260
 15784  011D08  0A03               	xorlw	3	; case 10
 15785  011D0A  B4D8               	btfsc	status,2,c
 15786  011D0C  D7B3               	goto	i2l6274
 15787  011D0E  0A01               	xorlw	1	; case 11
 15788  011D10  B4D8               	btfsc	status,2,c
 15789  011D12  D7C3               	goto	i2l368
 15790  011D14  0A07               	xorlw	7	; case 12
 15791  011D16  0012               	return	
 15792  011D18                     __end_of_USBCheckStdRequest:
 15793                           	opt stack 0
 15794                           pclatu	equ	0xFFB
 15795                           pclath	equ	0xFFA
 15796                           tblptru	equ	0xFF8
 15797                           tblptrh	equ	0xFF7
 15798                           tblptrl	equ	0xFF6
 15799                           tablat	equ	0xFF5
 15800                           prodh	equ	0xFF4
 15801                           prodl	equ	0xFF3
 15802                           intcon	equ	0xFF2
 15803                           intcon2	equ	0xFF1
 15804                           indf0	equ	0xFEF
 15805                           postinc0	equ	0xFEE
 15806                           fsr0h	equ	0xFEA
 15807                           fsr0l	equ	0xFE9
 15808                           wreg	equ	0xFE8
 15809                           indf1	equ	0xFE7
 15810                           postinc1	equ	0xFE6
 15811                           postdec1	equ	0xFE5
 15812                           fsr1h	equ	0xFE2
 15813                           fsr1l	equ	0xFE1
 15814                           indf2	equ	0xFDF
 15815                           postinc2	equ	0xFDE
 15816                           postdec2	equ	0xFDD
 15817                           plusw2	equ	0xFDB
 15818                           fsr2h	equ	0xFDA
 15819                           fsr2l	equ	0xFD9
 15820                           status	equ	0xFD8
 15821                           
 15822 ;; *************** function _USBStdSetCfgHandler *****************
 15823 ;; Defined at:
 15824 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  i               1   20[COMRAM] unsigned char 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;		None               void
 15831 ;; Registers used:
 15832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;Total ram usage:        1 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    4
 15845 ;; This function calls:
 15846 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15847 ;;		i2_memset
 15848 ;; This function is called by:
 15849 ;;		_USBCheckStdRequest
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text79
 15854  011EF0                     __ptext79:
 15855                           	opt stack 0
 15856  011EF0                     _USBStdSetCfgHandler:
 15857                           	opt stack 11
 15858                           
 15859                           ;usb_device.c: 1970: uint8_t i;
 15860                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 15861                           
 15862                           ;incstack = 0
 15863  011EF0  0100               	movlb	0	; () banked
 15864  011EF2  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 15868  011EF4  0E27               	movlw	39
 15869  011EF6  6E01               	movwf	i2memset@p1,c
 15870  011EF8  0E0F               	movlw	15
 15871  011EFA  6E02               	movwf	i2memset@p1+1,c
 15872  011EFC  0E00               	movlw	0
 15873  011EFE  6E04               	movwf	i2memset@c+1,c
 15874  011F00  0E00               	movlw	0
 15875  011F02  6E03               	movwf	i2memset@c,c
 15876  011F04  0E00               	movlw	0
 15877  011F06  6E06               	movwf	i2memset@n+1,c
 15878  011F08  0E02               	movlw	2
 15879  011F0A  6E05               	movwf	i2memset@n,c
 15880  011F0C  EC69  F09F         	call	i2_memset	;wreg free
 15881                           
 15882                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15883  011F10  0E00               	movlw	0
 15884  011F12  6E01               	movwf	i2memset@p1,c
 15885  011F14  0E0D               	movlw	13
 15886  011F16  6E02               	movwf	i2memset@p1+1,c
 15887  011F18  0E00               	movlw	0
 15888  011F1A  6E04               	movwf	i2memset@c+1,c
 15889  011F1C  0E00               	movlw	0
 15890  011F1E  6E03               	movwf	i2memset@c,c
 15891  011F20  0E00               	movlw	0
 15892  011F22  6E06               	movwf	i2memset@n+1,c
 15893  011F24  0E30               	movlw	48
 15894  011F26  6E05               	movwf	i2memset@n,c
 15895  011F28  EC69  F09F         	call	i2_memset	;wreg free
 15896                           
 15897                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 15898  011F2C  8C65               	bsf	3941,6,c	;volatile
 15899                           
 15900                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 15901  011F2E  0E00               	movlw	0
 15902  011F30  6E15               	movwf	USBStdSetCfgHandler@i,c
 15903  011F32                     i2l5740:
 15904  011F32  0E02               	movlw	2
 15905  011F34  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 15906  011F36  D001               	goto	i2l5744
 15907  011F38  D016               	goto	i2l5750
 15908  011F3A                     i2l5744:
 15909                           
 15910                           ;usb_device.c: 1988: {
 15911                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 15912  011F3A  5015               	movf	USBStdSetCfgHandler@i,w,c
 15913  011F3C  0D01               	mullw	1
 15914  011F3E  0EE4               	movlw	low _ep_data_in
 15915  011F40  24F3               	addwf	prodl,w,c
 15916  011F42  6ED9               	movwf	fsr2l,c
 15917  011F44  0E00               	movlw	high _ep_data_in
 15918  011F46  20F4               	addwfc	prodh,w,c
 15919  011F48  6EDA               	movwf	fsr2h,c
 15920  011F4A  0E00               	movlw	0
 15921  011F4C  6EDF               	movwf	indf2,c
 15922                           
 15923                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 15924  011F4E  5015               	movf	USBStdSetCfgHandler@i,w,c
 15925  011F50  0D01               	mullw	1
 15926  011F52  0EE7               	movlw	low _ep_data_out
 15927  011F54  24F3               	addwf	prodl,w,c
 15928  011F56  6ED9               	movwf	fsr2l,c
 15929  011F58  0E00               	movlw	high _ep_data_out
 15930  011F5A  20F4               	addwfc	prodh,w,c
 15931  011F5C  6EDA               	movwf	fsr2h,c
 15932  011F5E  0E00               	movlw	0
 15933  011F60  6EDF               	movwf	indf2,c
 15934  011F62  2A15               	incf	USBStdSetCfgHandler@i,f,c
 15935  011F64  D7E6               	goto	i2l5740
 15936  011F66                     i2l5750:
 15937                           
 15938                           ;usb_device.c: 1991: }
 15939                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 15940  011F66  0E54               	movlw	low _USBAlternateInterface
 15941  011F68  6E01               	movwf	i2memset@p1,c
 15942  011F6A  0E00               	movlw	high _USBAlternateInterface
 15943  011F6C  6E02               	movwf	i2memset@p1+1,c
 15944  011F6E  0E00               	movlw	0
 15945  011F70  6E04               	movwf	i2memset@c+1,c
 15946  011F72  0E00               	movlw	0
 15947  011F74  6E03               	movwf	i2memset@c,c
 15948  011F76  0E00               	movlw	0
 15949  011F78  6E06               	movwf	i2memset@n+1,c
 15950  011F7A  0E02               	movlw	2
 15951  011F7C  6E05               	movwf	i2memset@n,c
 15952  011F7E  EC69  F09F         	call	i2_memset	;wreg free
 15953                           
 15954                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 15955  011F82  9C65               	bcf	3941,6,c	;volatile
 15956                           
 15957                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15958  011F84  0E08               	movlw	8
 15959  011F86  0100               	movlb	0	; () banked
 15960  011F88  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 15961  011F8A  0E0D               	movlw	13
 15962  011F8C  0100               	movlb	0	; () banked
 15963  011F8E  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15967  011F90  0E00               	movlw	0
 15968  011F92  6E31               	movwf	_pBDTEntryEP0OutCurrent,c
 15969  011F94  0E0D               	movlw	13
 15970  011F96  6E32               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15971                           
 15972                           ; BSR set to: 0
 15973                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15974  011F98  C031  F033         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15975  011F9C  C032  F034         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15979  011FA0  CD32 F056          	movff	3378,_USBActiveConfiguration	;volatile
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 15983  011FA4  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 15984  011FA6  A4D8               	btfss	status,2,c
 15985  011FA8  D003               	goto	i2l5766
 15986                           
 15987                           ; BSR set to: 0
 15988                           ;usb_device.c: 2010: {
 15989                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 15990  011FAA  0E10               	movlw	16
 15991  011FAC  6E42               	movwf	_USBDeviceState,c	;volatile
 15992                           
 15993                           ;usb_device.c: 2013: }
 15994  011FAE  0012               	return	
 15995  011FB0                     i2l5766:
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;usb_device.c: 2014: else
 15999                           ;usb_device.c: 2015: {
 16000                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16001  011FB0  0E00               	movlw	0
 16002  011FB2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16003  011FB4  0E01               	movlw	1
 16004  011FB6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16005  011FB8  0E56               	movlw	low _USBActiveConfiguration
 16006  011FBA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16007  011FBC  0E00               	movlw	high _USBActiveConfiguration
 16008  011FBE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16009  011FC0  0E00               	movlw	0
 16010  011FC2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16011  011FC4  0E01               	movlw	1
 16012  011FC6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16013  011FC8  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16014                           
 16015                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 16016  011FCC  0E20               	movlw	32
 16017  011FCE  6E42               	movwf	_USBDeviceState,c	;volatile
 16018  011FD0  0012               	return	
 16019  011FD2                     __end_of_USBStdSetCfgHandler:
 16020                           	opt stack 0
 16021                           pclatu	equ	0xFFB
 16022                           pclath	equ	0xFFA
 16023                           tblptru	equ	0xFF8
 16024                           tblptrh	equ	0xFF7
 16025                           tblptrl	equ	0xFF6
 16026                           tablat	equ	0xFF5
 16027                           prodh	equ	0xFF4
 16028                           prodl	equ	0xFF3
 16029                           intcon	equ	0xFF2
 16030                           intcon2	equ	0xFF1
 16031                           indf0	equ	0xFEF
 16032                           postinc0	equ	0xFEE
 16033                           fsr0h	equ	0xFEA
 16034                           fsr0l	equ	0xFE9
 16035                           wreg	equ	0xFE8
 16036                           indf1	equ	0xFE7
 16037                           postinc1	equ	0xFE6
 16038                           postdec1	equ	0xFE5
 16039                           fsr1h	equ	0xFE2
 16040                           fsr1l	equ	0xFE1
 16041                           indf2	equ	0xFDF
 16042                           postinc2	equ	0xFDE
 16043                           postdec2	equ	0xFDD
 16044                           plusw2	equ	0xFDB
 16045                           fsr2h	equ	0xFDA
 16046                           fsr2l	equ	0xFD9
 16047                           status	equ	0xFD8
 16048                           
 16049 ;; *************** function i2_memset *****************
 16050 ;; Defined at:
 16051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;  p1              2    0[COMRAM] PTR void 
 16054 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16055 ;;  c               2    2[COMRAM] int 
 16056 ;;  n               2    4[COMRAM] unsigned int 
 16057 ;; Auto vars:     Size  Location     Type
 16058 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16059 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  2    0[COMRAM] PTR void 
 16062 ;; Registers used:
 16063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16069 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16072 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16073 ;;Total ram usage:        8 bytes
 16074 ;; Hardware stack levels used:    1
 16075 ;; This function calls:
 16076 ;;		Nothing
 16077 ;; This function is called by:
 16078 ;;		_USBStdSetCfgHandler
 16079 ;;		i2_USBDeviceInit
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083                           	psect	text80
 16084  013ED2                     __ptext80:
 16085                           	opt stack 0
 16086  013ED2                     i2_memset:
 16087                           	opt stack 17
 16088                           
 16089                           ;incstack = 0
 16090  013ED2  C001  F007         	movff	i2memset@p1,i2memset@p
 16091  013ED6  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 16092  013EDA  D008               	goto	i2l5674
 16093  013EDC                     i2l5670:
 16094  013EDC  C007  FFD9         	movff	i2memset@p,fsr2l
 16095  013EE0  C008  FFDA         	movff	i2memset@p+1,fsr2h
 16096  013EE4  C003  FFDF         	movff	i2memset@c,indf2
 16097  013EE8  4A07               	infsnz	i2memset@p,f,c
 16098  013EEA  2A08               	incf	i2memset@p+1,f,c
 16099  013EEC                     i2l5674:
 16100  013EEC  0605               	decf	i2memset@n,f,c
 16101  013EEE  A0D8               	btfss	status,0,c
 16102  013EF0  0606               	decf	i2memset@n+1,f,c
 16103  013EF2  2805               	incf	i2memset@n,w,c
 16104  013EF4  E1F3               	bnz	i2l5670
 16105  013EF6  2806               	incf	i2memset@n+1,w,c
 16106  013EF8  B4D8               	btfsc	status,2,c
 16107  013EFA  0012               	return	
 16108  013EFC  D7EF               	goto	i2l5670
 16109  013EFE                     __end_ofi2_memset:
 16110                           	opt stack 0
 16111                           pclatu	equ	0xFFB
 16112                           pclath	equ	0xFFA
 16113                           tblptru	equ	0xFF8
 16114                           tblptrh	equ	0xFF7
 16115                           tblptrl	equ	0xFF6
 16116                           tablat	equ	0xFF5
 16117                           prodh	equ	0xFF4
 16118                           prodl	equ	0xFF3
 16119                           intcon	equ	0xFF2
 16120                           intcon2	equ	0xFF1
 16121                           indf0	equ	0xFEF
 16122                           postinc0	equ	0xFEE
 16123                           fsr0h	equ	0xFEA
 16124                           fsr0l	equ	0xFE9
 16125                           wreg	equ	0xFE8
 16126                           indf1	equ	0xFE7
 16127                           postinc1	equ	0xFE6
 16128                           postdec1	equ	0xFE5
 16129                           fsr1h	equ	0xFE2
 16130                           fsr1l	equ	0xFE1
 16131                           indf2	equ	0xFDF
 16132                           postinc2	equ	0xFDE
 16133                           postdec2	equ	0xFDD
 16134                           plusw2	equ	0xFDB
 16135                           fsr2h	equ	0xFDA
 16136                           fsr2l	equ	0xFD9
 16137                           status	equ	0xFD8
 16138                           
 16139 ;; *************** function _USBStdGetStatusHandler *****************
 16140 ;; Defined at:
 16141 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;		None
 16144 ;; Auto vars:     Size  Location     Type
 16145 ;;  p               2    1[COMRAM] PTR struct __BDT
 16146 ;;		 -> NULL(0), BDT(48), 
 16147 ;; Return value:  Size  Location     Type
 16148 ;;		None               void
 16149 ;; Registers used:
 16150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16151 ;; Tracked objects:
 16152 ;;		On entry : 0/0
 16153 ;;		On exit  : 0/0
 16154 ;;		Unchanged: 0/0
 16155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16160 ;;Total ram usage:        3 bytes
 16161 ;; Hardware stack levels used:    1
 16162 ;; This function calls:
 16163 ;;		Nothing
 16164 ;; This function is called by:
 16165 ;;		_USBCheckStdRequest
 16166 ;; This function uses a non-reentrant model
 16167 ;;
 16168                           
 16169                           	psect	text81
 16170  012D78                     __ptext81:
 16171                           	opt stack 0
 16172  012D78                     _USBStdGetStatusHandler:
 16173                           	opt stack 15
 16174                           
 16175                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 16176                           
 16177                           ;incstack = 0
 16178  012D78  0E00               	movlw	0
 16179  012D7A  010D               	movlb	13	; () banked
 16180  012D7C  6F38               	movwf	56,b	;volatile
 16181                           
 16182                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 16183  012D7E  0E00               	movlw	0
 16184  012D80  010D               	movlb	13	; () banked
 16185  012D82  6F39               	movwf	57,b	;volatile
 16186                           
 16187                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 16188  012D84  D03B               	goto	i2l5822
 16189  012D86                     i2l295:
 16190                           
 16191                           ; BSR set to: 13
 16192                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 16193  012D86  0100               	movlb	0	; () banked
 16194  012D88  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16195                           
 16196                           ;usb_device.c: 2145: }
 16197                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 16198                           
 16199                           ; BSR set to: 13
 16200                           
 16201                           ; BSR set to: 0
 16202                           ;usb_device.c: 2143: {
 16203                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 16204                           
 16205                           ;usb_device.c: 2142: if(0 == 1)
 16206  012D8A  043E               	decf	_RemoteWakeup,w,c	;volatile
 16207  012D8C  A4D8               	btfss	status,2,c
 16208  012D8E  D042               	goto	i2l298
 16209                           
 16210                           ;usb_device.c: 2148: {
 16211                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 16212  012D90  010D               	movlb	13	; () banked
 16213  012D92  8338               	bsf	56,1,b	;volatile
 16214                           
 16215                           ; BSR set to: 13
 16216                           ;usb_device.c: 2150: }
 16217                           ;usb_device.c: 2151: break;
 16218  012D94  D03F               	goto	i2l298
 16219  012D96                     i2l299:
 16220                           
 16221                           ; BSR set to: 13
 16222                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 16223  012D96  0100               	movlb	0	; () banked
 16224  012D98  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16225                           
 16226                           ;usb_device.c: 2154: break;
 16227  012D9A  D03C               	goto	i2l298
 16228  012D9C                     i2l300:
 16229                           
 16230                           ; BSR set to: 13
 16231                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 16232  012D9C  0100               	movlb	0	; () banked
 16233  012D9E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16234                           
 16235                           ;usb_device.c: 2160: {
 16236                           ;usb_device.c: 2161: BDT_ENTRY *p;
 16237                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 16238  012DA0  010D               	movlb	13	; () banked
 16239  012DA2  BF34               	btfsc	52,7,b	;volatile
 16240  012DA4  D00B               	goto	i2l5812
 16241                           
 16242                           ; BSR set to: 13
 16243                           ;usb_device.c: 2164: {
 16244                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16245  012DA6  010D               	movlb	13	; () banked
 16246  012DA8  5134               	movf	52,w,b	;volatile
 16247  012DAA  0B0F               	andlw	15
 16248  012DAC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16249  012DAE  5001               	movf	??_USBStdGetStatusHandler,w,c
 16250  012DB0  0D02               	mullw	2
 16251  012DB2  0EDE               	movlw	low _pBDTEntryOut
 16252  012DB4  24F3               	addwf	prodl,w,c
 16253  012DB6  6ED9               	movwf	fsr2l,c
 16254  012DB8  0E00               	movlw	high _pBDTEntryOut
 16255  012DBA  D00A               	goto	L5
 16256  012DBC                     i2l5812:
 16257                           
 16258                           ; BSR set to: 13
 16259                           ;usb_device.c: 2167: else
 16260                           ;usb_device.c: 2168: {
 16261                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16262  012DBC  010D               	movlb	13	; () banked
 16263  012DBE  5134               	movf	52,w,b	;volatile
 16264  012DC0  0B0F               	andlw	15
 16265  012DC2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16266  012DC4  5001               	movf	??_USBStdGetStatusHandler,w,c
 16267  012DC6  0D02               	mullw	2
 16268  012DC8  0ED8               	movlw	low _pBDTEntryIn
 16269  012DCA  24F3               	addwf	prodl,w,c
 16270  012DCC  6ED9               	movwf	fsr2l,c
 16271  012DCE  0E00               	movlw	high _pBDTEntryIn
 16272  012DD0                     L5:
 16273  012DD0  20F4               	addwfc	prodh,w,c
 16274  012DD2  6EDA               	movwf	fsr2h,c
 16275  012DD4  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 16276  012DD8  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 16277                           
 16278                           ; BSR set to: 13
 16279                           ;usb_device.c: 2170: }
 16280                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 16281                           
 16282                           ; BSR set to: 13
 16283  012DDC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16284  012DE0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16285  012DE4  AEDF               	btfss	indf2,7,c
 16286  012DE6  D016               	goto	i2l298
 16287                           
 16288                           ; BSR set to: 13
 16289  012DE8  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16290  012DEC  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16291  012DF0  A4DF               	btfss	indf2,2,c
 16292  012DF2  D010               	goto	i2l298
 16293                           
 16294                           ; BSR set to: 13
 16295                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 16296  012DF4  0E01               	movlw	1
 16297  012DF6  010D               	movlb	13	; () banked
 16298  012DF8  6F38               	movwf	56,b	;volatile
 16299                           
 16300                           ; BSR set to: 13
 16301                           ;usb_device.c: 2175: }
 16302                           ;usb_device.c: 2176: }
 16303                           
 16304                           ; BSR set to: 13
 16305                           ;usb_device.c: 2174: break;
 16306  012DFA  D00C               	goto	i2l298
 16307  012DFC                     i2l5822:
 16308                           
 16309                           ; BSR set to: 13
 16310  012DFC  010D               	movlb	13	; () banked
 16311  012DFE  5130               	movf	48,w,b	;volatile
 16312  012E00  0B1F               	andlw	31
 16313                           
 16314                           ; Switch size 1, requested type "space"
 16315                           ; Number of cases is 3, Range of values is 0 to 2
 16316                           ; switch strategies available:
 16317                           ; Name         Instructions Cycles
 16318                           ; simple_byte           10     6 (average)
 16319                           ;	Chosen strategy is simple_byte
 16320  012E02  0A00               	xorlw	0	; case 0
 16321  012E04  B4D8               	btfsc	status,2,c
 16322  012E06  D7BF               	goto	i2l295
 16323  012E08  0A01               	xorlw	1	; case 1
 16324  012E0A  B4D8               	btfsc	status,2,c
 16325  012E0C  D7C4               	goto	i2l299
 16326  012E0E  0A03               	xorlw	3	; case 2
 16327  012E10  B4D8               	btfsc	status,2,c
 16328  012E12  D7C4               	goto	i2l300
 16329  012E14                     i2l298:
 16330                           
 16331                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 16332  012E14  0100               	movlb	0	; () banked
 16333  012E16  AFD5               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 16334  012E18  0012               	return	
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;usb_device.c: 2179: {
 16338                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 16339  012E1A  0E38               	movlw	56
 16340  012E1C  0100               	movlb	0	; () banked
 16341  012E1E  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16342  012E20  0E0D               	movlw	13
 16343  012E22  0100               	movlb	0	; () banked
 16344  012E24  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16348  012E26  0100               	movlb	0	; () banked
 16349  012E28  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16350                           
 16351                           ; BSR set to: 0
 16352                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 16353  012E2A  0E02               	movlw	2
 16354  012E2C  0100               	movlb	0	; () banked
 16355  012E2E  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16356  012E30  0012               	return	
 16357  012E32                     __end_of_USBStdGetStatusHandler:
 16358                           	opt stack 0
 16359                           pclatu	equ	0xFFB
 16360                           pclath	equ	0xFFA
 16361                           tblptru	equ	0xFF8
 16362                           tblptrh	equ	0xFF7
 16363                           tblptrl	equ	0xFF6
 16364                           tablat	equ	0xFF5
 16365                           prodh	equ	0xFF4
 16366                           prodl	equ	0xFF3
 16367                           intcon	equ	0xFF2
 16368                           intcon2	equ	0xFF1
 16369                           indf0	equ	0xFEF
 16370                           postinc0	equ	0xFEE
 16371                           fsr0h	equ	0xFEA
 16372                           fsr0l	equ	0xFE9
 16373                           wreg	equ	0xFE8
 16374                           indf1	equ	0xFE7
 16375                           postinc1	equ	0xFE6
 16376                           postdec1	equ	0xFE5
 16377                           fsr1h	equ	0xFE2
 16378                           fsr1l	equ	0xFE1
 16379                           indf2	equ	0xFDF
 16380                           postinc2	equ	0xFDE
 16381                           postdec2	equ	0xFDD
 16382                           plusw2	equ	0xFDB
 16383                           fsr2h	equ	0xFDA
 16384                           fsr2l	equ	0xFD9
 16385                           status	equ	0xFD8
 16386                           
 16387 ;; *************** function _USBStdGetDscHandler *****************
 16388 ;; Defined at:
 16389 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;		None
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;		None
 16394 ;; Return value:  Size  Location     Type
 16395 ;;		None               void
 16396 ;; Registers used:
 16397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16407 ;;Total ram usage:        2 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; This function calls:
 16410 ;;		Nothing
 16411 ;; This function is called by:
 16412 ;;		_USBCheckStdRequest
 16413 ;; This function uses a non-reentrant model
 16414 ;;
 16415                           
 16416                           	psect	text82
 16417  011550                     __ptext82:
 16418                           	opt stack 0
 16419  011550                     _USBStdGetDscHandler:
 16420                           	opt stack 15
 16421                           
 16422                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;incstack = 0
 16426  011550  0E80               	movlw	128
 16427  011552  010D               	movlb	13	; () banked
 16428  011554  1930               	xorwf	48,w,b	;volatile
 16429  011556  A4D8               	btfss	status,2,c
 16430  011558  0012               	return	
 16431                           
 16432                           ; BSR set to: 13
 16433                           ;usb_device.c: 2046: {
 16434                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 16435  01155A  0EC0               	movlw	192
 16436  01155C  0100               	movlb	0	; () banked
 16437  01155E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16438                           
 16439                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 16440  011560  D092               	goto	i2l5800
 16441  011562                     i2l5774:
 16442                           
 16443                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 16444  011562  0E42               	movlw	low _device_dsc
 16445  011564  0100               	movlb	0	; () banked
 16446  011566  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16447  011568  0EFE               	movlw	high _device_dsc
 16448  01156A  0100               	movlb	0	; () banked
 16449  01156C  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 16453  01156E  0E00               	movlw	0
 16454  011570  0100               	movlb	0	; () banked
 16455  011572  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16456  011574  0E12               	movlw	18
 16457  011576  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16458                           
 16459                           ;usb_device.c: 2058: break;
 16460  011578  0012               	return	
 16461  01157A                     i2l5778:
 16462                           
 16463                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 16464  01157A  010D               	movlb	13	; () banked
 16465  01157C  5132               	movf	50,w,b	;volatile
 16466  01157E  A4D8               	btfss	status,2,c
 16467  011580  D049               	goto	i2l5786
 16468                           
 16469                           ; BSR set to: 13
 16470                           ;usb_device.c: 2064: {
 16471                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 16472  011582  010D               	movlb	13	; () banked
 16473  011584  5132               	movf	50,w,b	;volatile
 16474  011586  0D02               	mullw	2
 16475  011588  0E79               	movlw	low _USB_CD_Ptr
 16476  01158A  24F3               	addwf	prodl,w,c
 16477  01158C  6EF6               	movwf	tblptrl,c
 16478  01158E  0EFD               	movlw	high _USB_CD_Ptr
 16479  011590  20F4               	addwfc	prodh,w,c
 16480  011592  6EF7               	movwf	tblptrh,c
 16481  011594                     	if	1	;There are 3 active tblptr bytes
 16482  011594  6AF8               	clrf	tblptru,c
 16483  011596  0E00               	movlw	low (__mediumconst shr (0+16))
 16484  011598  22F8               	addwfc	tblptru,f,c
 16485  01159A                     	endif
 16486  01159A  0009               	tblrd		*+
 16487  01159C  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16488  0115A0  000A               	tblrd		*-
 16489  0115A2  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16490                           
 16491                           ; BSR set to: 13
 16492                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 16493  0115A6  0E02               	movlw	2
 16494  0115A8  0100               	movlb	0	; () banked
 16495  0115AA  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 16496  0115AC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16497  0115AE  0E00               	movlw	0
 16498  0115B0  0100               	movlb	0	; () banked
 16499  0115B2  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 16500  0115B4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16501  0115B6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16502  0115BA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16503  0115BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16504  0115C0  6EF8               	movwf	tblptru,c
 16505  0115C2  0E0E               	movlw	(high __ramtop+-1)
 16506  0115C4  64F7               	cpfsgt	tblptrh,c
 16507  0115C6  D003               	bra	i2u458_47
 16508  0115C8  0008               	tblrd		*
 16509  0115CA  50F5               	movf	tablat,w,c
 16510  0115CC  D005               	bra	i2u458_40
 16511  0115CE                     i2u458_47:
 16512  0115CE  CFF6 FFE9          	movff	tblptrl,fsr0l
 16513  0115D2  CFF7 FFEA          	movff	tblptrh,fsr0h
 16514  0115D6  50EF               	movf	indf0,w,c
 16515  0115D8                     i2u458_40:
 16516  0115D8  0100               	movlb	0	; () banked
 16517  0115DA  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 16521  0115DC  0E03               	movlw	3
 16522  0115DE  0100               	movlb	0	; () banked
 16523  0115E0  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 16524  0115E2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16525  0115E4  0E00               	movlw	0
 16526  0115E6  0100               	movlb	0	; () banked
 16527  0115E8  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 16528  0115EA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16529  0115EC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16530  0115F0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16531  0115F4  0E00               	movlw	low (__mediumconst shr (0+16))
 16532  0115F6  6EF8               	movwf	tblptru,c
 16533  0115F8  0E0E               	movlw	(high __ramtop+-1)
 16534  0115FA  64F7               	cpfsgt	tblptrh,c
 16535  0115FC  D003               	bra	i2u459_47
 16536  0115FE  0008               	tblrd		*
 16537  011600  50F5               	movf	tablat,w,c
 16538  011602  D005               	bra	i2u459_40
 16539  011604                     i2u459_47:
 16540  011604  CFF6 FFE9          	movff	tblptrl,fsr0l
 16541  011608  CFF7 FFEA          	movff	tblptrh,fsr0h
 16542  01160C  50EF               	movf	indf0,w,c
 16543  01160E                     i2u459_40:
 16544  01160E  0100               	movlb	0	; () banked
 16545  011610  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16546                           
 16547                           ;usb_device.c: 2076: }
 16548  011612  0012               	return	
 16549  011614                     i2l5786:
 16550                           
 16551                           ;usb_device.c: 2077: else
 16552                           ;usb_device.c: 2078: {
 16553                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 16554  011614  0E00               	movlw	0
 16555  011616  0100               	movlb	0	; () banked
 16556  011618  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16557                           
 16558                           ; BSR set to: 0
 16559                           ;usb_device.c: 2080: }
 16560                           ;usb_device.c: 2081: break;
 16561  01161A  0012               	return	
 16562  01161C                     i2l5788:
 16563                           
 16564                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 16565  01161C  0E03               	movlw	3
 16566  01161E  010D               	movlb	13	; () banked
 16567  011620  6132               	cpfslt	50,b	;volatile
 16568  011622  D029               	goto	i2l5794
 16569                           
 16570                           ; BSR set to: 13
 16571                           ;usb_device.c: 2087: {
 16572                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 16573  011624  010D               	movlb	13	; () banked
 16574  011626  5132               	movf	50,w,b	;volatile
 16575  011628  0D02               	mullw	2
 16576  01162A  0E73               	movlw	low _USB_SD_Ptr
 16577  01162C  24F3               	addwf	prodl,w,c
 16578  01162E  6EF6               	movwf	tblptrl,c
 16579  011630  0EFD               	movlw	high _USB_SD_Ptr
 16580  011632  20F4               	addwfc	prodh,w,c
 16581  011634  6EF7               	movwf	tblptrh,c
 16582  011636                     	if	1	;There are 3 active tblptr bytes
 16583  011636  6AF8               	clrf	tblptru,c
 16584  011638  0E00               	movlw	low (__mediumconst shr (0+16))
 16585  01163A  22F8               	addwfc	tblptru,f,c
 16586  01163C                     	endif
 16587  01163C  0009               	tblrd		*+
 16588  01163E  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16589  011642  000A               	tblrd		*-
 16590  011644  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16591                           
 16592                           ; BSR set to: 13
 16593                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 16594  011648  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 16595  01164C  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16596  011650  0E00               	movlw	low (__mediumconst shr (0+16))
 16597  011652  6EF8               	movwf	tblptru,c
 16598  011654  0E0E               	movlw	(high __ramtop+-1)
 16599  011656  64F7               	cpfsgt	tblptrh,c
 16600  011658  D003               	bra	i2u461_47
 16601  01165A  0008               	tblrd		*
 16602  01165C  50F5               	movf	tablat,w,c
 16603  01165E  D005               	bra	i2u461_40
 16604  011660                     i2u461_47:
 16605  011660  CFF6 FFE9          	movff	tblptrl,fsr0l
 16606  011664  CFF7 FFEA          	movff	tblptrh,fsr0h
 16607  011668  50EF               	movf	indf0,w,c
 16608  01166A                     i2u461_40:
 16609  01166A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16610  01166C  5001               	movf	??_USBStdGetDscHandler,w,c
 16611  01166E  0100               	movlb	0	; () banked
 16612  011670  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16613  011672  6BD7               	clrf	(_inPipes+5)& (0+255),b	;volatile
 16614                           
 16615                           ;usb_device.c: 2092: }
 16616  011674  0012               	return	
 16617  011676                     i2l5794:
 16618                           
 16619                           ;usb_device.c: 2102: else
 16620                           ;usb_device.c: 2103: {
 16621                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 16622  011676  0E00               	movlw	0
 16623  011678  0100               	movlb	0	; () banked
 16624  01167A  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16625                           
 16626                           ; BSR set to: 0
 16627                           ;usb_device.c: 2105: }
 16628                           ;usb_device.c: 2106: break;
 16629  01167C  0012               	return	
 16630  01167E                     i2l5796:
 16631                           
 16632                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 16633  01167E  0E00               	movlw	0
 16634  011680  0100               	movlb	0	; () banked
 16635  011682  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;usb_device.c: 2110: }
 16639                           
 16640                           ;usb_device.c: 2109: break;
 16641  011684  0012               	return	
 16642  011686                     i2l5800:
 16643                           
 16644                           ; BSR set to: 0
 16645  011686  010D               	movlb	13	; () banked
 16646  011688  5133               	movf	51,w,b	;volatile
 16647                           
 16648                           ; Switch size 1, requested type "space"
 16649                           ; Number of cases is 3, Range of values is 1 to 3
 16650                           ; switch strategies available:
 16651                           ; Name         Instructions Cycles
 16652                           ; simple_byte           10     6 (average)
 16653                           ;	Chosen strategy is simple_byte
 16654  01168A  0A01               	xorlw	1	; case 1
 16655  01168C  B4D8               	btfsc	status,2,c
 16656  01168E  D769               	goto	i2l5774
 16657  011690  0A03               	xorlw	3	; case 2
 16658  011692  B4D8               	btfsc	status,2,c
 16659  011694  D772               	goto	i2l5778
 16660  011696  0A01               	xorlw	1	; case 3
 16661  011698  B4D8               	btfsc	status,2,c
 16662  01169A  D7C0               	goto	i2l5788
 16663  01169C  D7F0               	goto	i2l5796
 16664  01169E                     __end_of_USBStdGetDscHandler:
 16665                           	opt stack 0
 16666                           pclatu	equ	0xFFB
 16667                           pclath	equ	0xFFA
 16668                           tblptru	equ	0xFF8
 16669                           tblptrh	equ	0xFF7
 16670                           tblptrl	equ	0xFF6
 16671                           tablat	equ	0xFF5
 16672                           prodh	equ	0xFF4
 16673                           prodl	equ	0xFF3
 16674                           intcon	equ	0xFF2
 16675                           intcon2	equ	0xFF1
 16676                           indf0	equ	0xFEF
 16677                           postinc0	equ	0xFEE
 16678                           fsr0h	equ	0xFEA
 16679                           fsr0l	equ	0xFE9
 16680                           wreg	equ	0xFE8
 16681                           indf1	equ	0xFE7
 16682                           postinc1	equ	0xFE6
 16683                           postdec1	equ	0xFE5
 16684                           fsr1h	equ	0xFE2
 16685                           fsr1l	equ	0xFE1
 16686                           indf2	equ	0xFDF
 16687                           postinc2	equ	0xFDE
 16688                           postdec2	equ	0xFDD
 16689                           plusw2	equ	0xFDB
 16690                           fsr2h	equ	0xFDA
 16691                           fsr2l	equ	0xFD9
 16692                           status	equ	0xFD8
 16693                           
 16694 ;; *************** function _USBStdFeatureReqHandler *****************
 16695 ;; Defined at:
 16696 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 16697 ;; Parameters:    Size  Location     Type
 16698 ;;		None
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;  p               2   24[COMRAM] PTR struct __BDT
 16701 ;;		 -> NULL(0), BDT(48), 
 16702 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 16703 ;;		 -> UEP0(1), 
 16704 ;;  current_ep_d    1   23[COMRAM] struct .
 16705 ;; Return value:  Size  Location     Type
 16706 ;;		None               void
 16707 ;; Registers used:
 16708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16709 ;; Tracked objects:
 16710 ;;		On entry : 0/0
 16711 ;;		On exit  : 0/0
 16712 ;;		Unchanged: 0/0
 16713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16715 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16718 ;;Total ram usage:        6 bytes
 16719 ;; Hardware stack levels used:    1
 16720 ;; Hardware stack levels required when called:    4
 16721 ;; This function calls:
 16722 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16723 ;; This function is called by:
 16724 ;;		_USBCheckStdRequest
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text83
 16729  010DFE                     __ptext83:
 16730                           	opt stack 0
 16731  010DFE                     _USBStdFeatureReqHandler:
 16732                           	opt stack 11
 16733                           
 16734                           ;usb_device.c: 2759: BDT_ENTRY *p;
 16735                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 16736                           ;usb_device.c: 2764: unsigned char* pUEP;
 16737                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 16738                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 16739                           
 16740                           ;incstack = 0
 16741  010DFE  010D               	movlb	13	; () banked
 16742  010E00  0532               	decf	50,w,b	;volatile
 16743  010E02  A4D8               	btfss	status,2,c
 16744  010E04  D011               	goto	i2l374
 16745                           
 16746                           ; BSR set to: 13
 16747  010E06  010D               	movlb	13	; () banked
 16748  010E08  5130               	movf	48,w,b	;volatile
 16749  010E0A  0B1F               	andlw	31
 16750  010E0C  0900               	iorlw	0
 16751  010E0E  A4D8               	btfss	status,2,c
 16752  010E10  D00B               	goto	i2l374
 16753                           
 16754                           ; BSR set to: 13
 16755                           ;usb_device.c: 2804: {
 16756                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 16757  010E12  0100               	movlb	0	; () banked
 16758  010E14  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 16762  010E16  0E03               	movlw	3
 16763  010E18  010D               	movlb	13	; () banked
 16764  010E1A  1931               	xorwf	49,w,b	;volatile
 16765  010E1C  A4D8               	btfss	status,2,c
 16766  010E1E  D002               	goto	i2l5840
 16767                           
 16768                           ; BSR set to: 13
 16769                           ;usb_device.c: 2807: RemoteWakeup = 1;
 16770  010E20  0E01               	movlw	1
 16771  010E22  D001               	goto	L6
 16772  010E24                     i2l5840:
 16773                           
 16774                           ; BSR set to: 13
 16775                           ;usb_device.c: 2808: else
 16776                           ;usb_device.c: 2809: RemoteWakeup = 0;
 16777  010E24  0E00               	movlw	0
 16778  010E26                     L6:
 16779  010E26  6E3E               	movwf	_RemoteWakeup,c	;volatile
 16780  010E28                     i2l374:
 16781                           
 16782                           ; BSR set to: 13
 16783                           ;usb_device.c: 2810: }
 16784                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 16785                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 16786                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 16787                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 16788  010E28  010D               	movlb	13	; () banked
 16789  010E2A  5132               	movf	50,w,b	;volatile
 16790  010E2C  A4D8               	btfss	status,2,c
 16791  010E2E  0012               	return	
 16792                           
 16793                           ; BSR set to: 13
 16794  010E30  010D               	movlb	13	; () banked
 16795  010E32  5130               	movf	48,w,b	;volatile
 16796  010E34  0B1F               	andlw	31
 16797  010E36  0A02               	xorlw	2
 16798  010E38  A4D8               	btfss	status,2,c
 16799  010E3A  0012               	return	
 16800                           
 16801                           ; BSR set to: 13
 16802  010E3C  010D               	movlb	13	; () banked
 16803  010E3E  5134               	movf	52,w,b	;volatile
 16804  010E40  0B0F               	andlw	15
 16805  010E42  0900               	iorlw	0
 16806  010E44  B4D8               	btfsc	status,2,c
 16807  010E46  0012               	return	
 16808                           
 16809                           ; BSR set to: 13
 16810  010E48  010D               	movlb	13	; () banked
 16811  010E4A  5134               	movf	52,w,b	;volatile
 16812  010E4C  0B0F               	andlw	15
 16813  010E4E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16814  010E50  0E03               	movlw	3
 16815  010E52  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 16816  010E54  0012               	return	
 16817                           
 16818                           ; BSR set to: 13
 16819  010E56  0E20               	movlw	32
 16820  010E58  1842               	xorwf	_USBDeviceState,w,c	;volatile
 16821  010E5A  A4D8               	btfss	status,2,c
 16822  010E5C  0012               	return	
 16823                           
 16824                           ; BSR set to: 13
 16825                           ;usb_device.c: 2817: {
 16826                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 16827  010E5E  0100               	movlb	0	; () banked
 16828  010E60  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16829                           
 16830                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 16831  010E62  010D               	movlb	13	; () banked
 16832  010E64  BF34               	btfsc	52,7,b	;volatile
 16833  010E66  D01B               	goto	i2l5854
 16834                           
 16835                           ; BSR set to: 13
 16836                           ;usb_device.c: 2824: {
 16837                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16838  010E68  010D               	movlb	13	; () banked
 16839  010E6A  5134               	movf	52,w,b	;volatile
 16840  010E6C  0B0F               	andlw	15
 16841  010E6E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16842  010E70  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16843  010E72  0D02               	mullw	2
 16844  010E74  0EDE               	movlw	low _pBDTEntryOut
 16845  010E76  24F3               	addwf	prodl,w,c
 16846  010E78  6ED9               	movwf	fsr2l,c
 16847  010E7A  0E00               	movlw	high _pBDTEntryOut
 16848  010E7C  20F4               	addwfc	prodh,w,c
 16849  010E7E  6EDA               	movwf	fsr2h,c
 16850  010E80  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 16851  010E84  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16852                           
 16853                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 16854  010E88  010D               	movlb	13	; () banked
 16855  010E8A  5134               	movf	52,w,b	;volatile
 16856  010E8C  0B0F               	andlw	15
 16857  010E8E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16858  010E90  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16859  010E92  0D01               	mullw	1
 16860  010E94  0EE7               	movlw	low _ep_data_out
 16861  010E96  24F3               	addwf	prodl,w,c
 16862  010E98  6ED9               	movwf	fsr2l,c
 16863  010E9A  0E00               	movlw	high _ep_data_out
 16864  010E9C  D01A               	goto	L7
 16865  010E9E                     i2l5854:
 16866                           
 16867                           ; BSR set to: 13
 16868                           ;usb_device.c: 2828: else
 16869                           ;usb_device.c: 2829: {
 16870                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16871  010E9E  010D               	movlb	13	; () banked
 16872  010EA0  5134               	movf	52,w,b	;volatile
 16873  010EA2  0B0F               	andlw	15
 16874  010EA4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16875  010EA6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16876  010EA8  0D02               	mullw	2
 16877  010EAA  0ED8               	movlw	low _pBDTEntryIn
 16878  010EAC  24F3               	addwf	prodl,w,c
 16879  010EAE  6ED9               	movwf	fsr2l,c
 16880  010EB0  0E00               	movlw	high _pBDTEntryIn
 16881  010EB2  20F4               	addwfc	prodh,w,c
 16882  010EB4  6EDA               	movwf	fsr2h,c
 16883  010EB6  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 16884  010EBA  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16885                           
 16886                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 16887  010EBE  010D               	movlb	13	; () banked
 16888  010EC0  5134               	movf	52,w,b	;volatile
 16889  010EC2  0B0F               	andlw	15
 16890  010EC4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16891  010EC6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16892  010EC8  0D01               	mullw	1
 16893  010ECA  0EE4               	movlw	low _ep_data_in
 16894  010ECC  24F3               	addwf	prodl,w,c
 16895  010ECE  6ED9               	movwf	fsr2l,c
 16896  010ED0  0E00               	movlw	high _ep_data_in
 16897  010ED2                     L7:
 16898  010ED2  20F4               	addwfc	prodh,w,c
 16899  010ED4  6EDA               	movwf	fsr2h,c
 16900  010ED6  50DF               	movf	indf2,w,c
 16901  010ED8  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 16902                           
 16903                           ; BSR set to: 13
 16904                           ;usb_device.c: 2832: }
 16905                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 16906                           
 16907                           ; BSR set to: 13
 16908  010EDA  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 16909  010EDC  D002               	goto	i2l5860
 16910                           
 16911                           ; BSR set to: 13
 16912                           ;usb_device.c: 2839: {
 16913                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 16914  010EDE  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 16915                           
 16916                           ;usb_device.c: 2841: }
 16917  010EE0  D001               	goto	i2l5862
 16918  010EE2                     i2l5860:
 16919                           
 16920                           ; BSR set to: 13
 16921                           ;usb_device.c: 2842: else
 16922                           ;usb_device.c: 2843: {
 16923                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 16924  010EE2  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 16925  010EE4                     i2l5862:
 16926                           
 16927                           ; BSR set to: 13
 16928                           ;usb_device.c: 2845: }
 16929                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 16930  010EE4  010D               	movlb	13	; () banked
 16931  010EE6  BF34               	btfsc	52,7,b	;volatile
 16932  010EE8  D00B               	goto	i2l5866
 16933                           
 16934                           ; BSR set to: 13
 16935                           ;usb_device.c: 2851: {
 16936                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16937  010EEA  010D               	movlb	13	; () banked
 16938  010EEC  5134               	movf	52,w,b	;volatile
 16939  010EEE  0B0F               	andlw	15
 16940  010EF0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16941  010EF2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16942  010EF4  0D02               	mullw	2
 16943  010EF6  0EDE               	movlw	low _pBDTEntryOut
 16944  010EF8  24F3               	addwf	prodl,w,c
 16945  010EFA  6ED9               	movwf	fsr2l,c
 16946  010EFC  0E00               	movlw	high _pBDTEntryOut
 16947  010EFE  D00A               	goto	L8
 16948  010F00                     i2l5866:
 16949                           
 16950                           ; BSR set to: 13
 16951                           ;usb_device.c: 2854: else
 16952                           ;usb_device.c: 2855: {
 16953                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16954  010F00  010D               	movlb	13	; () banked
 16955  010F02  5134               	movf	52,w,b	;volatile
 16956  010F04  0B0F               	andlw	15
 16957  010F06  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16958  010F08  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16959  010F0A  0D02               	mullw	2
 16960  010F0C  0ED8               	movlw	low _pBDTEntryIn
 16961  010F0E  24F3               	addwf	prodl,w,c
 16962  010F10  6ED9               	movwf	fsr2l,c
 16963  010F12  0E00               	movlw	high _pBDTEntryIn
 16964  010F14                     L8:
 16965  010F14  20F4               	addwfc	prodh,w,c
 16966  010F16  6EDA               	movwf	fsr2h,c
 16967  010F18  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 16968  010F1C  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 16969                           
 16970                           ; BSR set to: 13
 16971                           ;usb_device.c: 2857: }
 16972                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 16973                           
 16974                           ; BSR set to: 13
 16975  010F20  0E03               	movlw	3
 16976  010F22  010D               	movlb	13	; () banked
 16977  010F24  1931               	xorwf	49,w,b	;volatile
 16978  010F26  A4D8               	btfss	status,2,c
 16979  010F28  D02F               	goto	i2l5882
 16980                           
 16981                           ; BSR set to: 13
 16982                           ;usb_device.c: 2861: {
 16983                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 16984  010F2A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16985  010F2E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16986  010F32  AEDF               	btfss	indf2,7,c
 16987  010F34  D01C               	goto	i2l5878
 16988                           
 16989                           ; BSR set to: 13
 16990                           ;usb_device.c: 2863: {
 16991                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 16992  010F36  010D               	movlb	13	; () banked
 16993  010F38  BF34               	btfsc	52,7,b	;volatile
 16994  010F3A  D00B               	goto	i2l5876
 16995                           
 16996                           ; BSR set to: 13
 16997                           ;usb_device.c: 2867: {
 16998                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16999  010F3C  010D               	movlb	13	; () banked
 17000  010F3E  5134               	movf	52,w,b	;volatile
 17001  010F40  0B0F               	andlw	15
 17002  010F42  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17003  010F44  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17004  010F46  0D01               	mullw	1
 17005  010F48  0EE7               	movlw	low _ep_data_out
 17006  010F4A  24F3               	addwf	prodl,w,c
 17007  010F4C  6ED9               	movwf	fsr2l,c
 17008  010F4E  0E00               	movlw	high _ep_data_out
 17009  010F50  D00A               	goto	L9
 17010  010F52                     i2l5876:
 17011                           
 17012                           ;usb_device.c: 2870: else
 17013                           ;usb_device.c: 2871: {
 17014                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17015  010F52  010D               	movlb	13	; () banked
 17016  010F54  5134               	movf	52,w,b	;volatile
 17017  010F56  0B0F               	andlw	15
 17018  010F58  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17019  010F5A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17020  010F5C  0D01               	mullw	1
 17021  010F5E  0EE4               	movlw	low _ep_data_in
 17022  010F60  24F3               	addwf	prodl,w,c
 17023  010F62  6ED9               	movwf	fsr2l,c
 17024  010F64  0E00               	movlw	high _ep_data_in
 17025  010F66                     L9:
 17026  010F66  20F4               	addwfc	prodh,w,c
 17027  010F68  6EDA               	movwf	fsr2h,c
 17028  010F6A  0100               	movlb	0	; () banked
 17029  010F6C  82DF               	bsf	indf2,1,c
 17030  010F6E                     i2l5878:
 17031                           
 17032                           ;usb_device.c: 2873: }
 17033                           ;usb_device.c: 2874: }
 17034                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 17035  010F6E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17036  010F72  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17037  010F76  0E00               	movlw	0
 17038  010F78  84DB               	bsf	plusw2,2,c
 17039                           
 17040                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 17041  010F7A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17042  010F7E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17043  010F82  0E00               	movlw	0
 17044  010F84  8EDB               	bsf	plusw2,7,c
 17045                           
 17046                           ;usb_device.c: 2879: }
 17047  010F86  0012               	return	
 17048  010F88                     i2l5882:
 17049                           
 17050                           ;usb_device.c: 2880: else
 17051                           ;usb_device.c: 2881: {
 17052                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17053  010F88  0E04               	movlw	4
 17054  010F8A  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 17055                           
 17056                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 17057  010F8C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17058  010F90  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17059  010F94  AEDF               	btfss	indf2,7,c
 17060  010F96  D01B               	goto	i2l5892
 17061                           
 17062                           ;usb_device.c: 2888: {
 17063                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 17064  010F98  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17065  010F9C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17066  010FA0  0E7F               	movlw	127
 17067  010FA2  16DF               	andwf	indf2,f,c
 17068                           
 17069                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 17070  010FA4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17071  010FA8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17072  010FAC  0E00               	movlw	0
 17073  010FAE  8CDB               	bsf	plusw2,6,c
 17074                           
 17075                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17076  010FB0  0E00               	movlw	0
 17077  010FB2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17078  010FB4  0E05               	movlw	5
 17079  010FB6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17080  010FB8  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17081  010FBC  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17082  010FC0  0E00               	movlw	0
 17083  010FC2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17084  010FC4  0E02               	movlw	2
 17085  010FC6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17086  010FC8  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17087                           
 17088                           ;usb_device.c: 2894: }
 17089  010FCC  D006               	goto	i2l5894
 17090  010FCE                     i2l5892:
 17091                           
 17092                           ;usb_device.c: 2895: else
 17093                           ;usb_device.c: 2896: {
 17094                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 17095  010FCE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17096  010FD2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17097  010FD6  0E00               	movlw	0
 17098  010FD8  8CDB               	bsf	plusw2,6,c
 17099  010FDA                     i2l5894:
 17100                           
 17101                           ;usb_device.c: 2899: }
 17102                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17103  010FDA  0E04               	movlw	4
 17104  010FDC  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 17105                           
 17106                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 17107  010FDE  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 17108  010FE0  D006               	goto	i2l393
 17109  010FE2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17110  010FE6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17111  010FEA  AEDF               	btfss	indf2,7,c
 17112  010FEC  D031               	goto	i2l5908
 17113  010FEE                     i2l393:
 17114                           
 17115                           ;usb_device.c: 2910: {
 17116                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 17117  010FEE  010D               	movlb	13	; () banked
 17118  010FF0  BF34               	btfsc	52,7,b	;volatile
 17119  010FF2  D00B               	goto	i2l5902
 17120                           
 17121                           ; BSR set to: 13
 17122                           ;usb_device.c: 2912: {
 17123                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17124  010FF4  010D               	movlb	13	; () banked
 17125  010FF6  5134               	movf	52,w,b	;volatile
 17126  010FF8  0B0F               	andlw	15
 17127  010FFA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17128  010FFC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17129  010FFE  0D01               	mullw	1
 17130  011000  0EE7               	movlw	low _ep_data_out
 17131  011002  24F3               	addwf	prodl,w,c
 17132  011004  6ED9               	movwf	fsr2l,c
 17133  011006  0E00               	movlw	high _ep_data_out
 17134  011008  D00A               	goto	L10
 17135  01100A                     i2l5902:
 17136                           
 17137                           ;usb_device.c: 2915: else
 17138                           ;usb_device.c: 2916: {
 17139                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17140  01100A  010D               	movlb	13	; () banked
 17141  01100C  5134               	movf	52,w,b	;volatile
 17142  01100E  0B0F               	andlw	15
 17143  011010  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17144  011012  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17145  011014  0D01               	mullw	1
 17146  011016  0EE4               	movlw	low _ep_data_in
 17147  011018  24F3               	addwf	prodl,w,c
 17148  01101A  6ED9               	movwf	fsr2l,c
 17149  01101C  0E00               	movlw	high _ep_data_in
 17150  01101E                     L10:
 17151  01101E  20F4               	addwfc	prodh,w,c
 17152  011020  6EDA               	movwf	fsr2h,c
 17153  011022  0100               	movlb	0	; () banked
 17154  011024  92DF               	bcf	indf2,1,c
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;usb_device.c: 2918: }
 17158                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17159                           
 17160                           ; BSR set to: 0
 17161  011026  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17162  01102A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17163  01102E  0E3B               	movlw	59
 17164  011030  16DF               	andwf	indf2,f,c
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17168  011032  0E00               	movlw	0
 17169  011034  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17170  011036  0E05               	movlw	5
 17171  011038  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17172  01103A  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17173  01103E  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17174  011042  0E00               	movlw	0
 17175  011044  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17176  011046  0E02               	movlw	2
 17177  011048  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17178  01104A  ECFA  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17179                           
 17180                           ;usb_device.c: 2924: }
 17181  01104E  D006               	goto	i2l5910
 17182  011050                     i2l5908:
 17183                           
 17184                           ;usb_device.c: 2925: else
 17185                           ;usb_device.c: 2926: {
 17186                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17187  011050  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17188  011054  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17189  011058  0E3B               	movlw	59
 17190  01105A  16DF               	andwf	indf2,f,c
 17191  01105C                     i2l5910:
 17192                           
 17193                           ;usb_device.c: 2929: }
 17194                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 17195  01105C  010D               	movlb	13	; () banked
 17196  01105E  5134               	movf	52,w,b	;volatile
 17197  011060  0B0F               	andlw	15
 17198  011062  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17199  011064  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17200  011066  0D01               	mullw	1
 17201  011068  0E26               	movlw	38
 17202  01106A  24F3               	addwf	prodl,w,c
 17203  01106C  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 17204  01106E  0E0F               	movlw	15
 17205  011070  20F4               	addwfc	prodh,w,c
 17206  011072  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 17207                           
 17208                           ; BSR set to: 13
 17209                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 17210  011074  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 17211  011078  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 17212  01107C  0EFE               	movlw	254
 17213  01107E  16DF               	andwf	indf2,f,c
 17214                           
 17215                           ; BSR set to: 13
 17216  011080  0012               	return	
 17217  011082                     __end_of_USBStdFeatureReqHandler:
 17218                           	opt stack 0
 17219                           pclatu	equ	0xFFB
 17220                           pclath	equ	0xFFA
 17221                           tblptru	equ	0xFF8
 17222                           tblptrh	equ	0xFF7
 17223                           tblptrl	equ	0xFF6
 17224                           tablat	equ	0xFF5
 17225                           prodh	equ	0xFF4
 17226                           prodl	equ	0xFF3
 17227                           intcon	equ	0xFF2
 17228                           intcon2	equ	0xFF1
 17229                           indf0	equ	0xFEF
 17230                           postinc0	equ	0xFEE
 17231                           fsr0h	equ	0xFEA
 17232                           fsr0l	equ	0xFE9
 17233                           wreg	equ	0xFE8
 17234                           indf1	equ	0xFE7
 17235                           postinc1	equ	0xFE6
 17236                           postdec1	equ	0xFE5
 17237                           fsr1h	equ	0xFE2
 17238                           fsr1l	equ	0xFE1
 17239                           indf2	equ	0xFDF
 17240                           postinc2	equ	0xFDE
 17241                           postdec2	equ	0xFDD
 17242                           plusw2	equ	0xFDB
 17243                           fsr2h	equ	0xFDA
 17244                           fsr2l	equ	0xFD9
 17245                           status	equ	0xFD8
 17246                           
 17247 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 17248 ;; Defined at:
 17249 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  event           2   12[COMRAM] enum E8545
 17252 ;;  pdata           2   14[COMRAM] PTR void 
 17253 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 17254 ;;  size            2   16[COMRAM] unsigned int 
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;		None
 17257 ;; Return value:  Size  Location     Type
 17258 ;;                  1    wreg      unsigned char 
 17259 ;; Registers used:
 17260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17261 ;; Tracked objects:
 17262 ;;		On entry : 0/0
 17263 ;;		On exit  : 0/0
 17264 ;;		Unchanged: 0/0
 17265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17269 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17270 ;;Total ram usage:        8 bytes
 17271 ;; Hardware stack levels used:    1
 17272 ;; Hardware stack levels required when called:    3
 17273 ;; This function calls:
 17274 ;;		_CDCInitEP
 17275 ;;		_USBCheckCDCRequest
 17276 ;; This function is called by:
 17277 ;;		_USBDeviceTasks
 17278 ;;		_USBStdSetCfgHandler
 17279 ;;		_USBSuspend
 17280 ;;		_USBWakeFromSuspend
 17281 ;;		_USBCtrlTrfSetupHandler
 17282 ;;		_USBCheckStdRequest
 17283 ;;		_USBStdFeatureReqHandler
 17284 ;; This function uses a non-reentrant model
 17285 ;;
 17286                           
 17287                           	psect	text84
 17288  013DF4                     __ptext84:
 17289                           	opt stack 0
 17290  013DF4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 17291                           	opt stack 15
 17292                           
 17293                           ;My_usb_cdc.c: 45: switch ((int) event) {
 17294                           
 17295                           ;incstack = 0
 17296  013DF4  D006               	goto	i2l5504
 17297  013DF6                     i2l5498:
 17298                           
 17299                           ;My_usb_cdc.c: 47: CDCInitEP();
 17300  013DF6  ECB2  F09B         	call	_CDCInitEP	;wreg free
 17301                           
 17302                           ;My_usb_cdc.c: 48: break;
 17303  013DFA  0012               	return	
 17304  013DFC                     i2l5500:
 17305                           
 17306                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 17307  013DFC  EC0A  F092         	call	_USBCheckCDCRequest	;wreg free
 17308                           
 17309                           ;My_usb_cdc.c: 52: }
 17310                           
 17311                           ;My_usb_cdc.c: 51: break;
 17312  013E00  0012               	return	
 17313  013E02                     i2l5504:
 17314  013E02  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 17315  013E06  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 17316                           
 17317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17318                           ; Switch size 1, requested type "space"
 17319                           ; Number of cases is 1, Range of values is 0 to 0
 17320                           ; switch strategies available:
 17321                           ; Name         Instructions Cycles
 17322                           ; simple_byte            4     3 (average)
 17323                           ;	Chosen strategy is simple_byte
 17324  013E0A  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 17325  013E0C  0A00               	xorlw	0	; case 0
 17326  013E0E  A4D8               	btfss	status,2,c
 17327  013E10  0012               	return	
 17328                           
 17329                           ; Switch size 1, requested type "space"
 17330                           ; Number of cases is 2, Range of values is 1 to 3
 17331                           ; switch strategies available:
 17332                           ; Name         Instructions Cycles
 17333                           ; simple_byte            7     4 (average)
 17334                           ;	Chosen strategy is simple_byte
 17335  013E12  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17336  013E14  0A01               	xorlw	1	; case 1
 17337  013E16  B4D8               	btfsc	status,2,c
 17338  013E18  D7EE               	goto	i2l5498
 17339  013E1A  0A02               	xorlw	2	; case 3
 17340  013E1C  A4D8               	btfss	status,2,c
 17341  013E1E  0012               	return	
 17342  013E20  D7ED               	goto	i2l5500
 17343  013E22                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 17344                           	opt stack 0
 17345                           pclatu	equ	0xFFB
 17346                           pclath	equ	0xFFA
 17347                           tblptru	equ	0xFF8
 17348                           tblptrh	equ	0xFF7
 17349                           tblptrl	equ	0xFF6
 17350                           tablat	equ	0xFF5
 17351                           prodh	equ	0xFF4
 17352                           prodl	equ	0xFF3
 17353                           intcon	equ	0xFF2
 17354                           intcon2	equ	0xFF1
 17355                           indf0	equ	0xFEF
 17356                           postinc0	equ	0xFEE
 17357                           fsr0h	equ	0xFEA
 17358                           fsr0l	equ	0xFE9
 17359                           wreg	equ	0xFE8
 17360                           indf1	equ	0xFE7
 17361                           postinc1	equ	0xFE6
 17362                           postdec1	equ	0xFE5
 17363                           fsr1h	equ	0xFE2
 17364                           fsr1l	equ	0xFE1
 17365                           indf2	equ	0xFDF
 17366                           postinc2	equ	0xFDE
 17367                           postdec2	equ	0xFDD
 17368                           plusw2	equ	0xFDB
 17369                           fsr2h	equ	0xFDA
 17370                           fsr2l	equ	0xFD9
 17371                           status	equ	0xFD8
 17372                           
 17373 ;; *************** function _USBCheckCDCRequest *****************
 17374 ;; Defined at:
 17375 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 17376 ;; Parameters:    Size  Location     Type
 17377 ;;		None
 17378 ;; Auto vars:     Size  Location     Type
 17379 ;;		None
 17380 ;; Return value:  Size  Location     Type
 17381 ;;		None               void
 17382 ;; Registers used:
 17383 ;;		wreg, status,2, status,0
 17384 ;; Tracked objects:
 17385 ;;		On entry : 0/0
 17386 ;;		On exit  : 0/0
 17387 ;;		Unchanged: 0/0
 17388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17393 ;;Total ram usage:        0 bytes
 17394 ;; Hardware stack levels used:    1
 17395 ;; This function calls:
 17396 ;;		Nothing
 17397 ;; This function is called by:
 17398 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17399 ;; This function uses a non-reentrant model
 17400 ;;
 17401                           
 17402                           	psect	text85
 17403  012414                     __ptext85:
 17404                           	opt stack 0
 17405  012414                     _USBCheckCDCRequest:
 17406                           	opt stack 17
 17407                           
 17408                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 17409                           
 17410                           ;incstack = 0
 17411  012414  010D               	movlb	13	; () banked
 17412  012416  5130               	movf	48,w,b	;volatile
 17413  012418  0B1F               	andlw	31
 17414  01241A  06E8               	decf	wreg,f,c
 17415  01241C  A4D8               	btfss	status,2,c
 17416  01241E  0012               	return	
 17417                           
 17418                           ; BSR set to: 13
 17419                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 17420                           
 17421                           ; BSR set to: 13
 17422                           
 17423                           ; BSR set to: 13
 17424  012420  010D               	movlb	13	; () banked
 17425  012422  3930               	swapf	48,w,b	;volatile
 17426  012424  32E8               	rrcf	wreg,f,c
 17427  012426  0B03               	andlw	3
 17428  012428  06E8               	decf	wreg,f,c
 17429  01242A  A4D8               	btfss	status,2,c
 17430  01242C  0012               	return	
 17431                           
 17432                           ; BSR set to: 13
 17433                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 17434                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 17435                           
 17436                           ; BSR set to: 13
 17437                           
 17438                           ; BSR set to: 13
 17439  01242E  010D               	movlb	13	; () banked
 17440  012430  5134               	movf	52,w,b	;volatile
 17441  012432  B4D8               	btfsc	status,2,c
 17442  012434  D048               	goto	i2l5378
 17443                           
 17444                           ; BSR set to: 13
 17445  012436  010D               	movlb	13	; () banked
 17446  012438  0534               	decf	52,w,b	;volatile
 17447  01243A  A4D8               	btfss	status,2,c
 17448  01243C  0012               	return	
 17449  01243E  D043               	goto	i2l5378
 17450  012440                     i2l5354:
 17451                           
 17452                           ; BSR set to: 13
 17453                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17454  012440  0E54               	movlw	low _dummy_encapsulated_cmd_response
 17455  012442  0100               	movlb	0	; () banked
 17456  012444  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17457  012446  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17458  012448  0100               	movlb	0	; () banked
 17459  01244A  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 17463  01244C  0E00               	movlw	0
 17464  01244E  0100               	movlb	0	; () banked
 17465  012450  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17466  012452  0E08               	movlw	8
 17467  012454  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17471  012456  0100               	movlb	0	; () banked
 17472  012458  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 17476  01245A  0100               	movlb	0	; () banked
 17477  01245C  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17478                           
 17479                           ;usb_device_cdc.c: 232: break;
 17480  01245E  0012               	return	
 17481  012460                     i2l5362:
 17482                           
 17483                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17484  012460  0E54               	movlw	low _dummy_encapsulated_cmd_response
 17485  012462  0100               	movlb	0	; () banked
 17486  012464  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17487  012466  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17488  012468  0100               	movlb	0	; () banked
 17489  01246A  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 17493  01246C  0100               	movlb	0	; () banked
 17494  01246E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17495                           
 17496                           ;usb_device_cdc.c: 237: break;
 17497  012470  0012               	return	
 17498  012472                     i2l450:
 17499                           
 17500                           ; BSR set to: 13
 17501                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 17502  012472  CD36 F0CD          	movff	3382,_outPipes+4	;volatile
 17503  012476  CD37 F0CE          	movff	3383,_outPipes+5	;volatile
 17504                           
 17505                           ; BSR set to: 13
 17506                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 17507  01247A  0E84               	movlw	low _line_coding
 17508  01247C  0100               	movlb	0	; () banked
 17509  01247E  6FC9               	movwf	_outPipes& (0+255),b	;volatile
 17510  012480  0E01               	movlw	high _line_coding
 17511  012482  0100               	movlb	0	; () banked
 17512  012484  6FCA               	movwf	(_outPipes+1)& (0+255),b	;volatile
 17513                           
 17514                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 17515  012486  0E00               	movlw	0
 17516  012488  0100               	movlb	0	; () banked
 17517  01248A  6FCF               	movwf	(_outPipes+6)& (0+255),b	;volatile
 17518  01248C  0E00               	movlw	0
 17519  01248E  0100               	movlb	0	; () banked
 17520  012490  6FD0               	movwf	(_outPipes+7)& (0+255),b	;volatile
 17521  012492  0E00               	movlw	0
 17522  012494  0100               	movlb	0	; () banked
 17523  012496  6FD1               	movwf	(_outPipes+8)& (0+255),b	;volatile
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 17527  012498  0100               	movlb	0	; () banked
 17528  01249A  8FCC               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 17529                           
 17530                           ;usb_device_cdc.c: 246: break;
 17531  01249C  0012               	return	
 17532  01249E                     i2l5370:
 17533                           
 17534                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 17535  01249E  0E84               	movlw	low _line_coding
 17536  0124A0  0100               	movlb	0	; () banked
 17537  0124A2  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17538  0124A4  0E01               	movlw	high _line_coding
 17539  0124A6  0100               	movlb	0	; () banked
 17540  0124A8  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17541                           
 17542                           ; BSR set to: 0
 17543  0124AA  0E00               	movlw	0
 17544  0124AC  0100               	movlb	0	; () banked
 17545  0124AE  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17546  0124B0  0E07               	movlw	7
 17547  0124B2  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17548                           
 17549                           ; BSR set to: 0
 17550  0124B4  0EC1               	movlw	193
 17551  0124B6  0100               	movlb	0	; () banked
 17552  0124B8  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17553                           
 17554                           ;usb_device_cdc.c: 253: break;
 17555  0124BA  0012               	return	
 17556  0124BC                     i2l452:
 17557                           
 17558                           ; BSR set to: 13
 17559                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 17560  0124BC  CD32 F048          	movff	3378,_control_signal_bitmap	;volatile
 17561                           
 17562                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 17563  0124C0  0100               	movlb	0	; () banked
 17564  0124C2  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;usb_device_cdc.c: 315: }
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;usb_device_cdc.c: 314: break;
 17571                           
 17572                           ;usb_device_cdc.c: 313: default:
 17573                           
 17574                           ;usb_device_cdc.c: 289: break;
 17575  0124C4  0012               	return	
 17576  0124C6                     i2l5378:
 17577  0124C6  010D               	movlb	13	; () banked
 17578  0124C8  5131               	movf	49,w,b	;volatile
 17579                           
 17580                           ; Switch size 1, requested type "space"
 17581                           ; Number of cases is 5, Range of values is 0 to 34
 17582                           ; switch strategies available:
 17583                           ; Name         Instructions Cycles
 17584                           ; simple_byte           16     9 (average)
 17585                           ;	Chosen strategy is simple_byte
 17586  0124CA  0A00               	xorlw	0	; case 0
 17587  0124CC  B4D8               	btfsc	status,2,c
 17588  0124CE  D7B8               	goto	i2l5354
 17589  0124D0  0A01               	xorlw	1	; case 1
 17590  0124D2  B4D8               	btfsc	status,2,c
 17591  0124D4  D7C5               	goto	i2l5362
 17592  0124D6  0A21               	xorlw	33	; case 32
 17593  0124D8  B4D8               	btfsc	status,2,c
 17594  0124DA  D7CB               	goto	i2l450
 17595  0124DC  0A01               	xorlw	1	; case 33
 17596  0124DE  B4D8               	btfsc	status,2,c
 17597  0124E0  D7DE               	goto	i2l5370
 17598  0124E2  0A03               	xorlw	3	; case 34
 17599  0124E4  A4D8               	btfss	status,2,c
 17600  0124E6  0012               	return	
 17601  0124E8  D7E9               	goto	i2l452
 17602  0124EA                     __end_of_USBCheckCDCRequest:
 17603                           	opt stack 0
 17604                           pclatu	equ	0xFFB
 17605                           pclath	equ	0xFFA
 17606                           tblptru	equ	0xFF8
 17607                           tblptrh	equ	0xFF7
 17608                           tblptrl	equ	0xFF6
 17609                           tablat	equ	0xFF5
 17610                           prodh	equ	0xFF4
 17611                           prodl	equ	0xFF3
 17612                           intcon	equ	0xFF2
 17613                           intcon2	equ	0xFF1
 17614                           indf0	equ	0xFEF
 17615                           postinc0	equ	0xFEE
 17616                           fsr0h	equ	0xFEA
 17617                           fsr0l	equ	0xFE9
 17618                           wreg	equ	0xFE8
 17619                           indf1	equ	0xFE7
 17620                           postinc1	equ	0xFE6
 17621                           postdec1	equ	0xFE5
 17622                           fsr1h	equ	0xFE2
 17623                           fsr1l	equ	0xFE1
 17624                           indf2	equ	0xFDF
 17625                           postinc2	equ	0xFDE
 17626                           postdec2	equ	0xFDD
 17627                           plusw2	equ	0xFDB
 17628                           fsr2h	equ	0xFDA
 17629                           fsr2l	equ	0xFD9
 17630                           status	equ	0xFD8
 17631                           
 17632 ;; *************** function _CDCInitEP *****************
 17633 ;; Defined at:
 17634 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 17635 ;; Parameters:    Size  Location     Type
 17636 ;;		None
 17637 ;; Auto vars:     Size  Location     Type
 17638 ;;		None
 17639 ;; Return value:  Size  Location     Type
 17640 ;;		None               void
 17641 ;; Registers used:
 17642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17652 ;;Total ram usage:        0 bytes
 17653 ;; Hardware stack levels used:    1
 17654 ;; Hardware stack levels required when called:    2
 17655 ;; This function calls:
 17656 ;;		_USBEnableEndpoint
 17657 ;;		i2_USBTransferOnePacket
 17658 ;; This function is called by:
 17659 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           	psect	text86
 17664  013764                     __ptext86:
 17665                           	opt stack 0
 17666  013764                     _CDCInitEP:
 17667                           	opt stack 15
 17668                           
 17669                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 17670                           
 17671                           ;incstack = 0
 17672  013764  0E00               	movlw	0
 17673  013766  0101               	movlb	1	; () banked
 17674  013768  6F84               	movwf	_line_coding& (0+255),b
 17675  01376A  0E4B               	movlw	75
 17676  01376C  6F85               	movwf	(_line_coding+1)& (0+255),b
 17677  01376E  0E00               	movlw	0
 17678  013770  6F86               	movwf	(_line_coding+2)& (0+255),b
 17679  013772  0E00               	movlw	0
 17680  013774  6F87               	movwf	(_line_coding+3)& (0+255),b
 17681                           
 17682                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 17683  013776  0E00               	movlw	0
 17684  013778  0101               	movlb	1	; () banked
 17685  01377A  6F88               	movwf	(_line_coding+4)& (0+255),b
 17686                           
 17687                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 17688  01377C  0E00               	movlw	0
 17689  01377E  0101               	movlb	1	; () banked
 17690  013780  6F89               	movwf	(_line_coding+5)& (0+255),b
 17691                           
 17692                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 17693  013782  0E08               	movlw	8
 17694  013784  0101               	movlb	1	; () banked
 17695  013786  6F8A               	movwf	(_line_coding+6)& (0+255),b
 17696                           
 17697                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 17698  013788  0E00               	movlw	0
 17699  01378A  0100               	movlb	0	; () banked
 17700  01378C  6FF7               	movwf	_cdc_rx_len& (0+255),b
 17701                           
 17702                           ; BSR set to: 0
 17703                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 17704  01378E  0E1A               	movlw	26
 17705  013790  6E09               	movwf	USBEnableEndpoint@options,c
 17706  013792  0E01               	movlw	1
 17707  013794  EC21  F09E         	call	_USBEnableEndpoint
 17708                           
 17709                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 17710  013798  0E1E               	movlw	30
 17711  01379A  6E09               	movwf	USBEnableEndpoint@options,c
 17712  01379C  0E02               	movlw	2
 17713  01379E  EC21  F09E         	call	_USBEnableEndpoint
 17714                           
 17715                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17716  0137A2  0E00               	movlw	0
 17717  0137A4  6E01               	movwf	i2USBTransferOnePacket@dir,c
 17718  0137A6  0E00               	movlw	low _cdc_data_rx
 17719  0137A8  6E02               	movwf	i2USBTransferOnePacket@data,c
 17720  0137AA  0E02               	movlw	high _cdc_data_rx
 17721  0137AC  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 17722  0137AE  0E40               	movlw	64
 17723  0137B0  6E04               	movwf	i2USBTransferOnePacket@len,c
 17724  0137B2  0E02               	movlw	2
 17725  0137B4  EC19  F097         	call	i2_USBTransferOnePacket
 17726  0137B8  C001  F0F2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 17727  0137BC  C002  F0F3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17728                           
 17729                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 17730  0137C0  0E00               	movlw	0
 17731  0137C2  0100               	movlb	0	; () banked
 17732  0137C4  6FF0               	movwf	_CDCDataInHandle& (0+255),b
 17733  0137C6  0E00               	movlw	0
 17734  0137C8  0100               	movlb	0	; () banked
 17735  0137CA  6FF1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 17739  0137CC  0E00               	movlw	0
 17740  0137CE  6E46               	movwf	_cdc_trf_state,c
 17741                           
 17742                           ; BSR set to: 0
 17743  0137D0  0012               	return		;funcret
 17744  0137D2                     __end_of_CDCInitEP:
 17745                           	opt stack 0
 17746                           pclatu	equ	0xFFB
 17747                           pclath	equ	0xFFA
 17748                           tblptru	equ	0xFF8
 17749                           tblptrh	equ	0xFF7
 17750                           tblptrl	equ	0xFF6
 17751                           tablat	equ	0xFF5
 17752                           prodh	equ	0xFF4
 17753                           prodl	equ	0xFF3
 17754                           intcon	equ	0xFF2
 17755                           intcon2	equ	0xFF1
 17756                           indf0	equ	0xFEF
 17757                           postinc0	equ	0xFEE
 17758                           fsr0h	equ	0xFEA
 17759                           fsr0l	equ	0xFE9
 17760                           wreg	equ	0xFE8
 17761                           indf1	equ	0xFE7
 17762                           postinc1	equ	0xFE6
 17763                           postdec1	equ	0xFE5
 17764                           fsr1h	equ	0xFE2
 17765                           fsr1l	equ	0xFE1
 17766                           indf2	equ	0xFDF
 17767                           postinc2	equ	0xFDE
 17768                           postdec2	equ	0xFDD
 17769                           plusw2	equ	0xFDB
 17770                           fsr2h	equ	0xFDA
 17771                           fsr2l	equ	0xFD9
 17772                           status	equ	0xFD8
 17773                           
 17774 ;; *************** function i2_USBTransferOnePacket *****************
 17775 ;; Defined at:
 17776 ;;		line 995 in file "../My_library/usb/usb_device.c"
 17777 ;; Parameters:    Size  Location     Type
 17778 ;;  ep              1    wreg     unsigned char 
 17779 ;;  dir             1    0[COMRAM] unsigned char 
 17780 ;;  data            2    1[COMRAM] PTR unsigned char 
 17781 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17782 ;;  len             1    3[COMRAM] unsigned char 
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;  ep              1    4[COMRAM] unsigned char 
 17785 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 17786 ;;		 -> NULL(0), BDT(48), 
 17787 ;; Return value:  Size  Location     Type
 17788 ;;                  2    0[COMRAM] PTR void 
 17789 ;; Registers used:
 17790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17791 ;; Tracked objects:
 17792 ;;		On entry : 0/0
 17793 ;;		On exit  : 0/0
 17794 ;;		Unchanged: 0/0
 17795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17800 ;;Total ram usage:        7 bytes
 17801 ;; Hardware stack levels used:    1
 17802 ;; This function calls:
 17803 ;;		Nothing
 17804 ;; This function is called by:
 17805 ;;		_CDCInitEP
 17806 ;; This function uses a non-reentrant model
 17807 ;;
 17808                           
 17809                           	psect	text87
 17810  012E32                     __ptext87:
 17811                           	opt stack 0
 17812  012E32                     i2_USBTransferOnePacket:
 17813                           	opt stack 16
 17814                           
 17815                           ; BSR set to: 0
 17816                           ;incstack = 0
 17817                           ;i2USBTransferOnePacket@ep stored from wreg
 17818  012E32  6E05               	movwf	i2USBTransferOnePacket@ep,c
 17819                           
 17820                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 17821                           ;usb_device.c: 1000: if(dir != 0)
 17822  012E34  5001               	movf	i2USBTransferOnePacket@dir,w,c
 17823  012E36  B4D8               	btfsc	status,2,c
 17824  012E38  D007               	goto	i2l5314
 17825                           
 17826                           ;usb_device.c: 1001: {
 17827                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 17828  012E3A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17829  012E3C  0D02               	mullw	2
 17830  012E3E  0ED8               	movlw	low _pBDTEntryIn
 17831  012E40  24F3               	addwf	prodl,w,c
 17832  012E42  6ED9               	movwf	fsr2l,c
 17833  012E44  0E00               	movlw	high _pBDTEntryIn
 17834  012E46  D006               	goto	L11
 17835  012E48                     i2l5314:
 17836                           
 17837                           ;usb_device.c: 1005: else
 17838                           ;usb_device.c: 1006: {
 17839                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 17840  012E48  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17841  012E4A  0D02               	mullw	2
 17842  012E4C  0EDE               	movlw	low _pBDTEntryOut
 17843  012E4E  24F3               	addwf	prodl,w,c
 17844  012E50  6ED9               	movwf	fsr2l,c
 17845  012E52  0E00               	movlw	high _pBDTEntryOut
 17846  012E54                     L11:
 17847  012E54  20F4               	addwfc	prodh,w,c
 17848  012E56  6EDA               	movwf	fsr2h,c
 17849  012E58  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 17850  012E5C  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 17851                           
 17852                           ;usb_device.c: 1009: }
 17853                           ;usb_device.c: 1013: if(handle == 0)
 17854  012E60  5006               	movf	i2USBTransferOnePacket@handle,w,c
 17855  012E62  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 17856  012E64  A4D8               	btfss	status,2,c
 17857  012E66  D005               	goto	i2l5322
 17858                           
 17859                           ;usb_device.c: 1014: {
 17860                           ;usb_device.c: 1015: return 0;
 17861  012E68  0E00               	movlw	0
 17862  012E6A  6E01               	movwf	?i2_USBTransferOnePacket,c
 17863  012E6C  0E00               	movlw	0
 17864  012E6E  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 17865  012E70  0012               	return	
 17866  012E72                     i2l5322:
 17867                           
 17868                           ;usb_device.c: 1016: }
 17869                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 17870  012E72  EE20 F002          	lfsr	2,2
 17871  012E76  5006               	movf	i2USBTransferOnePacket@handle,w,c
 17872  012E78  26D9               	addwf	fsr2l,f,c
 17873  012E7A  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 17874  012E7C  22DA               	addwfc	fsr2h,f,c
 17875  012E7E  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 17876  012E82  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 17877                           
 17878                           ;usb_device.c: 1030: handle->CNT = len;
 17879  012E86  EE20 F001          	lfsr	2,1
 17880  012E8A  5006               	movf	i2USBTransferOnePacket@handle,w,c
 17881  012E8C  26D9               	addwf	fsr2l,f,c
 17882  012E8E  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 17883  012E90  22DA               	addwfc	fsr2h,f,c
 17884  012E92  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 17885                           
 17886                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 17887  012E96  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17888  012E9A  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17889  012E9E  0E40               	movlw	64
 17890  012EA0  16DF               	andwf	indf2,f,c
 17891                           
 17892                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 17893  012EA2  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17894  012EA6  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17895  012EAA  0E00               	movlw	0
 17896  012EAC  86DB               	bsf	plusw2,3,c
 17897                           
 17898                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 17899  012EAE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17900  012EB2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17901  012EB6  0E00               	movlw	0
 17902  012EB8  8EDB               	bsf	plusw2,7,c
 17903                           
 17904                           ;usb_device.c: 1036: if(dir != 0)
 17905  012EBA  5001               	movf	i2USBTransferOnePacket@dir,w,c
 17906  012EBC  B4D8               	btfsc	status,2,c
 17907  012EBE  D007               	goto	i2l5334
 17908                           
 17909                           ;usb_device.c: 1037: {
 17910                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17911  012EC0  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17912  012EC2  0D02               	mullw	2
 17913  012EC4  0ED8               	movlw	low _pBDTEntryIn
 17914  012EC6  24F3               	addwf	prodl,w,c
 17915  012EC8  6ED9               	movwf	fsr2l,c
 17916  012ECA  0E00               	movlw	high _pBDTEntryIn
 17917  012ECC  D006               	goto	L12
 17918  012ECE                     i2l5334:
 17919                           
 17920                           ;usb_device.c: 1041: else
 17921                           ;usb_device.c: 1042: {
 17922                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17923  012ECE  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17924  012ED0  0D02               	mullw	2
 17925  012ED2  0EDE               	movlw	low _pBDTEntryOut
 17926  012ED4  24F3               	addwf	prodl,w,c
 17927  012ED6  6ED9               	movwf	fsr2l,c
 17928  012ED8  0E00               	movlw	high _pBDTEntryOut
 17929  012EDA                     L12:
 17930  012EDA  20F4               	addwfc	prodh,w,c
 17931  012EDC  6EDA               	movwf	fsr2h,c
 17932  012EDE  0E04               	movlw	4
 17933  012EE0  1ADF               	xorwf	indf2,f,c
 17934                           
 17935                           ;usb_device.c: 1045: }
 17936                           ;usb_device.c: 1046: return (void*)handle;
 17937  012EE2  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 17938  012EE6  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 17939  012EEA  0012               	return	
 17940  012EEC                     __end_ofi2_USBTransferOnePacket:
 17941                           	opt stack 0
 17942                           pclatu	equ	0xFFB
 17943                           pclath	equ	0xFFA
 17944                           tblptru	equ	0xFF8
 17945                           tblptrh	equ	0xFF7
 17946                           tblptrl	equ	0xFF6
 17947                           tablat	equ	0xFF5
 17948                           prodh	equ	0xFF4
 17949                           prodl	equ	0xFF3
 17950                           intcon	equ	0xFF2
 17951                           intcon2	equ	0xFF1
 17952                           indf0	equ	0xFEF
 17953                           postinc0	equ	0xFEE
 17954                           fsr0h	equ	0xFEA
 17955                           fsr0l	equ	0xFE9
 17956                           wreg	equ	0xFE8
 17957                           indf1	equ	0xFE7
 17958                           postinc1	equ	0xFE6
 17959                           postdec1	equ	0xFE5
 17960                           fsr1h	equ	0xFE2
 17961                           fsr1l	equ	0xFE1
 17962                           indf2	equ	0xFDF
 17963                           postinc2	equ	0xFDE
 17964                           postdec2	equ	0xFDD
 17965                           plusw2	equ	0xFDB
 17966                           fsr2h	equ	0xFDA
 17967                           fsr2l	equ	0xFD9
 17968                           status	equ	0xFD8
 17969                           
 17970 ;; *************** function _USBEnableEndpoint *****************
 17971 ;; Defined at:
 17972 ;;		line 878 in file "../My_library/usb/usb_device.c"
 17973 ;; Parameters:    Size  Location     Type
 17974 ;;  ep              1    wreg     unsigned char 
 17975 ;;  options         1    8[COMRAM] unsigned char 
 17976 ;; Auto vars:     Size  Location     Type
 17977 ;;  ep              1   11[COMRAM] unsigned char 
 17978 ;;  p               2    9[COMRAM] PTR unsigned char 
 17979 ;;		 -> UEP0(1), 
 17980 ;; Return value:  Size  Location     Type
 17981 ;;		None               void
 17982 ;; Registers used:
 17983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17984 ;; Tracked objects:
 17985 ;;		On entry : 0/0
 17986 ;;		On exit  : 0/0
 17987 ;;		Unchanged: 0/0
 17988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17990 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17993 ;;Total ram usage:        4 bytes
 17994 ;; Hardware stack levels used:    1
 17995 ;; Hardware stack levels required when called:    1
 17996 ;; This function calls:
 17997 ;;		_USBConfigureEndpoint
 17998 ;; This function is called by:
 17999 ;;		_CDCInitEP
 18000 ;; This function uses a non-reentrant model
 18001 ;;
 18002                           
 18003                           	psect	text88
 18004  013C42                     __ptext88:
 18005                           	opt stack 0
 18006  013C42                     _USBEnableEndpoint:
 18007                           	opt stack 15
 18008                           
 18009                           ;incstack = 0
 18010                           ;USBEnableEndpoint@ep stored from wreg
 18011  013C42  6E0C               	movwf	USBEnableEndpoint@ep,c
 18012                           
 18013                           ;usb_device.c: 880: unsigned char* p;
 18014                           ;usb_device.c: 884: if(options & 0x04)
 18015  013C44  A409               	btfss	USBEnableEndpoint@options,2,c
 18016  013C46  D005               	goto	i2l5266
 18017                           
 18018                           ;usb_device.c: 885: {
 18019                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18020  013C48  0E00               	movlw	0
 18021  013C4A  6E01               	movwf	USBConfigureEndpoint@direction,c
 18022  013C4C  500C               	movf	USBEnableEndpoint@ep,w,c
 18023  013C4E  EC15  F099         	call	_USBConfigureEndpoint
 18024  013C52                     i2l5266:
 18025                           
 18026                           ;usb_device.c: 887: }
 18027                           ;usb_device.c: 888: if(options & 0x02)
 18028  013C52  A209               	btfss	USBEnableEndpoint@options,1,c
 18029  013C54  D005               	goto	i2l5270
 18030                           
 18031                           ;usb_device.c: 889: {
 18032                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 18033  013C56  0E01               	movlw	1
 18034  013C58  6E01               	movwf	USBConfigureEndpoint@direction,c
 18035  013C5A  500C               	movf	USBEnableEndpoint@ep,w,c
 18036  013C5C  EC15  F099         	call	_USBConfigureEndpoint
 18037  013C60                     i2l5270:
 18038                           
 18039                           ;usb_device.c: 891: }
 18040                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 18041  013C60  500C               	movf	USBEnableEndpoint@ep,w,c
 18042  013C62  0D01               	mullw	1
 18043  013C64  0E26               	movlw	38
 18044  013C66  24F3               	addwf	prodl,w,c
 18045  013C68  6E0A               	movwf	USBEnableEndpoint@p,c
 18046  013C6A  0E0F               	movlw	15
 18047  013C6C  20F4               	addwfc	prodh,w,c
 18048  013C6E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 18049                           
 18050                           ;usb_device.c: 901: *p = options;
 18051  013C70  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18052  013C74  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18053  013C78  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 18054  013C7C  0012               	return		;funcret
 18055  013C7E                     __end_of_USBEnableEndpoint:
 18056                           	opt stack 0
 18057                           pclatu	equ	0xFFB
 18058                           pclath	equ	0xFFA
 18059                           tblptru	equ	0xFF8
 18060                           tblptrh	equ	0xFF7
 18061                           tblptrl	equ	0xFF6
 18062                           tablat	equ	0xFF5
 18063                           prodh	equ	0xFF4
 18064                           prodl	equ	0xFF3
 18065                           intcon	equ	0xFF2
 18066                           intcon2	equ	0xFF1
 18067                           indf0	equ	0xFEF
 18068                           postinc0	equ	0xFEE
 18069                           fsr0h	equ	0xFEA
 18070                           fsr0l	equ	0xFE9
 18071                           wreg	equ	0xFE8
 18072                           indf1	equ	0xFE7
 18073                           postinc1	equ	0xFE6
 18074                           postdec1	equ	0xFE5
 18075                           fsr1h	equ	0xFE2
 18076                           fsr1l	equ	0xFE1
 18077                           indf2	equ	0xFDF
 18078                           postinc2	equ	0xFDE
 18079                           postdec2	equ	0xFDD
 18080                           plusw2	equ	0xFDB
 18081                           fsr2h	equ	0xFDA
 18082                           fsr2l	equ	0xFD9
 18083                           status	equ	0xFD8
 18084                           
 18085 ;; *************** function _USBConfigureEndpoint *****************
 18086 ;; Defined at:
 18087 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;  EPNum           1    wreg     unsigned char 
 18090 ;;  direction       1    0[COMRAM] unsigned char 
 18091 ;; Auto vars:     Size  Location     Type
 18092 ;;  EPNum           1    5[COMRAM] unsigned char 
 18093 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18094 ;;		 -> BDT(48), 
 18095 ;; Return value:  Size  Location     Type
 18096 ;;		None               void
 18097 ;; Registers used:
 18098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18099 ;; Tracked objects:
 18100 ;;		On entry : 0/0
 18101 ;;		On exit  : 0/0
 18102 ;;		Unchanged: 0/0
 18103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18105 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18107 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18108 ;;Total ram usage:        8 bytes
 18109 ;; Hardware stack levels used:    1
 18110 ;; This function calls:
 18111 ;;		Nothing
 18112 ;; This function is called by:
 18113 ;;		_USBEnableEndpoint
 18114 ;; This function uses a non-reentrant model
 18115 ;;
 18116                           
 18117                           	psect	text89
 18118  01322A                     __ptext89:
 18119                           	opt stack 0
 18120  01322A                     _USBConfigureEndpoint:
 18121                           	opt stack 15
 18122                           
 18123                           ;incstack = 0
 18124                           ;USBConfigureEndpoint@EPNum stored from wreg
 18125  01322A  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 18126                           
 18127                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 18128                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 18129  01322C  0E00               	movlw	0
 18130  01322E  6E07               	movwf	USBConfigureEndpoint@handle,c
 18131  013230  0E0D               	movlw	13
 18132  013232  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 18133                           
 18134                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 18135  013234  5001               	movf	USBConfigureEndpoint@direction,w,c
 18136  013236  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 18137  013238  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18138  01323A  90D8               	bcf	status,0,c
 18139  01323C  3602               	rlcf	??_USBConfigureEndpoint,f,c
 18140  01323E  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 18141  013240  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 18142  013242  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18143  013244  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18144  013246  90D8               	bcf	status,0,c
 18145  013248  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18146  01324A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18147  01324C  90D8               	bcf	status,0,c
 18148  01324E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18149  013250  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18150  013252  5002               	movf	??_USBConfigureEndpoint,w,c
 18151  013254  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 18152  013256  5003               	movf	??_USBConfigureEndpoint+1,w,c
 18153  013258  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 18154  01325A  90D8               	bcf	status,0,c
 18155  01325C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18156  01325E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18157  013260  90D8               	bcf	status,0,c
 18158  013262  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 18159  013264  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 18160  013266  5004               	movf	??_USBConfigureEndpoint+2,w,c
 18161  013268  2607               	addwf	USBConfigureEndpoint@handle,f,c
 18162  01326A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 18163  01326C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18164                           
 18165                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 18166  01326E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18167  013272  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18168  013276  9EDF               	bcf	indf2,7,c
 18169                           
 18170                           ;usb_device.c: 1557: if(direction == 0)
 18171  013278  5001               	movf	USBConfigureEndpoint@direction,w,c
 18172  01327A  A4D8               	btfss	status,2,c
 18173  01327C  D007               	goto	i2l5256
 18174                           
 18175                           ;usb_device.c: 1558: {
 18176                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 18177  01327E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 18178  013280  0D02               	mullw	2
 18179  013282  0EDE               	movlw	low _pBDTEntryOut
 18180  013284  24F3               	addwf	prodl,w,c
 18181  013286  6ED9               	movwf	fsr2l,c
 18182  013288  0E00               	movlw	high _pBDTEntryOut
 18183  01328A  D006               	goto	L13
 18184  01328C                     i2l5256:
 18185                           
 18186                           ;usb_device.c: 1561: else
 18187                           ;usb_device.c: 1562: {
 18188                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 18189  01328C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 18190  01328E  0D02               	mullw	2
 18191  013290  0ED8               	movlw	low _pBDTEntryIn
 18192  013292  24F3               	addwf	prodl,w,c
 18193  013294  6ED9               	movwf	fsr2l,c
 18194  013296  0E00               	movlw	high _pBDTEntryIn
 18195  013298                     L13:
 18196  013298  20F4               	addwfc	prodh,w,c
 18197  01329A  6EDA               	movwf	fsr2h,c
 18198  01329C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 18199  0132A0  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 18200                           
 18201                           ;usb_device.c: 1564: }
 18202                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 18203  0132A4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18204  0132A8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18205  0132AC  9CDF               	bcf	indf2,6,c
 18206                           
 18207                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 18208  0132AE  EE20 F004          	lfsr	2,4
 18209  0132B2  5007               	movf	USBConfigureEndpoint@handle,w,c
 18210  0132B4  26D9               	addwf	fsr2l,f,c
 18211  0132B6  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 18212  0132B8  22DA               	addwfc	fsr2h,f,c
 18213  0132BA  8CDF               	bsf	indf2,6,c
 18214  0132BC  0012               	return		;funcret
 18215  0132BE                     __end_of_USBConfigureEndpoint:
 18216                           	opt stack 0
 18217                           pclatu	equ	0xFFB
 18218                           pclath	equ	0xFFA
 18219                           tblptru	equ	0xFF8
 18220                           tblptrh	equ	0xFF7
 18221                           tblptrl	equ	0xFF6
 18222                           tablat	equ	0xFF5
 18223                           prodh	equ	0xFF4
 18224                           prodl	equ	0xFF3
 18225                           intcon	equ	0xFF2
 18226                           intcon2	equ	0xFF1
 18227                           indf0	equ	0xFEF
 18228                           postinc0	equ	0xFEE
 18229                           fsr0h	equ	0xFEA
 18230                           fsr0l	equ	0xFE9
 18231                           wreg	equ	0xFE8
 18232                           indf1	equ	0xFE7
 18233                           postinc1	equ	0xFE6
 18234                           postdec1	equ	0xFE5
 18235                           fsr1h	equ	0xFE2
 18236                           fsr1l	equ	0xFE1
 18237                           indf2	equ	0xFDF
 18238                           postinc2	equ	0xFDE
 18239                           postdec2	equ	0xFDD
 18240                           plusw2	equ	0xFDB
 18241                           fsr2h	equ	0xFDA
 18242                           fsr2l	equ	0xFD9
 18243                           status	equ	0xFD8
 18244                           
 18245 ;; *************** function _USBCtrlTrfOutHandler *****************
 18246 ;; Defined at:
 18247 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 18248 ;; Parameters:    Size  Location     Type
 18249 ;;		None
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;		None
 18252 ;; Return value:  Size  Location     Type
 18253 ;;		None               void
 18254 ;; Registers used:
 18255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;Total ram usage:        0 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:    2
 18268 ;; This function calls:
 18269 ;;		_USBCtrlTrfRxService
 18270 ;; This function is called by:
 18271 ;;		_USBCtrlEPService
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           	psect	text90
 18276  013A2A                     __ptext90:
 18277                           	opt stack 0
 18278  013A2A                     _USBCtrlTrfOutHandler:
 18279                           	opt stack 15
 18280                           
 18281                           ;usb_device.c: 2543: if(controlTransferState == 2)
 18282                           
 18283                           ;incstack = 0
 18284  013A2A  0E02               	movlw	2
 18285  013A2C  1847               	xorwf	_controlTransferState,w,c	;volatile
 18286  013A2E  A4D8               	btfss	status,2,c
 18287  013A30  D003               	goto	i2l6394
 18288                           
 18289                           ;usb_device.c: 2544: {
 18290                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 18291  013A32  EC94  F08C         	call	_USBCtrlTrfRxService	;wreg free
 18292                           
 18293                           ;usb_device.c: 2546: }
 18294  013A36  0012               	return	
 18295  013A38                     i2l6394:
 18296                           
 18297                           ;usb_device.c: 2547: else
 18298                           ;usb_device.c: 2548: {
 18299                           ;usb_device.c: 2551: controlTransferState = 0;
 18300  013A38  0E00               	movlw	0
 18301  013A3A  6E47               	movwf	_controlTransferState,c	;volatile
 18302                           
 18303                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 18304  013A3C  503A               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 18305  013A3E  A4D8               	btfss	status,2,c
 18306  013A40  D01F               	goto	i2l6402
 18307                           
 18308                           ;usb_device.c: 2559: {
 18309                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 18310  013A42  EE20 F001          	lfsr	2,1
 18311  013A46  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18312  013A48  26D9               	addwf	fsr2l,f,c
 18313  013A4A  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18314  013A4C  22DA               	addwfc	fsr2h,f,c
 18315  013A4E  0E08               	movlw	8
 18316  013A50  6EDF               	movwf	indf2,c
 18317                           
 18318                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18319  013A52  EE20 F002          	lfsr	2,2
 18320  013A56  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18321  013A58  26D9               	addwf	fsr2l,f,c
 18322  013A5A  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18323  013A5C  22DA               	addwfc	fsr2h,f,c
 18324  013A5E  0E30               	movlw	48
 18325  013A60  6EDE               	movwf	postinc2,c
 18326  013A62  0E0D               	movlw	13
 18327  013A64  6EDD               	movwf	postdec2,c
 18328                           
 18329                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18330  013A66  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18331  013A6A  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18332  013A6E  0E0C               	movlw	12
 18333  013A70  6EDF               	movwf	indf2,c
 18334                           
 18335                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18336  013A72  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18337  013A76  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18338  013A7A  0E00               	movlw	0
 18339  013A7C  8EDB               	bsf	plusw2,7,c
 18340                           
 18341                           ;usb_device.c: 2564: }
 18342  013A7E  0012               	return	
 18343  013A80                     i2l6402:
 18344                           
 18345                           ;usb_device.c: 2565: else
 18346                           ;usb_device.c: 2566: {
 18347                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 18348  013A80  0E00               	movlw	0
 18349  013A82  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18350  013A84  0012               	return	
 18351  013A86                     __end_of_USBCtrlTrfOutHandler:
 18352                           	opt stack 0
 18353                           pclatu	equ	0xFFB
 18354                           pclath	equ	0xFFA
 18355                           tblptru	equ	0xFF8
 18356                           tblptrh	equ	0xFF7
 18357                           tblptrl	equ	0xFF6
 18358                           tablat	equ	0xFF5
 18359                           prodh	equ	0xFF4
 18360                           prodl	equ	0xFF3
 18361                           intcon	equ	0xFF2
 18362                           intcon2	equ	0xFF1
 18363                           indf0	equ	0xFEF
 18364                           postinc0	equ	0xFEE
 18365                           fsr0h	equ	0xFEA
 18366                           fsr0l	equ	0xFE9
 18367                           wreg	equ	0xFE8
 18368                           indf1	equ	0xFE7
 18369                           postinc1	equ	0xFE6
 18370                           postdec1	equ	0xFE5
 18371                           fsr1h	equ	0xFE2
 18372                           fsr1l	equ	0xFE1
 18373                           indf2	equ	0xFDF
 18374                           postinc2	equ	0xFDE
 18375                           postdec2	equ	0xFDD
 18376                           plusw2	equ	0xFDB
 18377                           fsr2h	equ	0xFDA
 18378                           fsr2l	equ	0xFD9
 18379                           status	equ	0xFD8
 18380                           
 18381 ;; *************** function _USBCtrlTrfRxService *****************
 18382 ;; Defined at:
 18383 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 18384 ;; Parameters:    Size  Location     Type
 18385 ;;		None
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18388 ;;  i               1    0[COMRAM] unsigned char 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;		None               void
 18391 ;; Registers used:
 18392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18402 ;;Total ram usage:        2 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:    1
 18405 ;; This function calls:
 18406 ;;		_USBCtrlEPAllowStatusStage
 18407 ;; This function is called by:
 18408 ;;		_USBCtrlTrfOutHandler
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text91
 18413  011928                     __ptext91:
 18414                           	opt stack 0
 18415  011928                     _USBCtrlTrfRxService:
 18416                           	opt stack 15
 18417                           
 18418                           ;usb_device.c: 1854: uint8_t byteToRead;
 18419                           ;usb_device.c: 1855: uint8_t i;
 18420                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18421                           
 18422                           ;incstack = 0
 18423  011928  EE20 F001          	lfsr	2,1
 18424  01192C  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
 18425  01192E  26D9               	addwf	fsr2l,f,c
 18426  011930  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18427  011932  22DA               	addwfc	fsr2h,f,c
 18428  011934  50DF               	movf	indf2,w,c
 18429  011936  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 18430                           
 18431                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 18432  011938  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18433  01193A  0100               	movlb	0	; () banked
 18434  01193C  5DCD               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 18435  01193E  0E00               	movlw	0
 18436  011940  59CE               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 18437  011942  A0D8               	btfss	status,0,c
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;usb_device.c: 1866: {
 18441                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 18442  011944  C0CD  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;usb_device.c: 1868: }
 18446                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 18447                           
 18448                           ; BSR set to: 0
 18449  011948  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18450  01194A  0100               	movlb	0	; () banked
 18451  01194C  5FCD               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 18452  01194E  0E00               	movlw	0
 18453  011950  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 18457  011952  0E00               	movlw	0
 18458  011954  6E01               	movwf	USBCtrlTrfRxService@i,c
 18459  011956  D012               	goto	i2l6224
 18460  011958                     i2l6218:
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;usb_device.c: 1875: {
 18464                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18465  011958  5001               	movf	USBCtrlTrfRxService@i,w,c
 18466  01195A  0D01               	mullw	1
 18467  01195C  0E38               	movlw	56
 18468  01195E  24F3               	addwf	prodl,w,c
 18469  011960  6ED9               	movwf	fsr2l,c
 18470  011962  0E0D               	movlw	13
 18471  011964  20F4               	addwfc	prodh,w,c
 18472  011966  6EDA               	movwf	fsr2h,c
 18473  011968  C0C9  FFE1         	movff	_outPipes,fsr1l	;volatile
 18474  01196C  C0CA  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 18475  011970  CFDF FFE7          	movff	indf2,indf1
 18476                           
 18477                           ; BSR set to: 0
 18478  011974  0100               	movlb	0	; () banked
 18479  011976  4BC9               	infsnz	_outPipes& (0+255),f,b	;volatile
 18480  011978  2BCA               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 18481                           
 18482                           ; BSR set to: 0
 18483  01197A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 18484  01197C                     i2l6224:
 18485                           
 18486                           ; BSR set to: 0
 18487  01197C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18488  01197E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 18489  011980  A0D8               	btfss	status,0,c
 18490  011982  D7EA               	goto	i2l6218
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;usb_device.c: 1877: }
 18494                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 18495                           
 18496                           ; BSR set to: 0
 18497  011984  0100               	movlb	0	; () banked
 18498  011986  51CD               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 18499  011988  0100               	movlb	0	; () banked
 18500  01198A  11CE               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 18501  01198C  B4D8               	btfsc	status,2,c
 18502  01198E  D032               	goto	i2l6240
 18503                           
 18504                           ; BSR set to: 0
 18505                           ;usb_device.c: 1882: {
 18506                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 18507  011990  EE20 F001          	lfsr	2,1
 18508  011994  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18509  011996  26D9               	addwf	fsr2l,f,c
 18510  011998  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18511  01199A  22DA               	addwfc	fsr2h,f,c
 18512  01199C  0E08               	movlw	8
 18513  01199E  6EDF               	movwf	indf2,c
 18514                           
 18515                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18516  0119A0  EE20 F002          	lfsr	2,2
 18517  0119A4  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18518  0119A6  26D9               	addwf	fsr2l,f,c
 18519  0119A8  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18520  0119AA  22DA               	addwfc	fsr2h,f,c
 18521  0119AC  0E38               	movlw	56
 18522  0119AE  6EDE               	movwf	postinc2,c
 18523  0119B0  0E0D               	movlw	13
 18524  0119B2  6EDD               	movwf	postdec2,c
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18528  0119B4  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18529  0119B8  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18530  0119BC  BCDF               	btfsc	indf2,6,c
 18531  0119BE  D00D               	goto	i2l6236
 18532                           
 18533                           ; BSR set to: 0
 18534                           ;usb_device.c: 1886: {
 18535                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18536  0119C0  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18537  0119C4  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18538  0119C8  0E48               	movlw	72
 18539  0119CA  6EDF               	movwf	indf2,c
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18543  0119CC  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18544  0119D0  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18545  0119D4  0E00               	movlw	0
 18546  0119D6  8EDB               	bsf	plusw2,7,c
 18547                           
 18548                           ;usb_device.c: 1889: }
 18549  0119D8  0012               	return	
 18550  0119DA                     i2l6236:
 18551                           
 18552                           ; BSR set to: 0
 18553                           ;usb_device.c: 1890: else
 18554                           ;usb_device.c: 1891: {
 18555                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 18556  0119DA  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18557  0119DE  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18558  0119E2  0E08               	movlw	8
 18559  0119E4  6EDF               	movwf	indf2,c
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18563  0119E6  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18564  0119EA  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18565  0119EE  0E00               	movlw	0
 18566  0119F0  8EDB               	bsf	plusw2,7,c
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;usb_device.c: 1894: }
 18570                           ;usb_device.c: 1895: }
 18571  0119F2  0012               	return	
 18572  0119F4                     i2l6240:
 18573                           
 18574                           ; BSR set to: 0
 18575                           ;usb_device.c: 1896: else
 18576                           ;usb_device.c: 1897: {
 18577                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 18578  0119F4  EE20 F001          	lfsr	2,1
 18579  0119F8  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18580  0119FA  26D9               	addwf	fsr2l,f,c
 18581  0119FC  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18582  0119FE  22DA               	addwfc	fsr2h,f,c
 18583  011A00  0E08               	movlw	8
 18584  011A02  6EDF               	movwf	indf2,c
 18585                           
 18586                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18587  011A04  EE20 F002          	lfsr	2,2
 18588  011A08  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18589  011A0A  26D9               	addwf	fsr2l,f,c
 18590  011A0C  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18591  011A0E  22DA               	addwfc	fsr2h,f,c
 18592  011A10  0E30               	movlw	48
 18593  011A12  6EDE               	movwf	postinc2,c
 18594  011A14  0E0D               	movlw	13
 18595  011A16  6EDD               	movwf	postdec2,c
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18599  011A18  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18600  011A1C  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18601  011A20  0E04               	movlw	4
 18602  011A22  6EDF               	movwf	indf2,c
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18606  011A24  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18607  011A28  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18608  011A2C  0E00               	movlw	0
 18609  011A2E  8EDB               	bsf	plusw2,7,c
 18610                           
 18611                           ; BSR set to: 0
 18612                           ;usb_device.c: 1926: }
 18613                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;usb_device.c: 1915: {
 18617                           ;usb_device.c: 1921: outPipes[0].pFunc();
 18618  011A30  0100               	movlb	0	; () banked
 18619  011A32  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 18623  011A34  5041               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18624  011A36  A4D8               	btfss	status,2,c
 18625  011A38  0012               	return	
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;usb_device.c: 1942: {
 18629                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 18630  011A3A  EC7F  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18631  011A3E  0012               	return	
 18632  011A40                     __end_of_USBCtrlTrfRxService:
 18633                           	opt stack 0
 18634                           pclatu	equ	0xFFB
 18635                           pclath	equ	0xFFA
 18636                           tblptru	equ	0xFF8
 18637                           tblptrh	equ	0xFF7
 18638                           tblptrl	equ	0xFF6
 18639                           tablat	equ	0xFF5
 18640                           prodh	equ	0xFF4
 18641                           prodl	equ	0xFF3
 18642                           intcon	equ	0xFF2
 18643                           intcon2	equ	0xFF1
 18644                           indf0	equ	0xFEF
 18645                           postinc0	equ	0xFEE
 18646                           fsr0h	equ	0xFEA
 18647                           fsr0l	equ	0xFE9
 18648                           wreg	equ	0xFE8
 18649                           indf1	equ	0xFE7
 18650                           postinc1	equ	0xFE6
 18651                           postdec1	equ	0xFE5
 18652                           fsr1h	equ	0xFE2
 18653                           fsr1l	equ	0xFE1
 18654                           indf2	equ	0xFDF
 18655                           postinc2	equ	0xFDE
 18656                           postdec2	equ	0xFDD
 18657                           plusw2	equ	0xFDB
 18658                           fsr2h	equ	0xFDA
 18659                           fsr2l	equ	0xFD9
 18660                           status	equ	0xFD8
 18661                           
 18662 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18663 ;; Defined at:
 18664 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;		None
 18667 ;; Auto vars:     Size  Location     Type
 18668 ;;		None
 18669 ;; Return value:  Size  Location     Type
 18670 ;;		None               void
 18671 ;; Registers used:
 18672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18673 ;; Tracked objects:
 18674 ;;		On entry : 0/0
 18675 ;;		On exit  : 0/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18682 ;;Total ram usage:        0 bytes
 18683 ;; Hardware stack levels used:    1
 18684 ;; This function calls:
 18685 ;;		Nothing
 18686 ;; This function is called by:
 18687 ;;		_USBDeviceTasks
 18688 ;;		_USBCtrlEPServiceComplete
 18689 ;;		_USBCtrlTrfRxService
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           	psect	text92
 18694  0128FE                     __ptext92:
 18695                           	opt stack 0
 18696  0128FE                     _USBCtrlEPAllowStatusStage:
 18697                           	opt stack 15
 18698                           
 18699                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 18700                           
 18701                           ;incstack = 0
 18702  0128FE  5043               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 18703  012900  A4D8               	btfss	status,2,c
 18704  012902  0012               	return	
 18705                           
 18706                           ;usb_device.c: 1424: {
 18707                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 18708  012904  0E01               	movlw	1
 18709  012906  6E43               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18710                           
 18711                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 18712  012908  5044               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 18713  01290A  A4D8               	btfss	status,2,c
 18714  01290C  0012               	return	
 18715                           
 18716                           ;usb_device.c: 1427: {
 18717                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 18718  01290E  0E01               	movlw	1
 18719  012910  6E44               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18720                           
 18721                           ;usb_device.c: 1432: if(controlTransferState == 2)
 18722  012912  0E02               	movlw	2
 18723  012914  1847               	xorwf	_controlTransferState,w,c	;volatile
 18724  012916  A4D8               	btfss	status,2,c
 18725  012918  D016               	goto	i2l5690
 18726                           
 18727                           ;usb_device.c: 1433: {
 18728                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 18729  01291A  0100               	movlb	0	; () banked
 18730  01291C  EE20 F001          	lfsr	2,1
 18731  012920  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18732  012922  26D9               	addwf	fsr2l,f,c
 18733  012924  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18734  012926  22DA               	addwfc	fsr2h,f,c
 18735  012928  0E00               	movlw	0
 18736  01292A  6EDF               	movwf	indf2,c
 18737                           
 18738                           ; BSR set to: 0
 18739                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18740  01292C  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18741  012930  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18742  012934  0E48               	movlw	72
 18743  012936  6EDF               	movwf	indf2,c
 18744                           
 18745                           ; BSR set to: 0
 18746                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18747  012938  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18748  01293C  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18749  012940  0E00               	movlw	0
 18750  012942  8EDB               	bsf	plusw2,7,c
 18751                           
 18752                           ;usb_device.c: 1437: }
 18753  012944  0012               	return	
 18754  012946                     i2l5690:
 18755                           
 18756                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 18757  012946  0447               	decf	_controlTransferState,w,c	;volatile
 18758  012948  A4D8               	btfss	status,2,c
 18759  01294A  0012               	return	
 18760                           
 18761                           ;usb_device.c: 1439: {
 18762                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 18763  01294C  0E00               	movlw	0
 18764  01294E  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18765                           
 18766                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 18767  012950  EE20 F001          	lfsr	2,1
 18768  012954  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
 18769  012956  26D9               	addwf	fsr2l,f,c
 18770  012958  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18771  01295A  22DA               	addwfc	fsr2h,f,c
 18772  01295C  0E08               	movlw	8
 18773  01295E  6EDF               	movwf	indf2,c
 18774                           
 18775                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18776  012960  EE20 F002          	lfsr	2,2
 18777  012964  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
 18778  012966  26D9               	addwf	fsr2l,f,c
 18779  012968  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18780  01296A  22DA               	addwfc	fsr2h,f,c
 18781  01296C  0E30               	movlw	48
 18782  01296E  6EDE               	movwf	postinc2,c
 18783  012970  0E0D               	movlw	13
 18784  012972  6EDD               	movwf	postdec2,c
 18785                           
 18786                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18787  012974  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18788  012978  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18789  01297C  0E04               	movlw	4
 18790  01297E  6EDF               	movwf	indf2,c
 18791                           
 18792                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18793  012980  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18794  012984  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18795  012988  0E00               	movlw	0
 18796  01298A  8EDB               	bsf	plusw2,7,c
 18797                           
 18798                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 18799  01298C  0E01               	movlw	1
 18800  01298E  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18801                           
 18802                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 18803  012990  EE20 F001          	lfsr	2,1
 18804  012994  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18805  012996  26D9               	addwf	fsr2l,f,c
 18806  012998  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18807  01299A  22DA               	addwfc	fsr2h,f,c
 18808  01299C  0E08               	movlw	8
 18809  01299E  6EDF               	movwf	indf2,c
 18810                           
 18811                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18812  0129A0  EE20 F002          	lfsr	2,2
 18813  0129A4  5033               	movf	_pBDTEntryEP0OutNext,w,c
 18814  0129A6  26D9               	addwf	fsr2l,f,c
 18815  0129A8  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
 18816  0129AA  22DA               	addwfc	fsr2h,f,c
 18817  0129AC  0E30               	movlw	48
 18818  0129AE  6EDE               	movwf	postinc2,c
 18819  0129B0  0E0D               	movlw	13
 18820  0129B2  6EDD               	movwf	postdec2,c
 18821                           
 18822                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18823  0129B4  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18824  0129B8  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18825  0129BC  0E80               	movlw	128
 18826  0129BE  6EDF               	movwf	indf2,c
 18827  0129C0  0012               	return	
 18828  0129C2                     __end_of_USBCtrlEPAllowStatusStage:
 18829                           	opt stack 0
 18830                           pclatu	equ	0xFFB
 18831                           pclath	equ	0xFFA
 18832                           tblptru	equ	0xFF8
 18833                           tblptrh	equ	0xFF7
 18834                           tblptrl	equ	0xFF6
 18835                           tablat	equ	0xFF5
 18836                           prodh	equ	0xFF4
 18837                           prodl	equ	0xFF3
 18838                           intcon	equ	0xFF2
 18839                           intcon2	equ	0xFF1
 18840                           indf0	equ	0xFEF
 18841                           postinc0	equ	0xFEE
 18842                           fsr0h	equ	0xFEA
 18843                           fsr0l	equ	0xFE9
 18844                           wreg	equ	0xFE8
 18845                           indf1	equ	0xFE7
 18846                           postinc1	equ	0xFE6
 18847                           postdec1	equ	0xFE5
 18848                           fsr1h	equ	0xFE2
 18849                           fsr1l	equ	0xFE1
 18850                           indf2	equ	0xFDF
 18851                           postinc2	equ	0xFDE
 18852                           postdec2	equ	0xFDD
 18853                           plusw2	equ	0xFDB
 18854                           fsr2h	equ	0xFDA
 18855                           fsr2l	equ	0xFD9
 18856                           status	equ	0xFD8
 18857                           
 18858 ;; *************** function _USBCtrlTrfInHandler *****************
 18859 ;; Defined at:
 18860 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;		None
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18865 ;; Return value:  Size  Location     Type
 18866 ;;		None               void
 18867 ;; Registers used:
 18868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 0/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;Total ram usage:        1 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:    1
 18881 ;; This function calls:
 18882 ;;		_USBCtrlTrfTxService
 18883 ;; This function is called by:
 18884 ;;		_USBCtrlEPService
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           	psect	text93
 18889  0129C2                     __ptext93:
 18890                           	opt stack 0
 18891  0129C2                     _USBCtrlTrfInHandler:
 18892                           	opt stack 16
 18893                           
 18894                           ;usb_device.c: 2597: uint8_t lastDTS;
 18895                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 18896                           
 18897                           ;incstack = 0
 18898  0129C2  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18899  0129C6  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18900  0129CA  0E00               	movlw	0
 18901  0129CC  BCDF               	btfsc	indf2,6,c
 18902  0129CE  0E01               	movlw	1
 18903  0129D0  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18904                           
 18905                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18906  0129D2  0E04               	movlw	4
 18907  0129D4  0100               	movlb	0	; () banked
 18908  0129D6  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 18912  0129D8  0E08               	movlw	8
 18913  0129DA  1842               	xorwf	_USBDeviceState,w,c	;volatile
 18914  0129DC  A4D8               	btfss	status,2,c
 18915  0129DE  D00D               	goto	i2l6418
 18916                           
 18917                           ; BSR set to: 0
 18918                           ;usb_device.c: 2608: {
 18919                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 18920  0129E0  010D               	movlb	13	; () banked
 18921  0129E2  5132               	movf	50,w,b	;volatile
 18922  0129E4  0B7F               	andlw	127
 18923  0129E6  010F               	movlb	15	; () banked
 18924  0129E8  6F38               	movwf	56,b	;volatile
 18925                           
 18926                           ; BSR set to: 15
 18927                           ;usb_device.c: 2610: if(UADDR != 0u)
 18928  0129EA  010F               	movlb	15	; () banked
 18929  0129EC  5138               	movf	56,w,b	;volatile
 18930  0129EE  B4D8               	btfsc	status,2,c
 18931  0129F0  D002               	goto	i2l6416
 18932                           
 18933                           ; BSR set to: 15
 18934                           ;usb_device.c: 2611: {
 18935                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 18936  0129F2  0E10               	movlw	16
 18937  0129F4  D001               	goto	L14
 18938  0129F6                     i2l6416:
 18939                           
 18940                           ; BSR set to: 15
 18941                           ;usb_device.c: 2614: else
 18942                           ;usb_device.c: 2615: {
 18943                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 18944  0129F6  0E04               	movlw	4
 18945  0129F8                     L14:
 18946  0129F8  6E42               	movwf	_USBDeviceState,c	;volatile
 18947  0129FA                     i2l6418:
 18948                           
 18949                           ;usb_device.c: 2617: }
 18950                           ;usb_device.c: 2618: }
 18951                           ;usb_device.c: 2621: if(controlTransferState == 1)
 18952  0129FA  0447               	decf	_controlTransferState,w,c	;volatile
 18953  0129FC  A4D8               	btfss	status,2,c
 18954  0129FE  D03B               	goto	i2l345
 18955                           
 18956                           ;usb_device.c: 2622: {
 18957                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 18958  012A00  0100               	movlb	0	; () banked
 18959  012A02  EE20 F002          	lfsr	2,2
 18960  012A06  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18961  012A08  26D9               	addwf	fsr2l,f,c
 18962  012A0A  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18963  012A0C  22DA               	addwfc	fsr2h,f,c
 18964  012A0E  0E38               	movlw	56
 18965  012A10  6EDE               	movwf	postinc2,c
 18966  012A12  0E0D               	movlw	13
 18967  012A14  6EDD               	movwf	postdec2,c
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 18971  012A16  EC33  F091         	call	_USBCtrlTrfTxService	;wreg free
 18972                           
 18973                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 18974  012A1A  0E02               	movlw	2
 18975  012A1C  184A               	xorwf	_shortPacketStatus,w,c	;volatile
 18976  012A1E  A4D8               	btfss	status,2,c
 18977  012A20  D00D               	goto	i2l6430
 18978                           
 18979                           ;usb_device.c: 2631: {
 18980                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 18981  012A22  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18982  012A26  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18983  012A2A  0E04               	movlw	4
 18984  012A2C  6EDF               	movwf	indf2,c
 18985                           
 18986                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18987  012A2E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18988  012A32  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18989  012A36  0E00               	movlw	0
 18990  012A38  8EDB               	bsf	plusw2,7,c
 18991                           
 18992                           ;usb_device.c: 2636: }
 18993  012A3A  0012               	return	
 18994  012A3C                     i2l6430:
 18995                           
 18996                           ;usb_device.c: 2637: else
 18997                           ;usb_device.c: 2638: {
 18998                           ;usb_device.c: 2639: if(lastDTS == 0)
 18999  012A3C  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19000  012A3E  A4D8               	btfss	status,2,c
 19001  012A40  D00D               	goto	i2l6436
 19002                           
 19003                           ;usb_device.c: 2640: {
 19004                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19005  012A42  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19006  012A46  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19007  012A4A  0E48               	movlw	72
 19008  012A4C  6EDF               	movwf	indf2,c
 19009                           
 19010                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19011  012A4E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19012  012A52  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19013  012A56  0E00               	movlw	0
 19014  012A58  8EDB               	bsf	plusw2,7,c
 19015                           
 19016                           ;usb_device.c: 2643: }
 19017  012A5A  0012               	return	
 19018  012A5C                     i2l6436:
 19019                           
 19020                           ;usb_device.c: 2644: else
 19021                           ;usb_device.c: 2645: {
 19022                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19023  012A5C  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19024  012A60  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19025  012A64  0E08               	movlw	8
 19026  012A66  6EDF               	movwf	indf2,c
 19027                           
 19028                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19029  012A68  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19030  012A6C  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19031  012A70  0E00               	movlw	0
 19032  012A72  8EDB               	bsf	plusw2,7,c
 19033                           
 19034                           ;usb_device.c: 2648: }
 19035                           ;usb_device.c: 2649: }
 19036                           ;usb_device.c: 2650: }
 19037  012A74  0012               	return	
 19038  012A76                     i2l345:
 19039                           
 19040                           ;usb_device.c: 2651: else
 19041                           ;usb_device.c: 2652: {
 19042                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 19043  012A76  0100               	movlb	0	; () banked
 19044  012A78  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 19045  012A7A  D002               	goto	i2l6442
 19046                           
 19047                           ; BSR set to: 0
 19048                           ;usb_device.c: 2661: }
 19049                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;usb_device.c: 2659: {
 19053                           ;usb_device.c: 2660: outPipes[0].pFunc();
 19054  012A7C  0100               	movlb	0	; () banked
 19055  012A7E  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 19056  012A80                     i2l6442:
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;usb_device.c: 2663: }
 19060                           ;usb_device.c: 2665: controlTransferState = 0;
 19061  012A80  0E00               	movlw	0
 19062  012A82  6E47               	movwf	_controlTransferState,c	;volatile
 19063  012A84  0012               	return	
 19064  012A86                     __end_of_USBCtrlTrfInHandler:
 19065                           	opt stack 0
 19066                           pclatu	equ	0xFFB
 19067                           pclath	equ	0xFFA
 19068                           tblptru	equ	0xFF8
 19069                           tblptrh	equ	0xFF7
 19070                           tblptrl	equ	0xFF6
 19071                           tablat	equ	0xFF5
 19072                           prodh	equ	0xFF4
 19073                           prodl	equ	0xFF3
 19074                           intcon	equ	0xFF2
 19075                           intcon2	equ	0xFF1
 19076                           indf0	equ	0xFEF
 19077                           postinc0	equ	0xFEE
 19078                           fsr0h	equ	0xFEA
 19079                           fsr0l	equ	0xFE9
 19080                           wreg	equ	0xFE8
 19081                           indf1	equ	0xFE7
 19082                           postinc1	equ	0xFE6
 19083                           postdec1	equ	0xFE5
 19084                           fsr1h	equ	0xFE2
 19085                           fsr1l	equ	0xFE1
 19086                           indf2	equ	0xFDF
 19087                           postinc2	equ	0xFDE
 19088                           postdec2	equ	0xFDD
 19089                           plusw2	equ	0xFDB
 19090                           fsr2h	equ	0xFDA
 19091                           fsr2l	equ	0xFD9
 19092                           status	equ	0xFD8
 19093                           
 19094 ;; *************** function _USBCtrlTrfTxService *****************
 19095 ;; Defined at:
 19096 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 19097 ;; Parameters:    Size  Location     Type
 19098 ;;		None
 19099 ;; Auto vars:     Size  Location     Type
 19100 ;;  byteToSend      1    0[COMRAM] unsigned char 
 19101 ;; Return value:  Size  Location     Type
 19102 ;;		None               void
 19103 ;; Registers used:
 19104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19105 ;; Tracked objects:
 19106 ;;		On entry : 0/0
 19107 ;;		On exit  : 0/0
 19108 ;;		Unchanged: 0/0
 19109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19114 ;;Total ram usage:        1 bytes
 19115 ;; Hardware stack levels used:    1
 19116 ;; This function calls:
 19117 ;;		Nothing
 19118 ;; This function is called by:
 19119 ;;		_USBCtrlEPAllowDataStage
 19120 ;;		_USBCtrlTrfInHandler
 19121 ;; This function uses a non-reentrant model
 19122 ;;
 19123                           
 19124                           	psect	text94
 19125  012266                     __ptext94:
 19126                           	opt stack 0
 19127  012266                     _USBCtrlTrfTxService:
 19128                           	opt stack 14
 19129                           
 19130                           ;usb_device.c: 1773: uint8_t byteToSend;
 19131                           ;usb_device.c: 1777: byteToSend = 8;
 19132                           
 19133                           ;incstack = 0
 19134  012266  0E08               	movlw	8
 19135  012268  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 19136                           
 19137                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 19138  01226A  0100               	movlb	0	; () banked
 19139  01226C  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 19140  01226E  E111               	bnz	i2l5524
 19141  012270  0E08               	movlw	8
 19142  012272  0100               	movlb	0	; () banked
 19143  012274  5DD6               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 19144  012276  B0D8               	btfsc	status,0,c
 19145  012278  D00C               	goto	i2l5524
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;usb_device.c: 1779: {
 19149                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 19150  01227A  C0D6  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 19154  01227E  504A               	movf	_shortPacketStatus,w,c	;volatile
 19155  012280  A4D8               	btfss	status,2,c
 19156  012282  D002               	goto	i2l5520
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;usb_device.c: 1788: {
 19160                           ;usb_device.c: 1789: shortPacketStatus = 1;
 19161  012284  0E01               	movlw	1
 19162  012286  D004               	goto	L15
 19163  012288                     i2l5520:
 19164                           
 19165                           ; BSR set to: 0
 19166                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 19167  012288  044A               	decf	_shortPacketStatus,w,c	;volatile
 19168  01228A  A4D8               	btfss	status,2,c
 19169  01228C  D002               	goto	i2l5524
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;usb_device.c: 1792: {
 19173                           ;usb_device.c: 1793: shortPacketStatus = 2;
 19174  01228E  0E02               	movlw	2
 19175  012290                     L15:
 19176  012290  6E4A               	movwf	_shortPacketStatus,c	;volatile
 19177  012292                     i2l5524:
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;usb_device.c: 1794: }
 19181                           ;usb_device.c: 1795: }
 19182                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 19183  012292  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19184  012294  0100               	movlb	0	; () banked
 19185  012296  5FD6               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 19186  012298  0E00               	movlw	0
 19187  01229A  5BD7               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 19191  01229C  0100               	movlb	0	; () banked
 19192  01229E  EE20 F001          	lfsr	2,1
 19193  0122A2  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 19194  0122A4  26D9               	addwf	fsr2l,f,c
 19195  0122A6  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 19196  0122A8  22DA               	addwfc	fsr2h,f,c
 19197  0122AA  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 19201  0122AE  0E38               	movlw	56
 19202  0122B0  6E35               	movwf	_pDst,c
 19203  0122B2  0E0D               	movlw	13
 19204  0122B4  6E36               	movwf	_pDst+1,c
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 19208  0122B6  0100               	movlb	0	; () banked
 19209  0122B8  A1D5               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 19210  0122BA  D01D               	goto	i2l5542
 19211  0122BC  D03C               	goto	i2l5552
 19212  0122BE                     i2l5534:
 19213                           
 19214                           ; BSR set to: 0
 19215                           ;usb_device.c: 1812: {
 19216                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 19217  0122BE  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 19218  0122C2  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19219  0122C6  0E00               	movlw	low (__mediumconst shr (0+16))
 19220  0122C8  6EF8               	movwf	tblptru,c
 19221  0122CA  C035  FFD9         	movff	_pDst,fsr2l
 19222  0122CE  C036  FFDA         	movff	_pDst+1,fsr2h
 19223  0122D2  0E0E               	movlw	(high __ramtop+-1)
 19224  0122D4  64F7               	cpfsgt	tblptrh,c
 19225  0122D6  D003               	bra	i2u427_47
 19226  0122D8  0008               	tblrd		*
 19227  0122DA  50F5               	movf	tablat,w,c
 19228  0122DC  D005               	bra	i2u427_40
 19229  0122DE                     i2u427_47:
 19230  0122DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19231  0122E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19232  0122E6  50EF               	movf	indf0,w,c
 19233  0122E8                     i2u427_40:
 19234  0122E8  6EDF               	movwf	indf2,c
 19235  0122EA  0100               	movlb	0	; () banked
 19236  0122EC  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 19237  0122EE  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 19238                           
 19239                           ; BSR set to: 0
 19240  0122F0  4A35               	infsnz	_pDst,f,c
 19241  0122F2  2A36               	incf	_pDst+1,f,c
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;usb_device.c: 1814: byteToSend--;
 19245  0122F4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19246  0122F6                     i2l5542:
 19247                           
 19248                           ; BSR set to: 0
 19249  0122F6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19250  0122F8  B4D8               	btfsc	status,2,c
 19251  0122FA  0012               	return	
 19252  0122FC  D7E0               	goto	i2l5534
 19253  0122FE                     i2l5544:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;usb_device.c: 1820: {
 19257                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 19258  0122FE  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 19259  012302  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19260  012306  0E00               	movlw	low (__mediumconst shr (0+16))
 19261  012308  6EF8               	movwf	tblptru,c
 19262  01230A  C035  FFD9         	movff	_pDst,fsr2l
 19263  01230E  C036  FFDA         	movff	_pDst+1,fsr2h
 19264  012312  0E0E               	movlw	(high __ramtop+-1)
 19265  012314  64F7               	cpfsgt	tblptrh,c
 19266  012316  D003               	bra	i2u429_47
 19267  012318  0008               	tblrd		*
 19268  01231A  50F5               	movf	tablat,w,c
 19269  01231C  D005               	bra	i2u429_40
 19270  01231E                     i2u429_47:
 19271  01231E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19272  012322  CFF7 FFEA          	movff	tblptrh,fsr0h
 19273  012326  50EF               	movf	indf0,w,c
 19274  012328                     i2u429_40:
 19275  012328  6EDF               	movwf	indf2,c
 19276  01232A  0100               	movlb	0	; () banked
 19277  01232C  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 19278  01232E  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 19279                           
 19280                           ; BSR set to: 0
 19281  012330  4A35               	infsnz	_pDst,f,c
 19282  012332  2A36               	incf	_pDst+1,f,c
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;usb_device.c: 1822: byteToSend--;
 19286  012334  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19287  012336                     i2l5552:
 19288                           
 19289                           ; BSR set to: 0
 19290  012336  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19291  012338  B4D8               	btfsc	status,2,c
 19292  01233A  0012               	return	
 19293  01233C  D7E0               	goto	i2l5544
 19294  01233E                     __end_of_USBCtrlTrfTxService:
 19295                           	opt stack 0
 19296                           pclatu	equ	0xFFB
 19297                           pclath	equ	0xFFA
 19298                           tblptru	equ	0xFF8
 19299                           tblptrh	equ	0xFF7
 19300                           tblptrl	equ	0xFF6
 19301                           tablat	equ	0xFF5
 19302                           prodh	equ	0xFF4
 19303                           prodl	equ	0xFF3
 19304                           intcon	equ	0xFF2
 19305                           intcon2	equ	0xFF1
 19306                           indf0	equ	0xFEF
 19307                           postinc0	equ	0xFEE
 19308                           fsr0h	equ	0xFEA
 19309                           fsr0l	equ	0xFE9
 19310                           wreg	equ	0xFE8
 19311                           indf1	equ	0xFE7
 19312                           postinc1	equ	0xFE6
 19313                           postdec1	equ	0xFE5
 19314                           fsr1h	equ	0xFE2
 19315                           fsr1l	equ	0xFE1
 19316                           indf2	equ	0xFDF
 19317                           postinc2	equ	0xFDE
 19318                           postdec2	equ	0xFDD
 19319                           plusw2	equ	0xFDB
 19320                           fsr2h	equ	0xFDA
 19321                           fsr2l	equ	0xFD9
 19322                           status	equ	0xFD8
 19323                           
 19324 ;; *************** function _UART_ISR *****************
 19325 ;; Defined at:
 19326 ;;		line 29 in file "../My_library/My_UART.c"
 19327 ;; Parameters:    Size  Location     Type
 19328 ;;		None
 19329 ;; Auto vars:     Size  Location     Type
 19330 ;;  ascii           1   15[COMRAM] unsigned char 
 19331 ;; Return value:  Size  Location     Type
 19332 ;;		None               void
 19333 ;; Registers used:
 19334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19335 ;; Tracked objects:
 19336 ;;		On entry : 0/0
 19337 ;;		On exit  : 0/0
 19338 ;;		Unchanged: 0/0
 19339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19344 ;;Total ram usage:        1 bytes
 19345 ;; Hardware stack levels used:    1
 19346 ;; Hardware stack levels required when called:    2
 19347 ;; This function calls:
 19348 ;;		i2_ringbuf_num
 19349 ;;		i2_ringbuf_pop
 19350 ;;		i2_ringbuf_put
 19351 ;; This function is called by:
 19352 ;;		_ISR
 19353 ;; This function uses a non-reentrant model
 19354 ;;
 19355                           
 19356                           	psect	text95
 19357  013B76                     __ptext95:
 19358                           	opt stack 0
 19359  013B76                     _UART_ISR:
 19360                           	opt stack 18
 19361                           
 19362                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 19363                           
 19364                           ; BSR set to: 0
 19365                           ;incstack = 0
 19366  013B76  B89D               	btfsc	3997,4,c	;volatile
 19367  013B78  A89E               	btfss	3998,4,c	;volatile
 19368  013B7A  D013               	goto	i2l1286
 19369                           
 19370                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 19371  013B7C  0E64               	movlw	low _uart_tx
 19372  013B7E  6E01               	movwf	i2ringbuf_num@rb,c
 19373  013B80  0E01               	movlw	high _uart_tx
 19374  013B82  6E02               	movwf	i2ringbuf_num@rb+1,c
 19375  013B84  EC5E  F096         	call	i2_ringbuf_num	;wreg free
 19376  013B88  5001               	movf	?i2_ringbuf_num,w,c
 19377  013B8A  1002               	iorwf	?i2_ringbuf_num+1,w,c
 19378  013B8C  B4D8               	btfsc	status,2,c
 19379  013B8E  D008               	goto	i2l1287
 19380                           
 19381                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 19382  013B90  0E64               	movlw	low _uart_tx
 19383  013B92  6E09               	movwf	i2ringbuf_pop@rb,c
 19384  013B94  0E01               	movlw	high _uart_tx
 19385  013B96  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 19386  013B98  ECD1  F097         	call	i2_ringbuf_pop	;wreg free
 19387  013B9C  6EAE               	movwf	4014,c	;volatile
 19388                           
 19389                           ;My_UART.c: 33: } else {
 19390  013B9E  D001               	goto	i2l1286
 19391  013BA0                     i2l1287:
 19392                           
 19393                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 19394  013BA0  989D               	bcf	3997,4,c	;volatile
 19395  013BA2                     i2l1286:
 19396                           
 19397                           ;My_UART.c: 35: }
 19398                           ;My_UART.c: 36: }
 19399                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 19400  013BA2  AA9D               	btfss	3997,5,c	;volatile
 19401  013BA4  0012               	return	
 19402  013BA6  AA9E               	btfss	3998,5,c	;volatile
 19403  013BA8  0012               	return	
 19404                           
 19405                           ;My_UART.c: 38: char ascii = RCREG1;
 19406  013BAA  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 19407                           
 19408                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 19409  013BAE  0E5C               	movlw	low _uart_rx
 19410  013BB0  6E09               	movwf	i2ringbuf_put@rb,c
 19411  013BB2  0E01               	movlw	high _uart_rx
 19412  013BB4  6E0A               	movwf	i2ringbuf_put@rb+1,c
 19413  013BB6  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 19414  013BBA  EC76  F097         	call	i2_ringbuf_put	;wreg free
 19415  013BBE  0012               	return	
 19416  013BC0                     __end_of_UART_ISR:
 19417                           	opt stack 0
 19418                           pclatu	equ	0xFFB
 19419                           pclath	equ	0xFFA
 19420                           tblptru	equ	0xFF8
 19421                           tblptrh	equ	0xFF7
 19422                           tblptrl	equ	0xFF6
 19423                           tablat	equ	0xFF5
 19424                           prodh	equ	0xFF4
 19425                           prodl	equ	0xFF3
 19426                           intcon	equ	0xFF2
 19427                           intcon2	equ	0xFF1
 19428                           indf0	equ	0xFEF
 19429                           postinc0	equ	0xFEE
 19430                           fsr0h	equ	0xFEA
 19431                           fsr0l	equ	0xFE9
 19432                           wreg	equ	0xFE8
 19433                           indf1	equ	0xFE7
 19434                           postinc1	equ	0xFE6
 19435                           postdec1	equ	0xFE5
 19436                           fsr1h	equ	0xFE2
 19437                           fsr1l	equ	0xFE1
 19438                           indf2	equ	0xFDF
 19439                           postinc2	equ	0xFDE
 19440                           postdec2	equ	0xFDD
 19441                           plusw2	equ	0xFDB
 19442                           fsr2h	equ	0xFDA
 19443                           fsr2l	equ	0xFD9
 19444                           status	equ	0xFD8
 19445                           
 19446 ;; *************** function i2_ringbuf_put *****************
 19447 ;; Defined at:
 19448 ;;		line 20 in file "../My_library/My_ringbuf.c"
 19449 ;; Parameters:    Size  Location     Type
 19450 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19451 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 19452 ;;		 -> lcd_tx(8), 
 19453 ;;  asciicode       1   10[COMRAM] unsigned char 
 19454 ;; Auto vars:     Size  Location     Type
 19455 ;;		None
 19456 ;; Return value:  Size  Location     Type
 19457 ;;		None               void
 19458 ;; Registers used:
 19459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19460 ;; Tracked objects:
 19461 ;;		On entry : 0/0
 19462 ;;		On exit  : 0/0
 19463 ;;		Unchanged: 0/0
 19464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19465 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19468 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19469 ;;Total ram usage:        7 bytes
 19470 ;; Hardware stack levels used:    1
 19471 ;; Hardware stack levels required when called:    1
 19472 ;; This function calls:
 19473 ;;		i2_ringbuf_num
 19474 ;; This function is called by:
 19475 ;;		_UART_ISR
 19476 ;; This function uses a non-reentrant model
 19477 ;;
 19478                           
 19479                           	psect	text96
 19480  012EEC                     __ptext96:
 19481                           	opt stack 0
 19482  012EEC                     i2_ringbuf_put:
 19483                           	opt stack 18
 19484                           
 19485                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 19486                           
 19487                           ;incstack = 0
 19488  012EEC  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 19489  012EF0  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 19490  012EF4  EC5E  F096         	call	i2_ringbuf_num	;wreg free
 19491  012EF8  EE20 F002          	lfsr	2,2
 19492  012EFC  5009               	movf	i2ringbuf_put@rb,w,c
 19493  012EFE  26D9               	addwf	fsr2l,f,c
 19494  012F00  500A               	movf	i2ringbuf_put@rb+1,w,c
 19495  012F02  22DA               	addwfc	fsr2h,f,c
 19496  012F04  50DE               	movf	postinc2,w,c
 19497  012F06  5C01               	subwf	?i2_ringbuf_num,w,c
 19498  012F08  50DE               	movf	postinc2,w,c
 19499  012F0A  5802               	subwfb	?i2_ringbuf_num+1,w,c
 19500  012F0C  B0D8               	btfsc	status,0,c
 19501  012F0E  0012               	return	
 19502                           
 19503                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 19504  012F10  EE20 F004          	lfsr	2,4
 19505  012F14  5009               	movf	i2ringbuf_put@rb,w,c
 19506  012F16  26D9               	addwf	fsr2l,f,c
 19507  012F18  500A               	movf	i2ringbuf_put@rb+1,w,c
 19508  012F1A  22DA               	addwfc	fsr2h,f,c
 19509  012F1C  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 19510  012F20  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 19511  012F24  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 19512  012F28  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 19513  012F2C  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 19514  012F30  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 19515  012F34  500C               	movf	??i2_ringbuf_put,w,c
 19516  012F36  240E               	addwf	??i2_ringbuf_put+2,w,c
 19517  012F38  6ED9               	movwf	fsr2l,c
 19518  012F3A  500D               	movf	??i2_ringbuf_put+1,w,c
 19519  012F3C  200F               	addwfc	??i2_ringbuf_put+3,w,c
 19520  012F3E  6EDA               	movwf	fsr2h,c
 19521  012F40  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 19522                           
 19523                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 19524  012F44  EE20 F002          	lfsr	2,2
 19525  012F48  5009               	movf	i2ringbuf_put@rb,w,c
 19526  012F4A  26D9               	addwf	fsr2l,f,c
 19527  012F4C  500A               	movf	i2ringbuf_put@rb+1,w,c
 19528  012F4E  22DA               	addwfc	fsr2h,f,c
 19529  012F50  EE10 F004          	lfsr	1,4
 19530  012F54  5009               	movf	i2ringbuf_put@rb,w,c
 19531  012F56  26E1               	addwf	fsr1l,f,c
 19532  012F58  500A               	movf	i2ringbuf_put@rb+1,w,c
 19533  012F5A  22E2               	addwfc	fsr1h,f,c
 19534  012F5C  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 19535  012F60  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 19536  012F64  0E01               	movlw	1
 19537  012F66  260E               	addwf	??i2_ringbuf_put+2,f,c
 19538  012F68  0E00               	movlw	0
 19539  012F6A  220F               	addwfc	??i2_ringbuf_put+3,f,c
 19540  012F6C  50DE               	movf	postinc2,w,c
 19541  012F6E  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 19542  012F70  50DE               	movf	postinc2,w,c
 19543  012F72  580F               	subwfb	??i2_ringbuf_put+3,w,c
 19544  012F74  B0D8               	btfsc	status,0,c
 19545  012F76  D00A               	goto	i2l7260
 19546  012F78  EE20 F004          	lfsr	2,4
 19547  012F7C  5009               	movf	i2ringbuf_put@rb,w,c
 19548  012F7E  26D9               	addwf	fsr2l,f,c
 19549  012F80  500A               	movf	i2ringbuf_put@rb+1,w,c
 19550  012F82  22DA               	addwfc	fsr2h,f,c
 19551  012F84  2ADE               	incf	postinc2,f,c
 19552  012F86  0E00               	movlw	0
 19553  012F88  22DD               	addwfc	postdec2,f,c
 19554  012F8A  0012               	return	
 19555  012F8C                     i2l7260:
 19556                           
 19557                           ;My_ringbuf.c: 24: else rb->head = 0;
 19558  012F8C  EE20 F004          	lfsr	2,4
 19559  012F90  5009               	movf	i2ringbuf_put@rb,w,c
 19560  012F92  26D9               	addwf	fsr2l,f,c
 19561  012F94  500A               	movf	i2ringbuf_put@rb+1,w,c
 19562  012F96  22DA               	addwfc	fsr2h,f,c
 19563  012F98  0E00               	movlw	0
 19564  012F9A  6EDE               	movwf	postinc2,c
 19565  012F9C  0E00               	movlw	0
 19566  012F9E  6EDD               	movwf	postdec2,c
 19567  012FA0  0012               	return	
 19568  012FA2                     __end_ofi2_ringbuf_put:
 19569                           	opt stack 0
 19570                           pclatu	equ	0xFFB
 19571                           pclath	equ	0xFFA
 19572                           tblptru	equ	0xFF8
 19573                           tblptrh	equ	0xFF7
 19574                           tblptrl	equ	0xFF6
 19575                           tablat	equ	0xFF5
 19576                           prodh	equ	0xFF4
 19577                           prodl	equ	0xFF3
 19578                           intcon	equ	0xFF2
 19579                           intcon2	equ	0xFF1
 19580                           indf0	equ	0xFEF
 19581                           postinc0	equ	0xFEE
 19582                           fsr0h	equ	0xFEA
 19583                           fsr0l	equ	0xFE9
 19584                           wreg	equ	0xFE8
 19585                           indf1	equ	0xFE7
 19586                           postinc1	equ	0xFE6
 19587                           postdec1	equ	0xFE5
 19588                           fsr1h	equ	0xFE2
 19589                           fsr1l	equ	0xFE1
 19590                           indf2	equ	0xFDF
 19591                           postinc2	equ	0xFDE
 19592                           postdec2	equ	0xFDD
 19593                           plusw2	equ	0xFDB
 19594                           fsr2h	equ	0xFDA
 19595                           fsr2l	equ	0xFD9
 19596                           status	equ	0xFD8
 19597                           
 19598 ;; *************** function i2_ringbuf_pop *****************
 19599 ;; Defined at:
 19600 ;;		line 45 in file "../My_library/My_ringbuf.c"
 19601 ;; Parameters:    Size  Location     Type
 19602 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19603 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 19604 ;;		 -> lcd_tx(8), 
 19605 ;; Auto vars:     Size  Location     Type
 19606 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 19607 ;; Return value:  Size  Location     Type
 19608 ;;                  1    wreg      unsigned char 
 19609 ;; Registers used:
 19610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19611 ;; Tracked objects:
 19612 ;;		On entry : 0/0
 19613 ;;		On exit  : 0/0
 19614 ;;		Unchanged: 0/0
 19615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19619 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19620 ;;Total ram usage:        7 bytes
 19621 ;; Hardware stack levels used:    1
 19622 ;; Hardware stack levels required when called:    1
 19623 ;; This function calls:
 19624 ;;		i2_ringbuf_num
 19625 ;; This function is called by:
 19626 ;;		_UART_ISR
 19627 ;; This function uses a non-reentrant model
 19628 ;;
 19629                           
 19630                           	psect	text97
 19631  012FA2                     __ptext97:
 19632                           	opt stack 0
 19633  012FA2                     i2_ringbuf_pop:
 19634                           	opt stack 18
 19635                           
 19636                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 19637                           
 19638                           ;incstack = 0
 19639  012FA2  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 19640  012FA6  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 19641  012FAA  EC5E  F096         	call	i2_ringbuf_num	;wreg free
 19642  012FAE  5001               	movf	?i2_ringbuf_num,w,c
 19643  012FB0  1002               	iorwf	?i2_ringbuf_num+1,w,c
 19644  012FB2  B4D8               	btfsc	status,2,c
 19645  012FB4  D04A               	goto	i2l7278
 19646                           
 19647                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 19648  012FB6  EE20 F006          	lfsr	2,6
 19649  012FBA  5009               	movf	i2ringbuf_pop@rb,w,c
 19650  012FBC  26D9               	addwf	fsr2l,f,c
 19651  012FBE  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19652  012FC0  22DA               	addwfc	fsr2h,f,c
 19653  012FC2  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 19654  012FC6  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 19655  012FCA  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 19656  012FCE  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 19657  012FD2  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 19658  012FD6  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 19659  012FDA  500B               	movf	??i2_ringbuf_pop,w,c
 19660  012FDC  240D               	addwf	??i2_ringbuf_pop+2,w,c
 19661  012FDE  6ED9               	movwf	fsr2l,c
 19662  012FE0  500C               	movf	??i2_ringbuf_pop+1,w,c
 19663  012FE2  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 19664  012FE4  6EDA               	movwf	fsr2h,c
 19665  012FE6  50DF               	movf	indf2,w,c
 19666  012FE8  6E0F               	movwf	i2ringbuf_pop@ret,c
 19667                           
 19668                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 19669  012FEA  EE20 F002          	lfsr	2,2
 19670  012FEE  5009               	movf	i2ringbuf_pop@rb,w,c
 19671  012FF0  26D9               	addwf	fsr2l,f,c
 19672  012FF2  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19673  012FF4  22DA               	addwfc	fsr2h,f,c
 19674  012FF6  EE10 F006          	lfsr	1,6
 19675  012FFA  5009               	movf	i2ringbuf_pop@rb,w,c
 19676  012FFC  26E1               	addwf	fsr1l,f,c
 19677  012FFE  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19678  013000  22E2               	addwfc	fsr1h,f,c
 19679  013002  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 19680  013006  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 19681  01300A  0E01               	movlw	1
 19682  01300C  260D               	addwf	??i2_ringbuf_pop+2,f,c
 19683  01300E  0E00               	movlw	0
 19684  013010  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 19685  013012  50DE               	movf	postinc2,w,c
 19686  013014  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 19687  013016  50DE               	movf	postinc2,w,c
 19688  013018  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 19689  01301A  B0D8               	btfsc	status,0,c
 19690  01301C  D00A               	goto	i2l7270
 19691                           
 19692                           ;My_ringbuf.c: 49: rb->tail++;
 19693  01301E  EE20 F006          	lfsr	2,6
 19694  013022  5009               	movf	i2ringbuf_pop@rb,w,c
 19695  013024  26D9               	addwf	fsr2l,f,c
 19696  013026  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19697  013028  22DA               	addwfc	fsr2h,f,c
 19698  01302A  2ADE               	incf	postinc2,f,c
 19699  01302C  0E00               	movlw	0
 19700  01302E  22DD               	addwfc	postdec2,f,c
 19701                           
 19702                           ;My_ringbuf.c: 50: } else {
 19703  013030  D00A               	goto	i2l7272
 19704  013032                     i2l7270:
 19705                           
 19706                           ;My_ringbuf.c: 51: rb->tail = 0;
 19707  013032  EE20 F006          	lfsr	2,6
 19708  013036  5009               	movf	i2ringbuf_pop@rb,w,c
 19709  013038  26D9               	addwf	fsr2l,f,c
 19710  01303A  500A               	movf	i2ringbuf_pop@rb+1,w,c
 19711  01303C  22DA               	addwfc	fsr2h,f,c
 19712  01303E  0E00               	movlw	0
 19713  013040  6EDE               	movwf	postinc2,c
 19714  013042  0E00               	movlw	0
 19715  013044  6EDD               	movwf	postdec2,c
 19716  013046                     i2l7272:
 19717                           
 19718                           ;My_ringbuf.c: 52: }
 19719                           ;My_ringbuf.c: 53: return ret;
 19720  013046  500F               	movf	i2ringbuf_pop@ret,w,c
 19721                           
 19722                           ;My_ringbuf.c: 54: } else {
 19723  013048  0012               	return	
 19724  01304A                     i2l7278:
 19725                           
 19726                           ;My_ringbuf.c: 55: return 0;
 19727  01304A  0E00               	movlw	0
 19728  01304C  0012               	return	
 19729  01304E                     __end_ofi2_ringbuf_pop:
 19730                           	opt stack 0
 19731                           pclatu	equ	0xFFB
 19732                           pclath	equ	0xFFA
 19733                           tblptru	equ	0xFF8
 19734                           tblptrh	equ	0xFF7
 19735                           tblptrl	equ	0xFF6
 19736                           tablat	equ	0xFF5
 19737                           prodh	equ	0xFF4
 19738                           prodl	equ	0xFF3
 19739                           intcon	equ	0xFF2
 19740                           intcon2	equ	0xFF1
 19741                           indf0	equ	0xFEF
 19742                           postinc0	equ	0xFEE
 19743                           fsr0h	equ	0xFEA
 19744                           fsr0l	equ	0xFE9
 19745                           wreg	equ	0xFE8
 19746                           indf1	equ	0xFE7
 19747                           postinc1	equ	0xFE6
 19748                           postdec1	equ	0xFE5
 19749                           fsr1h	equ	0xFE2
 19750                           fsr1l	equ	0xFE1
 19751                           indf2	equ	0xFDF
 19752                           postinc2	equ	0xFDE
 19753                           postdec2	equ	0xFDD
 19754                           plusw2	equ	0xFDB
 19755                           fsr2h	equ	0xFDA
 19756                           fsr2l	equ	0xFD9
 19757                           status	equ	0xFD8
 19758                           
 19759 ;; *************** function i2_ringbuf_num *****************
 19760 ;; Defined at:
 19761 ;;		line 12 in file "../My_library/My_ringbuf.c"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 19764 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 19765 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 19766 ;; Auto vars:     Size  Location     Type
 19767 ;;		None
 19768 ;; Return value:  Size  Location     Type
 19769 ;;                  2    0[COMRAM] unsigned int 
 19770 ;; Registers used:
 19771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19772 ;; Tracked objects:
 19773 ;;		On entry : 0/0
 19774 ;;		On exit  : 0/0
 19775 ;;		Unchanged: 0/0
 19776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19779 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19780 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19781 ;;Total ram usage:        8 bytes
 19782 ;; Hardware stack levels used:    1
 19783 ;; This function calls:
 19784 ;;		Nothing
 19785 ;; This function is called by:
 19786 ;;		_UART_ISR
 19787 ;;		i2_ringbuf_put
 19788 ;;		i2_ringbuf_pop
 19789 ;; This function uses a non-reentrant model
 19790 ;;
 19791                           
 19792                           	psect	text98
 19793  012CBC                     __ptext98:
 19794                           	opt stack 0
 19795  012CBC                     i2_ringbuf_num:
 19796                           	opt stack 18
 19797                           
 19798                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 19799                           
 19800                           ;incstack = 0
 19801  012CBC  EE20 F006          	lfsr	2,6
 19802  012CC0  5001               	movf	i2ringbuf_num@rb,w,c
 19803  012CC2  26D9               	addwf	fsr2l,f,c
 19804  012CC4  5002               	movf	i2ringbuf_num@rb+1,w,c
 19805  012CC6  22DA               	addwfc	fsr2h,f,c
 19806  012CC8  EE10 F004          	lfsr	1,4
 19807  012CCC  5001               	movf	i2ringbuf_num@rb,w,c
 19808  012CCE  26E1               	addwf	fsr1l,f,c
 19809  012CD0  5002               	movf	i2ringbuf_num@rb+1,w,c
 19810  012CD2  22E2               	addwfc	fsr1h,f,c
 19811  012CD4  50DE               	movf	postinc2,w,c
 19812  012CD6  5CE6               	subwf	postinc1,w,c
 19813  012CD8  50DE               	movf	postinc2,w,c
 19814  012CDA  58E6               	subwfb	postinc1,w,c
 19815  012CDC  A0D8               	btfss	status,0,c
 19816  012CDE  D01F               	goto	i2l6918
 19817                           
 19818                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 19819  012CE0  EE20 F004          	lfsr	2,4
 19820  012CE4  5001               	movf	i2ringbuf_num@rb,w,c
 19821  012CE6  26D9               	addwf	fsr2l,f,c
 19822  012CE8  5002               	movf	i2ringbuf_num@rb+1,w,c
 19823  012CEA  22DA               	addwfc	fsr2h,f,c
 19824  012CEC  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 19825  012CF0  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 19826  012CF4  EE20 F006          	lfsr	2,6
 19827  012CF8  5001               	movf	i2ringbuf_num@rb,w,c
 19828  012CFA  26D9               	addwf	fsr2l,f,c
 19829  012CFC  5002               	movf	i2ringbuf_num@rb+1,w,c
 19830  012CFE  22DA               	addwfc	fsr2h,f,c
 19831  012D00  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 19832  012D04  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 19833  012D08  1E05               	comf	??i2_ringbuf_num+2,f,c
 19834  012D0A  1E06               	comf	??i2_ringbuf_num+3,f,c
 19835  012D0C  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 19836  012D0E  2A06               	incf	??i2_ringbuf_num+3,f,c
 19837  012D10  5003               	movf	??i2_ringbuf_num,w,c
 19838  012D12  2405               	addwf	??i2_ringbuf_num+2,w,c
 19839  012D14  6E01               	movwf	?i2_ringbuf_num,c
 19840  012D16  5004               	movf	??i2_ringbuf_num+1,w,c
 19841  012D18  2006               	addwfc	??i2_ringbuf_num+3,w,c
 19842  012D1A  6E02               	movwf	?i2_ringbuf_num+1,c
 19843                           
 19844                           ;My_ringbuf.c: 15: } else {
 19845  012D1C  0012               	return	
 19846  012D1E                     i2l6918:
 19847                           
 19848                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 19849  012D1E  EE20 F004          	lfsr	2,4
 19850  012D22  5001               	movf	i2ringbuf_num@rb,w,c
 19851  012D24  26D9               	addwf	fsr2l,f,c
 19852  012D26  5002               	movf	i2ringbuf_num@rb+1,w,c
 19853  012D28  22DA               	addwfc	fsr2h,f,c
 19854  012D2A  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 19855  012D2E  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 19856  012D32  EE20 F002          	lfsr	2,2
 19857  012D36  5001               	movf	i2ringbuf_num@rb,w,c
 19858  012D38  26D9               	addwf	fsr2l,f,c
 19859  012D3A  5002               	movf	i2ringbuf_num@rb+1,w,c
 19860  012D3C  22DA               	addwfc	fsr2h,f,c
 19861  012D3E  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 19862  012D42  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 19863  012D46  EE20 F006          	lfsr	2,6
 19864  012D4A  5001               	movf	i2ringbuf_num@rb,w,c
 19865  012D4C  26D9               	addwf	fsr2l,f,c
 19866  012D4E  5002               	movf	i2ringbuf_num@rb+1,w,c
 19867  012D50  22DA               	addwfc	fsr2h,f,c
 19868  012D52  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 19869  012D56  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 19870  012D5A  1E07               	comf	??i2_ringbuf_num+4,f,c
 19871  012D5C  1E08               	comf	??i2_ringbuf_num+5,f,c
 19872  012D5E  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 19873  012D60  2A08               	incf	??i2_ringbuf_num+5,f,c
 19874  012D62  5005               	movf	??i2_ringbuf_num+2,w,c
 19875  012D64  2607               	addwf	??i2_ringbuf_num+4,f,c
 19876  012D66  5006               	movf	??i2_ringbuf_num+3,w,c
 19877  012D68  2208               	addwfc	??i2_ringbuf_num+5,f,c
 19878  012D6A  5003               	movf	??i2_ringbuf_num,w,c
 19879  012D6C  2407               	addwf	??i2_ringbuf_num+4,w,c
 19880  012D6E  6E01               	movwf	?i2_ringbuf_num,c
 19881  012D70  5004               	movf	??i2_ringbuf_num+1,w,c
 19882  012D72  2008               	addwfc	??i2_ringbuf_num+5,w,c
 19883  012D74  6E02               	movwf	?i2_ringbuf_num+1,c
 19884  012D76  0012               	return	
 19885  012D78                     __end_ofi2_ringbuf_num:
 19886                           	opt stack 0
 19887                           pclatu	equ	0xFFB
 19888                           pclath	equ	0xFFA
 19889                           tblptru	equ	0xFF8
 19890                           tblptrh	equ	0xFF7
 19891                           tblptrl	equ	0xFF6
 19892                           tablat	equ	0xFF5
 19893                           prodh	equ	0xFF4
 19894                           prodl	equ	0xFF3
 19895                           intcon	equ	0xFF2
 19896                           intcon2	equ	0xFF1
 19897                           indf0	equ	0xFEF
 19898                           postinc0	equ	0xFEE
 19899                           fsr0h	equ	0xFEA
 19900                           fsr0l	equ	0xFE9
 19901                           wreg	equ	0xFE8
 19902                           indf1	equ	0xFE7
 19903                           postinc1	equ	0xFE6
 19904                           postdec1	equ	0xFE5
 19905                           fsr1h	equ	0xFE2
 19906                           fsr1l	equ	0xFE1
 19907                           indf2	equ	0xFDF
 19908                           postinc2	equ	0xFDE
 19909                           postdec2	equ	0xFDD
 19910                           plusw2	equ	0xFDB
 19911                           fsr2h	equ	0xFDA
 19912                           fsr2l	equ	0xFD9
 19913                           status	equ	0xFD8
 19914                           
 19915 ;; *************** function _I2C_ISR *****************
 19916 ;; Defined at:
 19917 ;;		line 44 in file "../My_library/My_I2C.c"
 19918 ;; Parameters:    Size  Location     Type
 19919 ;;		None
 19920 ;; Auto vars:     Size  Location     Type
 19921 ;;		None
 19922 ;; Return value:  Size  Location     Type
 19923 ;;		None               void
 19924 ;; Registers used:
 19925 ;;		wreg, status,2
 19926 ;; Tracked objects:
 19927 ;;		On entry : 0/0
 19928 ;;		On exit  : 0/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19935 ;;Total ram usage:        0 bytes
 19936 ;; Hardware stack levels used:    1
 19937 ;; This function calls:
 19938 ;;		Nothing
 19939 ;; This function is called by:
 19940 ;;		_ISR
 19941 ;; This function uses a non-reentrant model
 19942 ;;
 19943                           
 19944                           	psect	text99
 19945  014076                     __ptext99:
 19946                           	opt stack 0
 19947  014076                     _I2C_ISR:
 19948                           	opt stack 20
 19949                           
 19950                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 19951                           
 19952                           ;incstack = 0
 19953  014076  B69D               	btfsc	3997,3,c	;volatile
 19954  014078  A69E               	btfss	3998,3,c	;volatile
 19955  01407A  D003               	goto	i2l4300
 19956                           
 19957                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
 19958  01407C  969E               	bcf	3998,3,c	;volatile
 19959                           
 19960                           ;My_I2C.c: 47: I2C_sent_flag = 1;
 19961  01407E  0E01               	movlw	1
 19962  014080  6E3D               	movwf	_I2C_sent_flag,c
 19963  014082                     i2l4300:
 19964                           
 19965                           ;My_I2C.c: 48: }
 19966                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 19967  014082  A6A0               	btfss	4000,3,c	;volatile
 19968  014084  0012               	return	
 19969  014086  A6A1               	btfss	4001,3,c	;volatile
 19970  014088  0012               	return	
 19971                           
 19972                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
 19973  01408A  96A1               	bcf	4001,3,c	;volatile
 19974                           
 19975                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
 19976  01408C  0E01               	movlw	1
 19977  01408E  6E3C               	movwf	_I2C_cfct_flag,c
 19978  014090  0012               	return	
 19979  014092                     __end_of_I2C_ISR:
 19980                           	opt stack 0
 19981                           pclatu	equ	0xFFB
 19982                           pclath	equ	0xFFA
 19983                           tblptru	equ	0xFF8
 19984                           tblptrh	equ	0xFF7
 19985                           tblptrl	equ	0xFF6
 19986                           tablat	equ	0xFF5
 19987                           prodh	equ	0xFF4
 19988                           prodl	equ	0xFF3
 19989                           intcon	equ	0xFF2
 19990                           intcon2	equ	0xFF1
 19991                           indf0	equ	0xFEF
 19992                           postinc0	equ	0xFEE
 19993                           fsr0h	equ	0xFEA
 19994                           fsr0l	equ	0xFE9
 19995                           wreg	equ	0xFE8
 19996                           indf1	equ	0xFE7
 19997                           postinc1	equ	0xFE6
 19998                           postdec1	equ	0xFE5
 19999                           fsr1h	equ	0xFE2
 20000                           fsr1l	equ	0xFE1
 20001                           indf2	equ	0xFDF
 20002                           postinc2	equ	0xFDE
 20003                           postdec2	equ	0xFDD
 20004                           plusw2	equ	0xFDB
 20005                           fsr2h	equ	0xFDA
 20006                           fsr2l	equ	0xFD9
 20007                           status	equ	0xFD8
 20008                           pclatu	equ	0xFFB
 20009                           pclath	equ	0xFFA
 20010                           tblptru	equ	0xFF8
 20011                           tblptrh	equ	0xFF7
 20012                           tblptrl	equ	0xFF6
 20013                           tablat	equ	0xFF5
 20014                           prodh	equ	0xFF4
 20015                           prodl	equ	0xFF3
 20016                           intcon	equ	0xFF2
 20017                           intcon2	equ	0xFF1
 20018                           indf0	equ	0xFEF
 20019                           postinc0	equ	0xFEE
 20020                           fsr0h	equ	0xFEA
 20021                           fsr0l	equ	0xFE9
 20022                           wreg	equ	0xFE8
 20023                           indf1	equ	0xFE7
 20024                           postinc1	equ	0xFE6
 20025                           postdec1	equ	0xFE5
 20026                           fsr1h	equ	0xFE2
 20027                           fsr1l	equ	0xFE1
 20028                           indf2	equ	0xFDF
 20029                           postinc2	equ	0xFDE
 20030                           postdec2	equ	0xFDD
 20031                           plusw2	equ	0xFDB
 20032                           fsr2h	equ	0xFDA
 20033                           fsr2l	equ	0xFD9
 20034                           status	equ	0xFD8
 20035                           
 20036                           	psect	rparam
 20037  0000                     pclatu	equ	0xFFB
 20038                           pclath	equ	0xFFA
 20039                           tblptru	equ	0xFF8
 20040                           tblptrh	equ	0xFF7
 20041                           tblptrl	equ	0xFF6
 20042                           tablat	equ	0xFF5
 20043                           prodh	equ	0xFF4
 20044                           prodl	equ	0xFF3
 20045                           intcon	equ	0xFF2
 20046                           intcon2	equ	0xFF1
 20047                           indf0	equ	0xFEF
 20048                           postinc0	equ	0xFEE
 20049                           fsr0h	equ	0xFEA
 20050                           fsr0l	equ	0xFE9
 20051                           wreg	equ	0xFE8
 20052                           indf1	equ	0xFE7
 20053                           postinc1	equ	0xFE6
 20054                           postdec1	equ	0xFE5
 20055                           fsr1h	equ	0xFE2
 20056                           fsr1l	equ	0xFE1
 20057                           indf2	equ	0xFDF
 20058                           postinc2	equ	0xFDE
 20059                           postdec2	equ	0xFDD
 20060                           plusw2	equ	0xFDB
 20061                           fsr2h	equ	0xFDA
 20062                           fsr2l	equ	0xFD9
 20063                           status	equ	0xFD8
 20064                           
 20065                           	psect	temp
 20066  000058                     btemp:
 20067                           	opt stack 0
 20068  000058                     	ds	1
 20069  0000                     int$flags	set	btemp
 20070                           pclatu	equ	0xFFB
 20071                           pclath	equ	0xFFA
 20072                           tblptru	equ	0xFF8
 20073                           tblptrh	equ	0xFF7
 20074                           tblptrl	equ	0xFF6
 20075                           tablat	equ	0xFF5
 20076                           prodh	equ	0xFF4
 20077                           prodl	equ	0xFF3
 20078                           intcon	equ	0xFF2
 20079                           intcon2	equ	0xFF1
 20080                           indf0	equ	0xFEF
 20081                           postinc0	equ	0xFEE
 20082                           fsr0h	equ	0xFEA
 20083                           fsr0l	equ	0xFE9
 20084                           wreg	equ	0xFE8
 20085                           indf1	equ	0xFE7
 20086                           postinc1	equ	0xFE6
 20087                           postdec1	equ	0xFE5
 20088                           fsr1h	equ	0xFE2
 20089                           fsr1l	equ	0xFE1
 20090                           indf2	equ	0xFDF
 20091                           postinc2	equ	0xFDE
 20092                           postdec2	equ	0xFDD
 20093                           plusw2	equ	0xFDB
 20094                           fsr2h	equ	0xFDA
 20095                           fsr2l	equ	0xFD9
 20096                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    239
    Data        5
    BSS         2811
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      87
    BANK0           160    105     159
    BANK1           256    111     252
    BANK2           256      0     178
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[9]), STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_48(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), STR_46(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 235
		 -> STR_43(CODE[235]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->_ringbuf_put
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  221090
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                          _RTCC_task
                          _UART_task
                           _USB_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  165672
                                              0 BANK1    111   107      4
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  126418
                                             95 BANK0     10     0     10
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110168
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   60702
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30837
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   12740
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10483
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    4893
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10766
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1646
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   22831
                       _I2C_LCD_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17067
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21202
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8721
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2659
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1372
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1372
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1064
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2     999
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33321
                                             30 COMRAM    14    14      0
                            _I2C_ISR
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) _I2C_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _main_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_ISR
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      B2      10       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6F      FC       7       98.4%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      57       1       92.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     434       8        0.0%
DATA                 0      0     C04       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:34:36 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD73  
                      __size_of_I2C_Start 0030                           _ringbuf_put_num 3584  
                         _ringbuf_put_str 38A6                              ___awdiv@sign 0065  
                                      _ms 010E                             _USBDeviceInit 13EE  
                     ___wmul@multiplicand 0062                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006E                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                                     l207 3CE6                                       l208 3CE4  
                                     l146 1464               __end_of_USBStdGetDscHandler 169E  
                                     l504 12CE                                       l509 1322  
                                     l710 3B04                                       l641 40F0  
                                     l705 3C96                                       l626 3DE4  
                                     _BDT 000D00                                       l861 233E  
                                     l774 3586                                       l855 2C00  
                                     l874 116E                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                           __end_of_I2C_ISR 4092  
                              _USBSuspend 3EA6                                       _now 0146  
                       _RTCC_from_caltime 3F50                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 169E  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0042  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 0001  
                            _I2C_LCD_Puts 383C                  __size_ofi2_USBDeviceInit 0144  
                          ??_getsUSBUSART 006A                  USBEnableEndpoint@options 0009  
                       ??_I2C_LCD_Command 0064                                      ?_ISR 0001  
                  __end_of_get_string_usb 3B76                          _terminal_at_hand 390A  
                            _I2C_LCD_init 32BE                                      l1338 4070  
                                    l1370 341E                                      l1099 3D1C  
                                    l1716 1C1C                USBConfigureEndpoint@handle 0007  
                                    l1913 2BEE                                      l1966 3674  
                                    l1976 39C4                                      l8110 30E6  
                                    l8102 30C4                                      l8106 30D2  
                                    l8122 1D90                                      l8202 2B72  
                                    l9002 3B06                                      l8204 2B82  
                                    l8300 3624                                      l8214 2BDC  
                                    l8206 2B88                                      l8302 3630  
                                    l8144 3690                                      l9120 32C8  
                                    l8160 2AA2                                      l8312 3666  
                                    l8304 3636                                      l8320 3980  
                      __CFG_WPFP$PAGE_127 000000                                      l8090 307A  
                                    l8138 213A                                      l8226 267A  
                                    l8410 11E0                                      l8322 398C  
                                    l8148 36B6                                      l8252 0B9A  
                                    l8260 0BF8                                      l9140 3336  
                                    l9132 3314                                      l9124 32D2  
                                    l8172 2AD6                                      l8412 11E4  
                                    l8324 3992                                      l9052 35B8  
                                    l8334 4024                                      l8094 308E  
                                    l8086 306A                                      l8246 0B8A  
                                    l9070 28F4                                      l8174 2AE2  
                                    l8166 2AB8                                      l8342 38E0  
                                    l8430 000E                                      l8096 309A  
                                    l8264 0C18                                      l8248 0B90  
                                    l9136 331E                                      l9128 32EA  
                                    l8192 2B3A                                      l8184 2B18  
                                    l8176 2AE8                                      l8416 11EC  
                                    l8328 39B6                                      l9048 3596  
                                    l8504 0272                                      l9400 0B1C  
                                    l8098 30A0                                      l8258 0BF4  
                                    l9058 35F8                                      l8338 38A8  
                                    l8530 0318                                      l8506 0278  
                                    l8442 0048                                      l9146 26DA  
                                    l8268 0C7C                                      l9180 3E5A  
                                    l9068 28DE                                      l9076 28FA  
                                    l8188 2B26                                      l8284 3F1E  
                                    l8524 02D6                                      l8436 002C  
                                    l9148 26F2                                      l9334 388A  
                                    l9182 3E5E                                      l8614 3D68  
                                    l9086 3392                                      l8702 1B94  
                                    l8518 02B4                                      l8438 003E  
                                    l9328 386A                                      l9336 38A0  
                                    l8632 21E0                                      l8624 21AC  
                                    l8800 1E3E                                      l9096 37E8  
                                    l8704 1BDE                                      l8560 03B8  
                                    l8528 030E                                      l8480 01B6  
                                    l8464 0132                                      l8456 0100  
                                    l8448 0080                                      l9360 0938  
                                    l9352 08E6                                      l9408 0B52  
                                    l9344 083C                                      l8810 1E88  
                                    l8802 1E48                                      l8618 3D7A  
                                    l8730 1444                                      l8706 1BE4  
                                    l8562 03BE                                      l8554 0398  
                                    l8538 033E                                      l8546 0366  
                                    l8482 01CE                                      l8474 0198  
                                    l8466 013E                                      l8570 042C  
                                    l9370 098E                                      l9362 093C  
                                    l9354 08EA                                      l8644 2246  
                                    l8900 13C2                                      l9196 3B40  
                                    l8548 0372                                      l8476 01A4  
                                    l8468 0144                                      l8572 044C  
                                    l8492 020C                                      l9348 0866  
                                    l8902 13C6                                      l8814 1EB8  
                                    l9198 3B44                                      l8742 1472  
                                    l8750 148A                                      l8726 143A  
                                    l8494 0242                                      l8670 3952  
                                    l9390 0AB8                                      l8904 13EA  
                                    l8808 1E80                                      l8680 3A1A  
                                    l8568 0420                                      l8488 01F4  
                                    l9392 0AC0                                      l9384 0A64  
                                    l9376 09DC                                      l9368 098A  
                                    l8842 12A8                                      l8818 1EEA  
                                    l8834 3FDC                                      l8754 14AA  
                                    l8674 39D0                                      l8930 04F6  
                                    l9386 0A8E                                      l9378 09E0  
                                    l8860 130C                                      l8844 12B2  
                                    l8764 151A                                      l8676 39DC  
                                    l8940 05BE                                      l8924 04A2  
                                    l9396 0ADC                                      l8854 12D8  
                                    l8758 14B4                                      l8686 1B36  
                                    l8950 0684                                      l8942 05F6  
                                    l8934 053E                                      l8926 04AE  
                                    l8848 12C2                                      l8688 1B3C  
                                    l8960 074C                                      l8936 0576  
                                    l9808 3736                                      l8874 134E  
                                    l8882 1372                                      l8866 1326  
                                    l8698 1B82                                      l8962 0784  
                                    l8954 06CC                                      l8946 063E  
                                    l9818 3760                                      l8884 137E  
                                    l8892 13A2                                      l8956 0704  
                                    l8894 13AC                                      l8990 3CAE  
                                    l8966 07CC                                      STR_1 FFDE  
                                    STR_4 FFFA                                      STR_7 FFFC  
                                    STR_9 FFF8                                      u8200 3DF0  
                   ??_USBCtrlTrfTxService 0001                                      u7600 2188  
                                    u7530 20E4                                      u7540 20E6  
                                    u7550 2116                                      u8510 1298  
                                    _UCFG 000F39                                      u7570 212C  
                                    u8450 1E2E                                      u7580 212E  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u7590 2186                                      u8518 129C  
                                    u7568 211A                                      u8458 1E32  
                                    _UEIE 000F37                                      u9607 3326  
                                    u7880 38D2                                      u9617 40BA  
                                    u7890 3902                                      u9627 3D22  
                                    u9637 3886                                      u7887 38C8  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u7897 38F8                                      u9597 32DA  
                         _CDCDataInHandle 00F0                       ??_RTCC_from_caltime 0091  
  USBStdFeatureReqHandler@current_ep_data 0018                                      _pDst 0035  
                                    _atoi 1B34                                      _main 36F4  
                ??i2_USBTransferOnePacket 0005                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 010A  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                          __end_of_I2C_Send 40F8  
                         _USBDeviceAttach 3CB8                                      btemp 0058  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 4128  
                        __end_of_I2C_Stop 4122                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A6                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 1D18                    ??_USBCtrlTrfOutHandler 0003  
                          terminal_task@i 01F9                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0015                             _I2C_LCD_Clear 40AC  
                         ??_terminal_task 018F                           ??_terminal_time 00BE  
                   __end_ofi2_ringbuf_pop 304E                     __end_ofi2_ringbuf_num 2D78  
                   __end_ofi2_ringbuf_put 2FA2                        terminal_task@ascii 01F8  
                                   ??_ISR 001F                    __size_of_I2C_IdleCheck 001E  
                ??_USBStdGetStatusHandler 0001                              print_time@tx 008F  
                          ?_USBDeviceInit 0001                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
               __end_of_RTCC_from_caltime 3F76                                     ?_atoi 0066  
                                   ?_main 0001                   __size_of_put_string_usb 002C  
                          ??_get_quot_rem 007D                           __end_of___awdiv 2B44  
                                   _ADRES 000FC3                                     STR_20 FFE3  
                                   STR_13 FFF6                                     STR_30 FFD4  
                                   STR_31 FFF0                                     STR_15 FFA3  
                                   STR_23 FF43                                     STR_32 FFC9  
                                   STR_40 FFBB                                     STR_24 FFAC  
                                   STR_33 FFE1                                     STR_41 FFCF  
                                   STR_25 FF74                                     STR_26 FFEC  
                                   STR_42 FFEE                                     STR_34 FFE7  
                                   STR_35 FFCD                                     STR_27 FFEB  
                                   STR_19 FFE3                                     STR_43 FE58  
                                   STR_36 FFD9                                     STR_44 FF88  
                                   STR_28 FF68                           __end_of___awmod 30F0  
                                   STR_29 FFE9                                     STR_37 FFF2  
                                   STR_45 FF91                                     STR_38 FFC2  
                                   STR_46 FF7F                                     STR_39 FFF4  
                                   STR_47 FF9A                                     STR_48 FFB4  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 2C00  
                         ___awdiv@divisor 0062                    __end_of_USBDeviceTasks 17E4  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 0001  
                         __end_of___lwdiv 367E                           __end_of___lwmod 39CE  
                                   i2l300 2D9C                                     i2l232 1ABA  
                                   i2l146 184A                                     i2l170 177A  
                                   i2l308 3C02                                     i2l158 16CE  
                                   i2l168 1768                                     i2l345 2A76  
                                   i2l169 17E0                                     i2l450 2472  
                                   i2l452 24BC                                     i2l374 0E28  
                                   i2l295 2D86                                     i2l359 1C36  
                                   i2l368 1C9A                                     i2l393 0FEE  
                                   i2l298 2E14                                     i2l299 2D96  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                 ST7032_task@st7032_state 0039                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000                          __end_of_UART_ISR 3BC0  
         __end_of_USBCtrlEPAllowDataStage 318E                                     _sd000 FE54  
                                   _sd001 FDBE                                     _sd002 FDF2  
                    caltime_to_epoch@year 007F                                i2memset@p1 0001  
                      __size_of_UART_init 0022                           __end_of_dpowers FD73  
                      __size_of_UART_task 0020                          __end_of_OSC_init 4118  
                         __end_of_isdigit 3F28                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003C  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                         __end_of_I2C_Start 3DF4  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 37D2                          __end_of_USB_init 405A  
                        __end_of_USB_task 346A                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 045A  
                   __size_of_I2C_init_old 0012                          __end_ofi2_memset 3EFE  
                       month_length@month 0066                   __end_of_ringbuf_put_num 3606  
                 __end_of_ringbuf_put_str 390A                       terminal_task@i_4539 01F7  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00E2  
                          ?_I2C_LCD_Clear 0001                           __initialization 318E  
                         terminal_task@rx 018D                           terminal_task@tx 018B  
                         terminal_time@tx 00B6                              __end_of_atoi 1C26  
                            __end_of_main 3764                     _control_signal_bitmap 0048  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                               ??_I2C_ISR 0001                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 0091                                    ??_atoi 0068  
                                  ??_main 00C9                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001                               ?_USBSuspend 0001  
                            _cdc_mem_type 00F6                              _I2C_init_old 40F8  
                                  _BCL1IF 007D0B                             _I2C_IdleCheck 4020  
                 __end_of_USBDeviceAttach 3CF0                          _CDCDataOutHandle 00F2  
                       _getsUSBUSART$1957 006B                         _I2C_LCD_SetCursor 3E7A  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0060  
                               ??_USB_ISR 001F                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 017A  
                                  i2l1451 0056                                    i2l1286 3BA2  
                                  i2l1454 006A                                    i2l1287 3BA0  
                                  i2l4300 4082                            __CFG_WDTEN$OFF 000000  
                                  i2l5322 2E72                                    i2l5314 2E48  
                                  i2l5500 3DFC                                    i2l7020 17DC  
                                  i2l7012 17A0                                    i2l5270 3C60  
                                  i2l5334 2ECE                                    i2l5520 2288  
                                  i2l6240 19F4                                    i2l6224 197C  
                                  i2l5256 328C                                    i2l5504 3E02  
                                  i2l6218 1958                                    i2l6402 3A80  
                                  i2l5266 3C52                                    i2l5370 249E  
                                  i2l5362 2460                                    i2l5354 2440  
                                  i2l6170 1A64                                    i2l7018 17C0  
                                  i2l5524 2292                                    i2l6236 19DA  
                                  i2l6260 1C46                                    i2l5534 22BE  
                                  i2l5542 22F6                                    i2l6430 2A3C  
                                  i2l6270 1C68                                    i2l6262 1C4C  
                                  i2l6190 1AE0                                    i2l5544 22FE  
                                  i2l5552 2336                                    i2l6416 29F6  
                                  i2l5800 1686                                    i2l6272 1C6E  
                                  i2l5720 313E                                    i2l6442 2A80  
                                  i2l6418 29FA                                    i2l5378 24C6  
                                  i2l6274 1C74                                    i2l6258 1C40  
                                  i2l8026 0062                                    i2l7260 2F8C  
                                  i2l6436 2A5C                                    i2l5812 2DBC  
                                  i2l5740 1F32                                    i2l6284 1CB6  
                                  i2l5724 315A                                    i2l7270 3032  
                                  i2l5910 105C                                    i2l5902 100A  
                                  i2l5822 2DFC                                    i2l5670 3EDC  
                                  i2l5750 1F66                                    i2l6622 27B4  
                                  i2l6606 3BFE                                    i2l7272 3046  
                                  i2l5840 0E24                                    i2l5744 1F3A  
                                  i2l6288 1CD4                                    i2l6640 2822  
                                  i2l5690 2946                                    i2l6394 3A38  
                                  i2l5498 3DF6                                    i2l5674 3EEC  
                                  i2l6634 2802                                    i2l6626 27BC  
                                  i2l5908 1050                                    i2l5860 0EE2  
                                  i2l7278 304A                                    i2l5862 0EE4  
                                  i2l5854 0E9E                                    i2l5774 1562  
                                  i2l5766 1FB0                                    i2l6638 281C  
                                  i2l6582 3DBC                                    i2l6584 3DBE  
                                  i2l5882 0F88                                    i2l5866 0F00  
                                  i2l5794 1676                                    i2l5786 1614  
                                  i2l5778 157A                                    i2l5892 0FCE  
                                  i2l5876 0F52                                    i2l5796 167E  
                                  i2l5788 161C                                    i2l6860 182E  
                                  i2l6940 16C6                                    i2l6932 16B6  
                                  i2l6918 2D1E                                    i2l5894 0FDA  
                                  i2l5878 0F6E                                    i2l6872 1858  
                                  i2l6880 1870                                    i2l6856 1826  
                                  i2l6962 16F4                                    i2l6954 16E4  
                                  i2l6884 188E                                    i2l6894 18F2  
                                  i2l6888 1896                                    i2l6992 175E  
                                  i2l6984 1736                                    i2l6968 171A  
                                  i2l6978 172A                                    i2l6998 1772  
                      ?_I2C_LCD_SetCursor 0066                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _SSPBUF 000FC9  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0005  
                       ??i2_USBDeviceInit 0009                           i2ringbuf_pop@rb 0009  
                         i2ringbuf_num@rb 0001           __size_ofi2_USBTransferOnePacket 00BA  
                         i2ringbuf_put@rb 0009                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 4076                        _terminal_task$6198 01F5  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 004A                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                        ringbuf_put_num@i 0074                           USBDeviceTasks@i 001E  
                   caltime_to_epoch@epoch 0081               USBStdFeatureReqHandler@pUEP 0016  
                      _terminal_time$6199 00BE                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                                  ___lmul 367E                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 233E                                    ___wmul 3D28  
                      ??_epoch_to_caltime 0083                         __end_of_UART_init 3FBE  
                               ??___awdiv 0064                         __end_of_UART_task 4000  
                               ??___awmod 0064                                    _d_to_x 3F28  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 1EF0  
                    ringbuf_put_num@value 0071                              ?_timer0_init 0001  
                       __end_of_RTCC_init 383C                              ?_timer1_init 0060  
                               ??___lwdiv 0064                         __end_of_RTCC_task 3C42  
                               ??___lwmod 006B                              ?_timer3_init 0001  
                                  _lcd_tx 004C                         _USBEnableEndpoint 3C42  
         __size_of_USBStdGetStatusHandler 00BA                                    _memset 3D5E  
                                  clear_0 3196                                    clear_1 31A8  
                                  clear_2 31B4                           put_string_usb@s 006C  
                                  clear_3 31C0                                    clear_4 31CC  
                                  clear_5 31D8                                    clear_6 31E4  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 4000                        ?_USBEnableEndpoint 0009  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 016C  
                                  _usb_tx 0174                                    _strcmp 39CE  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 2692                                 ??_isdigit 0060  
                               ?_I2C_Send 0001                              _st7032_state 004B  
                            _CDCTxService 1274                                 ?_I2C_Stop 0001  
                            __mediumconst FD68                 __end_of_I2C_LCD_SetCursor 3EA6  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 000A  
                          ?_I2C_IdleCheck 0001                                 ??_sprintf 007E  
                     ?_terminal_operation 00BF                               _CtrlTrfData 000D38  
                    _controlTransferState 0047                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 3220  
                            __pbssBIGRAMl 04C8                      __end_of_get_quot_rem 25BE  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 4092                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 006F                          ?_ringbuf_put_str 006F  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        terminal_task@op0 0114                          terminal_task@op1 012D  
                        terminal_task@op2 0280                          terminal_task@op3 0299  
                        terminal_task@buf 0191                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 3C7E                             __end_of_sd000 FE58  
                           __end_of_sd001 FDF2                             __end_of_sd002 FE26  
                        terminal_time@op0 00B8                          terminal_time@op1 00BA  
                        terminal_time@op2 00BC                              __pidataBANK0 4128  
                            __pidataBANK1 412B                                 ?_UART_ISR 0001  
                    ??_terminal_operation 00C9                  __end_of_terminal_at_hand 396C  
        __size_of_USBCtrlEPAllowDataStage 009E             __size_of_USBConfigureEndpoint 0094  
                               ?_OSC_init 0001               __end_of_USBCtrlTrfInHandler 2A86  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 3CF0  
                          _put_string_usb 3E4E                    i2_USBTransferOnePacket 2E32  
                    terminal_task@command 017C                                 ?_USB_init 0001  
                               ?_USB_task 0001                             _I2C_cfct_flag 003C  
                       _CDCTxService$2005 0068                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                                ??_I2C_Stop 0062  
                              _cdc_notice 0100                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 0001                                _cdc_rx_len 00F7  
                              _cdc_tx_len 00F8                caltime_to_epoch@month_3637 0080  
                ??_USBCtrlTrfSetupHandler 001B                          ?_USBDeviceAttach 0001  
                  _USBStdGetStatusHandler 2D78                              sprintf@width 008D  
                      __size_of_main_init 00DE                                __pbssBANK0 00C9  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                 __end_of_caltime_to_RTCC 2414                           _RTCC_to_caltime 2C00  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00D8  
        __end_of_USBCtrlEPServiceComplete 1B34               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FE42                     RTCC_task@prev_halfsec 00F4  
                    USBCtrlTrfRxService@i 0001                                   ?___lmul 006D  
                              ??_UART_ISR 0010                                   ?___wmul 0060  
                          ST7032_init@buf 0400                                   ?_d_to_x 0001  
                  __end_of_put_string_usb 3E7A                                ??_OSC_init 0060  
                                 _I2C_ISR 4076                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FE42                      I2C_LCD_SetCursor@row 0066  
                        _USBCtrlEPService 2764                                   ?_x_to_d 0001  
                            I2C_Send@data 0062                                _ep_data_in 00E4  
                                 ?_strcmp 0060               __end_of_USBCtrlTrfRxService 1A40  
                      _USBCheckStdRequest 1C26                                ??_USB_init 0069  
                       _configDescriptor1 FD7B                                ??_USB_task 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 233E                       _USBStdSetCfgHandler 1EF0  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8685 01FA  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                           _I2C_sent_flag 003D                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00BF  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 014E  
                                 _UIEbits 000F36                                   _USB_ISR 4122  
                 __end_of_RTCC_from_epoch 40AC                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                          i2ringbuf_pop@ret 000F  
                        __CFG_CFGPLLEN$ON 000000                             _cdc_trf_state 0046  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 3DC4                                   _pCDCDst 00EA  
                                 _pCDCSrc 00ED                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 3764                                   __Lparam 0000  
                 __end_of_I2C_LCD_Command 3D28                         ringbuf_put_num@rb 006F  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                            USB_task@data 0076                      ??_USBCheckStdRequest 001B  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 2A86                           __size_of___lmul 0076  
                                 ___awmod 304E                                   ___lldiv 2B44  
                        ??_USBDeviceTasks 001E                           __size_of___wmul 0036  
                   ringbuf_put_num@digits 0073                                   ___lwdiv 3606  
                         ?_put_string_usb 006C                         ??_USBStallHandler 0001  
                                 ___lwmod 396C                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 0B70                     __end_of_terminal_time 0806  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 20B0                      __size_of_putUSBUSART 0022  
             epoch_to_caltime@month_cache 00FE                                   __pcinit 318E  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FDBE                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 36F4                                   __ptext1 0806  
                                 __ptext2 2692                                   __ptext3 045A  
                                 __ptext4 390A                                   __ptext5 34F8  
                                 __ptext6 0000                                   __ptext7 38A6  
                                 __ptext8 3F50                                   __ptext9 39CE  
                                 _inPipes 00D2                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 0040                                 _T0CONbits 000FD5  
                        _time_change_flag 00F9                          _caltime_to_epoch 0B70  
                         __size_of_strcmp 005C                              __size_of_ISR 009E  
                               _T1CONbits 000FCD                                   _dpowers FD69  
                            ??_USBSuspend 0015                   __size_of_RTCC_from_RTCC 001A  
                                 _isdigit 3EFE                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                             I2C_LCD_init@i 0068  
                               _T5CONbits 000F22                           i2_USBDeviceInit 17E4  
                        i2USBDeviceInit@i 0009                                   _uart_rx 015C  
                                 _uart_tx 0164                        __end_of_USB_CD_Ptr FD7B  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 008E  
                 __end_of_RTCC_to_caltime 2CBC                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 3220                              _getsUSBUSART 1E06  
                  __size_ofi2_ringbuf_pop 00AC                    __size_ofi2_ringbuf_num 00BC  
                  __size_ofi2_ringbuf_put 00B6                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FD79                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 0033                            ??_month_length 0067  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066           _dummy_encapsulated_cmd_response 0154  
                ?_USBStdFeatureReqHandler 0001                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                       ?_is_usb_available 0001                        __end_of_USBSuspend 3ED2  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 30F0  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 1A40                                   strcmp@r 0065  
              _USBStatusStageEnabledFlag1 0043                _USBStatusStageEnabledFlag2 0044  
                      USBEnableEndpoint@p 000A                                 _UART_init 3F9C  
                               _UART_task 3FE0                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 37D2                                 _RTCC_task 3C06  
               epoch_to_caltime@day_cache 0112                    i2ringbuf_put@asciicode 000B  
                      ST7032_cursor@F8665 00FC                              _get_quot_rem 24EA  
                              _print_time 34F8                            _ringbuf_delete 3F76  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 003A                       RTCC_from_caltime@tm 008F  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
                        ?_RTCC_from_epoch 008F       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 0057                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2266                          __CFG_IOL1WAY$OFF 000000  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                        ?_I2C_LCD_Command 0001                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 346A                            ringbuf_pop@ret 006E  
                           i2_ringbuf_pop 2FA2                             i2_ringbuf_num 2CBC  
                 ?i2_USBTransferOnePacket 0001                             i2_ringbuf_put 2EEC  
                   __end_of_USBDeviceInit 1550                         ?_terminal_at_hand 00AF  
                          __end_of___lmul 36F4                            __end_of___wmul 3D5E  
                          __end_of_d_to_x 3F50                         __size_of_UART_ISR 004A  
                 __end_ofi2_USBDeviceInit 1928                    __end_of_ringbuf_delete 3F9C  
                              ?_UART_init 0001                        ??_terminal_at_hand 00B6  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                                ?_UART_task 0001  
                          __end_of_memset 3D92                                ?_RTCC_init 0001  
                       __size_of_OSC_init 000E                                ?_RTCC_task 0001  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 00F5  
                          __end_of_x_to_d 4020                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 3A2A                       start_initialization 318E  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 0001  
                             __end_of_ISR 00A6             USBCtrlTrfRxService@byteToRead 0002  
                       __size_of_USB_init 001C                         __size_of_USB_task 008E  
                           ?_I2C_LCD_Puts 0064                             ?_I2C_LCD_init 0001  
                             _cdc_data_rx 0200                               _cdc_data_tx 0240  
                       __size_ofi2_memset 002C                             UART_ISR@ascii 0010  
            __end_of_USBConfigureEndpoint 32BE                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 1082         __end_of_USBCtrlEPAllowStatusStage 29C2  
                __end_of_USBCtrlEPService 2832                               ??_I2C_Start 0063  
               ??_USBCtrlEPAllowDataStage 0002                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 40C6  
                  _pBDTEntryEP0OutCurrent 0031                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 2EEC  
                     ringbuf_put_num@temp 0075                                  ??___lmul 0075  
                          ?i2_ringbuf_pop 0009                            ?i2_ringbuf_num 0001  
                          ?i2_ringbuf_put 0009                                  ??___wmul 0064  
                     _USBStdGetDscHandler 1550                                  ??_d_to_x 0068  
             __size_of_terminal_operation 00D2                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK0 00FC                               __pdataBANK1 01FA  
                                ?_I2C_ISR 0001                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcmp 0064                      __end_of_month_length 218E  
                          _RTCC_from_RTCC 40C6                    _USBActiveConfiguration 0056  
          __end_of_USBStdGetStatusHandler 2E32                               ?_print_time 008F  
                             __pbssCOMRAM 002D                            USB_task@rx_len 0074  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 018B              __size_of_USBCtrlTrfInHandler 00C4  
                          ??_I2C_LCD_Puts 0066                            ??_I2C_LCD_init 0067  
                            _isdigit$5614 0061                      __end_of_ringbuf_init 3ADA  
                    ?_USBStdGetDscHandler 0001                                  ?_USB_ISR 0001  
              __end_of_USBWakeFromSuspend 3DC4                               sprintf@flag 008B  
                             sprintf@prec 0082                           _USBStallHandler 3BC0  
                            _pBDTEntryOut 00DE                __end_of_USBCheckCDCRequest 24EA  
                __end_of_caltime_to_epoch 0DFE                           millis_timer@cnt 0037  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 0060                                 __pintcode 0008  
                           __pmediumconst FD68                                  ?___awdiv 0060  
                                ?___awmod 0060                                  ?___lldiv 0060  
                                ?___lwdiv 0060                                  ?___lwmod 0067  
                   _is_usb_available$5114 0060                    __end_of_RTCC_from_RTCC 40E0  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 0001  
                             ??_UART_init 0060                USBCBSendResume@delay_count 002F  
                             ??_UART_task 0068                               ??_RTCC_init 0091  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 218E  
                               _main_init 1FD2                               I2C_Start@rw 0062  
                                ?_isdigit 0001                          _epoch_to_caltime 1082  
                                _I2C_Send 40E0                                  _I2C_Stop 4118  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_busy 003B  
                   __end_of_I2C_IdleCheck 403E                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 3A86                       ringbuf_backspace@rb 0068  
                           ?_I2C_init_old 0001                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 00E7                          ___lwdiv@quotient 0065  
                   terminal_at_hand@value 00B5                           ST7032_task@wait 002D  
                                ?_sprintf 006C              __size_of_USBCtrlTrfRxService 0118  
           USBConfigureEndpoint@direction 0001                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D8  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                         ??i2_ringbuf_pop 000B                           ??i2_ringbuf_num 0003  
                         ??i2_ringbuf_put 000C                                  _PIR1bits 000F9E  
                                i2u427_40 22E8                                  _PIR2bits 000FA1  
                                i2u427_47 22DE                                  i2u429_40 2328  
                                i2u461_40 166A                                  i2u429_47 231E  
                                i2u461_47 1660                                  _PIR5bits 000F98  
                                i2u458_40 15D8                epoch_to_caltime@year_cache 00FA  
                                i2u458_47 15CE                                  i2u459_40 160E  
                                i2u459_47 1604                 USBCtrlEPService@setup_cnt 001D  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 003F                                  _UART_ISR 3B76  
                   terminal_operation@op0 00C1                     terminal_operation@op1 00C3  
                   terminal_operation@op2 00C5                     terminal_operation@op3 00C7  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                             ??_timer3_init 0060  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                    _USBConfigureEndpoint 322A                                  _OSC_init 410A  
                         ?_RTCC_from_RTCC 0086                          __size_of_I2C_ISR 001C  
        __size_of_USBStdFeatureReqHandler 0284                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _USB_init 403E                                  _USB_task 33DC  
                              ?_main_init 0001                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 0001                              _RemoteWakeup 003E  
                      I2C_LCD_init@i_4452 0069                                  i2_memset 3ED2  
                          ??_I2C_init_old 0060                         ??_ringbuf_put_num 0074  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 3C06  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0068  
                       ___lmul@multiplier 006D                               _INTCON2bits 000FF1  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 1FD2  
                        __size_of_USB_ISR 0006                      epoch_to_caltime@year 0089  
                         main_init@uartrx 0300                           main_init@uarttx 04C8  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004C                        __end_of_device_dsc FE54  
                 ?_USBCtrlTrfSetupHandler 0001                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                      __end_of_I2C_LCD_Puts 38A6  
                                _SetupPkt 000D30                             _weekday_3char FE26  
                    __end_of_I2C_LCD_init 334E                     __size_of_month_length 00DE  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 0001  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                       I2C_IdleCheck@mask 0061                          __size_of___lldiv 00BC  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                     __end_of_ringbuf_pop 28FE                       __end_of_ringbuf_num 1E06  
                     __end_of_ringbuf_put 2692                       __end_of_putUSBUSART 3FE0  
                             _line_coding 0184                            ??_CDCTxService 0067  
                     __end_of_timer0_init 3CB8                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 3B2A                                sprintf@len 0089  
                     __end_of_timer3_init 3E4E                                sprintf@val 0087  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0146  
                         ___lwdiv@divisor 0062                           ___lwdiv@counter 0064  
                    timer0_init@prescaler 0061                                  __ptext10 1B34  
                                __ptext11 3EFE                                  __ptext20 3ADA  
                                __ptext12 3D28                                  __ptext21 3C7E  
                                __ptext13 3584                                  __ptext30 1082  
                                __ptext22 3A86                                  __ptext14 396C  
                                __ptext31 24EA                                  __ptext23 403E  
                                __ptext15 3606                                  __ptext40 33DC  
                                __ptext32 2B44                                  __ptext24 13EE  
                                __ptext16 3F76                                  __ptext41 25BE  
                                __ptext33 233E                                  __ptext25 3D5E  
                                __ptext17 334E                                  __ptext50 3FE0  
                                __ptext42 2832                                  __ptext34 3F28  
                                __ptext26 3CB8                                  __ptext18 1FD2  
                                __ptext51 1D18                                  __ptext43 3E4E  
                                __ptext35 2A86                                  __ptext27 3F9C  
                                __ptext19 3E22                                  __ptext60 3E7A  
                                __ptext52 3C06                                  __ptext44 3FBE  
                                __ptext36 410A                                  __ptext28 37D2  
                                __ptext61 3CF0                                  __ptext53 40C6  
                                __ptext45 3B2A                                  __ptext37 32BE  
                                __ptext29 4092                                  __ptext70 17E4  
                                __ptext62 383C                                  __ptext54 0B70  
                                __ptext46 405A                                  __ptext38 40F8  
                                __ptext71 3D92                                  __ptext63 4118  
                                __ptext55 20B0                                  __ptext47 1E06  
                                __ptext39 40AC                                  __ptext80 3ED2  
                                __ptext72 3EA6                                  __ptext64 3DC4  
                                __ptext56 304E                                  __ptext48 1274  
                                __ptext81 2D78                                  __ptext73 3BC0  
                                __ptext65 40E0                                  __ptext57 367E  
                                __ptext49 218E                                  __ptext90 3A2A  
                                __ptext82 1550                                  __ptext74 2764  
                                __ptext66 4020                                  __ptext58 2C00  
                                __ptext91 1928                                  __ptext83 0DFE  
                                __ptext75 346A                                  __ptext59 4000  
                                __ptext92 28FE                                  __ptext84 3DF4  
                                __ptext76 1A40                                  __ptext68 4122  
                                __ptext93 29C2                                  __ptext85 2414  
                                __ptext77 30F0                                  __ptext69 169E  
                                __ptext94 2266                                  __ptext86 3764  
                                __ptext78 1C26                                  __ptext95 3B76  
                                __ptext87 2E32                                  __ptext79 1EF0  
                                __ptext96 2EEC                                  __ptext88 3C42  
                                __ptext97 2FA2                                  __ptext89 322A  
                                __ptext98 2CBC                                  __ptext99 4076  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
               __size_of_terminal_at_hand 0062                          __size_of_sprintf 045A  
                    terminal_at_hand@hand 00B1                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 34F8                             __size_of_main 0070  
                       ?_USBCtrlEPService 0001                              _month_length 20B0  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 001B  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 29C2  
                                _outPipes 00C9                          ??_ringbuf_delete 0062  
                    _USBCtrlTrfOutHandler 3A2A                                  int$flags 0058  
                            _ringbuf_init 3A86                                  atoi@sign 006A  
               _USBCtrlEPAllowStatusStage 28FE                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0806                             _terminal_time 045A  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0041  
                            ??_print_time 0091                  CDCTxService@byte_to_send 006B  
                          main_init@usbrx 0364                            main_init@usbtx 08B0  
                             ??_main_init 0091                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 0001             USBCtrlTrfTxService@byteToSend 0001  
            I2C_LCD_SetCursor@row_offsets 0067                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                          get_quot_rem@quot 0079  
               terminal_task@command_init 00FB                         RTCC_to_caltime@tm 0062  
                                intlevel2 0000                                 sprintf@ap 0083  
                               sprintf@cp 0085                                 sprintf@sp 006C  
                  __size_of_USBDeviceInit 0162   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3E22  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 3DF4  
                        ___lwmod@dividend 0067              i2USBTransferOnePacket@handle 0006  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00B4                       terminal_at_hand@min 00B3  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 334E  
                __end_of_epoch_to_caltime 1274                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3                __end_of_terminal_operation 2764  
                      __end_of_print_time 3584                i2USBTransferOnePacket@data 0002  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                    __end_of_I2C_init_old 410A                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                               _ringbuf_pop 2832  
                             _ringbuf_num 1D18                               _ringbuf_put 25BE  
                             _putUSBUSART 3FBE                       _USBCtrlTrfRxService 1928  
                             _timer0_init 3C7E                        _USBWakeFromSuspend 3D92  
                             _timer1_init 3ADA                               _timer3_init 3E22  
                          ?_terminal_task 018B                            ?_terminal_time 00B6  
                 _USBStdFeatureReqHandler 0DFE                        _USBCheckCDCRequest 2414  
                     _USBCtrlTrfTxService 2266                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                                  sprintf@c 008C  
                                sprintf@f 006E                       ?_USBWakeFromSuspend 0001  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 405A                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0069                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 0002  
                   _USBAlternateInterface 0054                           ___lwmod@counter 006B  
                      terminal_at_hand@tx 00AF                       ?_USBCheckCDCRequest 0001  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0049  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 0001  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                ?_USBCtrlEPAllowDataStage 0001                            _get_string_usb 3B2A  
                    ?_USBCtrlTrfTxService 0001                 __end_of_ringbuf_backspace 33DC  
            _USBStatusStageTimeoutCounter 0045                     __size_of_I2C_LCD_Puts 006A  
                   __size_of_I2C_LCD_init 0090                      ??_USBWakeFromSuspend 0015  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 13EE  
                    ??_USBCheckCDCRequest 0001                                _USB_CD_Ptr FD79  
                        ??_RTCC_from_RTCC 0088  
