

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 16:55:36 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   121                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   122                           	dabs	1,0xD00,48,_BDT
   123                           	dabs	1,0xD38,8,_CtrlTrfData
   124                           	dabs	1,0xD30,8,_SetupPkt
   125  0000                     
   126                           	psect	idataBANK0
   127  01411E                     __pidataBANK0:
   128                           	opt stack 0
   129                           
   130                           ;initializer for I2C_LCD_SetCursor@F8620
   131  01411E  00                 	db	0
   132  01411F  40                 	db	64
   133                           
   134                           ;initializer for epoch_to_caltime@month_cache
   135  014120  01                 	db	1
   136                           
   137                           	psect	mediumconst
   138  00FD56                     __pmediumconst:
   139                           	opt stack 0
   140  00FD56  00                 	db	0
   141  00FD57                     _dpowers:
   142                           	opt stack 0
   143  00FD57  0001               	dw	1
   144  00FD59  000A               	dw	10
   145  00FD5B  0064               	dw	100
   146  00FD5D  03E8               	dw	1000
   147  00FD5F  2710               	dw	10000
   148  00FD61                     __end_of_dpowers:
   149                           	opt stack 0
   150  00FD61                     _USB_SD_Ptr:
   151                           	opt stack 0
   152  00FD61  42                 	db	low _sd000
   153  00FD62  FE                 	db	high _sd000
   154  00FD63  AC                 	db	low _sd001
   155  00FD64  FD                 	db	high _sd001
   156  00FD65  E0                 	db	low _sd002
   157  00FD66  FD                 	db	high _sd002
   158  00FD67                     __end_of_USB_SD_Ptr:
   159                           	opt stack 0
   160  00FD67                     _USB_CD_Ptr:
   161                           	opt stack 0
   162  00FD67  69                 	db	low _configDescriptor1
   163  00FD68  FD                 	db	high _configDescriptor1
   164  00FD69                     __end_of_USB_CD_Ptr:
   165                           	opt stack 0
   166  00FD69                     _configDescriptor1:
   167                           	opt stack 0
   168  00FD69  09                 	db	9
   169  00FD6A  02                 	db	2
   170  00FD6B  43                 	db	67
   171  00FD6C  00                 	db	0
   172  00FD6D  02                 	db	2
   173  00FD6E  01                 	db	1
   174  00FD6F  00                 	db	0
   175  00FD70  C0                 	db	192
   176  00FD71  32                 	db	50
   177  00FD72  09                 	db	9
   178  00FD73  04                 	db	4
   179  00FD74  00                 	db	0
   180  00FD75  00                 	db	0
   181  00FD76  01                 	db	1
   182  00FD77  02                 	db	2
   183  00FD78  02                 	db	2
   184  00FD79  01                 	db	1
   185  00FD7A  00                 	db	0
   186  00FD7B  05                 	db	5
   187  00FD7C  24                 	db	36
   188  00FD7D  00                 	db	0
   189  00FD7E  10                 	db	16
   190  00FD7F  01                 	db	1
   191  00FD80  04                 	db	4
   192  00FD81  24                 	db	36
   193  00FD82  02                 	db	2
   194  00FD83  02                 	db	2
   195  00FD84  05                 	db	5
   196  00FD85  24                 	db	36
   197  00FD86  06                 	db	6
   198  00FD87  00                 	db	0
   199  00FD88  01                 	db	1
   200  00FD89  05                 	db	5
   201  00FD8A  24                 	db	36
   202  00FD8B  01                 	db	1
   203  00FD8C  00                 	db	0
   204  00FD8D  01                 	db	1
   205  00FD8E  07                 	db	7
   206  00FD8F  05                 	db	5
   207  00FD90  81                 	db	129
   208  00FD91  03                 	db	3
   209  00FD92  08                 	db	8
   210  00FD93  00                 	db	0
   211  00FD94  02                 	db	2
   212  00FD95  09                 	db	9
   213  00FD96  04                 	db	4
   214  00FD97  01                 	db	1
   215  00FD98  00                 	db	0
   216  00FD99  02                 	db	2
   217  00FD9A  0A                 	db	10
   218  00FD9B  00                 	db	0
   219  00FD9C  00                 	db	0
   220  00FD9D  00                 	db	0
   221  00FD9E  07                 	db	7
   222  00FD9F  05                 	db	5
   223  00FDA0  02                 	db	2
   224  00FDA1  02                 	db	2
   225  00FDA2  40                 	db	64
   226  00FDA3  00                 	db	0
   227  00FDA4  00                 	db	0
   228  00FDA5  07                 	db	7
   229  00FDA6  05                 	db	5
   230  00FDA7  82                 	db	130
   231  00FDA8  02                 	db	2
   232  00FDA9  40                 	db	64
   233  00FDAA  00                 	db	0
   234  00FDAB  00                 	db	0
   235  00FDAC                     __end_of_configDescriptor1:
   236                           	opt stack 0
   237  00FDAC                     _sd001:
   238                           	opt stack 0
   239  00FDAC  34                 	db	52
   240  00FDAD  03                 	db	3
   241  00FDAE  004D               	dw	77
   242  00FDB0  0069               	dw	105
   243  00FDB2  0063               	dw	99
   244  00FDB4  0072               	dw	114
   245  00FDB6  006F               	dw	111
   246  00FDB8  0063               	dw	99
   247  00FDBA  0068               	dw	104
   248  00FDBC  0069               	dw	105
   249  00FDBE  0070               	dw	112
   250  00FDC0  0020               	dw	32
   251  00FDC2  0054               	dw	84
   252  00FDC4  0065               	dw	101
   253  00FDC6  0063               	dw	99
   254  00FDC8  0068               	dw	104
   255  00FDCA  006E               	dw	110
   256  00FDCC  006F               	dw	111
   257  00FDCE  006C               	dw	108
   258  00FDD0  006F               	dw	111
   259  00FDD2  0067               	dw	103
   260  00FDD4  0079               	dw	121
   261  00FDD6  0020               	dw	32
   262  00FDD8  0049               	dw	73
   263  00FDDA  006E               	dw	110
   264  00FDDC  0063               	dw	99
   265  00FDDE  002E               	dw	46
   266  00FDE0                     __end_of_sd001:
   267                           	opt stack 0
   268  00FDE0                     _sd002:
   269                           	opt stack 0
   270  00FDE0  34                 	db	52
   271  00FDE1  03                 	db	3
   272  00FDE2  0043               	dw	67
   273  00FDE4  0044               	dw	68
   274  00FDE6  0043               	dw	67
   275  00FDE8  0020               	dw	32
   276  00FDEA  0052               	dw	82
   277  00FDEC  0053               	dw	83
   278  00FDEE  002D               	dw	45
   279  00FDF0  0032               	dw	50
   280  00FDF2  0033               	dw	51
   281  00FDF4  0032               	dw	50
   282  00FDF6  0020               	dw	32
   283  00FDF8  0045               	dw	69
   284  00FDFA  006D               	dw	109
   285  00FDFC  0075               	dw	117
   286  00FDFE  006C               	dw	108
   287  00FE00  0061               	dw	97
   288  00FE02  0074               	dw	116
   289  00FE04  0069               	dw	105
   290  00FE06  006F               	dw	111
   291  00FE08  006E               	dw	110
   292  00FE0A  0020               	dw	32
   293  00FE0C  0044               	dw	68
   294  00FE0E  0065               	dw	101
   295  00FE10  006D               	dw	109
   296  00FE12  006F               	dw	111
   297  00FE14                     __end_of_sd002:
   298                           	opt stack 0
   299  00FE14                     _weekday_3char:
   300                           	opt stack 0
   301  00FE14  53                 	db	83
   302  00FE15  55                 	db	85
   303  00FE16  4E                 	db	78
   304  00FE17  00                 	db	0
   305  00FE18  4D                 	db	77
   306  00FE19  4F                 	db	79
   307  00FE1A  4E                 	db	78
   308  00FE1B  00                 	db	0
   309  00FE1C  54                 	db	84
   310  00FE1D  55                 	db	85
   311  00FE1E  45                 	db	69
   312  00FE1F  00                 	db	0
   313  00FE20  57                 	db	87
   314  00FE21  45                 	db	69
   315  00FE22  44                 	db	68
   316  00FE23  00                 	db	0
   317  00FE24  54                 	db	84
   318  00FE25  48                 	db	72
   319  00FE26  55                 	db	85
   320  00FE27  00                 	db	0
   321  00FE28  46                 	db	70
   322  00FE29  52                 	db	82
   323  00FE2A  49                 	db	73
   324  00FE2B  00                 	db	0
   325  00FE2C  53                 	db	83
   326  00FE2D  41                 	db	65
   327  00FE2E  54                 	db	84
   328  00FE2F  00                 	db	0
   329  00FE30                     __end_of_weekday_3char:
   330                           	opt stack 0
   331  00FE30                     _device_dsc:
   332                           	opt stack 0
   333  00FE30  12                 	db	18
   334  00FE31  01                 	db	1
   335  00FE32  0200               	dw	512
   336  00FE34  02                 	db	2
   337  00FE35  00                 	db	0
   338  00FE36  00                 	db	0
   339  00FE37  08                 	db	8
   340  00FE38  04D8               	dw	1240
   341  00FE3A  000A               	dw	10
   342  00FE3C  0100               	dw	256
   343  00FE3E  01                 	db	1
   344  00FE3F  02                 	db	2
   345  00FE40  00                 	db	0
   346  00FE41  01                 	db	1
   347  00FE42                     __end_of_device_dsc:
   348                           	opt stack 0
   349  00FE42                     _sd000:
   350                           	opt stack 0
   351  00FE42  04                 	db	4
   352  00FE43  03                 	db	3
   353  00FE44  0409               	dw	1033
   354  00FE46                     __end_of_sd000:
   355                           	opt stack 0
   356  0000                     _ANCON0	set	3912
   357  0000                     _ANCON1	set	3913
   358  0000                     _PADCFG1bits	set	3900
   359  0000                     _RTCCAL	set	3902
   360  0000                     _RTCCFGbits	set	3903
   361  0000                     _RTCVALH	set	3899
   362  0000                     _RTCVALL	set	3898
   363  0000                     _T5CONbits	set	3874
   364  0000                     _UADDR	set	3896
   365  0000                     _UCFG	set	3897
   366  0000                     _UEIE	set	3895
   367  0000                     _UEP0bits	set	3878
   368  0000                     _UIE	set	3894
   369  0000                     _UIEbits	set	3894
   370  0000                     _UEP0	set	3878
   371  0000                     _UEP1	set	3879
   372  0000                     _ADRES	set	4035
   373  0000                     _ADCON0bits	set	4034
   374  0000                     _ADCON1bits	set	4033
   375  0000                     _BAUDCON1bits	set	3966
   376  0000                     _CTMUCONH	set	4019
   377  0000                     _CTMUCONHbits	set	4019
   378  0000                     _CTMUCONL	set	4018
   379  0000                     _CTMUCONLbits	set	4018
   380  0000                     _CTMUICON	set	4017
   381  0000                     _EECON2	set	4007
   382  0000                     _INTCON2bits	set	4081
   383  0000                     _INTCONbits	set	4082
   384  0000                     _IPR1bits	set	3999
   385  0000                     _IPR2bits	set	4002
   386  0000                     _IPR5bits	set	3993
   387  0000                     _OSCCONbits	set	4051
   388  0000                     _OSCTUNEbits	set	3995
   389  0000                     _PIE1bits	set	3997
   390  0000                     _PIE2bits	set	4000
   391  0000                     _PIE5bits	set	3985
   392  0000                     _PIR1bits	set	3998
   393  0000                     _PIR2bits	set	4001
   394  0000                     _PIR5bits	set	3992
   395  0000                     _RCONbits	set	4048
   396  0000                     _RCREG1	set	4015
   397  0000                     _RCSTA1bits	set	4012
   398  0000                     _SPBRG1	set	4016
   399  0000                     _SPBRGH1	set	3967
   400  0000                     _SSP1ADD	set	4040
   401  0000                     _SSP1BUF	set	4041
   402  0000                     _SSP1CON1	set	4038
   403  0000                     _SSP1CON1bits	set	4038
   404  0000                     _SSP1CON2	set	4037
   405  0000                     _SSP1CON2bits	set	4037
   406  0000                     _SSP1STAT	set	4039
   407  0000                     _SSP1STATbits	set	4039
   408  0000                     _T0CONbits	set	4053
   409  0000                     _T1CONbits	set	4045
   410  0000                     _T3CONbits	set	3961
   411  0000                     _TMR1H	set	4047
   412  0000                     _TRISA	set	3986
   413  0000                     _TRISB	set	3987
   414  0000                     _TRISC	set	3988
   415  0000                     _TXREG1	set	4014
   416  0000                     _TXSTA1bits	set	4013
   417  0000                     _UCON	set	3941
   418  0000                     _UCONbits	set	3941
   419  0000                     _UEIR	set	3939
   420  0000                     _UIR	set	3938
   421  0000                     _UIRbits	set	3938
   422  0000                     _USTAT	set	3940
   423  0000                     _BCL1IF	set	32011
   424  0000                     _LATB2	set	31826
   425  0000                     _SSP1IF	set	31987
   426  00FE46                     STR_45:
   427  00FE46  09                 	db	9
   428  00FE47  2A                 	db	42
   429  00FE48  2A                 	db	42
   430  00FE49  2A                 	db	42
   431  00FE4A  2A                 	db	42
   432  00FE4B  2A                 	db	42
   433  00FE4C  2A                 	db	42
   434  00FE4D  2A                 	db	42
   435  00FE4E  2A                 	db	42
   436  00FE4F  2A                 	db	42
   437  00FE50  2A                 	db	42
   438  00FE51  2A                 	db	42
   439  00FE52  2A                 	db	42
   440  00FE53  2A                 	db	42
   441  00FE54  2A                 	db	42
   442  00FE55  2A                 	db	42
   443  00FE56  2A                 	db	42
   444  00FE57  2A                 	db	42
   445  00FE58  2A                 	db	42
   446  00FE59  2A                 	db	42
   447  00FE5A  2A                 	db	42
   448  00FE5B  2A                 	db	42
   449  00FE5C  2A                 	db	42
   450  00FE5D  2A                 	db	42
   451  00FE5E  2A                 	db	42
   452  00FE5F  2A                 	db	42
   453  00FE60  2A                 	db	42
   454  00FE61  2A                 	db	42
   455  00FE62  2A                 	db	42
   456  00FE63  2A                 	db	42
   457  00FE64  2A                 	db	42
   458  00FE65  0A                 	db	10
   459  00FE66  09                 	db	9
   460  00FE67  2A                 	db	42
   461  00FE68  2A                 	db	42
   462  00FE69  2A                 	db	42
   463  00FE6A  2A                 	db	42
   464  00FE6B  20                 	db	32
   465  00FE6C  50                 	db	80	;'P'
   466  00FE6D  49                 	db	73	;'I'
   467  00FE6E  43                 	db	67	;'C'
   468  00FE6F  31                 	db	49	;'1'
   469  00FE70  38                 	db	56	;'8'
   470  00FE71  46                 	db	70	;'F'
   471  00FE72  32                 	db	50	;'2'
   472  00FE73  37                 	db	55	;'7'
   473  00FE74  4A                 	db	74	;'J'
   474  00FE75  35                 	db	53	;'5'
   475  00FE76  33                 	db	51	;'3'
   476  00FE77  20                 	db	32
   477  00FE78  74                 	db	116	;'t'
   478  00FE79  65                 	db	101	;'e'
   479  00FE7A  6D                 	db	109	;'m'
   480  00FE7B  70                 	db	112	;'p'
   481  00FE7C  6C                 	db	108	;'l'
   482  00FE7D  61                 	db	97	;'a'
   483  00FE7E  74                 	db	116	;'t'
   484  00FE7F  65                 	db	101	;'e'
   485  00FE80  20                 	db	32
   486  00FE81  2A                 	db	42
   487  00FE82  2A                 	db	42
   488  00FE83  2A                 	db	42
   489  00FE84  2A                 	db	42
   490  00FE85  0A                 	db	10
   491  00FE86  09                 	db	9
   492  00FE87  2A                 	db	42
   493  00FE88  2A                 	db	42
   494  00FE89  2A                 	db	42
   495  00FE8A  2A                 	db	42
   496  00FE8B  20                 	db	32
   497  00FE8C  4D                 	db	77	;'M'
   498  00FE8D  61                 	db	97	;'a'
   499  00FE8E  64                 	db	100	;'d'
   500  00FE8F  65                 	db	101	;'e'
   501  00FE90  20                 	db	32
   502  00FE91  62                 	db	98	;'b'
   503  00FE92  79                 	db	121	;'y'
   504  00FE93  20                 	db	32
   505  00FE94  40                 	db	64	;'@'
   506  00FE95  52                 	db	82	;'R'
   507  00FE96  79                 	db	121	;'y'
   508  00FE97  6F                 	db	111	;'o'
   509  00FE98  6B                 	db	107	;'k'
   510  00FE99  65                 	db	101	;'e'
   511  00FE9A  72                 	db	114	;'r'
   512  00FE9B  69                 	db	105	;'i'
   513  00FE9C  31                 	db	49	;'1'
   514  00FE9D  34                 	db	52	;'4'
   515  00FE9E  20                 	db	32
   516  00FE9F  20                 	db	32
   517  00FEA0  20                 	db	32
   518  00FEA1  2A                 	db	42
   519  00FEA2  2A                 	db	42
   520  00FEA3  2A                 	db	42
   521  00FEA4  2A                 	db	42
   522  00FEA5  0A                 	db	10
   523  00FEA6  09                 	db	9
   524  00FEA7  2A                 	db	42
   525  00FEA8  2A                 	db	42
   526  00FEA9  2A                 	db	42
   527  00FEAA  2A                 	db	42
   528  00FEAB  2A                 	db	42
   529  00FEAC  2A                 	db	42
   530  00FEAD  2A                 	db	42
   531  00FEAE  2A                 	db	42
   532  00FEAF  2A                 	db	42
   533  00FEB0  2A                 	db	42
   534  00FEB1  2A                 	db	42
   535  00FEB2  2A                 	db	42
   536  00FEB3  2A                 	db	42
   537  00FEB4  2A                 	db	42
   538  00FEB5  2A                 	db	42
   539  00FEB6  2A                 	db	42
   540  00FEB7  2A                 	db	42
   541  00FEB8  2A                 	db	42
   542  00FEB9  2A                 	db	42
   543  00FEBA  2A                 	db	42
   544  00FEBB  2A                 	db	42
   545  00FEBC  2A                 	db	42
   546  00FEBD  2A                 	db	42
   547  00FEBE  2A                 	db	42
   548  00FEBF  2A                 	db	42
   549  00FEC0  2A                 	db	42
   550  00FEC1  2A                 	db	42
   551  00FEC2  2A                 	db	42
   552  00FEC3  2A                 	db	42
   553  00FEC4  2A                 	db	42
   554  00FEC5  0A                 	db	10
   555  00FEC6  0A                 	db	10
   556  00FEC7  09                 	db	9
   557  00FEC8  70                 	db	112	;'p'
   558  00FEC9  72                 	db	114	;'r'
   559  00FECA  69                 	db	105	;'i'
   560  00FECB  6E                 	db	110	;'n'
   561  00FECC  74                 	db	116	;'t'
   562  00FECD  5F                 	db	95	;'_'
   563  00FECE  74                 	db	116	;'t'
   564  00FECF  69                 	db	105	;'i'
   565  00FED0  6D                 	db	109	;'m'
   566  00FED1  65                 	db	101	;'e'
   567  00FED2  28                 	db	40
   568  00FED3  74                 	db	116	;'t'
   569  00FED4  29                 	db	41
   570  00FED5  0A                 	db	10
   571  00FED6  09                 	db	9
   572  00FED7  61                 	db	97	;'a'
   573  00FED8  64                 	db	100	;'d'
   574  00FED9  6A                 	db	106	;'j'
   575  00FEDA  75                 	db	117	;'u'
   576  00FEDB  73                 	db	115	;'s'
   577  00FEDC  74                 	db	116	;'t'
   578  00FEDD  5F                 	db	95	;'_'
   579  00FEDE  74                 	db	116	;'t'
   580  00FEDF  69                 	db	105	;'i'
   581  00FEE0  6D                 	db	109	;'m'
   582  00FEE1  65                 	db	101	;'e'
   583  00FEE2  28                 	db	40
   584  00FEE3  61                 	db	97	;'a'
   585  00FEE4  74                 	db	116	;'t'
   586  00FEE5  29                 	db	41
   587  00FEE6  20                 	db	32
   588  00FEE7  5B                 	db	91	;'['
   589  00FEE8  68                 	db	104	;'h'
   590  00FEE9  61                 	db	97	;'a'
   591  00FEEA  6E                 	db	110	;'n'
   592  00FEEB  64                 	db	100	;'d'
   593  00FEEC  3A                 	db	58	;':'
   594  00FEED  79                 	db	121	;'y'
   595  00FEEE  2C                 	db	44
   596  00FEEF  4D                 	db	77	;'M'
   597  00FEF0  2C                 	db	44
   598  00FEF1  64                 	db	100	;'d'
   599  00FEF2  2C                 	db	44
   600  00FEF3  68                 	db	104	;'h'
   601  00FEF4  2C                 	db	44
   602  00FEF5  6D                 	db	109	;'m'
   603  00FEF6  2C                 	db	44
   604  00FEF7  73                 	db	115	;'s'
   605  00FEF8  5D                 	db	93	;']'
   606  00FEF9  20                 	db	32
   607  00FEFA  5B                 	db	91	;'['
   608  00FEFB  76                 	db	118	;'v'
   609  00FEFC  61                 	db	97	;'a'
   610  00FEFD  6C                 	db	108	;'l'
   611  00FEFE  75                 	db	117	;'u'
   612  00FEFF  65                 	db	101	;'e'
   613  00FF00  28                 	db	40
   614  00FF01  64                 	db	100	;'d'
   615  00FF02  65                 	db	101	;'e'
   616  00FF03  63                 	db	99	;'c'
   617  00FF04  69                 	db	105	;'i'
   618  00FF05  6D                 	db	109	;'m'
   619  00FF06  61                 	db	97	;'a'
   620  00FF07  6C                 	db	108	;'l'
   621  00FF08  29                 	db	41
   622  00FF09  5D                 	db	93	;']'
   623  00FF0A  0A                 	db	10
   624  00FF0B  0A                 	db	10
   625  00FF0C  09                 	db	9
   626  00FF0D  66                 	db	102	;'f'
   627  00FF0E  6F                 	db	111	;'o'
   628  00FF0F  72                 	db	114	;'r'
   629  00FF10  20                 	db	32
   630  00FF11  44                 	db	68	;'D'
   631  00FF12  65                 	db	101	;'e'
   632  00FF13  76                 	db	118	;'v'
   633  00FF14  65                 	db	101	;'e'
   634  00FF15  6C                 	db	108	;'l'
   635  00FF16  6F                 	db	111	;'o'
   636  00FF17  70                 	db	112	;'p'
   637  00FF18  70                 	db	112	;'p'
   638  00FF19  65                 	db	101	;'e'
   639  00FF1A  72                 	db	114	;'r'
   640  00FF1B  0A                 	db	10
   641  00FF1C  09                 	db	9
   642  00FF1D  52                 	db	82	;'R'
   643  00FF1E  45                 	db	69	;'E'
   644  00FF1F  53                 	db	83	;'S'
   645  00FF20  45                 	db	69	;'E'
   646  00FF21  54                 	db	84	;'T'
   647  00FF22  28                 	db	40
   648  00FF23  29                 	db	41
   649  00FF24  3B                 	db	59	;';'
   650  00FF25  0A                 	db	10
   651  00FF26  09                 	db	9
   652  00FF27  62                 	db	98	;'b'
   653  00FF28  6F                 	db	111	;'o'
   654  00FF29  6F                 	db	111	;'o'
   655  00FF2A  74                 	db	116	;'t'
   656  00FF2B  6C                 	db	108	;'l'
   657  00FF2C  6F                 	db	111	;'o'
   658  00FF2D  61                 	db	97	;'a'
   659  00FF2E  64                 	db	100	;'d'
   660  00FF2F  0A                 	db	10
   661  00FF30  00                 	db	0
   662  00FF31                     STR_23:
   663  00FF31  09                 	db	9
   664  00FF32  32                 	db	50	;'2'
   665  00FF33  30                 	db	48	;'0'
   666  00FF34  25                 	db	37
   667  00FF35  30                 	db	48	;'0'
   668  00FF36  32                 	db	50	;'2'
   669  00FF37  64                 	db	100	;'d'
   670  00FF38  2F                 	db	47
   671  00FF39  25                 	db	37
   672  00FF3A  30                 	db	48	;'0'
   673  00FF3B  32                 	db	50	;'2'
   674  00FF3C  64                 	db	100	;'d'
   675  00FF3D  2F                 	db	47
   676  00FF3E  25                 	db	37
   677  00FF3F  30                 	db	48	;'0'
   678  00FF40  32                 	db	50	;'2'
   679  00FF41  64                 	db	100	;'d'
   680  00FF42  28                 	db	40
   681  00FF43  25                 	db	37
   682  00FF44  73                 	db	115	;'s'
   683  00FF45  29                 	db	41
   684  00FF46  25                 	db	37
   685  00FF47  30                 	db	48	;'0'
   686  00FF48  32                 	db	50	;'2'
   687  00FF49  64                 	db	100	;'d'
   688  00FF4A  3A                 	db	58	;':'
   689  00FF4B  25                 	db	37
   690  00FF4C  30                 	db	48	;'0'
   691  00FF4D  32                 	db	50	;'2'
   692  00FF4E  64                 	db	100	;'d'
   693  00FF4F  2D                 	db	45
   694  00FF50  25                 	db	37
   695  00FF51  30                 	db	48	;'0'
   696  00FF52  32                 	db	50	;'2'
   697  00FF53  64                 	db	100	;'d'
   698  00FF54  0A                 	db	10
   699  00FF55  00                 	db	0
   700  00FF56                     STR_42:
   701  00FF56  42                 	db	66	;'B'
   702  00FF57  6F                 	db	111	;'o'
   703  00FF58  6F                 	db	111	;'o'
   704  00FF59  74                 	db	116	;'t'
   705  00FF5A  6C                 	db	108	;'l'
   706  00FF5B  6F                 	db	111	;'o'
   707  00FF5C  61                 	db	97	;'a'
   708  00FF5D  64                 	db	100	;'d'
   709  00FF5E  65                 	db	101	;'e'
   710  00FF5F  72                 	db	114	;'r'
   711  00FF60  20                 	db	32
   712  00FF61  6D                 	db	109	;'m'
   713  00FF62  6F                 	db	111	;'o'
   714  00FF63  64                 	db	100	;'d'
   715  00FF64  65                 	db	101	;'e'
   716  00FF65  00                 	db	0
   717  00FF66                     STR_41:
   718  00FF66  50                 	db	80	;'P'
   719  00FF67  49                 	db	73	;'I'
   720  00FF68  43                 	db	67	;'C'
   721  00FF69  31                 	db	49	;'1'
   722  00FF6A  38                 	db	56	;'8'
   723  00FF6B  46                 	db	70	;'F'
   724  00FF6C  32                 	db	50	;'2'
   725  00FF6D  37                 	db	55	;'7'
   726  00FF6E  4A                 	db	74	;'J'
   727  00FF6F  35                 	db	53	;'5'
   728  00FF70  33                 	db	51	;'3'
   729  00FF71  00                 	db	0
   730  00FF72                     STR_28:
   731  00FF72  61                 	db	97	;'a'
   732  00FF73  64                 	db	100	;'d'
   733  00FF74  6A                 	db	106	;'j'
   734  00FF75  75                 	db	117	;'u'
   735  00FF76  73                 	db	115	;'s'
   736  00FF77  74                 	db	116	;'t'
   737  00FF78  5F                 	db	95	;'_'
   738  00FF79  74                 	db	116	;'t'
   739  00FF7A  69                 	db	105	;'i'
   740  00FF7B  6D                 	db	109	;'m'
   741  00FF7C  65                 	db	101	;'e'
   742  00FF7D  00                 	db	0
   743  00FF7E                     STR_25:
   744  00FF7E  70                 	db	112	;'p'
   745  00FF7F  72                 	db	114	;'r'
   746  00FF80  69                 	db	105	;'i'
   747  00FF81  6E                 	db	110	;'n'
   748  00FF82  74                 	db	116	;'t'
   749  00FF83  5F                 	db	95	;'_'
   750  00FF84  74                 	db	116	;'t'
   751  00FF85  69                 	db	105	;'i'
   752  00FF86  6D                 	db	109	;'m'
   753  00FF87  65                 	db	101	;'e'
   754  00FF88  00                 	db	0
   755  00FF89                     STR_46:
   756  00FF89  52                 	db	82	;'R'
   757  00FF8A  45                 	db	69	;'E'
   758  00FF8B  53                 	db	83	;'S'
   759  00FF8C  45                 	db	69	;'E'
   760  00FF8D  54                 	db	84	;'T'
   761  00FF8E  28                 	db	40
   762  00FF8F  29                 	db	41
   763  00FF90  3B                 	db	59	;';'
   764  00FF91  00                 	db	0
   765  00FF92                     STR_47:
   766  00FF92  62                 	db	98	;'b'
   767  00FF93  6F                 	db	111	;'o'
   768  00FF94  6F                 	db	111	;'o'
   769  00FF95  74                 	db	116	;'t'
   770  00FF96  6C                 	db	108	;'l'
   771  00FF97  6F                 	db	111	;'o'
   772  00FF98  61                 	db	97	;'a'
   773  00FF99  64                 	db	100	;'d'
   774  00FF9A  00                 	db	0
   775  00FF9B                     STR_49:
   776  00FF9B  54                 	db	84	;'T'
   777  00FF9C  65                 	db	101	;'e'
   778  00FF9D  6D                 	db	109	;'m'
   779  00FF9E  70                 	db	112	;'p'
   780  00FF9F  6C                 	db	108	;'l'
   781  00FFA0  61                 	db	97	;'a'
   782  00FFA1  74                 	db	116	;'t'
   783  00FFA2  65                 	db	101	;'e'
   784  00FFA3  00                 	db	0
   785  00FFA4                     STR_15:
   786  00FFA4  20                 	db	32
   787  00FFA5  20                 	db	32
   788  00FFA6  20                 	db	32
   789  00FFA7  20                 	db	32
   790  00FFA8  20                 	db	32
   791  00FFA9  20                 	db	32
   792  00FFAA  20                 	db	32
   793  00FFAB  20                 	db	32
   794  00FFAC  00                 	db	0
   795  00FFAD                     STR_24:
   796  00FFAD  09                 	db	9
   797  00FFAE  65                 	db	101	;'e'
   798  00FFAF  72                 	db	114	;'r'
   799  00FFB0  72                 	db	114	;'r'
   800  00FFB1  6F                 	db	111	;'o'
   801  00FFB2  72                 	db	114	;'r'
   802  00FFB3  0A                 	db	10
   803  00FFB4  00                 	db	0
   804  00FFB5                     STR_50:
   805  00FFB5  28                 	db	40
   806  00FFB6  6E                 	db	110	;'n'
   807  00FFB7  75                 	db	117	;'u'
   808  00FFB8  6C                 	db	108	;'l'
   809  00FFB9  6C                 	db	108	;'l'
   810  00FFBA  29                 	db	41
   811  00FFBB  00                 	db	0
   812  00FFBC                     STR_40:
   813  00FFBC  73                 	db	115	;'s'
   814  00FFBD  65                 	db	101	;'e'
   815  00FFBE  63                 	db	99	;'c'
   816  00FFBF  6F                 	db	111	;'o'
   817  00FFC0  6E                 	db	110	;'n'
   818  00FFC1  64                 	db	100	;'d'
   819  00FFC2  00                 	db	0
   820  00FFC3                     STR_38:
   821  00FFC3  6D                 	db	109	;'m'
   822  00FFC4  69                 	db	105	;'i'
   823  00FFC5  6E                 	db	110	;'n'
   824  00FFC6  75                 	db	117	;'u'
   825  00FFC7  74                 	db	116	;'t'
   826  00FFC8  65                 	db	101	;'e'
   827  00FFC9  00                 	db	0
   828  00FFCA                     STR_32:
   829  00FFCA  6D                 	db	109	;'m'
   830  00FFCB  6F                 	db	111	;'o'
   831  00FFCC  6E                 	db	110	;'n'
   832  00FFCD  74                 	db	116	;'t'
   833  00FFCE  68                 	db	104	;'h'
   834  00FFCF  00                 	db	0
   835  00FFD0                     STR_43:
   836  00FFD0  68                 	db	104	;'h'
   837  00FFD1  65                 	db	101	;'e'
   838  00FFD2  6C                 	db	108	;'l'
   839  00FFD3  70                 	db	112	;'p'
   840  00FFD4  00                 	db	0
   841  00FFD5                     STR_30:
   842  00FFD5  79                 	db	121	;'y'
   843  00FFD6  65                 	db	101	;'e'
   844  00FFD7  61                 	db	97	;'a'
   845  00FFD8  72                 	db	114	;'r'
   846  00FFD9  00                 	db	0
   847  00FFDA                     STR_36:
   848  00FFDA  68                 	db	104	;'h'
   849  00FFDB  6F                 	db	111	;'o'
   850  00FFDC  75                 	db	117	;'u'
   851  00FFDD  72                 	db	114	;'r'
   852  00FFDE  00                 	db	0
   853  00FFDF                     STR_1:
   854  00FFDF  25                 	db	37
   855  00FFE0  30                 	db	48	;'0'
   856  00FFE1  32                 	db	50	;'2'
   857  00FFE2  64                 	db	100	;'d'
   858  00FFE3  00                 	db	0
   859  00FFE4                     STR_19:
   860  00FFE4  08                 	db	8
   861  00FFE5  20                 	db	32
   862  00FFE6  08                 	db	8
   863  00FFE7  00                 	db	0
   864  00FFE8                     STR_34:
   865  00FFE8  64                 	db	100	;'d'
   866  00FFE9  61                 	db	97	;'a'
   867  00FFEA  79                 	db	121	;'y'
   868  00FFEB  00                 	db	0
   869  00FFEC                     STR_27:
   870  00FFEC  61                 	db	97	;'a'
   871  00FFED  74                 	db	116	;'t'
   872  00FFEE  00                 	db	0
   873  00FFEF                     STR_44:
   874  00FFEF  3F                 	db	63	;'?'
   875  00FFF0  00                 	db	0
   876  00FFF1                     STR_31:
   877  00FFF1  4D                 	db	77	;'M'
   878  00FFF2  00                 	db	0
   879  00FFF3                     STR_37:
   880  00FFF3  6D                 	db	109	;'m'
   881  00FFF4  00                 	db	0
   882  00FFF5                     STR_39:
   883  00FFF5  73                 	db	115	;'s'
   884  00FFF6  00                 	db	0
   885  00FFF7  28                 	db	40
   886  00FFF8  00                 	db	0
   887  00FFF9                     STR_9:
   888  00FFF9  2D                 	db	45
   889  00FFFA  00                 	db	0
   890  00FFFB                     STR_4:
   891  00FFFB  2F                 	db	47
   892  00FFFC  00                 	db	0
   893  00FFFD                     STR_7:
   894  00FFFD  3A                 	db	58	;':'
   895  00FFFE  00                 	db	0
   896  0000                     
   897                           ; #config settings
   898  00FFFF  00                 	db	0	; dummy byte at the end
   899  0000                     
   900                           	psect	cinit
   901  013562                     __pcinit:
   902                           	opt stack 0
   903  013562                     start_initialization:
   904                           	opt stack 0
   905  013562                     __initialization:
   906                           	opt stack 0
   907                           
   908                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   909  013562  EE03  F0CD         	lfsr	0,__pbssBIGRAMl
   910  013566  EE17 F0D0          	lfsr	1,2000
   911  01356A                     clear_0:
   912  01356A  6AEE               	clrf	postinc0,c
   913  01356C  50E5               	movf	postdec1,w,c
   914  01356E  50E1               	movf	fsr1l,w,c
   915  013570  E1FC               	bnz	clear_0
   916  013572  50E2               	movf	fsr1h,w,c
   917  013574  E1FA               	bnz	clear_0
   918                           
   919                           ; Clear objects allocated to BANK3 (100 bytes)
   920  013576  EE03  F069         	lfsr	0,__pbssBANK3
   921  01357A  0E64               	movlw	100
   922  01357C                     clear_1:
   923  01357C  6AEE               	clrf	postinc0,c
   924  01357E  06E8               	decf	wreg,f,c
   925  013580  E1FD               	bnz	clear_1
   926                           
   927                           ; Clear objects allocated to BANK2 (253 bytes)
   928  013582  EE02  F000         	lfsr	0,__pbssBANK2
   929  013586  0EFD               	movlw	253
   930  013588                     clear_2:
   931  013588  6AEE               	clrf	postinc0,c
   932  01358A  06E8               	decf	wreg,f,c
   933  01358C  E1FD               	bnz	clear_2
   934                           
   935                           ; Clear objects allocated to BANK1 (148 bytes)
   936  01358E  EE01  F000         	lfsr	0,__pbssBANK1
   937  013592  0E94               	movlw	148
   938  013594                     clear_3:
   939  013594  6AEE               	clrf	postinc0,c
   940  013596  06E8               	decf	wreg,f,c
   941  013598  E1FD               	bnz	clear_3
   942                           
   943                           ; Clear objects allocated to BANK0 (51 bytes)
   944  01359A  EE00  F0C9         	lfsr	0,__pbssBANK0
   945  01359E  0E33               	movlw	51
   946  0135A0                     clear_4:
   947  0135A0  6AEE               	clrf	postinc0,c
   948  0135A2  06E8               	decf	wreg,f,c
   949  0135A4  E1FD               	bnz	clear_4
   950                           
   951                           ; Clear objects allocated to COMRAM (44 bytes)
   952  0135A6  EE00  F001         	lfsr	0,__pbssCOMRAM
   953  0135AA  0E2C               	movlw	44
   954  0135AC                     clear_5:
   955  0135AC  6AEE               	clrf	postinc0,c
   956  0135AE  06E8               	decf	wreg,f,c
   957  0135B0  E1FD               	bnz	clear_5
   958                           
   959                           ; Initialize objects allocated to BANK0 (3 bytes)
   960                           ; load TBLPTR registers with __pidataBANK0
   961  0135B2  0E1E               	movlw	low __pidataBANK0
   962  0135B4  6EF6               	movwf	tblptrl,c
   963  0135B6  0E41               	movlw	high __pidataBANK0
   964  0135B8  6EF7               	movwf	tblptrh,c
   965  0135BA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   966  0135BC  6EF8               	movwf	tblptru,c
   967  0135BE  0009               	tblrd		*+	;fetch initializer
   968  0135C0  CFF5 F0FC          	movff	tablat,__pdataBANK0
   969  0135C4  0009               	tblrd		*+	;fetch initializer
   970  0135C6  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   971  0135CA  0009               	tblrd		*+	;fetch initializer
   972  0135CC  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   973  0135D0                     end_of_initialization:
   974                           	opt stack 0
   975  0135D0                     __end_of__initialization:
   976                           	opt stack 0
   977  0135D0  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   978  0135D2  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   979  0135D4  0100               	movlb	0
   980  0135D6  EF64  F09B         	goto	_main	;jump to C main() function
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1h	equ	0xFE2
   989                           fsr1l	equ	0xFE1
   990                           
   991                           	psect	bssCOMRAM
   992  000001                     __pbssCOMRAM:
   993                           	opt stack 0
   994  000001                     USBCBSendResume@delay_count:
   995                           	opt stack 0
   996  000001                     	ds	2
   997  000003                     _pBDTEntryEP0OutCurrent:
   998                           	opt stack 0
   999  000003                     	ds	2
  1000  000005                     _pBDTEntryEP0OutNext:
  1001                           	opt stack 0
  1002  000005                     	ds	2
  1003  000007                     _pDst:
  1004                           	opt stack 0
  1005  000007                     	ds	2
  1006  000009                     epoch_to_caltime@day_cache:
  1007                           	opt stack 0
  1008  000009                     	ds	2
  1009  00000B                     millis_timer@cnt:
  1010                           	opt stack 0
  1011  00000B                     	ds	2
  1012  00000D                     _BothEP0OutUOWNsSet:
  1013                           	opt stack 0
  1014  00000D                     	ds	1
  1015  00000E                     _RemoteWakeup:
  1016                           	opt stack 0
  1017  00000E                     	ds	1
  1018  00000F                     _USBDeferINDataStagePackets:
  1019                           	opt stack 0
  1020  00000F                     	ds	1
  1021  000010                     _USBDeferOUTDataStagePackets:
  1022                           	opt stack 0
  1023  000010                     	ds	1
  1024  000011                     _USBDeferStatusStagePacket:
  1025                           	opt stack 0
  1026  000011                     	ds	1
  1027  000012                     _USBDeviceState:
  1028                           	opt stack 0
  1029  000012                     	ds	1
  1030  000013                     _USBStatusStageEnabledFlag1:
  1031                           	opt stack 0
  1032  000013                     	ds	1
  1033  000014                     _USBStatusStageEnabledFlag2:
  1034                           	opt stack 0
  1035  000014                     	ds	1
  1036  000015                     _USBStatusStageTimeoutCounter:
  1037                           	opt stack 0
  1038  000015                     	ds	1
  1039  000016                     _cdc_trf_state:
  1040                           	opt stack 0
  1041  000016                     	ds	1
  1042  000017                     _controlTransferState:
  1043                           	opt stack 0
  1044  000017                     	ds	1
  1045  000018                     _control_signal_bitmap:
  1046                           	opt stack 0
  1047  000018                     	ds	1
  1048  000019                     _endpoint_number:
  1049                           	opt stack 0
  1050  000019                     	ds	1
  1051  00001A                     _shortPacketStatus:
  1052                           	opt stack 0
  1053  00001A                     	ds	1
  1054  00001B                     _now:
  1055                           	opt stack 0
  1056  00001B                     	ds	14
  1057  000029                     _USBAlternateInterface:
  1058                           	opt stack 0
  1059  000029                     	ds	2
  1060  00002B                     _USBActiveConfiguration:
  1061                           	opt stack 0
  1062  00002B                     	ds	1
  1063  00002C                     _USTATcopy:
  1064                           	opt stack 0
  1065  00002C                     	ds	1
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec1	equ	0xFE5
  1073                           fsr1h	equ	0xFE2
  1074                           fsr1l	equ	0xFE1
  1075                           
  1076                           	psect	bssBANK0
  1077  0000C9                     __pbssBANK0:
  1078                           	opt stack 0
  1079  0000C9                     _outPipes:
  1080                           	opt stack 0
  1081  0000C9                     	ds	9
  1082  0000D2                     _inPipes:
  1083                           	opt stack 0
  1084  0000D2                     	ds	6
  1085  0000D8                     _pBDTEntryIn:
  1086                           	opt stack 0
  1087  0000D8                     	ds	6
  1088  0000DE                     _pBDTEntryOut:
  1089                           	opt stack 0
  1090  0000DE                     	ds	6
  1091  0000E4                     _ep_data_in:
  1092                           	opt stack 0
  1093  0000E4                     	ds	3
  1094  0000E7                     _ep_data_out:
  1095                           	opt stack 0
  1096  0000E7                     	ds	3
  1097  0000EA                     _pCDCDst:
  1098                           	opt stack 0
  1099  0000EA                     	ds	3
  1100  0000ED                     _pCDCSrc:
  1101                           	opt stack 0
  1102  0000ED                     	ds	3
  1103  0000F0                     _CDCDataInHandle:
  1104                           	opt stack 0
  1105  0000F0                     	ds	2
  1106  0000F2                     _CDCDataOutHandle:
  1107                           	opt stack 0
  1108  0000F2                     	ds	2
  1109  0000F4                     RTCC_task@prev_halfsec:
  1110                           	opt stack 0
  1111  0000F4                     	ds	1
  1112  0000F5                     _USBBusIsSuspended:
  1113                           	opt stack 0
  1114  0000F5                     	ds	1
  1115  0000F6                     _cdc_mem_type:
  1116                           	opt stack 0
  1117  0000F6                     	ds	1
  1118  0000F7                     _cdc_rx_len:
  1119                           	opt stack 0
  1120  0000F7                     	ds	1
  1121  0000F8                     _cdc_tx_len:
  1122                           	opt stack 0
  1123  0000F8                     	ds	1
  1124  0000F9                     _time_change_flag:
  1125                           	opt stack 0
  1126  0000F9                     	ds	1
  1127  0000FA                     epoch_to_caltime@year_cache:
  1128                           	opt stack 0
  1129  0000FA                     	ds	1
  1130  0000FB                     terminal_task@command_init:
  1131                           	opt stack 0
  1132  0000FB                     	ds	1
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec1	equ	0xFE5
  1140                           fsr1h	equ	0xFE2
  1141                           fsr1l	equ	0xFE1
  1142                           
  1143                           	psect	dataBANK0
  1144  0000FC                     __pdataBANK0:
  1145                           	opt stack 0
  1146  0000FC                     I2C_LCD_SetCursor@F8620:
  1147                           	opt stack 0
  1148  0000FC                     	ds	2
  1149  0000FE                     epoch_to_caltime@month_cache:
  1150                           	opt stack 0
  1151  0000FE                     	ds	1
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           postdec1	equ	0xFE5
  1159                           fsr1h	equ	0xFE2
  1160                           fsr1l	equ	0xFE1
  1161                           
  1162                           	psect	bssBANK1
  1163  000100                     __pbssBANK1:
  1164                           	opt stack 0
  1165  000100                     _cdc_notice:
  1166                           	opt stack 0
  1167  000100                     	ds	10
  1168  00010A                     _BaudRateGen:
  1169                           	opt stack 0
  1170  00010A                     	ds	4
  1171  00010E                     _ms:
  1172                           	opt stack 0
  1173  00010E                     	ds	4
  1174  000112                     terminal_task@op0:
  1175                           	opt stack 0
  1176  000112                     	ds	25
  1177  00012B                     terminal_task@op1:
  1178                           	opt stack 0
  1179  00012B                     	ds	25
  1180  000144                     terminal_task@op2:
  1181                           	opt stack 0
  1182  000144                     	ds	25
  1183  00015D                     _dummy_encapsulated_cmd_response:
  1184                           	opt stack 0
  1185  00015D                     	ds	8
  1186  000165                     _uart_rx:
  1187                           	opt stack 0
  1188  000165                     	ds	8
  1189  00016D                     _uart_tx:
  1190                           	opt stack 0
  1191  00016D                     	ds	8
  1192  000175                     _usb_rx:
  1193                           	opt stack 0
  1194  000175                     	ds	8
  1195  00017D                     _usb_tx:
  1196                           	opt stack 0
  1197  00017D                     	ds	8
  1198  000185                     terminal_task@command:
  1199                           	opt stack 0
  1200  000185                     	ds	8
  1201  00018D                     _line_coding:
  1202                           	opt stack 0
  1203  00018D                     	ds	7
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           postdec1	equ	0xFE5
  1211                           fsr1h	equ	0xFE2
  1212                           fsr1l	equ	0xFE1
  1213                           
  1214                           	psect	bssBANK2
  1215  000200                     __pbssBANK2:
  1216                           	opt stack 0
  1217  000200                     main_init@usbrx:
  1218                           	opt stack 0
  1219  000200                     	ds	100
  1220  000264                     _cdc_data_rx:
  1221                           	opt stack 0
  1222  000264                     	ds	64
  1223  0002A4                     _cdc_data_tx:
  1224                           	opt stack 0
  1225  0002A4                     	ds	64
  1226  0002E4                     terminal_task@op3:
  1227                           	opt stack 0
  1228  0002E4                     	ds	25
  1229                           tblptru	equ	0xFF8
  1230                           tblptrh	equ	0xFF7
  1231                           tblptrl	equ	0xFF6
  1232                           tablat	equ	0xFF5
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           postdec1	equ	0xFE5
  1236                           fsr1h	equ	0xFE2
  1237                           fsr1l	equ	0xFE1
  1238                           
  1239                           	psect	bssBANK3
  1240  000369                     __pbssBANK3:
  1241                           	opt stack 0
  1242  000369                     main_init@uartrx:
  1243                           	opt stack 0
  1244  000369                     	ds	100
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1h	equ	0xFE2
  1253                           fsr1l	equ	0xFE1
  1254                           
  1255                           	psect	bssBIGRAMl
  1256  0003CD                     __pbssBIGRAMl:
  1257                           	opt stack 0
  1258  0003CD                     main_init@uarttx:
  1259                           	opt stack 0
  1260  0003CD                     	ds	1000
  1261  0007B5                     main_init@usbtx:
  1262                           	opt stack 0
  1263  0007B5                     	ds	1000
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           postinc0	equ	0xFEE
  1269                           wreg	equ	0xFE8
  1270                           postdec1	equ	0xFE5
  1271                           fsr1h	equ	0xFE2
  1272                           fsr1l	equ	0xFE1
  1273                           
  1274                           	psect	cstackBANK3
  1275  000300                     __pcstackBANK3:
  1276                           	opt stack 0
  1277  000300                     terminal_task@buf:
  1278                           	opt stack 0
  1279                           
  1280                           ; 100 bytes @ 0x0
  1281  000300                     	ds	100
  1282  000364                     _terminal_task$5935:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x64
  1286  000364                     	ds	2
  1287  000366                     terminal_task@i_4309:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x66
  1291  000366                     	ds	1
  1292  000367                     terminal_task@ascii:
  1293                           	opt stack 0
  1294                           
  1295                           ; 1 bytes @ 0x67
  1296  000367                     	ds	1
  1297  000368                     terminal_task@i:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x68
  1301  000368                     	ds	1
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           postinc0	equ	0xFEE
  1307                           wreg	equ	0xFE8
  1308                           postdec1	equ	0xFE5
  1309                           fsr1h	equ	0xFE2
  1310                           fsr1l	equ	0xFE1
  1311                           
  1312                           	psect	cstackBANK1
  1313  000194                     __pcstackBANK1:
  1314                           	opt stack 0
  1315  000194                     terminal_task@tx:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x0
  1319  000194                     	ds	2
  1320  000196                     terminal_task@rx:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x2
  1324  000196                     	ds	2
  1325  000198                     ??_terminal_task:
  1326                           
  1327                           ; 0 bytes @ 0x4
  1328  000198                     	ds	2
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1h	equ	0xFE2
  1337                           fsr1l	equ	0xFE1
  1338                           
  1339                           	psect	cstackBANK0
  1340  000060                     __pcstackBANK0:
  1341                           	opt stack 0
  1342  000060                     ??_isdigit:
  1343  000060                     ??_I2C_IdleCheck:
  1344  000060                     ??_timer0_init:
  1345  000060                     ??_timer3_init:
  1346  000060                     ??_x_to_d:
  1347  000060                     ?_strcmp:
  1348                           	opt stack 0
  1349  000060                     ?_USBTransferOnePacket:
  1350                           	opt stack 0
  1351  000060                     ?_ringbuf_num:
  1352                           	opt stack 0
  1353  000060                     ?___wmul:
  1354                           	opt stack 0
  1355  000060                     ?___awdiv:
  1356                           	opt stack 0
  1357  000060                     ?___awmod:
  1358                           	opt stack 0
  1359  000060                     ?___lwdiv:
  1360                           	opt stack 0
  1361  000060                     ?___lldiv:
  1362                           	opt stack 0
  1363  000060                     USBTransferOnePacket@dir:
  1364                           	opt stack 0
  1365  000060                     timer1_init@clock_select:
  1366                           	opt stack 0
  1367  000060                     _is_usb_available$4884:
  1368                           	opt stack 0
  1369  000060                     putUSBUSART@data:
  1370                           	opt stack 0
  1371  000060                     ringbuf_init@rb:
  1372                           	opt stack 0
  1373  000060                     ringbuf_num@rb:
  1374                           	opt stack 0
  1375  000060                     ringbuf_delete@rb:
  1376                           	opt stack 0
  1377  000060                     ___wmul@multiplier:
  1378                           	opt stack 0
  1379  000060                     ___awdiv@dividend:
  1380                           	opt stack 0
  1381  000060                     ___awmod@dividend:
  1382                           	opt stack 0
  1383  000060                     ___lwdiv@dividend:
  1384                           	opt stack 0
  1385  000060                     memset@p1:
  1386                           	opt stack 0
  1387  000060                     strcmp@s1:
  1388                           	opt stack 0
  1389  000060                     ___lldiv@dividend:
  1390                           	opt stack 0
  1391                           
  1392                           ; 4 bytes @ 0x0
  1393  000060                     	ds	1
  1394  000061                     ??_timer1_init:
  1395  000061                     I2C_IdleCheck@mask:
  1396                           	opt stack 0
  1397  000061                     timer0_init@prescaler:
  1398                           	opt stack 0
  1399  000061                     timer3_init@prescaler:
  1400                           	opt stack 0
  1401  000061                     x_to_d@hex:
  1402                           	opt stack 0
  1403  000061                     _isdigit$5388:
  1404                           	opt stack 0
  1405  000061                     USBTransferOnePacket@data:
  1406                           	opt stack 0
  1407                           
  1408                           ; 2 bytes @ 0x1
  1409  000061                     	ds	1
  1410  000062                     ??_ringbuf_num:
  1411  000062                     putUSBUSART@length:
  1412                           	opt stack 0
  1413  000062                     I2C_Start@rw:
  1414                           	opt stack 0
  1415  000062                     I2C_Send@data:
  1416                           	opt stack 0
  1417  000062                     timer1_init@prescaler:
  1418                           	opt stack 0
  1419  000062                     isdigit@c:
  1420                           	opt stack 0
  1421  000062                     ringbuf_init@internal_buf:
  1422                           	opt stack 0
  1423  000062                     RTCC_to_caltime@tm:
  1424                           	opt stack 0
  1425  000062                     ___wmul@multiplicand:
  1426                           	opt stack 0
  1427  000062                     ___awdiv@divisor:
  1428                           	opt stack 0
  1429  000062                     ___awmod@divisor:
  1430                           	opt stack 0
  1431  000062                     ___lwdiv@divisor:
  1432                           	opt stack 0
  1433  000062                     memset@c:
  1434                           	opt stack 0
  1435  000062                     strcmp@s2:
  1436                           	opt stack 0
  1437                           
  1438                           ; 2 bytes @ 0x2
  1439  000062                     	ds	1
  1440  000063                     USBTransferOnePacket@len:
  1441                           	opt stack 0
  1442  000063                     I2C_Start@adrs:
  1443                           	opt stack 0
  1444                           
  1445                           ; 1 bytes @ 0x3
  1446  000063                     	ds	1
  1447  000064                     ??_strcmp:
  1448  000064                     USBTransferOnePacket@ep:
  1449                           	opt stack 0
  1450  000064                     RTCC_to_caltime@dumy:
  1451                           	opt stack 0
  1452  000064                     I2C_LCD_Command@c:
  1453                           	opt stack 0
  1454  000064                     ___awdiv@counter:
  1455                           	opt stack 0
  1456  000064                     ___awmod@counter:
  1457                           	opt stack 0
  1458  000064                     ___lwdiv@counter:
  1459                           	opt stack 0
  1460  000064                     ringbuf_init@bufsize:
  1461                           	opt stack 0
  1462  000064                     I2C_LCD_Puts@s:
  1463                           	opt stack 0
  1464  000064                     ___wmul@product:
  1465                           	opt stack 0
  1466  000064                     memset@n:
  1467                           	opt stack 0
  1468  000064                     ___lldiv@divisor:
  1469                           	opt stack 0
  1470                           
  1471                           ; 4 bytes @ 0x4
  1472  000064                     	ds	1
  1473  000065                     I2C_LCD_Command@ans:
  1474                           	opt stack 0
  1475  000065                     ___awdiv@sign:
  1476                           	opt stack 0
  1477  000065                     ___awmod@sign:
  1478                           	opt stack 0
  1479  000065                     strcmp@r:
  1480                           	opt stack 0
  1481  000065                     USBTransferOnePacket@handle:
  1482                           	opt stack 0
  1483  000065                     ___lwdiv@quotient:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x5
  1487  000065                     	ds	1
  1488  000066                     ??_I2C_LCD_Clear:
  1489  000066                     ??_I2C_LCD_Puts:
  1490  000066                     ?_atoi:
  1491                           	opt stack 0
  1492  000066                     month_length@month:
  1493                           	opt stack 0
  1494  000066                     I2C_LCD_SetCursor@row:
  1495                           	opt stack 0
  1496  000066                     atoi@s:
  1497                           	opt stack 0
  1498  000066                     ___awdiv@quotient:
  1499                           	opt stack 0
  1500  000066                     memset@p:
  1501                           	opt stack 0
  1502                           
  1503                           ; 2 bytes @ 0x6
  1504  000066                     	ds	1
  1505  000067                     ??_CDCTxService:
  1506  000067                     ??_month_length:
  1507  000067                     ??_I2C_LCD_init:
  1508  000067                     ?___lwmod:
  1509                           	opt stack 0
  1510  000067                     getsUSBUSART@buffer:
  1511                           	opt stack 0
  1512  000067                     I2C_LCD_SetCursor@row_offsets:
  1513                           	opt stack 0
  1514  000067                     I2C_LCD_Puts@ans:
  1515                           	opt stack 0
  1516  000067                     ___lwmod@dividend:
  1517                           	opt stack 0
  1518                           
  1519                           ; 2 bytes @ 0x7
  1520  000067                     	ds	1
  1521  000068                     ??_atoi:
  1522  000068                     USBDeviceInit@i:
  1523                           	opt stack 0
  1524  000068                     d_to_x@dec:
  1525                           	opt stack 0
  1526  000068                     I2C_LCD_init@i:
  1527                           	opt stack 0
  1528  000068                     _CDCTxService$2005:
  1529                           	opt stack 0
  1530  000068                     ringbuf_put@rb:
  1531                           	opt stack 0
  1532  000068                     ringbuf_pop@rb:
  1533                           	opt stack 0
  1534  000068                     ringbuf_backspace@rb:
  1535                           	opt stack 0
  1536  000068                     ___lldiv@quotient:
  1537                           	opt stack 0
  1538                           
  1539                           ; 4 bytes @ 0x8
  1540  000068                     	ds	1
  1541  000069                     getsUSBUSART@len:
  1542                           	opt stack 0
  1543  000069                     I2C_LCD_SetCursor@col:
  1544                           	opt stack 0
  1545  000069                     I2C_LCD_init@i_4220:
  1546                           	opt stack 0
  1547  000069                     caltime_to_RTCC@tm:
  1548                           	opt stack 0
  1549  000069                     ___lwmod@divisor:
  1550                           	opt stack 0
  1551                           
  1552                           ; 2 bytes @ 0x9
  1553  000069                     	ds	1
  1554  00006A                     ??_getsUSBUSART:
  1555  00006A                     ??_ringbuf_pop:
  1556  00006A                     ??_ringbuf_backspace:
  1557  00006A                     CDCTxService@i:
  1558                           	opt stack 0
  1559  00006A                     ringbuf_put@asciicode:
  1560                           	opt stack 0
  1561  00006A                     atoi@sign:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0xA
  1565  00006A                     	ds	1
  1566  00006B                     ??_ringbuf_put:
  1567  00006B                     CDCTxService@byte_to_send:
  1568                           	opt stack 0
  1569  00006B                     month_length@year:
  1570                           	opt stack 0
  1571  00006B                     ___lwmod@counter:
  1572                           	opt stack 0
  1573  00006B                     _getsUSBUSART$1957:
  1574                           	opt stack 0
  1575  00006B                     atoi@a:
  1576                           	opt stack 0
  1577                           
  1578                           ; 2 bytes @ 0xB
  1579  00006B                     	ds	1
  1580  00006C                     ?_sprintf:
  1581                           	opt stack 0
  1582  00006C                     ___lldiv@counter:
  1583                           	opt stack 0
  1584  00006C                     put_string_usb@s:
  1585                           	opt stack 0
  1586  00006C                     sprintf@sp:
  1587                           	opt stack 0
  1588                           
  1589                           ; 2 bytes @ 0xC
  1590  00006C                     	ds	1
  1591  00006D                     ?_get_string_usb:
  1592                           	opt stack 0
  1593  00006D                     ?___lmul:
  1594                           	opt stack 0
  1595  00006D                     get_string_usb@s:
  1596                           	opt stack 0
  1597  00006D                     ___lmul@multiplier:
  1598                           	opt stack 0
  1599                           
  1600                           ; 4 bytes @ 0xD
  1601  00006D                     	ds	1
  1602  00006E                     ringbuf_pop@ret:
  1603                           	opt stack 0
  1604  00006E                     put_string_usb@len:
  1605                           	opt stack 0
  1606  00006E                     sprintf@f:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0xE
  1610  00006E                     	ds	1
  1611  00006F                     ringbuf_put_num@rb:
  1612                           	opt stack 0
  1613  00006F                     ringbuf_put_str@rb:
  1614                           	opt stack 0
  1615  00006F                     get_string_usb@len:
  1616                           	opt stack 0
  1617                           
  1618                           ; 2 bytes @ 0xF
  1619  00006F                     	ds	1
  1620  000070                     
  1621                           ; 0 bytes @ 0x10
  1622  000070                     	ds	1
  1623  000071                     ??_get_string_usb:
  1624  000071                     ringbuf_put_num@value:
  1625                           	opt stack 0
  1626  000071                     ringbuf_put_str@str:
  1627                           	opt stack 0
  1628  000071                     ___lmul@multiplicand:
  1629                           	opt stack 0
  1630                           
  1631                           ; 4 bytes @ 0x11
  1632  000071                     	ds	1
  1633  000072                     get_string_usb@rx_len:
  1634                           	opt stack 0
  1635                           
  1636                           ; 2 bytes @ 0x12
  1637  000072                     	ds	1
  1638  000073                     ringbuf_put_num@digits:
  1639                           	opt stack 0
  1640                           
  1641                           ; 1 bytes @ 0x13
  1642  000073                     	ds	1
  1643  000074                     ringbuf_put_num@i:
  1644                           	opt stack 0
  1645  000074                     USB_task@rx_len:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x14
  1649  000074                     	ds	1
  1650  000075                     ringbuf_put_num@temp:
  1651                           	opt stack 0
  1652  000075                     ___lmul@product:
  1653                           	opt stack 0
  1654                           
  1655                           ; 4 bytes @ 0x15
  1656  000075                     	ds	1
  1657  000076                     USB_task@data:
  1658                           	opt stack 0
  1659                           
  1660                           ; 1 bytes @ 0x16
  1661  000076                     	ds	3
  1662  000079                     ?_get_quot_rem:
  1663                           	opt stack 0
  1664  000079                     get_quot_rem@quot:
  1665                           	opt stack 0
  1666  000079                     caltime_to_epoch@tm:
  1667                           	opt stack 0
  1668                           
  1669                           ; 2 bytes @ 0x19
  1670  000079                     	ds	2
  1671  00007B                     ??_caltime_to_epoch:
  1672  00007B                     get_quot_rem@div:
  1673                           	opt stack 0
  1674                           
  1675                           ; 1 bytes @ 0x1B
  1676  00007B                     	ds	2
  1677  00007D                     get_quot_rem@num:
  1678                           	opt stack 0
  1679                           
  1680                           ; 4 bytes @ 0x1D
  1681  00007D                     	ds	1
  1682  00007E                     ??_sprintf:
  1683                           
  1684                           ; 0 bytes @ 0x1E
  1685  00007E                     	ds	1
  1686  00007F                     caltime_to_epoch@year:
  1687                           	opt stack 0
  1688                           
  1689                           ; 1 bytes @ 0x1F
  1690  00007F                     	ds	1
  1691  000080                     caltime_to_epoch@month_3467:
  1692                           	opt stack 0
  1693                           
  1694                           ; 1 bytes @ 0x20
  1695  000080                     	ds	1
  1696  000081                     epoch_to_caltime@tm:
  1697                           	opt stack 0
  1698  000081                     caltime_to_epoch@epoch:
  1699                           	opt stack 0
  1700                           
  1701                           ; 4 bytes @ 0x21
  1702  000081                     	ds	1
  1703  000082                     sprintf@prec:
  1704                           	opt stack 0
  1705                           
  1706                           ; 1 bytes @ 0x22
  1707  000082                     	ds	1
  1708  000083                     ??_epoch_to_caltime:
  1709  000083                     sprintf@ap:
  1710                           	opt stack 0
  1711                           
  1712                           ; 2 bytes @ 0x23
  1713  000083                     	ds	2
  1714  000085                     caltime_to_epoch@month:
  1715                           	opt stack 0
  1716  000085                     epoch_to_caltime@day_since_epoch:
  1717                           	opt stack 0
  1718  000085                     sprintf@cp:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x25
  1722  000085                     	ds	1
  1723  000086                     RTCC_from_RTCC@tm:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x26
  1727  000086                     	ds	1
  1728  000087                     epoch_to_caltime@day:
  1729                           	opt stack 0
  1730  000087                     sprintf@val:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x27
  1734  000087                     	ds	1
  1735  000088                     
  1736                           ; 0 bytes @ 0x28
  1737  000088                     	ds	1
  1738  000089                     epoch_to_caltime@year:
  1739                           	opt stack 0
  1740  000089                     sprintf@len:
  1741                           	opt stack 0
  1742                           
  1743                           ; 2 bytes @ 0x29
  1744  000089                     	ds	1
  1745  00008A                     epoch_to_caltime@month:
  1746                           	opt stack 0
  1747                           
  1748                           ; 1 bytes @ 0x2A
  1749  00008A                     	ds	1
  1750  00008B                     sprintf@flag:
  1751                           	opt stack 0
  1752  00008B                     epoch_to_caltime@num:
  1753                           	opt stack 0
  1754                           
  1755                           ; 4 bytes @ 0x2B
  1756  00008B                     	ds	1
  1757  00008C                     sprintf@c:
  1758                           	opt stack 0
  1759                           
  1760                           ; 1 bytes @ 0x2C
  1761  00008C                     	ds	1
  1762  00008D                     sprintf@width:
  1763                           	opt stack 0
  1764                           
  1765                           ; 2 bytes @ 0x2D
  1766  00008D                     	ds	2
  1767  00008F                     RTCC_from_caltime@tm:
  1768                           	opt stack 0
  1769  00008F                     RTCC_from_epoch@tm:
  1770                           	opt stack 0
  1771  00008F                     print_time@tx:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x2F
  1775  00008F                     	ds	2
  1776  000091                     print_time@str:
  1777                           	opt stack 0
  1778                           
  1779                           ; 30 bytes @ 0x31
  1780  000091                     	ds	30
  1781  0000AF                     terminal_at_hand@tx:
  1782                           	opt stack 0
  1783                           
  1784                           ; 2 bytes @ 0x4F
  1785  0000AF                     	ds	2
  1786  0000B1                     terminal_at_hand@hand:
  1787                           	opt stack 0
  1788                           
  1789                           ; 2 bytes @ 0x51
  1790  0000B1                     	ds	2
  1791  0000B3                     terminal_at_hand@min:
  1792                           	opt stack 0
  1793                           
  1794                           ; 1 bytes @ 0x53
  1795  0000B3                     	ds	1
  1796  0000B4                     terminal_at_hand@max:
  1797                           	opt stack 0
  1798                           
  1799                           ; 1 bytes @ 0x54
  1800  0000B4                     	ds	1
  1801  0000B5                     terminal_at_hand@value:
  1802                           	opt stack 0
  1803                           
  1804                           ; 1 bytes @ 0x55
  1805  0000B5                     	ds	1
  1806  0000B6                     terminal_time@tx:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0x56
  1810  0000B6                     	ds	2
  1811  0000B8                     terminal_time@op0:
  1812                           	opt stack 0
  1813                           
  1814                           ; 2 bytes @ 0x58
  1815  0000B8                     	ds	2
  1816  0000BA                     terminal_time@op1:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x5A
  1820  0000BA                     	ds	2
  1821  0000BC                     terminal_time@op2:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0x5C
  1825  0000BC                     	ds	2
  1826  0000BE                     _terminal_time$5936:
  1827                           	opt stack 0
  1828                           
  1829                           ; 1 bytes @ 0x5E
  1830  0000BE                     	ds	1
  1831  0000BF                     terminal_operation@tx:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0x5F
  1835  0000BF                     	ds	2
  1836  0000C1                     terminal_operation@op0:
  1837                           	opt stack 0
  1838                           
  1839                           ; 2 bytes @ 0x61
  1840  0000C1                     	ds	2
  1841  0000C3                     terminal_operation@op1:
  1842                           	opt stack 0
  1843                           
  1844                           ; 2 bytes @ 0x63
  1845  0000C3                     	ds	2
  1846  0000C5                     terminal_operation@op2:
  1847                           	opt stack 0
  1848                           
  1849                           ; 2 bytes @ 0x65
  1850  0000C5                     	ds	2
  1851  0000C7                     terminal_operation@op3:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x67
  1855  0000C7                     	ds	2
  1856  0000C9                     tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           postdec1	equ	0xFE5
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           
  1866                           ; 0 bytes @ 0x69
  1867                           
  1868                           	psect	cstackCOMRAM
  1869  00002D                     __pcstackCOMRAM:
  1870                           	opt stack 0
  1871  00002D                     ??_USBStdGetDscHandler:
  1872  00002D                     ??_USBStdGetStatusHandler:
  1873  00002D                     ?i2_USBTransferOnePacket:
  1874                           	opt stack 0
  1875  00002D                     ?i2_ringbuf_num:
  1876                           	opt stack 0
  1877  00002D                     USBConfigureEndpoint@direction:
  1878                           	opt stack 0
  1879  00002D                     USBCtrlTrfTxService@byteToSend:
  1880                           	opt stack 0
  1881  00002D                     USBCtrlTrfRxService@i:
  1882                           	opt stack 0
  1883  00002D                     i2USBTransferOnePacket@dir:
  1884                           	opt stack 0
  1885  00002D                     i2ringbuf_num@rb:
  1886                           	opt stack 0
  1887  00002D                     i2memset@p1:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x0
  1891  00002D                     	ds	1
  1892  00002E                     ??_USBConfigureEndpoint:
  1893  00002E                     USBCtrlTrfRxService@byteToRead:
  1894                           	opt stack 0
  1895  00002E                     USBCtrlTrfInHandler@lastDTS:
  1896                           	opt stack 0
  1897  00002E                     USBStdGetStatusHandler@p:
  1898                           	opt stack 0
  1899  00002E                     i2USBTransferOnePacket@data:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x1
  1903  00002E                     	ds	1
  1904  00002F                     ??i2_ringbuf_num:
  1905  00002F                     i2memset@c:
  1906                           	opt stack 0
  1907                           
  1908                           ; 2 bytes @ 0x2
  1909  00002F                     	ds	1
  1910  000030                     i2USBTransferOnePacket@len:
  1911                           	opt stack 0
  1912                           
  1913                           ; 1 bytes @ 0x3
  1914  000030                     	ds	1
  1915  000031                     i2USBTransferOnePacket@ep:
  1916                           	opt stack 0
  1917  000031                     i2memset@n:
  1918                           	opt stack 0
  1919                           
  1920                           ; 2 bytes @ 0x4
  1921  000031                     	ds	1
  1922  000032                     USBConfigureEndpoint@EPNum:
  1923                           	opt stack 0
  1924  000032                     i2USBTransferOnePacket@handle:
  1925                           	opt stack 0
  1926                           
  1927                           ; 2 bytes @ 0x5
  1928  000032                     	ds	1
  1929  000033                     USBConfigureEndpoint@handle:
  1930                           	opt stack 0
  1931  000033                     i2memset@p:
  1932                           	opt stack 0
  1933                           
  1934                           ; 2 bytes @ 0x6
  1935  000033                     	ds	2
  1936  000035                     USBEnableEndpoint@options:
  1937                           	opt stack 0
  1938  000035                     i2USBDeviceInit@i:
  1939                           	opt stack 0
  1940  000035                     i2ringbuf_put@rb:
  1941                           	opt stack 0
  1942  000035                     i2ringbuf_pop@rb:
  1943                           	opt stack 0
  1944                           
  1945                           ; 2 bytes @ 0x8
  1946  000035                     	ds	1
  1947  000036                     USBEnableEndpoint@p:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x9
  1951  000036                     	ds	1
  1952  000037                     ??i2_ringbuf_pop:
  1953  000037                     i2ringbuf_put@asciicode:
  1954                           	opt stack 0
  1955                           
  1956                           ; 1 bytes @ 0xA
  1957  000037                     	ds	1
  1958  000038                     ??i2_ringbuf_put:
  1959  000038                     USBEnableEndpoint@ep:
  1960                           	opt stack 0
  1961                           
  1962                           ; 1 bytes @ 0xB
  1963  000038                     	ds	1
  1964  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0xC
  1968  000039                     	ds	2
  1969  00003B                     i2ringbuf_pop@ret:
  1970                           	opt stack 0
  1971  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1972                           	opt stack 0
  1973                           
  1974                           ; 2 bytes @ 0xE
  1975  00003B                     	ds	1
  1976  00003C                     UART_ISR@ascii:
  1977                           	opt stack 0
  1978                           
  1979                           ; 1 bytes @ 0xF
  1980  00003C                     	ds	1
  1981  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x10
  1985  00003D                     	ds	2
  1986  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1987                           
  1988                           ; 0 bytes @ 0x12
  1989  00003F                     	ds	2
  1990  000041                     ??_USBStdFeatureReqHandler:
  1991  000041                     USBStdSetCfgHandler@i:
  1992                           	opt stack 0
  1993                           
  1994                           ; 1 bytes @ 0x14
  1995  000041                     	ds	1
  1996  000042                     USBStdFeatureReqHandler@pUEP:
  1997                           	opt stack 0
  1998                           
  1999                           ; 2 bytes @ 0x15
  2000  000042                     	ds	2
  2001  000044                     USBStdFeatureReqHandler@current_ep_data:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0x17
  2005  000044                     	ds	1
  2006  000045                     USBStdFeatureReqHandler@p:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x18
  2010  000045                     	ds	2
  2011  000047                     ??_USBCtrlEPService:
  2012  000047                     
  2013                           ; 0 bytes @ 0x1A
  2014  000047                     	ds	2
  2015  000049                     USBCtrlEPService@setup_cnt:
  2016                           	opt stack 0
  2017                           
  2018                           ; 1 bytes @ 0x1C
  2019  000049                     	ds	1
  2020  00004A                     USBDeviceTasks@i:
  2021                           	opt stack 0
  2022                           
  2023                           ; 1 bytes @ 0x1D
  2024  00004A                     	ds	1
  2025  00004B                     ??_ISR:
  2026                           
  2027                           ; 0 bytes @ 0x1E
  2028  00004B                     	ds	14
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           postinc0	equ	0xFEE
  2034                           wreg	equ	0xFE8
  2035                           postdec1	equ	0xFE5
  2036                           fsr1h	equ	0xFE2
  2037                           fsr1l	equ	0xFE1
  2038                           
  2039 ;;
  2040 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2041 ;;
  2042 ;; *************** function _main *****************
  2043 ;; Defined at:
  2044 ;;		line 112 in file "main.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2  1348[None  ] int 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels required when called:   20
  2064 ;; This function calls:
  2065 ;;		_I2C_LCD_Clear
  2066 ;;		_I2C_LCD_Puts
  2067 ;;		_I2C_LCD_SetCursor
  2068 ;;		_RTCC_task
  2069 ;;		_UART_task
  2070 ;;		_USB_task
  2071 ;;		_main_init
  2072 ;;		_terminal_task
  2073 ;; This function is called by:
  2074 ;;		Startup code after reset
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text0
  2079  0136C8                     __ptext0:
  2080                           	opt stack 0
  2081  0136C8                     _main:
  2082                           	opt stack 11
  2083                           
  2084                           ;main.c: 113: main_init();
  2085                           
  2086                           ;incstack = 0
  2087  0136C8  EC75  F08F         	call	_main_init	;wreg free
  2088                           
  2089                           ;main.c: 115: I2C_LCD_Clear();
  2090  0136CC  EC51  F0A0         	call	_I2C_LCD_Clear	;wreg free
  2091                           
  2092                           ;main.c: 116: I2C_LCD_SetCursor(0, 0);
  2093  0136D0  0E00               	movlw	0
  2094  0136D2  0100               	movlb	0	; () banked
  2095  0136D4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2096  0136D6  0E00               	movlw	0
  2097  0136D8  EC18  F09F         	call	_I2C_LCD_SetCursor
  2098                           
  2099                           ;main.c: 117: I2C_LCD_Puts("18F27J53");
  2100  0136DC  0E69               	movlw	low (STR_41+3)
  2101  0136DE  0100               	movlb	0	; () banked
  2102  0136E0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2103  0136E2  0EFF               	movlw	high (STR_41+3)
  2104  0136E4  0100               	movlb	0	; () banked
  2105  0136E6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2106  0136E8  ECD3  F09B         	call	_I2C_LCD_Puts	;wreg free
  2107                           
  2108                           ;main.c: 118: I2C_LCD_SetCursor(0, 1);
  2109  0136EC  0E01               	movlw	1
  2110  0136EE  0100               	movlb	0	; () banked
  2111  0136F0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2112  0136F2  0E00               	movlw	0
  2113  0136F4  EC18  F09F         	call	_I2C_LCD_SetCursor
  2114                           
  2115                           ;main.c: 119: I2C_LCD_Puts("Template");
  2116  0136F8  0E9B               	movlw	low STR_49
  2117  0136FA  0100               	movlb	0	; () banked
  2118  0136FC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2119  0136FE  0EFF               	movlw	high STR_49
  2120  013700  0100               	movlb	0	; () banked
  2121  013702  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2122  013704  ECD3  F09B         	call	_I2C_LCD_Puts	;wreg free
  2123  013708  D015               	goto	l9321
  2124  01370A                     l9311:
  2125                           
  2126                           ;main.c: 124: INTCONbits.GIE = 0;
  2127  01370A  9EF2               	bcf	intcon,7,c	;volatile
  2128                           
  2129                           ;main.c: 126: USB_task();
  2130  01370C  EC57  F099         	call	_USB_task	;wreg free
  2131                           
  2132                           ;main.c: 127: UART_task();
  2133  013710  ECD5  F09F         	call	_UART_task	;wreg free
  2134                           
  2135                           ;main.c: 128: RTCC_task();
  2136  013714  EC7F  F09E         	call	_RTCC_task	;wreg free
  2137                           
  2138                           ;main.c: 129: terminal_task(&usb_tx, &usb_rx);
  2139  013718  0E7D               	movlw	low _usb_tx
  2140  01371A  0101               	movlb	1	; () banked
  2141  01371C  6F94               	movwf	terminal_task@tx& (0+255),b
  2142  01371E  0E01               	movlw	high _usb_tx
  2143  013720  0101               	movlb	1	; () banked
  2144  013722  6F95               	movwf	(terminal_task@tx+1)& (0+255),b
  2145  013724  0E75               	movlw	low _usb_rx
  2146  013726  0101               	movlb	1	; () banked
  2147  013728  6F96               	movwf	terminal_task@rx& (0+255),b
  2148  01372A  0E01               	movlw	high _usb_rx
  2149  01372C  0101               	movlb	1	; () banked
  2150  01372E  6F97               	movwf	(terminal_task@rx+1)& (0+255),b
  2151  013730  EC02  F084         	call	_terminal_task	;wreg free
  2152  013734                     l9321:
  2153                           
  2154                           ;main.c: 131: INTCONbits.GIE = 1;
  2155  013734  8EF2               	bsf	intcon,7,c	;volatile
  2156  013736  D7E9               	goto	l9311
  2157  013738                     __end_of_main:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           
  2170 ;; *************** function _terminal_task *****************
  2171 ;; Defined at:
  2172 ;;		line 8 in file "../My_library/My_terminal.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2175 ;;		 -> usb_tx(8), 
  2176 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2177 ;;		 -> usb_rx(8), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  i               1  102[BANK3 ] unsigned char 
  2180 ;;  i               1  104[BANK3 ] unsigned char 
  2181 ;;  ascii           1  103[BANK3 ] unsigned char 
  2182 ;;  buf           100    0[BANK3 ] unsigned char [100]
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2192 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Locals:         0       0       0       0     105       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Totals:         0       0       6       0     105       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;Total ram usage:      111 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:   19
  2199 ;; This function calls:
  2200 ;;		_ringbuf_backspace
  2201 ;;		_ringbuf_delete
  2202 ;;		_ringbuf_init
  2203 ;;		_ringbuf_num
  2204 ;;		_ringbuf_pop
  2205 ;;		_ringbuf_put
  2206 ;;		_ringbuf_put_num
  2207 ;;		_ringbuf_put_str
  2208 ;;		_terminal_operation
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text1
  2215  010804                     __ptext1:
  2216                           	opt stack 0
  2217  010804                     _terminal_task:
  2218                           	opt stack 11
  2219                           
  2220                           ;My_terminal.c: 9: static ringbuf_t command;
  2221                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2222                           ;My_terminal.c: 11: if (command_init == 0) {
  2223                           
  2224                           ;incstack = 0
  2225  010804  0100               	movlb	0	; () banked
  2226  010806  51FB               	movf	terminal_task@command_init& (0+255),w,b
  2227  010808  0100               	movlb	0	; () banked
  2228  01080A  A4D8               	btfss	status,2,c
  2229  01080C  D016               	goto	l8935
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;My_terminal.c: 12: command_init = 1;
  2233  01080E  0E01               	movlw	1
  2234  010810  0100               	movlb	0	; () banked
  2235  010812  6FFB               	movwf	terminal_task@command_init& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;My_terminal.c: 13: char buf[100];
  2239                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2240  010814  0E85               	movlw	low terminal_task@command
  2241  010816  0100               	movlb	0	; () banked
  2242  010818  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2243  01081A  0E01               	movlw	high terminal_task@command
  2244  01081C  0100               	movlb	0	; () banked
  2245  01081E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2246  010820  0E00               	movlw	low terminal_task@buf
  2247  010822  0100               	movlb	0	; () banked
  2248  010824  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2249  010826  0E03               	movlw	high terminal_task@buf
  2250  010828  0100               	movlb	0	; () banked
  2251  01082A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2252  01082C  0E00               	movlw	0
  2253  01082E  0100               	movlb	0	; () banked
  2254  010830  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2255  010832  0E64               	movlw	100
  2256  010834  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2257  010836  EC2B  F09D         	call	_ringbuf_init	;wreg free
  2258  01083A                     l8935:
  2259                           
  2260                           ;My_terminal.c: 15: }
  2261                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2262  01083A  C196  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2263  01083E  C197  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2264  010842  EC89  F08E         	call	_ringbuf_num	;wreg free
  2265  010846  0100               	movlb	0	; () banked
  2266  010848  5160               	movf	?_ringbuf_num& (0+255),w,b
  2267  01084A  0100               	movlb	0	; () banked
  2268  01084C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2269  01084E  B4D8               	btfsc	status,2,c
  2270  010850  0012               	return	
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2274  010852  C196  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2275  010856  C197  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2276  01085A  EC18  F094         	call	_ringbuf_pop	;wreg free
  2277  01085E  0103               	movlb	3	; () banked
  2278  010860  6F67               	movwf	terminal_task@ascii& (0+255),b
  2279                           
  2280                           ;My_terminal.c: 18: switch (ascii) {
  2281  010862  D176               	goto	l8999
  2282  010864                     l8939:
  2283                           
  2284                           ; BSR set to: 3
  2285                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2286  010864  0E85               	movlw	low terminal_task@command
  2287  010866  0100               	movlb	0	; () banked
  2288  010868  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2289  01086A  0E01               	movlw	high terminal_task@command
  2290  01086C  0100               	movlb	0	; () banked
  2291  01086E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2292  010870  0E00               	movlw	0
  2293  010872  0100               	movlb	0	; () banked
  2294  010874  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2295  010876  ECDE  F092         	call	_ringbuf_put	;wreg free
  2296                           
  2297                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2298  01087A  C194  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2299  01087E  C195  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2300  010882  0E09               	movlw	9
  2301  010884  0100               	movlb	0	; () banked
  2302  010886  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2303  010888  ECDE  F092         	call	_ringbuf_put	;wreg free
  2304                           
  2305                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2306  01088C  0E85               	movlw	low terminal_task@command
  2307  01088E  0100               	movlb	0	; () banked
  2308  010890  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2309  010892  0E01               	movlw	high terminal_task@command
  2310  010894  0100               	movlb	0	; () banked
  2311  010896  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2312  010898  EC89  F08E         	call	_ringbuf_num	;wreg free
  2313  01089C  0EFF               	movlw	255
  2314  01089E  0100               	movlb	0	; () banked
  2315  0108A0  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2316  0108A2  0103               	movlb	3	; () banked
  2317  0108A4  6F64               	movwf	_terminal_task$5935& (0+255),b
  2318  0108A6  0EFF               	movlw	255
  2319  0108A8  0100               	movlb	0	; () banked
  2320  0108AA  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2321  0108AC  0103               	movlb	3	; () banked
  2322  0108AE  6F65               	movwf	(_terminal_task$5935+1)& (0+255),b
  2323                           
  2324                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2325  0108B0  C194  F06F         	movff	terminal_task@tx,ringbuf_put_num@rb
  2326  0108B4  C195  F070         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2327  0108B8  C364  F071         	movff	_terminal_task$5935,ringbuf_put_num@value
  2328  0108BC  C365  F072         	movff	_terminal_task$5935+1,ringbuf_put_num@value+1
  2329  0108C0  0E02               	movlw	2
  2330  0108C2  0100               	movlb	0	; () banked
  2331  0108C4  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2332  0108C6  EC70  F09A         	call	_ringbuf_put_num	;wreg free
  2333                           
  2334                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2335  0108CA  C194  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2336  0108CE  C195  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2337  0108D2  0E0A               	movlw	10
  2338  0108D4  0100               	movlb	0	; () banked
  2339  0108D6  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2340  0108D8  ECDE  F092         	call	_ringbuf_put	;wreg free
  2341                           
  2342                           ;My_terminal.c: 24: static char op0[25];
  2343                           ;My_terminal.c: 25: static char op1[25];
  2344                           ;My_terminal.c: 26: static char op2[25];
  2345                           ;My_terminal.c: 27: static char op3[25];
  2346                           ;My_terminal.c: 28: uint8_t i;
  2347                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2348  0108DC  0E00               	movlw	0
  2349  0108DE  0103               	movlb	3	; () banked
  2350  0108E0  6F68               	movwf	terminal_task@i& (0+255),b
  2351  0108E2  D002               	goto	l8945
  2352  0108E4                     l8943:
  2353                           
  2354                           ; BSR set to: 3
  2355  0108E4  0103               	movlb	3	; () banked
  2356  0108E6  2B68               	incf	terminal_task@i& (0+255),f,b
  2357  0108E8                     l8945:
  2358                           
  2359                           ; BSR set to: 3
  2360  0108E8  0E85               	movlw	low terminal_task@command
  2361  0108EA  0100               	movlb	0	; () banked
  2362  0108EC  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2363  0108EE  0E01               	movlw	high terminal_task@command
  2364  0108F0  0100               	movlb	0	; () banked
  2365  0108F2  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2366  0108F4  EC18  F094         	call	_ringbuf_pop	;wreg free
  2367  0108F8  0101               	movlb	1	; () banked
  2368  0108FA  6F98               	movwf	??_terminal_task& (0+255),b
  2369  0108FC  0103               	movlb	3	; () banked
  2370  0108FE  5168               	movf	terminal_task@i& (0+255),w,b
  2371  010900  0D01               	mullw	1
  2372  010902  0E12               	movlw	low terminal_task@op0
  2373  010904  24F3               	addwf	prodl,w,c
  2374  010906  6ED9               	movwf	fsr2l,c
  2375  010908  0E01               	movlw	high terminal_task@op0
  2376  01090A  20F4               	addwfc	prodh,w,c
  2377  01090C  6EDA               	movwf	fsr2h,c
  2378  01090E  C198  FFDF         	movff	??_terminal_task,indf2
  2379  010912  50DF               	movf	indf2,w,c
  2380  010914  A4D8               	btfss	status,2,c
  2381  010916  D7E6               	goto	l8943
  2382                           
  2383                           ; BSR set to: 3
  2384                           ;My_terminal.c: 30: op0[i] = '\0';
  2385                           
  2386                           ; BSR set to: 3
  2387  010918  0103               	movlb	3	; () banked
  2388  01091A  5168               	movf	terminal_task@i& (0+255),w,b
  2389  01091C  0D01               	mullw	1
  2390  01091E  0E12               	movlw	low terminal_task@op0
  2391  010920  24F3               	addwf	prodl,w,c
  2392  010922  6ED9               	movwf	fsr2l,c
  2393  010924  0E01               	movlw	high terminal_task@op0
  2394  010926  20F4               	addwfc	prodh,w,c
  2395  010928  6EDA               	movwf	fsr2h,c
  2396  01092A  0E00               	movlw	0
  2397  01092C  6EDF               	movwf	indf2,c
  2398                           
  2399                           ; BSR set to: 3
  2400                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2401  01092E  0E00               	movlw	0
  2402  010930  0103               	movlb	3	; () banked
  2403  010932  6F68               	movwf	terminal_task@i& (0+255),b
  2404  010934  D002               	goto	l8953
  2405  010936                     l8951:
  2406                           
  2407                           ; BSR set to: 3
  2408  010936  0103               	movlb	3	; () banked
  2409  010938  2B68               	incf	terminal_task@i& (0+255),f,b
  2410  01093A                     l8953:
  2411                           
  2412                           ; BSR set to: 3
  2413  01093A  0E85               	movlw	low terminal_task@command
  2414  01093C  0100               	movlb	0	; () banked
  2415  01093E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2416  010940  0E01               	movlw	high terminal_task@command
  2417  010942  0100               	movlb	0	; () banked
  2418  010944  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2419  010946  EC18  F094         	call	_ringbuf_pop	;wreg free
  2420  01094A  0101               	movlb	1	; () banked
  2421  01094C  6F98               	movwf	??_terminal_task& (0+255),b
  2422  01094E  0103               	movlb	3	; () banked
  2423  010950  5168               	movf	terminal_task@i& (0+255),w,b
  2424  010952  0D01               	mullw	1
  2425  010954  0E2B               	movlw	low terminal_task@op1
  2426  010956  24F3               	addwf	prodl,w,c
  2427  010958  6ED9               	movwf	fsr2l,c
  2428  01095A  0E01               	movlw	high terminal_task@op1
  2429  01095C  20F4               	addwfc	prodh,w,c
  2430  01095E  6EDA               	movwf	fsr2h,c
  2431  010960  C198  FFDF         	movff	??_terminal_task,indf2
  2432  010964  50DF               	movf	indf2,w,c
  2433  010966  A4D8               	btfss	status,2,c
  2434  010968  D7E6               	goto	l8951
  2435                           
  2436                           ; BSR set to: 3
  2437                           ;My_terminal.c: 32: op1[i] = '\0';
  2438                           
  2439                           ; BSR set to: 3
  2440  01096A  0103               	movlb	3	; () banked
  2441  01096C  5168               	movf	terminal_task@i& (0+255),w,b
  2442  01096E  0D01               	mullw	1
  2443  010970  0E2B               	movlw	low terminal_task@op1
  2444  010972  24F3               	addwf	prodl,w,c
  2445  010974  6ED9               	movwf	fsr2l,c
  2446  010976  0E01               	movlw	high terminal_task@op1
  2447  010978  20F4               	addwfc	prodh,w,c
  2448  01097A  6EDA               	movwf	fsr2h,c
  2449  01097C  0E00               	movlw	0
  2450  01097E  6EDF               	movwf	indf2,c
  2451                           
  2452                           ; BSR set to: 3
  2453                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2454  010980  0E00               	movlw	0
  2455  010982  0103               	movlb	3	; () banked
  2456  010984  6F68               	movwf	terminal_task@i& (0+255),b
  2457  010986  D002               	goto	l8961
  2458  010988                     l8959:
  2459                           
  2460                           ; BSR set to: 3
  2461  010988  0103               	movlb	3	; () banked
  2462  01098A  2B68               	incf	terminal_task@i& (0+255),f,b
  2463  01098C                     l8961:
  2464                           
  2465                           ; BSR set to: 3
  2466  01098C  0E85               	movlw	low terminal_task@command
  2467  01098E  0100               	movlb	0	; () banked
  2468  010990  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2469  010992  0E01               	movlw	high terminal_task@command
  2470  010994  0100               	movlb	0	; () banked
  2471  010996  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2472  010998  EC18  F094         	call	_ringbuf_pop	;wreg free
  2473  01099C  0101               	movlb	1	; () banked
  2474  01099E  6F98               	movwf	??_terminal_task& (0+255),b
  2475  0109A0  0103               	movlb	3	; () banked
  2476  0109A2  5168               	movf	terminal_task@i& (0+255),w,b
  2477  0109A4  0D01               	mullw	1
  2478  0109A6  0E44               	movlw	low terminal_task@op2
  2479  0109A8  24F3               	addwf	prodl,w,c
  2480  0109AA  6ED9               	movwf	fsr2l,c
  2481  0109AC  0E01               	movlw	high terminal_task@op2
  2482  0109AE  20F4               	addwfc	prodh,w,c
  2483  0109B0  6EDA               	movwf	fsr2h,c
  2484  0109B2  C198  FFDF         	movff	??_terminal_task,indf2
  2485  0109B6  50DF               	movf	indf2,w,c
  2486  0109B8  A4D8               	btfss	status,2,c
  2487  0109BA  D7E6               	goto	l8959
  2488                           
  2489                           ; BSR set to: 3
  2490                           ;My_terminal.c: 34: op2[i] = '\0';
  2491                           
  2492                           ; BSR set to: 3
  2493  0109BC  0103               	movlb	3	; () banked
  2494  0109BE  5168               	movf	terminal_task@i& (0+255),w,b
  2495  0109C0  0D01               	mullw	1
  2496  0109C2  0E44               	movlw	low terminal_task@op2
  2497  0109C4  24F3               	addwf	prodl,w,c
  2498  0109C6  6ED9               	movwf	fsr2l,c
  2499  0109C8  0E01               	movlw	high terminal_task@op2
  2500  0109CA  20F4               	addwfc	prodh,w,c
  2501  0109CC  6EDA               	movwf	fsr2h,c
  2502  0109CE  0E00               	movlw	0
  2503  0109D0  6EDF               	movwf	indf2,c
  2504                           
  2505                           ; BSR set to: 3
  2506                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2507  0109D2  0E00               	movlw	0
  2508  0109D4  0103               	movlb	3	; () banked
  2509  0109D6  6F68               	movwf	terminal_task@i& (0+255),b
  2510  0109D8  D002               	goto	l8969
  2511  0109DA                     l8967:
  2512                           
  2513                           ; BSR set to: 3
  2514  0109DA  0103               	movlb	3	; () banked
  2515  0109DC  2B68               	incf	terminal_task@i& (0+255),f,b
  2516  0109DE                     l8969:
  2517                           
  2518                           ; BSR set to: 3
  2519  0109DE  0E85               	movlw	low terminal_task@command
  2520  0109E0  0100               	movlb	0	; () banked
  2521  0109E2  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2522  0109E4  0E01               	movlw	high terminal_task@command
  2523  0109E6  0100               	movlb	0	; () banked
  2524  0109E8  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2525  0109EA  EC18  F094         	call	_ringbuf_pop	;wreg free
  2526  0109EE  0101               	movlb	1	; () banked
  2527  0109F0  6F98               	movwf	??_terminal_task& (0+255),b
  2528  0109F2  0103               	movlb	3	; () banked
  2529  0109F4  5168               	movf	terminal_task@i& (0+255),w,b
  2530  0109F6  0D01               	mullw	1
  2531  0109F8  0EE4               	movlw	low terminal_task@op3
  2532  0109FA  24F3               	addwf	prodl,w,c
  2533  0109FC  6ED9               	movwf	fsr2l,c
  2534  0109FE  0E02               	movlw	high terminal_task@op3
  2535  010A00  20F4               	addwfc	prodh,w,c
  2536  010A02  6EDA               	movwf	fsr2h,c
  2537  010A04  C198  FFDF         	movff	??_terminal_task,indf2
  2538  010A08  50DF               	movf	indf2,w,c
  2539  010A0A  A4D8               	btfss	status,2,c
  2540  010A0C  D7E6               	goto	l8967
  2541                           
  2542                           ; BSR set to: 3
  2543                           ;My_terminal.c: 36: op3[i] = '\0';
  2544                           
  2545                           ; BSR set to: 3
  2546  010A0E  0103               	movlb	3	; () banked
  2547  010A10  5168               	movf	terminal_task@i& (0+255),w,b
  2548  010A12  0D01               	mullw	1
  2549  010A14  0EE4               	movlw	low terminal_task@op3
  2550  010A16  24F3               	addwf	prodl,w,c
  2551  010A18  6ED9               	movwf	fsr2l,c
  2552  010A1A  0E02               	movlw	high terminal_task@op3
  2553  010A1C  20F4               	addwfc	prodh,w,c
  2554  010A1E  6EDA               	movwf	fsr2h,c
  2555  010A20  0E00               	movlw	0
  2556  010A22  6EDF               	movwf	indf2,c
  2557                           
  2558                           ; BSR set to: 3
  2559                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2560  010A24  C194  F0BF         	movff	terminal_task@tx,terminal_operation@tx
  2561  010A28  C195  F0C0         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2562  010A2C  0E12               	movlw	low terminal_task@op0
  2563  010A2E  0100               	movlb	0	; () banked
  2564  010A30  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2565  010A32  0E01               	movlw	high terminal_task@op0
  2566  010A34  0100               	movlb	0	; () banked
  2567  010A36  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2568  010A38  0E2B               	movlw	low terminal_task@op1
  2569  010A3A  0100               	movlb	0	; () banked
  2570  010A3C  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2571  010A3E  0E01               	movlw	high terminal_task@op1
  2572  010A40  0100               	movlb	0	; () banked
  2573  010A42  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2574  010A44  0E44               	movlw	low terminal_task@op2
  2575  010A46  0100               	movlb	0	; () banked
  2576  010A48  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2577  010A4A  0E01               	movlw	high terminal_task@op2
  2578  010A4C  0100               	movlb	0	; () banked
  2579  010A4E  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2580  010A50  0EE4               	movlw	low terminal_task@op3
  2581  010A52  0100               	movlb	0	; () banked
  2582  010A54  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2583  010A56  0E02               	movlw	high terminal_task@op3
  2584  010A58  0100               	movlb	0	; () banked
  2585  010A5A  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2586  010A5C  EC48  F093         	call	_terminal_operation	;wreg free
  2587                           
  2588                           ;My_terminal.c: 38: break;
  2589  010A60  0012               	return	
  2590  010A62                     l8975:
  2591                           
  2592                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2593  010A62  0E85               	movlw	low terminal_task@command
  2594  010A64  0100               	movlb	0	; () banked
  2595  010A66  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2596  010A68  0E01               	movlw	high terminal_task@command
  2597  010A6A  0100               	movlb	0	; () banked
  2598  010A6C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2599  010A6E  0E00               	movlw	0
  2600  010A70  0100               	movlb	0	; () banked
  2601  010A72  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2602  010A74  ECDE  F092         	call	_ringbuf_put	;wreg free
  2603                           
  2604                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2605  010A78  C194  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2606  010A7C  C195  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2607  010A80  0E20               	movlw	32
  2608  010A82  0100               	movlb	0	; () banked
  2609  010A84  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2610  010A86  ECDE  F092         	call	_ringbuf_put	;wreg free
  2611                           
  2612                           ;My_terminal.c: 42: break;
  2613  010A8A  0012               	return	
  2614  010A8C                     l8977:
  2615                           
  2616                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2617  010A8C  0E85               	movlw	low terminal_task@command
  2618  010A8E  0100               	movlb	0	; () banked
  2619  010A90  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2620  010A92  0E01               	movlw	high terminal_task@command
  2621  010A94  0100               	movlb	0	; () banked
  2622  010A96  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2623  010A98  EC10  F099         	call	_ringbuf_backspace	;wreg free
  2624                           
  2625                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2626  010A9C  C194  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2627  010AA0  C195  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2628  010AA4  0EE4               	movlw	low STR_19
  2629  010AA6  0100               	movlb	0	; () banked
  2630  010AA8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2631  010AAA  0EFF               	movlw	high STR_19
  2632  010AAC  0100               	movlb	0	; () banked
  2633  010AAE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2634  010AB0  EC3B  F09C         	call	_ringbuf_put_str	;wreg free
  2635                           
  2636                           ;My_terminal.c: 46: break;
  2637  010AB4  0012               	return	
  2638  010AB6                     l8981:
  2639                           
  2640                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2641  010AB6  0E00               	movlw	0
  2642  010AB8  0103               	movlb	3	; () banked
  2643  010ABA  6F66               	movwf	terminal_task@i_4309& (0+255),b
  2644  010ABC  D00E               	goto	l8987
  2645  010ABE                     l8983:
  2646  010ABE  C194  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2647  010AC2  C195  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2648  010AC6  0EE4               	movlw	low STR_19
  2649  010AC8  0100               	movlb	0	; () banked
  2650  010ACA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2651  010ACC  0EFF               	movlw	high STR_19
  2652  010ACE  0100               	movlb	0	; () banked
  2653  010AD0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2654  010AD2  EC3B  F09C         	call	_ringbuf_put_str	;wreg free
  2655  010AD6  0103               	movlb	3	; () banked
  2656  010AD8  2B66               	incf	terminal_task@i_4309& (0+255),f,b
  2657  010ADA                     l8987:
  2658                           
  2659                           ; BSR set to: 3
  2660  010ADA  0E85               	movlw	low terminal_task@command
  2661  010ADC  0100               	movlb	0	; () banked
  2662  010ADE  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2663  010AE0  0E01               	movlw	high terminal_task@command
  2664  010AE2  0100               	movlb	0	; () banked
  2665  010AE4  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2666  010AE6  EC89  F08E         	call	_ringbuf_num	;wreg free
  2667  010AEA  0103               	movlb	3	; () banked
  2668  010AEC  5166               	movf	terminal_task@i_4309& (0+255),w,b
  2669  010AEE  0101               	movlb	1	; () banked
  2670  010AF0  6F98               	movwf	??_terminal_task& (0+255),b
  2671  010AF2  6B99               	clrf	(??_terminal_task+1)& (0+255),b
  2672  010AF4  0100               	movlb	0	; () banked
  2673  010AF6  5160               	movf	?_ringbuf_num& (0+255),w,b
  2674  010AF8  0101               	movlb	1	; () banked
  2675  010AFA  5D98               	subwf	??_terminal_task& (0+255),w,b
  2676  010AFC  0100               	movlb	0	; () banked
  2677  010AFE  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2678  010B00  0101               	movlb	1	; () banked
  2679  010B02  5999               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2680  010B04  A0D8               	btfss	status,0,c
  2681  010B06  D7DB               	goto	l8983
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2685                           
  2686                           ; BSR set to: 1
  2687  010B08  0E85               	movlw	low terminal_task@command
  2688  010B0A  0100               	movlb	0	; () banked
  2689  010B0C  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2690  010B0E  0E01               	movlw	high terminal_task@command
  2691  010B10  0100               	movlb	0	; () banked
  2692  010B12  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2693  010B14  ECC2  F09F         	call	_ringbuf_delete	;wreg free
  2694                           
  2695                           ;My_terminal.c: 50: break;
  2696  010B18  0012               	return	
  2697  010B1A                     l8991:
  2698                           
  2699                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2700  010B1A  0E1F               	movlw	31
  2701  010B1C  0103               	movlb	3	; () banked
  2702  010B1E  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  2703  010B20  0012               	return	
  2704                           
  2705                           ; BSR set to: 3
  2706  010B22  0E7F               	movlw	127
  2707  010B24  0103               	movlb	3	; () banked
  2708  010B26  6167               	cpfslt	terminal_task@ascii& (0+255),b
  2709  010B28  0012               	return	
  2710                           
  2711                           ; BSR set to: 3
  2712                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2713  010B2A  0E85               	movlw	low terminal_task@command
  2714  010B2C  0100               	movlb	0	; () banked
  2715  010B2E  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2716  010B30  0E01               	movlw	high terminal_task@command
  2717  010B32  0100               	movlb	0	; () banked
  2718  010B34  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2719  010B36  C367  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2720  010B3A  ECDE  F092         	call	_ringbuf_put	;wreg free
  2721                           
  2722                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2723  010B3E  C194  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2724  010B42  C195  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2725  010B46  C367  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2726  010B4A  ECDE  F092         	call	_ringbuf_put	;wreg free
  2727                           
  2728                           ;My_terminal.c: 57: }
  2729                           
  2730                           ;My_terminal.c: 55: }
  2731                           ;My_terminal.c: 56: break;
  2732  010B4E  0012               	return	
  2733  010B50                     l8999:
  2734  010B50  0103               	movlb	3	; () banked
  2735  010B52  5167               	movf	terminal_task@ascii& (0+255),w,b
  2736                           
  2737                           ; Switch size 1, requested type "space"
  2738                           ; Number of cases is 4, Range of values is 8 to 127
  2739                           ; switch strategies available:
  2740                           ; Name         Instructions Cycles
  2741                           ; simple_byte           13     7 (average)
  2742                           ;	Chosen strategy is simple_byte
  2743  010B54  0A08               	xorlw	8	; case 8
  2744  010B56  B4D8               	btfsc	status,2,c
  2745  010B58  D799               	goto	l8977
  2746  010B5A  0A05               	xorlw	5	; case 13
  2747  010B5C  B4D8               	btfsc	status,2,c
  2748  010B5E  D682               	goto	l8939
  2749  010B60  0A2D               	xorlw	45	; case 32
  2750  010B62  B4D8               	btfsc	status,2,c
  2751  010B64  D77E               	goto	l8975
  2752  010B66  0A5F               	xorlw	95	; case 127
  2753  010B68  B4D8               	btfsc	status,2,c
  2754  010B6A  D7A5               	goto	l8981
  2755  010B6C  D7D6               	goto	l8991
  2756  010B6E                     __end_of_terminal_task:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           fsr1h	equ	0xFE2
  2769                           fsr1l	equ	0xFE1
  2770                           indf2	equ	0xFDF
  2771                           fsr2h	equ	0xFDA
  2772                           fsr2l	equ	0xFD9
  2773                           status	equ	0xFD8
  2774                           
  2775 ;; *************** function _terminal_operation *****************
  2776 ;; Defined at:
  2777 ;;		line 60 in file "main.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2780 ;;		 -> usb_tx(8), 
  2781 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2782 ;;		 -> terminal_task@op0(25), 
  2783 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2784 ;;		 -> terminal_task@op1(25), 
  2785 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2786 ;;		 -> terminal_task@op2(25), 
  2787 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2788 ;;		 -> terminal_task@op3(25), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2800 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;Total ram usage:       10 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:   18
  2807 ;; This function calls:
  2808 ;;		_bootload
  2809 ;;		_ringbuf_put_str
  2810 ;;		_strcmp
  2811 ;;		_terminal_time
  2812 ;; This function is called by:
  2813 ;;		_terminal_task
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text2
  2818  012690                     __ptext2:
  2819                           	opt stack 0
  2820  012690                     _terminal_operation:
  2821                           	opt stack 11
  2822                           
  2823                           ;main.c: 61: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2824                           
  2825                           ;incstack = 0
  2826  012690  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2827  012694  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2828  012698  0ED0               	movlw	low STR_43
  2829  01269A  0100               	movlb	0	; () banked
  2830  01269C  6F62               	movwf	strcmp@s2& (0+255),b
  2831  01269E  0EFF               	movlw	high STR_43
  2832  0126A0  0100               	movlb	0	; () banked
  2833  0126A2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2834  0126A4  ECCF  F09C         	call	_strcmp	;wreg free
  2835  0126A8  0100               	movlb	0	; () banked
  2836  0126AA  5160               	movf	?_strcmp& (0+255),w,b
  2837  0126AC  0100               	movlb	0	; () banked
  2838  0126AE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2839  0126B0  B4D8               	btfsc	status,2,c
  2840  0126B2  D012               	goto	l8733
  2841                           
  2842                           ; BSR set to: 0
  2843  0126B4  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2844  0126B8  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2845  0126BC  0EEF               	movlw	low STR_44
  2846  0126BE  0100               	movlb	0	; () banked
  2847  0126C0  6F62               	movwf	strcmp@s2& (0+255),b
  2848  0126C2  0EFF               	movlw	high STR_44
  2849  0126C4  0100               	movlb	0	; () banked
  2850  0126C6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2851  0126C8  ECCF  F09C         	call	_strcmp	;wreg free
  2852  0126CC  0100               	movlb	0	; () banked
  2853  0126CE  5160               	movf	?_strcmp& (0+255),w,b
  2854  0126D0  0100               	movlb	0	; () banked
  2855  0126D2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2856  0126D4  A4D8               	btfss	status,2,c
  2857  0126D6  D00C               	goto	l8735
  2858  0126D8                     l8733:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;main.c: 62: ringbuf_put_str(tx,
  2862                           ;main.c: 63: "\t******************************\n"
  2863                           ;main.c: 64: "\t**** PIC18F27J53 template ****\n"
  2864                           ;main.c: 65: "\t**** Made by @Ryokeri14   ****\n"
  2865                           ;main.c: 66: "\t******************************\n\n"
  2866                           ;main.c: 67: "\tprint_time(t)\n"
  2867                           ;main.c: 68: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  2868                           ;main.c: 69: "\n\tfor Developper\n"
  2869                           ;main.c: 70: "\tRESET();\n"
  2870                           ;main.c: 71: "\tbootload\n"
  2871                           ;main.c: 72: );
  2872  0126D8  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2873  0126DC  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2874  0126E0  0E46               	movlw	low STR_45
  2875  0126E2  0100               	movlb	0	; () banked
  2876  0126E4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2877  0126E6  0EFE               	movlw	high STR_45
  2878  0126E8  0100               	movlb	0	; () banked
  2879  0126EA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2880  0126EC  EC3B  F09C         	call	_ringbuf_put_str	;wreg free
  2881  0126F0                     l8735:
  2882                           
  2883                           ;main.c: 73: }
  2884                           ;main.c: 74: terminal_time(tx, op0, op1, op2);
  2885  0126F0  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  2886  0126F4  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2887  0126F8  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  2888  0126FC  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2889  012700  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  2890  012704  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2891  012708  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  2892  01270C  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2893  012710  EC2D  F082         	call	_terminal_time	;wreg free
  2894                           
  2895                           ;main.c: 75: if (!strcmp(op0, "RESET();")) {
  2896  012714  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2897  012718  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2898  01271C  0E89               	movlw	low STR_46
  2899  01271E  0100               	movlb	0	; () banked
  2900  012720  6F62               	movwf	strcmp@s2& (0+255),b
  2901  012722  0EFF               	movlw	high STR_46
  2902  012724  0100               	movlb	0	; () banked
  2903  012726  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2904  012728  ECCF  F09C         	call	_strcmp	;wreg free
  2905  01272C  0100               	movlb	0	; () banked
  2906  01272E  5160               	movf	?_strcmp& (0+255),w,b
  2907  012730  0100               	movlb	0	; () banked
  2908  012732  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2909  012734  B4D8               	btfsc	status,2,c
  2910                           
  2911                           ; BSR set to: 0
  2912  012736  00FF               	reset		;# 
  2913                           
  2914                           ;main.c: 77: }
  2915                           ;main.c: 78: if (!strcmp(op0, "bootload")) {
  2916  012738  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2917  01273C  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2918  012740  0E92               	movlw	low STR_47
  2919  012742  0100               	movlb	0	; () banked
  2920  012744  6F62               	movwf	strcmp@s2& (0+255),b
  2921  012746  0EFF               	movlw	high STR_47
  2922  012748  0100               	movlb	0	; () banked
  2923  01274A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2924  01274C  ECCF  F09C         	call	_strcmp	;wreg free
  2925  012750  0100               	movlb	0	; () banked
  2926  012752  5160               	movf	?_strcmp& (0+255),w,b
  2927  012754  0100               	movlb	0	; () banked
  2928  012756  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2929  012758  A4D8               	btfss	status,2,c
  2930  01275A  0012               	return	
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;main.c: 79: bootload();
  2934  01275C  ECEB  F09D         	call	_bootload	;wreg free
  2935  012760  0012               	return	
  2936  012762                     __end_of_terminal_operation:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           intcon	equ	0xFF2
  2945                           postinc0	equ	0xFEE
  2946                           wreg	equ	0xFE8
  2947                           postdec1	equ	0xFE5
  2948                           fsr1h	equ	0xFE2
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _terminal_time *****************
  2956 ;; Defined at:
  2957 ;;		line 93 in file "../My_library/My_terminal.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  2960 ;;		 -> usb_tx(8), 
  2961 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  2962 ;;		 -> terminal_task@op0(25), 
  2963 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  2964 ;;		 -> terminal_task@op1(25), 
  2965 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  2966 ;;		 -> terminal_task@op2(25), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;		None               void
  2971 ;; Registers used:
  2972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2978 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2981 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;Total ram usage:        9 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:   17
  2985 ;; This function calls:
  2986 ;;		_atoi
  2987 ;;		_month_length
  2988 ;;		_print_time
  2989 ;;		_strcmp
  2990 ;;		_terminal_at_hand
  2991 ;; This function is called by:
  2992 ;;		_terminal_operation
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text3
  2997  01045A                     __ptext3:
  2998                           	opt stack 0
  2999  01045A                     _terminal_time:
  3000                           	opt stack 11
  3001                           
  3002                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3003                           
  3004                           ;incstack = 0
  3005  01045A  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3006  01045E  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3007  010462  0E7E               	movlw	low STR_25
  3008  010464  0100               	movlb	0	; () banked
  3009  010466  6F62               	movwf	strcmp@s2& (0+255),b
  3010  010468  0EFF               	movlw	high STR_25
  3011  01046A  0100               	movlb	0	; () banked
  3012  01046C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3013  01046E  ECCF  F09C         	call	_strcmp	;wreg free
  3014  010472  0100               	movlb	0	; () banked
  3015  010474  5160               	movf	?_strcmp& (0+255),w,b
  3016  010476  0100               	movlb	0	; () banked
  3017  010478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3018  01047A  B4D8               	btfsc	status,2,c
  3019  01047C  D012               	goto	l8487
  3020                           
  3021                           ; BSR set to: 0
  3022  01047E  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3023  010482  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3024  010486  0EED               	movlw	low (STR_27+1)
  3025  010488  0100               	movlb	0	; () banked
  3026  01048A  6F62               	movwf	strcmp@s2& (0+255),b
  3027  01048C  0EFF               	movlw	high (STR_27+1)
  3028  01048E  0100               	movlb	0	; () banked
  3029  010490  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3030  010492  ECCF  F09C         	call	_strcmp	;wreg free
  3031  010496  0100               	movlb	0	; () banked
  3032  010498  5160               	movf	?_strcmp& (0+255),w,b
  3033  01049A  0100               	movlb	0	; () banked
  3034  01049C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3035  01049E  A4D8               	btfss	status,2,c
  3036  0104A0  D006               	goto	l8489
  3037  0104A2                     l8487:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;My_terminal.c: 95: print_time(tx);
  3041  0104A2  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  3042  0104A6  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  3043  0104AA  EC2B  F09A         	call	_print_time	;wreg free
  3044  0104AE                     l8489:
  3045                           
  3046                           ;My_terminal.c: 96: }
  3047                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3048  0104AE  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3049  0104B2  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3050  0104B6  0EEC               	movlw	low STR_27
  3051  0104B8  0100               	movlb	0	; () banked
  3052  0104BA  6F62               	movwf	strcmp@s2& (0+255),b
  3053  0104BC  0EFF               	movlw	high STR_27
  3054  0104BE  0100               	movlb	0	; () banked
  3055  0104C0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3056  0104C2  ECCF  F09C         	call	_strcmp	;wreg free
  3057  0104C6  0100               	movlb	0	; () banked
  3058  0104C8  5160               	movf	?_strcmp& (0+255),w,b
  3059  0104CA  0100               	movlb	0	; () banked
  3060  0104CC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3061  0104CE  B4D8               	btfsc	status,2,c
  3062  0104D0  D012               	goto	l8493
  3063                           
  3064                           ; BSR set to: 0
  3065  0104D2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3066  0104D6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3067  0104DA  0E72               	movlw	low STR_28
  3068  0104DC  0100               	movlb	0	; () banked
  3069  0104DE  6F62               	movwf	strcmp@s2& (0+255),b
  3070  0104E0  0EFF               	movlw	high STR_28
  3071  0104E2  0100               	movlb	0	; () banked
  3072  0104E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3073  0104E6  ECCF  F09C         	call	_strcmp	;wreg free
  3074  0104EA  0100               	movlb	0	; () banked
  3075  0104EC  5160               	movf	?_strcmp& (0+255),w,b
  3076  0104EE  0100               	movlb	0	; () banked
  3077  0104F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3078  0104F2  A4D8               	btfss	status,2,c
  3079  0104F4  0012               	return	
  3080  0104F6                     l8493:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3084  0104F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3085  0104FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3086  0104FE  0EEA               	movlw	low (STR_34+2)
  3087  010500  0100               	movlb	0	; () banked
  3088  010502  6F62               	movwf	strcmp@s2& (0+255),b
  3089  010504  0EFF               	movlw	high (STR_34+2)
  3090  010506  0100               	movlb	0	; () banked
  3091  010508  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3092  01050A  ECCF  F09C         	call	_strcmp	;wreg free
  3093  01050E  0100               	movlb	0	; () banked
  3094  010510  5160               	movf	?_strcmp& (0+255),w,b
  3095  010512  0100               	movlb	0	; () banked
  3096  010514  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3097  010516  B4D8               	btfsc	status,2,c
  3098  010518  D012               	goto	l8497
  3099                           
  3100                           ; BSR set to: 0
  3101  01051A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3102  01051E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3103  010522  0ED5               	movlw	low STR_30
  3104  010524  0100               	movlb	0	; () banked
  3105  010526  6F62               	movwf	strcmp@s2& (0+255),b
  3106  010528  0EFF               	movlw	high STR_30
  3107  01052A  0100               	movlb	0	; () banked
  3108  01052C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3109  01052E  ECCF  F09C         	call	_strcmp	;wreg free
  3110  010532  0100               	movlb	0	; () banked
  3111  010534  5160               	movf	?_strcmp& (0+255),w,b
  3112  010536  0100               	movlb	0	; () banked
  3113  010538  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3114  01053A  A4D8               	btfss	status,2,c
  3115  01053C  D01C               	goto	l8499
  3116  01053E                     l8497:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3120  01053E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3121  010542  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3122  010546  0E25               	movlw	low (_now+10)
  3123  010548  0100               	movlb	0	; () banked
  3124  01054A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3125  01054C  0E00               	movlw	high (_now+10)
  3126  01054E  0100               	movlb	0	; () banked
  3127  010550  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3128  010552  0E00               	movlw	0
  3129  010554  0100               	movlb	0	; () banked
  3130  010556  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3131  010558  0E63               	movlw	99
  3132  01055A  0100               	movlb	0	; () banked
  3133  01055C  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3134  01055E  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3135  010562  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3136  010566  EC97  F08D         	call	_atoi	;wreg free
  3137  01056A  0100               	movlb	0	; () banked
  3138  01056C  5166               	movf	?_atoi& (0+255),w,b
  3139  01056E  0100               	movlb	0	; () banked
  3140  010570  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3141  010572  EC6D  F09C         	call	_terminal_at_hand	;wreg free
  3142  010576                     l8499:
  3143                           
  3144                           ;My_terminal.c: 100: }
  3145                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3146  010576  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3147  01057A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3148  01057E  0EF1               	movlw	low STR_31
  3149  010580  0100               	movlb	0	; () banked
  3150  010582  6F62               	movwf	strcmp@s2& (0+255),b
  3151  010584  0EFF               	movlw	high STR_31
  3152  010586  0100               	movlb	0	; () banked
  3153  010588  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3154  01058A  ECCF  F09C         	call	_strcmp	;wreg free
  3155  01058E  0100               	movlb	0	; () banked
  3156  010590  5160               	movf	?_strcmp& (0+255),w,b
  3157  010592  0100               	movlb	0	; () banked
  3158  010594  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3159  010596  B4D8               	btfsc	status,2,c
  3160  010598  D012               	goto	l8503
  3161                           
  3162                           ; BSR set to: 0
  3163  01059A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3164  01059E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3165  0105A2  0ECA               	movlw	low STR_32
  3166  0105A4  0100               	movlb	0	; () banked
  3167  0105A6  6F62               	movwf	strcmp@s2& (0+255),b
  3168  0105A8  0EFF               	movlw	high STR_32
  3169  0105AA  0100               	movlb	0	; () banked
  3170  0105AC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3171  0105AE  ECCF  F09C         	call	_strcmp	;wreg free
  3172  0105B2  0100               	movlb	0	; () banked
  3173  0105B4  5160               	movf	?_strcmp& (0+255),w,b
  3174  0105B6  0100               	movlb	0	; () banked
  3175  0105B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3176  0105BA  A4D8               	btfss	status,2,c
  3177  0105BC  D01C               	goto	l8505
  3178  0105BE                     l8503:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3182  0105BE  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3183  0105C2  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3184  0105C6  0E24               	movlw	low (_now+9)
  3185  0105C8  0100               	movlb	0	; () banked
  3186  0105CA  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3187  0105CC  0E00               	movlw	high (_now+9)
  3188  0105CE  0100               	movlb	0	; () banked
  3189  0105D0  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3190  0105D2  0E01               	movlw	1
  3191  0105D4  0100               	movlb	0	; () banked
  3192  0105D6  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3193  0105D8  0E0C               	movlw	12
  3194  0105DA  0100               	movlb	0	; () banked
  3195  0105DC  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3196  0105DE  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3197  0105E2  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3198  0105E6  EC97  F08D         	call	_atoi	;wreg free
  3199  0105EA  0100               	movlb	0	; () banked
  3200  0105EC  5166               	movf	?_atoi& (0+255),w,b
  3201  0105EE  0100               	movlb	0	; () banked
  3202  0105F0  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3203  0105F2  EC6D  F09C         	call	_terminal_at_hand	;wreg free
  3204  0105F6                     l8505:
  3205                           
  3206                           ;My_terminal.c: 103: }
  3207                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3208  0105F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3209  0105FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3210  0105FE  0EE2               	movlw	low (STR_1+3)
  3211  010600  0100               	movlb	0	; () banked
  3212  010602  6F62               	movwf	strcmp@s2& (0+255),b
  3213  010604  0EFF               	movlw	high (STR_1+3)
  3214  010606  0100               	movlb	0	; () banked
  3215  010608  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3216  01060A  ECCF  F09C         	call	_strcmp	;wreg free
  3217  01060E  0100               	movlb	0	; () banked
  3218  010610  5160               	movf	?_strcmp& (0+255),w,b
  3219  010612  0100               	movlb	0	; () banked
  3220  010614  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3221  010616  B4D8               	btfsc	status,2,c
  3222  010618  D012               	goto	l8509
  3223                           
  3224                           ; BSR set to: 0
  3225  01061A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3226  01061E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3227  010622  0EE8               	movlw	low STR_34
  3228  010624  0100               	movlb	0	; () banked
  3229  010626  6F62               	movwf	strcmp@s2& (0+255),b
  3230  010628  0EFF               	movlw	high STR_34
  3231  01062A  0100               	movlb	0	; () banked
  3232  01062C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3233  01062E  ECCF  F09C         	call	_strcmp	;wreg free
  3234  010632  0100               	movlb	0	; () banked
  3235  010634  5160               	movf	?_strcmp& (0+255),w,b
  3236  010636  0100               	movlb	0	; () banked
  3237  010638  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3238  01063A  A4D8               	btfss	status,2,c
  3239  01063C  D022               	goto	l8513
  3240  01063E                     l8509:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3244  01063E  C024  F066         	movff	_now+9,month_length@month
  3245  010642  5025               	movf	_now+10,w,c
  3246  010644  EC57  F090         	call	_month_length
  3247  010648  0100               	movlb	0	; () banked
  3248  01064A  6FBE               	movwf	_terminal_time$5936& (0+255),b
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3252  01064C  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3253  010650  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3254  010654  0E23               	movlw	low (_now+8)
  3255  010656  0100               	movlb	0	; () banked
  3256  010658  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3257  01065A  0E00               	movlw	high (_now+8)
  3258  01065C  0100               	movlb	0	; () banked
  3259  01065E  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3260  010660  0E01               	movlw	1
  3261  010662  0100               	movlb	0	; () banked
  3262  010664  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3263  010666  C0BE  F0B4         	movff	_terminal_time$5936,terminal_at_hand@max
  3264  01066A  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3265  01066E  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3266  010672  EC97  F08D         	call	_atoi	;wreg free
  3267  010676  0100               	movlb	0	; () banked
  3268  010678  5166               	movf	?_atoi& (0+255),w,b
  3269  01067A  0100               	movlb	0	; () banked
  3270  01067C  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3271  01067E  EC6D  F09C         	call	_terminal_at_hand	;wreg free
  3272  010682                     l8513:
  3273                           
  3274                           ;My_terminal.c: 106: }
  3275                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3276  010682  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3277  010686  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3278  01068A  0ECE               	movlw	low (STR_32+4)
  3279  01068C  0100               	movlb	0	; () banked
  3280  01068E  6F62               	movwf	strcmp@s2& (0+255),b
  3281  010690  0EFF               	movlw	high (STR_32+4)
  3282  010692  0100               	movlb	0	; () banked
  3283  010694  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3284  010696  ECCF  F09C         	call	_strcmp	;wreg free
  3285  01069A  0100               	movlb	0	; () banked
  3286  01069C  5160               	movf	?_strcmp& (0+255),w,b
  3287  01069E  0100               	movlb	0	; () banked
  3288  0106A0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3289  0106A2  B4D8               	btfsc	status,2,c
  3290  0106A4  D012               	goto	l8517
  3291                           
  3292                           ; BSR set to: 0
  3293  0106A6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3294  0106AA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3295  0106AE  0EDA               	movlw	low STR_36
  3296  0106B0  0100               	movlb	0	; () banked
  3297  0106B2  6F62               	movwf	strcmp@s2& (0+255),b
  3298  0106B4  0EFF               	movlw	high STR_36
  3299  0106B6  0100               	movlb	0	; () banked
  3300  0106B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3301  0106BA  ECCF  F09C         	call	_strcmp	;wreg free
  3302  0106BE  0100               	movlb	0	; () banked
  3303  0106C0  5160               	movf	?_strcmp& (0+255),w,b
  3304  0106C2  0100               	movlb	0	; () banked
  3305  0106C4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3306  0106C6  A4D8               	btfss	status,2,c
  3307  0106C8  D01C               	goto	l8519
  3308  0106CA                     l8517:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3312  0106CA  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3313  0106CE  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3314  0106D2  0E21               	movlw	low (_now+6)
  3315  0106D4  0100               	movlb	0	; () banked
  3316  0106D6  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3317  0106D8  0E00               	movlw	high (_now+6)
  3318  0106DA  0100               	movlb	0	; () banked
  3319  0106DC  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3320  0106DE  0E00               	movlw	0
  3321  0106E0  0100               	movlb	0	; () banked
  3322  0106E2  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3323  0106E4  0E17               	movlw	23
  3324  0106E6  0100               	movlb	0	; () banked
  3325  0106E8  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3326  0106EA  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3327  0106EE  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3328  0106F2  EC97  F08D         	call	_atoi	;wreg free
  3329  0106F6  0100               	movlb	0	; () banked
  3330  0106F8  5166               	movf	?_atoi& (0+255),w,b
  3331  0106FA  0100               	movlb	0	; () banked
  3332  0106FC  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3333  0106FE  EC6D  F09C         	call	_terminal_at_hand	;wreg free
  3334  010702                     l8519:
  3335                           
  3336                           ;My_terminal.c: 109: }
  3337                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3338  010702  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3339  010706  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3340  01070A  0EF3               	movlw	low STR_37
  3341  01070C  0100               	movlb	0	; () banked
  3342  01070E  6F62               	movwf	strcmp@s2& (0+255),b
  3343  010710  0EFF               	movlw	high STR_37
  3344  010712  0100               	movlb	0	; () banked
  3345  010714  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3346  010716  ECCF  F09C         	call	_strcmp	;wreg free
  3347  01071A  0100               	movlb	0	; () banked
  3348  01071C  5160               	movf	?_strcmp& (0+255),w,b
  3349  01071E  0100               	movlb	0	; () banked
  3350  010720  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3351  010722  B4D8               	btfsc	status,2,c
  3352  010724  D012               	goto	l8523
  3353                           
  3354                           ; BSR set to: 0
  3355  010726  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3356  01072A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3357  01072E  0EC3               	movlw	low STR_38
  3358  010730  0100               	movlb	0	; () banked
  3359  010732  6F62               	movwf	strcmp@s2& (0+255),b
  3360  010734  0EFF               	movlw	high STR_38
  3361  010736  0100               	movlb	0	; () banked
  3362  010738  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3363  01073A  ECCF  F09C         	call	_strcmp	;wreg free
  3364  01073E  0100               	movlb	0	; () banked
  3365  010740  5160               	movf	?_strcmp& (0+255),w,b
  3366  010742  0100               	movlb	0	; () banked
  3367  010744  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3368  010746  A4D8               	btfss	status,2,c
  3369  010748  D01C               	goto	l8525
  3370  01074A                     l8523:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3374  01074A  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3375  01074E  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3376  010752  0E20               	movlw	low (_now+5)
  3377  010754  0100               	movlb	0	; () banked
  3378  010756  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3379  010758  0E00               	movlw	high (_now+5)
  3380  01075A  0100               	movlb	0	; () banked
  3381  01075C  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3382  01075E  0E00               	movlw	0
  3383  010760  0100               	movlb	0	; () banked
  3384  010762  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3385  010764  0E3B               	movlw	59
  3386  010766  0100               	movlb	0	; () banked
  3387  010768  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3388  01076A  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3389  01076E  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3390  010772  EC97  F08D         	call	_atoi	;wreg free
  3391  010776  0100               	movlb	0	; () banked
  3392  010778  5166               	movf	?_atoi& (0+255),w,b
  3393  01077A  0100               	movlb	0	; () banked
  3394  01077C  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3395  01077E  EC6D  F09C         	call	_terminal_at_hand	;wreg free
  3396  010782                     l8525:
  3397                           
  3398                           ;My_terminal.c: 112: }
  3399                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3400  010782  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3401  010786  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3402  01078A  0EF5               	movlw	low STR_39
  3403  01078C  0100               	movlb	0	; () banked
  3404  01078E  6F62               	movwf	strcmp@s2& (0+255),b
  3405  010790  0EFF               	movlw	high STR_39
  3406  010792  0100               	movlb	0	; () banked
  3407  010794  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3408  010796  ECCF  F09C         	call	_strcmp	;wreg free
  3409  01079A  0100               	movlb	0	; () banked
  3410  01079C  5160               	movf	?_strcmp& (0+255),w,b
  3411  01079E  0100               	movlb	0	; () banked
  3412  0107A0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3413  0107A2  B4D8               	btfsc	status,2,c
  3414  0107A4  D012               	goto	l8529
  3415                           
  3416                           ; BSR set to: 0
  3417  0107A6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3418  0107AA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3419  0107AE  0EBC               	movlw	low STR_40
  3420  0107B0  0100               	movlb	0	; () banked
  3421  0107B2  6F62               	movwf	strcmp@s2& (0+255),b
  3422  0107B4  0EFF               	movlw	high STR_40
  3423  0107B6  0100               	movlb	0	; () banked
  3424  0107B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3425  0107BA  ECCF  F09C         	call	_strcmp	;wreg free
  3426  0107BE  0100               	movlb	0	; () banked
  3427  0107C0  5160               	movf	?_strcmp& (0+255),w,b
  3428  0107C2  0100               	movlb	0	; () banked
  3429  0107C4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3430  0107C6  A4D8               	btfss	status,2,c
  3431  0107C8  0012               	return	
  3432  0107CA                     l8529:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3436  0107CA  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3437  0107CE  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3438  0107D2  0E1F               	movlw	low (_now+4)
  3439  0107D4  0100               	movlb	0	; () banked
  3440  0107D6  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3441  0107D8  0E00               	movlw	high (_now+4)
  3442  0107DA  0100               	movlb	0	; () banked
  3443  0107DC  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3444  0107DE  0E00               	movlw	0
  3445  0107E0  0100               	movlb	0	; () banked
  3446  0107E2  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3447  0107E4  0E3B               	movlw	59
  3448  0107E6  0100               	movlb	0	; () banked
  3449  0107E8  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3450  0107EA  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3451  0107EE  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3452  0107F2  EC97  F08D         	call	_atoi	;wreg free
  3453  0107F6  0100               	movlb	0	; () banked
  3454  0107F8  5166               	movf	?_atoi& (0+255),w,b
  3455  0107FA  0100               	movlb	0	; () banked
  3456  0107FC  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3457  0107FE  EC6D  F09C         	call	_terminal_at_hand	;wreg free
  3458  010802  0012               	return	
  3459  010804                     __end_of_terminal_time:
  3460                           	opt stack 0
  3461                           tblptru	equ	0xFF8
  3462                           tblptrh	equ	0xFF7
  3463                           tblptrl	equ	0xFF6
  3464                           tablat	equ	0xFF5
  3465                           prodh	equ	0xFF4
  3466                           prodl	equ	0xFF3
  3467                           intcon	equ	0xFF2
  3468                           postinc0	equ	0xFEE
  3469                           wreg	equ	0xFE8
  3470                           postdec1	equ	0xFE5
  3471                           fsr1h	equ	0xFE2
  3472                           fsr1l	equ	0xFE1
  3473                           indf2	equ	0xFDF
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _terminal_at_hand *****************
  3479 ;; Defined at:
  3480 ;;		line 82 in file "../My_library/My_terminal.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3483 ;;		 -> usb_tx(8), 
  3484 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3485 ;;		 -> now(14), 
  3486 ;;  min             1   83[BANK0 ] unsigned char 
  3487 ;;  max             1   84[BANK0 ] unsigned char 
  3488 ;;  value           1   85[BANK0 ] unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;		None               void
  3493 ;; Registers used:
  3494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3500 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;Total ram usage:        7 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:   16
  3507 ;; This function calls:
  3508 ;;		_RTCC_from_caltime
  3509 ;;		_print_time
  3510 ;;		_ringbuf_put_str
  3511 ;; This function is called by:
  3512 ;;		_terminal_time
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text4
  3517  0138DA                     __ptext4:
  3518                           	opt stack 0
  3519  0138DA                     _terminal_at_hand:
  3520                           	opt stack 11
  3521                           
  3522                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3523                           
  3524                           ;incstack = 0
  3525  0138DA  0100               	movlb	0	; () banked
  3526  0138DC  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3527  0138DE  0100               	movlb	0	; () banked
  3528  0138E0  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3529  0138E2  A0D8               	btfss	status,0,c
  3530  0138E4  D01E               	goto	l8243
  3531                           
  3532                           ; BSR set to: 0
  3533  0138E6  0100               	movlb	0	; () banked
  3534  0138E8  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3535  0138EA  0100               	movlb	0	; () banked
  3536  0138EC  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3537  0138EE  A0D8               	btfss	status,0,c
  3538  0138F0  D018               	goto	l8243
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;My_terminal.c: 84: *hand = value;
  3542  0138F2  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3543  0138F6  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3544  0138FA  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3548  0138FE  0E1B               	movlw	low _now
  3549  013900  0100               	movlb	0	; () banked
  3550  013902  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3551  013904  0E00               	movlw	high _now
  3552  013906  0100               	movlb	0	; () banked
  3553  013908  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3554  01390A  ECAF  F09F         	call	_RTCC_from_caltime	;wreg free
  3555                           
  3556                           ;My_terminal.c: 86: time_change_flag = 1;
  3557  01390E  0E01               	movlw	1
  3558  013910  0100               	movlb	0	; () banked
  3559  013912  6FF9               	movwf	_time_change_flag& (0+255),b
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;My_terminal.c: 87: print_time(tx);
  3563  013914  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3564  013918  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3565  01391C  EC2B  F09A         	call	_print_time	;wreg free
  3566                           
  3567                           ;My_terminal.c: 88: } else {
  3568  013920  0012               	return	
  3569  013922                     l8243:
  3570                           
  3571                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3572  013922  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3573  013926  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3574  01392A  0EAD               	movlw	low STR_24
  3575  01392C  0100               	movlb	0	; () banked
  3576  01392E  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3577  013930  0EFF               	movlw	high STR_24
  3578  013932  0100               	movlb	0	; () banked
  3579  013934  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3580  013936  EC3B  F09C         	call	_ringbuf_put_str	;wreg free
  3581  01393A  0012               	return	
  3582  01393C                     __end_of_terminal_at_hand:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           prodh	equ	0xFF4
  3589                           prodl	equ	0xFF3
  3590                           intcon	equ	0xFF2
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _print_time *****************
  3602 ;; Defined at:
  3603 ;;		line 68 in file "../My_library/My_terminal.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3606 ;;		 -> usb_tx(8), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  str            30   49[BANK0 ] unsigned char [30]
  3609 ;; Return value:  Size  Location     Type
  3610 ;;		None               void
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;Total ram usage:       32 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:   15
  3625 ;; This function calls:
  3626 ;;		_RTCC_from_RTCC
  3627 ;;		_ringbuf_put_str
  3628 ;;		_sprintf
  3629 ;; This function is called by:
  3630 ;;		_terminal_at_hand
  3631 ;;		_terminal_time
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text5
  3636  013456                     __ptext5:
  3637                           	opt stack 0
  3638  013456                     _print_time:
  3639                           	opt stack 11
  3640                           
  3641                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3642                           
  3643                           ;incstack = 0
  3644  013456  0E1B               	movlw	low _now
  3645  013458  0100               	movlb	0	; () banked
  3646  01345A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3647  01345C  0E00               	movlw	high _now
  3648  01345E  0100               	movlb	0	; () banked
  3649  013460  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3650  013462  EC5E  F0A0         	call	_RTCC_from_RTCC	;wreg free
  3651                           
  3652                           ;My_terminal.c: 70: char str[30];
  3653                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3654                           ;My_terminal.c: 72: now.YY,
  3655                           ;My_terminal.c: 73: now.MM,
  3656                           ;My_terminal.c: 74: now.DD,
  3657                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3658                           ;My_terminal.c: 76: now.hh,
  3659                           ;My_terminal.c: 77: now.mm,
  3660                           ;My_terminal.c: 78: now.ss);
  3661  013466  0E91               	movlw	low print_time@str
  3662  013468  0100               	movlb	0	; () banked
  3663  01346A  6F6C               	movwf	sprintf@sp& (0+255),b
  3664  01346C  0E00               	movlw	high print_time@str
  3665  01346E  0100               	movlb	0	; () banked
  3666  013470  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3667  013472  0E31               	movlw	low STR_23
  3668  013474  0100               	movlb	0	; () banked
  3669  013476  6F6E               	movwf	sprintf@f& (0+255),b
  3670  013478  0EFF               	movlw	high STR_23
  3671  01347A  0100               	movlb	0	; () banked
  3672  01347C  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3673  01347E  C025  F070         	movff	_now+10,?_sprintf+4
  3674  013482  0100               	movlb	0	; () banked
  3675  013484  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3676  013486  C024  F072         	movff	_now+9,?_sprintf+6
  3677  01348A  0100               	movlb	0	; () banked
  3678  01348C  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3679  01348E  C023  F074         	movff	_now+8,?_sprintf+8
  3680  013492  0100               	movlb	0	; () banked
  3681  013494  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3682  013496  5022               	movf	_now+7,w,c
  3683  013498  0D04               	mullw	4
  3684  01349A  0E14               	movlw	low _weekday_3char
  3685  01349C  24F3               	addwf	prodl,w,c
  3686  01349E  0100               	movlb	0	; () banked
  3687  0134A0  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3688  0134A2  0EFE               	movlw	high _weekday_3char
  3689  0134A4  20F4               	addwfc	prodh,w,c
  3690  0134A6  0100               	movlb	0	; () banked
  3691  0134A8  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3692  0134AA  C021  F078         	movff	_now+6,?_sprintf+12
  3693  0134AE  0100               	movlb	0	; () banked
  3694  0134B0  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3695  0134B2  C020  F07A         	movff	_now+5,?_sprintf+14
  3696  0134B6  0100               	movlb	0	; () banked
  3697  0134B8  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3698  0134BA  C01F  F07C         	movff	_now+4,?_sprintf+16
  3699  0134BE  0100               	movlb	0	; () banked
  3700  0134C0  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3701  0134C2  EC00  F080         	call	_sprintf	;wreg free
  3702                           
  3703                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3704  0134C6  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3705  0134CA  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3706  0134CE  0E91               	movlw	low print_time@str
  3707  0134D0  0100               	movlb	0	; () banked
  3708  0134D2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3709  0134D4  0E00               	movlw	high print_time@str
  3710  0134D6  0100               	movlb	0	; () banked
  3711  0134D8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3712  0134DA  EC3B  F09C         	call	_ringbuf_put_str	;wreg free
  3713  0134DE  0012               	return		;funcret
  3714  0134E0                     __end_of_print_time:
  3715                           	opt stack 0
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           intcon	equ	0xFF2
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           indf2	equ	0xFDF
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _sprintf *****************
  3734 ;; Defined at:
  3735 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3738 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  3739 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3740 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  tmpval          4    0        struct .
  3743 ;;  width           2   45[BANK0 ] int 
  3744 ;;  len             2   41[BANK0 ] unsigned int 
  3745 ;;  val             2   39[BANK0 ] unsigned int 
  3746 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  3747 ;;		 -> STR_50(7), weekday_3char(28), 
  3748 ;;  ap              2   35[BANK0 ] PTR void [1]
  3749 ;;		 -> ?_sprintf(2), 
  3750 ;;  c               1   44[BANK0 ] char 
  3751 ;;  flag            1   43[BANK0 ] unsigned char 
  3752 ;;  prec            1   34[BANK0 ] char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   12[BANK0 ] int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3762 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;Total ram usage:       35 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:   12
  3769 ;; This function calls:
  3770 ;;		___lwdiv
  3771 ;;		___lwmod
  3772 ;;		___wmul
  3773 ;;		_isdigit
  3774 ;; This function is called by:
  3775 ;;		_print_time
  3776 ;;		_display_dec
  3777 ;;		_print_time_dec
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text6
  3782  010000                     __ptext6:
  3783                           	opt stack 0
  3784  010000                     _sprintf:
  3785                           	opt stack 13
  3786                           
  3787                           ;doprnt.c: 494: va_list ap;
  3788                           ;doprnt.c: 499: signed char c;
  3789                           ;doprnt.c: 501: int width;
  3790                           ;doprnt.c: 506: signed char prec;
  3791                           ;doprnt.c: 508: unsigned char flag;
  3792                           ;doprnt.c: 523: union {
  3793                           ;doprnt.c: 524: unsigned long vd;
  3794                           ;doprnt.c: 525: double integ;
  3795                           ;doprnt.c: 526: } tmpval;
  3796                           ;doprnt.c: 528: unsigned int val;
  3797                           ;doprnt.c: 529: unsigned len;
  3798                           ;doprnt.c: 530: const char * cp;
  3799                           ;doprnt.c: 533: *ap = __va_start();
  3800                           
  3801                           ;incstack = 0
  3802  010000  0E70               	movlw	low (?_sprintf+4)
  3803  010002  0100               	movlb	0	; () banked
  3804  010004  6F83               	movwf	sprintf@ap& (0+255),b
  3805  010006  0E00               	movlw	high (?_sprintf+4)
  3806  010008  0100               	movlb	0	; () banked
  3807  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3808                           
  3809                           ;doprnt.c: 536: while(c = *f++) {
  3810  01000C  D20F               	goto	l8145
  3811  01000E                     l8005:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;doprnt.c: 538: if(c != '%')
  3815  01000E  0E25               	movlw	37
  3816  010010  0100               	movlb	0	; () banked
  3817  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  3818  010014  B4D8               	btfsc	status,2,c
  3819  010016  D00A               	goto	l8011
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;doprnt.c: 540: {
  3823                           ;doprnt.c: 541: ((*sp++ = (c)));
  3824  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3825  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3826  010020  C08C  FFDF         	movff	sprintf@c,indf2
  3827                           
  3828                           ; BSR set to: 0
  3829  010024  0100               	movlb	0	; () banked
  3830  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3831  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3832                           
  3833                           ;doprnt.c: 542: continue;
  3834  01002A  D200               	goto	l8145
  3835  01002C                     l8011:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;doprnt.c: 543: }
  3839                           ;doprnt.c: 546: width = 0;
  3840  01002C  0E00               	movlw	0
  3841  01002E  0100               	movlb	0	; () banked
  3842  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3843  010032  0E00               	movlw	0
  3844  010034  6F8D               	movwf	sprintf@width& (0+255),b
  3845                           
  3846                           ;doprnt.c: 548: flag = 0;
  3847  010036  0E00               	movlw	0
  3848  010038  0100               	movlb	0	; () banked
  3849  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;doprnt.c: 551: switch(*f) {
  3853                           
  3854                           ;doprnt.c: 550: for(;;) {
  3855  01003C  D005               	goto	l8017
  3856  01003E                     l8013:
  3857                           
  3858                           ;doprnt.c: 580: flag |= 0x04;
  3859  01003E  0100               	movlb	0	; () banked
  3860  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  3861                           
  3862                           ;doprnt.c: 581: f++;
  3863  010042  0100               	movlb	0	; () banked
  3864  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3865  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3866  010048                     l8017:
  3867  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  3868  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3869  010050                     	if	0	;tblptru may be non-zero
  3870  010050                     	endif
  3871  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3872  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  3873  010052  6EF8               	movwf	tblptru,c
  3874  010054                     	endif
  3875  010054  0008               	tblrd		*
  3876  010056  50F5               	movf	tablat,w,c
  3877                           
  3878                           ; Switch size 1, requested type "space"
  3879                           ; Number of cases is 1, Range of values is 48 to 48
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte            4     3 (average)
  3883                           ;	Chosen strategy is simple_byte
  3884  010058  0A30               	xorlw	48	; case 48
  3885  01005A  B4D8               	btfsc	status,2,c
  3886  01005C  D7F0               	goto	l8013
  3887                           
  3888                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3889                           
  3890                           ;doprnt.c: 586: }
  3891                           
  3892                           ;doprnt.c: 585: break;
  3893  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  3894  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3895  010066                     	if	0	;tblptru may be non-zero
  3896  010066                     	endif
  3897  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3898  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  3899  010068  6EF8               	movwf	tblptru,c
  3900  01006A                     	endif
  3901  01006A  0008               	tblrd		*
  3902  01006C  50F5               	movf	tablat,w,c
  3903  01006E  EC86  F09F         	call	_isdigit
  3904  010072  A0D8               	btfss	status,0,c
  3905  010074  D0CB               	goto	l8067
  3906                           
  3907                           ;doprnt.c: 598: width = 0;
  3908  010076  0E00               	movlw	0
  3909  010078  0100               	movlb	0	; () banked
  3910  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3911  01007C  0E00               	movlw	0
  3912  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  3913  010080                     l8023:
  3914                           
  3915                           ;doprnt.c: 600: width *= 10;
  3916  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  3917  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  3918  010088  0E00               	movlw	0
  3919  01008A  0100               	movlb	0	; () banked
  3920  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3921  01008E  0E0A               	movlw	10
  3922  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3923  010092  EC9B  F09E         	call	___wmul	;wreg free
  3924  010096  C060  F08D         	movff	?___wmul,sprintf@width
  3925  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  3926                           
  3927                           ;doprnt.c: 601: width += *f++ - '0';
  3928  01009E  0ED0               	movlw	208
  3929  0100A0  0100               	movlb	0	; () banked
  3930  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  3931  0100A4  0EFF               	movlw	255
  3932  0100A6  0100               	movlb	0	; () banked
  3933  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  3934  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  3935  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3936  0100B2                     	if	0	;tblptru may be non-zero
  3937  0100B2                     	endif
  3938  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3939  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  3940  0100B4  6EF8               	movwf	tblptru,c
  3941  0100B6                     	endif
  3942  0100B6  0008               	tblrd		*
  3943  0100B8  50F5               	movf	tablat,w,c
  3944  0100BA  0100               	movlb	0	; () banked
  3945  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  3946  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  3947  0100C0  0100               	movlb	0	; () banked
  3948  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  3949  0100C4  0100               	movlb	0	; () banked
  3950  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  3951  0100C8  0100               	movlb	0	; () banked
  3952  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  3953  0100CC  0100               	movlb	0	; () banked
  3954  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  3955  0100D0  0100               	movlb	0	; () banked
  3956  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  3957  0100D4  0100               	movlb	0	; () banked
  3958  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  3959  0100D8  0100               	movlb	0	; () banked
  3960  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  3961  0100DC  0100               	movlb	0	; () banked
  3962  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  3963                           
  3964                           ; BSR set to: 0
  3965  0100E0  0100               	movlb	0	; () banked
  3966  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3967  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3971  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  3972  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3973  0100EE                     	if	0	;tblptru may be non-zero
  3974  0100EE                     	endif
  3975  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3976  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  3977  0100F0  6EF8               	movwf	tblptru,c
  3978  0100F2                     	endif
  3979  0100F2  0008               	tblrd		*
  3980  0100F4  50F5               	movf	tablat,w,c
  3981  0100F6  EC86  F09F         	call	_isdigit
  3982  0100FA  A0D8               	btfss	status,0,c
  3983  0100FC  D087               	goto	l8067
  3984  0100FE  D7C0               	goto	l8023
  3985  010100                     l8031:
  3986                           
  3987                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3988  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  3989  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  3990  010108  CFDE F085          	movff	postinc2,sprintf@cp
  3991  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  3992  010110  0E02               	movlw	2
  3993  010112  0100               	movlb	0	; () banked
  3994  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  3995  010116  0E00               	movlw	0
  3996  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;doprnt.c: 740: if(!cp)
  4000  01011A  0100               	movlb	0	; () banked
  4001  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  4002  01011E  0100               	movlb	0	; () banked
  4003  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4004  010122  A4D8               	btfss	status,2,c
  4005  010124  D006               	goto	l8039
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;doprnt.c: 741: cp = "(null)";
  4009  010126  0EB5               	movlw	low STR_50
  4010  010128  0100               	movlb	0	; () banked
  4011  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  4012  01012C  0EFF               	movlw	high STR_50
  4013  01012E  0100               	movlb	0	; () banked
  4014  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  4015  010132                     l8039:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;doprnt.c: 745: len = 0;
  4019  010132  0E00               	movlw	0
  4020  010134  0100               	movlb	0	; () banked
  4021  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  4022  010138  0E00               	movlw	0
  4023  01013A  6F89               	movwf	sprintf@len& (0+255),b
  4024                           
  4025                           ;doprnt.c: 746: while(cp[len])
  4026  01013C  D003               	goto	l8043
  4027  01013E                     l8041:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;doprnt.c: 747: len++;
  4031  01013E  0100               	movlb	0	; () banked
  4032  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  4033  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  4034  010144                     l8043:
  4035                           
  4036                           ; BSR set to: 0
  4037  010144  0100               	movlb	0	; () banked
  4038  010146  5189               	movf	sprintf@len& (0+255),w,b
  4039  010148  0100               	movlb	0	; () banked
  4040  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  4041  01014C  0100               	movlb	0	; () banked
  4042  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  4043  010150  0100               	movlb	0	; () banked
  4044  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4045  010154  0100               	movlb	0	; () banked
  4046  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4047  010158  0100               	movlb	0	; () banked
  4048  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  4049  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  4050  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  4051  010164                     	if	0	;tblptru may be non-zero
  4052  010164                     	endif
  4053  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4054  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  4055  010166  6EF8               	movwf	tblptru,c
  4056  010168                     	endif
  4057  010168  0008               	tblrd		*
  4058  01016A  50F5               	movf	tablat,w,c
  4059  01016C  0900               	iorlw	0
  4060  01016E  A4D8               	btfss	status,2,c
  4061  010170  D7E6               	goto	l8041
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;doprnt.c: 757: if(width > len)
  4065                           
  4066                           ; BSR set to: 0
  4067  010172  0100               	movlb	0	; () banked
  4068  010174  518D               	movf	sprintf@width& (0+255),w,b
  4069  010176  0100               	movlb	0	; () banked
  4070  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  4071  01017A  0100               	movlb	0	; () banked
  4072  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4073  01017E  0100               	movlb	0	; () banked
  4074  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  4075  010182  B0D8               	btfsc	status,0,c
  4076  010184  D009               	goto	l8049
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;doprnt.c: 758: width -= len;
  4080  010186  0100               	movlb	0	; () banked
  4081  010188  5189               	movf	sprintf@len& (0+255),w,b
  4082  01018A  0100               	movlb	0	; () banked
  4083  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  4084  01018E  0100               	movlb	0	; () banked
  4085  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4086  010192  0100               	movlb	0	; () banked
  4087  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4088  010196  D00F               	goto	l8055
  4089  010198                     l8049:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;doprnt.c: 759: else
  4093                           ;doprnt.c: 760: width = 0;
  4094  010198  0E00               	movlw	0
  4095  01019A  0100               	movlb	0	; () banked
  4096  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4097  01019E  0E00               	movlw	0
  4098  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;doprnt.c: 764: while(width--)
  4102  0101A2  D009               	goto	l8055
  4103  0101A4                     l8051:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4107  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4108  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4109  0101AC  0E20               	movlw	32
  4110  0101AE  6EDF               	movwf	indf2,c
  4111                           
  4112                           ; BSR set to: 0
  4113  0101B0  0100               	movlb	0	; () banked
  4114  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4115  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4116  0101B6                     l8055:
  4117                           
  4118                           ; BSR set to: 0
  4119  0101B6  0100               	movlb	0	; () banked
  4120  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  4121  0101BA  A0D8               	btfss	status,0,c
  4122  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4123  0101BE  0100               	movlb	0	; () banked
  4124  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  4125  0101C2  E1F0               	bnz	l8051
  4126  0101C4  0100               	movlb	0	; () banked
  4127  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  4128  0101C8  B4D8               	btfsc	status,2,c
  4129  0101CA  D014               	goto	l8063
  4130  0101CC  D7EB               	goto	l8051
  4131  0101CE                     l8057:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4135  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  4136  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  4137  0101D6                     	if	0	;tblptru may be non-zero
  4138  0101D6                     	endif
  4139  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4140  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  4141  0101D8  6EF8               	movwf	tblptru,c
  4142  0101DA                     	endif
  4143  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4144  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4145  0101E2  0008               	tblrd		*
  4146  0101E4  CFF5 FFDF          	movff	tablat,indf2
  4147                           
  4148                           ; BSR set to: 0
  4149  0101E8  0100               	movlb	0	; () banked
  4150  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  4151  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  4152                           
  4153                           ; BSR set to: 0
  4154  0101EE  0100               	movlb	0	; () banked
  4155  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4156  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4157  0101F4                     l8063:
  4158                           
  4159                           ; BSR set to: 0
  4160  0101F4  0100               	movlb	0	; () banked
  4161  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  4162  0101F8  A0D8               	btfss	status,0,c
  4163  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  4164  0101FC  0100               	movlb	0	; () banked
  4165  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  4166  010200  E1E6               	bnz	l8057
  4167  010202  0100               	movlb	0	; () banked
  4168  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  4169  010206  B4D8               	btfsc	status,2,c
  4170  010208  D111               	goto	l8145
  4171  01020A  D7E1               	goto	l8057
  4172  01020C                     l8067:
  4173  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4174  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4175  010214  0100               	movlb	0	; () banked
  4176  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4177  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4178  01021A                     	if	0	;tblptru may be non-zero
  4179  01021A                     	endif
  4180  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4181  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  4182  01021C  6EF8               	movwf	tblptru,c
  4183  01021E                     	endif
  4184  01021E  0008               	tblrd		*
  4185  010220  CFF5 F08C          	movff	tablat,sprintf@c
  4186  010224  0100               	movlb	0	; () banked
  4187  010226  518C               	movf	sprintf@c& (0+255),w,b
  4188                           
  4189                           ; Switch size 1, requested type "space"
  4190                           ; Number of cases is 4, Range of values is 0 to 115
  4191                           ; switch strategies available:
  4192                           ; Name         Instructions Cycles
  4193                           ; simple_byte           13     7 (average)
  4194                           ;	Chosen strategy is simple_byte
  4195  010228  0A00               	xorlw	0	; case 0
  4196  01022A  B4D8               	btfsc	status,2,c
  4197  01022C  D10F               	goto	l8147
  4198  01022E  0A64               	xorlw	100	; case 100
  4199  010230  B4D8               	btfsc	status,2,c
  4200  010232  D007               	goto	l8069
  4201  010234  0A0D               	xorlw	13	; case 105
  4202  010236  B4D8               	btfsc	status,2,c
  4203  010238  D004               	goto	l8069
  4204  01023A  0A1A               	xorlw	26	; case 115
  4205  01023C  B4D8               	btfsc	status,2,c
  4206  01023E  D760               	goto	l8031
  4207  010240  D0F5               	goto	l8145
  4208  010242                     l8069:
  4209                           
  4210                           ;doprnt.c: 1253: {
  4211                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4212  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  4213  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4214  01024A  CFDE F087          	movff	postinc2,sprintf@val
  4215  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  4216  010252  0E02               	movlw	2
  4217  010254  0100               	movlb	0	; () banked
  4218  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  4219  010258  0E00               	movlw	0
  4220  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;doprnt.c: 1261: if((int)val < 0) {
  4224  01025C  0100               	movlb	0	; () banked
  4225  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  4226  010260  D008               	goto	l8079
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;doprnt.c: 1262: flag |= 0x03;
  4230  010262  0E03               	movlw	3
  4231  010264  0100               	movlb	0	; () banked
  4232  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;doprnt.c: 1263: val = -val;
  4236  010268  0100               	movlb	0	; () banked
  4237  01026A  6D87               	negf	sprintf@val& (0+255),b
  4238  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  4239  01026E  B0D8               	btfsc	status,0,c
  4240  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  4241  010272                     l8079:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;doprnt.c: 1264: }
  4245                           ;doprnt.c: 1266: }
  4246                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4247  010272  0E01               	movlw	1
  4248  010274  0100               	movlb	0	; () banked
  4249  010276  6F8C               	movwf	sprintf@c& (0+255),b
  4250  010278                     l8081:
  4251                           
  4252                           ; BSR set to: 0
  4253  010278  0E05               	movlw	5
  4254  01027A  0100               	movlb	0	; () banked
  4255  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  4256  01027E  B4D8               	btfsc	status,2,c
  4257  010280  D019               	goto	l8093
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;doprnt.c: 1306: if(val < dpowers[c])
  4261                           
  4262                           ; BSR set to: 0
  4263                           
  4264                           ; BSR set to: 0
  4265  010282  0100               	movlb	0	; () banked
  4266  010284  518C               	movf	sprintf@c& (0+255),w,b
  4267  010286  0D02               	mullw	2
  4268  010288  0E57               	movlw	low _dpowers
  4269  01028A  24F3               	addwf	prodl,w,c
  4270  01028C  6EF6               	movwf	tblptrl,c
  4271  01028E  0EFD               	movlw	high _dpowers
  4272  010290  20F4               	addwfc	prodh,w,c
  4273  010292  6EF7               	movwf	tblptrh,c
  4274  010294                     	if	1	;There are 3 active tblptr bytes
  4275  010294  6AF8               	clrf	tblptru,c
  4276  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  4277  010298  22F8               	addwfc	tblptru,f,c
  4278  01029A                     	endif
  4279  01029A  0009               	tblrd		*+
  4280  01029C  50F5               	movf	tablat,w,c
  4281  01029E  0100               	movlb	0	; () banked
  4282  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  4283  0102A2  0009               	tblrd		*+
  4284  0102A4  50F5               	movf	tablat,w,c
  4285  0102A6  0100               	movlb	0	; () banked
  4286  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  4287  0102AA  A0D8               	btfss	status,0,c
  4288  0102AC  D003               	goto	l8093
  4289                           
  4290                           ; BSR set to: 0
  4291                           
  4292                           ; BSR set to: 0
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;doprnt.c: 1307: break;
  4296  0102AE  0100               	movlb	0	; () banked
  4297  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  4298  0102B2  D7E2               	goto	l8081
  4299  0102B4                     l8093:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4303  0102B4  0100               	movlb	0	; () banked
  4304  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  4305  0102B8  0100               	movlb	0	; () banked
  4306  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4307  0102BC  B4D8               	btfsc	status,2,c
  4308  0102BE  D00B               	goto	l8099
  4309                           
  4310                           ; BSR set to: 0
  4311  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4312  0102C4  0E03               	movlw	3
  4313  0102C6  0100               	movlb	0	; () banked
  4314  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  4315  0102CA  B4D8               	btfsc	status,2,c
  4316  0102CC  D004               	goto	l8099
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;doprnt.c: 1346: width--;
  4320  0102CE  0100               	movlb	0	; () banked
  4321  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  4322  0102D2  A0D8               	btfss	status,0,c
  4323  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4324  0102D6                     l8099:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;doprnt.c: 1381: if(width > c)
  4328  0102D6  0E80               	movlw	128
  4329  0102D8  0100               	movlb	0	; () banked
  4330  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4331  0102DC  0E7F               	movlw	127
  4332  0102DE  0100               	movlb	0	; () banked
  4333  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  4334  0102E2  0100               	movlb	0	; () banked
  4335  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  4336  0102E6  0100               	movlb	0	; () banked
  4337  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  4338  0102EA  0100               	movlb	0	; () banked
  4339  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4340  0102EE  0A80               	xorlw	128
  4341  0102F0  0100               	movlb	0	; () banked
  4342  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  4343  0102F4  B0D8               	btfsc	status,0,c
  4344  0102F6  D00B               	goto	l8103
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;doprnt.c: 1382: width -= c;
  4348  0102F8  0100               	movlb	0	; () banked
  4349  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  4350  0102FC  0100               	movlb	0	; () banked
  4351  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  4352  010300  0E00               	movlw	0
  4353  010302  0100               	movlb	0	; () banked
  4354  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4355  010306  0EFF               	movlw	255
  4356  010308  0100               	movlb	0	; () banked
  4357  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4358  01030C  D005               	goto	l8105
  4359  01030E                     l8103:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;doprnt.c: 1383: else
  4363                           ;doprnt.c: 1384: width = 0;
  4364  01030E  0E00               	movlw	0
  4365  010310  0100               	movlb	0	; () banked
  4366  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4367  010314  0E00               	movlw	0
  4368  010316  6F8D               	movwf	sprintf@width& (0+255),b
  4369  010318                     l8105:
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;doprnt.c: 1387: if(flag & 0x04) {
  4373  010318  0100               	movlb	0	; () banked
  4374  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  4375  01031C  D024               	goto	l8121
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;doprnt.c: 1392: if(flag & 0x03)
  4379  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4380  010322  0E03               	movlw	3
  4381  010324  0100               	movlb	0	; () banked
  4382  010326  177E               	andwf	??_sprintf& (0+255),f,b
  4383  010328  B4D8               	btfsc	status,2,c
  4384  01032A  D009               	goto	l8113
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4388  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4389  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4390  010334  0E2D               	movlw	45
  4391  010336  6EDF               	movwf	indf2,c
  4392                           
  4393                           ; BSR set to: 0
  4394  010338  0100               	movlb	0	; () banked
  4395  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4396  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4397  01033E                     l8113:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;doprnt.c: 1415: if(width)
  4401  01033E  0100               	movlb	0	; () banked
  4402  010340  518D               	movf	sprintf@width& (0+255),w,b
  4403  010342  0100               	movlb	0	; () banked
  4404  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4405  010346  B4D8               	btfsc	status,2,c
  4406  010348  D037               	goto	l8135
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4410                           
  4411                           ; BSR set to: 0
  4412                           
  4413                           ;doprnt.c: 1416: do
  4414  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4415  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4416  010352  0E30               	movlw	48
  4417  010354  6EDF               	movwf	indf2,c
  4418                           
  4419                           ; BSR set to: 0
  4420  010356  0100               	movlb	0	; () banked
  4421  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4422  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;doprnt.c: 1418: while(--width);
  4426  01035C  0100               	movlb	0	; () banked
  4427  01035E  078D               	decf	sprintf@width& (0+255),f,b
  4428  010360  A0D8               	btfss	status,0,c
  4429  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4430  010364  D7EC               	goto	l8113
  4431  010366                     l8121:
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;doprnt.c: 1422: {
  4435                           ;doprnt.c: 1424: if(width
  4436                           ;doprnt.c: 1428: )
  4437  010366  0100               	movlb	0	; () banked
  4438  010368  518D               	movf	sprintf@width& (0+255),w,b
  4439  01036A  0100               	movlb	0	; () banked
  4440  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4441  01036E  B4D8               	btfsc	status,2,c
  4442  010370  D013               	goto	l8129
  4443  010372                     l8123:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4447  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4448  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4449  01037A  0E20               	movlw	32
  4450  01037C  6EDF               	movwf	indf2,c
  4451                           
  4452                           ; BSR set to: 0
  4453  01037E  0100               	movlb	0	; () banked
  4454  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4455  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 1431: while(--width);
  4459  010384  0100               	movlb	0	; () banked
  4460  010386  078D               	decf	sprintf@width& (0+255),f,b
  4461  010388  A0D8               	btfss	status,0,c
  4462  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4463  01038C  0100               	movlb	0	; () banked
  4464  01038E  518D               	movf	sprintf@width& (0+255),w,b
  4465  010390  0100               	movlb	0	; () banked
  4466  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4467  010394  A4D8               	btfss	status,2,c
  4468  010396  D7ED               	goto	l8123
  4469  010398                     l8129:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;doprnt.c: 1438: if(flag & 0x03)
  4473  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4474  01039C  0E03               	movlw	3
  4475  01039E  0100               	movlb	0	; () banked
  4476  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  4477  0103A2  B4D8               	btfsc	status,2,c
  4478  0103A4  D009               	goto	l8135
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4482  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4483  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4484  0103AE  0E2D               	movlw	45
  4485  0103B0  6EDF               	movwf	indf2,c
  4486                           
  4487                           ; BSR set to: 0
  4488  0103B2  0100               	movlb	0	; () banked
  4489  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4490  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4491  0103B8                     l8135:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;doprnt.c: 1469: }
  4495                           ;doprnt.c: 1472: prec = c;
  4496  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  4497                           
  4498                           ;doprnt.c: 1474: while(prec--) {
  4499  0103BC  D031               	goto	l8143
  4500  0103BE                     l8137:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;doprnt.c: 1478: {
  4504                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4505  0103BE  0100               	movlb	0	; () banked
  4506  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  4507  0103C2  0D02               	mullw	2
  4508  0103C4  0E57               	movlw	low _dpowers
  4509  0103C6  24F3               	addwf	prodl,w,c
  4510  0103C8  6EF6               	movwf	tblptrl,c
  4511  0103CA  0EFD               	movlw	high _dpowers
  4512  0103CC  20F4               	addwfc	prodh,w,c
  4513  0103CE  6EF7               	movwf	tblptrh,c
  4514  0103D0                     	if	1	;There are 3 active tblptr bytes
  4515  0103D0  6AF8               	clrf	tblptru,c
  4516  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  4517  0103D4  22F8               	addwfc	tblptru,f,c
  4518  0103D6                     	endif
  4519  0103D6  0009               	tblrd		*+
  4520  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4521  0103DC  000A               	tblrd		*-
  4522  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4523  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  4524  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4525  0103EA  ECED  F09A         	call	___lwdiv	;wreg free
  4526  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  4527  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  4528  0103F6  0E00               	movlw	0
  4529  0103F8  0100               	movlb	0	; () banked
  4530  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4531  0103FC  0E0A               	movlw	10
  4532  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  4533  010400  EC9E  F09C         	call	___lwmod	;wreg free
  4534  010404  0100               	movlb	0	; () banked
  4535  010406  5167               	movf	?___lwmod& (0+255),w,b
  4536  010408  0F30               	addlw	48
  4537  01040A  0100               	movlb	0	; () banked
  4538  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;doprnt.c: 1523: }
  4542                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4543  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4544  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4545  010416  C08C  FFDF         	movff	sprintf@c,indf2
  4546                           
  4547                           ; BSR set to: 0
  4548  01041A  0100               	movlb	0	; () banked
  4549  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4550  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4551  010420                     l8143:
  4552                           
  4553                           ; BSR set to: 0
  4554  010420  0100               	movlb	0	; () banked
  4555  010422  0782               	decf	sprintf@prec& (0+255),f,b
  4556  010424  0100               	movlb	0	; () banked
  4557  010426  2982               	incf	sprintf@prec& (0+255),w,b
  4558  010428  A4D8               	btfss	status,2,c
  4559  01042A  D7C9               	goto	l8137
  4560  01042C                     l8145:
  4561                           
  4562                           ; BSR set to: 0
  4563  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4564  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4565  010434  0100               	movlb	0	; () banked
  4566  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4567  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4568  01043A                     	if	0	;tblptru may be non-zero
  4569  01043A                     	endif
  4570  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4571  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  4572  01043C  6EF8               	movwf	tblptru,c
  4573  01043E                     	endif
  4574  01043E  0008               	tblrd		*
  4575  010440  CFF5 F08C          	movff	tablat,sprintf@c
  4576  010444  0100               	movlb	0	; () banked
  4577  010446  518C               	movf	sprintf@c& (0+255),w,b
  4578  010448  A4D8               	btfss	status,2,c
  4579  01044A  D5E1               	goto	l8005
  4580  01044C                     l8147:
  4581                           
  4582                           ;doprnt.c: 1538: *sp = 0;
  4583  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4584  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4585  010454  0E00               	movlw	0
  4586  010456  6EDF               	movwf	indf2,c
  4587  010458  0012               	return	
  4588  01045A                     __end_of_sprintf:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           postinc0	equ	0xFEE
  4598                           wreg	equ	0xFE8
  4599                           postdec1	equ	0xFE5
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           indf2	equ	0xFDF
  4603                           postinc2	equ	0xFDE
  4604                           postdec2	equ	0xFDD
  4605                           fsr2h	equ	0xFDA
  4606                           fsr2l	equ	0xFD9
  4607                           status	equ	0xFD8
  4608                           
  4609 ;; *************** function _ringbuf_put_str *****************
  4610 ;; Defined at:
  4611 ;;		line 39 in file "../My_library/My_ringbuf.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4614 ;;		 -> usb_tx(8), 
  4615 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  4616 ;;		 -> STR_45(235), STR_24(8), print_time@str(30), STR_22(3), 
  4617 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;Total ram usage:        4 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:   13
  4636 ;; This function calls:
  4637 ;;		_ringbuf_put
  4638 ;; This function is called by:
  4639 ;;		_terminal_task
  4640 ;;		_print_time
  4641 ;;		_terminal_at_hand
  4642 ;;		_terminal_operation
  4643 ;;		_print_time_dec
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text7
  4648  013876                     __ptext7:
  4649                           	opt stack 0
  4650  013876                     _ringbuf_put_str:
  4651                           	opt stack 13
  4652                           
  4653                           ;My_ringbuf.c: 40: while (*str) {
  4654                           
  4655                           ;incstack = 0
  4656  013876  D01C               	goto	l7917
  4657  013878                     l7913:
  4658                           
  4659                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  4660  013878  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  4661  01387C  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  4662  013880  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4663  013884  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4664  013888  0E00               	movlw	low (__mediumconst shr (0+16))
  4665  01388A  6EF8               	movwf	tblptru,c
  4666  01388C  0E0E               	movlw	(high __ramtop+-1)
  4667  01388E  64F7               	cpfsgt	tblptrh,c
  4668  013890  D003               	bra	u7697
  4669  013892  0008               	tblrd		*
  4670  013894  50F5               	movf	tablat,w,c
  4671  013896  D005               	bra	u7690
  4672  013898                     u7697:
  4673  013898  CFF6 FFE9          	movff	tblptrl,fsr0l
  4674  01389C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4675  0138A0  50EF               	movf	indf0,w,c
  4676  0138A2                     u7690:
  4677  0138A2  0100               	movlb	0	; () banked
  4678  0138A4  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  4679  0138A6  ECDE  F092         	call	_ringbuf_put	;wreg free
  4680  0138AA  0100               	movlb	0	; () banked
  4681  0138AC  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  4682  0138AE  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  4683  0138B0                     l7917:
  4684  0138B0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4685  0138B4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4686  0138B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4687  0138BA  6EF8               	movwf	tblptru,c
  4688  0138BC  0E0E               	movlw	(high __ramtop+-1)
  4689  0138BE  64F7               	cpfsgt	tblptrh,c
  4690  0138C0  D003               	bra	u7707
  4691  0138C2  0008               	tblrd		*
  4692  0138C4  50F5               	movf	tablat,w,c
  4693  0138C6  D005               	bra	u7700
  4694  0138C8                     u7707:
  4695  0138C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4696  0138CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4697  0138D0  50EF               	movf	indf0,w,c
  4698  0138D2                     u7700:
  4699  0138D2  0900               	iorlw	0
  4700  0138D4  B4D8               	btfsc	status,2,c
  4701  0138D6  0012               	return	
  4702  0138D8  D7CF               	goto	l7913
  4703  0138DA                     __end_of_ringbuf_put_str:
  4704                           	opt stack 0
  4705                           tblptru	equ	0xFF8
  4706                           tblptrh	equ	0xFF7
  4707                           tblptrl	equ	0xFF6
  4708                           tablat	equ	0xFF5
  4709                           prodh	equ	0xFF4
  4710                           prodl	equ	0xFF3
  4711                           intcon	equ	0xFF2
  4712                           indf0	equ	0xFEF
  4713                           postinc0	equ	0xFEE
  4714                           fsr0h	equ	0xFEA
  4715                           fsr0l	equ	0xFE9
  4716                           wreg	equ	0xFE8
  4717                           postdec1	equ	0xFE5
  4718                           fsr1h	equ	0xFE2
  4719                           fsr1l	equ	0xFE1
  4720                           indf2	equ	0xFDF
  4721                           postinc2	equ	0xFDE
  4722                           postdec2	equ	0xFDD
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _RTCC_from_caltime *****************
  4728 ;; Defined at:
  4729 ;;		line 205 in file "../My_library/My_RTCC.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  tm              2   47[BANK0 ] PTR struct .
  4732 ;;		 -> now(14), 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4748 ;;Total ram usage:        2 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:   14
  4751 ;; This function calls:
  4752 ;;		_caltime_to_RTCC
  4753 ;;		_caltime_to_epoch
  4754 ;;		_epoch_to_caltime
  4755 ;; This function is called by:
  4756 ;;		_terminal_at_hand
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text8
  4761  013F5E                     __ptext8:
  4762                           	opt stack 0
  4763  013F5E                     _RTCC_from_caltime:
  4764                           	opt stack 12
  4765                           
  4766                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  4767                           
  4768                           ;incstack = 0
  4769  013F5E  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4770  013F62  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4771  013F66  ECB7  F085         	call	_caltime_to_epoch	;wreg free
  4772                           
  4773                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  4774  013F6A  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4775  013F6E  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4776  013F72  EC40  F088         	call	_epoch_to_caltime	;wreg free
  4777                           
  4778                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  4779  013F76  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4780  013F7A  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4781  013F7E  EC9E  F091         	call	_caltime_to_RTCC	;wreg free
  4782  013F82  0012               	return		;funcret
  4783  013F84                     __end_of_RTCC_from_caltime:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           indf0	equ	0xFEF
  4793                           postinc0	equ	0xFEE
  4794                           fsr0h	equ	0xFEA
  4795                           fsr0l	equ	0xFE9
  4796                           wreg	equ	0xFE8
  4797                           postdec1	equ	0xFE5
  4798                           fsr1h	equ	0xFE2
  4799                           fsr1l	equ	0xFE1
  4800                           indf2	equ	0xFDF
  4801                           postinc2	equ	0xFDE
  4802                           postdec2	equ	0xFDD
  4803                           fsr2h	equ	0xFDA
  4804                           fsr2l	equ	0xFD9
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _strcmp *****************
  4808 ;; Defined at:
  4809 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  4812 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  4813 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  4814 ;;		 -> STR_47(9), STR_46(9), STR_44(2), STR_43(5), 
  4815 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  4816 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  4817 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  4818 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  r               1    5[BANK0 ] char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  2    0[BANK0 ] int 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4833 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4834 ;;Total ram usage:        6 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:   11
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_terminal_time
  4841 ;;		_terminal_operation
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text9
  4846  01399E                     __ptext9:
  4847                           	opt stack 0
  4848  01399E                     _strcmp:
  4849                           	opt stack 16
  4850                           
  4851                           ;incstack = 0
  4852  01399E  D006               	goto	l8249
  4853  0139A0                     l8247:
  4854  0139A0  0100               	movlb	0	; () banked
  4855  0139A2  4B60               	infsnz	strcmp@s1& (0+255),f,b
  4856  0139A4  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  4857  0139A6  0100               	movlb	0	; () banked
  4858  0139A8  4B62               	infsnz	strcmp@s2& (0+255),f,b
  4859  0139AA  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  4860  0139AC                     l8249:
  4861  0139AC  C060  FFD9         	movff	strcmp@s1,fsr2l
  4862  0139B0  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4863  0139B4  50DF               	movf	indf2,w,c
  4864  0139B6  0100               	movlb	0	; () banked
  4865  0139B8  6F64               	movwf	??_strcmp& (0+255),b
  4866  0139BA  C062  FFF6         	movff	strcmp@s2,tblptrl
  4867  0139BE  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  4868  0139C2                     	if	0	;tblptru may be non-zero
  4869  0139C2                     	endif
  4870  0139C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4871  0139C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4872  0139C4  6EF8               	movwf	tblptru,c
  4873  0139C6                     	endif
  4874  0139C6  0008               	tblrd		*
  4875  0139C8  50F5               	movf	tablat,w,c
  4876  0139CA  0800               	sublw	0
  4877  0139CC  0100               	movlb	0	; () banked
  4878  0139CE  2564               	addwf	??_strcmp& (0+255),w,b
  4879  0139D0  0100               	movlb	0	; () banked
  4880  0139D2  6F65               	movwf	strcmp@r& (0+255),b
  4881  0139D4  0100               	movlb	0	; () banked
  4882  0139D6  5165               	movf	strcmp@r& (0+255),w,b
  4883  0139D8  A4D8               	btfss	status,2,c
  4884  0139DA  D007               	goto	l8253
  4885                           
  4886                           ; BSR set to: 0
  4887  0139DC  C060  FFD9         	movff	strcmp@s1,fsr2l
  4888  0139E0  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4889  0139E4  50DF               	movf	indf2,w,c
  4890  0139E6  A4D8               	btfss	status,2,c
  4891  0139E8  D7DB               	goto	l8247
  4892  0139EA                     l8253:
  4893                           
  4894                           ; BSR set to: 0
  4895  0139EA  0100               	movlb	0	; () banked
  4896  0139EC  5165               	movf	strcmp@r& (0+255),w,b
  4897  0139EE  0100               	movlb	0	; () banked
  4898  0139F0  6F60               	movwf	?_strcmp& (0+255),b
  4899  0139F2  6B61               	clrf	(?_strcmp+1)& (0+255),b
  4900  0139F4  BF60               	btfsc	?_strcmp& (0+255),7,b
  4901  0139F6  0761               	decf	(?_strcmp+1)& (0+255),f,b
  4902  0139F8  0012               	return	
  4903  0139FA                     __end_of_strcmp:
  4904                           	opt stack 0
  4905                           tblptru	equ	0xFF8
  4906                           tblptrh	equ	0xFF7
  4907                           tblptrl	equ	0xFF6
  4908                           tablat	equ	0xFF5
  4909                           prodh	equ	0xFF4
  4910                           prodl	equ	0xFF3
  4911                           intcon	equ	0xFF2
  4912                           indf0	equ	0xFEF
  4913                           postinc0	equ	0xFEE
  4914                           fsr0h	equ	0xFEA
  4915                           fsr0l	equ	0xFE9
  4916                           wreg	equ	0xFE8
  4917                           postdec1	equ	0xFE5
  4918                           fsr1h	equ	0xFE2
  4919                           fsr1l	equ	0xFE1
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           postdec2	equ	0xFDD
  4923                           fsr2h	equ	0xFDA
  4924                           fsr2l	equ	0xFD9
  4925                           status	equ	0xFD8
  4926                           
  4927 ;; *************** function _atoi *****************
  4928 ;; Defined at:
  4929 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4932 ;;		 -> terminal_task@op2(25), 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  a               2   11[BANK0 ] int 
  4935 ;;  sign            1   10[BANK0 ] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  2    6[BANK0 ] int 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;Total ram usage:        7 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:   12
  4952 ;; This function calls:
  4953 ;;		___wmul
  4954 ;;		_isdigit
  4955 ;; This function is called by:
  4956 ;;		_terminal_time
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text10
  4961  011B2E                     __ptext10:
  4962                           	opt stack 0
  4963  011B2E                     _atoi:
  4964                           	opt stack 15
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;incstack = 0
  4968  011B2E  D003               	goto	l8261
  4969  011B30                     l8259:
  4970  011B30  0100               	movlb	0	; () banked
  4971  011B32  4B66               	infsnz	atoi@s& (0+255),f,b
  4972  011B34  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4973  011B36                     l8261:
  4974  011B36  C066  FFD9         	movff	atoi@s,fsr2l
  4975  011B3A  C067  FFDA         	movff	atoi@s+1,fsr2h
  4976  011B3E  0E20               	movlw	32
  4977  011B40  18DE               	xorwf	postinc2,w,c
  4978  011B42  B4D8               	btfsc	status,2,c
  4979  011B44  D7F5               	goto	l8259
  4980  011B46  C066  FFD9         	movff	atoi@s,fsr2l
  4981  011B4A  C067  FFDA         	movff	atoi@s+1,fsr2h
  4982  011B4E  0E09               	movlw	9
  4983  011B50  18DE               	xorwf	postinc2,w,c
  4984  011B52  B4D8               	btfsc	status,2,c
  4985  011B54  D7ED               	goto	l8259
  4986  011B56  0E00               	movlw	0
  4987  011B58  0100               	movlb	0	; () banked
  4988  011B5A  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4989  011B5C  0E00               	movlw	0
  4990  011B5E  6F6B               	movwf	atoi@a& (0+255),b
  4991  011B60  0E00               	movlw	0
  4992  011B62  0100               	movlb	0	; () banked
  4993  011B64  6F6A               	movwf	atoi@sign& (0+255),b
  4994                           
  4995                           ; BSR set to: 0
  4996  011B66  C066  FFD9         	movff	atoi@s,fsr2l
  4997  011B6A  C067  FFDA         	movff	atoi@s+1,fsr2h
  4998  011B6E  0E2D               	movlw	45
  4999  011B70  18DE               	xorwf	postinc2,w,c
  5000  011B72  A4D8               	btfss	status,2,c
  5001  011B74  D003               	goto	l8271
  5002                           
  5003                           ; BSR set to: 0
  5004  011B76  0100               	movlb	0	; () banked
  5005  011B78  2B6A               	incf	atoi@sign& (0+255),f,b
  5006  011B7A  D02E               	goto	l8277
  5007  011B7C                     l8271:
  5008                           
  5009                           ; BSR set to: 0
  5010  011B7C  C066  FFD9         	movff	atoi@s,fsr2l
  5011  011B80  C067  FFDA         	movff	atoi@s+1,fsr2h
  5012  011B84  0E2B               	movlw	43
  5013  011B86  18DE               	xorwf	postinc2,w,c
  5014  011B88  A4D8               	btfss	status,2,c
  5015  011B8A  D029               	goto	l8279
  5016  011B8C  D025               	goto	l8277
  5017  011B8E                     l8275:
  5018  011B8E  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5019  011B92  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5020  011B96  0E00               	movlw	0
  5021  011B98  0100               	movlb	0	; () banked
  5022  011B9A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5023  011B9C  0E0A               	movlw	10
  5024  011B9E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5025  011BA0  EC9B  F09E         	call	___wmul	;wreg free
  5026  011BA4  C066  FFD9         	movff	atoi@s,fsr2l
  5027  011BA8  C067  FFDA         	movff	atoi@s+1,fsr2h
  5028  011BAC  50DF               	movf	indf2,w,c
  5029  011BAE  0100               	movlb	0	; () banked
  5030  011BB0  6F68               	movwf	??_atoi& (0+255),b
  5031  011BB2  6B69               	clrf	(??_atoi+1)& (0+255),b
  5032  011BB4  0100               	movlb	0	; () banked
  5033  011BB6  5160               	movf	?___wmul& (0+255),w,b
  5034  011BB8  0100               	movlb	0	; () banked
  5035  011BBA  2768               	addwf	??_atoi& (0+255),f,b
  5036  011BBC  0100               	movlb	0	; () banked
  5037  011BBE  5161               	movf	(?___wmul+1)& (0+255),w,b
  5038  011BC0  0100               	movlb	0	; () banked
  5039  011BC2  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5040  011BC4  0ED0               	movlw	208
  5041  011BC6  0100               	movlb	0	; () banked
  5042  011BC8  2568               	addwf	??_atoi& (0+255),w,b
  5043  011BCA  0100               	movlb	0	; () banked
  5044  011BCC  6F6B               	movwf	atoi@a& (0+255),b
  5045  011BCE  0EFF               	movlw	255
  5046  011BD0  0100               	movlb	0	; () banked
  5047  011BD2  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5048  011BD4  0100               	movlb	0	; () banked
  5049  011BD6  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5050  011BD8                     l8277:
  5051                           
  5052                           ; BSR set to: 0
  5053  011BD8  0100               	movlb	0	; () banked
  5054  011BDA  4B66               	infsnz	atoi@s& (0+255),f,b
  5055  011BDC  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5056  011BDE                     l8279:
  5057                           
  5058                           ; BSR set to: 0
  5059  011BDE  C066  FFD9         	movff	atoi@s,fsr2l
  5060  011BE2  C067  FFDA         	movff	atoi@s+1,fsr2h
  5061  011BE6  50DF               	movf	indf2,w,c
  5062  011BE8  EC86  F09F         	call	_isdigit
  5063  011BEC  B0D8               	btfsc	status,0,c
  5064  011BEE  D7CF               	goto	l8275
  5065  011BF0  0100               	movlb	0	; () banked
  5066  011BF2  516A               	movf	atoi@sign& (0+255),w,b
  5067  011BF4  0100               	movlb	0	; () banked
  5068  011BF6  B4D8               	btfsc	status,2,c
  5069  011BF8  D00E               	goto	l1589
  5070                           
  5071                           ; BSR set to: 0
  5072  011BFA  C06B  F068         	movff	atoi@a,??_atoi
  5073  011BFE  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5074  011C02  0100               	movlb	0	; () banked
  5075  011C04  1F68               	comf	??_atoi& (0+255),f,b
  5076  011C06  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5077  011C08  4B68               	infsnz	??_atoi& (0+255),f,b
  5078  011C0A  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5079  011C0C  C068  F066         	movff	??_atoi,?_atoi
  5080  011C10  C069  F067         	movff	??_atoi+1,?_atoi+1
  5081  011C14  0012               	return	
  5082  011C16                     l1589:
  5083                           
  5084                           ; BSR set to: 0
  5085  011C16  C06B  F066         	movff	atoi@a,?_atoi
  5086  011C1A  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5087                           
  5088                           ; BSR set to: 0
  5089  011C1E  0012               	return		;funcret
  5090  011C20                     __end_of_atoi:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           intcon	equ	0xFF2
  5099                           indf0	equ	0xFEF
  5100                           postinc0	equ	0xFEE
  5101                           fsr0h	equ	0xFEA
  5102                           fsr0l	equ	0xFE9
  5103                           wreg	equ	0xFE8
  5104                           postdec1	equ	0xFE5
  5105                           fsr1h	equ	0xFE2
  5106                           fsr1l	equ	0xFE1
  5107                           indf2	equ	0xFDF
  5108                           postinc2	equ	0xFDE
  5109                           postdec2	equ	0xFDD
  5110                           fsr2h	equ	0xFDA
  5111                           fsr2l	equ	0xFD9
  5112                           status	equ	0xFD8
  5113                           
  5114 ;; *************** function _isdigit *****************
  5115 ;; Defined at:
  5116 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  c               1    wreg     unsigned char 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  c               1    2[BANK0 ] unsigned char 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;		None               void
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;Total ram usage:        3 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:   11
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_sprintf
  5141 ;;		_atoi
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text11
  5146  013F0C                     __ptext11:
  5147                           	opt stack 0
  5148  013F0C                     _isdigit:
  5149                           	opt stack 13
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;incstack = 0
  5153                           ;isdigit@c stored from wreg
  5154  013F0C  0100               	movlb	0	; () banked
  5155  013F0E  6F62               	movwf	isdigit@c& (0+255),b
  5156  013F10  0E00               	movlw	0
  5157  013F12  0100               	movlb	0	; () banked
  5158  013F14  6F61               	movwf	_isdigit$5388& (0+255),b
  5159                           
  5160                           ; BSR set to: 0
  5161  013F16  0E3A               	movlw	58
  5162  013F18  0100               	movlb	0	; () banked
  5163  013F1A  6162               	cpfslt	isdigit@c& (0+255),b
  5164  013F1C  D007               	goto	l7837
  5165                           
  5166                           ; BSR set to: 0
  5167  013F1E  0E2F               	movlw	47
  5168  013F20  0100               	movlb	0	; () banked
  5169  013F22  6562               	cpfsgt	isdigit@c& (0+255),b
  5170  013F24  D003               	goto	l7837
  5171                           
  5172                           ; BSR set to: 0
  5173  013F26  0E01               	movlw	1
  5174  013F28  0100               	movlb	0	; () banked
  5175  013F2A  6F61               	movwf	_isdigit$5388& (0+255),b
  5176  013F2C                     l7837:
  5177                           
  5178                           ; BSR set to: 0
  5179  013F2C  C061  F060         	movff	_isdigit$5388,??_isdigit
  5180  013F30  0100               	movlb	0	; () banked
  5181  013F32  3160               	rrcf	??_isdigit& (0+255),w,b
  5182  013F34  0012               	return	
  5183  013F36                     __end_of_isdigit:
  5184                           	opt stack 0
  5185                           tblptru	equ	0xFF8
  5186                           tblptrh	equ	0xFF7
  5187                           tblptrl	equ	0xFF6
  5188                           tablat	equ	0xFF5
  5189                           prodh	equ	0xFF4
  5190                           prodl	equ	0xFF3
  5191                           intcon	equ	0xFF2
  5192                           indf0	equ	0xFEF
  5193                           postinc0	equ	0xFEE
  5194                           fsr0h	equ	0xFEA
  5195                           fsr0l	equ	0xFE9
  5196                           wreg	equ	0xFE8
  5197                           postdec1	equ	0xFE5
  5198                           fsr1h	equ	0xFE2
  5199                           fsr1l	equ	0xFE1
  5200                           indf2	equ	0xFDF
  5201                           postinc2	equ	0xFDE
  5202                           postdec2	equ	0xFDD
  5203                           fsr2h	equ	0xFDA
  5204                           fsr2l	equ	0xFD9
  5205                           status	equ	0xFD8
  5206                           
  5207 ;; *************** function ___wmul *****************
  5208 ;; Defined at:
  5209 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5212 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  product         2    4[BANK0 ] unsigned int 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  2    0[BANK0 ] unsigned int 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, prodl, prodh
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5227 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;Total ram usage:        6 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:   11
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_sprintf
  5235 ;;		_atoi
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text12
  5240  013D36                     __ptext12:
  5241                           	opt stack 0
  5242  013D36                     ___wmul:
  5243                           	opt stack 13
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;incstack = 0
  5247  013D36  0100               	movlb	0	; () banked
  5248  013D38  5160               	movf	___wmul@multiplier& (0+255),w,b
  5249  013D3A  0100               	movlb	0	; () banked
  5250  013D3C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5251  013D3E  CFF3 F064          	movff	prodl,___wmul@product
  5252  013D42  CFF4 F065          	movff	prodh,___wmul@product+1
  5253  013D46  0100               	movlb	0	; () banked
  5254  013D48  5160               	movf	___wmul@multiplier& (0+255),w,b
  5255  013D4A  0100               	movlb	0	; () banked
  5256  013D4C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5257  013D4E  50F3               	movf	prodl,w,c
  5258  013D50  0100               	movlb	0	; () banked
  5259  013D52  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5260  013D54  0100               	movlb	0	; () banked
  5261  013D56  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5262  013D58  0100               	movlb	0	; () banked
  5263  013D5A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5264  013D5C  50F3               	movf	prodl,w,c
  5265  013D5E  0100               	movlb	0	; () banked
  5266  013D60  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5267                           
  5268                           ; BSR set to: 0
  5269  013D62  C064  F060         	movff	___wmul@product,?___wmul
  5270  013D66  C065  F061         	movff	___wmul@product+1,?___wmul+1
  5271  013D6A  0012               	return	
  5272  013D6C                     __end_of___wmul:
  5273                           	opt stack 0
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           prodh	equ	0xFF4
  5279                           prodl	equ	0xFF3
  5280                           intcon	equ	0xFF2
  5281                           indf0	equ	0xFEF
  5282                           postinc0	equ	0xFEE
  5283                           fsr0h	equ	0xFEA
  5284                           fsr0l	equ	0xFE9
  5285                           wreg	equ	0xFE8
  5286                           postdec1	equ	0xFE5
  5287                           fsr1h	equ	0xFE2
  5288                           fsr1l	equ	0xFE1
  5289                           indf2	equ	0xFDF
  5290                           postinc2	equ	0xFDE
  5291                           postdec2	equ	0xFDD
  5292                           fsr2h	equ	0xFDA
  5293                           fsr2l	equ	0xFD9
  5294                           status	equ	0xFD8
  5295                           
  5296 ;; *************** function _bootload *****************
  5297 ;; Defined at:
  5298 ;;		line 51 in file "main.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;		None               void
  5305 ;; Registers used:
  5306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:   15
  5319 ;; This function calls:
  5320 ;;		_I2C_LCD_Clear
  5321 ;;		_I2C_LCD_Puts
  5322 ;;		_I2C_LCD_SetCursor
  5323 ;; This function is called by:
  5324 ;;		_terminal_operation
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text13
  5329  013BD6                     __ptext13:
  5330                           	opt stack 0
  5331  013BD6                     _bootload:
  5332                           	opt stack 13
  5333                           
  5334                           ;main.c: 52: I2C_LCD_Clear();
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;incstack = 0
  5338  013BD6  EC51  F0A0         	call	_I2C_LCD_Clear	;wreg free
  5339                           
  5340                           ;main.c: 53: I2C_LCD_SetCursor(0, 0);
  5341  013BDA  0E00               	movlw	0
  5342  013BDC  0100               	movlb	0	; () banked
  5343  013BDE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5344  013BE0  0E00               	movlw	0
  5345  013BE2  EC18  F09F         	call	_I2C_LCD_SetCursor
  5346                           
  5347                           ;main.c: 54: I2C_LCD_Puts("PIC18F27J53");
  5348  013BE6  0E66               	movlw	low STR_41
  5349  013BE8  0100               	movlb	0	; () banked
  5350  013BEA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5351  013BEC  0EFF               	movlw	high STR_41
  5352  013BEE  0100               	movlb	0	; () banked
  5353  013BF0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5354  013BF2  ECD3  F09B         	call	_I2C_LCD_Puts	;wreg free
  5355                           
  5356                           ;main.c: 55: I2C_LCD_SetCursor(0, 1);
  5357  013BF6  0E01               	movlw	1
  5358  013BF8  0100               	movlb	0	; () banked
  5359  013BFA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5360  013BFC  0E00               	movlw	0
  5361  013BFE  EC18  F09F         	call	_I2C_LCD_SetCursor
  5362                           
  5363                           ;main.c: 56: I2C_LCD_Puts("Bootloader mode");
  5364  013C02  0E56               	movlw	low STR_42
  5365  013C04  0100               	movlb	0	; () banked
  5366  013C06  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5367  013C08  0EFF               	movlw	high STR_42
  5368  013C0A  0100               	movlb	0	; () banked
  5369  013C0C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5370  013C0E  ECD3  F09B         	call	_I2C_LCD_Puts	;wreg free
  5371  013C12  EF0E F000          	goto	28	;# 
  5372  013C16  0012               	return		;funcret
  5373  013C18                     __end_of_bootload:
  5374                           	opt stack 0
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           prodh	equ	0xFF4
  5380                           prodl	equ	0xFF3
  5381                           intcon	equ	0xFF2
  5382                           indf0	equ	0xFEF
  5383                           postinc0	equ	0xFEE
  5384                           fsr0h	equ	0xFEA
  5385                           fsr0l	equ	0xFE9
  5386                           wreg	equ	0xFE8
  5387                           postdec1	equ	0xFE5
  5388                           fsr1h	equ	0xFE2
  5389                           fsr1l	equ	0xFE1
  5390                           indf2	equ	0xFDF
  5391                           postinc2	equ	0xFDE
  5392                           postdec2	equ	0xFDD
  5393                           fsr2h	equ	0xFDA
  5394                           fsr2l	equ	0xFD9
  5395                           status	equ	0xFD8
  5396                           
  5397 ;; *************** function _I2C_LCD_SetCursor *****************
  5398 ;; Defined at:
  5399 ;;		line 26 in file "../My_library/My_ST7032.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  col             1    wreg     unsigned char 
  5402 ;;  row             1    6[BANK0 ] unsigned char 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  col             1    9[BANK0 ] unsigned char 
  5405 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  5406 ;; Return value:  Size  Location     Type
  5407 ;;		None               void
  5408 ;; Registers used:
  5409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5415 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;Total ram usage:        4 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:   14
  5422 ;; This function calls:
  5423 ;;		_I2C_LCD_Command
  5424 ;; This function is called by:
  5425 ;;		_bootload
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text14
  5431  013E30                     __ptext14:
  5432                           	opt stack 0
  5433  013E30                     _I2C_LCD_SetCursor:
  5434                           	opt stack 13
  5435                           
  5436                           ;incstack = 0
  5437                           ;I2C_LCD_SetCursor@col stored from wreg
  5438  013E30  0100               	movlb	0	; () banked
  5439  013E32  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  5440                           
  5441                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
  5442  013E34  C0FC  F067         	movff	I2C_LCD_SetCursor@F8620,I2C_LCD_SetCursor@row_offsets
  5443  013E38  C0FD  F068         	movff	I2C_LCD_SetCursor@F8620+1,I2C_LCD_SetCursor@row_offsets+1
  5444                           
  5445                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  5446  013E3C  0100               	movlb	0	; () banked
  5447  013E3E  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  5448  013E40  0D01               	mullw	1
  5449  013E42  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  5450  013E44  24F3               	addwf	prodl,w,c
  5451  013E46  6ED9               	movwf	fsr2l,c
  5452  013E48  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  5453  013E4A  20F4               	addwfc	prodh,w,c
  5454  013E4C  6EDA               	movwf	fsr2h,c
  5455  013E4E  50DF               	movf	indf2,w,c
  5456  013E50  0100               	movlb	0	; () banked
  5457  013E52  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  5458  013E54  0980               	iorlw	128
  5459  013E56  EC63  F09E         	call	_I2C_LCD_Command
  5460  013E5A  0012               	return		;funcret
  5461  013E5C                     __end_of_I2C_LCD_SetCursor:
  5462                           	opt stack 0
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           prodh	equ	0xFF4
  5468                           prodl	equ	0xFF3
  5469                           intcon	equ	0xFF2
  5470                           indf0	equ	0xFEF
  5471                           postinc0	equ	0xFEE
  5472                           fsr0h	equ	0xFEA
  5473                           fsr0l	equ	0xFE9
  5474                           wreg	equ	0xFE8
  5475                           postdec1	equ	0xFE5
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           indf2	equ	0xFDF
  5479                           postinc2	equ	0xFDE
  5480                           postdec2	equ	0xFDD
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8
  5484                           
  5485 ;; *************** function _I2C_LCD_Puts *****************
  5486 ;; Defined at:
  5487 ;;		line 45 in file "../My_library/My_ST7032.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5490 ;;		 -> STR_49(9), STR_48(9), STR_42(16), STR_41(12), 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  ans             2    7[BANK0 ] int 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5505 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5506 ;;Total ram usage:        5 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:   13
  5509 ;; This function calls:
  5510 ;;		_I2C_Send
  5511 ;;		_I2C_Start
  5512 ;;		_I2C_Stop
  5513 ;; This function is called by:
  5514 ;;		_bootload
  5515 ;;		_main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text15
  5520  0137A6                     __ptext15:
  5521                           	opt stack 0
  5522  0137A6                     _I2C_LCD_Puts:
  5523                           	opt stack 14
  5524                           
  5525                           ;My_ST7032.c: 46: int ans;
  5526                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
  5527                           
  5528                           ;incstack = 0
  5529  0137A6  0E00               	movlw	0
  5530  0137A8  0100               	movlb	0	; () banked
  5531  0137AA  6F62               	movwf	I2C_Start@rw& (0+255),b
  5532  0137AC  0E3E               	movlw	62
  5533  0137AE  ECE9  F09E         	call	_I2C_Start
  5534  0137B2  0100               	movlb	0	; () banked
  5535  0137B4  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  5536  0137B6  0100               	movlb	0	; () banked
  5537  0137B8  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  5538  0137BA  0100               	movlb	0	; () banked
  5539  0137BC  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5540  0137BE  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;My_ST7032.c: 49: if (ans == 0) {
  5544  0137C0  0100               	movlb	0	; () banked
  5545  0137C2  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  5546  0137C4  0100               	movlb	0	; () banked
  5547  0137C6  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5548  0137C8  A4D8               	btfss	status,2,c
  5549  0137CA  D01F               	goto	l8229
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
  5553  0137CC  0E40               	movlw	64
  5554  0137CE  EC6B  F0A0         	call	_I2C_Send
  5555                           
  5556                           ;My_ST7032.c: 51: while (*s) {
  5557  0137D2  D010               	goto	l8227
  5558  0137D4                     l8221:
  5559                           
  5560                           ;My_ST7032.c: 52: I2C_Send(*s++);
  5561  0137D4  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5562  0137D8  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5563  0137DC                     	if	0	;tblptru may be non-zero
  5564  0137DC                     	endif
  5565  0137DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5566  0137DC  0E00               	movlw	low (__mediumconst shr (0+16))
  5567  0137DE  6EF8               	movwf	tblptru,c
  5568  0137E0                     	endif
  5569  0137E0  0008               	tblrd		*
  5570  0137E2  50F5               	movf	tablat,w,c
  5571  0137E4  EC6B  F0A0         	call	_I2C_Send
  5572  0137E8  0100               	movlb	0	; () banked
  5573  0137EA  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5574  0137EC  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5578  0137EE  0E68               	movlw	104
  5579  0137F0                     u9467:
  5580  0137F0  2EE8               	decfsz	wreg,f,c
  5581  0137F2  D7FE               	goto	u9467
  5582  0137F4                     l8227:
  5583  0137F4  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5584  0137F8  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5585  0137FC                     	if	0	;tblptru may be non-zero
  5586  0137FC                     	endif
  5587  0137FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5588  0137FC  0E00               	movlw	low (__mediumconst shr (0+16))
  5589  0137FE  6EF8               	movwf	tblptru,c
  5590  013800                     	endif
  5591  013800  0008               	tblrd		*
  5592  013802  50F5               	movf	tablat,w,c
  5593  013804  0900               	iorlw	0
  5594  013806  A4D8               	btfss	status,2,c
  5595  013808  D7E5               	goto	l8221
  5596  01380A                     l8229:
  5597                           
  5598                           ;My_ST7032.c: 54: }
  5599                           ;My_ST7032.c: 55: }
  5600                           ;My_ST7032.c: 56: I2C_Stop();
  5601  01380A  EC87  F0A0         	call	_I2C_Stop	;wreg free
  5602  01380E  0012               	return		;funcret
  5603  013810                     __end_of_I2C_LCD_Puts:
  5604                           	opt stack 0
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           intcon	equ	0xFF2
  5612                           indf0	equ	0xFEF
  5613                           postinc0	equ	0xFEE
  5614                           fsr0h	equ	0xFEA
  5615                           fsr0l	equ	0xFE9
  5616                           wreg	equ	0xFE8
  5617                           postdec1	equ	0xFE5
  5618                           fsr1h	equ	0xFE2
  5619                           fsr1l	equ	0xFE1
  5620                           indf2	equ	0xFDF
  5621                           postinc2	equ	0xFDE
  5622                           postdec2	equ	0xFDD
  5623                           fsr2h	equ	0xFDA
  5624                           fsr2l	equ	0xFD9
  5625                           status	equ	0xFD8
  5626                           
  5627 ;; *************** function _ringbuf_put_num *****************
  5628 ;; Defined at:
  5629 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5632 ;;		 -> usb_tx(8), 
  5633 ;;  value           2   17[BANK0 ] const unsigned int 
  5634 ;;  digits          1   19[BANK0 ] unsigned char 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  i               1   20[BANK0 ] unsigned char 
  5637 ;;  temp            2   21[BANK0 ] unsigned int 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;		None               void
  5640 ;; Registers used:
  5641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5647 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5650 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;Total ram usage:        8 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:   13
  5654 ;; This function calls:
  5655 ;;		___lwdiv
  5656 ;;		___lwmod
  5657 ;;		_ringbuf_put
  5658 ;; This function is called by:
  5659 ;;		_terminal_task
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text16
  5664  0134E0                     __ptext16:
  5665                           	opt stack 0
  5666  0134E0                     _ringbuf_put_num:
  5667                           	opt stack 16
  5668                           
  5669                           ;My_ringbuf.c: 29: while (digits--) {
  5670                           
  5671                           ;incstack = 0
  5672  0134E0  D039               	goto	l8649
  5673  0134E2                     l726:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5677  0134E2  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5678  0134E6  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5682  0134EA  0E00               	movlw	0
  5683  0134EC  0100               	movlb	0	; () banked
  5684  0134EE  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  5685  0134F0  D011               	goto	l8643
  5686  0134F2                     l8639:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;My_ringbuf.c: 32: temp /= 10;
  5690  0134F2  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5691  0134F6  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5692  0134FA  0E00               	movlw	0
  5693  0134FC  0100               	movlb	0	; () banked
  5694  0134FE  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5695  013500  0E0A               	movlw	10
  5696  013502  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5697  013504  ECED  F09A         	call	___lwdiv	;wreg free
  5698  013508  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  5699  01350C  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5700  013510  0100               	movlb	0	; () banked
  5701  013512  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  5702  013514                     l8643:
  5703                           
  5704                           ; BSR set to: 0
  5705  013514  0100               	movlb	0	; () banked
  5706  013516  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  5707  013518  0100               	movlb	0	; () banked
  5708  01351A  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  5709  01351C  A0D8               	btfss	status,0,c
  5710  01351E  D7E9               	goto	l8639
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;My_ringbuf.c: 33: }
  5714                           ;My_ringbuf.c: 34: temp %= 10;
  5715                           
  5716                           ; BSR set to: 0
  5717  013520  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5718  013524  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5719  013528  0E00               	movlw	0
  5720  01352A  0100               	movlb	0	; () banked
  5721  01352C  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  5722  01352E  0E0A               	movlw	10
  5723  013530  6F69               	movwf	___lwmod@divisor& (0+255),b
  5724  013532  EC9E  F09C         	call	___lwmod	;wreg free
  5725  013536  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  5726  01353A  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5727                           
  5728                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5729  01353E  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5730  013542  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5731  013546  0100               	movlb	0	; () banked
  5732  013548  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  5733  01354A  0F30               	addlw	48
  5734  01354C  0100               	movlb	0	; () banked
  5735  01354E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5736  013550  ECDE  F092         	call	_ringbuf_put	;wreg free
  5737  013554                     l8649:
  5738  013554  0100               	movlb	0	; () banked
  5739  013556  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  5740  013558  0100               	movlb	0	; () banked
  5741  01355A  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  5742  01355C  B4D8               	btfsc	status,2,c
  5743  01355E  0012               	return	
  5744  013560  D7C0               	goto	l726
  5745  013562                     __end_of_ringbuf_put_num:
  5746                           	opt stack 0
  5747                           tblptru	equ	0xFF8
  5748                           tblptrh	equ	0xFF7
  5749                           tblptrl	equ	0xFF6
  5750                           tablat	equ	0xFF5
  5751                           prodh	equ	0xFF4
  5752                           prodl	equ	0xFF3
  5753                           intcon	equ	0xFF2
  5754                           indf0	equ	0xFEF
  5755                           postinc0	equ	0xFEE
  5756                           fsr0h	equ	0xFEA
  5757                           fsr0l	equ	0xFE9
  5758                           wreg	equ	0xFE8
  5759                           postdec1	equ	0xFE5
  5760                           fsr1h	equ	0xFE2
  5761                           fsr1l	equ	0xFE1
  5762                           indf2	equ	0xFDF
  5763                           postinc2	equ	0xFDE
  5764                           postdec2	equ	0xFDD
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function ___lwmod *****************
  5770 ;; Defined at:
  5771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  dividend        2    7[BANK0 ] unsigned int 
  5774 ;;  divisor         2    9[BANK0 ] unsigned int 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  counter         1   11[BANK0 ] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  2    7[BANK0 ] unsigned int 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5789 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5790 ;;Total ram usage:        5 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:   11
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_ringbuf_put_num
  5797 ;;		_sprintf
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text17
  5802  01393C                     __ptext17:
  5803                           	opt stack 0
  5804  01393C                     ___lwmod:
  5805                           	opt stack 13
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;incstack = 0
  5809  01393C  0100               	movlb	0	; () banked
  5810  01393E  5169               	movf	___lwmod@divisor& (0+255),w,b
  5811  013940  0100               	movlb	0	; () banked
  5812  013942  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5813  013944  B4D8               	btfsc	status,2,c
  5814  013946  D026               	goto	l1849
  5815                           
  5816                           ; BSR set to: 0
  5817  013948  0E01               	movlw	1
  5818  01394A  0100               	movlb	0	; () banked
  5819  01394C  6F6B               	movwf	___lwmod@counter& (0+255),b
  5820  01394E  D006               	goto	l7875
  5821  013950                     l7873:
  5822                           
  5823                           ; BSR set to: 0
  5824  013950  0100               	movlb	0	; () banked
  5825  013952  90D8               	bcf	status,0,c
  5826  013954  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  5827  013956  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5828  013958  0100               	movlb	0	; () banked
  5829  01395A  2B6B               	incf	___lwmod@counter& (0+255),f,b
  5830  01395C                     l7875:
  5831                           
  5832                           ; BSR set to: 0
  5833  01395C  0100               	movlb	0	; () banked
  5834  01395E  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5835  013960  D7F7               	goto	l7873
  5836  013962                     l7877:
  5837                           
  5838                           ; BSR set to: 0
  5839  013962  0100               	movlb	0	; () banked
  5840  013964  5169               	movf	___lwmod@divisor& (0+255),w,b
  5841  013966  0100               	movlb	0	; () banked
  5842  013968  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  5843  01396A  0100               	movlb	0	; () banked
  5844  01396C  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5845  01396E  0100               	movlb	0	; () banked
  5846  013970  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5847  013972  A0D8               	btfss	status,0,c
  5848  013974  D008               	goto	l7881
  5849                           
  5850                           ; BSR set to: 0
  5851  013976  0100               	movlb	0	; () banked
  5852  013978  5169               	movf	___lwmod@divisor& (0+255),w,b
  5853  01397A  0100               	movlb	0	; () banked
  5854  01397C  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  5855  01397E  0100               	movlb	0	; () banked
  5856  013980  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5857  013982  0100               	movlb	0	; () banked
  5858  013984  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5859  013986                     l7881:
  5860                           
  5861                           ; BSR set to: 0
  5862  013986  0100               	movlb	0	; () banked
  5863  013988  90D8               	bcf	status,0,c
  5864  01398A  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5865  01398C  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  5866                           
  5867                           ; BSR set to: 0
  5868  01398E  0100               	movlb	0	; () banked
  5869  013990  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  5870  013992  D7E7               	goto	l7877
  5871  013994                     l1849:
  5872                           
  5873                           ; BSR set to: 0
  5874  013994  C067  F067         	movff	___lwmod@dividend,?___lwmod
  5875  013998  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  5876                           
  5877                           ; BSR set to: 0
  5878  01399C  0012               	return		;funcret
  5879  01399E                     __end_of___lwmod:
  5880                           	opt stack 0
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           indf0	equ	0xFEF
  5889                           postinc0	equ	0xFEE
  5890                           fsr0h	equ	0xFEA
  5891                           fsr0l	equ	0xFE9
  5892                           wreg	equ	0xFE8
  5893                           postdec1	equ	0xFE5
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function ___lwdiv *****************
  5904 ;; Defined at:
  5905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  dividend        2    0[BANK0 ] unsigned int 
  5908 ;;  divisor         2    2[BANK0 ] unsigned int 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  quotient        2    5[BANK0 ] unsigned int 
  5911 ;;  counter         1    4[BANK0 ] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    0[BANK0 ] unsigned int 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5921 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;Total ram usage:        7 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   11
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_ringbuf_put_num
  5932 ;;		_sprintf
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text18
  5937  0135DA                     __ptext18:
  5938                           	opt stack 0
  5939  0135DA                     ___lwdiv:
  5940                           	opt stack 13
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;incstack = 0
  5944  0135DA  0E00               	movlw	0
  5945  0135DC  0100               	movlb	0	; () banked
  5946  0135DE  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5947  0135E0  0E00               	movlw	0
  5948  0135E2  6F65               	movwf	___lwdiv@quotient& (0+255),b
  5949                           
  5950                           ; BSR set to: 0
  5951  0135E4  0100               	movlb	0	; () banked
  5952  0135E6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5953  0135E8  0100               	movlb	0	; () banked
  5954  0135EA  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5955  0135EC  B4D8               	btfsc	status,2,c
  5956  0135EE  D02C               	goto	l1839
  5957                           
  5958                           ; BSR set to: 0
  5959  0135F0  0E01               	movlw	1
  5960  0135F2  0100               	movlb	0	; () banked
  5961  0135F4  6F64               	movwf	___lwdiv@counter& (0+255),b
  5962  0135F6  D006               	goto	l7855
  5963  0135F8                     l7853:
  5964                           
  5965                           ; BSR set to: 0
  5966  0135F8  0100               	movlb	0	; () banked
  5967  0135FA  90D8               	bcf	status,0,c
  5968  0135FC  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5969  0135FE  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5970  013600  0100               	movlb	0	; () banked
  5971  013602  2B64               	incf	___lwdiv@counter& (0+255),f,b
  5972  013604                     l7855:
  5973                           
  5974                           ; BSR set to: 0
  5975  013604  0100               	movlb	0	; () banked
  5976  013606  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5977  013608  D7F7               	goto	l7853
  5978  01360A                     l7857:
  5979                           
  5980                           ; BSR set to: 0
  5981  01360A  0100               	movlb	0	; () banked
  5982  01360C  90D8               	bcf	status,0,c
  5983  01360E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  5984  013610  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5985                           
  5986                           ; BSR set to: 0
  5987  013612  0100               	movlb	0	; () banked
  5988  013614  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5989  013616  0100               	movlb	0	; () banked
  5990  013618  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5991  01361A  0100               	movlb	0	; () banked
  5992  01361C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5993  01361E  0100               	movlb	0	; () banked
  5994  013620  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5995  013622  A0D8               	btfss	status,0,c
  5996  013624  D00A               	goto	l7865
  5997                           
  5998                           ; BSR set to: 0
  5999  013626  0100               	movlb	0	; () banked
  6000  013628  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6001  01362A  0100               	movlb	0	; () banked
  6002  01362C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  6003  01362E  0100               	movlb	0	; () banked
  6004  013630  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6005  013632  0100               	movlb	0	; () banked
  6006  013634  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6007                           
  6008                           ; BSR set to: 0
  6009  013636  0100               	movlb	0	; () banked
  6010  013638  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  6011  01363A                     l7865:
  6012                           
  6013                           ; BSR set to: 0
  6014  01363A  0100               	movlb	0	; () banked
  6015  01363C  90D8               	bcf	status,0,c
  6016  01363E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6017  013640  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  6018                           
  6019                           ; BSR set to: 0
  6020  013642  0100               	movlb	0	; () banked
  6021  013644  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  6022  013646  D7E1               	goto	l7857
  6023  013648                     l1839:
  6024                           
  6025                           ; BSR set to: 0
  6026  013648  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  6027  01364C  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6028                           
  6029                           ; BSR set to: 0
  6030  013650  0012               	return		;funcret
  6031  013652                     __end_of___lwdiv:
  6032                           	opt stack 0
  6033                           tblptru	equ	0xFF8
  6034                           tblptrh	equ	0xFF7
  6035                           tblptrl	equ	0xFF6
  6036                           tablat	equ	0xFF5
  6037                           prodh	equ	0xFF4
  6038                           prodl	equ	0xFF3
  6039                           intcon	equ	0xFF2
  6040                           indf0	equ	0xFEF
  6041                           postinc0	equ	0xFEE
  6042                           fsr0h	equ	0xFEA
  6043                           fsr0l	equ	0xFE9
  6044                           wreg	equ	0xFE8
  6045                           postdec1	equ	0xFE5
  6046                           fsr1h	equ	0xFE2
  6047                           fsr1l	equ	0xFE1
  6048                           indf2	equ	0xFDF
  6049                           postinc2	equ	0xFDE
  6050                           postdec2	equ	0xFDD
  6051                           fsr2h	equ	0xFDA
  6052                           fsr2l	equ	0xFD9
  6053                           status	equ	0xFD8
  6054                           
  6055 ;; *************** function _ringbuf_delete *****************
  6056 ;; Defined at:
  6057 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6060 ;;		 -> terminal_task@command(8), 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;		None               void
  6065 ;; Registers used:
  6066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;Total ram usage:        2 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:   11
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_terminal_task
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text19
  6087  013F84                     __ptext19:
  6088                           	opt stack 0
  6089  013F84                     _ringbuf_delete:
  6090                           	opt stack 18
  6091                           
  6092                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;incstack = 0
  6096  013F84  0100               	movlb	0	; () banked
  6097  013F86  EE20 F006          	lfsr	2,6
  6098  013F8A  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6099  013F8C  26D9               	addwf	fsr2l,f,c
  6100  013F8E  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6101  013F90  22DA               	addwfc	fsr2h,f,c
  6102  013F92  0100               	movlb	0	; () banked
  6103  013F94  EE10 F004          	lfsr	1,4
  6104  013F98  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6105  013F9A  26E1               	addwf	fsr1l,f,c
  6106  013F9C  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6107  013F9E  22E2               	addwfc	fsr1h,f,c
  6108  013FA0  CFDE FFE6          	movff	postinc2,postinc1
  6109  013FA4  CFDD FFE5          	movff	postdec2,postdec1
  6110                           
  6111                           ; BSR set to: 0
  6112  013FA8  0012               	return		;funcret
  6113  013FAA                     __end_of_ringbuf_delete:
  6114                           	opt stack 0
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           prodh	equ	0xFF4
  6120                           prodl	equ	0xFF3
  6121                           intcon	equ	0xFF2
  6122                           indf0	equ	0xFEF
  6123                           postinc0	equ	0xFEE
  6124                           fsr0h	equ	0xFEA
  6125                           fsr0l	equ	0xFE9
  6126                           wreg	equ	0xFE8
  6127                           postinc1	equ	0xFE6
  6128                           postdec1	equ	0xFE5
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           indf2	equ	0xFDF
  6132                           postinc2	equ	0xFDE
  6133                           postdec2	equ	0xFDD
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function _ringbuf_backspace *****************
  6139 ;; Defined at:
  6140 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6143 ;;		 -> terminal_task@command(8), 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;		None               void
  6148 ;; Registers used:
  6149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6158 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6159 ;;Total ram usage:        6 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:   12
  6162 ;; This function calls:
  6163 ;;		_ringbuf_num
  6164 ;; This function is called by:
  6165 ;;		_terminal_task
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text20
  6170  013220                     __ptext20:
  6171                           	opt stack 0
  6172  013220                     _ringbuf_backspace:
  6173                           	opt stack 17
  6174                           
  6175                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;incstack = 0
  6179  013220  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6180  013224  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6181  013228  EC89  F08E         	call	_ringbuf_num	;wreg free
  6182  01322C  0100               	movlb	0	; () banked
  6183  01322E  5160               	movf	?_ringbuf_num& (0+255),w,b
  6184  013230  0100               	movlb	0	; () banked
  6185  013232  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6186  013234  B4D8               	btfsc	status,2,c
  6187  013236  0012               	return	
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6191  013238  0100               	movlb	0	; () banked
  6192  01323A  EE20 F004          	lfsr	2,4
  6193  01323E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6194  013240  26D9               	addwf	fsr2l,f,c
  6195  013242  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6196  013244  22DA               	addwfc	fsr2h,f,c
  6197  013246  50DE               	movf	postinc2,w,c
  6198  013248  10DE               	iorwf	postinc2,w,c
  6199  01324A  B4D8               	btfsc	status,2,c
  6200  01324C  D00B               	goto	l8677
  6201                           
  6202                           ; BSR set to: 0
  6203  01324E  0100               	movlb	0	; () banked
  6204  013250  EE20 F004          	lfsr	2,4
  6205  013254  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6206  013256  26D9               	addwf	fsr2l,f,c
  6207  013258  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6208  01325A  22DA               	addwfc	fsr2h,f,c
  6209  01325C  06DE               	decf	postinc2,f,c
  6210  01325E  0E00               	movlw	0
  6211  013260  5ADD               	subwfb	postdec2,f,c
  6212  013262  0012               	return	
  6213  013264                     l8677:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6217  013264  0EFF               	movlw	255
  6218  013266  0100               	movlb	0	; () banked
  6219  013268  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6220  01326A  0EFF               	movlw	255
  6221  01326C  0100               	movlb	0	; () banked
  6222  01326E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6223  013270  0100               	movlb	0	; () banked
  6224  013272  EE20 F002          	lfsr	2,2
  6225  013276  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6226  013278  26D9               	addwf	fsr2l,f,c
  6227  01327A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6228  01327C  22DA               	addwfc	fsr2h,f,c
  6229  01327E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6230  013282  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6231  013286  0100               	movlb	0	; () banked
  6232  013288  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6233  01328A  0100               	movlb	0	; () banked
  6234  01328C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6235  01328E  0100               	movlb	0	; () banked
  6236  013290  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6237  013292  0100               	movlb	0	; () banked
  6238  013294  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6239  013296  0100               	movlb	0	; () banked
  6240  013298  EE20 F004          	lfsr	2,4
  6241  01329C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6242  01329E  26D9               	addwf	fsr2l,f,c
  6243  0132A0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6244  0132A2  22DA               	addwfc	fsr2h,f,c
  6245  0132A4  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6246  0132A8  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6247                           
  6248                           ; BSR set to: 0
  6249  0132AC  0012               	return	
  6250  0132AE                     __end_of_ringbuf_backspace:
  6251                           	opt stack 0
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodh	equ	0xFF4
  6257                           prodl	equ	0xFF3
  6258                           intcon	equ	0xFF2
  6259                           indf0	equ	0xFEF
  6260                           postinc0	equ	0xFEE
  6261                           fsr0h	equ	0xFEA
  6262                           fsr0l	equ	0xFE9
  6263                           wreg	equ	0xFE8
  6264                           postinc1	equ	0xFE6
  6265                           postdec1	equ	0xFE5
  6266                           fsr1h	equ	0xFE2
  6267                           fsr1l	equ	0xFE1
  6268                           indf2	equ	0xFDF
  6269                           postinc2	equ	0xFDE
  6270                           postdec2	equ	0xFDD
  6271                           fsr2h	equ	0xFDA
  6272                           fsr2l	equ	0xFD9
  6273                           status	equ	0xFD8
  6274                           
  6275 ;; *************** function _main_init *****************
  6276 ;; Defined at:
  6277 ;;		line 83 in file "main.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;		None               void
  6284 ;; Registers used:
  6285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;Total ram usage:        0 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:   16
  6298 ;; This function calls:
  6299 ;;		_I2C_LCD_init
  6300 ;;		_I2C_init
  6301 ;;		_OSC_init
  6302 ;;		_RTCC_init
  6303 ;;		_UART_init
  6304 ;;		_USB_init
  6305 ;;		_ringbuf_init
  6306 ;;		_timer0_init
  6307 ;;		_timer1_init
  6308 ;;		_timer3_init
  6309 ;; This function is called by:
  6310 ;;		_main
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text21
  6315  011EEA                     __ptext21:
  6316                           	opt stack 0
  6317  011EEA                     _main_init:
  6318                           	opt stack 14
  6319                           
  6320                           ;main.c: 84: OSC_init();
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;incstack = 0
  6324  011EEA  EC80  F0A0         	call	_OSC_init	;wreg free
  6325                           
  6326                           ;main.c: 85: TRISA = 0b00010000;
  6327  011EEE  0E10               	movlw	16
  6328  011EF0  6E92               	movwf	3986,c	;volatile
  6329                           
  6330                           ;main.c: 86: TRISB = 0b00110001;
  6331  011EF2  0E31               	movlw	49
  6332  011EF4  6E93               	movwf	3987,c	;volatile
  6333                           
  6334                           ;main.c: 87: TRISC = 0b10111010;
  6335  011EF6  0EBA               	movlw	186
  6336  011EF8  6E94               	movwf	3988,c	;volatile
  6337                           
  6338                           ;main.c: 88: ANCON0 = 0b11111111;
  6339  011EFA  010F               	movlb	15	; () banked
  6340  011EFC  6948               	setf	72,b	;volatile
  6341                           
  6342                           ; BSR set to: 15
  6343                           ;main.c: 89: ANCON1 = 0b00011111;
  6344  011EFE  0E1F               	movlw	31
  6345  011F00  010F               	movlb	15	; () banked
  6346  011F02  6F49               	movwf	73,b	;volatile
  6347                           
  6348                           ; BSR set to: 15
  6349                           ;main.c: 90: INTCON2bits.RBPU = 0;
  6350  011F04  9EF1               	bcf	intcon2,7,c	;volatile
  6351                           
  6352                           ; BSR set to: 15
  6353                           ;main.c: 92: timer0_init(6);
  6354  011F06  0E06               	movlw	6
  6355  011F08  EC2A  F09E         	call	_timer0_init
  6356                           
  6357                           ;main.c: 93: timer1_init(0, 2);
  6358  011F0C  0E02               	movlw	2
  6359  011F0E  0100               	movlb	0	; () banked
  6360  011F10  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6361  011F12  0E00               	movlw	0
  6362  011F14  EC55  F09D         	call	_timer1_init
  6363                           
  6364                           ;main.c: 94: timer3_init(2);
  6365  011F18  0E02               	movlw	2
  6366  011F1A  EC2E  F09F         	call	_timer3_init
  6367                           
  6368                           ;main.c: 95: I2C_init();
  6369  011F1E  EC77  F0A0         	call	_I2C_init	;wreg free
  6370                           
  6371                           ;main.c: 96: I2C_LCD_init();
  6372  011F22  ECE5  F099         	call	_I2C_LCD_init	;wreg free
  6373                           
  6374                           ;main.c: 97: RTCC_init();
  6375  011F26  EC08  F09C         	call	_RTCC_init	;wreg free
  6376                           
  6377                           ;main.c: 99: USB_init();
  6378  011F2A  EC28  F0A0         	call	_USB_init	;wreg free
  6379                           
  6380                           ;main.c: 100: static uint8_t usbtx[1000];
  6381                           ;main.c: 101: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  6382  011F2E  0E7D               	movlw	low _usb_tx
  6383  011F30  0100               	movlb	0	; () banked
  6384  011F32  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6385  011F34  0E01               	movlw	high _usb_tx
  6386  011F36  0100               	movlb	0	; () banked
  6387  011F38  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6388  011F3A  0EB5               	movlw	low main_init@usbtx
  6389  011F3C  0100               	movlb	0	; () banked
  6390  011F3E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6391  011F40  0E07               	movlw	high main_init@usbtx
  6392  011F42  0100               	movlb	0	; () banked
  6393  011F44  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6394  011F46  0E03               	movlw	3
  6395  011F48  0100               	movlb	0	; () banked
  6396  011F4A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6397  011F4C  0EE8               	movlw	232
  6398  011F4E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6399  011F50  EC2B  F09D         	call	_ringbuf_init	;wreg free
  6400                           
  6401                           ;main.c: 102: static uint8_t usbrx[100];
  6402                           ;main.c: 103: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  6403  011F54  0E75               	movlw	low _usb_rx
  6404  011F56  0100               	movlb	0	; () banked
  6405  011F58  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6406  011F5A  0E01               	movlw	high _usb_rx
  6407  011F5C  0100               	movlb	0	; () banked
  6408  011F5E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6409  011F60  0E00               	movlw	low main_init@usbrx
  6410  011F62  0100               	movlb	0	; () banked
  6411  011F64  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6412  011F66  0E02               	movlw	high main_init@usbrx
  6413  011F68  0100               	movlb	0	; () banked
  6414  011F6A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6415  011F6C  0E00               	movlw	0
  6416  011F6E  0100               	movlb	0	; () banked
  6417  011F70  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6418  011F72  0E64               	movlw	100
  6419  011F74  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6420  011F76  EC2B  F09D         	call	_ringbuf_init	;wreg free
  6421                           
  6422                           ;main.c: 105: UART_init();
  6423  011F7A  ECE7  F09F         	call	_UART_init	;wreg free
  6424                           
  6425                           ;main.c: 106: static uint8_t uarttx[1000];
  6426                           ;main.c: 107: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  6427  011F7E  0E6D               	movlw	low _uart_tx
  6428  011F80  0100               	movlb	0	; () banked
  6429  011F82  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6430  011F84  0E01               	movlw	high _uart_tx
  6431  011F86  0100               	movlb	0	; () banked
  6432  011F88  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6433  011F8A  0ECD               	movlw	low main_init@uarttx
  6434  011F8C  0100               	movlb	0	; () banked
  6435  011F8E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6436  011F90  0E03               	movlw	high main_init@uarttx
  6437  011F92  0100               	movlb	0	; () banked
  6438  011F94  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6439  011F96  0E03               	movlw	3
  6440  011F98  0100               	movlb	0	; () banked
  6441  011F9A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6442  011F9C  0EE8               	movlw	232
  6443  011F9E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6444  011FA0  EC2B  F09D         	call	_ringbuf_init	;wreg free
  6445                           
  6446                           ;main.c: 108: static uint8_t uartrx[100];
  6447                           ;main.c: 109: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  6448  011FA4  0E65               	movlw	low _uart_rx
  6449  011FA6  0100               	movlb	0	; () banked
  6450  011FA8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6451  011FAA  0E01               	movlw	high _uart_rx
  6452  011FAC  0100               	movlb	0	; () banked
  6453  011FAE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6454  011FB0  0E69               	movlw	low main_init@uartrx
  6455  011FB2  0100               	movlb	0	; () banked
  6456  011FB4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6457  011FB6  0E03               	movlw	high main_init@uartrx
  6458  011FB8  0100               	movlb	0	; () banked
  6459  011FBA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6460  011FBC  0E00               	movlw	0
  6461  011FBE  0100               	movlb	0	; () banked
  6462  011FC0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6463  011FC2  0E64               	movlw	100
  6464  011FC4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6465  011FC6  EC2B  F09D         	call	_ringbuf_init	;wreg free
  6466  011FCA  0012               	return		;funcret
  6467  011FCC                     __end_of_main_init:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           intcon	equ	0xFF2
  6476                           intcon2	equ	0xFF1
  6477                           indf0	equ	0xFEF
  6478                           postinc0	equ	0xFEE
  6479                           fsr0h	equ	0xFEA
  6480                           fsr0l	equ	0xFE9
  6481                           wreg	equ	0xFE8
  6482                           postinc1	equ	0xFE6
  6483                           postdec1	equ	0xFE5
  6484                           fsr1h	equ	0xFE2
  6485                           fsr1l	equ	0xFE1
  6486                           indf2	equ	0xFDF
  6487                           postinc2	equ	0xFDE
  6488                           postdec2	equ	0xFDD
  6489                           fsr2h	equ	0xFDA
  6490                           fsr2l	equ	0xFD9
  6491                           status	equ	0xFD8
  6492                           
  6493 ;; *************** function _timer3_init *****************
  6494 ;; Defined at:
  6495 ;;		line 73 in file "../My_library/My_PIC.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  prescaler       1    wreg     unsigned char 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;		None               void
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;Total ram usage:        2 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:   11
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_main_init
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text22
  6524  013E5C                     __ptext22:
  6525                           	opt stack 0
  6526  013E5C                     _timer3_init:
  6527                           	opt stack 18
  6528                           
  6529                           ;incstack = 0
  6530                           ;timer3_init@prescaler stored from wreg
  6531  013E5C  0100               	movlb	0	; () banked
  6532  013E5E  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6533                           
  6534                           ;My_PIC.c: 74: T3CONbits.TMR3CS = 0;
  6535  013E60  0E3F               	movlw	-193
  6536  013E62  1679               	andwf	3961,f,c	;volatile
  6537                           
  6538                           ;My_PIC.c: 75: T3CONbits.T3OSCEN = 0;
  6539  013E64  9679               	bcf	3961,3,c	;volatile
  6540                           
  6541                           ;My_PIC.c: 76: T3CONbits.T3CKPS = prescaler;
  6542  013E66  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6543  013E6A  0100               	movlb	0	; () banked
  6544  013E6C  3B60               	swapf	??_timer3_init& (0+255),f,b
  6545  013E6E  5079               	movf	3961,w,c	;volatile
  6546  013E70  0100               	movlb	0	; () banked
  6547  013E72  1960               	xorwf	??_timer3_init& (0+255),w,b
  6548  013E74  0BCF               	andlw	-49
  6549  013E76  1960               	xorwf	??_timer3_init& (0+255),w,b
  6550  013E78  6E79               	movwf	3961,c	;volatile
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;My_PIC.c: 77: T3CONbits.RD163 = 0;
  6554  013E7A  9E79               	bcf	3961,7,c	;volatile
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;My_PIC.c: 78: T3CONbits.TMR3ON = 1;
  6558  013E7C  8079               	bsf	3961,0,c	;volatile
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;My_PIC.c: 79: IPR2bits.TMR3IP = 0;
  6562  013E7E  92A2               	bcf	4002,1,c	;volatile
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;My_PIC.c: 80: PIR2bits.TMR3IF = 0;
  6566  013E80  92A1               	bcf	4001,1,c	;volatile
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;My_PIC.c: 81: PIE2bits.TMR3IE = 1;
  6570  013E82  82A0               	bsf	4000,1,c	;volatile
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;My_PIC.c: 82: INTCONbits.PEIE = 1;
  6574  013E84  8CF2               	bsf	intcon,6,c	;volatile
  6575                           
  6576                           ; BSR set to: 0
  6577  013E86  0012               	return		;funcret
  6578  013E88                     __end_of_timer3_init:
  6579                           	opt stack 0
  6580                           tblptru	equ	0xFF8
  6581                           tblptrh	equ	0xFF7
  6582                           tblptrl	equ	0xFF6
  6583                           tablat	equ	0xFF5
  6584                           prodh	equ	0xFF4
  6585                           prodl	equ	0xFF3
  6586                           intcon	equ	0xFF2
  6587                           intcon2	equ	0xFF1
  6588                           indf0	equ	0xFEF
  6589                           postinc0	equ	0xFEE
  6590                           fsr0h	equ	0xFEA
  6591                           fsr0l	equ	0xFE9
  6592                           wreg	equ	0xFE8
  6593                           postinc1	equ	0xFE6
  6594                           postdec1	equ	0xFE5
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _timer1_init *****************
  6605 ;; Defined at:
  6606 ;;		line 42 in file "../My_library/My_PIC.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  prescaler       1    wreg     unsigned char 
  6609 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;		None               void
  6614 ;; Registers used:
  6615 ;;		wreg, status,2, status,0
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6621 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6625 ;;Total ram usage:        3 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:   11
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_main_init
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text23
  6636  013AAA                     __ptext23:
  6637                           	opt stack 0
  6638  013AAA                     _timer1_init:
  6639                           	opt stack 18
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;incstack = 0
  6643                           ;timer1_init@prescaler stored from wreg
  6644  013AAA  0100               	movlb	0	; () banked
  6645  013AAC  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6646                           
  6647                           ;My_PIC.c: 43: T1CONbits.TMR1CS = clock_select;
  6648  013AAE  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6649  013AB2  0100               	movlb	0	; () banked
  6650  013AB4  3B61               	swapf	??_timer1_init& (0+255),f,b
  6651  013AB6  4761               	rlncf	??_timer1_init& (0+255),f,b
  6652  013AB8  4761               	rlncf	??_timer1_init& (0+255),f,b
  6653  013ABA  50CD               	movf	4045,w,c	;volatile
  6654  013ABC  0100               	movlb	0	; () banked
  6655  013ABE  1961               	xorwf	??_timer1_init& (0+255),w,b
  6656  013AC0  0B3F               	andlw	-193
  6657  013AC2  1961               	xorwf	??_timer1_init& (0+255),w,b
  6658  013AC4  6ECD               	movwf	4045,c	;volatile
  6659                           
  6660                           ;My_PIC.c: 44: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6661  013AC6  0E02               	movlw	2
  6662  013AC8  0100               	movlb	0	; () banked
  6663  013ACA  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6664  013ACC  A4D8               	btfss	status,2,c
  6665  013ACE  D002               	goto	l659
  6666                           
  6667                           ; BSR set to: 0
  6668  013AD0  86CD               	bsf	4045,3,c	;volatile
  6669  013AD2  D001               	goto	l8589
  6670  013AD4                     l659:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;My_PIC.c: 45: else T1CONbits.T1OSCEN = 0;
  6674  013AD4  96CD               	bcf	4045,3,c	;volatile
  6675  013AD6                     l8589:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;My_PIC.c: 46: T1CONbits.T1CKPS = prescaler;
  6679  013AD6  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6680  013ADA  0100               	movlb	0	; () banked
  6681  013ADC  3B61               	swapf	??_timer1_init& (0+255),f,b
  6682  013ADE  50CD               	movf	4045,w,c	;volatile
  6683  013AE0  0100               	movlb	0	; () banked
  6684  013AE2  1961               	xorwf	??_timer1_init& (0+255),w,b
  6685  013AE4  0BCF               	andlw	-49
  6686  013AE6  1961               	xorwf	??_timer1_init& (0+255),w,b
  6687  013AE8  6ECD               	movwf	4045,c	;volatile
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;My_PIC.c: 47: T1CONbits.nT1SYNC = 1;
  6691  013AEA  84CD               	bsf	4045,2,c	;volatile
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;My_PIC.c: 48: T1CONbits.RD16 = 0;
  6695  013AEC  92CD               	bcf	4045,1,c	;volatile
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;My_PIC.c: 49: T1CONbits.TMR1ON = 1;
  6699  013AEE  80CD               	bsf	4045,0,c	;volatile
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;My_PIC.c: 50: IPR1bits.TMR1IP = 0;
  6703  013AF0  909F               	bcf	3999,0,c	;volatile
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;My_PIC.c: 51: PIR1bits.TMR1IF = 0;
  6707  013AF2  909E               	bcf	3998,0,c	;volatile
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;My_PIC.c: 52: PIE1bits.TMR1IE = 1;
  6711  013AF4  809D               	bsf	3997,0,c	;volatile
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;My_PIC.c: 53: INTCONbits.PEIE = 1;
  6715  013AF6  8CF2               	bsf	intcon,6,c	;volatile
  6716                           
  6717                           ; BSR set to: 0
  6718  013AF8  0012               	return		;funcret
  6719  013AFA                     __end_of_timer1_init:
  6720                           	opt stack 0
  6721                           tblptru	equ	0xFF8
  6722                           tblptrh	equ	0xFF7
  6723                           tblptrl	equ	0xFF6
  6724                           tablat	equ	0xFF5
  6725                           prodh	equ	0xFF4
  6726                           prodl	equ	0xFF3
  6727                           intcon	equ	0xFF2
  6728                           intcon2	equ	0xFF1
  6729                           indf0	equ	0xFEF
  6730                           postinc0	equ	0xFEE
  6731                           fsr0h	equ	0xFEA
  6732                           fsr0l	equ	0xFE9
  6733                           wreg	equ	0xFE8
  6734                           postinc1	equ	0xFE6
  6735                           postdec1	equ	0xFE5
  6736                           fsr1h	equ	0xFE2
  6737                           fsr1l	equ	0xFE1
  6738                           indf2	equ	0xFDF
  6739                           postinc2	equ	0xFDE
  6740                           postdec2	equ	0xFDD
  6741                           fsr2h	equ	0xFDA
  6742                           fsr2l	equ	0xFD9
  6743                           status	equ	0xFD8
  6744                           
  6745 ;; *************** function _timer0_init *****************
  6746 ;; Defined at:
  6747 ;;		line 6 in file "../My_library/My_PIC.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  prescaler       1    wreg     unsigned char 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;		None               void
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6765 ;;Total ram usage:        2 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:   11
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_main_init
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text24
  6776  013C54                     __ptext24:
  6777                           	opt stack 0
  6778  013C54                     _timer0_init:
  6779                           	opt stack 18
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;incstack = 0
  6783                           ;timer0_init@prescaler stored from wreg
  6784  013C54  0100               	movlb	0	; () banked
  6785  013C56  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6786                           
  6787                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
  6788  013C58  8ED5               	bsf	4053,7,c	;volatile
  6789                           
  6790                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
  6791  013C5A  8CD5               	bsf	4053,6,c	;volatile
  6792                           
  6793                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
  6794  013C5C  9AD5               	bcf	4053,5,c	;volatile
  6795                           
  6796                           ;My_PIC.c: 10: if (prescaler == 0) {
  6797  013C5E  0100               	movlb	0	; () banked
  6798  013C60  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6799  013C62  0100               	movlb	0	; () banked
  6800  013C64  A4D8               	btfss	status,2,c
  6801  013C66  D002               	goto	l654
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
  6805  013C68  86D5               	bsf	4053,3,c	;volatile
  6806                           
  6807                           ;My_PIC.c: 12: } else {
  6808  013C6A  D00C               	goto	l8577
  6809  013C6C                     l654:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
  6813  013C6C  96D5               	bcf	4053,3,c	;volatile
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
  6817  013C6E  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6818  013C72  0EFF               	movlw	255
  6819  013C74  0100               	movlb	0	; () banked
  6820  013C76  2760               	addwf	??_timer0_init& (0+255),f,b
  6821  013C78  50D5               	movf	4053,w,c	;volatile
  6822  013C7A  0100               	movlb	0	; () banked
  6823  013C7C  1960               	xorwf	??_timer0_init& (0+255),w,b
  6824  013C7E  0BF8               	andlw	-8
  6825  013C80  1960               	xorwf	??_timer0_init& (0+255),w,b
  6826  013C82  6ED5               	movwf	4053,c	;volatile
  6827  013C84                     l8577:
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;My_PIC.c: 15: }
  6831                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
  6832  013C84  8AF2               	bsf	intcon,5,c	;volatile
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
  6836  013C86  94F2               	bcf	intcon,2,c	;volatile
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
  6840  013C88  94F1               	bcf	intcon2,2,c	;volatile
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
  6844  013C8A  8CF2               	bsf	intcon,6,c	;volatile
  6845                           
  6846                           ; BSR set to: 0
  6847  013C8C  0012               	return		;funcret
  6848  013C8E                     __end_of_timer0_init:
  6849                           	opt stack 0
  6850                           tblptru	equ	0xFF8
  6851                           tblptrh	equ	0xFF7
  6852                           tblptrl	equ	0xFF6
  6853                           tablat	equ	0xFF5
  6854                           prodh	equ	0xFF4
  6855                           prodl	equ	0xFF3
  6856                           intcon	equ	0xFF2
  6857                           intcon2	equ	0xFF1
  6858                           indf0	equ	0xFEF
  6859                           postinc0	equ	0xFEE
  6860                           fsr0h	equ	0xFEA
  6861                           fsr0l	equ	0xFE9
  6862                           wreg	equ	0xFE8
  6863                           postinc1	equ	0xFE6
  6864                           postdec1	equ	0xFE5
  6865                           fsr1h	equ	0xFE2
  6866                           fsr1l	equ	0xFE1
  6867                           indf2	equ	0xFDF
  6868                           postinc2	equ	0xFDE
  6869                           postdec2	equ	0xFDD
  6870                           fsr2h	equ	0xFDA
  6871                           fsr2l	equ	0xFD9
  6872                           status	equ	0xFD8
  6873                           
  6874 ;; *************** function _ringbuf_init *****************
  6875 ;; Defined at:
  6876 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6879 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  6880 ;;		 -> terminal_task@command(8), 
  6881 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6882 ;;		 -> main_init@uartrx(100), main_init@uarttx(1000), main_init@usbrx(100), main_init@usbtx(1000), 
  6883 ;;		 -> terminal_task@buf(100), 
  6884 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;		None               void
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6899 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6900 ;;Total ram usage:        6 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:   11
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_terminal_task
  6907 ;;		_main_init
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text25
  6912  013A56                     __ptext25:
  6913                           	opt stack 0
  6914  013A56                     _ringbuf_init:
  6915                           	opt stack 18
  6916                           
  6917                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;incstack = 0
  6921  013A56  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  6922  013A5A  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6923  013A5E  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6924  013A62  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6925                           
  6926                           ;My_ringbuf.c: 7: rb->size = bufsize;
  6927  013A66  0100               	movlb	0	; () banked
  6928  013A68  EE20 F002          	lfsr	2,2
  6929  013A6C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6930  013A6E  26D9               	addwf	fsr2l,f,c
  6931  013A70  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6932  013A72  22DA               	addwfc	fsr2h,f,c
  6933  013A74  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6934  013A78  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;My_ringbuf.c: 8: rb->head = 0;
  6938  013A7C  0100               	movlb	0	; () banked
  6939  013A7E  EE20 F004          	lfsr	2,4
  6940  013A82  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6941  013A84  26D9               	addwf	fsr2l,f,c
  6942  013A86  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6943  013A88  22DA               	addwfc	fsr2h,f,c
  6944  013A8A  0E00               	movlw	0
  6945  013A8C  6EDE               	movwf	postinc2,c
  6946  013A8E  0E00               	movlw	0
  6947  013A90  6EDD               	movwf	postdec2,c
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;My_ringbuf.c: 9: rb->tail = 0;
  6951  013A92  0100               	movlb	0	; () banked
  6952  013A94  EE20 F006          	lfsr	2,6
  6953  013A98  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6954  013A9A  26D9               	addwf	fsr2l,f,c
  6955  013A9C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6956  013A9E  22DA               	addwfc	fsr2h,f,c
  6957  013AA0  0E00               	movlw	0
  6958  013AA2  6EDE               	movwf	postinc2,c
  6959  013AA4  0E00               	movlw	0
  6960  013AA6  6EDD               	movwf	postdec2,c
  6961                           
  6962                           ; BSR set to: 0
  6963  013AA8  0012               	return		;funcret
  6964  013AAA                     __end_of_ringbuf_init:
  6965                           	opt stack 0
  6966                           tblptru	equ	0xFF8
  6967                           tblptrh	equ	0xFF7
  6968                           tblptrl	equ	0xFF6
  6969                           tablat	equ	0xFF5
  6970                           prodh	equ	0xFF4
  6971                           prodl	equ	0xFF3
  6972                           intcon	equ	0xFF2
  6973                           intcon2	equ	0xFF1
  6974                           indf0	equ	0xFEF
  6975                           postinc0	equ	0xFEE
  6976                           fsr0h	equ	0xFEA
  6977                           fsr0l	equ	0xFE9
  6978                           wreg	equ	0xFE8
  6979                           postinc1	equ	0xFE6
  6980                           postdec1	equ	0xFE5
  6981                           fsr1h	equ	0xFE2
  6982                           fsr1l	equ	0xFE1
  6983                           indf2	equ	0xFDF
  6984                           postinc2	equ	0xFDE
  6985                           postdec2	equ	0xFDD
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function _USB_init *****************
  6991 ;; Defined at:
  6992 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;		None
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;		None               void
  6999 ;; Registers used:
  7000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;Total ram usage:        0 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:   13
  7013 ;; This function calls:
  7014 ;;		_USBDeviceAttach
  7015 ;;		_USBDeviceInit
  7016 ;; This function is called by:
  7017 ;;		_main_init
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text26
  7022  014050                     __ptext26:
  7023                           	opt stack 0
  7024  014050                     _USB_init:
  7025                           	opt stack 16
  7026                           
  7027                           ;My_usb_cdc.c: 12: USBDeviceInit();
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;incstack = 0
  7031  014050  ECF4  F089         	call	_USBDeviceInit	;wreg free
  7032                           
  7033                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  7034  014054  EC47  F09E         	call	_USBDeviceAttach	;wreg free
  7035                           
  7036                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  7037  014058  0E00               	movlw	0
  7038  01405A  0101               	movlb	1	; () banked
  7039  01405C  6F8D               	movwf	_line_coding& (0+255),b
  7040  01405E  0EC2               	movlw	194
  7041  014060  6F8E               	movwf	(_line_coding+1)& (0+255),b
  7042  014062  0E01               	movlw	1
  7043  014064  6F8F               	movwf	(_line_coding+2)& (0+255),b
  7044  014066  0E00               	movlw	0
  7045  014068  6F90               	movwf	(_line_coding+3)& (0+255),b
  7046                           
  7047                           ; BSR set to: 1
  7048  01406A  0012               	return		;funcret
  7049  01406C                     __end_of_USB_init:
  7050                           	opt stack 0
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           prodh	equ	0xFF4
  7056                           prodl	equ	0xFF3
  7057                           intcon	equ	0xFF2
  7058                           intcon2	equ	0xFF1
  7059                           indf0	equ	0xFEF
  7060                           postinc0	equ	0xFEE
  7061                           fsr0h	equ	0xFEA
  7062                           fsr0l	equ	0xFE9
  7063                           wreg	equ	0xFE8
  7064                           postinc1	equ	0xFE6
  7065                           postdec1	equ	0xFE5
  7066                           fsr1h	equ	0xFE2
  7067                           fsr1l	equ	0xFE1
  7068                           indf2	equ	0xFDF
  7069                           postinc2	equ	0xFDE
  7070                           postdec2	equ	0xFDD
  7071                           fsr2h	equ	0xFDA
  7072                           fsr2l	equ	0xFD9
  7073                           status	equ	0xFD8
  7074                           
  7075 ;; *************** function _USBDeviceInit *****************
  7076 ;; Defined at:
  7077 ;;		line 298 in file "../My_library/usb/usb_device.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;		None
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  i               1    8[BANK0 ] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;		None               void
  7084 ;; Registers used:
  7085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;Total ram usage:        1 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:   12
  7098 ;; This function calls:
  7099 ;;		_memset
  7100 ;; This function is called by:
  7101 ;;		_USB_init
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text27
  7106  0113E8                     __ptext27:
  7107                           	opt stack 0
  7108  0113E8                     _USBDeviceInit:
  7109                           	opt stack 16
  7110                           
  7111                           ;usb_device.c: 300: uint8_t i;
  7112                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;incstack = 0
  7116  0113E8  98A0               	bcf	4000,4,c	;volatile
  7117                           
  7118                           ;usb_device.c: 305: {UEIR = 0;};
  7119  0113EA  0E00               	movlw	0
  7120  0113EC  6E63               	movwf	3939,c	;volatile
  7121                           
  7122                           ;usb_device.c: 308: {UIR = 0;};
  7123  0113EE  0E00               	movlw	0
  7124  0113F0  6E62               	movwf	3938,c	;volatile
  7125                           
  7126                           ;usb_device.c: 311: UEP0 = 0;
  7127  0113F2  0E00               	movlw	0
  7128  0113F4  010F               	movlb	15	; () banked
  7129  0113F6  6F26               	movwf	38,b	;volatile
  7130                           
  7131                           ; BSR set to: 15
  7132                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  7133  0113F8  0E27               	movlw	39
  7134  0113FA  0100               	movlb	0	; () banked
  7135  0113FC  6F60               	movwf	memset@p1& (0+255),b
  7136  0113FE  0E0F               	movlw	15
  7137  011400  0100               	movlb	0	; () banked
  7138  011402  6F61               	movwf	(memset@p1+1)& (0+255),b
  7139  011404  0E00               	movlw	0
  7140  011406  0100               	movlb	0	; () banked
  7141  011408  6F63               	movwf	(memset@c+1)& (0+255),b
  7142  01140A  0E00               	movlw	0
  7143  01140C  6F62               	movwf	memset@c& (0+255),b
  7144  01140E  0E00               	movlw	0
  7145  011410  0100               	movlb	0	; () banked
  7146  011412  6F65               	movwf	(memset@n+1)& (0+255),b
  7147  011414  0E02               	movlw	2
  7148  011416  6F64               	movwf	memset@n& (0+255),b
  7149  011418  ECB6  F09E         	call	_memset	;wreg free
  7150                           
  7151                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7152  01141C  0E16               	movlw	22
  7153  01141E  010F               	movlb	15	; () banked
  7154  011420  6F39               	movwf	57,b	;volatile
  7155                           
  7156                           ; BSR set to: 15
  7157  011422  0E9F               	movlw	159
  7158  011424  010F               	movlb	15	; () banked
  7159  011426  6F37               	movwf	55,b	;volatile
  7160                           
  7161                           ; BSR set to: 15
  7162  011428  0E7B               	movlw	123
  7163  01142A  010F               	movlb	15	; () banked
  7164  01142C  6F36               	movwf	54,b	;volatile
  7165                           
  7166                           ; BSR set to: 15
  7167                           ;usb_device.c: 318: ;
  7168                           ;usb_device.c: 321: ;
  7169                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  7170  01142E  0E00               	movlw	0
  7171  011430  0100               	movlb	0	; () banked
  7172  011432  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7173  011434                     l8299:
  7174                           
  7175                           ; BSR set to: 0
  7176  011434  0E0B               	movlw	11
  7177  011436  0100               	movlb	0	; () banked
  7178  011438  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7179  01143A  D001               	goto	l8303
  7180  01143C  D010               	goto	l146
  7181  01143E                     l8303:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;usb_device.c: 325: {
  7185                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  7186  01143E  0100               	movlb	0	; () banked
  7187  011440  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7188  011442  0D04               	mullw	4
  7189  011444  0E00               	movlw	0
  7190  011446  24F3               	addwf	prodl,w,c
  7191  011448  6ED9               	movwf	fsr2l,c
  7192  01144A  0E0D               	movlw	13
  7193  01144C  20F4               	addwfc	prodh,w,c
  7194  01144E  6EDA               	movwf	fsr2h,c
  7195  011450  6ADE               	clrf	postinc2,c
  7196  011452  6ADE               	clrf	postinc2,c
  7197  011454  6ADE               	clrf	postinc2,c
  7198  011456  6ADD               	clrf	postdec2,c
  7199                           
  7200                           ; BSR set to: 0
  7201  011458  0100               	movlb	0	; () banked
  7202  01145A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7203  01145C  D7EB               	goto	l8299
  7204  01145E                     l146:
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;usb_device.c: 327: }
  7208                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  7209  01145E  8C65               	bsf	3941,6,c	;volatile
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;usb_device.c: 333: UADDR = 0x00;
  7213  011460  0E00               	movlw	0
  7214  011462  010F               	movlb	15	; () banked
  7215  011464  6F38               	movwf	56,b	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  7219  011466  9865               	bcf	3941,4,c	;volatile
  7220                           
  7221                           ; BSR set to: 15
  7222                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  7223  011468  9C65               	bcf	3941,6,c	;volatile
  7224                           
  7225                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  7226  01146A  D00C               	goto	l8323
  7227  01146C                     l8315:
  7228                           
  7229                           ;usb_device.c: 343: {
  7230                           ;usb_device.c: 344: (UIR &= 0xF7);
  7231  01146C  9662               	bcf	3938,3,c	;volatile
  7232                           
  7233                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  7234  01146E  0E00               	movlw	0
  7235  011470  0100               	movlb	0	; () banked
  7236  011472  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  7240  011474  0E00               	movlw	0
  7241  011476  0100               	movlb	0	; () banked
  7242  011478  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  7246  01147A  0E00               	movlw	0
  7247  01147C  0100               	movlb	0	; () banked
  7248  01147E  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
  7249  011480  0E00               	movlw	0
  7250  011482  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
  7251  011484                     l8323:
  7252  011484  B662               	btfsc	3938,3,c	;volatile
  7253  011486  D7F2               	goto	l8315
  7254                           
  7255                           ;usb_device.c: 349: }
  7256                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  7257  011488  0E01               	movlw	1
  7258  01148A  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7259                           
  7260                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  7261  01148C  0E01               	movlw	1
  7262  01148E  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7263                           
  7264                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  7265  011490  0E00               	movlw	0
  7266  011492  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7267                           
  7268                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  7269  011494  0E00               	movlw	0
  7270  011496  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7271                           
  7272                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  7273  011498  0E00               	movlw	0
  7274  01149A  0100               	movlb	0	; () banked
  7275  01149C  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7276                           
  7277                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  7278  01149E  0E00               	movlw	0
  7279  0114A0  0100               	movlb	0	; () banked
  7280  0114A2  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7281  0114A4                     l8327:
  7282                           
  7283                           ; BSR set to: 0
  7284  0114A4  0E02               	movlw	2
  7285  0114A6  0100               	movlb	0	; () banked
  7286  0114A8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7287  0114AA  D001               	goto	l8331
  7288  0114AC  D033               	goto	l8337
  7289  0114AE                     l8331:
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;usb_device.c: 363: {
  7293                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  7294  0114AE  0100               	movlb	0	; () banked
  7295  0114B0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7296  0114B2  0D02               	mullw	2
  7297  0114B4  0ED8               	movlw	low _pBDTEntryIn
  7298  0114B6  24F3               	addwf	prodl,w,c
  7299  0114B8  6ED9               	movwf	fsr2l,c
  7300  0114BA  0E00               	movlw	high _pBDTEntryIn
  7301  0114BC  20F4               	addwfc	prodh,w,c
  7302  0114BE  6EDA               	movwf	fsr2h,c
  7303  0114C0  0E00               	movlw	0
  7304  0114C2  6EDE               	movwf	postinc2,c
  7305  0114C4  0E00               	movlw	0
  7306  0114C6  6EDD               	movwf	postdec2,c
  7307                           
  7308                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  7309  0114C8  0100               	movlb	0	; () banked
  7310  0114CA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7311  0114CC  0D02               	mullw	2
  7312  0114CE  0EDE               	movlw	low _pBDTEntryOut
  7313  0114D0  24F3               	addwf	prodl,w,c
  7314  0114D2  6ED9               	movwf	fsr2l,c
  7315  0114D4  0E00               	movlw	high _pBDTEntryOut
  7316  0114D6  20F4               	addwfc	prodh,w,c
  7317  0114D8  6EDA               	movwf	fsr2h,c
  7318  0114DA  0E00               	movlw	0
  7319  0114DC  6EDE               	movwf	postinc2,c
  7320  0114DE  0E00               	movlw	0
  7321  0114E0  6EDD               	movwf	postdec2,c
  7322                           
  7323                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  7324  0114E2  0100               	movlb	0	; () banked
  7325  0114E4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7326  0114E6  0D01               	mullw	1
  7327  0114E8  0EE4               	movlw	low _ep_data_in
  7328  0114EA  24F3               	addwf	prodl,w,c
  7329  0114EC  6ED9               	movwf	fsr2l,c
  7330  0114EE  0E00               	movlw	high _ep_data_in
  7331  0114F0  20F4               	addwfc	prodh,w,c
  7332  0114F2  6EDA               	movwf	fsr2h,c
  7333  0114F4  0E00               	movlw	0
  7334  0114F6  6EDF               	movwf	indf2,c
  7335                           
  7336                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  7337  0114F8  0100               	movlb	0	; () banked
  7338  0114FA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7339  0114FC  0D01               	mullw	1
  7340  0114FE  0EE7               	movlw	low _ep_data_out
  7341  011500  24F3               	addwf	prodl,w,c
  7342  011502  6ED9               	movwf	fsr2l,c
  7343  011504  0E00               	movlw	high _ep_data_out
  7344  011506  20F4               	addwfc	prodh,w,c
  7345  011508  6EDA               	movwf	fsr2h,c
  7346  01150A  0E00               	movlw	0
  7347  01150C  6EDF               	movwf	indf2,c
  7348                           
  7349                           ; BSR set to: 0
  7350  01150E  0100               	movlb	0	; () banked
  7351  011510  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7352  011512  D7C8               	goto	l8327
  7353  011514                     l8337:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;usb_device.c: 368: }
  7357                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7358  011514  0E08               	movlw	8
  7359  011516  0100               	movlb	0	; () banked
  7360  011518  6FD8               	movwf	_pBDTEntryIn& (0+255),b
  7361  01151A  0E0D               	movlw	13
  7362  01151C  0100               	movlb	0	; () banked
  7363  01151E  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7367  011520  0E16               	movlw	22
  7368  011522  010F               	movlb	15	; () banked
  7369  011524  6F26               	movwf	38,b	;volatile
  7370                           
  7371                           ; BSR set to: 15
  7372                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7373  011526  0E0D               	movlw	13
  7374  011528  010D               	movlb	13	; () banked
  7375  01152A  6F03               	movwf	3,b	;volatile
  7376  01152C  0E30               	movlw	48
  7377  01152E  6F02               	movwf	2,b	;volatile
  7378                           
  7379                           ; BSR set to: 13
  7380                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7381  011530  0E08               	movlw	8
  7382  011532  010D               	movlb	13	; () banked
  7383  011534  6F01               	movwf	1,b	;volatile
  7384                           
  7385                           ; BSR set to: 13
  7386                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7387  011536  0E04               	movlw	4
  7388  011538  010D               	movlb	13	; () banked
  7389  01153A  6F00               	movwf	0,b	;volatile
  7390                           
  7391                           ; BSR set to: 13
  7392                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7393  01153C  010D               	movlb	13	; () banked
  7394  01153E  8F00               	bsf	0,7,b	;volatile
  7395                           
  7396                           ; BSR set to: 13
  7397                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7398  011540  0E00               	movlw	0
  7399  011542  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
  7400                           
  7401                           ; BSR set to: 13
  7402                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7403  011544  0E00               	movlw	0
  7404  011546  6E12               	movwf	_USBDeviceState,c	;volatile
  7405                           
  7406                           ; BSR set to: 13
  7407  011548  0012               	return		;funcret
  7408  01154A                     __end_of_USBDeviceInit:
  7409                           	opt stack 0
  7410                           tblptru	equ	0xFF8
  7411                           tblptrh	equ	0xFF7
  7412                           tblptrl	equ	0xFF6
  7413                           tablat	equ	0xFF5
  7414                           prodh	equ	0xFF4
  7415                           prodl	equ	0xFF3
  7416                           intcon	equ	0xFF2
  7417                           intcon2	equ	0xFF1
  7418                           indf0	equ	0xFEF
  7419                           postinc0	equ	0xFEE
  7420                           fsr0h	equ	0xFEA
  7421                           fsr0l	equ	0xFE9
  7422                           wreg	equ	0xFE8
  7423                           postinc1	equ	0xFE6
  7424                           postdec1	equ	0xFE5
  7425                           fsr1h	equ	0xFE2
  7426                           fsr1l	equ	0xFE1
  7427                           indf2	equ	0xFDF
  7428                           postinc2	equ	0xFDE
  7429                           postdec2	equ	0xFDD
  7430                           fsr2h	equ	0xFDA
  7431                           fsr2l	equ	0xFD9
  7432                           status	equ	0xFD8
  7433                           
  7434 ;; *************** function _memset *****************
  7435 ;; Defined at:
  7436 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  p1              2    0[BANK0 ] PTR void 
  7439 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7440 ;;  c               2    2[BANK0 ] int 
  7441 ;;  n               2    4[BANK0 ] unsigned int 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7444 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  2    0[BANK0 ] PTR void 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7454 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;Total ram usage:        8 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:   11
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_USBDeviceInit
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text28
  7469  013D6C                     __ptext28:
  7470                           	opt stack 0
  7471  013D6C                     _memset:
  7472                           	opt stack 16
  7473                           
  7474                           ; BSR set to: 13
  7475                           ;incstack = 0
  7476  013D6C  C060  F066         	movff	memset@p1,memset@p
  7477  013D70  C061  F067         	movff	memset@p1+1,memset@p+1
  7478  013D74  D009               	goto	l8175
  7479  013D76                     l8171:
  7480  013D76  C066  FFD9         	movff	memset@p,fsr2l
  7481  013D7A  C067  FFDA         	movff	memset@p+1,fsr2h
  7482  013D7E  C062  FFDF         	movff	memset@c,indf2
  7483  013D82  0100               	movlb	0	; () banked
  7484  013D84  4B66               	infsnz	memset@p& (0+255),f,b
  7485  013D86  2B67               	incf	(memset@p+1)& (0+255),f,b
  7486  013D88                     l8175:
  7487  013D88  0100               	movlb	0	; () banked
  7488  013D8A  0764               	decf	memset@n& (0+255),f,b
  7489  013D8C  A0D8               	btfss	status,0,c
  7490  013D8E  0765               	decf	(memset@n+1)& (0+255),f,b
  7491  013D90  0100               	movlb	0	; () banked
  7492  013D92  2964               	incf	memset@n& (0+255),w,b
  7493  013D94  E1F0               	bnz	l8171
  7494  013D96  0100               	movlb	0	; () banked
  7495  013D98  2965               	incf	(memset@n+1)& (0+255),w,b
  7496  013D9A  B4D8               	btfsc	status,2,c
  7497  013D9C  0012               	return	
  7498  013D9E  D7EB               	goto	l8171
  7499  013DA0                     __end_of_memset:
  7500                           	opt stack 0
  7501                           tblptru	equ	0xFF8
  7502                           tblptrh	equ	0xFF7
  7503                           tblptrl	equ	0xFF6
  7504                           tablat	equ	0xFF5
  7505                           prodh	equ	0xFF4
  7506                           prodl	equ	0xFF3
  7507                           intcon	equ	0xFF2
  7508                           intcon2	equ	0xFF1
  7509                           indf0	equ	0xFEF
  7510                           postinc0	equ	0xFEE
  7511                           fsr0h	equ	0xFEA
  7512                           fsr0l	equ	0xFE9
  7513                           wreg	equ	0xFE8
  7514                           postinc1	equ	0xFE6
  7515                           postdec1	equ	0xFE5
  7516                           fsr1h	equ	0xFE2
  7517                           fsr1l	equ	0xFE1
  7518                           indf2	equ	0xFDF
  7519                           postinc2	equ	0xFDE
  7520                           postdec2	equ	0xFDD
  7521                           fsr2h	equ	0xFDA
  7522                           fsr2l	equ	0xFD9
  7523                           status	equ	0xFD8
  7524                           
  7525 ;; *************** function _USBDeviceAttach *****************
  7526 ;; Defined at:
  7527 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;		None
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;		None               void
  7534 ;; Registers used:
  7535 ;;		wreg, status,2
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7545 ;;Total ram usage:        0 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:   11
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_USB_init
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text29
  7556  013C8E                     __ptext29:
  7557                           	opt stack 0
  7558  013C8E                     _USBDeviceAttach:
  7559                           	opt stack 17
  7560                           
  7561                           ;usb_device.c: 1356: {
  7562                           ;usb_device.c: 1357: if(1 == 1)
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;incstack = 0
  7566  013C8E  5012               	movf	_USBDeviceState,w,c	;volatile
  7567  013C90  A4D8               	btfss	status,2,c
  7568  013C92  0012               	return	
  7569                           
  7570                           ;usb_device.c: 1358: {
  7571                           ;usb_device.c: 1360: UCON = 0;
  7572  013C94  0E00               	movlw	0
  7573  013C96  6E65               	movwf	3941,c	;volatile
  7574                           
  7575                           ;usb_device.c: 1363: UIE = 0;
  7576  013C98  0E00               	movlw	0
  7577  013C9A  010F               	movlb	15	; () banked
  7578  013C9C  6F36               	movwf	54,b	;volatile
  7579                           
  7580                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7581  013C9E  0E16               	movlw	22
  7582  013CA0  010F               	movlb	15	; () banked
  7583  013CA2  6F39               	movwf	57,b	;volatile
  7584  013CA4  0E9F               	movlw	159
  7585  013CA6  010F               	movlb	15	; () banked
  7586  013CA8  6F37               	movwf	55,b	;volatile
  7587  013CAA  0E7B               	movlw	123
  7588  013CAC  010F               	movlb	15	; () banked
  7589  013CAE  6F36               	movwf	54,b	;volatile
  7590                           
  7591                           ; BSR set to: 15
  7592                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7593  013CB0  8ED0               	bsf	4048,7,c	;volatile
  7594                           
  7595                           ; BSR set to: 15
  7596  013CB2  88A2               	bsf	4002,4,c	;volatile
  7597                           
  7598                           ; BSR set to: 15
  7599  013CB4  88A0               	bsf	4000,4,c	;volatile
  7600                           
  7601                           ; BSR set to: 15
  7602  013CB6  8EF2               	bsf	intcon,7,c	;volatile
  7603                           
  7604                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7605  013CB8  D001               	goto	l207
  7606  013CBA                     l208:
  7607  013CBA  8665               	bsf	3941,3,c	;volatile
  7608  013CBC                     l207:
  7609  013CBC  A665               	btfss	3941,3,c	;volatile
  7610  013CBE  D7FD               	goto	l208
  7611                           
  7612                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  7613  013CC0  0E01               	movlw	1
  7614  013CC2  6E12               	movwf	_USBDeviceState,c	;volatile
  7615  013CC4  0012               	return	
  7616  013CC6                     __end_of_USBDeviceAttach:
  7617                           	opt stack 0
  7618                           tblptru	equ	0xFF8
  7619                           tblptrh	equ	0xFF7
  7620                           tblptrl	equ	0xFF6
  7621                           tablat	equ	0xFF5
  7622                           prodh	equ	0xFF4
  7623                           prodl	equ	0xFF3
  7624                           intcon	equ	0xFF2
  7625                           intcon2	equ	0xFF1
  7626                           indf0	equ	0xFEF
  7627                           postinc0	equ	0xFEE
  7628                           fsr0h	equ	0xFEA
  7629                           fsr0l	equ	0xFE9
  7630                           wreg	equ	0xFE8
  7631                           postinc1	equ	0xFE6
  7632                           postdec1	equ	0xFE5
  7633                           fsr1h	equ	0xFE2
  7634                           fsr1l	equ	0xFE1
  7635                           indf2	equ	0xFDF
  7636                           postinc2	equ	0xFDE
  7637                           postdec2	equ	0xFDD
  7638                           fsr2h	equ	0xFDA
  7639                           fsr2l	equ	0xFD9
  7640                           status	equ	0xFD8
  7641                           
  7642 ;; *************** function _UART_init *****************
  7643 ;; Defined at:
  7644 ;;		line 10 in file "../My_library/My_UART.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;		None               void
  7651 ;; Registers used:
  7652 ;;		wreg, status,2
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7662 ;;Total ram usage:        0 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:   11
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_main_init
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text30
  7673  013FCE                     __ptext30:
  7674                           	opt stack 0
  7675  013FCE                     _UART_init:
  7676                           	opt stack 18
  7677                           
  7678                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  7679                           
  7680                           ;incstack = 0
  7681  013FCE  9CAD               	bcf	4013,6,c	;volatile
  7682                           
  7683                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  7684  013FD0  8AAD               	bsf	4013,5,c	;volatile
  7685                           
  7686                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  7687  013FD2  98AD               	bcf	4013,4,c	;volatile
  7688                           
  7689                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  7690  013FD4  94AD               	bcf	4013,2,c	;volatile
  7691                           
  7692                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  7693  013FD6  8EAC               	bsf	4012,7,c	;volatile
  7694                           
  7695                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  7696  013FD8  9CAC               	bcf	4012,6,c	;volatile
  7697                           
  7698                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  7699  013FDA  88AC               	bsf	4012,4,c	;volatile
  7700                           
  7701                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  7702  013FDC  867E               	bsf	3966,3,c	;volatile
  7703                           
  7704                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  7705  013FDE  0E19               	movlw	25
  7706  013FE0  6EB0               	movwf	4016,c	;volatile
  7707                           
  7708                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  7709  013FE2  0E00               	movlw	0
  7710  013FE4  6E7F               	movwf	3967,c	;volatile
  7711                           
  7712                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  7713  013FE6  9A9F               	bcf	3999,5,c	;volatile
  7714                           
  7715                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  7716  013FE8  989F               	bcf	3999,4,c	;volatile
  7717                           
  7718                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  7719  013FEA  8A9D               	bsf	3997,5,c	;volatile
  7720                           
  7721                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  7722  013FEC  8CF2               	bsf	intcon,6,c	;volatile
  7723  013FEE  0012               	return		;funcret
  7724  013FF0                     __end_of_UART_init:
  7725                           	opt stack 0
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           intcon2	equ	0xFF1
  7734                           indf0	equ	0xFEF
  7735                           postinc0	equ	0xFEE
  7736                           fsr0h	equ	0xFEA
  7737                           fsr0l	equ	0xFE9
  7738                           wreg	equ	0xFE8
  7739                           postinc1	equ	0xFE6
  7740                           postdec1	equ	0xFE5
  7741                           fsr1h	equ	0xFE2
  7742                           fsr1l	equ	0xFE1
  7743                           indf2	equ	0xFDF
  7744                           postinc2	equ	0xFDE
  7745                           postdec2	equ	0xFDD
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function _RTCC_init *****************
  7751 ;; Defined at:
  7752 ;;		line 22 in file "../My_library/My_RTCC.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;		None
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7770 ;;Total ram usage:        0 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:   15
  7773 ;; This function calls:
  7774 ;;		_RTCC_from_RTCC
  7775 ;;		_RTCC_from_epoch
  7776 ;; This function is called by:
  7777 ;;		_main_init
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text31
  7782  013810                     __ptext31:
  7783                           	opt stack 0
  7784  013810                     _RTCC_init:
  7785                           	opt stack 14
  7786                           
  7787                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7788                           
  7789                           ;incstack = 0
  7790  013810  010F               	movlb	15	; () banked
  7791  013812  8B3F               	bsf	63,5,b	;volatile
  7792                           
  7793                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7794  013814  010F               	movlb	15	; () banked
  7795  013816  BB3F               	btfsc	63,5,b	;volatile
  7796  013818  D006               	goto	l8687
  7797                           
  7798                           ; BSR set to: 15
  7799                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7800  01381A  0E55               	movlw	85
  7801  01381C  6EA7               	movwf	4007,c	;volatile
  7802                           
  7803                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7804  01381E  0EAA               	movlw	170
  7805  013820  6EA7               	movwf	4007,c	;volatile
  7806                           
  7807                           ; BSR set to: 15
  7808                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7809  013822  010F               	movlb	15	; () banked
  7810  013824  8B3F               	bsf	63,5,b	;volatile
  7811  013826                     l8687:
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;My_RTCC.c: 28: }
  7815                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7816  013826  010F               	movlb	15	; () banked
  7817  013828  8F3F               	bsf	63,7,b	;volatile
  7818                           
  7819                           ; BSR set to: 15
  7820                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7821  01382A  010F               	movlb	15	; () banked
  7822  01382C  953F               	bcf	63,2,b	;volatile
  7823                           
  7824                           ; BSR set to: 15
  7825                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7826  01382E  010F               	movlb	15	; () banked
  7827  013830  833C               	bsf	60,1,b	;volatile
  7828                           
  7829                           ; BSR set to: 15
  7830                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7831  013832  010F               	movlb	15	; () banked
  7832  013834  853C               	bsf	60,2,b	;volatile
  7833                           
  7834                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7835  013836  0E00               	movlw	0
  7836  013838  010F               	movlb	15	; () banked
  7837  01383A  6F3E               	movwf	62,b	;volatile
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7841  01383C  86CD               	bsf	4045,3,c	;volatile
  7842                           
  7843                           ; BSR set to: 15
  7844                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  7845  01383E  0E1B               	movlw	low _now
  7846  013840  0100               	movlb	0	; () banked
  7847  013842  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7848  013844  0E00               	movlw	high _now
  7849  013846  0100               	movlb	0	; () banked
  7850  013848  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7851  01384A  EC5E  F0A0         	call	_RTCC_from_RTCC	;wreg free
  7852                           
  7853                           ;My_RTCC.c: 38: if (now.DD == 0) {
  7854  01384E  5023               	movf	_now+8,w,c
  7855  013850  A4D8               	btfss	status,2,c
  7856  013852  0012               	return	
  7857                           
  7858                           ;My_RTCC.c: 39: now.epoch = 0;
  7859  013854  0E00               	movlw	0
  7860  013856  6E1B               	movwf	_now,c
  7861  013858  0E00               	movlw	0
  7862  01385A  6E1C               	movwf	_now+1,c
  7863  01385C  0E00               	movlw	0
  7864  01385E  6E1D               	movwf	_now+2,c
  7865  013860  0E00               	movlw	0
  7866  013862  6E1E               	movwf	_now+3,c
  7867                           
  7868                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  7869  013864  0E1B               	movlw	low _now
  7870  013866  0100               	movlb	0	; () banked
  7871  013868  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7872  01386A  0E00               	movlw	high _now
  7873  01386C  0100               	movlb	0	; () banked
  7874  01386E  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7875  013870  EC44  F0A0         	call	_RTCC_from_epoch	;wreg free
  7876  013874  0012               	return	
  7877  013876                     __end_of_RTCC_init:
  7878                           	opt stack 0
  7879                           tblptru	equ	0xFF8
  7880                           tblptrh	equ	0xFF7
  7881                           tblptrl	equ	0xFF6
  7882                           tablat	equ	0xFF5
  7883                           prodh	equ	0xFF4
  7884                           prodl	equ	0xFF3
  7885                           intcon	equ	0xFF2
  7886                           intcon2	equ	0xFF1
  7887                           indf0	equ	0xFEF
  7888                           postinc0	equ	0xFEE
  7889                           fsr0h	equ	0xFEA
  7890                           fsr0l	equ	0xFE9
  7891                           wreg	equ	0xFE8
  7892                           postinc1	equ	0xFE6
  7893                           postdec1	equ	0xFE5
  7894                           fsr1h	equ	0xFE2
  7895                           fsr1l	equ	0xFE1
  7896                           indf2	equ	0xFDF
  7897                           postinc2	equ	0xFDE
  7898                           postdec2	equ	0xFDD
  7899                           fsr2h	equ	0xFDA
  7900                           fsr2l	equ	0xFD9
  7901                           status	equ	0xFD8
  7902                           
  7903 ;; *************** function _RTCC_from_epoch *****************
  7904 ;; Defined at:
  7905 ;;		line 211 in file "../My_library/My_RTCC.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  tm              2   47[BANK0 ] PTR struct .
  7908 ;;		 -> now(14), 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;		None               void
  7913 ;; Registers used:
  7914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7924 ;;Total ram usage:        2 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:   14
  7927 ;; This function calls:
  7928 ;;		_caltime_to_RTCC
  7929 ;;		_epoch_to_caltime
  7930 ;; This function is called by:
  7931 ;;		_RTCC_init
  7932 ;;		_RTCC_adjust_time_inc
  7933 ;;		_RTCC_adjust_time_dec
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text32
  7938  014088                     __ptext32:
  7939                           	opt stack 0
  7940  014088                     _RTCC_from_epoch:
  7941                           	opt stack 14
  7942                           
  7943                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  7944                           
  7945                           ;incstack = 0
  7946  014088  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7947  01408C  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7948  014090  EC40  F088         	call	_epoch_to_caltime	;wreg free
  7949                           
  7950                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  7951  014094  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7952  014098  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7953  01409C  EC9E  F091         	call	_caltime_to_RTCC	;wreg free
  7954  0140A0  0012               	return		;funcret
  7955  0140A2                     __end_of_RTCC_from_epoch:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           intcon	equ	0xFF2
  7964                           intcon2	equ	0xFF1
  7965                           indf0	equ	0xFEF
  7966                           postinc0	equ	0xFEE
  7967                           fsr0h	equ	0xFEA
  7968                           fsr0l	equ	0xFE9
  7969                           wreg	equ	0xFE8
  7970                           postinc1	equ	0xFE6
  7971                           postdec1	equ	0xFE5
  7972                           fsr1h	equ	0xFE2
  7973                           fsr1l	equ	0xFE1
  7974                           indf2	equ	0xFDF
  7975                           postinc2	equ	0xFDE
  7976                           postdec2	equ	0xFDD
  7977                           fsr2h	equ	0xFDA
  7978                           fsr2l	equ	0xFD9
  7979                           status	equ	0xFD8
  7980                           
  7981 ;; *************** function _epoch_to_caltime *****************
  7982 ;; Defined at:
  7983 ;;		line 126 in file "../My_library/My_RTCC.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  tm              2   33[BANK0 ] PTR struct .
  7986 ;;		 -> now(14), 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  num             4   43[BANK0 ] unsigned long 
  7989 ;;  day             2   39[BANK0 ] unsigned int 
  7990 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7991 ;;  month           1   42[BANK0 ] unsigned char 
  7992 ;;  year            1   41[BANK0 ] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;		None               void
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;Total ram usage:       14 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:   13
  8009 ;; This function calls:
  8010 ;;		_get_quot_rem
  8011 ;;		_month_length
  8012 ;; This function is called by:
  8013 ;;		_RTCC_from_caltime
  8014 ;;		_RTCC_from_epoch
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text33
  8019  011080                     __ptext33:
  8020                           	opt stack 0
  8021  011080                     _epoch_to_caltime:
  8022                           	opt stack 12
  8023                           
  8024                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  8025                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  8026                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  8027                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  8028                           ;My_RTCC.c: 133: uint16_t day;
  8029                           ;My_RTCC.c: 134: uint8_t year = 0;
  8030                           
  8031                           ;incstack = 0
  8032  011080  0E00               	movlw	0
  8033  011082  0100               	movlb	0	; () banked
  8034  011084  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8035                           
  8036                           ;My_RTCC.c: 135: uint8_t month = 1;
  8037  011086  0E01               	movlw	1
  8038  011088  0100               	movlb	0	; () banked
  8039  01108A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;My_RTCC.c: 136: epoch_t num;
  8043                           ;My_RTCC.c: 138: num = tm->epoch;
  8044  01108C  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8045  011090  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8046  011094  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  8047  011098  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  8048  01109C  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  8049  0110A0  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  8053  0110A4  0E8B               	movlw	low epoch_to_caltime@num
  8054  0110A6  0100               	movlb	0	; () banked
  8055  0110A8  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8056  0110AA  0E00               	movlw	high epoch_to_caltime@num
  8057  0110AC  0100               	movlb	0	; () banked
  8058  0110AE  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8059  0110B0  0E3C               	movlw	60
  8060  0110B2  0100               	movlb	0	; () banked
  8061  0110B4  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8062  0110B6  EC74  F092         	call	_get_quot_rem	;wreg free
  8063  0110BA  0100               	movlb	0	; () banked
  8064  0110BC  EE20 F004          	lfsr	2,4
  8065  0110C0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8066  0110C2  26D9               	addwf	fsr2l,f,c
  8067  0110C4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8068  0110C6  22DA               	addwfc	fsr2h,f,c
  8069  0110C8  0100               	movlb	0	; () banked
  8070  0110CA  C079  FFDF         	movff	?_get_quot_rem,indf2
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  8074  0110CE  0E8B               	movlw	low epoch_to_caltime@num
  8075  0110D0  0100               	movlb	0	; () banked
  8076  0110D2  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8077  0110D4  0E00               	movlw	high epoch_to_caltime@num
  8078  0110D6  0100               	movlb	0	; () banked
  8079  0110D8  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8080  0110DA  0E3C               	movlw	60
  8081  0110DC  0100               	movlb	0	; () banked
  8082  0110DE  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8083  0110E0  EC74  F092         	call	_get_quot_rem	;wreg free
  8084  0110E4  0100               	movlb	0	; () banked
  8085  0110E6  EE20 F005          	lfsr	2,5
  8086  0110EA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8087  0110EC  26D9               	addwf	fsr2l,f,c
  8088  0110EE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8089  0110F0  22DA               	addwfc	fsr2h,f,c
  8090  0110F2  0100               	movlb	0	; () banked
  8091  0110F4  C079  FFDF         	movff	?_get_quot_rem,indf2
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  8095  0110F8  0E8B               	movlw	low epoch_to_caltime@num
  8096  0110FA  0100               	movlb	0	; () banked
  8097  0110FC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8098  0110FE  0E00               	movlw	high epoch_to_caltime@num
  8099  011100  0100               	movlb	0	; () banked
  8100  011102  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8101  011104  0E18               	movlw	24
  8102  011106  0100               	movlb	0	; () banked
  8103  011108  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8104  01110A  EC74  F092         	call	_get_quot_rem	;wreg free
  8105  01110E  0100               	movlb	0	; () banked
  8106  011110  EE20 F006          	lfsr	2,6
  8107  011114  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8108  011116  26D9               	addwf	fsr2l,f,c
  8109  011118  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8110  01111A  22DA               	addwfc	fsr2h,f,c
  8111  01111C  0100               	movlb	0	; () banked
  8112  01111E  C079  FFDF         	movff	?_get_quot_rem,indf2
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;My_RTCC.c: 142: day = num;
  8116  011122  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8117  011126  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;My_RTCC.c: 143: day_since_epoch = day;
  8121  01112A  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8122  01112E  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;My_RTCC.c: 145: num += 6;
  8126  011132  0E06               	movlw	6
  8127  011134  0100               	movlb	0	; () banked
  8128  011136  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  8129  011138  0E00               	movlw	0
  8130  01113A  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8131  01113C  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8132  01113E  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  8136  011140  0E8B               	movlw	low epoch_to_caltime@num
  8137  011142  0100               	movlb	0	; () banked
  8138  011144  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8139  011146  0E00               	movlw	high epoch_to_caltime@num
  8140  011148  0100               	movlb	0	; () banked
  8141  01114A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8142  01114C  0E07               	movlw	7
  8143  01114E  0100               	movlb	0	; () banked
  8144  011150  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8145  011152  EC74  F092         	call	_get_quot_rem	;wreg free
  8146  011156  0100               	movlb	0	; () banked
  8147  011158  EE20 F007          	lfsr	2,7
  8148  01115C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8149  01115E  26D9               	addwf	fsr2l,f,c
  8150  011160  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8151  011162  22DA               	addwfc	fsr2h,f,c
  8152  011164  0100               	movlb	0	; () banked
  8153  011166  C079  FFDF         	movff	?_get_quot_rem,indf2
  8154                           
  8155                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  8156  01116A  D03F               	goto	l7991
  8157  01116C                     l826:
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;My_RTCC.c: 156: LATB2 = 1;
  8161  01116C  848A               	bsf	3978,2,c	;volatile
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  8165  01116E  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8166  011172  0100               	movlb	0	; () banked
  8167  011174  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8168  011176  EC57  F090         	call	_month_length
  8169  01117A  0100               	movlb	0	; () banked
  8170  01117C  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8171  01117E  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8172  011180  0100               	movlb	0	; () banked
  8173  011182  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8174  011184  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8175  011186  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8176  011188  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8177  01118A  0100               	movlb	0	; () banked
  8178  01118C  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  8179  01118E  0100               	movlb	0	; () banked
  8180  011190  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8181  011192  0100               	movlb	0	; () banked
  8182  011194  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  8183  011196  0100               	movlb	0	; () banked
  8184  011198  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8185  01119A  0100               	movlb	0	; () banked
  8186  01119C  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8187  01119E  0100               	movlb	0	; () banked
  8188  0111A0  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;My_RTCC.c: 158: if (month == 12) {
  8192  0111A2  0E0C               	movlw	12
  8193  0111A4  0100               	movlb	0	; () banked
  8194  0111A6  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8195  0111A8  A4D8               	btfss	status,2,c
  8196  0111AA  D019               	goto	l7985
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;My_RTCC.c: 159: month = 1;
  8200  0111AC  0E01               	movlw	1
  8201  0111AE  0100               	movlb	0	; () banked
  8202  0111B0  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;My_RTCC.c: 160: year++;
  8206  0111B2  0100               	movlb	0	; () banked
  8207  0111B4  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;My_RTCC.c: 162: if (year >= 100) {
  8211  0111B6  0E63               	movlw	99
  8212  0111B8  0100               	movlb	0	; () banked
  8213  0111BA  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8214  0111BC  D012               	goto	l7987
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  8218  0111BE  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8219  0111C2  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8220  0111C6  0E80               	movlw	128
  8221  0111C8  5EDE               	subwf	postinc2,f,c
  8222  0111CA  0E13               	movlw	19
  8223  0111CC  5ADE               	subwfb	postinc2,f,c
  8224  0111CE  0E19               	movlw	25
  8225  0111D0  5ADE               	subwfb	postinc2,f,c
  8226  0111D2  0EBC               	movlw	188
  8227  0111D4  5ADE               	subwfb	postinc2,f,c
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;My_RTCC.c: 164: year = 0;
  8231  0111D6  0E00               	movlw	0
  8232  0111D8  0100               	movlb	0	; () banked
  8233  0111DA  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;My_RTCC.c: 165: }
  8237                           ;My_RTCC.c: 166: } else {
  8238  0111DC  D002               	goto	l7987
  8239  0111DE                     l7985:
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;My_RTCC.c: 167: month++;
  8243  0111DE  0100               	movlb	0	; () banked
  8244  0111E0  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  8245  0111E2                     l7987:
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;My_RTCC.c: 168: }
  8249                           ;My_RTCC.c: 169: month_cache = month;
  8250  0111E2  C08A  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;My_RTCC.c: 170: year_cache = year;
  8254  0111E6  C089  F0FA         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8255  0111EA                     l7991:
  8256                           
  8257                           ; BSR set to: 0
  8258  0111EA  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8259  0111EE  0100               	movlb	0	; () banked
  8260  0111F0  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8261  0111F2  EC57  F090         	call	_month_length
  8262  0111F6  0100               	movlb	0	; () banked
  8263  0111F8  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8264  0111FA  0100               	movlb	0	; () banked
  8265  0111FC  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  8266  0111FE  0100               	movlb	0	; () banked
  8267  011200  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  8268  011202  0E00               	movlw	0
  8269  011204  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8270  011206  B0D8               	btfsc	status,0,c
  8271  011208  D7B1               	goto	l826
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;My_RTCC.c: 171: }
  8275                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  8276                           
  8277                           ; BSR set to: 0
  8278  01120A  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8279  01120E  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8280  011212  0100               	movlb	0	; () banked
  8281  011214  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8282  011216  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8283  011218  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8284  01121A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8285  01121C  0100               	movlb	0	; () banked
  8286  01121E  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8287  011220  0100               	movlb	0	; () banked
  8288  011222  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8289  011224  6E09               	movwf	epoch_to_caltime@day_cache,c
  8290  011226  0100               	movlb	0	; () banked
  8291  011228  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8292  01122A  0100               	movlb	0	; () banked
  8293  01122C  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8294  01122E  6E0A               	movwf	epoch_to_caltime@day_cache+1,c
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;My_RTCC.c: 173: day++;
  8298  011230  0100               	movlb	0	; () banked
  8299  011232  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8300  011234  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;My_RTCC.c: 175: tm->YY = year;
  8304  011236  0100               	movlb	0	; () banked
  8305  011238  EE20 F00A          	lfsr	2,10
  8306  01123C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8307  01123E  26D9               	addwf	fsr2l,f,c
  8308  011240  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8309  011242  22DA               	addwfc	fsr2h,f,c
  8310  011244  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;My_RTCC.c: 176: tm->MM = month;
  8314  011248  0100               	movlb	0	; () banked
  8315  01124A  EE20 F009          	lfsr	2,9
  8316  01124E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8317  011250  26D9               	addwf	fsr2l,f,c
  8318  011252  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8319  011254  22DA               	addwfc	fsr2h,f,c
  8320  011256  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;My_RTCC.c: 177: tm->DD = day;
  8324  01125A  0100               	movlb	0	; () banked
  8325  01125C  EE20 F008          	lfsr	2,8
  8326  011260  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8327  011262  26D9               	addwf	fsr2l,f,c
  8328  011264  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8329  011266  22DA               	addwfc	fsr2h,f,c
  8330  011268  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8331                           
  8332                           ; BSR set to: 0
  8333  01126C  0012               	return		;funcret
  8334  01126E                     __end_of_epoch_to_caltime:
  8335                           	opt stack 0
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           intcon2	equ	0xFF1
  8344                           indf0	equ	0xFEF
  8345                           postinc0	equ	0xFEE
  8346                           fsr0h	equ	0xFEA
  8347                           fsr0l	equ	0xFE9
  8348                           wreg	equ	0xFE8
  8349                           postinc1	equ	0xFE6
  8350                           postdec1	equ	0xFE5
  8351                           fsr1h	equ	0xFE2
  8352                           fsr1l	equ	0xFE1
  8353                           indf2	equ	0xFDF
  8354                           postinc2	equ	0xFDE
  8355                           postdec2	equ	0xFDD
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8
  8359                           
  8360 ;; *************** function _get_quot_rem *****************
  8361 ;; Defined at:
  8362 ;;		line 81 in file "../My_library/My_RTCC.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8365 ;;		 -> epoch_to_caltime@num(4), 
  8366 ;;  div             1   27[BANK0 ] unsigned char 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  num             4   29[BANK0 ] unsigned long 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  4   25[BANK0 ] unsigned long 
  8371 ;; Registers used:
  8372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;Total ram usage:        8 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:   12
  8385 ;; This function calls:
  8386 ;;		___lldiv
  8387 ;;		___lmul
  8388 ;; This function is called by:
  8389 ;;		_epoch_to_caltime
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text34
  8394  0124E8                     __ptext34:
  8395                           	opt stack 0
  8396  0124E8                     _get_quot_rem:
  8397                           	opt stack 12
  8398                           
  8399                           ;My_RTCC.c: 84: epoch_t num = *quot;
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;incstack = 0
  8403  0124E8  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8404  0124EC  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8405  0124F0  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8406  0124F4  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8407  0124F8  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8408  0124FC  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8409                           
  8410                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  8411  012500  0100               	movlb	0	; () banked
  8412  012502  517B               	movf	get_quot_rem@div& (0+255),w,b
  8413  012504  0100               	movlb	0	; () banked
  8414  012506  6F64               	movwf	___lldiv@divisor& (0+255),b
  8415  012508  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8416  01250A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8417  01250C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8418  01250E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8419  012512  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8420  012516  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8421  01251A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8422  01251E  ECA1  F095         	call	___lldiv	;wreg free
  8423  012522  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8424  012526  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8425  01252A  0100               	movlb	0	; () banked
  8426  01252C  C060  FFDE         	movff	?___lldiv,postinc2
  8427  012530  0100               	movlb	0	; () banked
  8428  012532  C061  FFDE         	movff	?___lldiv+1,postinc2
  8429  012536  0100               	movlb	0	; () banked
  8430  012538  C062  FFDE         	movff	?___lldiv+2,postinc2
  8431  01253C  0100               	movlb	0	; () banked
  8432  01253E  C063  FFDD         	movff	?___lldiv+3,postdec2
  8433  012542  52DD               	movf	postdec2,f,c
  8434  012544  52DD               	movf	postdec2,f,c
  8435  012546  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8436  01254A  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8437  01254E  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8438  012552  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8439  012556  0100               	movlb	0	; () banked
  8440  012558  517B               	movf	get_quot_rem@div& (0+255),w,b
  8441  01255A  0100               	movlb	0	; () banked
  8442  01255C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8443  01255E  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8444  012560  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8445  012562  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8446  012564  EC29  F09B         	call	___lmul	;wreg free
  8447  012568  0100               	movlb	0	; () banked
  8448  01256A  1F6D               	comf	?___lmul& (0+255),f,b
  8449  01256C  0100               	movlb	0	; () banked
  8450  01256E  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8451  012570  0100               	movlb	0	; () banked
  8452  012572  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8453  012574  0100               	movlb	0	; () banked
  8454  012576  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8455  012578  0100               	movlb	0	; () banked
  8456  01257A  2B6D               	incf	?___lmul& (0+255),f,b
  8457  01257C  0E00               	movlw	0
  8458  01257E  0100               	movlb	0	; () banked
  8459  012580  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8460  012582  0100               	movlb	0	; () banked
  8461  012584  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8462  012586  0100               	movlb	0	; () banked
  8463  012588  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8464  01258A  0100               	movlb	0	; () banked
  8465  01258C  517D               	movf	get_quot_rem@num& (0+255),w,b
  8466  01258E  0100               	movlb	0	; () banked
  8467  012590  256D               	addwf	?___lmul& (0+255),w,b
  8468  012592  0100               	movlb	0	; () banked
  8469  012594  6F79               	movwf	?_get_quot_rem& (0+255),b
  8470  012596  0100               	movlb	0	; () banked
  8471  012598  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8472  01259A  0100               	movlb	0	; () banked
  8473  01259C  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8474  01259E  0100               	movlb	0	; () banked
  8475  0125A0  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8476  0125A2  0100               	movlb	0	; () banked
  8477  0125A4  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8478  0125A6  0100               	movlb	0	; () banked
  8479  0125A8  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8480  0125AA  0100               	movlb	0	; () banked
  8481  0125AC  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8482  0125AE  0100               	movlb	0	; () banked
  8483  0125B0  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8484  0125B2  0100               	movlb	0	; () banked
  8485  0125B4  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8486  0125B6  0100               	movlb	0	; () banked
  8487  0125B8  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8488  0125BA  0012               	return	
  8489  0125BC                     __end_of_get_quot_rem:
  8490                           	opt stack 0
  8491                           tblptru	equ	0xFF8
  8492                           tblptrh	equ	0xFF7
  8493                           tblptrl	equ	0xFF6
  8494                           tablat	equ	0xFF5
  8495                           prodh	equ	0xFF4
  8496                           prodl	equ	0xFF3
  8497                           intcon	equ	0xFF2
  8498                           intcon2	equ	0xFF1
  8499                           indf0	equ	0xFEF
  8500                           postinc0	equ	0xFEE
  8501                           fsr0h	equ	0xFEA
  8502                           fsr0l	equ	0xFE9
  8503                           wreg	equ	0xFE8
  8504                           postinc1	equ	0xFE6
  8505                           postdec1	equ	0xFE5
  8506                           fsr1h	equ	0xFE2
  8507                           fsr1l	equ	0xFE1
  8508                           indf2	equ	0xFDF
  8509                           postinc2	equ	0xFDE
  8510                           postdec2	equ	0xFDD
  8511                           fsr2h	equ	0xFDA
  8512                           fsr2l	equ	0xFD9
  8513                           status	equ	0xFD8
  8514                           
  8515 ;; *************** function ___lldiv *****************
  8516 ;; Defined at:
  8517 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  dividend        4    0[BANK0 ] unsigned long 
  8520 ;;  divisor         4    4[BANK0 ] unsigned long 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  quotient        4    8[BANK0 ] unsigned long 
  8523 ;;  counter         1   12[BANK0 ] unsigned char 
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  4    0[BANK0 ] unsigned long 
  8526 ;; Registers used:
  8527 ;;		wreg, status,2, status,0
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8533 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8534 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8536 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8537 ;;Total ram usage:       13 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:   11
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_get_quot_rem
  8544 ;;		_CTMU_read
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text35
  8549  012B42                     __ptext35:
  8550                           	opt stack 0
  8551  012B42                     ___lldiv:
  8552                           	opt stack 12
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;incstack = 0
  8556  012B42  0E00               	movlw	0
  8557  012B44  0100               	movlb	0	; () banked
  8558  012B46  6F68               	movwf	___lldiv@quotient& (0+255),b
  8559  012B48  0E00               	movlw	0
  8560  012B4A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8561  012B4C  0E00               	movlw	0
  8562  012B4E  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8563  012B50  0E00               	movlw	0
  8564  012B52  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8565                           
  8566                           ; BSR set to: 0
  8567  012B54  0100               	movlb	0	; () banked
  8568  012B56  5164               	movf	___lldiv@divisor& (0+255),w,b
  8569  012B58  0100               	movlb	0	; () banked
  8570  012B5A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8571  012B5C  0100               	movlb	0	; () banked
  8572  012B5E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8573  012B60  0100               	movlb	0	; () banked
  8574  012B62  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8575  012B64  B4D8               	btfsc	status,2,c
  8576  012B66  D042               	goto	l1786
  8577                           
  8578                           ; BSR set to: 0
  8579  012B68  0E01               	movlw	1
  8580  012B6A  0100               	movlb	0	; () banked
  8581  012B6C  6F6C               	movwf	___lldiv@counter& (0+255),b
  8582  012B6E  D008               	goto	l7753
  8583  012B70                     l7751:
  8584                           
  8585                           ; BSR set to: 0
  8586  012B70  0100               	movlb	0	; () banked
  8587  012B72  90D8               	bcf	status,0,c
  8588  012B74  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8589  012B76  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8590  012B78  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8591  012B7A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8592  012B7C  0100               	movlb	0	; () banked
  8593  012B7E  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8594  012B80                     l7753:
  8595                           
  8596                           ; BSR set to: 0
  8597  012B80  0100               	movlb	0	; () banked
  8598  012B82  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8599  012B84  D7F5               	goto	l7751
  8600  012B86                     l7755:
  8601                           
  8602                           ; BSR set to: 0
  8603  012B86  0100               	movlb	0	; () banked
  8604  012B88  90D8               	bcf	status,0,c
  8605  012B8A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8606  012B8C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8607  012B8E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8608  012B90  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611  012B92  0100               	movlb	0	; () banked
  8612  012B94  5164               	movf	___lldiv@divisor& (0+255),w,b
  8613  012B96  0100               	movlb	0	; () banked
  8614  012B98  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8615  012B9A  0100               	movlb	0	; () banked
  8616  012B9C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8617  012B9E  0100               	movlb	0	; () banked
  8618  012BA0  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8619  012BA2  0100               	movlb	0	; () banked
  8620  012BA4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8621  012BA6  0100               	movlb	0	; () banked
  8622  012BA8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8623  012BAA  0100               	movlb	0	; () banked
  8624  012BAC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8625  012BAE  0100               	movlb	0	; () banked
  8626  012BB0  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8627  012BB2  A0D8               	btfss	status,0,c
  8628  012BB4  D012               	goto	l7763
  8629                           
  8630                           ; BSR set to: 0
  8631  012BB6  0100               	movlb	0	; () banked
  8632  012BB8  5164               	movf	___lldiv@divisor& (0+255),w,b
  8633  012BBA  0100               	movlb	0	; () banked
  8634  012BBC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8635  012BBE  0100               	movlb	0	; () banked
  8636  012BC0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8637  012BC2  0100               	movlb	0	; () banked
  8638  012BC4  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8639  012BC6  0100               	movlb	0	; () banked
  8640  012BC8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8641  012BCA  0100               	movlb	0	; () banked
  8642  012BCC  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8643  012BCE  0100               	movlb	0	; () banked
  8644  012BD0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8645  012BD2  0100               	movlb	0	; () banked
  8646  012BD4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8647                           
  8648                           ; BSR set to: 0
  8649  012BD6  0100               	movlb	0	; () banked
  8650  012BD8  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8651  012BDA                     l7763:
  8652                           
  8653                           ; BSR set to: 0
  8654  012BDA  0100               	movlb	0	; () banked
  8655  012BDC  90D8               	bcf	status,0,c
  8656  012BDE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8657  012BE0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8658  012BE2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8659  012BE4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8660                           
  8661                           ; BSR set to: 0
  8662  012BE6  0100               	movlb	0	; () banked
  8663  012BE8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8664  012BEA  D7CD               	goto	l7755
  8665  012BEC                     l1786:
  8666                           
  8667                           ; BSR set to: 0
  8668  012BEC  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8669  012BF0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8670  012BF4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8671  012BF8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8672                           
  8673                           ; BSR set to: 0
  8674  012BFC  0012               	return		;funcret
  8675  012BFE                     __end_of___lldiv:
  8676                           	opt stack 0
  8677                           tblptru	equ	0xFF8
  8678                           tblptrh	equ	0xFF7
  8679                           tblptrl	equ	0xFF6
  8680                           tablat	equ	0xFF5
  8681                           prodh	equ	0xFF4
  8682                           prodl	equ	0xFF3
  8683                           intcon	equ	0xFF2
  8684                           intcon2	equ	0xFF1
  8685                           indf0	equ	0xFEF
  8686                           postinc0	equ	0xFEE
  8687                           fsr0h	equ	0xFEA
  8688                           fsr0l	equ	0xFE9
  8689                           wreg	equ	0xFE8
  8690                           postinc1	equ	0xFE6
  8691                           postdec1	equ	0xFE5
  8692                           fsr1h	equ	0xFE2
  8693                           fsr1l	equ	0xFE1
  8694                           indf2	equ	0xFDF
  8695                           postinc2	equ	0xFDE
  8696                           postdec2	equ	0xFDD
  8697                           fsr2h	equ	0xFDA
  8698                           fsr2l	equ	0xFD9
  8699                           status	equ	0xFD8
  8700                           
  8701 ;; *************** function _caltime_to_RTCC *****************
  8702 ;; Defined at:
  8703 ;;		line 106 in file "../My_library/My_RTCC.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  tm              2    9[BANK0 ] PTR struct .
  8706 ;;		 -> now(14), 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;		None               void
  8711 ;; Registers used:
  8712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;Total ram usage:        2 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:   13
  8725 ;; This function calls:
  8726 ;;		_d_to_x
  8727 ;; This function is called by:
  8728 ;;		_RTCC_from_caltime
  8729 ;;		_RTCC_from_epoch
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text36
  8734  01233C                     __ptext36:
  8735                           	opt stack 0
  8736  01233C                     _caltime_to_RTCC:
  8737                           	opt stack 12
  8738  01233C                     l813:
  8739  01233C  010F               	movlb	15	; () banked
  8740  01233E  B93F               	btfsc	63,4,b	;volatile
  8741  012340  D7FD               	goto	l813
  8742                           
  8743                           ; BSR set to: 15
  8744                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  8745  012342  010F               	movlb	15	; () banked
  8746  012344  813F               	bsf	63,0,b	;volatile
  8747                           
  8748                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  8749  012346  010F               	movlb	15	; () banked
  8750  012348  833F               	bsf	63,1,b	;volatile
  8751                           
  8752                           ; BSR set to: 15
  8753                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  8754  01234A  0100               	movlb	0	; () banked
  8755  01234C  EE20 F00A          	lfsr	2,10
  8756  012350  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8757  012352  26D9               	addwf	fsr2l,f,c
  8758  012354  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8759  012356  22DA               	addwfc	fsr2h,f,c
  8760  012358  50DF               	movf	indf2,w,c
  8761  01235A  EC9B  F09F         	call	_d_to_x
  8762  01235E  010F               	movlb	15	; () banked
  8763  012360  6F3A               	movwf	58,b	;volatile
  8764                           
  8765                           ; BSR set to: 15
  8766                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  8767  012362  0E00               	movlw	0
  8768  012364  010F               	movlb	15	; () banked
  8769  012366  6F3B               	movwf	59,b	;volatile
  8770                           
  8771                           ; BSR set to: 15
  8772                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  8773  012368  010F               	movlb	15	; () banked
  8774  01236A  913F               	bcf	63,0,b	;volatile
  8775                           
  8776                           ; BSR set to: 15
  8777                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  8778  01236C  010F               	movlb	15	; () banked
  8779  01236E  833F               	bsf	63,1,b	;volatile
  8780                           
  8781                           ; BSR set to: 15
  8782                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  8783  012370  0100               	movlb	0	; () banked
  8784  012372  EE20 F008          	lfsr	2,8
  8785  012376  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8786  012378  26D9               	addwf	fsr2l,f,c
  8787  01237A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8788  01237C  22DA               	addwfc	fsr2h,f,c
  8789  01237E  50DF               	movf	indf2,w,c
  8790  012380  EC9B  F09F         	call	_d_to_x
  8791  012384  010F               	movlb	15	; () banked
  8792  012386  6F3A               	movwf	58,b	;volatile
  8793                           
  8794                           ; BSR set to: 15
  8795                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  8796  012388  0100               	movlb	0	; () banked
  8797  01238A  EE20 F009          	lfsr	2,9
  8798  01238E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8799  012390  26D9               	addwf	fsr2l,f,c
  8800  012392  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8801  012394  22DA               	addwfc	fsr2h,f,c
  8802  012396  50DF               	movf	indf2,w,c
  8803  012398  EC9B  F09F         	call	_d_to_x
  8804  01239C  010F               	movlb	15	; () banked
  8805  01239E  6F3B               	movwf	59,b	;volatile
  8806                           
  8807                           ; BSR set to: 15
  8808                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  8809  0123A0  010F               	movlb	15	; () banked
  8810  0123A2  813F               	bsf	63,0,b	;volatile
  8811                           
  8812                           ; BSR set to: 15
  8813                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  8814  0123A4  010F               	movlb	15	; () banked
  8815  0123A6  933F               	bcf	63,1,b	;volatile
  8816                           
  8817                           ; BSR set to: 15
  8818                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  8819  0123A8  0100               	movlb	0	; () banked
  8820  0123AA  EE20 F006          	lfsr	2,6
  8821  0123AE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8822  0123B0  26D9               	addwf	fsr2l,f,c
  8823  0123B2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8824  0123B4  22DA               	addwfc	fsr2h,f,c
  8825  0123B6  50DF               	movf	indf2,w,c
  8826  0123B8  EC9B  F09F         	call	_d_to_x
  8827  0123BC  010F               	movlb	15	; () banked
  8828  0123BE  6F3A               	movwf	58,b	;volatile
  8829                           
  8830                           ; BSR set to: 15
  8831                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  8832  0123C0  0100               	movlb	0	; () banked
  8833  0123C2  EE20 F007          	lfsr	2,7
  8834  0123C6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8835  0123C8  26D9               	addwf	fsr2l,f,c
  8836  0123CA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8837  0123CC  22DA               	addwfc	fsr2h,f,c
  8838  0123CE  50DF               	movf	indf2,w,c
  8839  0123D0  EC9B  F09F         	call	_d_to_x
  8840  0123D4  010F               	movlb	15	; () banked
  8841  0123D6  6F3B               	movwf	59,b	;volatile
  8842                           
  8843                           ; BSR set to: 15
  8844                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  8845  0123D8  010F               	movlb	15	; () banked
  8846  0123DA  913F               	bcf	63,0,b	;volatile
  8847                           
  8848                           ; BSR set to: 15
  8849                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  8850  0123DC  010F               	movlb	15	; () banked
  8851  0123DE  933F               	bcf	63,1,b	;volatile
  8852                           
  8853                           ; BSR set to: 15
  8854                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  8855  0123E0  0100               	movlb	0	; () banked
  8856  0123E2  EE20 F004          	lfsr	2,4
  8857  0123E6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8858  0123E8  26D9               	addwf	fsr2l,f,c
  8859  0123EA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8860  0123EC  22DA               	addwfc	fsr2h,f,c
  8861  0123EE  50DF               	movf	indf2,w,c
  8862  0123F0  EC9B  F09F         	call	_d_to_x
  8863  0123F4  010F               	movlb	15	; () banked
  8864  0123F6  6F3A               	movwf	58,b	;volatile
  8865                           
  8866                           ; BSR set to: 15
  8867                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  8868  0123F8  0100               	movlb	0	; () banked
  8869  0123FA  EE20 F005          	lfsr	2,5
  8870  0123FE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8871  012400  26D9               	addwf	fsr2l,f,c
  8872  012402  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8873  012404  22DA               	addwfc	fsr2h,f,c
  8874  012406  50DF               	movf	indf2,w,c
  8875  012408  EC9B  F09F         	call	_d_to_x
  8876  01240C  010F               	movlb	15	; () banked
  8877  01240E  6F3B               	movwf	59,b	;volatile
  8878                           
  8879                           ; BSR set to: 15
  8880  012410  0012               	return		;funcret
  8881  012412                     __end_of_caltime_to_RTCC:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodh	equ	0xFF4
  8888                           prodl	equ	0xFF3
  8889                           intcon	equ	0xFF2
  8890                           intcon2	equ	0xFF1
  8891                           indf0	equ	0xFEF
  8892                           postinc0	equ	0xFEE
  8893                           fsr0h	equ	0xFEA
  8894                           fsr0l	equ	0xFE9
  8895                           wreg	equ	0xFE8
  8896                           postinc1	equ	0xFE6
  8897                           postdec1	equ	0xFE5
  8898                           fsr1h	equ	0xFE2
  8899                           fsr1l	equ	0xFE1
  8900                           indf2	equ	0xFDF
  8901                           postinc2	equ	0xFDE
  8902                           postdec2	equ	0xFDD
  8903                           fsr2h	equ	0xFDA
  8904                           fsr2l	equ	0xFD9
  8905                           status	equ	0xFD8
  8906                           
  8907 ;; *************** function _d_to_x *****************
  8908 ;; Defined at:
  8909 ;;		line 46 in file "../My_library/My_RTCC.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  dec             1    wreg     unsigned char 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  dec             1    8[BANK0 ] unsigned char 
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  1    wreg      unsigned char 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;Total ram usage:        1 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:   12
  8930 ;; This function calls:
  8931 ;;		___awdiv
  8932 ;; This function is called by:
  8933 ;;		_caltime_to_RTCC
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text37
  8938  013F36                     __ptext37:
  8939                           	opt stack 0
  8940  013F36                     _d_to_x:
  8941                           	opt stack 12
  8942                           
  8943                           ; BSR set to: 15
  8944                           ;incstack = 0
  8945                           ;d_to_x@dec stored from wreg
  8946  013F36  0100               	movlb	0	; () banked
  8947  013F38  6F68               	movwf	d_to_x@dec& (0+255),b
  8948                           
  8949                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  8950  013F3A  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8951  013F3E  0100               	movlb	0	; () banked
  8952  013F40  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8953  013F42  0E00               	movlw	0
  8954  013F44  0100               	movlb	0	; () banked
  8955  013F46  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8956  013F48  0E0A               	movlw	10
  8957  013F4A  6F62               	movwf	___awdiv@divisor& (0+255),b
  8958  013F4C  EC42  F095         	call	___awdiv	;wreg free
  8959  013F50  0100               	movlb	0	; () banked
  8960  013F52  5160               	movf	?___awdiv& (0+255),w,b
  8961  013F54  0D06               	mullw	6
  8962  013F56  50F3               	movf	prodl,w,c
  8963  013F58  0100               	movlb	0	; () banked
  8964  013F5A  2568               	addwf	d_to_x@dec& (0+255),w,b
  8965  013F5C  0012               	return	
  8966  013F5E                     __end_of_d_to_x:
  8967                           	opt stack 0
  8968                           tblptru	equ	0xFF8
  8969                           tblptrh	equ	0xFF7
  8970                           tblptrl	equ	0xFF6
  8971                           tablat	equ	0xFF5
  8972                           prodh	equ	0xFF4
  8973                           prodl	equ	0xFF3
  8974                           intcon	equ	0xFF2
  8975                           intcon2	equ	0xFF1
  8976                           indf0	equ	0xFEF
  8977                           postinc0	equ	0xFEE
  8978                           fsr0h	equ	0xFEA
  8979                           fsr0l	equ	0xFE9
  8980                           wreg	equ	0xFE8
  8981                           postinc1	equ	0xFE6
  8982                           postdec1	equ	0xFE5
  8983                           fsr1h	equ	0xFE2
  8984                           fsr1l	equ	0xFE1
  8985                           indf2	equ	0xFDF
  8986                           postinc2	equ	0xFDE
  8987                           postdec2	equ	0xFDD
  8988                           fsr2h	equ	0xFDA
  8989                           fsr2l	equ	0xFD9
  8990                           status	equ	0xFD8
  8991                           
  8992 ;; *************** function ___awdiv *****************
  8993 ;; Defined at:
  8994 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  dividend        2    0[BANK0 ] int 
  8997 ;;  divisor         2    2[BANK0 ] int 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  quotient        2    6[BANK0 ] int 
  9000 ;;  sign            1    5[BANK0 ] unsigned char 
  9001 ;;  counter         1    4[BANK0 ] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  2    0[BANK0 ] int 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;Total ram usage:        8 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:   11
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_d_to_x
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text38
  9026  012A84                     __ptext38:
  9027                           	opt stack 0
  9028  012A84                     ___awdiv:
  9029                           	opt stack 12
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;incstack = 0
  9033  012A84  0E00               	movlw	0
  9034  012A86  0100               	movlb	0	; () banked
  9035  012A88  6F65               	movwf	___awdiv@sign& (0+255),b
  9036                           
  9037                           ; BSR set to: 0
  9038  012A8A  0100               	movlb	0	; () banked
  9039  012A8C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9040  012A8E  D008               	goto	l7709
  9041                           
  9042                           ; BSR set to: 0
  9043  012A90  0100               	movlb	0	; () banked
  9044  012A92  6D62               	negf	___awdiv@divisor& (0+255),b
  9045  012A94  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9046  012A96  B0D8               	btfsc	status,0,c
  9047  012A98  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9048                           
  9049                           ; BSR set to: 0
  9050  012A9A  0E01               	movlw	1
  9051  012A9C  0100               	movlb	0	; () banked
  9052  012A9E  6F65               	movwf	___awdiv@sign& (0+255),b
  9053  012AA0                     l7709:
  9054                           
  9055                           ; BSR set to: 0
  9056  012AA0  0100               	movlb	0	; () banked
  9057  012AA2  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9058  012AA4  D008               	goto	l7715
  9059                           
  9060                           ; BSR set to: 0
  9061  012AA6  0100               	movlb	0	; () banked
  9062  012AA8  6D60               	negf	___awdiv@dividend& (0+255),b
  9063  012AAA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9064  012AAC  B0D8               	btfsc	status,0,c
  9065  012AAE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9066                           
  9067                           ; BSR set to: 0
  9068  012AB0  0E01               	movlw	1
  9069  012AB2  0100               	movlb	0	; () banked
  9070  012AB4  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  9071  012AB6                     l7715:
  9072                           
  9073                           ; BSR set to: 0
  9074  012AB6  0E00               	movlw	0
  9075  012AB8  0100               	movlb	0	; () banked
  9076  012ABA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  9077  012ABC  0E00               	movlw	0
  9078  012ABE  6F66               	movwf	___awdiv@quotient& (0+255),b
  9079                           
  9080                           ; BSR set to: 0
  9081  012AC0  0100               	movlb	0	; () banked
  9082  012AC2  5162               	movf	___awdiv@divisor& (0+255),w,b
  9083  012AC4  0100               	movlb	0	; () banked
  9084  012AC6  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9085  012AC8  B4D8               	btfsc	status,2,c
  9086  012ACA  D02C               	goto	l7737
  9087                           
  9088                           ; BSR set to: 0
  9089  012ACC  0E01               	movlw	1
  9090  012ACE  0100               	movlb	0	; () banked
  9091  012AD0  6F64               	movwf	___awdiv@counter& (0+255),b
  9092  012AD2  D006               	goto	l7723
  9093  012AD4                     l7721:
  9094                           
  9095                           ; BSR set to: 0
  9096  012AD4  0100               	movlb	0	; () banked
  9097  012AD6  90D8               	bcf	status,0,c
  9098  012AD8  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  9099  012ADA  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9100  012ADC  0100               	movlb	0	; () banked
  9101  012ADE  2B64               	incf	___awdiv@counter& (0+255),f,b
  9102  012AE0                     l7723:
  9103                           
  9104                           ; BSR set to: 0
  9105  012AE0  0100               	movlb	0	; () banked
  9106  012AE2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9107  012AE4  D7F7               	goto	l7721
  9108  012AE6                     l7725:
  9109                           
  9110                           ; BSR set to: 0
  9111  012AE6  0100               	movlb	0	; () banked
  9112  012AE8  90D8               	bcf	status,0,c
  9113  012AEA  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  9114  012AEC  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9115                           
  9116                           ; BSR set to: 0
  9117  012AEE  0100               	movlb	0	; () banked
  9118  012AF0  5162               	movf	___awdiv@divisor& (0+255),w,b
  9119  012AF2  0100               	movlb	0	; () banked
  9120  012AF4  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  9121  012AF6  0100               	movlb	0	; () banked
  9122  012AF8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9123  012AFA  0100               	movlb	0	; () banked
  9124  012AFC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9125  012AFE  A0D8               	btfss	status,0,c
  9126  012B00  D00A               	goto	l7733
  9127                           
  9128                           ; BSR set to: 0
  9129  012B02  0100               	movlb	0	; () banked
  9130  012B04  5162               	movf	___awdiv@divisor& (0+255),w,b
  9131  012B06  0100               	movlb	0	; () banked
  9132  012B08  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  9133  012B0A  0100               	movlb	0	; () banked
  9134  012B0C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9135  012B0E  0100               	movlb	0	; () banked
  9136  012B10  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9137                           
  9138                           ; BSR set to: 0
  9139  012B12  0100               	movlb	0	; () banked
  9140  012B14  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9141  012B16                     l7733:
  9142                           
  9143                           ; BSR set to: 0
  9144  012B16  0100               	movlb	0	; () banked
  9145  012B18  90D8               	bcf	status,0,c
  9146  012B1A  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9147  012B1C  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9148                           
  9149                           ; BSR set to: 0
  9150  012B1E  0100               	movlb	0	; () banked
  9151  012B20  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9152  012B22  D7E1               	goto	l7725
  9153  012B24                     l7737:
  9154                           
  9155                           ; BSR set to: 0
  9156  012B24  0100               	movlb	0	; () banked
  9157  012B26  5165               	movf	___awdiv@sign& (0+255),w,b
  9158  012B28  0100               	movlb	0	; () banked
  9159  012B2A  B4D8               	btfsc	status,2,c
  9160  012B2C  D005               	goto	l7741
  9161                           
  9162                           ; BSR set to: 0
  9163  012B2E  0100               	movlb	0	; () banked
  9164  012B30  6D66               	negf	___awdiv@quotient& (0+255),b
  9165  012B32  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9166  012B34  B0D8               	btfsc	status,0,c
  9167  012B36  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9168  012B38                     l7741:
  9169                           
  9170                           ; BSR set to: 0
  9171  012B38  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9172  012B3C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9173  012B40  0012               	return	
  9174  012B42                     __end_of___awdiv:
  9175                           	opt stack 0
  9176                           tblptru	equ	0xFF8
  9177                           tblptrh	equ	0xFF7
  9178                           tblptrl	equ	0xFF6
  9179                           tablat	equ	0xFF5
  9180                           prodh	equ	0xFF4
  9181                           prodl	equ	0xFF3
  9182                           intcon	equ	0xFF2
  9183                           intcon2	equ	0xFF1
  9184                           indf0	equ	0xFEF
  9185                           postinc0	equ	0xFEE
  9186                           fsr0h	equ	0xFEA
  9187                           fsr0l	equ	0xFE9
  9188                           wreg	equ	0xFE8
  9189                           postinc1	equ	0xFE6
  9190                           postdec1	equ	0xFE5
  9191                           fsr1h	equ	0xFE2
  9192                           fsr1l	equ	0xFE1
  9193                           indf2	equ	0xFDF
  9194                           postinc2	equ	0xFDE
  9195                           postdec2	equ	0xFDD
  9196                           fsr2h	equ	0xFDA
  9197                           fsr2l	equ	0xFD9
  9198                           status	equ	0xFD8
  9199                           
  9200 ;; *************** function _OSC_init *****************
  9201 ;; Defined at:
  9202 ;;		line 107 in file "../My_library/My_PIC.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;		None
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;		None               void
  9209 ;; Registers used:
  9210 ;;		wreg, status,2
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:   11
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_main_init
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text39
  9231  014100                     __ptext39:
  9232                           	opt stack 0
  9233  014100                     _OSC_init:
  9234                           	opt stack 18
  9235                           
  9236                           ;My_PIC.c: 108: OSCCONbits.IRCF = 7;
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;incstack = 0
  9240  014100  88D3               	bsf	4051,4,c	;volatile
  9241  014102  8AD3               	bsf	4051,5,c	;volatile
  9242  014104  8CD3               	bsf	4051,6,c	;volatile
  9243                           
  9244                           ;My_PIC.c: 109: OSCTUNEbits.PLLEN = 1;
  9245  014106  8C9B               	bsf	3995,6,c	;volatile
  9246                           
  9247                           ;My_PIC.c: 110: OSCCONbits.SCS = 0;
  9248  014108  0EFC               	movlw	-4
  9249  01410A  16D3               	andwf	4051,f,c	;volatile
  9250  01410C  0012               	return		;funcret
  9251  01410E                     __end_of_OSC_init:
  9252                           	opt stack 0
  9253                           tblptru	equ	0xFF8
  9254                           tblptrh	equ	0xFF7
  9255                           tblptrl	equ	0xFF6
  9256                           tablat	equ	0xFF5
  9257                           prodh	equ	0xFF4
  9258                           prodl	equ	0xFF3
  9259                           intcon	equ	0xFF2
  9260                           intcon2	equ	0xFF1
  9261                           indf0	equ	0xFEF
  9262                           postinc0	equ	0xFEE
  9263                           fsr0h	equ	0xFEA
  9264                           fsr0l	equ	0xFE9
  9265                           wreg	equ	0xFE8
  9266                           postinc1	equ	0xFE6
  9267                           postdec1	equ	0xFE5
  9268                           fsr1h	equ	0xFE2
  9269                           fsr1l	equ	0xFE1
  9270                           indf2	equ	0xFDF
  9271                           postinc2	equ	0xFDE
  9272                           postdec2	equ	0xFDD
  9273                           fsr2h	equ	0xFDA
  9274                           fsr2l	equ	0xFD9
  9275                           status	equ	0xFD8
  9276                           
  9277 ;; *************** function _I2C_init *****************
  9278 ;; Defined at:
  9279 ;;		line 11 in file "../My_library/My_I2C.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;		None               void
  9286 ;; Registers used:
  9287 ;;		wreg, status,2
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;Total ram usage:        0 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:   11
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_main_init
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text40
  9308  0140EE                     __ptext40:
  9309                           	opt stack 0
  9310  0140EE                     _I2C_init:
  9311                           	opt stack 18
  9312                           
  9313                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
  9314                           
  9315                           ;incstack = 0
  9316  0140EE  0E80               	movlw	128
  9317  0140F0  6EC7               	movwf	4039,c	;volatile
  9318                           
  9319                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
  9320  0140F2  0E28               	movlw	40
  9321  0140F4  6EC6               	movwf	4038,c	;volatile
  9322                           
  9323                           ;My_I2C.c: 14: SSP1ADD = 0x13;
  9324  0140F6  0E13               	movlw	19
  9325  0140F8  6EC8               	movwf	4040,c	;volatile
  9326                           
  9327                           ;My_I2C.c: 17: SSP1IF = 0;
  9328  0140FA  969E               	bcf	3998,3,c	;volatile
  9329                           
  9330                           ;My_I2C.c: 18: BCL1IF = 0;
  9331  0140FC  96A1               	bcf	4001,3,c	;volatile
  9332  0140FE  0012               	return		;funcret
  9333  014100                     __end_of_I2C_init:
  9334                           	opt stack 0
  9335                           tblptru	equ	0xFF8
  9336                           tblptrh	equ	0xFF7
  9337                           tblptrl	equ	0xFF6
  9338                           tablat	equ	0xFF5
  9339                           prodh	equ	0xFF4
  9340                           prodl	equ	0xFF3
  9341                           intcon	equ	0xFF2
  9342                           intcon2	equ	0xFF1
  9343                           indf0	equ	0xFEF
  9344                           postinc0	equ	0xFEE
  9345                           fsr0h	equ	0xFEA
  9346                           fsr0l	equ	0xFE9
  9347                           wreg	equ	0xFE8
  9348                           postinc1	equ	0xFE6
  9349                           postdec1	equ	0xFE5
  9350                           fsr1h	equ	0xFE2
  9351                           fsr1l	equ	0xFE1
  9352                           indf2	equ	0xFDF
  9353                           postinc2	equ	0xFDE
  9354                           postdec2	equ	0xFDD
  9355                           fsr2h	equ	0xFDA
  9356                           fsr2l	equ	0xFD9
  9357                           status	equ	0xFD8
  9358                           
  9359 ;; *************** function _I2C_LCD_init *****************
  9360 ;; Defined at:
  9361 ;;		line 78 in file "../My_library/My_ST7032.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;		None
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;  i               1    9[BANK0 ] unsigned char 
  9366 ;;  i               1    8[BANK0 ] unsigned char 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;		None               void
  9369 ;; Registers used:
  9370 ;;		wreg, status,2, status,0, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9379 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;Total ram usage:        3 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:   15
  9383 ;; This function calls:
  9384 ;;		_I2C_LCD_Clear
  9385 ;;		_I2C_LCD_Command
  9386 ;; This function is called by:
  9387 ;;		_main_init
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text41
  9392  0133CA                     __ptext41:
  9393                           	opt stack 0
  9394  0133CA                     _I2C_LCD_init:
  9395                           	opt stack 14
  9396                           
  9397                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
  9398                           
  9399                           ;incstack = 0
  9400  0133CA  0E00               	movlw	0
  9401  0133CC  0100               	movlb	0	; () banked
  9402  0133CE  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  9403  0133D0                     l8707:
  9404                           
  9405                           ; BSR set to: 0
  9406  0133D0  0E27               	movlw	39
  9407  0133D2  0100               	movlb	0	; () banked
  9408  0133D4  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  9409  0133D6  D001               	goto	l8711
  9410  0133D8  D00C               	goto	l8715
  9411  0133DA                     l8711:
  9412                           
  9413                           ; BSR set to: 0
  9414  0133DA  0E10               	movlw	16
  9415  0133DC  0100               	movlb	0	; () banked
  9416  0133DE  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9417  0133E0  0E94               	movlw	148
  9418  0133E2                     u9477:
  9419  0133E2  2EE8               	decfsz	wreg,f,c
  9420  0133E4  D7FE               	goto	u9477
  9421  0133E6  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9422  0133E8  D7FC               	goto	u9477
  9423  0133EA  D000               	nop2	
  9424  0133EC  0100               	movlb	0	; () banked
  9425  0133EE  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  9426  0133F0  D7EF               	goto	l8707
  9427  0133F2                     l8715:
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
  9431  0133F2  0E38               	movlw	56
  9432  0133F4  EC63  F09E         	call	_I2C_LCD_Command
  9433                           
  9434                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
  9435  0133F8  0E39               	movlw	57
  9436  0133FA  EC63  F09E         	call	_I2C_LCD_Command
  9437                           
  9438                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
  9439  0133FE  0E14               	movlw	20
  9440  013400  EC63  F09E         	call	_I2C_LCD_Command
  9441                           
  9442                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
  9443  013404  0E70               	movlw	112
  9444  013406  EC63  F09E         	call	_I2C_LCD_Command
  9445                           
  9446                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
  9447  01340A  0E56               	movlw	86
  9448  01340C  EC63  F09E         	call	_I2C_LCD_Command
  9449                           
  9450                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
  9451  013410  0E6C               	movlw	108
  9452  013412  EC63  F09E         	call	_I2C_LCD_Command
  9453                           
  9454                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
  9455  013416  0E00               	movlw	0
  9456  013418  0100               	movlb	0	; () banked
  9457  01341A  6F69               	movwf	I2C_LCD_init@i_4220& (0+255),b
  9458  01341C                     l8719:
  9459                           
  9460                           ; BSR set to: 0
  9461  01341C  0E27               	movlw	39
  9462  01341E  0100               	movlb	0	; () banked
  9463  013420  6569               	cpfsgt	I2C_LCD_init@i_4220& (0+255),b
  9464  013422  D001               	goto	l8723
  9465  013424  D00C               	goto	l8727
  9466  013426                     l8723:
  9467                           
  9468                           ; BSR set to: 0
  9469  013426  0E10               	movlw	16
  9470  013428  0100               	movlb	0	; () banked
  9471  01342A  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9472  01342C  0E94               	movlw	148
  9473  01342E                     u9487:
  9474  01342E  2EE8               	decfsz	wreg,f,c
  9475  013430  D7FE               	goto	u9487
  9476  013432  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9477  013434  D7FC               	goto	u9487
  9478  013436  D000               	nop2	
  9479  013438  0100               	movlb	0	; () banked
  9480  01343A  2B69               	incf	I2C_LCD_init@i_4220& (0+255),f,b
  9481  01343C  D7EF               	goto	l8719
  9482  01343E                     l8727:
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
  9486  01343E  0E38               	movlw	56
  9487  013440  EC63  F09E         	call	_I2C_LCD_Command
  9488                           
  9489                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
  9490  013444  0E0C               	movlw	12
  9491  013446  EC63  F09E         	call	_I2C_LCD_Command
  9492                           
  9493                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
  9494  01344A  0E06               	movlw	6
  9495  01344C  EC63  F09E         	call	_I2C_LCD_Command
  9496                           
  9497                           ;My_ST7032.c: 90: I2C_LCD_Clear();
  9498  013450  EC51  F0A0         	call	_I2C_LCD_Clear	;wreg free
  9499  013454  0012               	return		;funcret
  9500  013456                     __end_of_I2C_LCD_init:
  9501                           	opt stack 0
  9502                           tblptru	equ	0xFF8
  9503                           tblptrh	equ	0xFF7
  9504                           tblptrl	equ	0xFF6
  9505                           tablat	equ	0xFF5
  9506                           prodh	equ	0xFF4
  9507                           prodl	equ	0xFF3
  9508                           intcon	equ	0xFF2
  9509                           intcon2	equ	0xFF1
  9510                           indf0	equ	0xFEF
  9511                           postinc0	equ	0xFEE
  9512                           fsr0h	equ	0xFEA
  9513                           fsr0l	equ	0xFE9
  9514                           wreg	equ	0xFE8
  9515                           postinc1	equ	0xFE6
  9516                           postdec1	equ	0xFE5
  9517                           fsr1h	equ	0xFE2
  9518                           fsr1l	equ	0xFE1
  9519                           indf2	equ	0xFDF
  9520                           postinc2	equ	0xFDE
  9521                           postdec2	equ	0xFDD
  9522                           fsr2h	equ	0xFDA
  9523                           fsr2l	equ	0xFD9
  9524                           status	equ	0xFD8
  9525                           
  9526 ;; *************** function _I2C_LCD_Clear *****************
  9527 ;; Defined at:
  9528 ;;		line 21 in file "../My_library/My_ST7032.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;		None
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;		None               void
  9535 ;; Registers used:
  9536 ;;		wreg, status,2, status,0, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9545 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9546 ;;Total ram usage:        1 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:   14
  9549 ;; This function calls:
  9550 ;;		_I2C_LCD_Command
  9551 ;; This function is called by:
  9552 ;;		_I2C_LCD_init
  9553 ;;		_bootload
  9554 ;;		_main
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text42
  9559  0140A2                     __ptext42:
  9560                           	opt stack 0
  9561  0140A2                     _I2C_LCD_Clear:
  9562                           	opt stack 13
  9563                           
  9564                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
  9565                           
  9566                           ;incstack = 0
  9567  0140A2  0E01               	movlw	1
  9568  0140A4  EC63  F09E         	call	_I2C_LCD_Command
  9569                           
  9570                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  9571  0140A8  0E12               	movlw	18
  9572  0140AA  0100               	movlb	0	; () banked
  9573  0140AC  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  9574  0140AE  0E23               	movlw	35
  9575  0140B0                     u9497:
  9576  0140B0  2EE8               	decfsz	wreg,f,c
  9577  0140B2  D7FE               	goto	u9497
  9578  0140B4  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  9579  0140B6  D7FC               	goto	u9497
  9580  0140B8  F000               	nop	
  9581  0140BA  0012               	return		;funcret
  9582  0140BC                     __end_of_I2C_LCD_Clear:
  9583                           	opt stack 0
  9584                           tblptru	equ	0xFF8
  9585                           tblptrh	equ	0xFF7
  9586                           tblptrl	equ	0xFF6
  9587                           tablat	equ	0xFF5
  9588                           prodh	equ	0xFF4
  9589                           prodl	equ	0xFF3
  9590                           intcon	equ	0xFF2
  9591                           intcon2	equ	0xFF1
  9592                           indf0	equ	0xFEF
  9593                           postinc0	equ	0xFEE
  9594                           fsr0h	equ	0xFEA
  9595                           fsr0l	equ	0xFE9
  9596                           wreg	equ	0xFE8
  9597                           postinc1	equ	0xFE6
  9598                           postdec1	equ	0xFE5
  9599                           fsr1h	equ	0xFE2
  9600                           fsr1l	equ	0xFE1
  9601                           indf2	equ	0xFDF
  9602                           postinc2	equ	0xFDE
  9603                           postdec2	equ	0xFDD
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _I2C_LCD_Command *****************
  9609 ;; Defined at:
  9610 ;;		line 8 in file "../My_library/My_ST7032.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  c               1    wreg     unsigned char 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  c               1    4[BANK0 ] unsigned char 
  9615 ;;  ans             1    5[BANK0 ] unsigned char 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;		None               void
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;Total ram usage:        2 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   13
  9632 ;; This function calls:
  9633 ;;		_I2C_Send
  9634 ;;		_I2C_Start
  9635 ;;		_I2C_Stop
  9636 ;; This function is called by:
  9637 ;;		_I2C_LCD_Clear
  9638 ;;		_I2C_LCD_SetCursor
  9639 ;;		_I2C_LCD_init
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text43
  9644  013CC6                     __ptext43:
  9645                           	opt stack 0
  9646  013CC6                     _I2C_LCD_Command:
  9647                           	opt stack 13
  9648                           
  9649                           ;incstack = 0
  9650                           ;I2C_LCD_Command@c stored from wreg
  9651  013CC6  0100               	movlb	0	; () banked
  9652  013CC8  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
  9653                           
  9654                           ;My_ST7032.c: 9: uint8_t ans;
  9655                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
  9656  013CCA  0E00               	movlw	0
  9657  013CCC  0100               	movlb	0	; () banked
  9658  013CCE  6F62               	movwf	I2C_Start@rw& (0+255),b
  9659  013CD0  0E3E               	movlw	62
  9660  013CD2  ECE9  F09E         	call	_I2C_Start
  9661  013CD6  0100               	movlb	0	; () banked
  9662  013CD8  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;My_ST7032.c: 12: if (ans == 0) {
  9666  013CDA  0100               	movlb	0	; () banked
  9667  013CDC  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
  9668  013CDE  0100               	movlb	0	; () banked
  9669  013CE0  A4D8               	btfss	status,2,c
  9670  013CE2  D007               	goto	l969
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
  9674  013CE4  0E80               	movlw	128
  9675  013CE6  EC6B  F0A0         	call	_I2C_Send
  9676                           
  9677                           ;My_ST7032.c: 15: I2C_Send(c);
  9678  013CEA  0100               	movlb	0	; () banked
  9679  013CEC  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
  9680  013CEE  EC6B  F0A0         	call	_I2C_Send
  9681  013CF2                     l969:
  9682                           
  9683                           ;My_ST7032.c: 16: }
  9684                           ;My_ST7032.c: 17: I2C_Stop();
  9685  013CF2  EC87  F0A0         	call	_I2C_Stop	;wreg free
  9686                           
  9687                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9688  013CF6  0E68               	movlw	104
  9689  013CF8                     u9507:
  9690  013CF8  2EE8               	decfsz	wreg,f,c
  9691  013CFA  D7FE               	goto	u9507
  9692  013CFC  0012               	return		;funcret
  9693  013CFE                     __end_of_I2C_LCD_Command:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           intcon2	equ	0xFF1
  9703                           indf0	equ	0xFEF
  9704                           postinc0	equ	0xFEE
  9705                           fsr0h	equ	0xFEA
  9706                           fsr0l	equ	0xFE9
  9707                           wreg	equ	0xFE8
  9708                           postinc1	equ	0xFE6
  9709                           postdec1	equ	0xFE5
  9710                           fsr1h	equ	0xFE2
  9711                           fsr1l	equ	0xFE1
  9712                           indf2	equ	0xFDF
  9713                           postinc2	equ	0xFDE
  9714                           postdec2	equ	0xFDD
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _I2C_Stop *****************
  9720 ;; Defined at:
  9721 ;;		line 45 in file "../My_library/My_I2C.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;		None               void
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9739 ;;Total ram usage:        0 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:   12
  9742 ;; This function calls:
  9743 ;;		_I2C_IdleCheck
  9744 ;; This function is called by:
  9745 ;;		_I2C_LCD_Command
  9746 ;;		_I2C_LCD_Puts
  9747 ;;		_I2C_LCD_Putc
  9748 ;;		_I2C_LCD_CreateChar
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text44
  9753  01410E                     __ptext44:
  9754                           	opt stack 0
  9755  01410E                     _I2C_Stop:
  9756                           	opt stack 13
  9757                           
  9758                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
  9759                           
  9760                           ;incstack = 0
  9761  01410E  0E05               	movlw	5
  9762  014110  EC19  F0A0         	call	_I2C_IdleCheck
  9763                           
  9764                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
  9765  014114  84C5               	bsf	4037,2,c	;volatile
  9766  014116  0012               	return		;funcret
  9767  014118                     __end_of_I2C_Stop:
  9768                           	opt stack 0
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           intcon2	equ	0xFF1
  9777                           indf0	equ	0xFEF
  9778                           postinc0	equ	0xFEE
  9779                           fsr0h	equ	0xFEA
  9780                           fsr0l	equ	0xFE9
  9781                           wreg	equ	0xFE8
  9782                           postinc1	equ	0xFE6
  9783                           postdec1	equ	0xFE5
  9784                           fsr1h	equ	0xFE2
  9785                           fsr1l	equ	0xFE1
  9786                           indf2	equ	0xFDF
  9787                           postinc2	equ	0xFDE
  9788                           postdec2	equ	0xFDD
  9789                           fsr2h	equ	0xFDA
  9790                           fsr2l	equ	0xFD9
  9791                           status	equ	0xFD8
  9792                           
  9793 ;; *************** function _I2C_Start *****************
  9794 ;; Defined at:
  9795 ;;		line 21 in file "../My_library/My_I2C.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  adrs            1    wreg     unsigned char 
  9798 ;;  rw              1    2[BANK0 ] unsigned char 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  adrs            1    3[BANK0 ] unsigned char 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      unsigned char 
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9810 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9814 ;;Total ram usage:        2 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:   12
  9817 ;; This function calls:
  9818 ;;		_I2C_IdleCheck
  9819 ;; This function is called by:
  9820 ;;		_I2C_LCD_Command
  9821 ;;		_I2C_LCD_Puts
  9822 ;;		_I2C_LCD_Putc
  9823 ;;		_I2C_LCD_CreateChar
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text45
  9828  013DD2                     __ptext45:
  9829                           	opt stack 0
  9830  013DD2                     _I2C_Start:
  9831                           	opt stack 13
  9832                           
  9833                           ;incstack = 0
  9834                           ;I2C_Start@adrs stored from wreg
  9835  013DD2  0100               	movlb	0	; () banked
  9836  013DD4  6F63               	movwf	I2C_Start@adrs& (0+255),b
  9837                           
  9838                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
  9839  013DD6  0E05               	movlw	5
  9840  013DD8  EC19  F0A0         	call	_I2C_IdleCheck
  9841                           
  9842                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
  9843  013DDC  80C5               	bsf	4037,0,c	;volatile
  9844                           
  9845                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
  9846  013DDE  0E05               	movlw	5
  9847  013DE0  EC19  F0A0         	call	_I2C_IdleCheck
  9848                           
  9849                           ;My_I2C.c: 27: SSP1IF = 0;
  9850  013DE4  969E               	bcf	3998,3,c	;volatile
  9851                           
  9852                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  9853  013DE6  0100               	movlb	0	; () banked
  9854  013DE8  5163               	movf	I2C_Start@adrs& (0+255),w,b
  9855  013DEA  2563               	addwf	I2C_Start@adrs& (0+255),w,b
  9856  013DEC  0100               	movlb	0	; () banked
  9857  013DEE  2562               	addwf	I2C_Start@rw& (0+255),w,b
  9858  013DF0  6EC9               	movwf	4041,c	;volatile
  9859  013DF2                     l578:
  9860  013DF2  A69E               	btfss	3998,3,c	;volatile
  9861  013DF4  D7FE               	goto	l578
  9862                           
  9863                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
  9864  013DF6  ACC5               	btfss	4037,6,c	;volatile
  9865  013DF8  D002               	goto	u7670
  9866  013DFA  0E01               	movlw	1
  9867  013DFC  0012               	return	
  9868  013DFE                     u7670:
  9869  013DFE  0E00               	movlw	0
  9870  013E00  0012               	return	
  9871  013E02                     __end_of_I2C_Start:
  9872                           	opt stack 0
  9873                           tblptru	equ	0xFF8
  9874                           tblptrh	equ	0xFF7
  9875                           tblptrl	equ	0xFF6
  9876                           tablat	equ	0xFF5
  9877                           prodh	equ	0xFF4
  9878                           prodl	equ	0xFF3
  9879                           intcon	equ	0xFF2
  9880                           intcon2	equ	0xFF1
  9881                           indf0	equ	0xFEF
  9882                           postinc0	equ	0xFEE
  9883                           fsr0h	equ	0xFEA
  9884                           fsr0l	equ	0xFE9
  9885                           wreg	equ	0xFE8
  9886                           postinc1	equ	0xFE6
  9887                           postdec1	equ	0xFE5
  9888                           fsr1h	equ	0xFE2
  9889                           fsr1l	equ	0xFE1
  9890                           indf2	equ	0xFDF
  9891                           postinc2	equ	0xFDE
  9892                           postdec2	equ	0xFDD
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8
  9896                           
  9897 ;; *************** function _I2C_Send *****************
  9898 ;; Defined at:
  9899 ;;		line 51 in file "../My_library/My_I2C.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  data            1    wreg     unsigned char 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  data            1    2[BANK0 ] unsigned char 
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      unsigned char 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2, status,0, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;Total ram usage:        1 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:   12
  9920 ;; This function calls:
  9921 ;;		_I2C_IdleCheck
  9922 ;; This function is called by:
  9923 ;;		_I2C_LCD_Command
  9924 ;;		_I2C_LCD_Puts
  9925 ;;		_I2C_LCD_Putc
  9926 ;;		_I2C_LCD_CreateChar
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text46
  9931  0140D6                     __ptext46:
  9932                           	opt stack 0
  9933  0140D6                     _I2C_Send:
  9934                           	opt stack 13
  9935                           
  9936                           ;incstack = 0
  9937                           ;I2C_Send@data stored from wreg
  9938  0140D6  0100               	movlb	0	; () banked
  9939  0140D8  6F62               	movwf	I2C_Send@data& (0+255),b
  9940                           
  9941                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
  9942  0140DA  0E05               	movlw	5
  9943  0140DC  EC19  F0A0         	call	_I2C_IdleCheck
  9944                           
  9945                           ;My_I2C.c: 53: SSP1IF = 0;
  9946  0140E0  969E               	bcf	3998,3,c	;volatile
  9947                           
  9948                           ;My_I2C.c: 54: SSP1BUF = data;
  9949  0140E2  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
  9950  0140E6                     l593:
  9951  0140E6  A69E               	btfss	3998,3,c	;volatile
  9952  0140E8  D7FE               	goto	l593
  9953                           
  9954                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
  9955                           ;	Return value of _I2C_Send is never used
  9956  0140EA  50C5               	movf	4037,w,c	;volatile
  9957  0140EC  0012               	return	
  9958  0140EE                     __end_of_I2C_Send:
  9959                           	opt stack 0
  9960                           tblptru	equ	0xFF8
  9961                           tblptrh	equ	0xFF7
  9962                           tblptrl	equ	0xFF6
  9963                           tablat	equ	0xFF5
  9964                           prodh	equ	0xFF4
  9965                           prodl	equ	0xFF3
  9966                           intcon	equ	0xFF2
  9967                           intcon2	equ	0xFF1
  9968                           indf0	equ	0xFEF
  9969                           postinc0	equ	0xFEE
  9970                           fsr0h	equ	0xFEA
  9971                           fsr0l	equ	0xFE9
  9972                           wreg	equ	0xFE8
  9973                           postinc1	equ	0xFE6
  9974                           postdec1	equ	0xFE5
  9975                           fsr1h	equ	0xFE2
  9976                           fsr1l	equ	0xFE1
  9977                           indf2	equ	0xFDF
  9978                           postinc2	equ	0xFDE
  9979                           postdec2	equ	0xFDD
  9980                           fsr2h	equ	0xFDA
  9981                           fsr2l	equ	0xFD9
  9982                           status	equ	0xFD8
  9983                           
  9984 ;; *************** function _I2C_IdleCheck *****************
  9985 ;; Defined at:
  9986 ;;		line 7 in file "../My_library/My_I2C.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;  mask            1    wreg     unsigned char 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;  mask            1    1[BANK0 ] unsigned char 
  9991 ;; Return value:  Size  Location     Type
  9992 ;;		None               void
  9993 ;; Registers used:
  9994 ;;		wreg, status,2, status,0
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10003 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10004 ;;Total ram usage:        2 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:   11
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		_I2C_Start
 10011 ;;		_I2C_Stop
 10012 ;;		_I2C_Send
 10013 ;;		_I2C_rStart
 10014 ;;		_I2C_Receive
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text47
 10019  014032                     __ptext47:
 10020                           	opt stack 0
 10021  014032                     _I2C_IdleCheck:
 10022                           	opt stack 13
 10023                           
 10024                           ;incstack = 0
 10025                           ;I2C_IdleCheck@mask stored from wreg
 10026  014032  0100               	movlb	0	; () banked
 10027  014034  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 10028  014036                     l7769:
 10029  014036  50C7               	movf	4039,w,c	;volatile
 10030  014038  0100               	movlb	0	; () banked
 10031  01403A  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 10032  01403C  0100               	movlb	0	; () banked
 10033  01403E  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 10034  014040  50C5               	movf	4037,w,c	;volatile
 10035  014042  0B1F               	andlw	31
 10036  014044  0100               	movlb	0	; () banked
 10037  014046  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 10038  014048  0900               	iorlw	0
 10039  01404A  B4D8               	btfsc	status,2,c
 10040  01404C  0012               	return	
 10041  01404E  D7F3               	goto	l7769
 10042  014050                     __end_of_I2C_IdleCheck:
 10043                           	opt stack 0
 10044                           tblptru	equ	0xFF8
 10045                           tblptrh	equ	0xFF7
 10046                           tblptrl	equ	0xFF6
 10047                           tablat	equ	0xFF5
 10048                           prodh	equ	0xFF4
 10049                           prodl	equ	0xFF3
 10050                           intcon	equ	0xFF2
 10051                           intcon2	equ	0xFF1
 10052                           indf0	equ	0xFEF
 10053                           postinc0	equ	0xFEE
 10054                           fsr0h	equ	0xFEA
 10055                           fsr0l	equ	0xFE9
 10056                           wreg	equ	0xFE8
 10057                           postinc1	equ	0xFE6
 10058                           postdec1	equ	0xFE5
 10059                           fsr1h	equ	0xFE2
 10060                           fsr1l	equ	0xFE1
 10061                           indf2	equ	0xFDF
 10062                           postinc2	equ	0xFDE
 10063                           postdec2	equ	0xFDD
 10064                           fsr2h	equ	0xFDA
 10065                           fsr2l	equ	0xFD9
 10066                           status	equ	0xFD8
 10067                           
 10068 ;; *************** function _USB_task *****************
 10069 ;; Defined at:
 10070 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;		None
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  rx_len          2   20[BANK0 ] int 
 10075 ;;  data            1   22[BANK0 ] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;		None               void
 10078 ;; Registers used:
 10079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10086 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;Total ram usage:        3 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:   14
 10092 ;; This function calls:
 10093 ;;		_get_string_usb
 10094 ;;		_put_string_usb
 10095 ;;		_ringbuf_num
 10096 ;;		_ringbuf_pop
 10097 ;;		_ringbuf_put
 10098 ;; This function is called by:
 10099 ;;		_main
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           	psect	text48
 10104  0132AE                     __ptext48:
 10105                           	opt stack 0
 10106  0132AE                     _USB_task:
 10107                           	opt stack 16
 10108                           
 10109                           ;My_usb_cdc.c: 67: char data;
 10110                           ;My_usb_cdc.c: 68: int rx_len;
 10111                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;incstack = 0
 10115  0132AE  0E76               	movlw	low USB_task@data
 10116  0132B0  0100               	movlb	0	; () banked
 10117  0132B2  6F6D               	movwf	get_string_usb@s& (0+255),b
 10118  0132B4  0E00               	movlw	high USB_task@data
 10119  0132B6  0100               	movlb	0	; () banked
 10120  0132B8  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10121  0132BA  0E00               	movlw	0
 10122  0132BC  0100               	movlb	0	; () banked
 10123  0132BE  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10124  0132C0  0E01               	movlw	1
 10125  0132C2  6F6F               	movwf	get_string_usb@len& (0+255),b
 10126  0132C4  EC7D  F09D         	call	_get_string_usb	;wreg free
 10127  0132C8  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 10128  0132CC  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 10129                           
 10130                           ;My_usb_cdc.c: 70: if (rx_len) {
 10131  0132D0  0100               	movlb	0	; () banked
 10132  0132D2  5174               	movf	USB_task@rx_len& (0+255),w,b
 10133  0132D4  0100               	movlb	0	; () banked
 10134  0132D6  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 10135  0132D8  B4D8               	btfsc	status,2,c
 10136  0132DA  D00A               	goto	l1240
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 10140  0132DC  0E75               	movlw	low _usb_rx
 10141  0132DE  0100               	movlb	0	; () banked
 10142  0132E0  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10143  0132E2  0E01               	movlw	high _usb_rx
 10144  0132E4  0100               	movlb	0	; () banked
 10145  0132E6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10146  0132E8  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 10147  0132EC  ECDE  F092         	call	_ringbuf_put	;wreg free
 10148  0132F0                     l1240:
 10149                           
 10150                           ;My_usb_cdc.c: 72: }
 10151                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 10152  0132F0  0E7D               	movlw	low _usb_tx
 10153  0132F2  0100               	movlb	0	; () banked
 10154  0132F4  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10155  0132F6  0E01               	movlw	high _usb_tx
 10156  0132F8  0100               	movlb	0	; () banked
 10157  0132FA  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10158  0132FC  EC89  F08E         	call	_ringbuf_num	;wreg free
 10159  013300  0100               	movlb	0	; () banked
 10160  013302  5160               	movf	?_ringbuf_num& (0+255),w,b
 10161  013304  0100               	movlb	0	; () banked
 10162  013306  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10163  013308  B4D8               	btfsc	status,2,c
 10164  01330A  0012               	return	
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 10168  01330C  0E7D               	movlw	low _usb_tx
 10169  01330E  0100               	movlb	0	; () banked
 10170  013310  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10171  013312  0E01               	movlw	high _usb_tx
 10172  013314  0100               	movlb	0	; () banked
 10173  013316  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10174  013318  EC18  F094         	call	_ringbuf_pop	;wreg free
 10175  01331C  0100               	movlb	0	; () banked
 10176  01331E  6F76               	movwf	USB_task@data& (0+255),b
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 10180  013320  0E76               	movlw	low USB_task@data
 10181  013322  0100               	movlb	0	; () banked
 10182  013324  6F6C               	movwf	put_string_usb@s& (0+255),b
 10183  013326  0E00               	movlw	high USB_task@data
 10184  013328  0100               	movlb	0	; () banked
 10185  01332A  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10186  01332C  0E00               	movlw	0
 10187  01332E  0100               	movlb	0	; () banked
 10188  013330  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10189  013332  0E01               	movlw	1
 10190  013334  6F6E               	movwf	put_string_usb@len& (0+255),b
 10191  013336  EC44  F09F         	call	_put_string_usb	;wreg free
 10192  01333A  0012               	return	
 10193  01333C                     __end_of_USB_task:
 10194                           	opt stack 0
 10195                           tblptru	equ	0xFF8
 10196                           tblptrh	equ	0xFF7
 10197                           tblptrl	equ	0xFF6
 10198                           tablat	equ	0xFF5
 10199                           prodh	equ	0xFF4
 10200                           prodl	equ	0xFF3
 10201                           intcon	equ	0xFF2
 10202                           intcon2	equ	0xFF1
 10203                           indf0	equ	0xFEF
 10204                           postinc0	equ	0xFEE
 10205                           fsr0h	equ	0xFEA
 10206                           fsr0l	equ	0xFE9
 10207                           wreg	equ	0xFE8
 10208                           postinc1	equ	0xFE6
 10209                           postdec1	equ	0xFE5
 10210                           fsr1h	equ	0xFE2
 10211                           fsr1l	equ	0xFE1
 10212                           indf2	equ	0xFDF
 10213                           postinc2	equ	0xFDE
 10214                           postdec2	equ	0xFDD
 10215                           fsr2h	equ	0xFDA
 10216                           fsr2l	equ	0xFD9
 10217                           status	equ	0xFD8
 10218                           
 10219 ;; *************** function _ringbuf_put *****************
 10220 ;; Defined at:
 10221 ;;		line 20 in file "../My_library/My_ringbuf.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10224 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 10225 ;;  asciicode       1   10[BANK0 ] unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;		None
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10237 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;Total ram usage:        7 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:   12
 10244 ;; This function calls:
 10245 ;;		_ringbuf_num
 10246 ;; This function is called by:
 10247 ;;		_ringbuf_put_num
 10248 ;;		_ringbuf_put_str
 10249 ;;		_terminal_task
 10250 ;;		_USB_task
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text49
 10255  0125BC                     __ptext49:
 10256                           	opt stack 0
 10257  0125BC                     _ringbuf_put:
 10258                           	opt stack 13
 10259                           
 10260                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 10261                           
 10262                           ;incstack = 0
 10263  0125BC  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 10264  0125C0  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 10265  0125C4  EC89  F08E         	call	_ringbuf_num	;wreg free
 10266  0125C8  0100               	movlb	0	; () banked
 10267  0125CA  EE20 F002          	lfsr	2,2
 10268  0125CE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10269  0125D0  26D9               	addwf	fsr2l,f,c
 10270  0125D2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10271  0125D4  22DA               	addwfc	fsr2h,f,c
 10272  0125D6  50DE               	movf	postinc2,w,c
 10273  0125D8  0100               	movlb	0	; () banked
 10274  0125DA  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 10275  0125DC  50DE               	movf	postinc2,w,c
 10276  0125DE  0100               	movlb	0	; () banked
 10277  0125E0  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 10278  0125E2  B0D8               	btfsc	status,0,c
 10279  0125E4  0012               	return	
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 10283  0125E6  0100               	movlb	0	; () banked
 10284  0125E8  EE20 F004          	lfsr	2,4
 10285  0125EC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10286  0125EE  26D9               	addwf	fsr2l,f,c
 10287  0125F0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10288  0125F2  22DA               	addwfc	fsr2h,f,c
 10289  0125F4  CFDE F06B          	movff	postinc2,??_ringbuf_put
 10290  0125F8  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 10291  0125FC  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 10292  012600  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 10293  012604  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 10294  012608  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 10295  01260C  0100               	movlb	0	; () banked
 10296  01260E  516B               	movf	??_ringbuf_put& (0+255),w,b
 10297  012610  0100               	movlb	0	; () banked
 10298  012612  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 10299  012614  6ED9               	movwf	fsr2l,c
 10300  012616  0100               	movlb	0	; () banked
 10301  012618  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 10302  01261A  0100               	movlb	0	; () banked
 10303  01261C  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 10304  01261E  6EDA               	movwf	fsr2h,c
 10305  012620  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 10309  012624  0100               	movlb	0	; () banked
 10310  012626  EE20 F002          	lfsr	2,2
 10311  01262A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10312  01262C  26D9               	addwf	fsr2l,f,c
 10313  01262E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10314  012630  22DA               	addwfc	fsr2h,f,c
 10315  012632  0100               	movlb	0	; () banked
 10316  012634  EE10 F004          	lfsr	1,4
 10317  012638  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10318  01263A  26E1               	addwf	fsr1l,f,c
 10319  01263C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10320  01263E  22E2               	addwfc	fsr1h,f,c
 10321  012640  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 10322  012644  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 10323  012648  0E01               	movlw	1
 10324  01264A  0100               	movlb	0	; () banked
 10325  01264C  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 10326  01264E  0E00               	movlw	0
 10327  012650  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 10328  012652  50DE               	movf	postinc2,w,c
 10329  012654  0100               	movlb	0	; () banked
 10330  012656  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 10331  012658  50DE               	movf	postinc2,w,c
 10332  01265A  0100               	movlb	0	; () banked
 10333  01265C  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 10334  01265E  B0D8               	btfsc	status,0,c
 10335  012660  D00B               	goto	l7779
 10336                           
 10337                           ; BSR set to: 0
 10338  012662  0100               	movlb	0	; () banked
 10339  012664  EE20 F004          	lfsr	2,4
 10340  012668  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10341  01266A  26D9               	addwf	fsr2l,f,c
 10342  01266C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10343  01266E  22DA               	addwfc	fsr2h,f,c
 10344  012670  2ADE               	incf	postinc2,f,c
 10345  012672  0E00               	movlw	0
 10346  012674  22DD               	addwfc	postdec2,f,c
 10347  012676  0012               	return	
 10348  012678                     l7779:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;My_ringbuf.c: 24: else rb->head = 0;
 10352  012678  0100               	movlb	0	; () banked
 10353  01267A  EE20 F004          	lfsr	2,4
 10354  01267E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10355  012680  26D9               	addwf	fsr2l,f,c
 10356  012682  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10357  012684  22DA               	addwfc	fsr2h,f,c
 10358  012686  0E00               	movlw	0
 10359  012688  6EDE               	movwf	postinc2,c
 10360  01268A  0E00               	movlw	0
 10361  01268C  6EDD               	movwf	postdec2,c
 10362                           
 10363                           ; BSR set to: 0
 10364  01268E  0012               	return	
 10365  012690                     __end_of_ringbuf_put:
 10366                           	opt stack 0
 10367                           tblptru	equ	0xFF8
 10368                           tblptrh	equ	0xFF7
 10369                           tblptrl	equ	0xFF6
 10370                           tablat	equ	0xFF5
 10371                           prodh	equ	0xFF4
 10372                           prodl	equ	0xFF3
 10373                           intcon	equ	0xFF2
 10374                           intcon2	equ	0xFF1
 10375                           indf0	equ	0xFEF
 10376                           postinc0	equ	0xFEE
 10377                           fsr0h	equ	0xFEA
 10378                           fsr0l	equ	0xFE9
 10379                           wreg	equ	0xFE8
 10380                           postinc1	equ	0xFE6
 10381                           postdec1	equ	0xFE5
 10382                           fsr1h	equ	0xFE2
 10383                           fsr1l	equ	0xFE1
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           postdec2	equ	0xFDD
 10387                           fsr2h	equ	0xFDA
 10388                           fsr2l	equ	0xFD9
 10389                           status	equ	0xFD8
 10390                           
 10391 ;; *************** function _ringbuf_pop *****************
 10392 ;; Defined at:
 10393 ;;		line 45 in file "../My_library/My_ringbuf.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10396 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  ret             1   14[BANK0 ] unsigned char 
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      unsigned char 
 10401 ;; Registers used:
 10402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10408 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;Total ram usage:        7 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:   12
 10415 ;; This function calls:
 10416 ;;		_ringbuf_num
 10417 ;; This function is called by:
 10418 ;;		_terminal_task
 10419 ;;		_USB_task
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text50
 10424  012830                     __ptext50:
 10425                           	opt stack 0
 10426  012830                     _ringbuf_pop:
 10427                           	opt stack 17
 10428                           
 10429                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;incstack = 0
 10433  012830  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 10434  012834  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 10435  012838  EC89  F08E         	call	_ringbuf_num	;wreg free
 10436  01283C  0100               	movlb	0	; () banked
 10437  01283E  5160               	movf	?_ringbuf_num& (0+255),w,b
 10438  012840  0100               	movlb	0	; () banked
 10439  012842  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10440  012844  B4D8               	btfsc	status,2,c
 10441  012846  D058               	goto	l8667
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 10445  012848  0100               	movlb	0	; () banked
 10446  01284A  EE20 F006          	lfsr	2,6
 10447  01284E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10448  012850  26D9               	addwf	fsr2l,f,c
 10449  012852  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10450  012854  22DA               	addwfc	fsr2h,f,c
 10451  012856  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 10452  01285A  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 10453  01285E  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 10454  012862  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 10455  012866  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 10456  01286A  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 10457  01286E  0100               	movlb	0	; () banked
 10458  012870  516A               	movf	??_ringbuf_pop& (0+255),w,b
 10459  012872  0100               	movlb	0	; () banked
 10460  012874  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 10461  012876  6ED9               	movwf	fsr2l,c
 10462  012878  0100               	movlb	0	; () banked
 10463  01287A  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 10464  01287C  0100               	movlb	0	; () banked
 10465  01287E  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 10466  012880  6EDA               	movwf	fsr2h,c
 10467  012882  50DF               	movf	indf2,w,c
 10468  012884  0100               	movlb	0	; () banked
 10469  012886  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 10473  012888  0100               	movlb	0	; () banked
 10474  01288A  EE20 F002          	lfsr	2,2
 10475  01288E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10476  012890  26D9               	addwf	fsr2l,f,c
 10477  012892  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10478  012894  22DA               	addwfc	fsr2h,f,c
 10479  012896  0100               	movlb	0	; () banked
 10480  012898  EE10 F006          	lfsr	1,6
 10481  01289C  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10482  01289E  26E1               	addwf	fsr1l,f,c
 10483  0128A0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10484  0128A2  22E2               	addwfc	fsr1h,f,c
 10485  0128A4  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 10486  0128A8  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 10487  0128AC  0E01               	movlw	1
 10488  0128AE  0100               	movlb	0	; () banked
 10489  0128B0  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 10490  0128B2  0E00               	movlw	0
 10491  0128B4  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 10492  0128B6  50DE               	movf	postinc2,w,c
 10493  0128B8  0100               	movlb	0	; () banked
 10494  0128BA  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 10495  0128BC  50DE               	movf	postinc2,w,c
 10496  0128BE  0100               	movlb	0	; () banked
 10497  0128C0  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 10498  0128C2  B0D8               	btfsc	status,0,c
 10499  0128C4  D00B               	goto	l8659
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;My_ringbuf.c: 49: rb->tail++;
 10503  0128C6  0100               	movlb	0	; () banked
 10504  0128C8  EE20 F006          	lfsr	2,6
 10505  0128CC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10506  0128CE  26D9               	addwf	fsr2l,f,c
 10507  0128D0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10508  0128D2  22DA               	addwfc	fsr2h,f,c
 10509  0128D4  2ADE               	incf	postinc2,f,c
 10510  0128D6  0E00               	movlw	0
 10511  0128D8  22DD               	addwfc	postdec2,f,c
 10512                           
 10513                           ;My_ringbuf.c: 50: } else {
 10514  0128DA  D00B               	goto	l8661
 10515  0128DC                     l8659:
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;My_ringbuf.c: 51: rb->tail = 0;
 10519  0128DC  0100               	movlb	0	; () banked
 10520  0128DE  EE20 F006          	lfsr	2,6
 10521  0128E2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10522  0128E4  26D9               	addwf	fsr2l,f,c
 10523  0128E6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10524  0128E8  22DA               	addwfc	fsr2h,f,c
 10525  0128EA  0E00               	movlw	0
 10526  0128EC  6EDE               	movwf	postinc2,c
 10527  0128EE  0E00               	movlw	0
 10528  0128F0  6EDD               	movwf	postdec2,c
 10529  0128F2                     l8661:
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;My_ringbuf.c: 52: }
 10533                           ;My_ringbuf.c: 53: return ret;
 10534  0128F2  0100               	movlb	0	; () banked
 10535  0128F4  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;My_ringbuf.c: 54: } else {
 10539                           
 10540                           ; BSR set to: 0
 10541  0128F6  0012               	return	
 10542  0128F8                     l8667:
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;My_ringbuf.c: 55: return 0;
 10546  0128F8  0E00               	movlw	0
 10547                           
 10548                           ; BSR set to: 0
 10549  0128FA  0012               	return	
 10550  0128FC                     __end_of_ringbuf_pop:
 10551                           	opt stack 0
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           intcon	equ	0xFF2
 10559                           intcon2	equ	0xFF1
 10560                           indf0	equ	0xFEF
 10561                           postinc0	equ	0xFEE
 10562                           fsr0h	equ	0xFEA
 10563                           fsr0l	equ	0xFE9
 10564                           wreg	equ	0xFE8
 10565                           postinc1	equ	0xFE6
 10566                           postdec1	equ	0xFE5
 10567                           fsr1h	equ	0xFE2
 10568                           fsr1l	equ	0xFE1
 10569                           indf2	equ	0xFDF
 10570                           postinc2	equ	0xFDE
 10571                           postdec2	equ	0xFDD
 10572                           fsr2h	equ	0xFDA
 10573                           fsr2l	equ	0xFD9
 10574                           status	equ	0xFD8
 10575                           
 10576 ;; *************** function _put_string_usb *****************
 10577 ;; Defined at:
 10578 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  s               2   12[BANK0 ] PTR unsigned char 
 10581 ;;		 -> USB_task@data(1), 
 10582 ;;  len             2   14[BANK0 ] int 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  2   12[BANK0 ] int 
 10587 ;; Registers used:
 10588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10597 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10598 ;;Total ram usage:        4 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:   13
 10601 ;; This function calls:
 10602 ;;		_CDCTxService
 10603 ;;		_is_usb_available
 10604 ;;		_putUSBUSART
 10605 ;; This function is called by:
 10606 ;;		_USB_task
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text51
 10611  013E88                     __ptext51:
 10612                           	opt stack 0
 10613  013E88                     _put_string_usb:
 10614                           	opt stack 16
 10615                           
 10616                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;incstack = 0
 10620  013E88  EC36  F0A0         	call	_is_usb_available	;wreg free
 10621  013E8C  0900               	iorlw	0
 10622  013E8E  B4D8               	btfsc	status,2,c
 10623  013E90  0012               	return	
 10624  013E92  D002               	goto	l8769
 10625  013E94                     l8767:
 10626  013E94  EC37  F089         	call	_CDCTxService	;wreg free
 10627  013E98                     l8769:
 10628  013E98  5016               	movf	_cdc_trf_state,w,c
 10629  013E9A  A4D8               	btfss	status,2,c
 10630  013E9C  D7FB               	goto	l8767
 10631                           
 10632                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 10633  013E9E  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 10634  013EA2  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 10635  013EA6  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 10636  013EAA  ECF8  F09F         	call	_putUSBUSART	;wreg free
 10637                           
 10638                           ;My_usb_cdc.c: 28: CDCTxService();
 10639  013EAE  EC37  F089         	call	_CDCTxService	;wreg free
 10640  013EB2  0012               	return	
 10641  013EB4                     __end_of_put_string_usb:
 10642                           	opt stack 0
 10643                           tblptru	equ	0xFF8
 10644                           tblptrh	equ	0xFF7
 10645                           tblptrl	equ	0xFF6
 10646                           tablat	equ	0xFF5
 10647                           prodh	equ	0xFF4
 10648                           prodl	equ	0xFF3
 10649                           intcon	equ	0xFF2
 10650                           intcon2	equ	0xFF1
 10651                           indf0	equ	0xFEF
 10652                           postinc0	equ	0xFEE
 10653                           fsr0h	equ	0xFEA
 10654                           fsr0l	equ	0xFE9
 10655                           wreg	equ	0xFE8
 10656                           postinc1	equ	0xFE6
 10657                           postdec1	equ	0xFE5
 10658                           fsr1h	equ	0xFE2
 10659                           fsr1l	equ	0xFE1
 10660                           indf2	equ	0xFDF
 10661                           postinc2	equ	0xFDE
 10662                           postdec2	equ	0xFDD
 10663                           fsr2h	equ	0xFDA
 10664                           fsr2l	equ	0xFD9
 10665                           status	equ	0xFD8
 10666                           
 10667 ;; *************** function _putUSBUSART *****************
 10668 ;; Defined at:
 10669 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10672 ;;		 -> USB_task@data(1), 
 10673 ;;  length          1    2[BANK0 ] unsigned char 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;		None               void
 10678 ;; Registers used:
 10679 ;;		wreg, status,2, status,0
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10685 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10688 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10689 ;;Total ram usage:        3 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:   11
 10692 ;; This function calls:
 10693 ;;		Nothing
 10694 ;; This function is called by:
 10695 ;;		_put_string_usb
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text52
 10700  013FF0                     __ptext52:
 10701                           	opt stack 0
 10702  013FF0                     _putUSBUSART:
 10703                           	opt stack 17
 10704                           
 10705                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 10706                           
 10707                           ;incstack = 0
 10708  013FF0  98A0               	bcf	4000,4,c	;volatile
 10709                           
 10710                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 10711  013FF2  5016               	movf	_cdc_trf_state,w,c
 10712  013FF4  A4D8               	btfss	status,2,c
 10713  013FF6  D00B               	goto	l8407
 10714                           
 10715                           ;usb_device_cdc.c: 640: {
 10716                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10717  013FF8  C060  F0ED         	movff	putUSBUSART@data,_pCDCSrc
 10718  013FFC  C061  F0EE         	movff	putUSBUSART@data+1,_pCDCSrc+1
 10719  014000  C062  F0F8         	movff	putUSBUSART@length,_cdc_tx_len
 10720  014004  0E01               	movlw	1
 10721  014006  0100               	movlb	0	; () banked
 10722  014008  6FF6               	movwf	_cdc_mem_type& (0+255),b
 10723                           
 10724                           ; BSR set to: 0
 10725  01400A  0E01               	movlw	1
 10726  01400C  6E16               	movwf	_cdc_trf_state,c
 10727  01400E                     l8407:
 10728                           
 10729                           ;usb_device_cdc.c: 642: }
 10730                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 10731  01400E  88A0               	bsf	4000,4,c	;volatile
 10732  014010  0012               	return		;funcret
 10733  014012                     __end_of_putUSBUSART:
 10734                           	opt stack 0
 10735                           tblptru	equ	0xFF8
 10736                           tblptrh	equ	0xFF7
 10737                           tblptrl	equ	0xFF6
 10738                           tablat	equ	0xFF5
 10739                           prodh	equ	0xFF4
 10740                           prodl	equ	0xFF3
 10741                           intcon	equ	0xFF2
 10742                           intcon2	equ	0xFF1
 10743                           indf0	equ	0xFEF
 10744                           postinc0	equ	0xFEE
 10745                           fsr0h	equ	0xFEA
 10746                           fsr0l	equ	0xFE9
 10747                           wreg	equ	0xFE8
 10748                           postinc1	equ	0xFE6
 10749                           postdec1	equ	0xFE5
 10750                           fsr1h	equ	0xFE2
 10751                           fsr1l	equ	0xFE1
 10752                           indf2	equ	0xFDF
 10753                           postinc2	equ	0xFDE
 10754                           postdec2	equ	0xFDD
 10755                           fsr2h	equ	0xFDA
 10756                           fsr2l	equ	0xFD9
 10757                           status	equ	0xFD8
 10758                           
 10759 ;; *************** function _get_string_usb *****************
 10760 ;; Defined at:
 10761 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  s               2   13[BANK0 ] PTR unsigned char 
 10764 ;;		 -> USB_task@data(1), 
 10765 ;;  len             2   15[BANK0 ] int 
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;  rx_len          2   18[BANK0 ] int 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  2   13[BANK0 ] int 
 10770 ;; Registers used:
 10771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10780 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;Total ram usage:        7 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:   13
 10784 ;; This function calls:
 10785 ;;		_CDCTxService
 10786 ;;		_getsUSBUSART
 10787 ;;		_is_usb_available
 10788 ;; This function is called by:
 10789 ;;		_USB_task
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           	psect	text53
 10794  013AFA                     __ptext53:
 10795                           	opt stack 0
 10796  013AFA                     _get_string_usb:
 10797                           	opt stack 16
 10798                           
 10799                           ;My_usb_cdc.c: 33: int rx_len;
 10800                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 10801                           
 10802                           ;incstack = 0
 10803  013AFA  EC36  F0A0         	call	_is_usb_available	;wreg free
 10804  013AFE  0900               	iorlw	0
 10805  013B00  A4D8               	btfss	status,2,c
 10806  013B02  D008               	goto	l8785
 10807                           
 10808                           ;My_usb_cdc.c: 36: return 0;
 10809  013B04  0E00               	movlw	0
 10810  013B06  0100               	movlb	0	; () banked
 10811  013B08  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 10812  013B0A  0E00               	movlw	0
 10813  013B0C  6F6D               	movwf	?_get_string_usb& (0+255),b
 10814                           
 10815                           ; BSR set to: 0
 10816  013B0E  0012               	return	
 10817  013B10                     l8783:
 10818  013B10  EC37  F089         	call	_CDCTxService	;wreg free
 10819  013B14                     l8785:
 10820  013B14  5016               	movf	_cdc_trf_state,w,c
 10821  013B16  A4D8               	btfss	status,2,c
 10822  013B18  D7FB               	goto	l8783
 10823                           
 10824                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 10825  013B1A  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 10826  013B1E  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 10827  013B22  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 10828  013B26  EC00  F08F         	call	_getsUSBUSART	;wreg free
 10829  013B2A  0100               	movlb	0	; () banked
 10830  013B2C  6F71               	movwf	??_get_string_usb& (0+255),b
 10831  013B2E  0100               	movlb	0	; () banked
 10832  013B30  5171               	movf	??_get_string_usb& (0+255),w,b
 10833  013B32  0100               	movlb	0	; () banked
 10834  013B34  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 10835  013B36  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 10836                           
 10837                           ;My_usb_cdc.c: 40: CDCTxService();
 10838  013B38  EC37  F089         	call	_CDCTxService	;wreg free
 10839                           
 10840                           ;My_usb_cdc.c: 41: return rx_len;
 10841  013B3C  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 10842  013B40  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 10843  013B44  0012               	return	
 10844  013B46                     __end_of_get_string_usb:
 10845                           	opt stack 0
 10846                           tblptru	equ	0xFF8
 10847                           tblptrh	equ	0xFF7
 10848                           tblptrl	equ	0xFF6
 10849                           tablat	equ	0xFF5
 10850                           prodh	equ	0xFF4
 10851                           prodl	equ	0xFF3
 10852                           intcon	equ	0xFF2
 10853                           intcon2	equ	0xFF1
 10854                           indf0	equ	0xFEF
 10855                           postinc0	equ	0xFEE
 10856                           fsr0h	equ	0xFEA
 10857                           fsr0l	equ	0xFE9
 10858                           wreg	equ	0xFE8
 10859                           postinc1	equ	0xFE6
 10860                           postdec1	equ	0xFE5
 10861                           fsr1h	equ	0xFE2
 10862                           fsr1l	equ	0xFE1
 10863                           indf2	equ	0xFDF
 10864                           postinc2	equ	0xFDE
 10865                           postdec2	equ	0xFDD
 10866                           fsr2h	equ	0xFDA
 10867                           fsr2l	equ	0xFD9
 10868                           status	equ	0xFD8
 10869                           
 10870 ;; *************** function _is_usb_available *****************
 10871 ;; Defined at:
 10872 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;		None
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;		None
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  1    wreg      unsigned char 
 10879 ;; Registers used:
 10880 ;;		wreg, status,2, status,0
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/0
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10890 ;;Total ram usage:        1 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:   11
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_put_string_usb
 10897 ;;		_get_string_usb
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text54
 10902  01406C                     __ptext54:
 10903                           	opt stack 0
 10904  01406C                     _is_usb_available:
 10905                           	opt stack 17
 10906                           
 10907                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 10908                           
 10909                           ;incstack = 0
 10910  01406C  0E00               	movlw	0
 10911  01406E  0100               	movlb	0	; () banked
 10912  014070  6F60               	movwf	_is_usb_available$4884& (0+255),b
 10913                           
 10914                           ; BSR set to: 0
 10915  014072  0E1F               	movlw	31
 10916  014074  6412               	cpfsgt	_USBDeviceState,c	;volatile
 10917  014076  D005               	goto	l1208
 10918                           
 10919                           ; BSR set to: 0
 10920  014078  B265               	btfsc	3941,1,c	;volatile
 10921  01407A  D003               	goto	l1208
 10922                           
 10923                           ; BSR set to: 0
 10924  01407C  0E01               	movlw	1
 10925  01407E  0100               	movlb	0	; () banked
 10926  014080  6F60               	movwf	_is_usb_available$4884& (0+255),b
 10927  014082                     l1208:
 10928                           
 10929                           ; BSR set to: 0
 10930  014082  0100               	movlb	0	; () banked
 10931  014084  5160               	movf	_is_usb_available$4884& (0+255),w,b
 10932  014086  0012               	return	
 10933  014088                     __end_of_is_usb_available:
 10934                           	opt stack 0
 10935                           tblptru	equ	0xFF8
 10936                           tblptrh	equ	0xFF7
 10937                           tblptrl	equ	0xFF6
 10938                           tablat	equ	0xFF5
 10939                           prodh	equ	0xFF4
 10940                           prodl	equ	0xFF3
 10941                           intcon	equ	0xFF2
 10942                           intcon2	equ	0xFF1
 10943                           indf0	equ	0xFEF
 10944                           postinc0	equ	0xFEE
 10945                           fsr0h	equ	0xFEA
 10946                           fsr0l	equ	0xFE9
 10947                           wreg	equ	0xFE8
 10948                           postinc1	equ	0xFE6
 10949                           postdec1	equ	0xFE5
 10950                           fsr1h	equ	0xFE2
 10951                           fsr1l	equ	0xFE1
 10952                           indf2	equ	0xFDF
 10953                           postinc2	equ	0xFDE
 10954                           postdec2	equ	0xFDD
 10955                           fsr2h	equ	0xFDA
 10956                           fsr2l	equ	0xFD9
 10957                           status	equ	0xFD8
 10958                           
 10959 ;; *************** function _getsUSBUSART *****************
 10960 ;; Defined at:
 10961 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10964 ;;		 -> USB_task@data(1), 
 10965 ;;  len             1    9[BANK0 ] unsigned char 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      unsigned char 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10977 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;Total ram usage:        6 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:   12
 10984 ;; This function calls:
 10985 ;;		_USBTransferOnePacket
 10986 ;; This function is called by:
 10987 ;;		_get_string_usb
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text55
 10992  011E00                     __ptext55:
 10993                           	opt stack 0
 10994  011E00                     _getsUSBUSART:
 10995                           	opt stack 16
 10996                           
 10997                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;incstack = 0
 11001  011E00  0E00               	movlw	0
 11002  011E02  0100               	movlb	0	; () banked
 11003  011E04  6FF7               	movwf	_cdc_rx_len& (0+255),b
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 11007  011E06  0100               	movlb	0	; () banked
 11008  011E08  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 11009  011E0A  0100               	movlb	0	; () banked
 11010  011E0C  11F3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 11011  011E0E  B4D8               	btfsc	status,2,c
 11012  011E10  D013               	goto	l8373
 11013                           
 11014                           ; BSR set to: 0
 11015  011E12  C0F2  FFD9         	movff	_CDCDataOutHandle,fsr2l
 11016  011E16  C0F3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 11017  011E1A  0100               	movlb	0	; () banked
 11018  011E1C  AEDF               	btfss	indf2,7,c
 11019  011E1E  D004               	goto	u8250
 11020  011E20  0100               	movlb	0	; () banked
 11021  011E22  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11022  011E24  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 11023  011E26  D002               	goto	u8258
 11024  011E28                     u8250:
 11025  011E28  0100               	movlb	0	; () banked
 11026  011E2A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11027  011E2C                     u8258:
 11028  011E2C  0100               	movlb	0	; () banked
 11029  011E2E  516A               	movf	??_getsUSBUSART& (0+255),w,b
 11030  011E30  0100               	movlb	0	; () banked
 11031  011E32  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 11032  011E34  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 11033  011E36  D005               	goto	l8375
 11034  011E38                     l8373:
 11035                           
 11036                           ; BSR set to: 0
 11037  011E38  0E00               	movlw	0
 11038  011E3A  0100               	movlb	0	; () banked
 11039  011E3C  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 11040  011E3E  0E00               	movlw	0
 11041  011E40  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 11042  011E42                     l8375:
 11043                           
 11044                           ; BSR set to: 0
 11045  011E42  0100               	movlb	0	; () banked
 11046  011E44  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 11047  011E46  0100               	movlb	0	; () banked
 11048  011E48  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 11049  011E4A  A4D8               	btfss	status,2,c
 11050  011E4C  D04B               	goto	l8391
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;usb_device_cdc.c: 547: {
 11054                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 11055  011E4E  0100               	movlb	0	; () banked
 11056  011E50  EE20 F001          	lfsr	2,1
 11057  011E54  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 11058  011E56  26D9               	addwf	fsr2l,f,c
 11059  011E58  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11060  011E5A  22DA               	addwfc	fsr2h,f,c
 11061  011E5C  0100               	movlb	0	; () banked
 11062  011E5E  5169               	movf	getsUSBUSART@len& (0+255),w,b
 11063  011E60  5CDE               	subwf	postinc2,w,c
 11064  011E62  B0D8               	btfsc	status,0,c
 11065  011E64  D00A               	goto	l8381
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 11069  011E66  0100               	movlb	0	; () banked
 11070  011E68  EE20 F001          	lfsr	2,1
 11071  011E6C  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 11072  011E6E  26D9               	addwf	fsr2l,f,c
 11073  011E70  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11074  011E72  22DA               	addwfc	fsr2h,f,c
 11075  011E74  50DF               	movf	indf2,w,c
 11076  011E76  0100               	movlb	0	; () banked
 11077  011E78  6F69               	movwf	getsUSBUSART@len& (0+255),b
 11078  011E7A                     l8381:
 11079                           
 11080                           ; BSR set to: 0
 11081                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 11082  011E7A  0E00               	movlw	0
 11083  011E7C  0100               	movlb	0	; () banked
 11084  011E7E  6FF7               	movwf	_cdc_rx_len& (0+255),b
 11085  011E80  D018               	goto	l8387
 11086  011E82                     l8383:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 11090  011E82  0100               	movlb	0	; () banked
 11091  011E84  51F7               	movf	_cdc_rx_len& (0+255),w,b
 11092  011E86  0D01               	mullw	1
 11093  011E88  0E64               	movlw	low _cdc_data_rx
 11094  011E8A  24F3               	addwf	prodl,w,c
 11095  011E8C  6ED9               	movwf	fsr2l,c
 11096  011E8E  0E02               	movlw	high _cdc_data_rx
 11097  011E90  20F4               	addwfc	prodh,w,c
 11098  011E92  6EDA               	movwf	fsr2h,c
 11099  011E94  0100               	movlb	0	; () banked
 11100  011E96  51F7               	movf	_cdc_rx_len& (0+255),w,b
 11101  011E98  0D01               	mullw	1
 11102  011E9A  50F3               	movf	prodl,w,c
 11103  011E9C  0100               	movlb	0	; () banked
 11104  011E9E  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 11105  011EA0  6EE1               	movwf	fsr1l,c
 11106  011EA2  50F4               	movf	prodh,w,c
 11107  011EA4  0100               	movlb	0	; () banked
 11108  011EA6  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 11109  011EA8  6EE2               	movwf	fsr1h,c
 11110  011EAA  CFDF FFE7          	movff	indf2,indf1
 11111                           
 11112                           ; BSR set to: 0
 11113  011EAE  0100               	movlb	0	; () banked
 11114  011EB0  2BF7               	incf	_cdc_rx_len& (0+255),f,b
 11115  011EB2                     l8387:
 11116                           
 11117                           ; BSR set to: 0
 11118  011EB2  0100               	movlb	0	; () banked
 11119  011EB4  5169               	movf	getsUSBUSART@len& (0+255),w,b
 11120  011EB6  0100               	movlb	0	; () banked
 11121  011EB8  5DF7               	subwf	_cdc_rx_len& (0+255),w,b
 11122  011EBA  A0D8               	btfss	status,0,c
 11123  011EBC  D7E2               	goto	l8383
 11124                           
 11125                           ; BSR set to: 0
 11126                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11127                           
 11128                           ; BSR set to: 0
 11129  011EBE  0E00               	movlw	0
 11130  011EC0  0100               	movlb	0	; () banked
 11131  011EC2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11132  011EC4  0E64               	movlw	low _cdc_data_rx
 11133  011EC6  0100               	movlb	0	; () banked
 11134  011EC8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11135  011ECA  0E02               	movlw	high _cdc_data_rx
 11136  011ECC  0100               	movlb	0	; () banked
 11137  011ECE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11138  011ED0  0E40               	movlw	64
 11139  011ED2  0100               	movlb	0	; () banked
 11140  011ED4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11141  011ED6  0E02               	movlw	2
 11142  011ED8  ECC6  F090         	call	_USBTransferOnePacket
 11143  011EDC  C060  F0F2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11144  011EE0  C061  F0F3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11145  011EE4                     l8391:
 11146                           
 11147                           ;usb_device_cdc.c: 567: }
 11148                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 11149  011EE4  0100               	movlb	0	; () banked
 11150  011EE6  51F7               	movf	_cdc_rx_len& (0+255),w,b
 11151  011EE8  0012               	return	
 11152  011EEA                     __end_of_getsUSBUSART:
 11153                           	opt stack 0
 11154                           tblptru	equ	0xFF8
 11155                           tblptrh	equ	0xFF7
 11156                           tblptrl	equ	0xFF6
 11157                           tablat	equ	0xFF5
 11158                           prodh	equ	0xFF4
 11159                           prodl	equ	0xFF3
 11160                           intcon	equ	0xFF2
 11161                           intcon2	equ	0xFF1
 11162                           indf0	equ	0xFEF
 11163                           postinc0	equ	0xFEE
 11164                           fsr0h	equ	0xFEA
 11165                           fsr0l	equ	0xFE9
 11166                           wreg	equ	0xFE8
 11167                           indf1	equ	0xFE7
 11168                           postinc1	equ	0xFE6
 11169                           postdec1	equ	0xFE5
 11170                           fsr1h	equ	0xFE2
 11171                           fsr1l	equ	0xFE1
 11172                           indf2	equ	0xFDF
 11173                           postinc2	equ	0xFDE
 11174                           postdec2	equ	0xFDD
 11175                           fsr2h	equ	0xFDA
 11176                           fsr2l	equ	0xFD9
 11177                           status	equ	0xFD8
 11178                           
 11179 ;; *************** function _CDCTxService *****************
 11180 ;; Defined at:
 11181 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;		None
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 11186 ;;  i               1   10[BANK0 ] unsigned char 
 11187 ;; Return value:  Size  Location     Type
 11188 ;;		None               void
 11189 ;; Registers used:
 11190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;Total ram usage:        5 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:   12
 11203 ;; This function calls:
 11204 ;;		_USBTransferOnePacket
 11205 ;; This function is called by:
 11206 ;;		_put_string_usb
 11207 ;;		_get_string_usb
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text56
 11212  01126E                     __ptext56:
 11213                           	opt stack 0
 11214  01126E                     _CDCTxService:
 11215                           	opt stack 16
 11216                           
 11217                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 11218                           ;usb_device_cdc.c: 896: uint8_t i;
 11219                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;incstack = 0
 11223  01126E  98A0               	bcf	4000,4,c	;volatile
 11224                           
 11225                           ;usb_device_cdc.c: 900: {};
 11226                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 11227  011270  0100               	movlb	0	; () banked
 11228  011272  51F0               	movf	_CDCDataInHandle& (0+255),w,b
 11229  011274  0100               	movlb	0	; () banked
 11230  011276  11F1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11231  011278  B4D8               	btfsc	status,2,c
 11232  01127A  D013               	goto	l8415
 11233                           
 11234                           ; BSR set to: 0
 11235  01127C  C0F0  FFD9         	movff	_CDCDataInHandle,fsr2l
 11236  011280  C0F1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11237  011284  0100               	movlb	0	; () banked
 11238  011286  AEDF               	btfss	indf2,7,c
 11239  011288  D004               	goto	u8310
 11240  01128A  0100               	movlb	0	; () banked
 11241  01128C  6B67               	clrf	??_CDCTxService& (0+255),b
 11242  01128E  2B67               	incf	??_CDCTxService& (0+255),f,b
 11243  011290  D002               	goto	u8318
 11244  011292                     u8310:
 11245  011292  0100               	movlb	0	; () banked
 11246  011294  6B67               	clrf	??_CDCTxService& (0+255),b
 11247  011296                     u8318:
 11248  011296  0100               	movlb	0	; () banked
 11249  011298  5167               	movf	??_CDCTxService& (0+255),w,b
 11250  01129A  0100               	movlb	0	; () banked
 11251  01129C  6F68               	movwf	_CDCTxService$2005& (0+255),b
 11252  01129E  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 11253  0112A0  D005               	goto	l8417
 11254  0112A2                     l8415:
 11255                           
 11256                           ; BSR set to: 0
 11257  0112A2  0E00               	movlw	0
 11258  0112A4  0100               	movlb	0	; () banked
 11259  0112A6  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 11260  0112A8  0E00               	movlw	0
 11261  0112AA  6F68               	movwf	_CDCTxService$2005& (0+255),b
 11262  0112AC                     l8417:
 11263                           
 11264                           ; BSR set to: 0
 11265  0112AC  0100               	movlb	0	; () banked
 11266  0112AE  5168               	movf	_CDCTxService$2005& (0+255),w,b
 11267  0112B0  0100               	movlb	0	; () banked
 11268  0112B2  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 11269  0112B4  B4D8               	btfsc	status,2,c
 11270  0112B6  D002               	goto	l8421
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;usb_device_cdc.c: 903: {
 11274                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 11275  0112B8  88A0               	bsf	4000,4,c	;volatile
 11276                           
 11277                           ;usb_device_cdc.c: 905: return;
 11278  0112BA  0012               	return	
 11279  0112BC                     l8421:
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;usb_device_cdc.c: 906: }
 11283                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 11284  0112BC  0E03               	movlw	3
 11285  0112BE  1816               	xorwf	_cdc_trf_state,w,c
 11286  0112C0  A4D8               	btfss	status,2,c
 11287  0112C2  D002               	goto	l504
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 11291  0112C4  0E00               	movlw	0
 11292  0112C6  6E16               	movwf	_cdc_trf_state,c
 11293  0112C8                     l504:
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 11297  0112C8  5016               	movf	_cdc_trf_state,w,c
 11298  0112CA  A4D8               	btfss	status,2,c
 11299  0112CC  D002               	goto	l8427
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;usb_device_cdc.c: 920: {
 11303                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 11304  0112CE  88A0               	bsf	4000,4,c	;volatile
 11305                           
 11306                           ;usb_device_cdc.c: 922: return;
 11307  0112D0  0012               	return	
 11308  0112D2                     l8427:
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;usb_device_cdc.c: 923: }
 11312                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 11313  0112D2  0E02               	movlw	2
 11314  0112D4  1816               	xorwf	_cdc_trf_state,w,c
 11315  0112D6  A4D8               	btfss	status,2,c
 11316  0112D8  D016               	goto	l8433
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;usb_device_cdc.c: 929: {
 11320                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11321  0112DA  0E01               	movlw	1
 11322  0112DC  0100               	movlb	0	; () banked
 11323  0112DE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11324  0112E0  0E00               	movlw	0
 11325  0112E2  0100               	movlb	0	; () banked
 11326  0112E4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11327  0112E6  0E00               	movlw	0
 11328  0112E8  0100               	movlb	0	; () banked
 11329  0112EA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11330  0112EC  0E00               	movlw	0
 11331  0112EE  0100               	movlb	0	; () banked
 11332  0112F0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11333  0112F2  0E02               	movlw	2
 11334  0112F4  ECC6  F090         	call	_USBTransferOnePacket
 11335  0112F8  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11336  0112FC  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11337                           
 11338                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 11339  011300  0E03               	movlw	3
 11340  011302  6E16               	movwf	_cdc_trf_state,c
 11341                           
 11342                           ;usb_device_cdc.c: 933: }
 11343  011304  D06F               	goto	l8477
 11344  011306                     l8433:
 11345                           
 11346                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 11347  011306  0416               	decf	_cdc_trf_state,w,c
 11348  011308  A4D8               	btfss	status,2,c
 11349  01130A  D06C               	goto	l8477
 11350                           
 11351                           ;usb_device_cdc.c: 935: {
 11352                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 11353  01130C  0E40               	movlw	64
 11354  01130E  0100               	movlb	0	; () banked
 11355  011310  65F8               	cpfsgt	_cdc_tx_len& (0+255),b
 11356  011312  D004               	goto	l509
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 11360  011314  0E40               	movlw	64
 11361  011316  0100               	movlb	0	; () banked
 11362  011318  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 11363  01131A  D002               	goto	l8439
 11364  01131C                     l509:
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;usb_device_cdc.c: 941: else
 11368                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 11369  01131C  C0F8  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11370  011320                     l8439:
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 11374  011320  0100               	movlb	0	; () banked
 11375  011322  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11376  011324  0800               	sublw	0
 11377  011326  0100               	movlb	0	; () banked
 11378  011328  25F8               	addwf	_cdc_tx_len& (0+255),w,b
 11379  01132A  0100               	movlb	0	; () banked
 11380  01132C  6FF8               	movwf	_cdc_tx_len& (0+255),b
 11381                           
 11382                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11383  01132E  0EA4               	movlw	low _cdc_data_tx
 11384  011330  0100               	movlb	0	; () banked
 11385  011332  6FEA               	movwf	_pCDCDst& (0+255),b
 11386  011334  0E02               	movlw	high _cdc_data_tx
 11387  011336  0100               	movlb	0	; () banked
 11388  011338  6FEB               	movwf	(_pCDCDst+1)& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;usb_device_cdc.c: 951: i = byte_to_send;
 11392  01133A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 11396  01133E  0100               	movlb	0	; () banked
 11397  011340  51F6               	movf	_cdc_mem_type& (0+255),w,b
 11398  011342  B4D8               	btfsc	status,2,c
 11399  011344  D013               	goto	l8455
 11400  011346  D02A               	goto	l8465
 11401  011348                     l8447:
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;usb_device_cdc.c: 955: {
 11405                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 11406  011348  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 11407  01134C  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 11408  011350  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 11409  011354  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 11410  011358  CFDF FFE7          	movff	indf2,indf1
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 11414  01135C  0100               	movlb	0	; () banked
 11415  01135E  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 11416  011360  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 11420  011362  0100               	movlb	0	; () banked
 11421  011364  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 11422  011366  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;usb_device_cdc.c: 959: i--;
 11426  011368  0100               	movlb	0	; () banked
 11427  01136A  076A               	decf	CDCTxService@i& (0+255),f,b
 11428  01136C                     l8455:
 11429                           
 11430                           ; BSR set to: 0
 11431  01136C  0100               	movlb	0	; () banked
 11432  01136E  516A               	movf	CDCTxService@i& (0+255),w,b
 11433  011370  0100               	movlb	0	; () banked
 11434  011372  B4D8               	btfsc	status,2,c
 11435  011374  D018               	goto	l8467
 11436  011376  D7E8               	goto	l8447
 11437  011378                     l8457:
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;usb_device_cdc.c: 965: {
 11441                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 11442  011378  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 11443  01137C  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 11444  011380  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 11445  011384  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 11446  011388  CFDF FFE7          	movff	indf2,indf1
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 11450  01138C  0100               	movlb	0	; () banked
 11451  01138E  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 11452  011390  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 11456  011392  0100               	movlb	0	; () banked
 11457  011394  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 11458  011396  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;usb_device_cdc.c: 969: i--;
 11462  011398  0100               	movlb	0	; () banked
 11463  01139A  076A               	decf	CDCTxService@i& (0+255),f,b
 11464  01139C                     l8465:
 11465                           
 11466                           ; BSR set to: 0
 11467  01139C  0100               	movlb	0	; () banked
 11468  01139E  516A               	movf	CDCTxService@i& (0+255),w,b
 11469  0113A0  0100               	movlb	0	; () banked
 11470  0113A2  A4D8               	btfss	status,2,c
 11471  0113A4  D7E9               	goto	l8457
 11472  0113A6                     l8467:
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;usb_device_cdc.c: 970: }
 11476                           ;usb_device_cdc.c: 971: }
 11477                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 11478  0113A6  0100               	movlb	0	; () banked
 11479  0113A8  51F8               	movf	_cdc_tx_len& (0+255),w,b
 11480  0113AA  A4D8               	btfss	status,2,c
 11481  0113AC  D009               	goto	l8475
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;usb_device_cdc.c: 978: {
 11485                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 11486  0113AE  0E40               	movlw	64
 11487  0113B0  0100               	movlb	0	; () banked
 11488  0113B2  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11489  0113B4  A4D8               	btfss	status,2,c
 11490  0113B6  D002               	goto	l8473
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 11494  0113B8  0E02               	movlw	2
 11495  0113BA  D001               	goto	L1
 11496  0113BC                     l8473:
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;usb_device_cdc.c: 981: else
 11500                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 11501  0113BC  0E03               	movlw	3
 11502  0113BE                     L1:
 11503  0113BE  6E16               	movwf	_cdc_trf_state,c
 11504  0113C0                     l8475:
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;usb_device_cdc.c: 983: }
 11508                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11509  0113C0  0E01               	movlw	1
 11510  0113C2  0100               	movlb	0	; () banked
 11511  0113C4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11512  0113C6  0EA4               	movlw	low _cdc_data_tx
 11513  0113C8  0100               	movlb	0	; () banked
 11514  0113CA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11515  0113CC  0E02               	movlw	high _cdc_data_tx
 11516  0113CE  0100               	movlb	0	; () banked
 11517  0113D0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11518  0113D2  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11519  0113D6  0E02               	movlw	2
 11520  0113D8  ECC6  F090         	call	_USBTransferOnePacket
 11521  0113DC  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11522  0113E0  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11523  0113E4                     l8477:
 11524                           
 11525                           ;usb_device_cdc.c: 986: }
 11526                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 11527  0113E4  88A0               	bsf	4000,4,c	;volatile
 11528  0113E6  0012               	return		;funcret
 11529  0113E8                     __end_of_CDCTxService:
 11530                           	opt stack 0
 11531                           tblptru	equ	0xFF8
 11532                           tblptrh	equ	0xFF7
 11533                           tblptrl	equ	0xFF6
 11534                           tablat	equ	0xFF5
 11535                           prodh	equ	0xFF4
 11536                           prodl	equ	0xFF3
 11537                           intcon	equ	0xFF2
 11538                           intcon2	equ	0xFF1
 11539                           indf0	equ	0xFEF
 11540                           postinc0	equ	0xFEE
 11541                           fsr0h	equ	0xFEA
 11542                           fsr0l	equ	0xFE9
 11543                           wreg	equ	0xFE8
 11544                           indf1	equ	0xFE7
 11545                           postinc1	equ	0xFE6
 11546                           postdec1	equ	0xFE5
 11547                           fsr1h	equ	0xFE2
 11548                           fsr1l	equ	0xFE1
 11549                           indf2	equ	0xFDF
 11550                           postinc2	equ	0xFDE
 11551                           postdec2	equ	0xFDD
 11552                           fsr2h	equ	0xFDA
 11553                           fsr2l	equ	0xFD9
 11554                           status	equ	0xFD8
 11555                           
 11556 ;; *************** function _USBTransferOnePacket *****************
 11557 ;; Defined at:
 11558 ;;		line 995 in file "../My_library/usb/usb_device.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  ep              1    wreg     unsigned char 
 11561 ;;  dir             1    0[BANK0 ] unsigned char 
 11562 ;;  data            2    1[BANK0 ] PTR unsigned char 
 11563 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 11564 ;;  len             1    3[BANK0 ] unsigned char 
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;  ep              1    4[BANK0 ] unsigned char 
 11567 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 11568 ;;		 -> NULL(0), BDT(48), 
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  2    0[BANK0 ] PTR void 
 11571 ;; Registers used:
 11572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11579 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11581 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11582 ;;Total ram usage:        7 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; Hardware stack levels required when called:   11
 11585 ;; This function calls:
 11586 ;;		Nothing
 11587 ;; This function is called by:
 11588 ;;		_getsUSBUSART
 11589 ;;		_CDCTxService
 11590 ;;		_USBCDCEventHandler
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text57
 11595  01218C                     __ptext57:
 11596                           	opt stack 0
 11597  01218C                     _USBTransferOnePacket:
 11598                           	opt stack 16
 11599                           
 11600                           ;incstack = 0
 11601                           ;USBTransferOnePacket@ep stored from wreg
 11602  01218C  0100               	movlb	0	; () banked
 11603  01218E  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 11604                           
 11605                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 11606                           ;usb_device.c: 1000: if(dir != 0)
 11607  012190  0100               	movlb	0	; () banked
 11608  012192  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11609  012194  0100               	movlb	0	; () banked
 11610  012196  B4D8               	btfsc	status,2,c
 11611  012198  D008               	goto	l8181
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;usb_device.c: 1001: {
 11615                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 11616  01219A  0100               	movlb	0	; () banked
 11617  01219C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11618  01219E  0D02               	mullw	2
 11619  0121A0  0ED8               	movlw	low _pBDTEntryIn
 11620  0121A2  24F3               	addwf	prodl,w,c
 11621  0121A4  6ED9               	movwf	fsr2l,c
 11622  0121A6  0E00               	movlw	high _pBDTEntryIn
 11623  0121A8  D007               	goto	L2
 11624  0121AA                     l8181:
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;usb_device.c: 1005: else
 11628                           ;usb_device.c: 1006: {
 11629                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 11630  0121AA  0100               	movlb	0	; () banked
 11631  0121AC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11632  0121AE  0D02               	mullw	2
 11633  0121B0  0EDE               	movlw	low _pBDTEntryOut
 11634  0121B2  24F3               	addwf	prodl,w,c
 11635  0121B4  6ED9               	movwf	fsr2l,c
 11636  0121B6  0E00               	movlw	high _pBDTEntryOut
 11637  0121B8                     L2:
 11638  0121B8  20F4               	addwfc	prodh,w,c
 11639  0121BA  6EDA               	movwf	fsr2h,c
 11640  0121BC  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 11641  0121C0  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;usb_device.c: 1009: }
 11645                           ;usb_device.c: 1013: if(handle == 0)
 11646                           
 11647                           ; BSR set to: 0
 11648  0121C4  0100               	movlb	0	; () banked
 11649  0121C6  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11650  0121C8  0100               	movlb	0	; () banked
 11651  0121CA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11652  0121CC  A4D8               	btfss	status,2,c
 11653  0121CE  D007               	goto	l8189
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;usb_device.c: 1014: {
 11657                           ;usb_device.c: 1015: return 0;
 11658  0121D0  0E00               	movlw	0
 11659  0121D2  0100               	movlb	0	; () banked
 11660  0121D4  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 11661  0121D6  0E00               	movlw	0
 11662  0121D8  0100               	movlb	0	; () banked
 11663  0121DA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 11664                           
 11665                           ; BSR set to: 0
 11666  0121DC  0012               	return	
 11667  0121DE                     l8189:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;usb_device.c: 1016: }
 11671                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 11672  0121DE  0100               	movlb	0	; () banked
 11673  0121E0  EE20 F002          	lfsr	2,2
 11674  0121E4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11675  0121E6  26D9               	addwf	fsr2l,f,c
 11676  0121E8  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11677  0121EA  22DA               	addwfc	fsr2h,f,c
 11678  0121EC  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 11679  0121F0  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 11680                           
 11681                           ;usb_device.c: 1030: handle->CNT = len;
 11682  0121F4  0100               	movlb	0	; () banked
 11683  0121F6  EE20 F001          	lfsr	2,1
 11684  0121FA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11685  0121FC  26D9               	addwf	fsr2l,f,c
 11686  0121FE  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11687  012200  22DA               	addwfc	fsr2h,f,c
 11688  012202  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 11692  012206  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11693  01220A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11694  01220E  0E40               	movlw	64
 11695  012210  16DF               	andwf	indf2,f,c
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 11699  012212  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11700  012216  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11701  01221A  0E00               	movlw	0
 11702  01221C  86DB               	bsf	plusw2,3,c
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 11706  01221E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11707  012222  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11708  012226  0E00               	movlw	0
 11709  012228  8EDB               	bsf	plusw2,7,c
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;usb_device.c: 1036: if(dir != 0)
 11713  01222A  0100               	movlb	0	; () banked
 11714  01222C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11715  01222E  0100               	movlb	0	; () banked
 11716  012230  B4D8               	btfsc	status,2,c
 11717  012232  D008               	goto	l8201
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;usb_device.c: 1037: {
 11721                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11722  012234  0100               	movlb	0	; () banked
 11723  012236  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11724  012238  0D02               	mullw	2
 11725  01223A  0ED8               	movlw	low _pBDTEntryIn
 11726  01223C  24F3               	addwf	prodl,w,c
 11727  01223E  6ED9               	movwf	fsr2l,c
 11728  012240  0E00               	movlw	high _pBDTEntryIn
 11729  012242  D007               	goto	L3
 11730  012244                     l8201:
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;usb_device.c: 1041: else
 11734                           ;usb_device.c: 1042: {
 11735                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11736  012244  0100               	movlb	0	; () banked
 11737  012246  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11738  012248  0D02               	mullw	2
 11739  01224A  0EDE               	movlw	low _pBDTEntryOut
 11740  01224C  24F3               	addwf	prodl,w,c
 11741  01224E  6ED9               	movwf	fsr2l,c
 11742  012250  0E00               	movlw	high _pBDTEntryOut
 11743  012252                     L3:
 11744  012252  20F4               	addwfc	prodh,w,c
 11745  012254  6EDA               	movwf	fsr2h,c
 11746  012256  0E04               	movlw	4
 11747  012258  1ADF               	xorwf	indf2,f,c
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;usb_device.c: 1045: }
 11751                           ;usb_device.c: 1046: return (void*)handle;
 11752                           
 11753                           ; BSR set to: 0
 11754  01225A  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11755  01225E  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11756  012262  0012               	return	
 11757  012264                     __end_of_USBTransferOnePacket:
 11758                           	opt stack 0
 11759                           tblptru	equ	0xFF8
 11760                           tblptrh	equ	0xFF7
 11761                           tblptrl	equ	0xFF6
 11762                           tablat	equ	0xFF5
 11763                           prodh	equ	0xFF4
 11764                           prodl	equ	0xFF3
 11765                           intcon	equ	0xFF2
 11766                           intcon2	equ	0xFF1
 11767                           indf0	equ	0xFEF
 11768                           postinc0	equ	0xFEE
 11769                           fsr0h	equ	0xFEA
 11770                           fsr0l	equ	0xFE9
 11771                           wreg	equ	0xFE8
 11772                           indf1	equ	0xFE7
 11773                           postinc1	equ	0xFE6
 11774                           postdec1	equ	0xFE5
 11775                           fsr1h	equ	0xFE2
 11776                           fsr1l	equ	0xFE1
 11777                           indf2	equ	0xFDF
 11778                           postinc2	equ	0xFDE
 11779                           postdec2	equ	0xFDD
 11780                           plusw2	equ	0xFDB
 11781                           fsr2h	equ	0xFDA
 11782                           fsr2l	equ	0xFD9
 11783                           status	equ	0xFD8
 11784                           
 11785 ;; *************** function _UART_task *****************
 11786 ;; Defined at:
 11787 ;;		line 43 in file "../My_library/My_UART.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;		None
 11792 ;; Return value:  Size  Location     Type
 11793 ;;		None               void
 11794 ;; Registers used:
 11795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;Total ram usage:        0 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:   12
 11808 ;; This function calls:
 11809 ;;		_ringbuf_num
 11810 ;; This function is called by:
 11811 ;;		_main
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           	psect	text58
 11816  013FAA                     __ptext58:
 11817                           	opt stack 0
 11818  013FAA                     _UART_task:
 11819                           	opt stack 18
 11820                           
 11821                           ;My_UART.c: 44: if (!PIE1bits.TXIE && ringbuf_num(&uart_tx)) {
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;incstack = 0
 11825  013FAA  B89D               	btfsc	3997,4,c	;volatile
 11826  013FAC  0012               	return	
 11827  013FAE  0E6D               	movlw	low _uart_tx
 11828  013FB0  0100               	movlb	0	; () banked
 11829  013FB2  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11830  013FB4  0E01               	movlw	high _uart_tx
 11831  013FB6  0100               	movlb	0	; () banked
 11832  013FB8  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11833  013FBA  EC89  F08E         	call	_ringbuf_num	;wreg free
 11834  013FBE  0100               	movlb	0	; () banked
 11835  013FC0  5160               	movf	?_ringbuf_num& (0+255),w,b
 11836  013FC2  0100               	movlb	0	; () banked
 11837  013FC4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11838  013FC6  B4D8               	btfsc	status,2,c
 11839  013FC8  0012               	return	
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 11843  013FCA  889D               	bsf	3997,4,c	;volatile
 11844  013FCC  0012               	return	
 11845  013FCE                     __end_of_UART_task:
 11846                           	opt stack 0
 11847                           tblptru	equ	0xFF8
 11848                           tblptrh	equ	0xFF7
 11849                           tblptrl	equ	0xFF6
 11850                           tablat	equ	0xFF5
 11851                           prodh	equ	0xFF4
 11852                           prodl	equ	0xFF3
 11853                           intcon	equ	0xFF2
 11854                           intcon2	equ	0xFF1
 11855                           indf0	equ	0xFEF
 11856                           postinc0	equ	0xFEE
 11857                           fsr0h	equ	0xFEA
 11858                           fsr0l	equ	0xFE9
 11859                           wreg	equ	0xFE8
 11860                           indf1	equ	0xFE7
 11861                           postinc1	equ	0xFE6
 11862                           postdec1	equ	0xFE5
 11863                           fsr1h	equ	0xFE2
 11864                           fsr1l	equ	0xFE1
 11865                           indf2	equ	0xFDF
 11866                           postinc2	equ	0xFDE
 11867                           postdec2	equ	0xFDD
 11868                           plusw2	equ	0xFDB
 11869                           fsr2h	equ	0xFDA
 11870                           fsr2l	equ	0xFD9
 11871                           status	equ	0xFD8
 11872                           
 11873 ;; *************** function _ringbuf_num *****************
 11874 ;; Defined at:
 11875 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11878 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 11879 ;;		 -> terminal_task@command(8), 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  2    0[BANK0 ] unsigned int 
 11884 ;; Registers used:
 11885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11893 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11894 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11895 ;;Total ram usage:        8 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:   11
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_ringbuf_put
 11902 ;;		_ringbuf_pop
 11903 ;;		_ringbuf_backspace
 11904 ;;		_terminal_task
 11905 ;;		_UART_task
 11906 ;;		_USB_task
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text59
 11911  011D12                     __ptext59:
 11912                           	opt stack 0
 11913  011D12                     _ringbuf_num:
 11914                           	opt stack 13
 11915                           
 11916                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11917                           
 11918                           ;incstack = 0
 11919  011D12  0100               	movlb	0	; () banked
 11920  011D14  EE20 F006          	lfsr	2,6
 11921  011D18  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11922  011D1A  26D9               	addwf	fsr2l,f,c
 11923  011D1C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11924  011D1E  22DA               	addwfc	fsr2h,f,c
 11925  011D20  0100               	movlb	0	; () banked
 11926  011D22  EE10 F004          	lfsr	1,4
 11927  011D26  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11928  011D28  26E1               	addwf	fsr1l,f,c
 11929  011D2A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11930  011D2C  22E2               	addwfc	fsr1h,f,c
 11931  011D2E  50DE               	movf	postinc2,w,c
 11932  011D30  5CE6               	subwf	postinc1,w,c
 11933  011D32  50DE               	movf	postinc2,w,c
 11934  011D34  58E6               	subwfb	postinc1,w,c
 11935  011D36  A0D8               	btfss	status,0,c
 11936  011D38  D028               	goto	l7671
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11940  011D3A  0100               	movlb	0	; () banked
 11941  011D3C  EE20 F004          	lfsr	2,4
 11942  011D40  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11943  011D42  26D9               	addwf	fsr2l,f,c
 11944  011D44  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11945  011D46  22DA               	addwfc	fsr2h,f,c
 11946  011D48  CFDE F062          	movff	postinc2,??_ringbuf_num
 11947  011D4C  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11948  011D50  0100               	movlb	0	; () banked
 11949  011D52  EE20 F006          	lfsr	2,6
 11950  011D56  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11951  011D58  26D9               	addwf	fsr2l,f,c
 11952  011D5A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11953  011D5C  22DA               	addwfc	fsr2h,f,c
 11954  011D5E  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11955  011D62  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11956  011D66  0100               	movlb	0	; () banked
 11957  011D68  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11958  011D6A  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11959  011D6C  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11960  011D6E  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11961  011D70  0100               	movlb	0	; () banked
 11962  011D72  5162               	movf	??_ringbuf_num& (0+255),w,b
 11963  011D74  0100               	movlb	0	; () banked
 11964  011D76  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11965  011D78  0100               	movlb	0	; () banked
 11966  011D7A  6F60               	movwf	?_ringbuf_num& (0+255),b
 11967  011D7C  0100               	movlb	0	; () banked
 11968  011D7E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11969  011D80  0100               	movlb	0	; () banked
 11970  011D82  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11971  011D84  0100               	movlb	0	; () banked
 11972  011D86  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;My_ringbuf.c: 15: } else {
 11976                           
 11977                           ; BSR set to: 0
 11978  011D88  0012               	return	
 11979  011D8A                     l7671:
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11983  011D8A  0100               	movlb	0	; () banked
 11984  011D8C  EE20 F004          	lfsr	2,4
 11985  011D90  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11986  011D92  26D9               	addwf	fsr2l,f,c
 11987  011D94  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11988  011D96  22DA               	addwfc	fsr2h,f,c
 11989  011D98  CFDE F062          	movff	postinc2,??_ringbuf_num
 11990  011D9C  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11991  011DA0  0100               	movlb	0	; () banked
 11992  011DA2  EE20 F002          	lfsr	2,2
 11993  011DA6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11994  011DA8  26D9               	addwf	fsr2l,f,c
 11995  011DAA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11996  011DAC  22DA               	addwfc	fsr2h,f,c
 11997  011DAE  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11998  011DB2  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11999  011DB6  0100               	movlb	0	; () banked
 12000  011DB8  EE20 F006          	lfsr	2,6
 12001  011DBC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12002  011DBE  26D9               	addwf	fsr2l,f,c
 12003  011DC0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12004  011DC2  22DA               	addwfc	fsr2h,f,c
 12005  011DC4  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 12006  011DC8  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 12007  011DCC  0100               	movlb	0	; () banked
 12008  011DCE  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 12009  011DD0  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 12010  011DD2  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 12011  011DD4  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 12012  011DD6  0100               	movlb	0	; () banked
 12013  011DD8  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 12014  011DDA  0100               	movlb	0	; () banked
 12015  011DDC  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 12016  011DDE  0100               	movlb	0	; () banked
 12017  011DE0  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 12018  011DE2  0100               	movlb	0	; () banked
 12019  011DE4  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 12020  011DE6  0100               	movlb	0	; () banked
 12021  011DE8  5162               	movf	??_ringbuf_num& (0+255),w,b
 12022  011DEA  0100               	movlb	0	; () banked
 12023  011DEC  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 12024  011DEE  0100               	movlb	0	; () banked
 12025  011DF0  6F60               	movwf	?_ringbuf_num& (0+255),b
 12026  011DF2  0100               	movlb	0	; () banked
 12027  011DF4  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 12028  011DF6  0100               	movlb	0	; () banked
 12029  011DF8  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 12030  011DFA  0100               	movlb	0	; () banked
 12031  011DFC  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 12032                           
 12033                           ; BSR set to: 0
 12034  011DFE  0012               	return	
 12035  011E00                     __end_of_ringbuf_num:
 12036                           	opt stack 0
 12037                           tblptru	equ	0xFF8
 12038                           tblptrh	equ	0xFF7
 12039                           tblptrl	equ	0xFF6
 12040                           tablat	equ	0xFF5
 12041                           prodh	equ	0xFF4
 12042                           prodl	equ	0xFF3
 12043                           intcon	equ	0xFF2
 12044                           intcon2	equ	0xFF1
 12045                           indf0	equ	0xFEF
 12046                           postinc0	equ	0xFEE
 12047                           fsr0h	equ	0xFEA
 12048                           fsr0l	equ	0xFE9
 12049                           wreg	equ	0xFE8
 12050                           indf1	equ	0xFE7
 12051                           postinc1	equ	0xFE6
 12052                           postdec1	equ	0xFE5
 12053                           fsr1h	equ	0xFE2
 12054                           fsr1l	equ	0xFE1
 12055                           indf2	equ	0xFDF
 12056                           postinc2	equ	0xFDE
 12057                           postdec2	equ	0xFDD
 12058                           plusw2	equ	0xFDB
 12059                           fsr2h	equ	0xFDA
 12060                           fsr2l	equ	0xFD9
 12061                           status	equ	0xFD8
 12062                           
 12063 ;; *************** function _RTCC_task *****************
 12064 ;; Defined at:
 12065 ;;		line 353 in file "../My_library/My_RTCC.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;		None               void
 12072 ;; Registers used:
 12073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12083 ;;Total ram usage:        0 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:   15
 12086 ;; This function calls:
 12087 ;;		_RTCC_from_RTCC
 12088 ;; This function is called by:
 12089 ;;		_main
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           	psect	text60
 12094  013CFE                     __ptext60:
 12095                           	opt stack 0
 12096  013CFE                     _RTCC_task:
 12097                           	opt stack 15
 12098  013CFE                     l929:
 12099  013CFE  010F               	movlb	15	; () banked
 12100  013D00  B93F               	btfsc	63,4,b	;volatile
 12101  013D02  D7FD               	goto	l929
 12102                           
 12103                           ; BSR set to: 15
 12104                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 12105                           
 12106                           ; BSR set to: 15
 12107  013D04  0E00               	movlw	0
 12108  013D06  B73F               	btfsc	63,3,b	;volatile
 12109  013D08  0E01               	movlw	1
 12110  013D0A  6E27               	movwf	_now+12,c
 12111                           
 12112                           ; BSR set to: 15
 12113                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 12114  013D0C  0100               	movlb	0	; () banked
 12115  013D0E  51F4               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 12116  013D10  1827               	xorwf	_now+12,w,c
 12117  013D12  B4D8               	btfsc	status,2,c
 12118  013D14  0012               	return	
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 12122  013D16  C027  F0F4         	movff	_now+12,RTCC_task@prev_halfsec
 12123                           
 12124                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 12125  013D1A  C027  F026         	movff	_now+12,_now+11
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;My_RTCC.c: 360: time_change_flag = 1;
 12129  013D1E  0E01               	movlw	1
 12130  013D20  0100               	movlb	0	; () banked
 12131  013D22  6FF9               	movwf	_time_change_flag& (0+255),b
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 12135  013D24  0E1B               	movlw	low _now
 12136  013D26  0100               	movlb	0	; () banked
 12137  013D28  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12138  013D2A  0E00               	movlw	high _now
 12139  013D2C  0100               	movlb	0	; () banked
 12140  013D2E  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12141  013D30  EC5E  F0A0         	call	_RTCC_from_RTCC	;wreg free
 12142  013D34  0012               	return	
 12143  013D36                     __end_of_RTCC_task:
 12144                           	opt stack 0
 12145                           tblptru	equ	0xFF8
 12146                           tblptrh	equ	0xFF7
 12147                           tblptrl	equ	0xFF6
 12148                           tablat	equ	0xFF5
 12149                           prodh	equ	0xFF4
 12150                           prodl	equ	0xFF3
 12151                           intcon	equ	0xFF2
 12152                           intcon2	equ	0xFF1
 12153                           indf0	equ	0xFEF
 12154                           postinc0	equ	0xFEE
 12155                           fsr0h	equ	0xFEA
 12156                           fsr0l	equ	0xFE9
 12157                           wreg	equ	0xFE8
 12158                           indf1	equ	0xFE7
 12159                           postinc1	equ	0xFE6
 12160                           postdec1	equ	0xFE5
 12161                           fsr1h	equ	0xFE2
 12162                           fsr1l	equ	0xFE1
 12163                           indf2	equ	0xFDF
 12164                           postinc2	equ	0xFDE
 12165                           postdec2	equ	0xFDD
 12166                           plusw2	equ	0xFDB
 12167                           fsr2h	equ	0xFDA
 12168                           fsr2l	equ	0xFD9
 12169                           status	equ	0xFD8
 12170                           
 12171 ;; *************** function _RTCC_from_RTCC *****************
 12172 ;; Defined at:
 12173 ;;		line 200 in file "../My_library/My_RTCC.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;  tm              2   38[BANK0 ] PTR struct .
 12176 ;;		 -> now(14), 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;		None
 12179 ;; Return value:  Size  Location     Type
 12180 ;;		None               void
 12181 ;; Registers used:
 12182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/0
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;Total ram usage:        2 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; Hardware stack levels required when called:   14
 12195 ;; This function calls:
 12196 ;;		_RTCC_to_caltime
 12197 ;;		_caltime_to_epoch
 12198 ;; This function is called by:
 12199 ;;		_RTCC_init
 12200 ;;		_RTCC_task
 12201 ;;		_print_time
 12202 ;;		_display_time_0802
 12203 ;;		_display_time_1602
 12204 ;;		_RTCC_adjust_time_inc
 12205 ;;		_RTCC_adjust_time_dec
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text61
 12210  0140BC                     __ptext61:
 12211                           	opt stack 0
 12212  0140BC                     _RTCC_from_RTCC:
 12213                           	opt stack 11
 12214                           
 12215                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 12216                           
 12217                           ;incstack = 0
 12218  0140BC  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12219  0140C0  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12220  0140C4  ECFF  F095         	call	_RTCC_to_caltime	;wreg free
 12221                           
 12222                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 12223  0140C8  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12224  0140CC  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12225  0140D0  ECB7  F085         	call	_caltime_to_epoch	;wreg free
 12226  0140D4  0012               	return		;funcret
 12227  0140D6                     __end_of_RTCC_from_RTCC:
 12228                           	opt stack 0
 12229                           tblptru	equ	0xFF8
 12230                           tblptrh	equ	0xFF7
 12231                           tblptrl	equ	0xFF6
 12232                           tablat	equ	0xFF5
 12233                           prodh	equ	0xFF4
 12234                           prodl	equ	0xFF3
 12235                           intcon	equ	0xFF2
 12236                           intcon2	equ	0xFF1
 12237                           indf0	equ	0xFEF
 12238                           postinc0	equ	0xFEE
 12239                           fsr0h	equ	0xFEA
 12240                           fsr0l	equ	0xFE9
 12241                           wreg	equ	0xFE8
 12242                           indf1	equ	0xFE7
 12243                           postinc1	equ	0xFE6
 12244                           postdec1	equ	0xFE5
 12245                           fsr1h	equ	0xFE2
 12246                           fsr1l	equ	0xFE1
 12247                           indf2	equ	0xFDF
 12248                           postinc2	equ	0xFDE
 12249                           postdec2	equ	0xFDD
 12250                           plusw2	equ	0xFDB
 12251                           fsr2h	equ	0xFDA
 12252                           fsr2l	equ	0xFD9
 12253                           status	equ	0xFD8
 12254                           
 12255 ;; *************** function _caltime_to_epoch *****************
 12256 ;; Defined at:
 12257 ;;		line 180 in file "../My_library/My_RTCC.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;  tm              2   25[BANK0 ] PTR struct .
 12260 ;;		 -> now(14), 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  month           1   37[BANK0 ] unsigned char 
 12263 ;;  month           1   32[BANK0 ] unsigned char 
 12264 ;;  year            1   31[BANK0 ] unsigned char 
 12265 ;;  epoch           4   33[BANK0 ] unsigned long 
 12266 ;; Return value:  Size  Location     Type
 12267 ;;		None               void
 12268 ;; Registers used:
 12269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12276 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12277 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12278 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12279 ;;Total ram usage:       13 bytes
 12280 ;; Hardware stack levels used:    1
 12281 ;; Hardware stack levels required when called:   13
 12282 ;; This function calls:
 12283 ;;		___lmul
 12284 ;;		_month_length
 12285 ;; This function is called by:
 12286 ;;		_RTCC_from_RTCC
 12287 ;;		_RTCC_from_caltime
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text62
 12292  010B6E                     __ptext62:
 12293                           	opt stack 0
 12294  010B6E                     _caltime_to_epoch:
 12295                           	opt stack 11
 12296                           
 12297                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 12298                           
 12299                           ;incstack = 0
 12300  010B6E  0E00               	movlw	0
 12301  010B70  0100               	movlb	0	; () banked
 12302  010B72  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 12303  010B74  0E00               	movlw	0
 12304  010B76  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 12305  010B78  0E00               	movlw	0
 12306  010B7A  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 12307  010B7C  0E00               	movlw	0
 12308  010B7E  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 12309                           
 12310                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 12311  010B80  0E00               	movlw	0
 12312  010B82  0100               	movlb	0	; () banked
 12313  010B84  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 12314  010B86  D037               	goto	l7813
 12315  010B88                     l7799:
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 12319  010B88  0E01               	movlw	1
 12320  010B8A  0100               	movlb	0	; () banked
 12321  010B8C  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 12322  010B8E                     l7801:
 12323                           
 12324                           ; BSR set to: 0
 12325  010B8E  0E0C               	movlw	12
 12326  010B90  0100               	movlb	0	; () banked
 12327  010B92  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 12328  010B94  D001               	goto	l7805
 12329  010B96  D02D               	goto	l7811
 12330  010B98                     l7805:
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 12334  010B98  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 12335  010B9C  0100               	movlb	0	; () banked
 12336  010B9E  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 12337  010BA0  EC57  F090         	call	_month_length
 12338  010BA4  0100               	movlb	0	; () banked
 12339  010BA6  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12340  010BA8  0100               	movlb	0	; () banked
 12341  010BAA  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12342  010BAC  0100               	movlb	0	; () banked
 12343  010BAE  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12344  010BB0  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12345  010BB2  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12346  010BB4  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12347  010BB6  0E80               	movlw	128
 12348  010BB8  0100               	movlb	0	; () banked
 12349  010BBA  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12350  010BBC  0E51               	movlw	81
 12351  010BBE  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12352  010BC0  0E01               	movlw	1
 12353  010BC2  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12354  010BC4  0E00               	movlw	0
 12355  010BC6  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12356  010BC8  EC29  F09B         	call	___lmul	;wreg free
 12357  010BCC  0100               	movlb	0	; () banked
 12358  010BCE  516D               	movf	?___lmul& (0+255),w,b
 12359  010BD0  0100               	movlb	0	; () banked
 12360  010BD2  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12361  010BD4  0100               	movlb	0	; () banked
 12362  010BD6  516E               	movf	(?___lmul+1)& (0+255),w,b
 12363  010BD8  0100               	movlb	0	; () banked
 12364  010BDA  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12365  010BDC  0100               	movlb	0	; () banked
 12366  010BDE  516F               	movf	(?___lmul+2)& (0+255),w,b
 12367  010BE0  0100               	movlb	0	; () banked
 12368  010BE2  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12369  010BE4  0100               	movlb	0	; () banked
 12370  010BE6  5170               	movf	(?___lmul+3)& (0+255),w,b
 12371  010BE8  0100               	movlb	0	; () banked
 12372  010BEA  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 0
 12375  010BEC  0100               	movlb	0	; () banked
 12376  010BEE  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 12377  010BF0  D7CE               	goto	l7801
 12378  010BF2                     l7811:
 12379                           
 12380                           ; BSR set to: 0
 12381  010BF2  0100               	movlb	0	; () banked
 12382  010BF4  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 12383  010BF6                     l7813:
 12384                           
 12385                           ; BSR set to: 0
 12386  010BF6  0100               	movlb	0	; () banked
 12387  010BF8  EE20 F00A          	lfsr	2,10
 12388  010BFC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12389  010BFE  26D9               	addwf	fsr2l,f,c
 12390  010C00  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12391  010C02  22DA               	addwfc	fsr2h,f,c
 12392  010C04  50DE               	movf	postinc2,w,c
 12393  010C06  0100               	movlb	0	; () banked
 12394  010C08  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 12395  010C0A  A0D8               	btfss	status,0,c
 12396  010C0C  D7BD               	goto	l7799
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;My_RTCC.c: 185: }
 12400                           ;My_RTCC.c: 186: }
 12401                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 12402                           
 12403                           ; BSR set to: 0
 12404  010C0E  0E01               	movlw	1
 12405  010C10  0100               	movlb	0	; () banked
 12406  010C12  6F80               	movwf	caltime_to_epoch@month_3467& (0+255),b
 12407  010C14  D032               	goto	l7821
 12408  010C16                     l7817:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 12412  010C16  C080  F066         	movff	caltime_to_epoch@month_3467,month_length@month
 12413  010C1A  0100               	movlb	0	; () banked
 12414  010C1C  EE20 F00A          	lfsr	2,10
 12415  010C20  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12416  010C22  26D9               	addwf	fsr2l,f,c
 12417  010C24  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12418  010C26  22DA               	addwfc	fsr2h,f,c
 12419  010C28  50DF               	movf	indf2,w,c
 12420  010C2A  EC57  F090         	call	_month_length
 12421  010C2E  0100               	movlb	0	; () banked
 12422  010C30  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12423  010C32  0100               	movlb	0	; () banked
 12424  010C34  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12425  010C36  0100               	movlb	0	; () banked
 12426  010C38  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12427  010C3A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12428  010C3C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12429  010C3E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12430  010C40  0E80               	movlw	128
 12431  010C42  0100               	movlb	0	; () banked
 12432  010C44  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12433  010C46  0E51               	movlw	81
 12434  010C48  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12435  010C4A  0E01               	movlw	1
 12436  010C4C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12437  010C4E  0E00               	movlw	0
 12438  010C50  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12439  010C52  EC29  F09B         	call	___lmul	;wreg free
 12440  010C56  0100               	movlb	0	; () banked
 12441  010C58  516D               	movf	?___lmul& (0+255),w,b
 12442  010C5A  0100               	movlb	0	; () banked
 12443  010C5C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12444  010C5E  0100               	movlb	0	; () banked
 12445  010C60  516E               	movf	(?___lmul+1)& (0+255),w,b
 12446  010C62  0100               	movlb	0	; () banked
 12447  010C64  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12448  010C66  0100               	movlb	0	; () banked
 12449  010C68  516F               	movf	(?___lmul+2)& (0+255),w,b
 12450  010C6A  0100               	movlb	0	; () banked
 12451  010C6C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12452  010C6E  0100               	movlb	0	; () banked
 12453  010C70  5170               	movf	(?___lmul+3)& (0+255),w,b
 12454  010C72  0100               	movlb	0	; () banked
 12455  010C74  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12456                           
 12457                           ; BSR set to: 0
 12458  010C76  0100               	movlb	0	; () banked
 12459  010C78  2B80               	incf	caltime_to_epoch@month_3467& (0+255),f,b
 12460  010C7A                     l7821:
 12461                           
 12462                           ; BSR set to: 0
 12463  010C7A  0100               	movlb	0	; () banked
 12464  010C7C  EE20 F009          	lfsr	2,9
 12465  010C80  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12466  010C82  26D9               	addwf	fsr2l,f,c
 12467  010C84  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12468  010C86  22DA               	addwfc	fsr2h,f,c
 12469  010C88  50DE               	movf	postinc2,w,c
 12470  010C8A  0100               	movlb	0	; () banked
 12471  010C8C  5D80               	subwf	caltime_to_epoch@month_3467& (0+255),w,b
 12472  010C8E  A0D8               	btfss	status,0,c
 12473  010C90  D7C2               	goto	l7817
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;My_RTCC.c: 189: }
 12477                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 12478                           
 12479                           ; BSR set to: 0
 12480  010C92  0EFF               	movlw	255
 12481  010C94  0100               	movlb	0	; () banked
 12482  010C96  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12483  010C98  0EFF               	movlw	255
 12484  010C9A  0100               	movlb	0	; () banked
 12485  010C9C  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 12486  010C9E  0100               	movlb	0	; () banked
 12487  010CA0  EE20 F008          	lfsr	2,8
 12488  010CA4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12489  010CA6  26D9               	addwf	fsr2l,f,c
 12490  010CA8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12491  010CAA  22DA               	addwfc	fsr2h,f,c
 12492  010CAC  50DF               	movf	indf2,w,c
 12493  010CAE  0100               	movlb	0	; () banked
 12494  010CB0  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 12495  010CB2  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 12496  010CB4  0100               	movlb	0	; () banked
 12497  010CB6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12498  010CB8  0100               	movlb	0	; () banked
 12499  010CBA  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 12500  010CBC  0100               	movlb	0	; () banked
 12501  010CBE  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 12502  010CC0  0100               	movlb	0	; () banked
 12503  010CC2  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 12504  010CC4  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 12505  010CC8  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 12506  010CCC  0100               	movlb	0	; () banked
 12507  010CCE  0E00               	movlw	0
 12508  010CD0  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 12509  010CD2  0EFF               	movlw	-1
 12510  010CD4  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 12511  010CD6  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 12512  010CD8  0E80               	movlw	128
 12513  010CDA  0100               	movlb	0	; () banked
 12514  010CDC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12515  010CDE  0E51               	movlw	81
 12516  010CE0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12517  010CE2  0E01               	movlw	1
 12518  010CE4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12519  010CE6  0E00               	movlw	0
 12520  010CE8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12521  010CEA  EC29  F09B         	call	___lmul	;wreg free
 12522  010CEE  0100               	movlb	0	; () banked
 12523  010CF0  516D               	movf	?___lmul& (0+255),w,b
 12524  010CF2  0100               	movlb	0	; () banked
 12525  010CF4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12526  010CF6  0100               	movlb	0	; () banked
 12527  010CF8  516E               	movf	(?___lmul+1)& (0+255),w,b
 12528  010CFA  0100               	movlb	0	; () banked
 12529  010CFC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12530  010CFE  0100               	movlb	0	; () banked
 12531  010D00  516F               	movf	(?___lmul+2)& (0+255),w,b
 12532  010D02  0100               	movlb	0	; () banked
 12533  010D04  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12534  010D06  0100               	movlb	0	; () banked
 12535  010D08  5170               	movf	(?___lmul+3)& (0+255),w,b
 12536  010D0A  0100               	movlb	0	; () banked
 12537  010D0C  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12538                           
 12539                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 12540  010D0E  0100               	movlb	0	; () banked
 12541  010D10  EE20 F006          	lfsr	2,6
 12542  010D14  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12543  010D16  26D9               	addwf	fsr2l,f,c
 12544  010D18  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12545  010D1A  22DA               	addwfc	fsr2h,f,c
 12546  010D1C  50DF               	movf	indf2,w,c
 12547  010D1E  0100               	movlb	0	; () banked
 12548  010D20  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12549  010D22  0100               	movlb	0	; () banked
 12550  010D24  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12551  010D26  0100               	movlb	0	; () banked
 12552  010D28  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12553  010D2A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12554  010D2C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12555  010D2E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12556  010D30  0E10               	movlw	16
 12557  010D32  0100               	movlb	0	; () banked
 12558  010D34  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12559  010D36  0E0E               	movlw	14
 12560  010D38  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12561  010D3A  0E00               	movlw	0
 12562  010D3C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12563  010D3E  0E00               	movlw	0
 12564  010D40  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12565  010D42  EC29  F09B         	call	___lmul	;wreg free
 12566  010D46  0100               	movlb	0	; () banked
 12567  010D48  516D               	movf	?___lmul& (0+255),w,b
 12568  010D4A  0100               	movlb	0	; () banked
 12569  010D4C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12570  010D4E  0100               	movlb	0	; () banked
 12571  010D50  516E               	movf	(?___lmul+1)& (0+255),w,b
 12572  010D52  0100               	movlb	0	; () banked
 12573  010D54  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12574  010D56  0100               	movlb	0	; () banked
 12575  010D58  516F               	movf	(?___lmul+2)& (0+255),w,b
 12576  010D5A  0100               	movlb	0	; () banked
 12577  010D5C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12578  010D5E  0100               	movlb	0	; () banked
 12579  010D60  5170               	movf	(?___lmul+3)& (0+255),w,b
 12580  010D62  0100               	movlb	0	; () banked
 12581  010D64  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12582                           
 12583                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 12584  010D66  0100               	movlb	0	; () banked
 12585  010D68  EE20 F005          	lfsr	2,5
 12586  010D6C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12587  010D6E  26D9               	addwf	fsr2l,f,c
 12588  010D70  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12589  010D72  22DA               	addwfc	fsr2h,f,c
 12590  010D74  50DF               	movf	indf2,w,c
 12591  010D76  0100               	movlb	0	; () banked
 12592  010D78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12593  010D7A  0100               	movlb	0	; () banked
 12594  010D7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12595  010D7E  0100               	movlb	0	; () banked
 12596  010D80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12597  010D82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12598  010D84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12599  010D86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12600  010D88  0E3C               	movlw	60
 12601  010D8A  0100               	movlb	0	; () banked
 12602  010D8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12603  010D8E  0E00               	movlw	0
 12604  010D90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12605  010D92  0E00               	movlw	0
 12606  010D94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12607  010D96  0E00               	movlw	0
 12608  010D98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12609  010D9A  EC29  F09B         	call	___lmul	;wreg free
 12610  010D9E  0100               	movlb	0	; () banked
 12611  010DA0  516D               	movf	?___lmul& (0+255),w,b
 12612  010DA2  0100               	movlb	0	; () banked
 12613  010DA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12614  010DA6  0100               	movlb	0	; () banked
 12615  010DA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 12616  010DAA  0100               	movlb	0	; () banked
 12617  010DAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12618  010DAE  0100               	movlb	0	; () banked
 12619  010DB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 12620  010DB2  0100               	movlb	0	; () banked
 12621  010DB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12622  010DB6  0100               	movlb	0	; () banked
 12623  010DB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 12624  010DBA  0100               	movlb	0	; () banked
 12625  010DBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;My_RTCC.c: 193: epoch += tm->ss;
 12629  010DBE  0100               	movlb	0	; () banked
 12630  010DC0  EE20 F004          	lfsr	2,4
 12631  010DC4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12632  010DC6  26D9               	addwf	fsr2l,f,c
 12633  010DC8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12634  010DCA  22DA               	addwfc	fsr2h,f,c
 12635  010DCC  50DF               	movf	indf2,w,c
 12636  010DCE  0100               	movlb	0	; () banked
 12637  010DD0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12638  010DD2  0100               	movlb	0	; () banked
 12639  010DD4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12640  010DD6  0100               	movlb	0	; () banked
 12641  010DD8  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12642  010DDA  0E00               	movlw	0
 12643  010DDC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12644  010DDE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12645  010DE0  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;My_RTCC.c: 195: tm->epoch = epoch;
 12649  010DE2  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 12650  010DE6  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 12651  010DEA  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 12652  010DEE  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 12653  010DF2  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 12654  010DF6  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 12655                           
 12656                           ; BSR set to: 0
 12657  010DFA  0012               	return		;funcret
 12658  010DFC                     __end_of_caltime_to_epoch:
 12659                           	opt stack 0
 12660                           tblptru	equ	0xFF8
 12661                           tblptrh	equ	0xFF7
 12662                           tblptrl	equ	0xFF6
 12663                           tablat	equ	0xFF5
 12664                           prodh	equ	0xFF4
 12665                           prodl	equ	0xFF3
 12666                           intcon	equ	0xFF2
 12667                           intcon2	equ	0xFF1
 12668                           indf0	equ	0xFEF
 12669                           postinc0	equ	0xFEE
 12670                           fsr0h	equ	0xFEA
 12671                           fsr0l	equ	0xFE9
 12672                           wreg	equ	0xFE8
 12673                           indf1	equ	0xFE7
 12674                           postinc1	equ	0xFE6
 12675                           postdec1	equ	0xFE5
 12676                           fsr1h	equ	0xFE2
 12677                           fsr1l	equ	0xFE1
 12678                           indf2	equ	0xFDF
 12679                           postinc2	equ	0xFDE
 12680                           postdec2	equ	0xFDD
 12681                           plusw2	equ	0xFDB
 12682                           fsr2h	equ	0xFDA
 12683                           fsr2l	equ	0xFD9
 12684                           status	equ	0xFD8
 12685                           
 12686 ;; *************** function _month_length *****************
 12687 ;; Defined at:
 12688 ;;		line 56 in file "../My_library/My_RTCC.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  year            1    wreg     unsigned char 
 12691 ;;  month           1    6[BANK0 ] unsigned char 
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;  year            1   11[BANK0 ] unsigned char 
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  1    wreg      unsigned char 
 12696 ;; Registers used:
 12697 ;;		wreg, status,2, status,0, cstack
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12703 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12706 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;Total ram usage:        6 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:   12
 12710 ;; This function calls:
 12711 ;;		___awmod
 12712 ;; This function is called by:
 12713 ;;		_epoch_to_caltime
 12714 ;;		_caltime_to_epoch
 12715 ;;		_terminal_time
 12716 ;;		_RTCC_adjust_time_inc
 12717 ;;		_RTCC_adjust_time_dec
 12718 ;; This function uses a non-reentrant model
 12719 ;;
 12720                           
 12721                           	psect	text63
 12722  0120AE                     __ptext63:
 12723                           	opt stack 0
 12724  0120AE                     _month_length:
 12725                           	opt stack 11
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;incstack = 0
 12729                           ;month_length@year stored from wreg
 12730  0120AE  0100               	movlb	0	; () banked
 12731  0120B0  6F6B               	movwf	month_length@year& (0+255),b
 12732                           
 12733                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 12734  0120B2  0E02               	movlw	2
 12735  0120B4  0100               	movlb	0	; () banked
 12736  0120B6  1966               	xorwf	month_length@month& (0+255),w,b
 12737  0120B8  A4D8               	btfss	status,2,c
 12738  0120BA  D03E               	goto	l7687
 12739                           
 12740                           ; BSR set to: 0
 12741  0120BC  C06B  F060         	movff	month_length@year,___awmod@dividend
 12742  0120C0  0100               	movlb	0	; () banked
 12743  0120C2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12744  0120C4  0E00               	movlw	0
 12745  0120C6  0100               	movlb	0	; () banked
 12746  0120C8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12747  0120CA  0E64               	movlw	100
 12748  0120CC  6F62               	movwf	___awmod@divisor& (0+255),b
 12749  0120CE  EC26  F098         	call	___awmod	;wreg free
 12750  0120D2  0100               	movlb	0	; () banked
 12751  0120D4  5160               	movf	?___awmod& (0+255),w,b
 12752  0120D6  0100               	movlb	0	; () banked
 12753  0120D8  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12754  0120DA  A4D8               	btfss	status,2,c
 12755  0120DC  D002               	goto	u7310
 12756  0120DE  0E01               	movlw	1
 12757  0120E0  D001               	goto	u7320
 12758  0120E2                     u7310:
 12759  0120E2  0E00               	movlw	0
 12760  0120E4                     u7320:
 12761  0120E4  0800               	sublw	0
 12762  0120E6  0100               	movlb	0	; () banked
 12763  0120E8  6F67               	movwf	??_month_length& (0+255),b
 12764  0120EA  C06B  F060         	movff	month_length@year,___awmod@dividend
 12765  0120EE  0100               	movlb	0	; () banked
 12766  0120F0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12767  0120F2  0E01               	movlw	1
 12768  0120F4  0100               	movlb	0	; () banked
 12769  0120F6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12770  0120F8  0E90               	movlw	144
 12771  0120FA  6F62               	movwf	___awmod@divisor& (0+255),b
 12772  0120FC  EC26  F098         	call	___awmod	;wreg free
 12773  012100  0100               	movlb	0	; () banked
 12774  012102  5160               	movf	?___awmod& (0+255),w,b
 12775  012104  0100               	movlb	0	; () banked
 12776  012106  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12777  012108  A4D8               	btfss	status,2,c
 12778  01210A  D004               	goto	u7330
 12779  01210C  0100               	movlb	0	; () banked
 12780  01210E  6B68               	clrf	(??_month_length+1)& (0+255),b
 12781  012110  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12782  012112  D002               	goto	u7348
 12783  012114                     u7330:
 12784  012114  0100               	movlb	0	; () banked
 12785  012116  6B68               	clrf	(??_month_length+1)& (0+255),b
 12786  012118                     u7348:
 12787  012118  C06B  F069         	movff	month_length@year,??_month_length+2
 12788  01211C  0E03               	movlw	3
 12789  01211E  0100               	movlb	0	; () banked
 12790  012120  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12791  012122  A4D8               	btfss	status,2,c
 12792  012124  D002               	goto	u7350
 12793  012126  0E01               	movlw	1
 12794  012128  D001               	goto	u7360
 12795  01212A                     u7350:
 12796  01212A  0E00               	movlw	0
 12797  01212C                     u7360:
 12798  01212C  0100               	movlb	0	; () banked
 12799  01212E  2568               	addwf	(??_month_length+1)& (0+255),w,b
 12800  012130  0100               	movlb	0	; () banked
 12801  012132  2567               	addwf	??_month_length& (0+255),w,b
 12802  012134  0F1C               	addlw	28
 12803                           
 12804                           ; BSR set to: 0
 12805                           
 12806                           ; BSR set to: 0
 12807  012136  0012               	return	
 12808  012138                     l7687:
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 12812  012138  0100               	movlb	0	; () banked
 12813  01213A  5166               	movf	month_length@month& (0+255),w,b
 12814  01213C  0B01               	andlw	1
 12815  01213E  0100               	movlb	0	; () banked
 12816  012140  6F67               	movwf	??_month_length& (0+255),b
 12817  012142  6B68               	clrf	(??_month_length+1)& (0+255),b
 12818  012144  0100               	movlb	0	; () banked
 12819  012146  1F67               	comf	??_month_length& (0+255),f,b
 12820  012148  1F68               	comf	(??_month_length+1)& (0+255),f,b
 12821  01214A  4B67               	infsnz	??_month_length& (0+255),f,b
 12822  01214C  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12823  01214E  0100               	movlb	0	; () banked
 12824  012150  5166               	movf	month_length@month& (0+255),w,b
 12825  012152  0100               	movlb	0	; () banked
 12826  012154  6F69               	movwf	(??_month_length+2)& (0+255),b
 12827  012156  6B6A               	clrf	(??_month_length+3)& (0+255),b
 12828  012158  0100               	movlb	0	; () banked
 12829  01215A  5167               	movf	??_month_length& (0+255),w,b
 12830  01215C  0100               	movlb	0	; () banked
 12831  01215E  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 12832  012160  0100               	movlb	0	; () banked
 12833  012162  5168               	movf	(??_month_length+1)& (0+255),w,b
 12834  012164  0100               	movlb	0	; () banked
 12835  012166  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 12836  012168  0E0D               	movlw	13
 12837  01216A  0100               	movlb	0	; () banked
 12838  01216C  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12839  01216E  0E00               	movlw	0
 12840  012170  176A               	andwf	(??_month_length+3)& (0+255),f,b
 12841  012172  0E04               	movlw	4
 12842  012174  0100               	movlb	0	; () banked
 12843  012176  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 12844  012178  0100               	movlb	0	; () banked
 12845  01217A  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 12846  01217C  A4D8               	btfss	status,2,c
 12847  01217E  D002               	goto	u7370
 12848  012180  0E01               	movlw	1
 12849  012182  D001               	goto	u7380
 12850  012184                     u7370:
 12851  012184  0E00               	movlw	0
 12852  012186                     u7380:
 12853  012186  0800               	sublw	0
 12854  012188  0F1F               	addlw	31
 12855                           
 12856                           ; BSR set to: 0
 12857  01218A  0012               	return	
 12858  01218C                     __end_of_month_length:
 12859                           	opt stack 0
 12860                           tblptru	equ	0xFF8
 12861                           tblptrh	equ	0xFF7
 12862                           tblptrl	equ	0xFF6
 12863                           tablat	equ	0xFF5
 12864                           prodh	equ	0xFF4
 12865                           prodl	equ	0xFF3
 12866                           intcon	equ	0xFF2
 12867                           intcon2	equ	0xFF1
 12868                           indf0	equ	0xFEF
 12869                           postinc0	equ	0xFEE
 12870                           fsr0h	equ	0xFEA
 12871                           fsr0l	equ	0xFE9
 12872                           wreg	equ	0xFE8
 12873                           indf1	equ	0xFE7
 12874                           postinc1	equ	0xFE6
 12875                           postdec1	equ	0xFE5
 12876                           fsr1h	equ	0xFE2
 12877                           fsr1l	equ	0xFE1
 12878                           indf2	equ	0xFDF
 12879                           postinc2	equ	0xFDE
 12880                           postdec2	equ	0xFDD
 12881                           plusw2	equ	0xFDB
 12882                           fsr2h	equ	0xFDA
 12883                           fsr2l	equ	0xFD9
 12884                           status	equ	0xFD8
 12885                           
 12886 ;; *************** function ___awmod *****************
 12887 ;; Defined at:
 12888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;  dividend        2    0[BANK0 ] int 
 12891 ;;  divisor         2    2[BANK0 ] int 
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;  sign            1    5[BANK0 ] unsigned char 
 12894 ;;  counter         1    4[BANK0 ] unsigned char 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  2    0[BANK0 ] int 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12907 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;Total ram usage:        6 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:   11
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_month_length
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text64
 12919  01304C                     __ptext64:
 12920                           	opt stack 0
 12921  01304C                     ___awmod:
 12922                           	opt stack 11
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;incstack = 0
 12926  01304C  0E00               	movlw	0
 12927  01304E  0100               	movlb	0	; () banked
 12928  013050  6F65               	movwf	___awmod@sign& (0+255),b
 12929                           
 12930                           ; BSR set to: 0
 12931  013052  0100               	movlb	0	; () banked
 12932  013054  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12933  013056  D008               	goto	l7635
 12934                           
 12935                           ; BSR set to: 0
 12936  013058  0100               	movlb	0	; () banked
 12937  01305A  6D60               	negf	___awmod@dividend& (0+255),b
 12938  01305C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12939  01305E  B0D8               	btfsc	status,0,c
 12940  013060  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12941                           
 12942                           ; BSR set to: 0
 12943  013062  0E01               	movlw	1
 12944  013064  0100               	movlb	0	; () banked
 12945  013066  6F65               	movwf	___awmod@sign& (0+255),b
 12946  013068                     l7635:
 12947                           
 12948                           ; BSR set to: 0
 12949  013068  0100               	movlb	0	; () banked
 12950  01306A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12951  01306C  D005               	goto	l7639
 12952                           
 12953                           ; BSR set to: 0
 12954  01306E  0100               	movlb	0	; () banked
 12955  013070  6D62               	negf	___awmod@divisor& (0+255),b
 12956  013072  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12957  013074  B0D8               	btfsc	status,0,c
 12958  013076  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12959  013078                     l7639:
 12960                           
 12961                           ; BSR set to: 0
 12962  013078  0100               	movlb	0	; () banked
 12963  01307A  5162               	movf	___awmod@divisor& (0+255),w,b
 12964  01307C  0100               	movlb	0	; () banked
 12965  01307E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12966  013080  B4D8               	btfsc	status,2,c
 12967  013082  D026               	goto	l7655
 12968                           
 12969                           ; BSR set to: 0
 12970  013084  0E01               	movlw	1
 12971  013086  0100               	movlb	0	; () banked
 12972  013088  6F64               	movwf	___awmod@counter& (0+255),b
 12973  01308A  D006               	goto	l7645
 12974  01308C                     l7643:
 12975                           
 12976                           ; BSR set to: 0
 12977  01308C  0100               	movlb	0	; () banked
 12978  01308E  90D8               	bcf	status,0,c
 12979  013090  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12980  013092  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12981  013094  0100               	movlb	0	; () banked
 12982  013096  2B64               	incf	___awmod@counter& (0+255),f,b
 12983  013098                     l7645:
 12984                           
 12985                           ; BSR set to: 0
 12986  013098  0100               	movlb	0	; () banked
 12987  01309A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12988  01309C  D7F7               	goto	l7643
 12989  01309E                     l7647:
 12990                           
 12991                           ; BSR set to: 0
 12992  01309E  0100               	movlb	0	; () banked
 12993  0130A0  5162               	movf	___awmod@divisor& (0+255),w,b
 12994  0130A2  0100               	movlb	0	; () banked
 12995  0130A4  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12996  0130A6  0100               	movlb	0	; () banked
 12997  0130A8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12998  0130AA  0100               	movlb	0	; () banked
 12999  0130AC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13000  0130AE  A0D8               	btfss	status,0,c
 13001  0130B0  D008               	goto	l7651
 13002                           
 13003                           ; BSR set to: 0
 13004  0130B2  0100               	movlb	0	; () banked
 13005  0130B4  5162               	movf	___awmod@divisor& (0+255),w,b
 13006  0130B6  0100               	movlb	0	; () banked
 13007  0130B8  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13008  0130BA  0100               	movlb	0	; () banked
 13009  0130BC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13010  0130BE  0100               	movlb	0	; () banked
 13011  0130C0  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13012  0130C2                     l7651:
 13013                           
 13014                           ; BSR set to: 0
 13015  0130C2  0100               	movlb	0	; () banked
 13016  0130C4  90D8               	bcf	status,0,c
 13017  0130C6  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13018  0130C8  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13019                           
 13020                           ; BSR set to: 0
 13021  0130CA  0100               	movlb	0	; () banked
 13022  0130CC  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13023  0130CE  D7E7               	goto	l7647
 13024  0130D0                     l7655:
 13025                           
 13026                           ; BSR set to: 0
 13027  0130D0  0100               	movlb	0	; () banked
 13028  0130D2  5165               	movf	___awmod@sign& (0+255),w,b
 13029  0130D4  0100               	movlb	0	; () banked
 13030  0130D6  B4D8               	btfsc	status,2,c
 13031  0130D8  D005               	goto	l7659
 13032                           
 13033                           ; BSR set to: 0
 13034  0130DA  0100               	movlb	0	; () banked
 13035  0130DC  6D60               	negf	___awmod@dividend& (0+255),b
 13036  0130DE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13037  0130E0  B0D8               	btfsc	status,0,c
 13038  0130E2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13039  0130E4                     l7659:
 13040                           
 13041                           ; BSR set to: 0
 13042  0130E4  C060  F060         	movff	___awmod@dividend,?___awmod
 13043  0130E8  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13044  0130EC  0012               	return	
 13045  0130EE                     __end_of___awmod:
 13046                           	opt stack 0
 13047                           tblptru	equ	0xFF8
 13048                           tblptrh	equ	0xFF7
 13049                           tblptrl	equ	0xFF6
 13050                           tablat	equ	0xFF5
 13051                           prodh	equ	0xFF4
 13052                           prodl	equ	0xFF3
 13053                           intcon	equ	0xFF2
 13054                           intcon2	equ	0xFF1
 13055                           indf0	equ	0xFEF
 13056                           postinc0	equ	0xFEE
 13057                           fsr0h	equ	0xFEA
 13058                           fsr0l	equ	0xFE9
 13059                           wreg	equ	0xFE8
 13060                           indf1	equ	0xFE7
 13061                           postinc1	equ	0xFE6
 13062                           postdec1	equ	0xFE5
 13063                           fsr1h	equ	0xFE2
 13064                           fsr1l	equ	0xFE1
 13065                           indf2	equ	0xFDF
 13066                           postinc2	equ	0xFDE
 13067                           postdec2	equ	0xFDD
 13068                           plusw2	equ	0xFDB
 13069                           fsr2h	equ	0xFDA
 13070                           fsr2l	equ	0xFD9
 13071                           status	equ	0xFD8
 13072                           
 13073 ;; *************** function ___lmul *****************
 13074 ;; Defined at:
 13075 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13078 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;  product         4   21[BANK0 ] unsigned long 
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  4   13[BANK0 ] unsigned long 
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13090 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13091 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13093 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13094 ;;Total ram usage:       12 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:   11
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_get_quot_rem
 13101 ;;		_caltime_to_epoch
 13102 ;;		_RTCC_adjust_time_inc
 13103 ;;		_RTCC_adjust_time_dec
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           	psect	text65
 13108  013652                     __ptext65:
 13109                           	opt stack 0
 13110  013652                     ___lmul:
 13111                           	opt stack 12
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;incstack = 0
 13115  013652  0E00               	movlw	0
 13116  013654  0100               	movlb	0	; () banked
 13117  013656  6F75               	movwf	___lmul@product& (0+255),b
 13118  013658  0E00               	movlw	0
 13119  01365A  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13120  01365C  0E00               	movlw	0
 13121  01365E  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13122  013660  0E00               	movlw	0
 13123  013662  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13124  013664                     l7693:
 13125                           
 13126                           ; BSR set to: 0
 13127  013664  0100               	movlb	0	; () banked
 13128  013666  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13129  013668  D010               	goto	l7697
 13130                           
 13131                           ; BSR set to: 0
 13132  01366A  0100               	movlb	0	; () banked
 13133  01366C  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13134  01366E  0100               	movlb	0	; () banked
 13135  013670  2775               	addwf	___lmul@product& (0+255),f,b
 13136  013672  0100               	movlb	0	; () banked
 13137  013674  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13138  013676  0100               	movlb	0	; () banked
 13139  013678  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13140  01367A  0100               	movlb	0	; () banked
 13141  01367C  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13142  01367E  0100               	movlb	0	; () banked
 13143  013680  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13144  013682  0100               	movlb	0	; () banked
 13145  013684  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13146  013686  0100               	movlb	0	; () banked
 13147  013688  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13148  01368A                     l7697:
 13149                           
 13150                           ; BSR set to: 0
 13151  01368A  0100               	movlb	0	; () banked
 13152  01368C  90D8               	bcf	status,0,c
 13153  01368E  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13154  013690  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13155  013692  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13156  013694  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13157                           
 13158                           ; BSR set to: 0
 13159  013696  0100               	movlb	0	; () banked
 13160  013698  90D8               	bcf	status,0,c
 13161  01369A  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13162  01369C  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13163  01369E  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13164  0136A0  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13165  0136A2  0100               	movlb	0	; () banked
 13166  0136A4  516D               	movf	___lmul@multiplier& (0+255),w,b
 13167  0136A6  0100               	movlb	0	; () banked
 13168  0136A8  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13169  0136AA  0100               	movlb	0	; () banked
 13170  0136AC  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13171  0136AE  0100               	movlb	0	; () banked
 13172  0136B0  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13173  0136B2  A4D8               	btfss	status,2,c
 13174  0136B4  D7D7               	goto	l7693
 13175                           
 13176                           ; BSR set to: 0
 13177  0136B6  C075  F06D         	movff	___lmul@product,?___lmul
 13178  0136BA  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13179  0136BE  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13180  0136C2  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13181                           
 13182                           ; BSR set to: 0
 13183  0136C6  0012               	return		;funcret
 13184  0136C8                     __end_of___lmul:
 13185                           	opt stack 0
 13186                           tblptru	equ	0xFF8
 13187                           tblptrh	equ	0xFF7
 13188                           tblptrl	equ	0xFF6
 13189                           tablat	equ	0xFF5
 13190                           prodh	equ	0xFF4
 13191                           prodl	equ	0xFF3
 13192                           intcon	equ	0xFF2
 13193                           intcon2	equ	0xFF1
 13194                           indf0	equ	0xFEF
 13195                           postinc0	equ	0xFEE
 13196                           fsr0h	equ	0xFEA
 13197                           fsr0l	equ	0xFE9
 13198                           wreg	equ	0xFE8
 13199                           indf1	equ	0xFE7
 13200                           postinc1	equ	0xFE6
 13201                           postdec1	equ	0xFE5
 13202                           fsr1h	equ	0xFE2
 13203                           fsr1l	equ	0xFE1
 13204                           indf2	equ	0xFDF
 13205                           postinc2	equ	0xFDE
 13206                           postdec2	equ	0xFDD
 13207                           plusw2	equ	0xFDB
 13208                           fsr2h	equ	0xFDA
 13209                           fsr2l	equ	0xFD9
 13210                           status	equ	0xFD8
 13211                           
 13212 ;; *************** function _RTCC_to_caltime *****************
 13213 ;; Defined at:
 13214 ;;		line 90 in file "../My_library/My_RTCC.c"
 13215 ;; Parameters:    Size  Location     Type
 13216 ;;  tm              2    2[BANK0 ] PTR struct .
 13217 ;;		 -> now(14), 
 13218 ;; Auto vars:     Size  Location     Type
 13219 ;;  dumy            1    4[BANK0 ] unsigned char 
 13220 ;; Return value:  Size  Location     Type
 13221 ;;		None               void
 13222 ;; Registers used:
 13223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13224 ;; Tracked objects:
 13225 ;;		On entry : 0/0
 13226 ;;		On exit  : 0/0
 13227 ;;		Unchanged: 0/0
 13228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13232 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13233 ;;Total ram usage:        3 bytes
 13234 ;; Hardware stack levels used:    1
 13235 ;; Hardware stack levels required when called:   12
 13236 ;; This function calls:
 13237 ;;		_x_to_d
 13238 ;; This function is called by:
 13239 ;;		_RTCC_from_RTCC
 13240 ;; This function uses a non-reentrant model
 13241 ;;
 13242                           
 13243                           	psect	text66
 13244  012BFE                     __ptext66:
 13245                           	opt stack 0
 13246  012BFE                     _RTCC_to_caltime:
 13247                           	opt stack 12
 13248  012BFE                     l807:
 13249  012BFE  010F               	movlb	15	; () banked
 13250  012C00  B93F               	btfsc	63,4,b	;volatile
 13251  012C02  D7FD               	goto	l807
 13252                           
 13253                           ; BSR set to: 15
 13254                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 13255  012C04  010F               	movlb	15	; () banked
 13256  012C06  813F               	bsf	63,0,b	;volatile
 13257                           
 13258                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 13259  012C08  010F               	movlb	15	; () banked
 13260  012C0A  833F               	bsf	63,1,b	;volatile
 13261                           
 13262                           ; BSR set to: 15
 13263                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 13264  012C0C  0100               	movlb	0	; () banked
 13265  012C0E  EE20 F00A          	lfsr	2,10
 13266  012C12  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13267  012C14  26D9               	addwf	fsr2l,f,c
 13268  012C16  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13269  012C18  22DA               	addwfc	fsr2h,f,c
 13270  012C1A  010F               	movlb	15	; () banked
 13271  012C1C  513A               	movf	58,w,b	;volatile
 13272  012C1E  EC09  F0A0         	call	_x_to_d
 13273  012C22  6EDF               	movwf	indf2,c
 13274                           
 13275                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 13276  012C24  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13277                           
 13278                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 13279  012C28  0100               	movlb	0	; () banked
 13280  012C2A  EE20 F008          	lfsr	2,8
 13281  012C2E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13282  012C30  26D9               	addwf	fsr2l,f,c
 13283  012C32  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13284  012C34  22DA               	addwfc	fsr2h,f,c
 13285  012C36  010F               	movlb	15	; () banked
 13286  012C38  513A               	movf	58,w,b	;volatile
 13287  012C3A  EC09  F0A0         	call	_x_to_d
 13288  012C3E  6EDF               	movwf	indf2,c
 13289                           
 13290                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 13291  012C40  0100               	movlb	0	; () banked
 13292  012C42  EE20 F009          	lfsr	2,9
 13293  012C46  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13294  012C48  26D9               	addwf	fsr2l,f,c
 13295  012C4A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13296  012C4C  22DA               	addwfc	fsr2h,f,c
 13297  012C4E  010F               	movlb	15	; () banked
 13298  012C50  513B               	movf	59,w,b	;volatile
 13299  012C52  EC09  F0A0         	call	_x_to_d
 13300  012C56  6EDF               	movwf	indf2,c
 13301                           
 13302                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 13303  012C58  0100               	movlb	0	; () banked
 13304  012C5A  EE20 F006          	lfsr	2,6
 13305  012C5E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13306  012C60  26D9               	addwf	fsr2l,f,c
 13307  012C62  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13308  012C64  22DA               	addwfc	fsr2h,f,c
 13309  012C66  010F               	movlb	15	; () banked
 13310  012C68  513A               	movf	58,w,b	;volatile
 13311  012C6A  EC09  F0A0         	call	_x_to_d
 13312  012C6E  6EDF               	movwf	indf2,c
 13313                           
 13314                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 13315  012C70  0100               	movlb	0	; () banked
 13316  012C72  EE20 F007          	lfsr	2,7
 13317  012C76  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13318  012C78  26D9               	addwf	fsr2l,f,c
 13319  012C7A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13320  012C7C  22DA               	addwfc	fsr2h,f,c
 13321  012C7E  010F               	movlb	15	; () banked
 13322  012C80  513B               	movf	59,w,b	;volatile
 13323  012C82  EC09  F0A0         	call	_x_to_d
 13324  012C86  6EDF               	movwf	indf2,c
 13325                           
 13326                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 13327  012C88  0100               	movlb	0	; () banked
 13328  012C8A  EE20 F004          	lfsr	2,4
 13329  012C8E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13330  012C90  26D9               	addwf	fsr2l,f,c
 13331  012C92  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13332  012C94  22DA               	addwfc	fsr2h,f,c
 13333  012C96  010F               	movlb	15	; () banked
 13334  012C98  513A               	movf	58,w,b	;volatile
 13335  012C9A  EC09  F0A0         	call	_x_to_d
 13336  012C9E  6EDF               	movwf	indf2,c
 13337                           
 13338                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 13339  012CA0  0100               	movlb	0	; () banked
 13340  012CA2  EE20 F005          	lfsr	2,5
 13341  012CA6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13342  012CA8  26D9               	addwf	fsr2l,f,c
 13343  012CAA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13344  012CAC  22DA               	addwfc	fsr2h,f,c
 13345  012CAE  010F               	movlb	15	; () banked
 13346  012CB0  513B               	movf	59,w,b	;volatile
 13347  012CB2  EC09  F0A0         	call	_x_to_d
 13348  012CB6  6EDF               	movwf	indf2,c
 13349  012CB8  0012               	return		;funcret
 13350  012CBA                     __end_of_RTCC_to_caltime:
 13351                           	opt stack 0
 13352                           tblptru	equ	0xFF8
 13353                           tblptrh	equ	0xFF7
 13354                           tblptrl	equ	0xFF6
 13355                           tablat	equ	0xFF5
 13356                           prodh	equ	0xFF4
 13357                           prodl	equ	0xFF3
 13358                           intcon	equ	0xFF2
 13359                           intcon2	equ	0xFF1
 13360                           indf0	equ	0xFEF
 13361                           postinc0	equ	0xFEE
 13362                           fsr0h	equ	0xFEA
 13363                           fsr0l	equ	0xFE9
 13364                           wreg	equ	0xFE8
 13365                           indf1	equ	0xFE7
 13366                           postinc1	equ	0xFE6
 13367                           postdec1	equ	0xFE5
 13368                           fsr1h	equ	0xFE2
 13369                           fsr1l	equ	0xFE1
 13370                           indf2	equ	0xFDF
 13371                           postinc2	equ	0xFDE
 13372                           postdec2	equ	0xFDD
 13373                           plusw2	equ	0xFDB
 13374                           fsr2h	equ	0xFDA
 13375                           fsr2l	equ	0xFD9
 13376                           status	equ	0xFD8
 13377                           
 13378 ;; *************** function _x_to_d *****************
 13379 ;; Defined at:
 13380 ;;		line 52 in file "../My_library/My_RTCC.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;  hex             1    wreg     unsigned char 
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;  hex             1    1[BANK0 ] unsigned char 
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  1    wreg      unsigned char 
 13387 ;; Registers used:
 13388 ;;		wreg, status,2, status,0, prodl, prodh
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13398 ;;Total ram usage:        2 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:   11
 13401 ;; This function calls:
 13402 ;;		Nothing
 13403 ;; This function is called by:
 13404 ;;		_RTCC_to_caltime
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text67
 13409  014012                     __ptext67:
 13410                           	opt stack 0
 13411  014012                     _x_to_d:
 13412                           	opt stack 12
 13413                           
 13414                           ;incstack = 0
 13415                           ;x_to_d@hex stored from wreg
 13416  014012  0100               	movlb	0	; () banked
 13417  014014  6F61               	movwf	x_to_d@hex& (0+255),b
 13418                           
 13419                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 13420  014016  C061  F060         	movff	x_to_d@hex,??_x_to_d
 13421  01401A  0E0F               	movlw	15
 13422  01401C  0100               	movlb	0	; () banked
 13423  01401E  1760               	andwf	??_x_to_d& (0+255),f,b
 13424  014020  0100               	movlb	0	; () banked
 13425  014022  3961               	swapf	x_to_d@hex& (0+255),w,b
 13426  014024  0B0F               	andlw	15
 13427  014026  0B0F               	andlw	15
 13428  014028  0D0A               	mullw	10
 13429  01402A  50F3               	movf	prodl,w,c
 13430  01402C  0100               	movlb	0	; () banked
 13431  01402E  2560               	addwf	??_x_to_d& (0+255),w,b
 13432  014030  0012               	return	
 13433  014032                     __end_of_x_to_d:
 13434                           	opt stack 0
 13435                           tblptru	equ	0xFF8
 13436                           tblptrh	equ	0xFF7
 13437                           tblptrl	equ	0xFF6
 13438                           tablat	equ	0xFF5
 13439                           prodh	equ	0xFF4
 13440                           prodl	equ	0xFF3
 13441                           intcon	equ	0xFF2
 13442                           intcon2	equ	0xFF1
 13443                           indf0	equ	0xFEF
 13444                           postinc0	equ	0xFEE
 13445                           fsr0h	equ	0xFEA
 13446                           fsr0l	equ	0xFE9
 13447                           wreg	equ	0xFE8
 13448                           indf1	equ	0xFE7
 13449                           postinc1	equ	0xFE6
 13450                           postdec1	equ	0xFE5
 13451                           fsr1h	equ	0xFE2
 13452                           fsr1l	equ	0xFE1
 13453                           indf2	equ	0xFDF
 13454                           postinc2	equ	0xFDE
 13455                           postdec2	equ	0xFDD
 13456                           plusw2	equ	0xFDB
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function _ISR *****************
 13462 ;; Defined at:
 13463 ;;		line 36 in file "main.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;		None
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;		None
 13468 ;; Return value:  Size  Location     Type
 13469 ;;		None               void
 13470 ;; Registers used:
 13471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13472 ;; Tracked objects:
 13473 ;;		On entry : 0/0
 13474 ;;		On exit  : 0/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13479 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13480 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13481 ;;Total ram usage:       14 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; Hardware stack levels required when called:   10
 13484 ;; This function calls:
 13485 ;;		_UART_ISR
 13486 ;;		_USB_ISR
 13487 ;; This function is called by:
 13488 ;;		Interrupt level 2
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           	psect	intcode
 13493  000008                     __pintcode:
 13494                           	opt stack 0
 13495  000008                     _ISR:
 13496                           	opt stack 11
 13497                           
 13498                           ; BSR set to: 0
 13499                           ;incstack = 0
 13500  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13501  00000A  CFFA F04B          	movff	pclath,??_ISR
 13502  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 13503  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 13504  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 13505  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 13506  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 13507  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 13508  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 13509  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 13510  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 13511  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 13512  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 13513  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 13514  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 13515                           
 13516                           ;main.c: 37: USB_ISR();
 13517  000042  EC8C  F0A0         	call	_USB_ISR	;wreg free
 13518                           
 13519                           ;main.c: 38: UART_ISR();
 13520  000046  ECA3  F09D         	call	_UART_ISR	;wreg free
 13521                           
 13522                           ;main.c: 39: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 13523  00004A  B4F2               	btfsc	intcon,2,c	;volatile
 13524  00004C  AAF2               	btfss	intcon,5,c	;volatile
 13525  00004E  D001               	goto	i2l1321
 13526                           
 13527                           ;main.c: 40: INTCONbits.T0IF = 0;
 13528  000050  94F2               	bcf	intcon,2,c	;volatile
 13529  000052                     i2l1321:
 13530                           
 13531                           ;main.c: 41: }
 13532                           ;main.c: 42: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 13533  000052  B09E               	btfsc	3998,0,c	;volatile
 13534  000054  A09D               	btfss	3997,0,c	;volatile
 13535  000056  D003               	goto	i2l9291
 13536                           
 13537                           ;main.c: 43: PIR1bits.TMR1IF = 0;
 13538  000058  909E               	bcf	3998,0,c	;volatile
 13539                           
 13540                           ;main.c: 44: TMR1H = 0xC0;
 13541  00005A  0EC0               	movlw	192
 13542  00005C  6ECF               	movwf	4047,c	;volatile
 13543  00005E                     i2l9291:
 13544                           
 13545                           ;main.c: 45: }
 13546                           ;main.c: 46: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 13547  00005E  B2A1               	btfsc	4001,1,c	;volatile
 13548  000060  A2A0               	btfss	4000,1,c	;volatile
 13549  000062  D001               	goto	i2l1324
 13550                           
 13551                           ;main.c: 47: PIR2bits.TMR3IF = 0;
 13552  000064  92A1               	bcf	4001,1,c	;volatile
 13553  000066                     i2l1324:
 13554  000066  C058  FFF5         	movff	??_ISR+13,tablat
 13555  00006A  C057  FFF8         	movff	??_ISR+12,tblptru
 13556  00006E  C056  FFF7         	movff	??_ISR+11,tblptrh
 13557  000072  C055  FFF6         	movff	??_ISR+10,tblptrl
 13558  000076  C054  FFF4         	movff	??_ISR+9,prodh
 13559  00007A  C053  FFF3         	movff	??_ISR+8,prodl
 13560  00007E  C052  FFDA         	movff	??_ISR+7,fsr2h
 13561  000082  C051  FFD9         	movff	??_ISR+6,fsr2l
 13562  000086  C050  FFE2         	movff	??_ISR+5,fsr1h
 13563  00008A  C04F  FFE1         	movff	??_ISR+4,fsr1l
 13564  00008E  C04E  FFEA         	movff	??_ISR+3,fsr0h
 13565  000092  C04D  FFE9         	movff	??_ISR+2,fsr0l
 13566  000096  C04C  FFFB         	movff	??_ISR+1,pclatu
 13567  00009A  C04B  FFFA         	movff	??_ISR,pclath
 13568  00009E  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13569  0000A0  0011               	retfie		f
 13570  0000A2                     __end_of_ISR:
 13571                           	opt stack 0
 13572                           pclatu	equ	0xFFB
 13573                           pclath	equ	0xFFA
 13574                           tblptru	equ	0xFF8
 13575                           tblptrh	equ	0xFF7
 13576                           tblptrl	equ	0xFF6
 13577                           tablat	equ	0xFF5
 13578                           prodh	equ	0xFF4
 13579                           prodl	equ	0xFF3
 13580                           intcon	equ	0xFF2
 13581                           intcon2	equ	0xFF1
 13582                           indf0	equ	0xFEF
 13583                           postinc0	equ	0xFEE
 13584                           fsr0h	equ	0xFEA
 13585                           fsr0l	equ	0xFE9
 13586                           wreg	equ	0xFE8
 13587                           indf1	equ	0xFE7
 13588                           postinc1	equ	0xFE6
 13589                           postdec1	equ	0xFE5
 13590                           fsr1h	equ	0xFE2
 13591                           fsr1l	equ	0xFE1
 13592                           indf2	equ	0xFDF
 13593                           postinc2	equ	0xFDE
 13594                           postdec2	equ	0xFDD
 13595                           plusw2	equ	0xFDB
 13596                           fsr2h	equ	0xFDA
 13597                           fsr2l	equ	0xFD9
 13598                           status	equ	0xFD8
 13599                           
 13600 ;; *************** function _USB_ISR *****************
 13601 ;; Defined at:
 13602 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;		None               void
 13609 ;; Registers used:
 13610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13620 ;;Total ram usage:        0 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:    9
 13623 ;; This function calls:
 13624 ;;		_USBDeviceTasks
 13625 ;; This function is called by:
 13626 ;;		_ISR
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           
 13630                           	psect	text69
 13631  014118                     __ptext69:
 13632                           	opt stack 0
 13633  014118                     _USB_ISR:
 13634                           	opt stack 11
 13635                           
 13636                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 13637                           
 13638                           ;incstack = 0
 13639  014118  EC4C  F08B         	call	_USBDeviceTasks	;wreg free
 13640  01411C  0012               	return		;funcret
 13641  01411E                     __end_of_USB_ISR:
 13642                           	opt stack 0
 13643                           pclatu	equ	0xFFB
 13644                           pclath	equ	0xFFA
 13645                           tblptru	equ	0xFF8
 13646                           tblptrh	equ	0xFF7
 13647                           tblptrl	equ	0xFF6
 13648                           tablat	equ	0xFF5
 13649                           prodh	equ	0xFF4
 13650                           prodl	equ	0xFF3
 13651                           intcon	equ	0xFF2
 13652                           intcon2	equ	0xFF1
 13653                           indf0	equ	0xFEF
 13654                           postinc0	equ	0xFEE
 13655                           fsr0h	equ	0xFEA
 13656                           fsr0l	equ	0xFE9
 13657                           wreg	equ	0xFE8
 13658                           indf1	equ	0xFE7
 13659                           postinc1	equ	0xFE6
 13660                           postdec1	equ	0xFE5
 13661                           fsr1h	equ	0xFE2
 13662                           fsr1l	equ	0xFE1
 13663                           indf2	equ	0xFDF
 13664                           postinc2	equ	0xFDE
 13665                           postdec2	equ	0xFDD
 13666                           plusw2	equ	0xFDB
 13667                           fsr2h	equ	0xFDA
 13668                           fsr2l	equ	0xFD9
 13669                           status	equ	0xFD8
 13670                           
 13671 ;; *************** function _USBDeviceTasks *****************
 13672 ;; Defined at:
 13673 ;;		line 489 in file "../My_library/usb/usb_device.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;  i               1   29[COMRAM] unsigned char 
 13678 ;; Return value:  Size  Location     Type
 13679 ;;		None               void
 13680 ;; Registers used:
 13681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13691 ;;Total ram usage:        1 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    8
 13694 ;; This function calls:
 13695 ;;		_USBCtrlEPAllowStatusStage
 13696 ;;		_USBCtrlEPService
 13697 ;;		_USBStallHandler
 13698 ;;		_USBSuspend
 13699 ;;		_USBWakeFromSuspend
 13700 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13701 ;;		i2_USBDeviceInit
 13702 ;; This function is called by:
 13703 ;;		_USB_ISR
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           	psect	text70
 13708  011698                     __ptext70:
 13709                           	opt stack 0
 13710  011698                     _USBDeviceTasks:
 13711                           	opt stack 11
 13712                           
 13713                           ;usb_device.c: 491: uint8_t i;
 13714                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 13715                           
 13716                           ;incstack = 0
 13717  011698  0412               	decf	_USBDeviceState,w,c	;volatile
 13718  01169A  B4D8               	btfsc	status,2,c
 13719                           
 13720                           ;usb_device.c: 603: {
 13721                           ;usb_device.c: 613: if(!UCONbits.SE0)
 13722  01169C  BA65               	btfsc	3941,5,c	;volatile
 13723  01169E  D008               	goto	i2l6663
 13724                           
 13725                           ;usb_device.c: 614: {
 13726                           ;usb_device.c: 615: {UIR = 0;};
 13727  0116A0  0E00               	movlw	0
 13728  0116A2  6E62               	movwf	3938,c	;volatile
 13729                           
 13730                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 13731  0116A4  010F               	movlb	15	; () banked
 13732  0116A6  8136               	bsf	54,0,b	;volatile
 13733                           
 13734                           ; BSR set to: 15
 13735                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 13736  0116A8  010F               	movlb	15	; () banked
 13737  0116AA  8936               	bsf	54,4,b	;volatile
 13738                           
 13739                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 13740  0116AC  0E02               	movlw	2
 13741  0116AE  6E12               	movwf	_USBDeviceState,c	;volatile
 13742  0116B0                     i2l6663:
 13743                           
 13744                           ;usb_device.c: 622: }
 13745                           ;usb_device.c: 623: }
 13746                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 13747  0116B0  A462               	btfss	3938,2,c	;volatile
 13748  0116B2  D006               	goto	i2l6671
 13749  0116B4  010F               	movlb	15	; () banked
 13750  0116B6  A536               	btfss	54,2,b	;volatile
 13751  0116B8  D003               	goto	i2l6671
 13752                           
 13753                           ; BSR set to: 15
 13754                           ;usb_device.c: 640: {
 13755                           ;usb_device.c: 641: (UIR &= 0xFB);
 13756  0116BA  9462               	bcf	3938,2,c	;volatile
 13757                           
 13758                           ; BSR set to: 15
 13759                           ;usb_device.c: 645: USBWakeFromSuspend();
 13760  0116BC  ECD0  F09E         	call	_USBWakeFromSuspend	;wreg free
 13761  0116C0                     i2l6671:
 13762                           
 13763                           ;usb_device.c: 647: }
 13764                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 13765  0116C0  A265               	btfss	3941,1,c	;volatile
 13766  0116C2  D002               	goto	i2l158
 13767                           
 13768                           ;usb_device.c: 653: {
 13769                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 13770  0116C4  98A1               	bcf	4001,4,c	;volatile
 13771                           
 13772                           ;usb_device.c: 655: return;
 13773  0116C6  0012               	return	
 13774  0116C8                     i2l158:
 13775                           
 13776                           ;usb_device.c: 656: }
 13777                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 13778  0116C8  A062               	btfss	3938,0,c	;volatile
 13779  0116CA  D009               	goto	i2l6685
 13780  0116CC  010F               	movlb	15	; () banked
 13781  0116CE  A136               	btfss	54,0,b	;volatile
 13782  0116D0  D006               	goto	i2l6685
 13783                           
 13784                           ; BSR set to: 15
 13785                           ;usb_device.c: 669: {
 13786                           ;usb_device.c: 670: USBDeviceInit();
 13787  0116D2  ECEF  F08B         	call	i2_USBDeviceInit	;wreg free
 13788                           
 13789                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 13790  0116D6  88A0               	bsf	4000,4,c	;volatile
 13791                           
 13792                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 13793  0116D8  0E04               	movlw	4
 13794  0116DA  6E12               	movwf	_USBDeviceState,c	;volatile
 13795                           
 13796                           ;usb_device.c: 686: (UIR &= 0xFE);
 13797  0116DC  9062               	bcf	3938,0,c	;volatile
 13798  0116DE                     i2l6685:
 13799                           
 13800                           ;usb_device.c: 687: }
 13801                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 13802  0116DE  A862               	btfss	3938,4,c	;volatile
 13803  0116E0  D006               	goto	i2l6693
 13804  0116E2  010F               	movlb	15	; () banked
 13805  0116E4  A936               	btfss	54,4,b	;volatile
 13806  0116E6  D003               	goto	i2l6693
 13807                           
 13808                           ; BSR set to: 15
 13809                           ;usb_device.c: 693: {
 13810                           ;usb_device.c: 698: USBSuspend();
 13811  0116E8  EC5A  F09F         	call	_USBSuspend	;wreg free
 13812                           
 13813                           ;usb_device.c: 701: (UIR &= 0xEF);
 13814  0116EC  9862               	bcf	3938,4,c	;volatile
 13815  0116EE                     i2l6693:
 13816                           
 13817                           ;usb_device.c: 702: }
 13818                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 13819  0116EE  AC62               	btfss	3938,6,c	;volatile
 13820  0116F0  D019               	goto	i2l6709
 13821                           
 13822                           ;usb_device.c: 705: {
 13823                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 13824  0116F2  010F               	movlb	15	; () banked
 13825  0116F4  AD36               	btfss	54,6,b	;volatile
 13826  0116F6  D00E               	goto	i2l6699
 13827                           
 13828                           ; BSR set to: 15
 13829                           ;usb_device.c: 707: {
 13830                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 13831  0116F8  0E00               	movlw	0
 13832  0116FA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13833  0116FC  0E73               	movlw	115
 13834  0116FE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13835  011700  0E00               	movlw	0
 13836  011702  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13837  011704  0E00               	movlw	0
 13838  011706  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13839  011708  0E00               	movlw	0
 13840  01170A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13841  01170C  0E01               	movlw	1
 13842  01170E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13843  011710  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13844  011714                     i2l6699:
 13845                           
 13846                           ;usb_device.c: 709: }
 13847                           ;usb_device.c: 710: (UIR &= 0xBF);
 13848  011714  9C62               	bcf	3938,6,c	;volatile
 13849                           
 13850                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 13851  011716  5015               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13852  011718  A4D8               	btfss	status,2,c
 13853                           
 13854                           ;usb_device.c: 736: {
 13855                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 13856  01171A  0615               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 13857                           
 13858                           ;usb_device.c: 738: }
 13859                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 13860  01171C  5015               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13861  01171E  B4D8               	btfsc	status,2,c
 13862                           
 13863                           ;usb_device.c: 745: {
 13864                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 13865  011720  EC7E  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13866  011724                     i2l6709:
 13867                           
 13868                           ;usb_device.c: 747: }
 13869                           ;usb_device.c: 749: }
 13870                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 13871  011724  AA62               	btfss	3938,5,c	;volatile
 13872  011726  D004               	goto	i2l6715
 13873  011728  010F               	movlb	15	; () banked
 13874  01172A  BB36               	btfsc	54,5,b	;volatile
 13875                           
 13876                           ; BSR set to: 15
 13877                           ;usb_device.c: 752: {
 13878                           ;usb_device.c: 753: USBStallHandler();
 13879  01172C  ECC8  F09D         	call	_USBStallHandler	;wreg free
 13880  011730                     i2l6715:
 13881                           
 13882                           ;usb_device.c: 754: }
 13883                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 13884  011730  A262               	btfss	3938,1,c	;volatile
 13885  011732  D012               	goto	i2l6723
 13886  011734  010F               	movlb	15	; () banked
 13887  011736  A336               	btfss	54,1,b	;volatile
 13888  011738  D00F               	goto	i2l6723
 13889                           
 13890                           ; BSR set to: 15
 13891                           ;usb_device.c: 757: {
 13892                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 13893  01173A  0E7F               	movlw	127
 13894  01173C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13895  01173E  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13896  011740  0E00               	movlw	0
 13897  011742  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13898  011744  0E00               	movlw	0
 13899  011746  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13900  011748  0E00               	movlw	0
 13901  01174A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13902  01174C  0E01               	movlw	1
 13903  01174E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13904  011750  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13905                           
 13906                           ;usb_device.c: 759: {UEIR = 0;};
 13907  011754  0E00               	movlw	0
 13908  011756  6E63               	movwf	3939,c	;volatile
 13909  011758                     i2l6723:
 13910                           
 13911                           ;usb_device.c: 767: }
 13912                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 13913  011758  0E04               	movlw	4
 13914  01175A  6012               	cpfslt	_USBDeviceState,c	;volatile
 13915  01175C  D002               	goto	i2l168
 13916                           
 13917                           ;usb_device.c: 775: {
 13918                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 13919  01175E  98A1               	bcf	4001,4,c	;volatile
 13920                           
 13921                           ;usb_device.c: 777: return;
 13922  011760  0012               	return	
 13923  011762                     i2l168:
 13924                           
 13925                           ;usb_device.c: 778: }
 13926                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 13927  011762  010F               	movlb	15	; () banked
 13928  011764  A736               	btfss	54,3,b	;volatile
 13929  011766  D039               	goto	i2l169
 13930                           
 13931                           ; BSR set to: 15
 13932                           ;usb_device.c: 784: {
 13933                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 13934  011768  0E00               	movlw	0
 13935  01176A  6E4A               	movwf	USBDeviceTasks@i,c
 13936  01176C                     i2l6729:
 13937                           
 13938                           ; BSR set to: 15
 13939  01176C  0E03               	movlw	3
 13940  01176E  644A               	cpfsgt	USBDeviceTasks@i,c
 13941  011770  D001               	goto	i2l170
 13942  011772  D033               	goto	i2l169
 13943  011774                     i2l170:
 13944                           
 13945                           ;usb_device.c: 786: {
 13946                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 13947  011774  A662               	btfss	3938,3,c	;volatile
 13948  011776  D031               	goto	i2l169
 13949                           
 13950                           ;usb_device.c: 788: {
 13951                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 13952  011778  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 13953                           
 13954                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 13955  01177C  302C               	rrcf	_USTATcopy,w,c	;volatile
 13956  01177E  32E8               	rrcf	wreg,f,c
 13957  011780  32E8               	rrcf	wreg,f,c
 13958  011782  0B0F               	andlw	15
 13959  011784  6E19               	movwf	_endpoint_number,c	;volatile
 13960                           
 13961                           ;usb_device.c: 793: (UIR &= 0xF7);
 13962  011786  9662               	bcf	3938,3,c	;volatile
 13963                           
 13964                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 13965  011788  B42C               	btfsc	_USTATcopy,2,c	;volatile
 13966  01178A  D007               	goto	i2l6743
 13967                           
 13968                           ;usb_device.c: 799: {
 13969                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 13970  01178C  5019               	movf	_endpoint_number,w,c	;volatile
 13971  01178E  0D01               	mullw	1
 13972  011790  0EE7               	movlw	low _ep_data_out
 13973  011792  24F3               	addwf	prodl,w,c
 13974  011794  6ED9               	movwf	fsr2l,c
 13975  011796  0E00               	movlw	high _ep_data_out
 13976  011798  D006               	goto	L4
 13977  01179A                     i2l6743:
 13978                           
 13979                           ;usb_device.c: 802: else
 13980                           ;usb_device.c: 803: {
 13981                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 13982  01179A  5019               	movf	_endpoint_number,w,c	;volatile
 13983  01179C  0D01               	mullw	1
 13984  01179E  0EE4               	movlw	low _ep_data_in
 13985  0117A0  24F3               	addwf	prodl,w,c
 13986  0117A2  6ED9               	movwf	fsr2l,c
 13987  0117A4  0E00               	movlw	high _ep_data_in
 13988  0117A6                     L4:
 13989  0117A6  20F4               	addwfc	prodh,w,c
 13990  0117A8  6EDA               	movwf	fsr2h,c
 13991  0117AA  0100               	movlb	0	; () banked
 13992  0117AC  70DF               	btg	indf2,0,c
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;usb_device.c: 805: }
 13996                           ;usb_device.c: 810: if(endpoint_number == 0)
 13997                           
 13998                           ; BSR set to: 0
 13999  0117AE  5019               	movf	_endpoint_number,w,c	;volatile
 14000  0117B0  A4D8               	btfss	status,2,c
 14001  0117B2  D003               	goto	i2l6749
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;usb_device.c: 811: {
 14005                           ;usb_device.c: 812: USBCtrlEPService();
 14006  0117B4  ECB1  F093         	call	_USBCtrlEPService	;wreg free
 14007                           
 14008                           ;usb_device.c: 813: }
 14009  0117B8  D00E               	goto	i2l6751
 14010  0117BA                     i2l6749:
 14011                           
 14012                           ;usb_device.c: 814: else
 14013                           ;usb_device.c: 815: {
 14014                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14015  0117BA  0E00               	movlw	0
 14016  0117BC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14017  0117BE  0E72               	movlw	114
 14018  0117C0  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14019  0117C2  0E2C               	movlw	low _USTATcopy
 14020  0117C4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14021  0117C6  0E00               	movlw	high _USTATcopy
 14022  0117C8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14023  0117CA  0E00               	movlw	0
 14024  0117CC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14025  0117CE  0E00               	movlw	0
 14026  0117D0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14027  0117D2  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14028  0117D6                     i2l6751:
 14029  0117D6  2A4A               	incf	USBDeviceTasks@i,f,c
 14030  0117D8  D7C9               	goto	i2l6729
 14031  0117DA                     i2l169:
 14032                           
 14033                           ;usb_device.c: 822: }
 14034                           ;usb_device.c: 823: }
 14035                           ;usb_device.c: 824: }
 14036                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 14037  0117DA  98A1               	bcf	4001,4,c	;volatile
 14038  0117DC  0012               	return		;funcret
 14039  0117DE                     __end_of_USBDeviceTasks:
 14040                           	opt stack 0
 14041                           pclatu	equ	0xFFB
 14042                           pclath	equ	0xFFA
 14043                           tblptru	equ	0xFF8
 14044                           tblptrh	equ	0xFF7
 14045                           tblptrl	equ	0xFF6
 14046                           tablat	equ	0xFF5
 14047                           prodh	equ	0xFF4
 14048                           prodl	equ	0xFF3
 14049                           intcon	equ	0xFF2
 14050                           intcon2	equ	0xFF1
 14051                           indf0	equ	0xFEF
 14052                           postinc0	equ	0xFEE
 14053                           fsr0h	equ	0xFEA
 14054                           fsr0l	equ	0xFE9
 14055                           wreg	equ	0xFE8
 14056                           indf1	equ	0xFE7
 14057                           postinc1	equ	0xFE6
 14058                           postdec1	equ	0xFE5
 14059                           fsr1h	equ	0xFE2
 14060                           fsr1l	equ	0xFE1
 14061                           indf2	equ	0xFDF
 14062                           postinc2	equ	0xFDE
 14063                           postdec2	equ	0xFDD
 14064                           plusw2	equ	0xFDB
 14065                           fsr2h	equ	0xFDA
 14066                           fsr2l	equ	0xFD9
 14067                           status	equ	0xFD8
 14068                           
 14069 ;; *************** function i2_USBDeviceInit *****************
 14070 ;; Defined at:
 14071 ;;		line 298 in file "../My_library/usb/usb_device.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;		None
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14076 ;; Return value:  Size  Location     Type
 14077 ;;		None               void
 14078 ;; Registers used:
 14079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14089 ;;Total ram usage:        1 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; Hardware stack levels required when called:    1
 14092 ;; This function calls:
 14093 ;;		i2_memset
 14094 ;; This function is called by:
 14095 ;;		_USBDeviceTasks
 14096 ;; This function uses a non-reentrant model
 14097 ;;
 14098                           
 14099                           	psect	text71
 14100  0117DE                     __ptext71:
 14101                           	opt stack 0
 14102  0117DE                     i2_USBDeviceInit:
 14103                           	opt stack 17
 14104                           
 14105                           ;usb_device.c: 300: uint8_t i;
 14106                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14107                           
 14108                           ;incstack = 0
 14109  0117DE  98A0               	bcf	4000,4,c	;volatile
 14110                           
 14111                           ;usb_device.c: 305: {UEIR = 0;};
 14112  0117E0  0E00               	movlw	0
 14113  0117E2  6E63               	movwf	3939,c	;volatile
 14114                           
 14115                           ;usb_device.c: 308: {UIR = 0;};
 14116  0117E4  0E00               	movlw	0
 14117  0117E6  6E62               	movwf	3938,c	;volatile
 14118                           
 14119                           ;usb_device.c: 311: UEP0 = 0;
 14120  0117E8  0E00               	movlw	0
 14121  0117EA  010F               	movlb	15	; () banked
 14122  0117EC  6F26               	movwf	38,b	;volatile
 14123                           
 14124                           ; BSR set to: 15
 14125                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14126  0117EE  0E27               	movlw	39
 14127  0117F0  6E2D               	movwf	i2memset@p1,c
 14128  0117F2  0E0F               	movlw	15
 14129  0117F4  6E2E               	movwf	i2memset@p1+1,c
 14130  0117F6  0E00               	movlw	0
 14131  0117F8  6E30               	movwf	i2memset@c+1,c
 14132  0117FA  0E00               	movlw	0
 14133  0117FC  6E2F               	movwf	i2memset@c,c
 14134  0117FE  0E00               	movlw	0
 14135  011800  6E32               	movwf	i2memset@n+1,c
 14136  011802  0E02               	movlw	2
 14137  011804  6E31               	movwf	i2memset@n,c
 14138  011806  EC70  F09F         	call	i2_memset	;wreg free
 14139                           
 14140                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14141  01180A  0E16               	movlw	22
 14142  01180C  010F               	movlb	15	; () banked
 14143  01180E  6F39               	movwf	57,b	;volatile
 14144                           
 14145                           ; BSR set to: 15
 14146  011810  0E9F               	movlw	159
 14147  011812  010F               	movlb	15	; () banked
 14148  011814  6F37               	movwf	55,b	;volatile
 14149                           
 14150                           ; BSR set to: 15
 14151  011816  0E7B               	movlw	123
 14152  011818  010F               	movlb	15	; () banked
 14153  01181A  6F36               	movwf	54,b	;volatile
 14154                           
 14155                           ; BSR set to: 15
 14156                           ;usb_device.c: 318: ;
 14157                           ;usb_device.c: 321: ;
 14158                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14159  01181C  0E00               	movlw	0
 14160  01181E  6E35               	movwf	i2USBDeviceInit@i,c
 14161  011820                     i2l6587:
 14162                           
 14163                           ; BSR set to: 15
 14164  011820  0E0B               	movlw	11
 14165  011822  6435               	cpfsgt	i2USBDeviceInit@i,c
 14166  011824  D001               	goto	i2l6591
 14167  011826  D00E               	goto	i2l146
 14168  011828                     i2l6591:
 14169                           
 14170                           ;usb_device.c: 325: {
 14171                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14172  011828  5035               	movf	i2USBDeviceInit@i,w,c
 14173  01182A  0D04               	mullw	4
 14174  01182C  0E00               	movlw	0
 14175  01182E  24F3               	addwf	prodl,w,c
 14176  011830  6ED9               	movwf	fsr2l,c
 14177  011832  0E0D               	movlw	13
 14178  011834  20F4               	addwfc	prodh,w,c
 14179  011836  6EDA               	movwf	fsr2h,c
 14180  011838  6ADE               	clrf	postinc2,c
 14181  01183A  6ADE               	clrf	postinc2,c
 14182  01183C  6ADE               	clrf	postinc2,c
 14183  01183E  6ADD               	clrf	postdec2,c
 14184  011840  2A35               	incf	i2USBDeviceInit@i,f,c
 14185  011842  D7EE               	goto	i2l6587
 14186  011844                     i2l146:
 14187                           
 14188                           ;usb_device.c: 327: }
 14189                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14190  011844  8C65               	bsf	3941,6,c	;volatile
 14191                           
 14192                           ;usb_device.c: 333: UADDR = 0x00;
 14193  011846  0E00               	movlw	0
 14194  011848  010F               	movlb	15	; () banked
 14195  01184A  6F38               	movwf	56,b	;volatile
 14196                           
 14197                           ; BSR set to: 15
 14198                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14199  01184C  9865               	bcf	3941,4,c	;volatile
 14200                           
 14201                           ; BSR set to: 15
 14202                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14203  01184E  9C65               	bcf	3941,6,c	;volatile
 14204                           
 14205                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14206  011850  D00C               	goto	i2l6611
 14207  011852                     i2l6603:
 14208                           
 14209                           ;usb_device.c: 343: {
 14210                           ;usb_device.c: 344: (UIR &= 0xF7);
 14211  011852  9662               	bcf	3938,3,c	;volatile
 14212                           
 14213                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14214  011854  0E00               	movlw	0
 14215  011856  0100               	movlb	0	; () banked
 14216  011858  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14220  01185A  0E00               	movlw	0
 14221  01185C  0100               	movlb	0	; () banked
 14222  01185E  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14226  011860  0E00               	movlw	0
 14227  011862  0100               	movlb	0	; () banked
 14228  011864  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 14229  011866  0E00               	movlw	0
 14230  011868  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 14231  01186A                     i2l6611:
 14232  01186A  B662               	btfsc	3938,3,c	;volatile
 14233  01186C  D7F2               	goto	i2l6603
 14234                           
 14235                           ;usb_device.c: 349: }
 14236                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14237  01186E  0E01               	movlw	1
 14238  011870  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14239                           
 14240                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14241  011872  0E01               	movlw	1
 14242  011874  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14243                           
 14244                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14245  011876  0E00               	movlw	0
 14246  011878  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14247                           
 14248                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14249  01187A  0E00               	movlw	0
 14250  01187C  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14251                           
 14252                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14253  01187E  0E00               	movlw	0
 14254  011880  0100               	movlb	0	; () banked
 14255  011882  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14256                           
 14257                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14258  011884  0E00               	movlw	0
 14259  011886  6E35               	movwf	i2USBDeviceInit@i,c
 14260  011888                     i2l6615:
 14261                           
 14262                           ; BSR set to: 0
 14263  011888  0E02               	movlw	2
 14264  01188A  6435               	cpfsgt	i2USBDeviceInit@i,c
 14265  01188C  D001               	goto	i2l6619
 14266  01188E  D02E               	goto	i2l6625
 14267  011890                     i2l6619:
 14268                           
 14269                           ;usb_device.c: 363: {
 14270                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14271  011890  5035               	movf	i2USBDeviceInit@i,w,c
 14272  011892  0D02               	mullw	2
 14273  011894  0ED8               	movlw	low _pBDTEntryIn
 14274  011896  24F3               	addwf	prodl,w,c
 14275  011898  6ED9               	movwf	fsr2l,c
 14276  01189A  0E00               	movlw	high _pBDTEntryIn
 14277  01189C  20F4               	addwfc	prodh,w,c
 14278  01189E  6EDA               	movwf	fsr2h,c
 14279  0118A0  0E00               	movlw	0
 14280  0118A2  6EDE               	movwf	postinc2,c
 14281  0118A4  0E00               	movlw	0
 14282  0118A6  6EDD               	movwf	postdec2,c
 14283                           
 14284                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14285  0118A8  5035               	movf	i2USBDeviceInit@i,w,c
 14286  0118AA  0D02               	mullw	2
 14287  0118AC  0EDE               	movlw	low _pBDTEntryOut
 14288  0118AE  24F3               	addwf	prodl,w,c
 14289  0118B0  6ED9               	movwf	fsr2l,c
 14290  0118B2  0E00               	movlw	high _pBDTEntryOut
 14291  0118B4  20F4               	addwfc	prodh,w,c
 14292  0118B6  6EDA               	movwf	fsr2h,c
 14293  0118B8  0E00               	movlw	0
 14294  0118BA  6EDE               	movwf	postinc2,c
 14295  0118BC  0E00               	movlw	0
 14296  0118BE  6EDD               	movwf	postdec2,c
 14297                           
 14298                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14299  0118C0  5035               	movf	i2USBDeviceInit@i,w,c
 14300  0118C2  0D01               	mullw	1
 14301  0118C4  0EE4               	movlw	low _ep_data_in
 14302  0118C6  24F3               	addwf	prodl,w,c
 14303  0118C8  6ED9               	movwf	fsr2l,c
 14304  0118CA  0E00               	movlw	high _ep_data_in
 14305  0118CC  20F4               	addwfc	prodh,w,c
 14306  0118CE  6EDA               	movwf	fsr2h,c
 14307  0118D0  0E00               	movlw	0
 14308  0118D2  6EDF               	movwf	indf2,c
 14309                           
 14310                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14311  0118D4  5035               	movf	i2USBDeviceInit@i,w,c
 14312  0118D6  0D01               	mullw	1
 14313  0118D8  0EE7               	movlw	low _ep_data_out
 14314  0118DA  24F3               	addwf	prodl,w,c
 14315  0118DC  6ED9               	movwf	fsr2l,c
 14316  0118DE  0E00               	movlw	high _ep_data_out
 14317  0118E0  20F4               	addwfc	prodh,w,c
 14318  0118E2  6EDA               	movwf	fsr2h,c
 14319  0118E4  0E00               	movlw	0
 14320  0118E6  6EDF               	movwf	indf2,c
 14321  0118E8  2A35               	incf	i2USBDeviceInit@i,f,c
 14322  0118EA  D7CE               	goto	i2l6615
 14323  0118EC                     i2l6625:
 14324                           
 14325                           ;usb_device.c: 368: }
 14326                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14327  0118EC  0E08               	movlw	8
 14328  0118EE  0100               	movlb	0	; () banked
 14329  0118F0  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 14330  0118F2  0E0D               	movlw	13
 14331  0118F4  0100               	movlb	0	; () banked
 14332  0118F6  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 14336  0118F8  0E16               	movlw	22
 14337  0118FA  010F               	movlb	15	; () banked
 14338  0118FC  6F26               	movwf	38,b	;volatile
 14339                           
 14340                           ; BSR set to: 15
 14341                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14342  0118FE  0E0D               	movlw	13
 14343  011900  010D               	movlb	13	; () banked
 14344  011902  6F03               	movwf	3,b	;volatile
 14345  011904  0E30               	movlw	48
 14346  011906  6F02               	movwf	2,b	;volatile
 14347                           
 14348                           ; BSR set to: 13
 14349                           ;usb_device.c: 376: BDT[0].CNT = 8;
 14350  011908  0E08               	movlw	8
 14351  01190A  010D               	movlb	13	; () banked
 14352  01190C  6F01               	movwf	1,b	;volatile
 14353                           
 14354                           ; BSR set to: 13
 14355                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 14356  01190E  0E04               	movlw	4
 14357  011910  010D               	movlb	13	; () banked
 14358  011912  6F00               	movwf	0,b	;volatile
 14359                           
 14360                           ; BSR set to: 13
 14361                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 14362  011914  010D               	movlb	13	; () banked
 14363  011916  8F00               	bsf	0,7,b	;volatile
 14364                           
 14365                           ; BSR set to: 13
 14366                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 14367  011918  0E00               	movlw	0
 14368  01191A  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 14369                           
 14370                           ; BSR set to: 13
 14371                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 14372  01191C  0E00               	movlw	0
 14373  01191E  6E12               	movwf	_USBDeviceState,c	;volatile
 14374                           
 14375                           ; BSR set to: 13
 14376  011920  0012               	return		;funcret
 14377  011922                     __end_ofi2_USBDeviceInit:
 14378                           	opt stack 0
 14379                           pclatu	equ	0xFFB
 14380                           pclath	equ	0xFFA
 14381                           tblptru	equ	0xFF8
 14382                           tblptrh	equ	0xFF7
 14383                           tblptrl	equ	0xFF6
 14384                           tablat	equ	0xFF5
 14385                           prodh	equ	0xFF4
 14386                           prodl	equ	0xFF3
 14387                           intcon	equ	0xFF2
 14388                           intcon2	equ	0xFF1
 14389                           indf0	equ	0xFEF
 14390                           postinc0	equ	0xFEE
 14391                           fsr0h	equ	0xFEA
 14392                           fsr0l	equ	0xFE9
 14393                           wreg	equ	0xFE8
 14394                           indf1	equ	0xFE7
 14395                           postinc1	equ	0xFE6
 14396                           postdec1	equ	0xFE5
 14397                           fsr1h	equ	0xFE2
 14398                           fsr1l	equ	0xFE1
 14399                           indf2	equ	0xFDF
 14400                           postinc2	equ	0xFDE
 14401                           postdec2	equ	0xFDD
 14402                           plusw2	equ	0xFDB
 14403                           fsr2h	equ	0xFDA
 14404                           fsr2l	equ	0xFD9
 14405                           status	equ	0xFD8
 14406                           
 14407 ;; *************** function _USBWakeFromSuspend *****************
 14408 ;; Defined at:
 14409 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;		None               void
 14416 ;; Registers used:
 14417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;Total ram usage:        0 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:    4
 14430 ;; This function calls:
 14431 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14432 ;; This function is called by:
 14433 ;;		_USBDeviceTasks
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text72
 14438  013DA0                     __ptext72:
 14439                           	opt stack 0
 14440  013DA0                     _USBWakeFromSuspend:
 14441                           	opt stack 14
 14442                           
 14443                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 14444                           
 14445                           ; BSR set to: 13
 14446                           ;incstack = 0
 14447  013DA0  0E00               	movlw	0
 14448  013DA2  0100               	movlb	0	; () banked
 14449  013DA4  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 14453  013DA6  0E00               	movlw	0
 14454  013DA8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14455  013DAA  0E74               	movlw	116
 14456  013DAC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14457  013DAE  0E00               	movlw	0
 14458  013DB0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14459  013DB2  0E00               	movlw	0
 14460  013DB4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14461  013DB6  0E00               	movlw	0
 14462  013DB8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14463  013DBA  0E00               	movlw	0
 14464  013DBC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14465  013DBE  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14466                           
 14467                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 14468  013DC2  9265               	bcf	3941,1,c	;volatile
 14469                           
 14470                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 14471  013DC4  010F               	movlb	15	; () banked
 14472  013DC6  9536               	bcf	54,2,b	;volatile
 14473                           
 14474                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 14475  013DC8  D001               	goto	i2l6315
 14476  013DCA                     i2l6313:
 14477                           
 14478                           ;usb_device.c: 2342: {
 14479                           ;usb_device.c: 2343: (UIR &= 0xFB);
 14480  013DCA  9462               	bcf	3938,2,c	;volatile
 14481  013DCC                     i2l6315:
 14482  013DCC  A462               	btfss	3938,2,c	;volatile
 14483  013DCE  0012               	return	
 14484  013DD0  D7FC               	goto	i2l6313
 14485  013DD2                     __end_of_USBWakeFromSuspend:
 14486                           	opt stack 0
 14487                           pclatu	equ	0xFFB
 14488                           pclath	equ	0xFFA
 14489                           tblptru	equ	0xFF8
 14490                           tblptrh	equ	0xFF7
 14491                           tblptrl	equ	0xFF6
 14492                           tablat	equ	0xFF5
 14493                           prodh	equ	0xFF4
 14494                           prodl	equ	0xFF3
 14495                           intcon	equ	0xFF2
 14496                           intcon2	equ	0xFF1
 14497                           indf0	equ	0xFEF
 14498                           postinc0	equ	0xFEE
 14499                           fsr0h	equ	0xFEA
 14500                           fsr0l	equ	0xFE9
 14501                           wreg	equ	0xFE8
 14502                           indf1	equ	0xFE7
 14503                           postinc1	equ	0xFE6
 14504                           postdec1	equ	0xFE5
 14505                           fsr1h	equ	0xFE2
 14506                           fsr1l	equ	0xFE1
 14507                           indf2	equ	0xFDF
 14508                           postinc2	equ	0xFDE
 14509                           postdec2	equ	0xFDD
 14510                           plusw2	equ	0xFDB
 14511                           fsr2h	equ	0xFDA
 14512                           fsr2l	equ	0xFD9
 14513                           status	equ	0xFD8
 14514                           
 14515 ;; *************** function _USBSuspend *****************
 14516 ;; Defined at:
 14517 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;		None
 14520 ;; Auto vars:     Size  Location     Type
 14521 ;;		None
 14522 ;; Return value:  Size  Location     Type
 14523 ;;		None               void
 14524 ;; Registers used:
 14525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14526 ;; Tracked objects:
 14527 ;;		On entry : 0/0
 14528 ;;		On exit  : 0/0
 14529 ;;		Unchanged: 0/0
 14530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14535 ;;Total ram usage:        0 bytes
 14536 ;; Hardware stack levels used:    1
 14537 ;; Hardware stack levels required when called:    4
 14538 ;; This function calls:
 14539 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14540 ;; This function is called by:
 14541 ;;		_USBDeviceTasks
 14542 ;; This function uses a non-reentrant model
 14543 ;;
 14544                           
 14545                           	psect	text73
 14546  013EB4                     __ptext73:
 14547                           	opt stack 0
 14548  013EB4                     _USBSuspend:
 14549                           	opt stack 14
 14550                           
 14551                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 14552                           
 14553                           ;incstack = 0
 14554  013EB4  010F               	movlb	15	; () banked
 14555  013EB6  8536               	bsf	54,2,b	;volatile
 14556                           
 14557                           ; BSR set to: 15
 14558                           ;usb_device.c: 2271: (UIR &= 0xEF);
 14559  013EB8  9862               	bcf	3938,4,c	;volatile
 14560                           
 14561                           ; BSR set to: 15
 14562                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 14563  013EBA  8265               	bsf	3941,1,c	;volatile
 14564                           
 14565                           ; BSR set to: 15
 14566                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 14567  013EBC  0E01               	movlw	1
 14568  013EBE  0100               	movlb	0	; () banked
 14569  013EC0  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14570                           
 14571                           ; BSR set to: 0
 14572                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 14573  013EC2  0E00               	movlw	0
 14574  013EC4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14575  013EC6  0E75               	movlw	117
 14576  013EC8  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14577  013ECA  0E00               	movlw	0
 14578  013ECC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14579  013ECE  0E00               	movlw	0
 14580  013ED0  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14581  013ED2  0E00               	movlw	0
 14582  013ED4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14583  013ED6  0E00               	movlw	0
 14584  013ED8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14585  013EDA  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14586  013EDE  0012               	return		;funcret
 14587  013EE0                     __end_of_USBSuspend:
 14588                           	opt stack 0
 14589                           pclatu	equ	0xFFB
 14590                           pclath	equ	0xFFA
 14591                           tblptru	equ	0xFF8
 14592                           tblptrh	equ	0xFF7
 14593                           tblptrl	equ	0xFF6
 14594                           tablat	equ	0xFF5
 14595                           prodh	equ	0xFF4
 14596                           prodl	equ	0xFF3
 14597                           intcon	equ	0xFF2
 14598                           intcon2	equ	0xFF1
 14599                           indf0	equ	0xFEF
 14600                           postinc0	equ	0xFEE
 14601                           fsr0h	equ	0xFEA
 14602                           fsr0l	equ	0xFE9
 14603                           wreg	equ	0xFE8
 14604                           indf1	equ	0xFE7
 14605                           postinc1	equ	0xFE6
 14606                           postdec1	equ	0xFE5
 14607                           fsr1h	equ	0xFE2
 14608                           fsr1l	equ	0xFE1
 14609                           indf2	equ	0xFDF
 14610                           postinc2	equ	0xFDE
 14611                           postdec2	equ	0xFDD
 14612                           plusw2	equ	0xFDB
 14613                           fsr2h	equ	0xFDA
 14614                           fsr2l	equ	0xFD9
 14615                           status	equ	0xFD8
 14616                           
 14617 ;; *************** function _USBStallHandler *****************
 14618 ;; Defined at:
 14619 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 14620 ;; Parameters:    Size  Location     Type
 14621 ;;		None
 14622 ;; Auto vars:     Size  Location     Type
 14623 ;;		None
 14624 ;; Return value:  Size  Location     Type
 14625 ;;		None               void
 14626 ;; Registers used:
 14627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14628 ;; Tracked objects:
 14629 ;;		On entry : 0/0
 14630 ;;		On exit  : 0/0
 14631 ;;		Unchanged: 0/0
 14632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14635 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14637 ;;Total ram usage:        1 bytes
 14638 ;; Hardware stack levels used:    1
 14639 ;; This function calls:
 14640 ;;		Nothing
 14641 ;; This function is called by:
 14642 ;;		_USBDeviceTasks
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           	psect	text74
 14647  013B90                     __ptext74:
 14648                           	opt stack 0
 14649  013B90                     _USBStallHandler:
 14650                           	opt stack 18
 14651                           
 14652                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 14653                           
 14654                           ;incstack = 0
 14655  013B90  010F               	movlb	15	; () banked
 14656  013B92  A126               	btfss	38,0,b	;volatile
 14657  013B94  D01E               	goto	i2l308
 14658                           
 14659                           ; BSR set to: 15
 14660                           ;usb_device.c: 2215: {
 14661                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 14662  013B96  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14663  013B9A  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14664  013B9E  0E80               	movlw	128
 14665  013BA0  18DE               	xorwf	postinc2,w,c
 14666  013BA2  A4D8               	btfss	status,2,c
 14667  013BA4  D014               	goto	i2l6337
 14668                           
 14669                           ; BSR set to: 15
 14670  013BA6  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14671  013BAA  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14672  013BAE  0E84               	movlw	132
 14673  013BB0  18DE               	xorwf	postinc2,w,c
 14674  013BB2  A4D8               	btfss	status,2,c
 14675  013BB4  D00C               	goto	i2l6337
 14676                           
 14677                           ; BSR set to: 15
 14678                           ;usb_device.c: 2218: {
 14679                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14680  013BB6  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14681  013BBA  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14682  013BBE  0E0C               	movlw	12
 14683  013BC0  6EDF               	movwf	indf2,c
 14684                           
 14685                           ; BSR set to: 15
 14686                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14687  013BC2  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14688  013BC6  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14689  013BCA  0E00               	movlw	0
 14690  013BCC  8EDB               	bsf	plusw2,7,c
 14691  013BCE                     i2l6337:
 14692                           
 14693                           ; BSR set to: 15
 14694                           ;usb_device.c: 2222: }
 14695                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 14696  013BCE  010F               	movlb	15	; () banked
 14697  013BD0  9126               	bcf	38,0,b	;volatile
 14698  013BD2                     i2l308:
 14699                           
 14700                           ; BSR set to: 15
 14701                           ;usb_device.c: 2224: }
 14702                           ;usb_device.c: 2226: (UIR &= 0xDF);
 14703  013BD2  9A62               	bcf	3938,5,c	;volatile
 14704                           
 14705                           ; BSR set to: 15
 14706  013BD4  0012               	return		;funcret
 14707  013BD6                     __end_of_USBStallHandler:
 14708                           	opt stack 0
 14709                           pclatu	equ	0xFFB
 14710                           pclath	equ	0xFFA
 14711                           tblptru	equ	0xFF8
 14712                           tblptrh	equ	0xFF7
 14713                           tblptrl	equ	0xFF6
 14714                           tablat	equ	0xFF5
 14715                           prodh	equ	0xFF4
 14716                           prodl	equ	0xFF3
 14717                           intcon	equ	0xFF2
 14718                           intcon2	equ	0xFF1
 14719                           indf0	equ	0xFEF
 14720                           postinc0	equ	0xFEE
 14721                           fsr0h	equ	0xFEA
 14722                           fsr0l	equ	0xFE9
 14723                           wreg	equ	0xFE8
 14724                           indf1	equ	0xFE7
 14725                           postinc1	equ	0xFE6
 14726                           postdec1	equ	0xFE5
 14727                           fsr1h	equ	0xFE2
 14728                           fsr1l	equ	0xFE1
 14729                           indf2	equ	0xFDF
 14730                           postinc2	equ	0xFDE
 14731                           postdec2	equ	0xFDD
 14732                           plusw2	equ	0xFDB
 14733                           fsr2h	equ	0xFDA
 14734                           fsr2l	equ	0xFD9
 14735                           status	equ	0xFD8
 14736                           
 14737 ;; *************** function _USBCtrlEPService *****************
 14738 ;; Defined at:
 14739 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;		None
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 14744 ;; Return value:  Size  Location     Type
 14745 ;;		None               void
 14746 ;; Registers used:
 14747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14748 ;; Tracked objects:
 14749 ;;		On entry : 0/0
 14750 ;;		On exit  : 0/0
 14751 ;;		Unchanged: 0/0
 14752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14756 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14757 ;;Total ram usage:        3 bytes
 14758 ;; Hardware stack levels used:    1
 14759 ;; Hardware stack levels required when called:    7
 14760 ;; This function calls:
 14761 ;;		_USBCtrlTrfInHandler
 14762 ;;		_USBCtrlTrfOutHandler
 14763 ;;		_USBCtrlTrfSetupHandler
 14764 ;; This function is called by:
 14765 ;;		_USBDeviceTasks
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text75
 14770  012762                     __ptext75:
 14771                           	opt stack 0
 14772  012762                     _USBCtrlEPService:
 14773                           	opt stack 11
 14774                           
 14775                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 14776                           
 14777                           ; BSR set to: 15
 14778                           ;incstack = 0
 14779  012762  0E2D               	movlw	45
 14780  012764  6E15               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 14781                           
 14782                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 14783  012766  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14784  01276A  0EFD               	movlw	253
 14785  01276C  1647               	andwf	??_USBCtrlEPService,f,c
 14786  01276E  A4D8               	btfss	status,2,c
 14787  012770  D057               	goto	i2l6371
 14788                           
 14789                           ;usb_device.c: 2380: {
 14790                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 14791  012772  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14792  012776  90D8               	bcf	status,0,c
 14793  012778  3247               	rrcf	??_USBCtrlEPService,f,c
 14794  01277A  0E3F               	movlw	63
 14795  01277C  1647               	andwf	??_USBCtrlEPService,f,c
 14796  01277E  5047               	movf	??_USBCtrlEPService,w,c
 14797  012780  0D04               	mullw	4
 14798  012782  0E00               	movlw	0
 14799  012784  24F3               	addwf	prodl,w,c
 14800  012786  6E03               	movwf	_pBDTEntryEP0OutCurrent,c
 14801  012788  0E0D               	movlw	13
 14802  01278A  20F4               	addwfc	prodh,w,c
 14803  01278C  6E04               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14804                           
 14805                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14806  01278E  C003  F005         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14807  012792  C004  F006         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14808                           
 14809                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 14810  012796  0E04               	movlw	4
 14811  012798  1A05               	xorwf	_pBDTEntryEP0OutNext,f,c
 14812                           
 14813                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 14814  01279A  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14815  01279E  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14816  0127A2  30DF               	rrcf	indf2,w,c
 14817  0127A4  32E8               	rrcf	wreg,f,c
 14818  0127A6  0B0F               	andlw	15
 14819  0127A8  0A0D               	xorlw	13
 14820  0127AA  A4D8               	btfss	status,2,c
 14821  0127AC  D036               	goto	i2l6369
 14822                           
 14823                           ;usb_device.c: 2397: {
 14824                           ;usb_device.c: 2398: unsigned char setup_cnt;
 14825                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 14826  0127AE  0E00               	movlw	0
 14827  0127B0  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 14828  0127B2                     i2l6353:
 14829  0127B2  0E07               	movlw	7
 14830  0127B4  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 14831  0127B6  D001               	goto	i2l6357
 14832  0127B8  D023               	goto	i2l6365
 14833  0127BA                     i2l6357:
 14834                           
 14835                           ;usb_device.c: 2405: {
 14836                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 14837  0127BA  EE20 F002          	lfsr	2,2
 14838  0127BE  5003               	movf	_pBDTEntryEP0OutCurrent,w,c
 14839  0127C0  26D9               	addwf	fsr2l,f,c
 14840  0127C2  5004               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14841  0127C4  22DA               	addwfc	fsr2h,f,c
 14842  0127C6  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 14843  0127CA  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 14844  0127CE  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 14845  0127D2  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 14846  0127D6  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 14847  0127D8  0D01               	mullw	1
 14848  0127DA  0E30               	movlw	48
 14849  0127DC  24F3               	addwf	prodl,w,c
 14850  0127DE  6EE1               	movwf	fsr1l,c
 14851  0127E0  0E0D               	movlw	13
 14852  0127E2  20F4               	addwfc	prodh,w,c
 14853  0127E4  6EE2               	movwf	fsr1h,c
 14854  0127E6  CFDF FFE7          	movff	indf2,indf1
 14855                           
 14856                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 14857  0127EA  EE20 F002          	lfsr	2,2
 14858  0127EE  5003               	movf	_pBDTEntryEP0OutCurrent,w,c
 14859  0127F0  26D9               	addwf	fsr2l,f,c
 14860  0127F2  5004               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14861  0127F4  22DA               	addwfc	fsr2h,f,c
 14862  0127F6  2ADE               	incf	postinc2,f,c
 14863  0127F8  0E00               	movlw	0
 14864  0127FA  22DD               	addwfc	postdec2,f,c
 14865  0127FC  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 14866  0127FE  D7D9               	goto	i2l6353
 14867  012800                     i2l6365:
 14868                           
 14869                           ;usb_device.c: 2408: }
 14870                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14871  012800  EE20 F002          	lfsr	2,2
 14872  012804  5003               	movf	_pBDTEntryEP0OutCurrent,w,c
 14873  012806  26D9               	addwf	fsr2l,f,c
 14874  012808  5004               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14875  01280A  22DA               	addwfc	fsr2h,f,c
 14876  01280C  0E30               	movlw	48
 14877  01280E  6EDE               	movwf	postinc2,c
 14878  012810  0E0D               	movlw	13
 14879  012812  6EDD               	movwf	postdec2,c
 14880                           
 14881                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 14882  012814  EC9E  F099         	call	_USBCtrlTrfSetupHandler	;wreg free
 14883                           
 14884                           ;usb_device.c: 2413: }
 14885  012818  0012               	return	
 14886  01281A                     i2l6369:
 14887                           
 14888                           ;usb_device.c: 2414: else
 14889                           ;usb_device.c: 2415: {
 14890                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 14891  01281A  ECFD  F09C         	call	_USBCtrlTrfOutHandler	;wreg free
 14892                           
 14893                           ;usb_device.c: 2418: }
 14894                           ;usb_device.c: 2419: }
 14895  01281E  0012               	return	
 14896  012820                     i2l6371:
 14897                           
 14898                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 14899  012820  502C               	movf	_USTATcopy,w,c	;volatile
 14900  012822  0BFD               	andlw	253
 14901  012824  0A04               	xorlw	4
 14902  012826  A4D8               	btfss	status,2,c
 14903  012828  0012               	return	
 14904                           
 14905                           ;usb_device.c: 2421: {
 14906                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 14907  01282A  ECE0  F094         	call	_USBCtrlTrfInHandler	;wreg free
 14908  01282E  0012               	return	
 14909  012830                     __end_of_USBCtrlEPService:
 14910                           	opt stack 0
 14911                           pclatu	equ	0xFFB
 14912                           pclath	equ	0xFFA
 14913                           tblptru	equ	0xFF8
 14914                           tblptrh	equ	0xFF7
 14915                           tblptrl	equ	0xFF6
 14916                           tablat	equ	0xFF5
 14917                           prodh	equ	0xFF4
 14918                           prodl	equ	0xFF3
 14919                           intcon	equ	0xFF2
 14920                           intcon2	equ	0xFF1
 14921                           indf0	equ	0xFEF
 14922                           postinc0	equ	0xFEE
 14923                           fsr0h	equ	0xFEA
 14924                           fsr0l	equ	0xFE9
 14925                           wreg	equ	0xFE8
 14926                           indf1	equ	0xFE7
 14927                           postinc1	equ	0xFE6
 14928                           postdec1	equ	0xFE5
 14929                           fsr1h	equ	0xFE2
 14930                           fsr1l	equ	0xFE1
 14931                           indf2	equ	0xFDF
 14932                           postinc2	equ	0xFDE
 14933                           postdec2	equ	0xFDD
 14934                           plusw2	equ	0xFDB
 14935                           fsr2h	equ	0xFDA
 14936                           fsr2l	equ	0xFD9
 14937                           status	equ	0xFD8
 14938                           
 14939 ;; *************** function _USBCtrlTrfSetupHandler *****************
 14940 ;; Defined at:
 14941 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;		None
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;		None               void
 14948 ;; Registers used:
 14949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14959 ;;Total ram usage:        0 bytes
 14960 ;; Hardware stack levels used:    1
 14961 ;; Hardware stack levels required when called:    6
 14962 ;; This function calls:
 14963 ;;		_USBCheckStdRequest
 14964 ;;		_USBCtrlEPServiceComplete
 14965 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14966 ;; This function is called by:
 14967 ;;		_USBCtrlEPService
 14968 ;; This function uses a non-reentrant model
 14969 ;;
 14970                           
 14971                           	psect	text76
 14972  01333C                     __ptext76:
 14973                           	opt stack 0
 14974  01333C                     _USBCtrlTrfSetupHandler:
 14975                           	opt stack 11
 14976                           
 14977                           ;usb_device.c: 2474: shortPacketStatus = 0;
 14978                           
 14979                           ;incstack = 0
 14980  01333C  0E00               	movlw	0
 14981  01333E  6E1A               	movwf	_shortPacketStatus,c	;volatile
 14982                           
 14983                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 14984  013340  0E00               	movlw	0
 14985  013342  6E11               	movwf	_USBDeferStatusStagePacket,c	;volatile
 14986                           
 14987                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 14988  013344  0E00               	movlw	0
 14989  013346  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14990                           
 14991                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 14992  013348  0E00               	movlw	0
 14993  01334A  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14994                           
 14995                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 14996  01334C  0E00               	movlw	0
 14997  01334E  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14998                           
 14999                           ;usb_device.c: 2479: controlTransferState = 0;
 15000  013350  0E00               	movlw	0
 15001  013352  6E17               	movwf	_controlTransferState,c	;volatile
 15002                           
 15003                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15004  013354  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15005  013358  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15006  01335C  0E7F               	movlw	127
 15007  01335E  16DF               	andwf	indf2,f,c
 15008                           
 15009                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15010  013360  0E04               	movlw	4
 15011  013362  0100               	movlb	0	; () banked
 15012  013364  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 15013                           
 15014                           ; BSR set to: 0
 15015                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15016  013366  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15017  01336A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15018  01336E  0E7F               	movlw	127
 15019  013370  16DF               	andwf	indf2,f,c
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15023  013372  0E04               	movlw	4
 15024  013374  0100               	movlb	0	; () banked
 15025  013376  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15029  013378  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15030  01337C  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15031  013380  0E7F               	movlw	127
 15032  013382  16DF               	andwf	indf2,f,c
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 15036  013384  0E00               	movlw	0
 15037  013386  0100               	movlb	0	; () banked
 15038  013388  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15039                           
 15040                           ; BSR set to: 0
 15041                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 15042  01338A  0E00               	movlw	0
 15043  01338C  0100               	movlb	0	; () banked
 15044  01338E  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15045  013390  0E00               	movlw	0
 15046  013392  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 15050  013394  0E00               	movlw	0
 15051  013396  0100               	movlb	0	; () banked
 15052  013398  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 15056  01339A  0E00               	movlw	0
 15057  01339C  0100               	movlb	0	; () banked
 15058  01339E  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 15059  0133A0  0E00               	movlw	0
 15060  0133A2  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;usb_device.c: 2503: USBCheckStdRequest();
 15064  0133A4  EC10  F08E         	call	_USBCheckStdRequest	;wreg free
 15065                           
 15066                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 15067  0133A8  0E00               	movlw	0
 15068  0133AA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15069  0133AC  0E03               	movlw	3
 15070  0133AE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15071  0133B0  0E00               	movlw	0
 15072  0133B2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15073  0133B4  0E00               	movlw	0
 15074  0133B6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15075  0133B8  0E00               	movlw	0
 15076  0133BA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15077  0133BC  0E00               	movlw	0
 15078  0133BE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15079  0133C0  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15080                           
 15081                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 15082  0133C4  EC1D  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 15083  0133C8  0012               	return		;funcret
 15084  0133CA                     __end_of_USBCtrlTrfSetupHandler:
 15085                           	opt stack 0
 15086                           pclatu	equ	0xFFB
 15087                           pclath	equ	0xFFA
 15088                           tblptru	equ	0xFF8
 15089                           tblptrh	equ	0xFF7
 15090                           tblptrl	equ	0xFF6
 15091                           tablat	equ	0xFF5
 15092                           prodh	equ	0xFF4
 15093                           prodl	equ	0xFF3
 15094                           intcon	equ	0xFF2
 15095                           intcon2	equ	0xFF1
 15096                           indf0	equ	0xFEF
 15097                           postinc0	equ	0xFEE
 15098                           fsr0h	equ	0xFEA
 15099                           fsr0l	equ	0xFE9
 15100                           wreg	equ	0xFE8
 15101                           indf1	equ	0xFE7
 15102                           postinc1	equ	0xFE6
 15103                           postdec1	equ	0xFE5
 15104                           fsr1h	equ	0xFE2
 15105                           fsr1l	equ	0xFE1
 15106                           indf2	equ	0xFDF
 15107                           postinc2	equ	0xFDE
 15108                           postdec2	equ	0xFDD
 15109                           plusw2	equ	0xFDB
 15110                           fsr2h	equ	0xFDA
 15111                           fsr2l	equ	0xFD9
 15112                           status	equ	0xFD8
 15113                           
 15114 ;; *************** function _USBCtrlEPServiceComplete *****************
 15115 ;; Defined at:
 15116 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;		None
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;		None
 15121 ;; Return value:  Size  Location     Type
 15122 ;;		None               void
 15123 ;; Registers used:
 15124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15125 ;; Tracked objects:
 15126 ;;		On entry : 0/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;Total ram usage:        0 bytes
 15135 ;; Hardware stack levels used:    1
 15136 ;; Hardware stack levels required when called:    2
 15137 ;; This function calls:
 15138 ;;		_USBCtrlEPAllowDataStage
 15139 ;;		_USBCtrlEPAllowStatusStage
 15140 ;; This function is called by:
 15141 ;;		_USBCtrlTrfSetupHandler
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text77
 15146  011A3A                     __ptext77:
 15147                           	opt stack 0
 15148  011A3A                     _USBCtrlEPServiceComplete:
 15149                           	opt stack 14
 15150                           
 15151                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 15152                           
 15153                           ;incstack = 0
 15154  011A3A  9865               	bcf	3941,4,c	;volatile
 15155                           
 15156                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 15157  011A3C  0100               	movlb	0	; () banked
 15158  011A3E  BFD5               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 15159  011A40  D039               	goto	i2l232
 15160                           
 15161                           ; BSR set to: 0
 15162                           ;usb_device.c: 1629: {
 15163                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 15164  011A42  0100               	movlb	0	; () banked
 15165  011A44  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 15166  011A46  D00B               	goto	i2l5903
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;usb_device.c: 1631: {
 15170                           ;usb_device.c: 1632: controlTransferState = 2;
 15171  011A48  0E02               	movlw	2
 15172  011A4A  6E17               	movwf	_controlTransferState,c	;volatile
 15173                           
 15174                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 15175  011A4C  5010               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 15176  011A4E  B4D8               	btfsc	status,2,c
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;usb_device.c: 1644: {
 15180                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 15181  011A50  EC77  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15182                           
 15183                           ;usb_device.c: 1646: }
 15184                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 15185  011A54  0E00               	movlw	0
 15186  011A56  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15187                           
 15188                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 15189  011A58  0E00               	movlw	0
 15190  011A5A  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15191                           
 15192                           ;usb_device.c: 1652: }
 15193  011A5C  0012               	return	
 15194  011A5E                     i2l5903:
 15195                           
 15196                           ;usb_device.c: 1653: else
 15197                           ;usb_device.c: 1654: {
 15198                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 15199  011A5E  EE20 F001          	lfsr	2,1
 15200  011A62  5005               	movf	_pBDTEntryEP0OutNext,w,c
 15201  011A64  26D9               	addwf	fsr2l,f,c
 15202  011A66  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 15203  011A68  22DA               	addwfc	fsr2h,f,c
 15204  011A6A  0E08               	movlw	8
 15205  011A6C  6EDF               	movwf	indf2,c
 15206                           
 15207                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15208  011A6E  EE20 F002          	lfsr	2,2
 15209  011A72  5005               	movf	_pBDTEntryEP0OutNext,w,c
 15210  011A74  26D9               	addwf	fsr2l,f,c
 15211  011A76  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 15212  011A78  22DA               	addwfc	fsr2h,f,c
 15213  011A7A  0E30               	movlw	48
 15214  011A7C  6EDE               	movwf	postinc2,c
 15215  011A7E  0E0D               	movlw	13
 15216  011A80  6EDD               	movwf	postdec2,c
 15217                           
 15218                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15219  011A82  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15220  011A86  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15221  011A8A  0E0C               	movlw	12
 15222  011A8C  6EDF               	movwf	indf2,c
 15223                           
 15224                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15225  011A8E  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15226  011A92  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15227  011A96  0E00               	movlw	0
 15228  011A98  8EDB               	bsf	plusw2,7,c
 15229                           
 15230                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 15231  011A9A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15232  011A9E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15233  011AA2  0E04               	movlw	4
 15234  011AA4  6EDF               	movwf	indf2,c
 15235                           
 15236                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15237  011AA6  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15238  011AAA  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15239  011AAE  0E00               	movlw	0
 15240  011AB0  8EDB               	bsf	plusw2,7,c
 15241                           
 15242                           ;usb_device.c: 1665: }
 15243                           ;usb_device.c: 1666: }
 15244  011AB2  0012               	return	
 15245  011AB4                     i2l232:
 15246                           
 15247                           ; BSR set to: 0
 15248                           ;usb_device.c: 1667: else
 15249                           ;usb_device.c: 1668: {
 15250                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 15251  011AB4  010D               	movlb	13	; () banked
 15252  011AB6  AF30               	btfss	48,7,b	;volatile
 15253  011AB8  D010               	goto	i2l5923
 15254                           
 15255                           ; BSR set to: 13
 15256                           ;usb_device.c: 1670: {
 15257                           ;usb_device.c: 1671: controlTransferState = 1;
 15258  011ABA  0E01               	movlw	1
 15259  011ABC  6E17               	movwf	_controlTransferState,c	;volatile
 15260                           
 15261                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 15262  011ABE  500F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 15263  011AC0  B4D8               	btfsc	status,2,c
 15264                           
 15265                           ; BSR set to: 13
 15266                           ;usb_device.c: 1686: {
 15267                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 15268  011AC2  EC77  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15269                           
 15270                           ;usb_device.c: 1688: }
 15271                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 15272  011AC6  0E00               	movlw	0
 15273  011AC8  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15274                           
 15275                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 15276  011ACA  0E00               	movlw	0
 15277  011ACC  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15278                           
 15279                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 15280  011ACE  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15281  011AD0  A4D8               	btfss	status,2,c
 15282  011AD2  0012               	return	
 15283                           
 15284                           ;usb_device.c: 1713: {
 15285                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 15286  011AD4  EC7E  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15287                           
 15288                           ;usb_device.c: 1715: }
 15289                           ;usb_device.c: 1716: }
 15290  011AD8  0012               	return	
 15291  011ADA                     i2l5923:
 15292                           
 15293                           ;usb_device.c: 1717: else
 15294                           ;usb_device.c: 1718: {
 15295                           ;usb_device.c: 1729: controlTransferState = 2;
 15296  011ADA  0E02               	movlw	2
 15297  011ADC  6E17               	movwf	_controlTransferState,c	;volatile
 15298                           
 15299                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 15300  011ADE  EE20 F001          	lfsr	2,1
 15301  011AE2  5005               	movf	_pBDTEntryEP0OutNext,w,c
 15302  011AE4  26D9               	addwf	fsr2l,f,c
 15303  011AE6  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 15304  011AE8  22DA               	addwfc	fsr2h,f,c
 15305  011AEA  0E08               	movlw	8
 15306  011AEC  6EDF               	movwf	indf2,c
 15307                           
 15308                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15309  011AEE  EE20 F002          	lfsr	2,2
 15310  011AF2  5005               	movf	_pBDTEntryEP0OutNext,w,c
 15311  011AF4  26D9               	addwf	fsr2l,f,c
 15312  011AF6  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 15313  011AF8  22DA               	addwfc	fsr2h,f,c
 15314  011AFA  0E30               	movlw	48
 15315  011AFC  6EDE               	movwf	postinc2,c
 15316  011AFE  0E0D               	movlw	13
 15317  011B00  6EDD               	movwf	postdec2,c
 15318                           
 15319                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15320  011B02  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15321  011B06  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15322  011B0A  0E04               	movlw	4
 15323  011B0C  6EDF               	movwf	indf2,c
 15324                           
 15325                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15326  011B0E  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15327  011B12  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15328  011B16  0E00               	movlw	0
 15329  011B18  8EDB               	bsf	plusw2,7,c
 15330                           
 15331                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 15332  011B1A  0E00               	movlw	0
 15333  011B1C  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15334                           
 15335                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 15336  011B1E  0E00               	movlw	0
 15337  011B20  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15338                           
 15339                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 15340  011B22  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15341  011B24  A4D8               	btfss	status,2,c
 15342  011B26  0012               	return	
 15343                           
 15344                           ;usb_device.c: 1741: {
 15345                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 15346  011B28  EC7E  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15347  011B2C  0012               	return	
 15348  011B2E                     __end_of_USBCtrlEPServiceComplete:
 15349                           	opt stack 0
 15350                           pclatu	equ	0xFFB
 15351                           pclath	equ	0xFFA
 15352                           tblptru	equ	0xFF8
 15353                           tblptrh	equ	0xFF7
 15354                           tblptrl	equ	0xFF6
 15355                           tablat	equ	0xFF5
 15356                           prodh	equ	0xFF4
 15357                           prodl	equ	0xFF3
 15358                           intcon	equ	0xFF2
 15359                           intcon2	equ	0xFF1
 15360                           indf0	equ	0xFEF
 15361                           postinc0	equ	0xFEE
 15362                           fsr0h	equ	0xFEA
 15363                           fsr0l	equ	0xFE9
 15364                           wreg	equ	0xFE8
 15365                           indf1	equ	0xFE7
 15366                           postinc1	equ	0xFE6
 15367                           postdec1	equ	0xFE5
 15368                           fsr1h	equ	0xFE2
 15369                           fsr1l	equ	0xFE1
 15370                           indf2	equ	0xFDF
 15371                           postinc2	equ	0xFDE
 15372                           postdec2	equ	0xFDD
 15373                           plusw2	equ	0xFDB
 15374                           fsr2h	equ	0xFDA
 15375                           fsr2l	equ	0xFD9
 15376                           status	equ	0xFD8
 15377                           
 15378 ;; *************** function _USBCtrlEPAllowDataStage *****************
 15379 ;; Defined at:
 15380 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;		None
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;		None
 15385 ;; Return value:  Size  Location     Type
 15386 ;;		None               void
 15387 ;; Registers used:
 15388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 0/0
 15391 ;;		On exit  : 0/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;Total ram usage:        0 bytes
 15399 ;; Hardware stack levels used:    1
 15400 ;; Hardware stack levels required when called:    1
 15401 ;; This function calls:
 15402 ;;		_USBCtrlTrfTxService
 15403 ;; This function is called by:
 15404 ;;		_USBCtrlEPServiceComplete
 15405 ;; This function uses a non-reentrant model
 15406 ;;
 15407                           
 15408                           	psect	text78
 15409  0130EE                     __ptext78:
 15410                           	opt stack 0
 15411  0130EE                     _USBCtrlEPAllowDataStage:
 15412                           	opt stack 14
 15413                           
 15414                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 15415                           
 15416                           ;incstack = 0
 15417  0130EE  0E00               	movlw	0
 15418  0130F0  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15419                           
 15420                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 15421  0130F2  0E00               	movlw	0
 15422  0130F4  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15423                           
 15424                           ;usb_device.c: 1493: if(controlTransferState == 2)
 15425  0130F6  0E02               	movlw	2
 15426  0130F8  1817               	xorwf	_controlTransferState,w,c	;volatile
 15427  0130FA  A4D8               	btfss	status,2,c
 15428  0130FC  D01F               	goto	i2l5431
 15429                           
 15430                           ;usb_device.c: 1494: {
 15431                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 15432  0130FE  EE20 F001          	lfsr	2,1
 15433  013102  5005               	movf	_pBDTEntryEP0OutNext,w,c
 15434  013104  26D9               	addwf	fsr2l,f,c
 15435  013106  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 15436  013108  22DA               	addwfc	fsr2h,f,c
 15437  01310A  0E08               	movlw	8
 15438  01310C  6EDF               	movwf	indf2,c
 15439                           
 15440                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 15441  01310E  EE20 F002          	lfsr	2,2
 15442  013112  5005               	movf	_pBDTEntryEP0OutNext,w,c
 15443  013114  26D9               	addwf	fsr2l,f,c
 15444  013116  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 15445  013118  22DA               	addwfc	fsr2h,f,c
 15446  01311A  0E38               	movlw	56
 15447  01311C  6EDE               	movwf	postinc2,c
 15448  01311E  0E0D               	movlw	13
 15449  013120  6EDD               	movwf	postdec2,c
 15450                           
 15451                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15452  013122  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15453  013126  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15454  01312A  0E48               	movlw	72
 15455  01312C  6EDF               	movwf	indf2,c
 15456                           
 15457                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15458  01312E  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15459  013132  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15460  013136  0E00               	movlw	0
 15461  013138  8EDB               	bsf	plusw2,7,c
 15462                           
 15463                           ;usb_device.c: 1500: }
 15464  01313A  0012               	return	
 15465  01313C                     i2l5431:
 15466                           
 15467                           ;usb_device.c: 1501: else
 15468                           ;usb_device.c: 1502: {
 15469                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 15470  01313C  0100               	movlb	0	; () banked
 15471  01313E  51D6               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 15472  013140  010D               	movlb	13	; () banked
 15473  013142  5D36               	subwf	54,w,b	;volatile
 15474  013144  0100               	movlb	0	; () banked
 15475  013146  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 15476  013148  010D               	movlb	13	; () banked
 15477  01314A  5937               	subwfb	55,w,b	;volatile
 15478  01314C  B0D8               	btfsc	status,0,c
 15479  01314E  D004               	goto	i2l5435
 15480                           
 15481                           ; BSR set to: 13
 15482                           ;usb_device.c: 1506: {
 15483                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 15484  013150  CD36 F0D6          	movff	3382,_inPipes+4	;volatile
 15485  013154  CD37 F0D7          	movff	3383,_inPipes+5	;volatile
 15486  013158                     i2l5435:
 15487                           
 15488                           ; BSR set to: 13
 15489                           ;usb_device.c: 1508: }
 15490                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 15491  013158  EC32  F091         	call	_USBCtrlTrfTxService	;wreg free
 15492                           
 15493                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 15494  01315C  0100               	movlb	0	; () banked
 15495  01315E  EE20 F002          	lfsr	2,2
 15496  013162  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 15497  013164  26D9               	addwf	fsr2l,f,c
 15498  013166  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 15499  013168  22DA               	addwfc	fsr2h,f,c
 15500  01316A  0E38               	movlw	56
 15501  01316C  6EDE               	movwf	postinc2,c
 15502  01316E  0E0D               	movlw	13
 15503  013170  6EDD               	movwf	postdec2,c
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15507  013172  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15508  013176  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15509  01317A  0E48               	movlw	72
 15510  01317C  6EDF               	movwf	indf2,c
 15511                           
 15512                           ; BSR set to: 0
 15513                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15514  01317E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 15515  013182  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15516  013186  0E00               	movlw	0
 15517  013188  8EDB               	bsf	plusw2,7,c
 15518  01318A  0012               	return	
 15519  01318C                     __end_of_USBCtrlEPAllowDataStage:
 15520                           	opt stack 0
 15521                           pclatu	equ	0xFFB
 15522                           pclath	equ	0xFFA
 15523                           tblptru	equ	0xFF8
 15524                           tblptrh	equ	0xFF7
 15525                           tblptrl	equ	0xFF6
 15526                           tablat	equ	0xFF5
 15527                           prodh	equ	0xFF4
 15528                           prodl	equ	0xFF3
 15529                           intcon	equ	0xFF2
 15530                           intcon2	equ	0xFF1
 15531                           indf0	equ	0xFEF
 15532                           postinc0	equ	0xFEE
 15533                           fsr0h	equ	0xFEA
 15534                           fsr0l	equ	0xFE9
 15535                           wreg	equ	0xFE8
 15536                           indf1	equ	0xFE7
 15537                           postinc1	equ	0xFE6
 15538                           postdec1	equ	0xFE5
 15539                           fsr1h	equ	0xFE2
 15540                           fsr1l	equ	0xFE1
 15541                           indf2	equ	0xFDF
 15542                           postinc2	equ	0xFDE
 15543                           postdec2	equ	0xFDD
 15544                           plusw2	equ	0xFDB
 15545                           fsr2h	equ	0xFDA
 15546                           fsr2l	equ	0xFD9
 15547                           status	equ	0xFD8
 15548                           
 15549 ;; *************** function _USBCheckStdRequest *****************
 15550 ;; Defined at:
 15551 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 15552 ;; Parameters:    Size  Location     Type
 15553 ;;		None
 15554 ;; Auto vars:     Size  Location     Type
 15555 ;;		None
 15556 ;; Return value:  Size  Location     Type
 15557 ;;		None               void
 15558 ;; Registers used:
 15559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15560 ;; Tracked objects:
 15561 ;;		On entry : 0/0
 15562 ;;		On exit  : 0/0
 15563 ;;		Unchanged: 0/0
 15564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15569 ;;Total ram usage:        0 bytes
 15570 ;; Hardware stack levels used:    1
 15571 ;; Hardware stack levels required when called:    5
 15572 ;; This function calls:
 15573 ;;		_USBStdFeatureReqHandler
 15574 ;;		_USBStdGetDscHandler
 15575 ;;		_USBStdGetStatusHandler
 15576 ;;		_USBStdSetCfgHandler
 15577 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15578 ;; This function is called by:
 15579 ;;		_USBCtrlTrfSetupHandler
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           	psect	text79
 15584  011C20                     __ptext79:
 15585                           	opt stack 0
 15586  011C20                     _USBCheckStdRequest:
 15587                           	opt stack 11
 15588                           
 15589                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 15590                           
 15591                           ;incstack = 0
 15592  011C20  010D               	movlb	13	; () banked
 15593  011C22  3930               	swapf	48,w,b	;volatile
 15594  011C24  32E8               	rrcf	wreg,f,c
 15595  011C26  0B03               	andlw	3
 15596  011C28  0900               	iorlw	0
 15597  011C2A  A4D8               	btfss	status,2,c
 15598  011C2C  0012               	return	
 15599  011C2E  D04F               	goto	i2l6021
 15600  011C30                     i2l359:
 15601                           
 15602                           ; BSR set to: 13
 15603                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 15604  011C30  0100               	movlb	0	; () banked
 15605  011C32  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15606                           
 15607                           ; BSR set to: 0
 15608                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 15609  011C34  0E08               	movlw	8
 15610  011C36  6E12               	movwf	_USBDeviceState,c	;volatile
 15611                           
 15612                           ;usb_device.c: 2699: break;
 15613  011C38  0012               	return	
 15614  011C3A                     i2l5991:
 15615                           
 15616                           ;usb_device.c: 2701: USBStdGetDscHandler();
 15617  011C3A  ECA5  F08A         	call	_USBStdGetDscHandler	;wreg free
 15618                           
 15619                           ;usb_device.c: 2702: break;
 15620  011C3E  0012               	return	
 15621  011C40                     i2l5993:
 15622                           
 15623                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 15624  011C40  ECE6  F08F         	call	_USBStdSetCfgHandler	;wreg free
 15625                           
 15626                           ;usb_device.c: 2705: break;
 15627  011C44  0012               	return	
 15628  011C46                     i2l5995:
 15629                           
 15630                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 15631  011C46  0E2B               	movlw	low _USBActiveConfiguration
 15632  011C48  0100               	movlb	0	; () banked
 15633  011C4A  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15634  011C4C  0E00               	movlw	high _USBActiveConfiguration
 15635  011C4E  0100               	movlb	0	; () banked
 15636  011C50  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15637                           
 15638                           ; BSR set to: 0
 15639                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15640  011C52  0100               	movlb	0	; () banked
 15641  011C54  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 15645  011C56  0E01               	movlw	1
 15646  011C58  0100               	movlb	0	; () banked
 15647  011C5A  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15648                           
 15649                           ; BSR set to: 0
 15650                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 15651  011C5C  0100               	movlb	0	; () banked
 15652  011C5E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15653                           
 15654                           ;usb_device.c: 2711: break;
 15655  011C60  0012               	return	
 15656  011C62                     i2l6003:
 15657                           
 15658                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 15659  011C62  ECBB  F096         	call	_USBStdGetStatusHandler	;wreg free
 15660                           
 15661                           ;usb_device.c: 2714: break;
 15662  011C66  0012               	return	
 15663  011C68                     i2l6005:
 15664                           
 15665                           ;usb_device.c: 2716: case 3:
 15666                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 15667  011C68  ECFE  F086         	call	_USBStdFeatureReqHandler	;wreg free
 15668                           
 15669                           ;usb_device.c: 2718: break;
 15670  011C6C  0012               	return	
 15671  011C6E                     i2l6007:
 15672                           
 15673                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 15674  011C6E  010D               	movlb	13	; () banked
 15675  011C70  5134               	movf	52,w,b	;volatile
 15676  011C72  0D01               	mullw	1
 15677  011C74  0E29               	movlw	low _USBAlternateInterface
 15678  011C76  24F3               	addwf	prodl,w,c
 15679  011C78  0100               	movlb	0	; () banked
 15680  011C7A  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15681  011C7C  0E00               	movlw	high _USBAlternateInterface
 15682  011C7E  20F4               	addwfc	prodh,w,c
 15683  011C80  0100               	movlb	0	; () banked
 15684  011C82  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15688  011C84  0100               	movlb	0	; () banked
 15689  011C86  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 15693  011C88  0E01               	movlw	1
 15694  011C8A  0100               	movlb	0	; () banked
 15695  011C8C  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 15699  011C8E  0100               	movlb	0	; () banked
 15700  011C90  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15701                           
 15702                           ;usb_device.c: 2724: break;
 15703  011C92  0012               	return	
 15704  011C94                     i2l368:
 15705                           
 15706                           ; BSR set to: 13
 15707                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 15708  011C94  0100               	movlb	0	; () banked
 15709  011C96  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 15713  011C98  010D               	movlb	13	; () banked
 15714  011C9A  5134               	movf	52,w,b	;volatile
 15715  011C9C  0D01               	mullw	1
 15716  011C9E  0E29               	movlw	low _USBAlternateInterface
 15717  011CA0  24F3               	addwf	prodl,w,c
 15718  011CA2  6ED9               	movwf	fsr2l,c
 15719  011CA4  0E00               	movlw	high _USBAlternateInterface
 15720  011CA6  20F4               	addwfc	prodh,w,c
 15721  011CA8  6EDA               	movwf	fsr2h,c
 15722  011CAA  CD32 FFDF          	movff	3378,indf2	;volatile
 15723                           
 15724                           ;usb_device.c: 2728: break;
 15725  011CAE  0012               	return	
 15726  011CB0                     i2l6017:
 15727                           
 15728                           ; BSR set to: 13
 15729                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 15730  011CB0  0E00               	movlw	0
 15731  011CB2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15732  011CB4  0E02               	movlw	2
 15733  011CB6  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15734  011CB8  0E00               	movlw	0
 15735  011CBA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15736  011CBC  0E00               	movlw	0
 15737  011CBE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15738  011CC0  0E00               	movlw	0
 15739  011CC2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15740  011CC4  0E00               	movlw	0
 15741  011CC6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15742  011CC8  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15743                           
 15744                           ;usb_device.c: 2735: }
 15745                           
 15746                           ;usb_device.c: 2734: break;
 15747                           
 15748                           ;usb_device.c: 2733: default:
 15749                           
 15750                           ;usb_device.c: 2732: case 12:
 15751                           
 15752                           ;usb_device.c: 2731: break;
 15753  011CCC  0012               	return	
 15754  011CCE                     i2l6021:
 15755  011CCE  010D               	movlb	13	; () banked
 15756  011CD0  5131               	movf	49,w,b	;volatile
 15757                           
 15758                           ; Switch size 1, requested type "space"
 15759                           ; Number of cases is 11, Range of values is 0 to 12
 15760                           ; switch strategies available:
 15761                           ; Name         Instructions Cycles
 15762                           ; simple_byte           34    18 (average)
 15763                           ;	Chosen strategy is simple_byte
 15764  011CD2  0A00               	xorlw	0	; case 0
 15765  011CD4  B4D8               	btfsc	status,2,c
 15766  011CD6  D7C5               	goto	i2l6003
 15767  011CD8  0A01               	xorlw	1	; case 1
 15768  011CDA  B4D8               	btfsc	status,2,c
 15769  011CDC  D7C5               	goto	i2l6005
 15770  011CDE  0A02               	xorlw	2	; case 3
 15771  011CE0  B4D8               	btfsc	status,2,c
 15772  011CE2  D7C2               	goto	i2l6005
 15773  011CE4  0A06               	xorlw	6	; case 5
 15774  011CE6  B4D8               	btfsc	status,2,c
 15775  011CE8  D7A3               	goto	i2l359
 15776  011CEA  0A03               	xorlw	3	; case 6
 15777  011CEC  B4D8               	btfsc	status,2,c
 15778  011CEE  D7A5               	goto	i2l5991
 15779  011CF0  0A01               	xorlw	1	; case 7
 15780  011CF2  B4D8               	btfsc	status,2,c
 15781  011CF4  D7DD               	goto	i2l6017
 15782  011CF6  0A0F               	xorlw	15	; case 8
 15783  011CF8  B4D8               	btfsc	status,2,c
 15784  011CFA  D7A5               	goto	i2l5995
 15785  011CFC  0A01               	xorlw	1	; case 9
 15786  011CFE  B4D8               	btfsc	status,2,c
 15787  011D00  D79F               	goto	i2l5993
 15788  011D02  0A03               	xorlw	3	; case 10
 15789  011D04  B4D8               	btfsc	status,2,c
 15790  011D06  D7B3               	goto	i2l6007
 15791  011D08  0A01               	xorlw	1	; case 11
 15792  011D0A  B4D8               	btfsc	status,2,c
 15793  011D0C  D7C3               	goto	i2l368
 15794  011D0E  0A07               	xorlw	7	; case 12
 15795  011D10  0012               	return	
 15796  011D12                     __end_of_USBCheckStdRequest:
 15797                           	opt stack 0
 15798                           pclatu	equ	0xFFB
 15799                           pclath	equ	0xFFA
 15800                           tblptru	equ	0xFF8
 15801                           tblptrh	equ	0xFF7
 15802                           tblptrl	equ	0xFF6
 15803                           tablat	equ	0xFF5
 15804                           prodh	equ	0xFF4
 15805                           prodl	equ	0xFF3
 15806                           intcon	equ	0xFF2
 15807                           intcon2	equ	0xFF1
 15808                           indf0	equ	0xFEF
 15809                           postinc0	equ	0xFEE
 15810                           fsr0h	equ	0xFEA
 15811                           fsr0l	equ	0xFE9
 15812                           wreg	equ	0xFE8
 15813                           indf1	equ	0xFE7
 15814                           postinc1	equ	0xFE6
 15815                           postdec1	equ	0xFE5
 15816                           fsr1h	equ	0xFE2
 15817                           fsr1l	equ	0xFE1
 15818                           indf2	equ	0xFDF
 15819                           postinc2	equ	0xFDE
 15820                           postdec2	equ	0xFDD
 15821                           plusw2	equ	0xFDB
 15822                           fsr2h	equ	0xFDA
 15823                           fsr2l	equ	0xFD9
 15824                           status	equ	0xFD8
 15825                           
 15826 ;; *************** function _USBStdSetCfgHandler *****************
 15827 ;; Defined at:
 15828 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 15829 ;; Parameters:    Size  Location     Type
 15830 ;;		None
 15831 ;; Auto vars:     Size  Location     Type
 15832 ;;  i               1   20[COMRAM] unsigned char 
 15833 ;; Return value:  Size  Location     Type
 15834 ;;		None               void
 15835 ;; Registers used:
 15836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15837 ;; Tracked objects:
 15838 ;;		On entry : 0/0
 15839 ;;		On exit  : 0/0
 15840 ;;		Unchanged: 0/0
 15841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15846 ;;Total ram usage:        1 bytes
 15847 ;; Hardware stack levels used:    1
 15848 ;; Hardware stack levels required when called:    4
 15849 ;; This function calls:
 15850 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15851 ;;		i2_memset
 15852 ;; This function is called by:
 15853 ;;		_USBCheckStdRequest
 15854 ;; This function uses a non-reentrant model
 15855 ;;
 15856                           
 15857                           	psect	text80
 15858  011FCC                     __ptext80:
 15859                           	opt stack 0
 15860  011FCC                     _USBStdSetCfgHandler:
 15861                           	opt stack 11
 15862                           
 15863                           ;usb_device.c: 1970: uint8_t i;
 15864                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 15865                           
 15866                           ;incstack = 0
 15867  011FCC  0100               	movlb	0	; () banked
 15868  011FCE  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15869                           
 15870                           ; BSR set to: 0
 15871                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 15872  011FD0  0E27               	movlw	39
 15873  011FD2  6E2D               	movwf	i2memset@p1,c
 15874  011FD4  0E0F               	movlw	15
 15875  011FD6  6E2E               	movwf	i2memset@p1+1,c
 15876  011FD8  0E00               	movlw	0
 15877  011FDA  6E30               	movwf	i2memset@c+1,c
 15878  011FDC  0E00               	movlw	0
 15879  011FDE  6E2F               	movwf	i2memset@c,c
 15880  011FE0  0E00               	movlw	0
 15881  011FE2  6E32               	movwf	i2memset@n+1,c
 15882  011FE4  0E02               	movlw	2
 15883  011FE6  6E31               	movwf	i2memset@n,c
 15884  011FE8  EC70  F09F         	call	i2_memset	;wreg free
 15885                           
 15886                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15887  011FEC  0E00               	movlw	0
 15888  011FEE  6E2D               	movwf	i2memset@p1,c
 15889  011FF0  0E0D               	movlw	13
 15890  011FF2  6E2E               	movwf	i2memset@p1+1,c
 15891  011FF4  0E00               	movlw	0
 15892  011FF6  6E30               	movwf	i2memset@c+1,c
 15893  011FF8  0E00               	movlw	0
 15894  011FFA  6E2F               	movwf	i2memset@c,c
 15895  011FFC  0E00               	movlw	0
 15896  011FFE  6E32               	movwf	i2memset@n+1,c
 15897  012000  0E30               	movlw	48
 15898  012002  6E31               	movwf	i2memset@n,c
 15899  012004  EC70  F09F         	call	i2_memset	;wreg free
 15900                           
 15901                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 15902  012008  8C65               	bsf	3941,6,c	;volatile
 15903                           
 15904                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 15905  01200A  0E00               	movlw	0
 15906  01200C  6E41               	movwf	USBStdSetCfgHandler@i,c
 15907  01200E                     i2l5451:
 15908  01200E  0E02               	movlw	2
 15909  012010  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 15910  012012  D001               	goto	i2l5455
 15911  012014  D016               	goto	i2l5461
 15912  012016                     i2l5455:
 15913                           
 15914                           ;usb_device.c: 1988: {
 15915                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 15916  012016  5041               	movf	USBStdSetCfgHandler@i,w,c
 15917  012018  0D01               	mullw	1
 15918  01201A  0EE4               	movlw	low _ep_data_in
 15919  01201C  24F3               	addwf	prodl,w,c
 15920  01201E  6ED9               	movwf	fsr2l,c
 15921  012020  0E00               	movlw	high _ep_data_in
 15922  012022  20F4               	addwfc	prodh,w,c
 15923  012024  6EDA               	movwf	fsr2h,c
 15924  012026  0E00               	movlw	0
 15925  012028  6EDF               	movwf	indf2,c
 15926                           
 15927                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 15928  01202A  5041               	movf	USBStdSetCfgHandler@i,w,c
 15929  01202C  0D01               	mullw	1
 15930  01202E  0EE7               	movlw	low _ep_data_out
 15931  012030  24F3               	addwf	prodl,w,c
 15932  012032  6ED9               	movwf	fsr2l,c
 15933  012034  0E00               	movlw	high _ep_data_out
 15934  012036  20F4               	addwfc	prodh,w,c
 15935  012038  6EDA               	movwf	fsr2h,c
 15936  01203A  0E00               	movlw	0
 15937  01203C  6EDF               	movwf	indf2,c
 15938  01203E  2A41               	incf	USBStdSetCfgHandler@i,f,c
 15939  012040  D7E6               	goto	i2l5451
 15940  012042                     i2l5461:
 15941                           
 15942                           ;usb_device.c: 1991: }
 15943                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 15944  012042  0E29               	movlw	low _USBAlternateInterface
 15945  012044  6E2D               	movwf	i2memset@p1,c
 15946  012046  0E00               	movlw	high _USBAlternateInterface
 15947  012048  6E2E               	movwf	i2memset@p1+1,c
 15948  01204A  0E00               	movlw	0
 15949  01204C  6E30               	movwf	i2memset@c+1,c
 15950  01204E  0E00               	movlw	0
 15951  012050  6E2F               	movwf	i2memset@c,c
 15952  012052  0E00               	movlw	0
 15953  012054  6E32               	movwf	i2memset@n+1,c
 15954  012056  0E02               	movlw	2
 15955  012058  6E31               	movwf	i2memset@n,c
 15956  01205A  EC70  F09F         	call	i2_memset	;wreg free
 15957                           
 15958                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 15959  01205E  9C65               	bcf	3941,6,c	;volatile
 15960                           
 15961                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15962  012060  0E08               	movlw	8
 15963  012062  0100               	movlb	0	; () banked
 15964  012064  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 15965  012066  0E0D               	movlw	13
 15966  012068  0100               	movlb	0	; () banked
 15967  01206A  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15971  01206C  0E00               	movlw	0
 15972  01206E  6E03               	movwf	_pBDTEntryEP0OutCurrent,c
 15973  012070  0E0D               	movlw	13
 15974  012072  6E04               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15975                           
 15976                           ; BSR set to: 0
 15977                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15978  012074  C003  F005         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15979  012078  C004  F006         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15983  01207C  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 15987  012080  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 15988  012082  A4D8               	btfss	status,2,c
 15989  012084  D003               	goto	i2l5477
 15990                           
 15991                           ; BSR set to: 0
 15992                           ;usb_device.c: 2010: {
 15993                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 15994  012086  0E10               	movlw	16
 15995  012088  6E12               	movwf	_USBDeviceState,c	;volatile
 15996                           
 15997                           ;usb_device.c: 2013: }
 15998  01208A  0012               	return	
 15999  01208C                     i2l5477:
 16000                           
 16001                           ; BSR set to: 0
 16002                           ;usb_device.c: 2014: else
 16003                           ;usb_device.c: 2015: {
 16004                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16005  01208C  0E00               	movlw	0
 16006  01208E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16007  012090  0E01               	movlw	1
 16008  012092  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16009  012094  0E2B               	movlw	low _USBActiveConfiguration
 16010  012096  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16011  012098  0E00               	movlw	high _USBActiveConfiguration
 16012  01209A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16013  01209C  0E00               	movlw	0
 16014  01209E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16015  0120A0  0E01               	movlw	1
 16016  0120A2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16017  0120A4  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16018                           
 16019                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 16020  0120A8  0E20               	movlw	32
 16021  0120AA  6E12               	movwf	_USBDeviceState,c	;volatile
 16022  0120AC  0012               	return	
 16023  0120AE                     __end_of_USBStdSetCfgHandler:
 16024                           	opt stack 0
 16025                           pclatu	equ	0xFFB
 16026                           pclath	equ	0xFFA
 16027                           tblptru	equ	0xFF8
 16028                           tblptrh	equ	0xFF7
 16029                           tblptrl	equ	0xFF6
 16030                           tablat	equ	0xFF5
 16031                           prodh	equ	0xFF4
 16032                           prodl	equ	0xFF3
 16033                           intcon	equ	0xFF2
 16034                           intcon2	equ	0xFF1
 16035                           indf0	equ	0xFEF
 16036                           postinc0	equ	0xFEE
 16037                           fsr0h	equ	0xFEA
 16038                           fsr0l	equ	0xFE9
 16039                           wreg	equ	0xFE8
 16040                           indf1	equ	0xFE7
 16041                           postinc1	equ	0xFE6
 16042                           postdec1	equ	0xFE5
 16043                           fsr1h	equ	0xFE2
 16044                           fsr1l	equ	0xFE1
 16045                           indf2	equ	0xFDF
 16046                           postinc2	equ	0xFDE
 16047                           postdec2	equ	0xFDD
 16048                           plusw2	equ	0xFDB
 16049                           fsr2h	equ	0xFDA
 16050                           fsr2l	equ	0xFD9
 16051                           status	equ	0xFD8
 16052                           
 16053 ;; *************** function i2_memset *****************
 16054 ;; Defined at:
 16055 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16056 ;; Parameters:    Size  Location     Type
 16057 ;;  p1              2    0[COMRAM] PTR void 
 16058 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16059 ;;  c               2    2[COMRAM] int 
 16060 ;;  n               2    4[COMRAM] unsigned int 
 16061 ;; Auto vars:     Size  Location     Type
 16062 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16063 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  2    0[COMRAM] PTR void 
 16066 ;; Registers used:
 16067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16073 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16077 ;;Total ram usage:        8 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; This function calls:
 16080 ;;		Nothing
 16081 ;; This function is called by:
 16082 ;;		_USBStdSetCfgHandler
 16083 ;;		i2_USBDeviceInit
 16084 ;; This function uses a non-reentrant model
 16085 ;;
 16086                           
 16087                           	psect	text81
 16088  013EE0                     __ptext81:
 16089                           	opt stack 0
 16090  013EE0                     i2_memset:
 16091                           	opt stack 17
 16092                           
 16093                           ;incstack = 0
 16094  013EE0  C02D  F033         	movff	i2memset@p1,i2memset@p
 16095  013EE4  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 16096  013EE8  D008               	goto	i2l5385
 16097  013EEA                     i2l5381:
 16098  013EEA  C033  FFD9         	movff	i2memset@p,fsr2l
 16099  013EEE  C034  FFDA         	movff	i2memset@p+1,fsr2h
 16100  013EF2  C02F  FFDF         	movff	i2memset@c,indf2
 16101  013EF6  4A33               	infsnz	i2memset@p,f,c
 16102  013EF8  2A34               	incf	i2memset@p+1,f,c
 16103  013EFA                     i2l5385:
 16104  013EFA  0631               	decf	i2memset@n,f,c
 16105  013EFC  A0D8               	btfss	status,0,c
 16106  013EFE  0632               	decf	i2memset@n+1,f,c
 16107  013F00  2831               	incf	i2memset@n,w,c
 16108  013F02  E1F3               	bnz	i2l5381
 16109  013F04  2832               	incf	i2memset@n+1,w,c
 16110  013F06  B4D8               	btfsc	status,2,c
 16111  013F08  0012               	return	
 16112  013F0A  D7EF               	goto	i2l5381
 16113  013F0C                     __end_ofi2_memset:
 16114                           	opt stack 0
 16115                           pclatu	equ	0xFFB
 16116                           pclath	equ	0xFFA
 16117                           tblptru	equ	0xFF8
 16118                           tblptrh	equ	0xFF7
 16119                           tblptrl	equ	0xFF6
 16120                           tablat	equ	0xFF5
 16121                           prodh	equ	0xFF4
 16122                           prodl	equ	0xFF3
 16123                           intcon	equ	0xFF2
 16124                           intcon2	equ	0xFF1
 16125                           indf0	equ	0xFEF
 16126                           postinc0	equ	0xFEE
 16127                           fsr0h	equ	0xFEA
 16128                           fsr0l	equ	0xFE9
 16129                           wreg	equ	0xFE8
 16130                           indf1	equ	0xFE7
 16131                           postinc1	equ	0xFE6
 16132                           postdec1	equ	0xFE5
 16133                           fsr1h	equ	0xFE2
 16134                           fsr1l	equ	0xFE1
 16135                           indf2	equ	0xFDF
 16136                           postinc2	equ	0xFDE
 16137                           postdec2	equ	0xFDD
 16138                           plusw2	equ	0xFDB
 16139                           fsr2h	equ	0xFDA
 16140                           fsr2l	equ	0xFD9
 16141                           status	equ	0xFD8
 16142                           
 16143 ;; *************** function _USBStdGetStatusHandler *****************
 16144 ;; Defined at:
 16145 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;		None
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;  p               2    1[COMRAM] PTR struct __BDT
 16150 ;;		 -> NULL(0), BDT(48), 
 16151 ;; Return value:  Size  Location     Type
 16152 ;;		None               void
 16153 ;; Registers used:
 16154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16155 ;; Tracked objects:
 16156 ;;		On entry : 0/0
 16157 ;;		On exit  : 0/0
 16158 ;;		Unchanged: 0/0
 16159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16163 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16164 ;;Total ram usage:        3 bytes
 16165 ;; Hardware stack levels used:    1
 16166 ;; This function calls:
 16167 ;;		Nothing
 16168 ;; This function is called by:
 16169 ;;		_USBCheckStdRequest
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text82
 16174  012D76                     __ptext82:
 16175                           	opt stack 0
 16176  012D76                     _USBStdGetStatusHandler:
 16177                           	opt stack 15
 16178                           
 16179                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 16180                           
 16181                           ;incstack = 0
 16182  012D76  0E00               	movlw	0
 16183  012D78  010D               	movlb	13	; () banked
 16184  012D7A  6F38               	movwf	56,b	;volatile
 16185                           
 16186                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 16187  012D7C  0E00               	movlw	0
 16188  012D7E  010D               	movlb	13	; () banked
 16189  012D80  6F39               	movwf	57,b	;volatile
 16190                           
 16191                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 16192  012D82  D03B               	goto	i2l5533
 16193  012D84                     i2l295:
 16194                           
 16195                           ; BSR set to: 13
 16196                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 16197  012D84  0100               	movlb	0	; () banked
 16198  012D86  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16199                           
 16200                           ;usb_device.c: 2145: }
 16201                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 16202                           
 16203                           ; BSR set to: 13
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;usb_device.c: 2143: {
 16207                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 16208                           
 16209                           ;usb_device.c: 2142: if(0 == 1)
 16210  012D88  040E               	decf	_RemoteWakeup,w,c	;volatile
 16211  012D8A  A4D8               	btfss	status,2,c
 16212  012D8C  D042               	goto	i2l298
 16213                           
 16214                           ;usb_device.c: 2148: {
 16215                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 16216  012D8E  010D               	movlb	13	; () banked
 16217  012D90  8338               	bsf	56,1,b	;volatile
 16218                           
 16219                           ; BSR set to: 13
 16220                           ;usb_device.c: 2150: }
 16221                           ;usb_device.c: 2151: break;
 16222  012D92  D03F               	goto	i2l298
 16223  012D94                     i2l299:
 16224                           
 16225                           ; BSR set to: 13
 16226                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 16227  012D94  0100               	movlb	0	; () banked
 16228  012D96  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16229                           
 16230                           ;usb_device.c: 2154: break;
 16231  012D98  D03C               	goto	i2l298
 16232  012D9A                     i2l300:
 16233                           
 16234                           ; BSR set to: 13
 16235                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 16236  012D9A  0100               	movlb	0	; () banked
 16237  012D9C  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16238                           
 16239                           ;usb_device.c: 2160: {
 16240                           ;usb_device.c: 2161: BDT_ENTRY *p;
 16241                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 16242  012D9E  010D               	movlb	13	; () banked
 16243  012DA0  BF34               	btfsc	52,7,b	;volatile
 16244  012DA2  D00B               	goto	i2l5523
 16245                           
 16246                           ; BSR set to: 13
 16247                           ;usb_device.c: 2164: {
 16248                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16249  012DA4  010D               	movlb	13	; () banked
 16250  012DA6  5134               	movf	52,w,b	;volatile
 16251  012DA8  0B0F               	andlw	15
 16252  012DAA  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16253  012DAC  502D               	movf	??_USBStdGetStatusHandler,w,c
 16254  012DAE  0D02               	mullw	2
 16255  012DB0  0EDE               	movlw	low _pBDTEntryOut
 16256  012DB2  24F3               	addwf	prodl,w,c
 16257  012DB4  6ED9               	movwf	fsr2l,c
 16258  012DB6  0E00               	movlw	high _pBDTEntryOut
 16259  012DB8  D00A               	goto	L5
 16260  012DBA                     i2l5523:
 16261                           
 16262                           ; BSR set to: 13
 16263                           ;usb_device.c: 2167: else
 16264                           ;usb_device.c: 2168: {
 16265                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16266  012DBA  010D               	movlb	13	; () banked
 16267  012DBC  5134               	movf	52,w,b	;volatile
 16268  012DBE  0B0F               	andlw	15
 16269  012DC0  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16270  012DC2  502D               	movf	??_USBStdGetStatusHandler,w,c
 16271  012DC4  0D02               	mullw	2
 16272  012DC6  0ED8               	movlw	low _pBDTEntryIn
 16273  012DC8  24F3               	addwf	prodl,w,c
 16274  012DCA  6ED9               	movwf	fsr2l,c
 16275  012DCC  0E00               	movlw	high _pBDTEntryIn
 16276  012DCE                     L5:
 16277  012DCE  20F4               	addwfc	prodh,w,c
 16278  012DD0  6EDA               	movwf	fsr2h,c
 16279  012DD2  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 16280  012DD6  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 16281                           
 16282                           ; BSR set to: 13
 16283                           ;usb_device.c: 2170: }
 16284                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 16285                           
 16286                           ; BSR set to: 13
 16287  012DDA  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16288  012DDE  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16289  012DE2  AEDF               	btfss	indf2,7,c
 16290  012DE4  D016               	goto	i2l298
 16291                           
 16292                           ; BSR set to: 13
 16293  012DE6  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16294  012DEA  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16295  012DEE  A4DF               	btfss	indf2,2,c
 16296  012DF0  D010               	goto	i2l298
 16297                           
 16298                           ; BSR set to: 13
 16299                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 16300  012DF2  0E01               	movlw	1
 16301  012DF4  010D               	movlb	13	; () banked
 16302  012DF6  6F38               	movwf	56,b	;volatile
 16303                           
 16304                           ; BSR set to: 13
 16305                           ;usb_device.c: 2175: }
 16306                           ;usb_device.c: 2176: }
 16307                           
 16308                           ; BSR set to: 13
 16309                           ;usb_device.c: 2174: break;
 16310  012DF8  D00C               	goto	i2l298
 16311  012DFA                     i2l5533:
 16312                           
 16313                           ; BSR set to: 13
 16314  012DFA  010D               	movlb	13	; () banked
 16315  012DFC  5130               	movf	48,w,b	;volatile
 16316  012DFE  0B1F               	andlw	31
 16317                           
 16318                           ; Switch size 1, requested type "space"
 16319                           ; Number of cases is 3, Range of values is 0 to 2
 16320                           ; switch strategies available:
 16321                           ; Name         Instructions Cycles
 16322                           ; simple_byte           10     6 (average)
 16323                           ;	Chosen strategy is simple_byte
 16324  012E00  0A00               	xorlw	0	; case 0
 16325  012E02  B4D8               	btfsc	status,2,c
 16326  012E04  D7BF               	goto	i2l295
 16327  012E06  0A01               	xorlw	1	; case 1
 16328  012E08  B4D8               	btfsc	status,2,c
 16329  012E0A  D7C4               	goto	i2l299
 16330  012E0C  0A03               	xorlw	3	; case 2
 16331  012E0E  B4D8               	btfsc	status,2,c
 16332  012E10  D7C4               	goto	i2l300
 16333  012E12                     i2l298:
 16334                           
 16335                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 16336  012E12  0100               	movlb	0	; () banked
 16337  012E14  AFD5               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 16338  012E16  0012               	return	
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;usb_device.c: 2179: {
 16342                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 16343  012E18  0E38               	movlw	56
 16344  012E1A  0100               	movlb	0	; () banked
 16345  012E1C  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16346  012E1E  0E0D               	movlw	13
 16347  012E20  0100               	movlb	0	; () banked
 16348  012E22  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16352  012E24  0100               	movlb	0	; () banked
 16353  012E26  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 16357  012E28  0E02               	movlw	2
 16358  012E2A  0100               	movlb	0	; () banked
 16359  012E2C  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16360  012E2E  0012               	return	
 16361  012E30                     __end_of_USBStdGetStatusHandler:
 16362                           	opt stack 0
 16363                           pclatu	equ	0xFFB
 16364                           pclath	equ	0xFFA
 16365                           tblptru	equ	0xFF8
 16366                           tblptrh	equ	0xFF7
 16367                           tblptrl	equ	0xFF6
 16368                           tablat	equ	0xFF5
 16369                           prodh	equ	0xFF4
 16370                           prodl	equ	0xFF3
 16371                           intcon	equ	0xFF2
 16372                           intcon2	equ	0xFF1
 16373                           indf0	equ	0xFEF
 16374                           postinc0	equ	0xFEE
 16375                           fsr0h	equ	0xFEA
 16376                           fsr0l	equ	0xFE9
 16377                           wreg	equ	0xFE8
 16378                           indf1	equ	0xFE7
 16379                           postinc1	equ	0xFE6
 16380                           postdec1	equ	0xFE5
 16381                           fsr1h	equ	0xFE2
 16382                           fsr1l	equ	0xFE1
 16383                           indf2	equ	0xFDF
 16384                           postinc2	equ	0xFDE
 16385                           postdec2	equ	0xFDD
 16386                           plusw2	equ	0xFDB
 16387                           fsr2h	equ	0xFDA
 16388                           fsr2l	equ	0xFD9
 16389                           status	equ	0xFD8
 16390                           
 16391 ;; *************** function _USBStdGetDscHandler *****************
 16392 ;; Defined at:
 16393 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 16394 ;; Parameters:    Size  Location     Type
 16395 ;;		None
 16396 ;; Auto vars:     Size  Location     Type
 16397 ;;		None
 16398 ;; Return value:  Size  Location     Type
 16399 ;;		None               void
 16400 ;; Registers used:
 16401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16402 ;; Tracked objects:
 16403 ;;		On entry : 0/0
 16404 ;;		On exit  : 0/0
 16405 ;;		Unchanged: 0/0
 16406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16411 ;;Total ram usage:        2 bytes
 16412 ;; Hardware stack levels used:    1
 16413 ;; This function calls:
 16414 ;;		Nothing
 16415 ;; This function is called by:
 16416 ;;		_USBCheckStdRequest
 16417 ;; This function uses a non-reentrant model
 16418 ;;
 16419                           
 16420                           	psect	text83
 16421  01154A                     __ptext83:
 16422                           	opt stack 0
 16423  01154A                     _USBStdGetDscHandler:
 16424                           	opt stack 15
 16425                           
 16426                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;incstack = 0
 16430  01154A  0E80               	movlw	128
 16431  01154C  010D               	movlb	13	; () banked
 16432  01154E  1930               	xorwf	48,w,b	;volatile
 16433  011550  A4D8               	btfss	status,2,c
 16434  011552  0012               	return	
 16435                           
 16436                           ; BSR set to: 13
 16437                           ;usb_device.c: 2046: {
 16438                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 16439  011554  0EC0               	movlw	192
 16440  011556  0100               	movlb	0	; () banked
 16441  011558  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16442                           
 16443                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 16444  01155A  D092               	goto	i2l5511
 16445  01155C                     i2l5485:
 16446                           
 16447                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 16448  01155C  0E30               	movlw	low _device_dsc
 16449  01155E  0100               	movlb	0	; () banked
 16450  011560  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16451  011562  0EFE               	movlw	high _device_dsc
 16452  011564  0100               	movlb	0	; () banked
 16453  011566  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 16457  011568  0E00               	movlw	0
 16458  01156A  0100               	movlb	0	; () banked
 16459  01156C  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16460  01156E  0E12               	movlw	18
 16461  011570  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16462                           
 16463                           ;usb_device.c: 2058: break;
 16464  011572  0012               	return	
 16465  011574                     i2l5489:
 16466                           
 16467                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 16468  011574  010D               	movlb	13	; () banked
 16469  011576  5132               	movf	50,w,b	;volatile
 16470  011578  A4D8               	btfss	status,2,c
 16471  01157A  D049               	goto	i2l5497
 16472                           
 16473                           ; BSR set to: 13
 16474                           ;usb_device.c: 2064: {
 16475                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 16476  01157C  010D               	movlb	13	; () banked
 16477  01157E  5132               	movf	50,w,b	;volatile
 16478  011580  0D02               	mullw	2
 16479  011582  0E67               	movlw	low _USB_CD_Ptr
 16480  011584  24F3               	addwf	prodl,w,c
 16481  011586  6EF6               	movwf	tblptrl,c
 16482  011588  0EFD               	movlw	high _USB_CD_Ptr
 16483  01158A  20F4               	addwfc	prodh,w,c
 16484  01158C  6EF7               	movwf	tblptrh,c
 16485  01158E                     	if	1	;There are 3 active tblptr bytes
 16486  01158E  6AF8               	clrf	tblptru,c
 16487  011590  0E00               	movlw	low (__mediumconst shr (0+16))
 16488  011592  22F8               	addwfc	tblptru,f,c
 16489  011594                     	endif
 16490  011594  0009               	tblrd		*+
 16491  011596  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16492  01159A  000A               	tblrd		*-
 16493  01159C  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16494                           
 16495                           ; BSR set to: 13
 16496                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 16497  0115A0  0E02               	movlw	2
 16498  0115A2  0100               	movlb	0	; () banked
 16499  0115A4  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 16500  0115A6  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 16501  0115A8  0E00               	movlw	0
 16502  0115AA  0100               	movlb	0	; () banked
 16503  0115AC  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 16504  0115AE  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16505  0115B0  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16506  0115B4  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16507  0115B8  0E00               	movlw	low (__mediumconst shr (0+16))
 16508  0115BA  6EF8               	movwf	tblptru,c
 16509  0115BC  0E0E               	movlw	(high __ramtop+-1)
 16510  0115BE  64F7               	cpfsgt	tblptrh,c
 16511  0115C0  D003               	bra	i2u448_47
 16512  0115C2  0008               	tblrd		*
 16513  0115C4  50F5               	movf	tablat,w,c
 16514  0115C6  D005               	bra	i2u448_40
 16515  0115C8                     i2u448_47:
 16516  0115C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16517  0115CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16518  0115D0  50EF               	movf	indf0,w,c
 16519  0115D2                     i2u448_40:
 16520  0115D2  0100               	movlb	0	; () banked
 16521  0115D4  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 16525  0115D6  0E03               	movlw	3
 16526  0115D8  0100               	movlb	0	; () banked
 16527  0115DA  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 16528  0115DC  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 16529  0115DE  0E00               	movlw	0
 16530  0115E0  0100               	movlb	0	; () banked
 16531  0115E2  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 16532  0115E4  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16533  0115E6  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16534  0115EA  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16535  0115EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16536  0115F0  6EF8               	movwf	tblptru,c
 16537  0115F2  0E0E               	movlw	(high __ramtop+-1)
 16538  0115F4  64F7               	cpfsgt	tblptrh,c
 16539  0115F6  D003               	bra	i2u449_47
 16540  0115F8  0008               	tblrd		*
 16541  0115FA  50F5               	movf	tablat,w,c
 16542  0115FC  D005               	bra	i2u449_40
 16543  0115FE                     i2u449_47:
 16544  0115FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 16545  011602  CFF7 FFEA          	movff	tblptrh,fsr0h
 16546  011606  50EF               	movf	indf0,w,c
 16547  011608                     i2u449_40:
 16548  011608  0100               	movlb	0	; () banked
 16549  01160A  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16550                           
 16551                           ;usb_device.c: 2076: }
 16552  01160C  0012               	return	
 16553  01160E                     i2l5497:
 16554                           
 16555                           ;usb_device.c: 2077: else
 16556                           ;usb_device.c: 2078: {
 16557                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 16558  01160E  0E00               	movlw	0
 16559  011610  0100               	movlb	0	; () banked
 16560  011612  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;usb_device.c: 2080: }
 16564                           ;usb_device.c: 2081: break;
 16565  011614  0012               	return	
 16566  011616                     i2l5499:
 16567                           
 16568                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 16569  011616  0E03               	movlw	3
 16570  011618  010D               	movlb	13	; () banked
 16571  01161A  6132               	cpfslt	50,b	;volatile
 16572  01161C  D029               	goto	i2l5505
 16573                           
 16574                           ; BSR set to: 13
 16575                           ;usb_device.c: 2087: {
 16576                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 16577  01161E  010D               	movlb	13	; () banked
 16578  011620  5132               	movf	50,w,b	;volatile
 16579  011622  0D02               	mullw	2
 16580  011624  0E61               	movlw	low _USB_SD_Ptr
 16581  011626  24F3               	addwf	prodl,w,c
 16582  011628  6EF6               	movwf	tblptrl,c
 16583  01162A  0EFD               	movlw	high _USB_SD_Ptr
 16584  01162C  20F4               	addwfc	prodh,w,c
 16585  01162E  6EF7               	movwf	tblptrh,c
 16586  011630                     	if	1	;There are 3 active tblptr bytes
 16587  011630  6AF8               	clrf	tblptru,c
 16588  011632  0E00               	movlw	low (__mediumconst shr (0+16))
 16589  011634  22F8               	addwfc	tblptru,f,c
 16590  011636                     	endif
 16591  011636  0009               	tblrd		*+
 16592  011638  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16593  01163C  000A               	tblrd		*-
 16594  01163E  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16595                           
 16596                           ; BSR set to: 13
 16597                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 16598  011642  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 16599  011646  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16600  01164A  0E00               	movlw	low (__mediumconst shr (0+16))
 16601  01164C  6EF8               	movwf	tblptru,c
 16602  01164E  0E0E               	movlw	(high __ramtop+-1)
 16603  011650  64F7               	cpfsgt	tblptrh,c
 16604  011652  D003               	bra	i2u451_47
 16605  011654  0008               	tblrd		*
 16606  011656  50F5               	movf	tablat,w,c
 16607  011658  D005               	bra	i2u451_40
 16608  01165A                     i2u451_47:
 16609  01165A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16610  01165E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16611  011662  50EF               	movf	indf0,w,c
 16612  011664                     i2u451_40:
 16613  011664  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 16614  011666  502D               	movf	??_USBStdGetDscHandler,w,c
 16615  011668  0100               	movlb	0	; () banked
 16616  01166A  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16617  01166C  6BD7               	clrf	(_inPipes+5)& (0+255),b	;volatile
 16618                           
 16619                           ;usb_device.c: 2092: }
 16620  01166E  0012               	return	
 16621  011670                     i2l5505:
 16622                           
 16623                           ;usb_device.c: 2102: else
 16624                           ;usb_device.c: 2103: {
 16625                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 16626  011670  0E00               	movlw	0
 16627  011672  0100               	movlb	0	; () banked
 16628  011674  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;usb_device.c: 2105: }
 16632                           ;usb_device.c: 2106: break;
 16633  011676  0012               	return	
 16634  011678                     i2l5507:
 16635                           
 16636                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 16637  011678  0E00               	movlw	0
 16638  01167A  0100               	movlb	0	; () banked
 16639  01167C  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16640                           
 16641                           ; BSR set to: 0
 16642                           ;usb_device.c: 2110: }
 16643                           
 16644                           ;usb_device.c: 2109: break;
 16645  01167E  0012               	return	
 16646  011680                     i2l5511:
 16647                           
 16648                           ; BSR set to: 0
 16649  011680  010D               	movlb	13	; () banked
 16650  011682  5133               	movf	51,w,b	;volatile
 16651                           
 16652                           ; Switch size 1, requested type "space"
 16653                           ; Number of cases is 3, Range of values is 1 to 3
 16654                           ; switch strategies available:
 16655                           ; Name         Instructions Cycles
 16656                           ; simple_byte           10     6 (average)
 16657                           ;	Chosen strategy is simple_byte
 16658  011684  0A01               	xorlw	1	; case 1
 16659  011686  B4D8               	btfsc	status,2,c
 16660  011688  D769               	goto	i2l5485
 16661  01168A  0A03               	xorlw	3	; case 2
 16662  01168C  B4D8               	btfsc	status,2,c
 16663  01168E  D772               	goto	i2l5489
 16664  011690  0A01               	xorlw	1	; case 3
 16665  011692  B4D8               	btfsc	status,2,c
 16666  011694  D7C0               	goto	i2l5499
 16667  011696  D7F0               	goto	i2l5507
 16668  011698                     __end_of_USBStdGetDscHandler:
 16669                           	opt stack 0
 16670                           pclatu	equ	0xFFB
 16671                           pclath	equ	0xFFA
 16672                           tblptru	equ	0xFF8
 16673                           tblptrh	equ	0xFF7
 16674                           tblptrl	equ	0xFF6
 16675                           tablat	equ	0xFF5
 16676                           prodh	equ	0xFF4
 16677                           prodl	equ	0xFF3
 16678                           intcon	equ	0xFF2
 16679                           intcon2	equ	0xFF1
 16680                           indf0	equ	0xFEF
 16681                           postinc0	equ	0xFEE
 16682                           fsr0h	equ	0xFEA
 16683                           fsr0l	equ	0xFE9
 16684                           wreg	equ	0xFE8
 16685                           indf1	equ	0xFE7
 16686                           postinc1	equ	0xFE6
 16687                           postdec1	equ	0xFE5
 16688                           fsr1h	equ	0xFE2
 16689                           fsr1l	equ	0xFE1
 16690                           indf2	equ	0xFDF
 16691                           postinc2	equ	0xFDE
 16692                           postdec2	equ	0xFDD
 16693                           plusw2	equ	0xFDB
 16694                           fsr2h	equ	0xFDA
 16695                           fsr2l	equ	0xFD9
 16696                           status	equ	0xFD8
 16697                           
 16698 ;; *************** function _USBStdFeatureReqHandler *****************
 16699 ;; Defined at:
 16700 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 16701 ;; Parameters:    Size  Location     Type
 16702 ;;		None
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;  p               2   24[COMRAM] PTR struct __BDT
 16705 ;;		 -> NULL(0), BDT(48), 
 16706 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 16707 ;;		 -> UEP0(1), 
 16708 ;;  current_ep_d    1   23[COMRAM] struct .
 16709 ;; Return value:  Size  Location     Type
 16710 ;;		None               void
 16711 ;; Registers used:
 16712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16713 ;; Tracked objects:
 16714 ;;		On entry : 0/0
 16715 ;;		On exit  : 0/0
 16716 ;;		Unchanged: 0/0
 16717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16719 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16722 ;;Total ram usage:        6 bytes
 16723 ;; Hardware stack levels used:    1
 16724 ;; Hardware stack levels required when called:    4
 16725 ;; This function calls:
 16726 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16727 ;; This function is called by:
 16728 ;;		_USBCheckStdRequest
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           	psect	text84
 16733  010DFC                     __ptext84:
 16734                           	opt stack 0
 16735  010DFC                     _USBStdFeatureReqHandler:
 16736                           	opt stack 11
 16737                           
 16738                           ;usb_device.c: 2759: BDT_ENTRY *p;
 16739                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 16740                           ;usb_device.c: 2764: unsigned char* pUEP;
 16741                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 16742                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 16743                           
 16744                           ;incstack = 0
 16745  010DFC  010D               	movlb	13	; () banked
 16746  010DFE  0532               	decf	50,w,b	;volatile
 16747  010E00  A4D8               	btfss	status,2,c
 16748  010E02  D011               	goto	i2l374
 16749                           
 16750                           ; BSR set to: 13
 16751  010E04  010D               	movlb	13	; () banked
 16752  010E06  5130               	movf	48,w,b	;volatile
 16753  010E08  0B1F               	andlw	31
 16754  010E0A  0900               	iorlw	0
 16755  010E0C  A4D8               	btfss	status,2,c
 16756  010E0E  D00B               	goto	i2l374
 16757                           
 16758                           ; BSR set to: 13
 16759                           ;usb_device.c: 2804: {
 16760                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 16761  010E10  0100               	movlb	0	; () banked
 16762  010E12  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 16766  010E14  0E03               	movlw	3
 16767  010E16  010D               	movlb	13	; () banked
 16768  010E18  1931               	xorwf	49,w,b	;volatile
 16769  010E1A  A4D8               	btfss	status,2,c
 16770  010E1C  D002               	goto	i2l5551
 16771                           
 16772                           ; BSR set to: 13
 16773                           ;usb_device.c: 2807: RemoteWakeup = 1;
 16774  010E1E  0E01               	movlw	1
 16775  010E20  D001               	goto	L6
 16776  010E22                     i2l5551:
 16777                           
 16778                           ; BSR set to: 13
 16779                           ;usb_device.c: 2808: else
 16780                           ;usb_device.c: 2809: RemoteWakeup = 0;
 16781  010E22  0E00               	movlw	0
 16782  010E24                     L6:
 16783  010E24  6E0E               	movwf	_RemoteWakeup,c	;volatile
 16784  010E26                     i2l374:
 16785                           
 16786                           ; BSR set to: 13
 16787                           ;usb_device.c: 2810: }
 16788                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 16789                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 16790                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 16791                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 16792  010E26  010D               	movlb	13	; () banked
 16793  010E28  5132               	movf	50,w,b	;volatile
 16794  010E2A  A4D8               	btfss	status,2,c
 16795  010E2C  0012               	return	
 16796                           
 16797                           ; BSR set to: 13
 16798  010E2E  010D               	movlb	13	; () banked
 16799  010E30  5130               	movf	48,w,b	;volatile
 16800  010E32  0B1F               	andlw	31
 16801  010E34  0A02               	xorlw	2
 16802  010E36  A4D8               	btfss	status,2,c
 16803  010E38  0012               	return	
 16804                           
 16805                           ; BSR set to: 13
 16806  010E3A  010D               	movlb	13	; () banked
 16807  010E3C  5134               	movf	52,w,b	;volatile
 16808  010E3E  0B0F               	andlw	15
 16809  010E40  0900               	iorlw	0
 16810  010E42  B4D8               	btfsc	status,2,c
 16811  010E44  0012               	return	
 16812                           
 16813                           ; BSR set to: 13
 16814  010E46  010D               	movlb	13	; () banked
 16815  010E48  5134               	movf	52,w,b	;volatile
 16816  010E4A  0B0F               	andlw	15
 16817  010E4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16818  010E4E  0E03               	movlw	3
 16819  010E50  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 16820  010E52  0012               	return	
 16821                           
 16822                           ; BSR set to: 13
 16823  010E54  0E20               	movlw	32
 16824  010E56  1812               	xorwf	_USBDeviceState,w,c	;volatile
 16825  010E58  A4D8               	btfss	status,2,c
 16826  010E5A  0012               	return	
 16827                           
 16828                           ; BSR set to: 13
 16829                           ;usb_device.c: 2817: {
 16830                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 16831  010E5C  0100               	movlb	0	; () banked
 16832  010E5E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16833                           
 16834                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 16835  010E60  010D               	movlb	13	; () banked
 16836  010E62  BF34               	btfsc	52,7,b	;volatile
 16837  010E64  D01B               	goto	i2l5565
 16838                           
 16839                           ; BSR set to: 13
 16840                           ;usb_device.c: 2824: {
 16841                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16842  010E66  010D               	movlb	13	; () banked
 16843  010E68  5134               	movf	52,w,b	;volatile
 16844  010E6A  0B0F               	andlw	15
 16845  010E6C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16846  010E6E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 16847  010E70  0D02               	mullw	2
 16848  010E72  0EDE               	movlw	low _pBDTEntryOut
 16849  010E74  24F3               	addwf	prodl,w,c
 16850  010E76  6ED9               	movwf	fsr2l,c
 16851  010E78  0E00               	movlw	high _pBDTEntryOut
 16852  010E7A  20F4               	addwfc	prodh,w,c
 16853  010E7C  6EDA               	movwf	fsr2h,c
 16854  010E7E  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 16855  010E82  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16856                           
 16857                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 16858  010E86  010D               	movlb	13	; () banked
 16859  010E88  5134               	movf	52,w,b	;volatile
 16860  010E8A  0B0F               	andlw	15
 16861  010E8C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16862  010E8E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 16863  010E90  0D01               	mullw	1
 16864  010E92  0EE7               	movlw	low _ep_data_out
 16865  010E94  24F3               	addwf	prodl,w,c
 16866  010E96  6ED9               	movwf	fsr2l,c
 16867  010E98  0E00               	movlw	high _ep_data_out
 16868  010E9A  D01A               	goto	L7
 16869  010E9C                     i2l5565:
 16870                           
 16871                           ; BSR set to: 13
 16872                           ;usb_device.c: 2828: else
 16873                           ;usb_device.c: 2829: {
 16874                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16875  010E9C  010D               	movlb	13	; () banked
 16876  010E9E  5134               	movf	52,w,b	;volatile
 16877  010EA0  0B0F               	andlw	15
 16878  010EA2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16879  010EA4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 16880  010EA6  0D02               	mullw	2
 16881  010EA8  0ED8               	movlw	low _pBDTEntryIn
 16882  010EAA  24F3               	addwf	prodl,w,c
 16883  010EAC  6ED9               	movwf	fsr2l,c
 16884  010EAE  0E00               	movlw	high _pBDTEntryIn
 16885  010EB0  20F4               	addwfc	prodh,w,c
 16886  010EB2  6EDA               	movwf	fsr2h,c
 16887  010EB4  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 16888  010EB8  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16889                           
 16890                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 16891  010EBC  010D               	movlb	13	; () banked
 16892  010EBE  5134               	movf	52,w,b	;volatile
 16893  010EC0  0B0F               	andlw	15
 16894  010EC2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16895  010EC4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 16896  010EC6  0D01               	mullw	1
 16897  010EC8  0EE4               	movlw	low _ep_data_in
 16898  010ECA  24F3               	addwf	prodl,w,c
 16899  010ECC  6ED9               	movwf	fsr2l,c
 16900  010ECE  0E00               	movlw	high _ep_data_in
 16901  010ED0                     L7:
 16902  010ED0  20F4               	addwfc	prodh,w,c
 16903  010ED2  6EDA               	movwf	fsr2h,c
 16904  010ED4  50DF               	movf	indf2,w,c
 16905  010ED6  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 16906                           
 16907                           ; BSR set to: 13
 16908                           ;usb_device.c: 2832: }
 16909                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 16910                           
 16911                           ; BSR set to: 13
 16912  010ED8  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 16913  010EDA  D002               	goto	i2l5571
 16914                           
 16915                           ; BSR set to: 13
 16916                           ;usb_device.c: 2839: {
 16917                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 16918  010EDC  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 16919                           
 16920                           ;usb_device.c: 2841: }
 16921  010EDE  D001               	goto	i2l5573
 16922  010EE0                     i2l5571:
 16923                           
 16924                           ; BSR set to: 13
 16925                           ;usb_device.c: 2842: else
 16926                           ;usb_device.c: 2843: {
 16927                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 16928  010EE0  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 16929  010EE2                     i2l5573:
 16930                           
 16931                           ; BSR set to: 13
 16932                           ;usb_device.c: 2845: }
 16933                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 16934  010EE2  010D               	movlb	13	; () banked
 16935  010EE4  BF34               	btfsc	52,7,b	;volatile
 16936  010EE6  D00B               	goto	i2l5577
 16937                           
 16938                           ; BSR set to: 13
 16939                           ;usb_device.c: 2851: {
 16940                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16941  010EE8  010D               	movlb	13	; () banked
 16942  010EEA  5134               	movf	52,w,b	;volatile
 16943  010EEC  0B0F               	andlw	15
 16944  010EEE  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16945  010EF0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 16946  010EF2  0D02               	mullw	2
 16947  010EF4  0EDE               	movlw	low _pBDTEntryOut
 16948  010EF6  24F3               	addwf	prodl,w,c
 16949  010EF8  6ED9               	movwf	fsr2l,c
 16950  010EFA  0E00               	movlw	high _pBDTEntryOut
 16951  010EFC  D00A               	goto	L8
 16952  010EFE                     i2l5577:
 16953                           
 16954                           ; BSR set to: 13
 16955                           ;usb_device.c: 2854: else
 16956                           ;usb_device.c: 2855: {
 16957                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16958  010EFE  010D               	movlb	13	; () banked
 16959  010F00  5134               	movf	52,w,b	;volatile
 16960  010F02  0B0F               	andlw	15
 16961  010F04  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16962  010F06  5041               	movf	??_USBStdFeatureReqHandler,w,c
 16963  010F08  0D02               	mullw	2
 16964  010F0A  0ED8               	movlw	low _pBDTEntryIn
 16965  010F0C  24F3               	addwf	prodl,w,c
 16966  010F0E  6ED9               	movwf	fsr2l,c
 16967  010F10  0E00               	movlw	high _pBDTEntryIn
 16968  010F12                     L8:
 16969  010F12  20F4               	addwfc	prodh,w,c
 16970  010F14  6EDA               	movwf	fsr2h,c
 16971  010F16  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 16972  010F1A  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 16973                           
 16974                           ; BSR set to: 13
 16975                           ;usb_device.c: 2857: }
 16976                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 16977                           
 16978                           ; BSR set to: 13
 16979  010F1E  0E03               	movlw	3
 16980  010F20  010D               	movlb	13	; () banked
 16981  010F22  1931               	xorwf	49,w,b	;volatile
 16982  010F24  A4D8               	btfss	status,2,c
 16983  010F26  D02F               	goto	i2l5593
 16984                           
 16985                           ; BSR set to: 13
 16986                           ;usb_device.c: 2861: {
 16987                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 16988  010F28  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16989  010F2C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16990  010F30  AEDF               	btfss	indf2,7,c
 16991  010F32  D01C               	goto	i2l5589
 16992                           
 16993                           ; BSR set to: 13
 16994                           ;usb_device.c: 2863: {
 16995                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 16996  010F34  010D               	movlb	13	; () banked
 16997  010F36  BF34               	btfsc	52,7,b	;volatile
 16998  010F38  D00B               	goto	i2l5587
 16999                           
 17000                           ; BSR set to: 13
 17001                           ;usb_device.c: 2867: {
 17002                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17003  010F3A  010D               	movlb	13	; () banked
 17004  010F3C  5134               	movf	52,w,b	;volatile
 17005  010F3E  0B0F               	andlw	15
 17006  010F40  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17007  010F42  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17008  010F44  0D01               	mullw	1
 17009  010F46  0EE7               	movlw	low _ep_data_out
 17010  010F48  24F3               	addwf	prodl,w,c
 17011  010F4A  6ED9               	movwf	fsr2l,c
 17012  010F4C  0E00               	movlw	high _ep_data_out
 17013  010F4E  D00A               	goto	L9
 17014  010F50                     i2l5587:
 17015                           
 17016                           ;usb_device.c: 2870: else
 17017                           ;usb_device.c: 2871: {
 17018                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17019  010F50  010D               	movlb	13	; () banked
 17020  010F52  5134               	movf	52,w,b	;volatile
 17021  010F54  0B0F               	andlw	15
 17022  010F56  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17023  010F58  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17024  010F5A  0D01               	mullw	1
 17025  010F5C  0EE4               	movlw	low _ep_data_in
 17026  010F5E  24F3               	addwf	prodl,w,c
 17027  010F60  6ED9               	movwf	fsr2l,c
 17028  010F62  0E00               	movlw	high _ep_data_in
 17029  010F64                     L9:
 17030  010F64  20F4               	addwfc	prodh,w,c
 17031  010F66  6EDA               	movwf	fsr2h,c
 17032  010F68  0100               	movlb	0	; () banked
 17033  010F6A  82DF               	bsf	indf2,1,c
 17034  010F6C                     i2l5589:
 17035                           
 17036                           ;usb_device.c: 2873: }
 17037                           ;usb_device.c: 2874: }
 17038                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 17039  010F6C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17040  010F70  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17041  010F74  0E00               	movlw	0
 17042  010F76  84DB               	bsf	plusw2,2,c
 17043                           
 17044                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 17045  010F78  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17046  010F7C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17047  010F80  0E00               	movlw	0
 17048  010F82  8EDB               	bsf	plusw2,7,c
 17049                           
 17050                           ;usb_device.c: 2879: }
 17051  010F84  0012               	return	
 17052  010F86                     i2l5593:
 17053                           
 17054                           ;usb_device.c: 2880: else
 17055                           ;usb_device.c: 2881: {
 17056                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17057  010F86  0E04               	movlw	4
 17058  010F88  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 17059                           
 17060                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 17061  010F8A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17062  010F8E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17063  010F92  AEDF               	btfss	indf2,7,c
 17064  010F94  D01B               	goto	i2l5603
 17065                           
 17066                           ;usb_device.c: 2888: {
 17067                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 17068  010F96  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17069  010F9A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17070  010F9E  0E7F               	movlw	127
 17071  010FA0  16DF               	andwf	indf2,f,c
 17072                           
 17073                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 17074  010FA2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17075  010FA6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17076  010FAA  0E00               	movlw	0
 17077  010FAC  8CDB               	bsf	plusw2,6,c
 17078                           
 17079                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17080  010FAE  0E00               	movlw	0
 17081  010FB0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17082  010FB2  0E05               	movlw	5
 17083  010FB4  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17084  010FB6  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17085  010FBA  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17086  010FBE  0E00               	movlw	0
 17087  010FC0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17088  010FC2  0E02               	movlw	2
 17089  010FC4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17090  010FC6  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17091                           
 17092                           ;usb_device.c: 2894: }
 17093  010FCA  D006               	goto	i2l5605
 17094  010FCC                     i2l5603:
 17095                           
 17096                           ;usb_device.c: 2895: else
 17097                           ;usb_device.c: 2896: {
 17098                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 17099  010FCC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17100  010FD0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17101  010FD4  0E00               	movlw	0
 17102  010FD6  8CDB               	bsf	plusw2,6,c
 17103  010FD8                     i2l5605:
 17104                           
 17105                           ;usb_device.c: 2899: }
 17106                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17107  010FD8  0E04               	movlw	4
 17108  010FDA  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 17109                           
 17110                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 17111  010FDC  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 17112  010FDE  D006               	goto	i2l393
 17113  010FE0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17114  010FE4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17115  010FE8  AEDF               	btfss	indf2,7,c
 17116  010FEA  D031               	goto	i2l5619
 17117  010FEC                     i2l393:
 17118                           
 17119                           ;usb_device.c: 2910: {
 17120                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 17121  010FEC  010D               	movlb	13	; () banked
 17122  010FEE  BF34               	btfsc	52,7,b	;volatile
 17123  010FF0  D00B               	goto	i2l5613
 17124                           
 17125                           ; BSR set to: 13
 17126                           ;usb_device.c: 2912: {
 17127                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17128  010FF2  010D               	movlb	13	; () banked
 17129  010FF4  5134               	movf	52,w,b	;volatile
 17130  010FF6  0B0F               	andlw	15
 17131  010FF8  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17132  010FFA  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17133  010FFC  0D01               	mullw	1
 17134  010FFE  0EE7               	movlw	low _ep_data_out
 17135  011000  24F3               	addwf	prodl,w,c
 17136  011002  6ED9               	movwf	fsr2l,c
 17137  011004  0E00               	movlw	high _ep_data_out
 17138  011006  D00A               	goto	L10
 17139  011008                     i2l5613:
 17140                           
 17141                           ;usb_device.c: 2915: else
 17142                           ;usb_device.c: 2916: {
 17143                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17144  011008  010D               	movlb	13	; () banked
 17145  01100A  5134               	movf	52,w,b	;volatile
 17146  01100C  0B0F               	andlw	15
 17147  01100E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17148  011010  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17149  011012  0D01               	mullw	1
 17150  011014  0EE4               	movlw	low _ep_data_in
 17151  011016  24F3               	addwf	prodl,w,c
 17152  011018  6ED9               	movwf	fsr2l,c
 17153  01101A  0E00               	movlw	high _ep_data_in
 17154  01101C                     L10:
 17155  01101C  20F4               	addwfc	prodh,w,c
 17156  01101E  6EDA               	movwf	fsr2h,c
 17157  011020  0100               	movlb	0	; () banked
 17158  011022  92DF               	bcf	indf2,1,c
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;usb_device.c: 2918: }
 17162                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17163                           
 17164                           ; BSR set to: 0
 17165  011024  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17166  011028  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17167  01102C  0E3B               	movlw	59
 17168  01102E  16DF               	andwf	indf2,f,c
 17169                           
 17170                           ; BSR set to: 0
 17171                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17172  011030  0E00               	movlw	0
 17173  011032  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17174  011034  0E05               	movlw	5
 17175  011036  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17176  011038  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17177  01103C  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17178  011040  0E00               	movlw	0
 17179  011042  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17180  011044  0E02               	movlw	2
 17181  011046  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17182  011048  EC01  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17183                           
 17184                           ;usb_device.c: 2924: }
 17185  01104C  D006               	goto	i2l5621
 17186  01104E                     i2l5619:
 17187                           
 17188                           ;usb_device.c: 2925: else
 17189                           ;usb_device.c: 2926: {
 17190                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17191  01104E  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17192  011052  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17193  011056  0E3B               	movlw	59
 17194  011058  16DF               	andwf	indf2,f,c
 17195  01105A                     i2l5621:
 17196                           
 17197                           ;usb_device.c: 2929: }
 17198                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 17199  01105A  010D               	movlb	13	; () banked
 17200  01105C  5134               	movf	52,w,b	;volatile
 17201  01105E  0B0F               	andlw	15
 17202  011060  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17203  011062  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17204  011064  0D01               	mullw	1
 17205  011066  0E26               	movlw	38
 17206  011068  24F3               	addwf	prodl,w,c
 17207  01106A  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 17208  01106C  0E0F               	movlw	15
 17209  01106E  20F4               	addwfc	prodh,w,c
 17210  011070  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 17211                           
 17212                           ; BSR set to: 13
 17213                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 17214  011072  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 17215  011076  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 17216  01107A  0EFE               	movlw	254
 17217  01107C  16DF               	andwf	indf2,f,c
 17218                           
 17219                           ; BSR set to: 13
 17220  01107E  0012               	return	
 17221  011080                     __end_of_USBStdFeatureReqHandler:
 17222                           	opt stack 0
 17223                           pclatu	equ	0xFFB
 17224                           pclath	equ	0xFFA
 17225                           tblptru	equ	0xFF8
 17226                           tblptrh	equ	0xFF7
 17227                           tblptrl	equ	0xFF6
 17228                           tablat	equ	0xFF5
 17229                           prodh	equ	0xFF4
 17230                           prodl	equ	0xFF3
 17231                           intcon	equ	0xFF2
 17232                           intcon2	equ	0xFF1
 17233                           indf0	equ	0xFEF
 17234                           postinc0	equ	0xFEE
 17235                           fsr0h	equ	0xFEA
 17236                           fsr0l	equ	0xFE9
 17237                           wreg	equ	0xFE8
 17238                           indf1	equ	0xFE7
 17239                           postinc1	equ	0xFE6
 17240                           postdec1	equ	0xFE5
 17241                           fsr1h	equ	0xFE2
 17242                           fsr1l	equ	0xFE1
 17243                           indf2	equ	0xFDF
 17244                           postinc2	equ	0xFDE
 17245                           postdec2	equ	0xFDD
 17246                           plusw2	equ	0xFDB
 17247                           fsr2h	equ	0xFDA
 17248                           fsr2l	equ	0xFD9
 17249                           status	equ	0xFD8
 17250                           
 17251 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 17252 ;; Defined at:
 17253 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 17254 ;; Parameters:    Size  Location     Type
 17255 ;;  event           2   12[COMRAM] enum E8545
 17256 ;;  pdata           2   14[COMRAM] PTR void 
 17257 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 17258 ;;  size            2   16[COMRAM] unsigned int 
 17259 ;; Auto vars:     Size  Location     Type
 17260 ;;		None
 17261 ;; Return value:  Size  Location     Type
 17262 ;;                  1    wreg      unsigned char 
 17263 ;; Registers used:
 17264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17265 ;; Tracked objects:
 17266 ;;		On entry : 0/0
 17267 ;;		On exit  : 0/0
 17268 ;;		Unchanged: 0/0
 17269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17270 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17274 ;;Total ram usage:        8 bytes
 17275 ;; Hardware stack levels used:    1
 17276 ;; Hardware stack levels required when called:    3
 17277 ;; This function calls:
 17278 ;;		_CDCInitEP
 17279 ;;		_USBCheckCDCRequest
 17280 ;; This function is called by:
 17281 ;;		_USBDeviceTasks
 17282 ;;		_USBStdSetCfgHandler
 17283 ;;		_USBSuspend
 17284 ;;		_USBWakeFromSuspend
 17285 ;;		_USBCtrlTrfSetupHandler
 17286 ;;		_USBCheckStdRequest
 17287 ;;		_USBStdFeatureReqHandler
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           	psect	text85
 17292  013E02                     __ptext85:
 17293                           	opt stack 0
 17294  013E02                     _USER_USB_CALLBACK_EVENT_HANDLER:
 17295                           	opt stack 15
 17296                           
 17297                           ;My_usb_cdc.c: 45: switch ((int) event) {
 17298                           
 17299                           ;incstack = 0
 17300  013E02  D006               	goto	i2l5211
 17301  013E04                     i2l5205:
 17302                           
 17303                           ;My_usb_cdc.c: 47: CDCInitEP();
 17304  013E04  EC9C  F09B         	call	_CDCInitEP	;wreg free
 17305                           
 17306                           ;My_usb_cdc.c: 48: break;
 17307  013E08  0012               	return	
 17308  013E0A                     i2l5207:
 17309                           
 17310                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 17311  013E0A  EC09  F092         	call	_USBCheckCDCRequest	;wreg free
 17312                           
 17313                           ;My_usb_cdc.c: 52: }
 17314                           
 17315                           ;My_usb_cdc.c: 51: break;
 17316  013E0E  0012               	return	
 17317  013E10                     i2l5211:
 17318  013E10  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 17319  013E14  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 17320                           
 17321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17322                           ; Switch size 1, requested type "space"
 17323                           ; Number of cases is 1, Range of values is 0 to 0
 17324                           ; switch strategies available:
 17325                           ; Name         Instructions Cycles
 17326                           ; simple_byte            4     3 (average)
 17327                           ;	Chosen strategy is simple_byte
 17328  013E18  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 17329  013E1A  0A00               	xorlw	0	; case 0
 17330  013E1C  A4D8               	btfss	status,2,c
 17331  013E1E  0012               	return	
 17332                           
 17333                           ; Switch size 1, requested type "space"
 17334                           ; Number of cases is 2, Range of values is 1 to 3
 17335                           ; switch strategies available:
 17336                           ; Name         Instructions Cycles
 17337                           ; simple_byte            7     4 (average)
 17338                           ;	Chosen strategy is simple_byte
 17339  013E20  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17340  013E22  0A01               	xorlw	1	; case 1
 17341  013E24  B4D8               	btfsc	status,2,c
 17342  013E26  D7EE               	goto	i2l5205
 17343  013E28  0A02               	xorlw	2	; case 3
 17344  013E2A  A4D8               	btfss	status,2,c
 17345  013E2C  0012               	return	
 17346  013E2E  D7ED               	goto	i2l5207
 17347  013E30                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 17348                           	opt stack 0
 17349                           pclatu	equ	0xFFB
 17350                           pclath	equ	0xFFA
 17351                           tblptru	equ	0xFF8
 17352                           tblptrh	equ	0xFF7
 17353                           tblptrl	equ	0xFF6
 17354                           tablat	equ	0xFF5
 17355                           prodh	equ	0xFF4
 17356                           prodl	equ	0xFF3
 17357                           intcon	equ	0xFF2
 17358                           intcon2	equ	0xFF1
 17359                           indf0	equ	0xFEF
 17360                           postinc0	equ	0xFEE
 17361                           fsr0h	equ	0xFEA
 17362                           fsr0l	equ	0xFE9
 17363                           wreg	equ	0xFE8
 17364                           indf1	equ	0xFE7
 17365                           postinc1	equ	0xFE6
 17366                           postdec1	equ	0xFE5
 17367                           fsr1h	equ	0xFE2
 17368                           fsr1l	equ	0xFE1
 17369                           indf2	equ	0xFDF
 17370                           postinc2	equ	0xFDE
 17371                           postdec2	equ	0xFDD
 17372                           plusw2	equ	0xFDB
 17373                           fsr2h	equ	0xFDA
 17374                           fsr2l	equ	0xFD9
 17375                           status	equ	0xFD8
 17376                           
 17377 ;; *************** function _USBCheckCDCRequest *****************
 17378 ;; Defined at:
 17379 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;		None
 17382 ;; Auto vars:     Size  Location     Type
 17383 ;;		None
 17384 ;; Return value:  Size  Location     Type
 17385 ;;		None               void
 17386 ;; Registers used:
 17387 ;;		wreg, status,2, status,0
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17397 ;;Total ram usage:        0 bytes
 17398 ;; Hardware stack levels used:    1
 17399 ;; This function calls:
 17400 ;;		Nothing
 17401 ;; This function is called by:
 17402 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           
 17406                           	psect	text86
 17407  012412                     __ptext86:
 17408                           	opt stack 0
 17409  012412                     _USBCheckCDCRequest:
 17410                           	opt stack 17
 17411                           
 17412                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 17413                           
 17414                           ;incstack = 0
 17415  012412  010D               	movlb	13	; () banked
 17416  012414  5130               	movf	48,w,b	;volatile
 17417  012416  0B1F               	andlw	31
 17418  012418  06E8               	decf	wreg,f,c
 17419  01241A  A4D8               	btfss	status,2,c
 17420  01241C  0012               	return	
 17421                           
 17422                           ; BSR set to: 13
 17423                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 17424                           
 17425                           ; BSR set to: 13
 17426                           
 17427                           ; BSR set to: 13
 17428  01241E  010D               	movlb	13	; () banked
 17429  012420  3930               	swapf	48,w,b	;volatile
 17430  012422  32E8               	rrcf	wreg,f,c
 17431  012424  0B03               	andlw	3
 17432  012426  06E8               	decf	wreg,f,c
 17433  012428  A4D8               	btfss	status,2,c
 17434  01242A  0012               	return	
 17435                           
 17436                           ; BSR set to: 13
 17437                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 17438                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 17439                           
 17440                           ; BSR set to: 13
 17441                           
 17442                           ; BSR set to: 13
 17443  01242C  010D               	movlb	13	; () banked
 17444  01242E  5134               	movf	52,w,b	;volatile
 17445  012430  B4D8               	btfsc	status,2,c
 17446  012432  D048               	goto	i2l5085
 17447                           
 17448                           ; BSR set to: 13
 17449  012434  010D               	movlb	13	; () banked
 17450  012436  0534               	decf	52,w,b	;volatile
 17451  012438  A4D8               	btfss	status,2,c
 17452  01243A  0012               	return	
 17453  01243C  D043               	goto	i2l5085
 17454  01243E                     i2l5061:
 17455                           
 17456                           ; BSR set to: 13
 17457                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17458  01243E  0E5D               	movlw	low _dummy_encapsulated_cmd_response
 17459  012440  0100               	movlb	0	; () banked
 17460  012442  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17461  012444  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17462  012446  0100               	movlb	0	; () banked
 17463  012448  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 17467  01244A  0E00               	movlw	0
 17468  01244C  0100               	movlb	0	; () banked
 17469  01244E  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17470  012450  0E08               	movlw	8
 17471  012452  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17472                           
 17473                           ; BSR set to: 0
 17474                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17475  012454  0100               	movlb	0	; () banked
 17476  012456  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 17480  012458  0100               	movlb	0	; () banked
 17481  01245A  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17482                           
 17483                           ;usb_device_cdc.c: 232: break;
 17484  01245C  0012               	return	
 17485  01245E                     i2l5069:
 17486                           
 17487                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17488  01245E  0E5D               	movlw	low _dummy_encapsulated_cmd_response
 17489  012460  0100               	movlb	0	; () banked
 17490  012462  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17491  012464  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17492  012466  0100               	movlb	0	; () banked
 17493  012468  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 17497  01246A  0100               	movlb	0	; () banked
 17498  01246C  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17499                           
 17500                           ;usb_device_cdc.c: 237: break;
 17501  01246E  0012               	return	
 17502  012470                     i2l450:
 17503                           
 17504                           ; BSR set to: 13
 17505                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 17506  012470  CD36 F0CD          	movff	3382,_outPipes+4	;volatile
 17507  012474  CD37 F0CE          	movff	3383,_outPipes+5	;volatile
 17508                           
 17509                           ; BSR set to: 13
 17510                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 17511  012478  0E8D               	movlw	low _line_coding
 17512  01247A  0100               	movlb	0	; () banked
 17513  01247C  6FC9               	movwf	_outPipes& (0+255),b	;volatile
 17514  01247E  0E01               	movlw	high _line_coding
 17515  012480  0100               	movlb	0	; () banked
 17516  012482  6FCA               	movwf	(_outPipes+1)& (0+255),b	;volatile
 17517                           
 17518                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 17519  012484  0E00               	movlw	0
 17520  012486  0100               	movlb	0	; () banked
 17521  012488  6FCF               	movwf	(_outPipes+6)& (0+255),b	;volatile
 17522  01248A  0E00               	movlw	0
 17523  01248C  0100               	movlb	0	; () banked
 17524  01248E  6FD0               	movwf	(_outPipes+7)& (0+255),b	;volatile
 17525  012490  0E00               	movlw	0
 17526  012492  0100               	movlb	0	; () banked
 17527  012494  6FD1               	movwf	(_outPipes+8)& (0+255),b	;volatile
 17528                           
 17529                           ; BSR set to: 0
 17530                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 17531  012496  0100               	movlb	0	; () banked
 17532  012498  8FCC               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 17533                           
 17534                           ;usb_device_cdc.c: 246: break;
 17535  01249A  0012               	return	
 17536  01249C                     i2l5077:
 17537                           
 17538                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 17539  01249C  0E8D               	movlw	low _line_coding
 17540  01249E  0100               	movlb	0	; () banked
 17541  0124A0  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17542  0124A2  0E01               	movlw	high _line_coding
 17543  0124A4  0100               	movlb	0	; () banked
 17544  0124A6  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17545                           
 17546                           ; BSR set to: 0
 17547  0124A8  0E00               	movlw	0
 17548  0124AA  0100               	movlb	0	; () banked
 17549  0124AC  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17550  0124AE  0E07               	movlw	7
 17551  0124B0  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17552                           
 17553                           ; BSR set to: 0
 17554  0124B2  0EC1               	movlw	193
 17555  0124B4  0100               	movlb	0	; () banked
 17556  0124B6  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17557                           
 17558                           ;usb_device_cdc.c: 253: break;
 17559  0124B8  0012               	return	
 17560  0124BA                     i2l452:
 17561                           
 17562                           ; BSR set to: 13
 17563                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 17564  0124BA  CD32 F018          	movff	3378,_control_signal_bitmap	;volatile
 17565                           
 17566                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 17567  0124BE  0100               	movlb	0	; () banked
 17568  0124C0  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;usb_device_cdc.c: 315: }
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;usb_device_cdc.c: 314: break;
 17575                           
 17576                           ;usb_device_cdc.c: 313: default:
 17577                           
 17578                           ;usb_device_cdc.c: 289: break;
 17579  0124C2  0012               	return	
 17580  0124C4                     i2l5085:
 17581  0124C4  010D               	movlb	13	; () banked
 17582  0124C6  5131               	movf	49,w,b	;volatile
 17583                           
 17584                           ; Switch size 1, requested type "space"
 17585                           ; Number of cases is 5, Range of values is 0 to 34
 17586                           ; switch strategies available:
 17587                           ; Name         Instructions Cycles
 17588                           ; simple_byte           16     9 (average)
 17589                           ;	Chosen strategy is simple_byte
 17590  0124C8  0A00               	xorlw	0	; case 0
 17591  0124CA  B4D8               	btfsc	status,2,c
 17592  0124CC  D7B8               	goto	i2l5061
 17593  0124CE  0A01               	xorlw	1	; case 1
 17594  0124D0  B4D8               	btfsc	status,2,c
 17595  0124D2  D7C5               	goto	i2l5069
 17596  0124D4  0A21               	xorlw	33	; case 32
 17597  0124D6  B4D8               	btfsc	status,2,c
 17598  0124D8  D7CB               	goto	i2l450
 17599  0124DA  0A01               	xorlw	1	; case 33
 17600  0124DC  B4D8               	btfsc	status,2,c
 17601  0124DE  D7DE               	goto	i2l5077
 17602  0124E0  0A03               	xorlw	3	; case 34
 17603  0124E2  A4D8               	btfss	status,2,c
 17604  0124E4  0012               	return	
 17605  0124E6  D7E9               	goto	i2l452
 17606  0124E8                     __end_of_USBCheckCDCRequest:
 17607                           	opt stack 0
 17608                           pclatu	equ	0xFFB
 17609                           pclath	equ	0xFFA
 17610                           tblptru	equ	0xFF8
 17611                           tblptrh	equ	0xFF7
 17612                           tblptrl	equ	0xFF6
 17613                           tablat	equ	0xFF5
 17614                           prodh	equ	0xFF4
 17615                           prodl	equ	0xFF3
 17616                           intcon	equ	0xFF2
 17617                           intcon2	equ	0xFF1
 17618                           indf0	equ	0xFEF
 17619                           postinc0	equ	0xFEE
 17620                           fsr0h	equ	0xFEA
 17621                           fsr0l	equ	0xFE9
 17622                           wreg	equ	0xFE8
 17623                           indf1	equ	0xFE7
 17624                           postinc1	equ	0xFE6
 17625                           postdec1	equ	0xFE5
 17626                           fsr1h	equ	0xFE2
 17627                           fsr1l	equ	0xFE1
 17628                           indf2	equ	0xFDF
 17629                           postinc2	equ	0xFDE
 17630                           postdec2	equ	0xFDD
 17631                           plusw2	equ	0xFDB
 17632                           fsr2h	equ	0xFDA
 17633                           fsr2l	equ	0xFD9
 17634                           status	equ	0xFD8
 17635                           
 17636 ;; *************** function _CDCInitEP *****************
 17637 ;; Defined at:
 17638 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 17639 ;; Parameters:    Size  Location     Type
 17640 ;;		None
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;		None
 17643 ;; Return value:  Size  Location     Type
 17644 ;;		None               void
 17645 ;; Registers used:
 17646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17647 ;; Tracked objects:
 17648 ;;		On entry : 0/0
 17649 ;;		On exit  : 0/0
 17650 ;;		Unchanged: 0/0
 17651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17656 ;;Total ram usage:        0 bytes
 17657 ;; Hardware stack levels used:    1
 17658 ;; Hardware stack levels required when called:    2
 17659 ;; This function calls:
 17660 ;;		_USBEnableEndpoint
 17661 ;;		i2_USBTransferOnePacket
 17662 ;; This function is called by:
 17663 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17664 ;; This function uses a non-reentrant model
 17665 ;;
 17666                           
 17667                           	psect	text87
 17668  013738                     __ptext87:
 17669                           	opt stack 0
 17670  013738                     _CDCInitEP:
 17671                           	opt stack 15
 17672                           
 17673                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 17674                           
 17675                           ;incstack = 0
 17676  013738  0E00               	movlw	0
 17677  01373A  0101               	movlb	1	; () banked
 17678  01373C  6F8D               	movwf	_line_coding& (0+255),b
 17679  01373E  0E4B               	movlw	75
 17680  013740  6F8E               	movwf	(_line_coding+1)& (0+255),b
 17681  013742  0E00               	movlw	0
 17682  013744  6F8F               	movwf	(_line_coding+2)& (0+255),b
 17683  013746  0E00               	movlw	0
 17684  013748  6F90               	movwf	(_line_coding+3)& (0+255),b
 17685                           
 17686                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 17687  01374A  0E00               	movlw	0
 17688  01374C  0101               	movlb	1	; () banked
 17689  01374E  6F91               	movwf	(_line_coding+4)& (0+255),b
 17690                           
 17691                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 17692  013750  0E00               	movlw	0
 17693  013752  0101               	movlb	1	; () banked
 17694  013754  6F92               	movwf	(_line_coding+5)& (0+255),b
 17695                           
 17696                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 17697  013756  0E08               	movlw	8
 17698  013758  0101               	movlb	1	; () banked
 17699  01375A  6F93               	movwf	(_line_coding+6)& (0+255),b
 17700                           
 17701                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 17702  01375C  0E00               	movlw	0
 17703  01375E  0100               	movlb	0	; () banked
 17704  013760  6FF7               	movwf	_cdc_rx_len& (0+255),b
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 17708  013762  0E1A               	movlw	26
 17709  013764  6E35               	movwf	USBEnableEndpoint@options,c
 17710  013766  0E01               	movlw	1
 17711  013768  EC0C  F09E         	call	_USBEnableEndpoint
 17712                           
 17713                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 17714  01376C  0E1E               	movlw	30
 17715  01376E  6E35               	movwf	USBEnableEndpoint@options,c
 17716  013770  0E02               	movlw	2
 17717  013772  EC0C  F09E         	call	_USBEnableEndpoint
 17718                           
 17719                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17720  013776  0E00               	movlw	0
 17721  013778  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 17722  01377A  0E64               	movlw	low _cdc_data_rx
 17723  01377C  6E2E               	movwf	i2USBTransferOnePacket@data,c
 17724  01377E  0E02               	movlw	high _cdc_data_rx
 17725  013780  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 17726  013782  0E40               	movlw	64
 17727  013784  6E30               	movwf	i2USBTransferOnePacket@len,c
 17728  013786  0E02               	movlw	2
 17729  013788  EC18  F097         	call	i2_USBTransferOnePacket
 17730  01378C  C02D  F0F2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 17731  013790  C02E  F0F3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17732                           
 17733                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 17734  013794  0E00               	movlw	0
 17735  013796  0100               	movlb	0	; () banked
 17736  013798  6FF0               	movwf	_CDCDataInHandle& (0+255),b
 17737  01379A  0E00               	movlw	0
 17738  01379C  0100               	movlb	0	; () banked
 17739  01379E  6FF1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 17740                           
 17741                           ; BSR set to: 0
 17742                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 17743  0137A0  0E00               	movlw	0
 17744  0137A2  6E16               	movwf	_cdc_trf_state,c
 17745                           
 17746                           ; BSR set to: 0
 17747  0137A4  0012               	return		;funcret
 17748  0137A6                     __end_of_CDCInitEP:
 17749                           	opt stack 0
 17750                           pclatu	equ	0xFFB
 17751                           pclath	equ	0xFFA
 17752                           tblptru	equ	0xFF8
 17753                           tblptrh	equ	0xFF7
 17754                           tblptrl	equ	0xFF6
 17755                           tablat	equ	0xFF5
 17756                           prodh	equ	0xFF4
 17757                           prodl	equ	0xFF3
 17758                           intcon	equ	0xFF2
 17759                           intcon2	equ	0xFF1
 17760                           indf0	equ	0xFEF
 17761                           postinc0	equ	0xFEE
 17762                           fsr0h	equ	0xFEA
 17763                           fsr0l	equ	0xFE9
 17764                           wreg	equ	0xFE8
 17765                           indf1	equ	0xFE7
 17766                           postinc1	equ	0xFE6
 17767                           postdec1	equ	0xFE5
 17768                           fsr1h	equ	0xFE2
 17769                           fsr1l	equ	0xFE1
 17770                           indf2	equ	0xFDF
 17771                           postinc2	equ	0xFDE
 17772                           postdec2	equ	0xFDD
 17773                           plusw2	equ	0xFDB
 17774                           fsr2h	equ	0xFDA
 17775                           fsr2l	equ	0xFD9
 17776                           status	equ	0xFD8
 17777                           
 17778 ;; *************** function i2_USBTransferOnePacket *****************
 17779 ;; Defined at:
 17780 ;;		line 995 in file "../My_library/usb/usb_device.c"
 17781 ;; Parameters:    Size  Location     Type
 17782 ;;  ep              1    wreg     unsigned char 
 17783 ;;  dir             1    0[COMRAM] unsigned char 
 17784 ;;  data            2    1[COMRAM] PTR unsigned char 
 17785 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17786 ;;  len             1    3[COMRAM] unsigned char 
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;  ep              1    4[COMRAM] unsigned char 
 17789 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 17790 ;;		 -> NULL(0), BDT(48), 
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  2    0[COMRAM] PTR void 
 17793 ;; Registers used:
 17794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17803 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17804 ;;Total ram usage:        7 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; This function calls:
 17807 ;;		Nothing
 17808 ;; This function is called by:
 17809 ;;		_CDCInitEP
 17810 ;; This function uses a non-reentrant model
 17811 ;;
 17812                           
 17813                           	psect	text88
 17814  012E30                     __ptext88:
 17815                           	opt stack 0
 17816  012E30                     i2_USBTransferOnePacket:
 17817                           	opt stack 16
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;incstack = 0
 17821                           ;i2USBTransferOnePacket@ep stored from wreg
 17822  012E30  6E31               	movwf	i2USBTransferOnePacket@ep,c
 17823                           
 17824                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 17825                           ;usb_device.c: 1000: if(dir != 0)
 17826  012E32  502D               	movf	i2USBTransferOnePacket@dir,w,c
 17827  012E34  B4D8               	btfsc	status,2,c
 17828  012E36  D007               	goto	i2l5021
 17829                           
 17830                           ;usb_device.c: 1001: {
 17831                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 17832  012E38  5031               	movf	i2USBTransferOnePacket@ep,w,c
 17833  012E3A  0D02               	mullw	2
 17834  012E3C  0ED8               	movlw	low _pBDTEntryIn
 17835  012E3E  24F3               	addwf	prodl,w,c
 17836  012E40  6ED9               	movwf	fsr2l,c
 17837  012E42  0E00               	movlw	high _pBDTEntryIn
 17838  012E44  D006               	goto	L11
 17839  012E46                     i2l5021:
 17840                           
 17841                           ;usb_device.c: 1005: else
 17842                           ;usb_device.c: 1006: {
 17843                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 17844  012E46  5031               	movf	i2USBTransferOnePacket@ep,w,c
 17845  012E48  0D02               	mullw	2
 17846  012E4A  0EDE               	movlw	low _pBDTEntryOut
 17847  012E4C  24F3               	addwf	prodl,w,c
 17848  012E4E  6ED9               	movwf	fsr2l,c
 17849  012E50  0E00               	movlw	high _pBDTEntryOut
 17850  012E52                     L11:
 17851  012E52  20F4               	addwfc	prodh,w,c
 17852  012E54  6EDA               	movwf	fsr2h,c
 17853  012E56  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 17854  012E5A  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 17855                           
 17856                           ;usb_device.c: 1009: }
 17857                           ;usb_device.c: 1013: if(handle == 0)
 17858  012E5E  5032               	movf	i2USBTransferOnePacket@handle,w,c
 17859  012E60  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 17860  012E62  A4D8               	btfss	status,2,c
 17861  012E64  D005               	goto	i2l5029
 17862                           
 17863                           ;usb_device.c: 1014: {
 17864                           ;usb_device.c: 1015: return 0;
 17865  012E66  0E00               	movlw	0
 17866  012E68  6E2D               	movwf	?i2_USBTransferOnePacket,c
 17867  012E6A  0E00               	movlw	0
 17868  012E6C  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 17869  012E6E  0012               	return	
 17870  012E70                     i2l5029:
 17871                           
 17872                           ;usb_device.c: 1016: }
 17873                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 17874  012E70  EE20 F002          	lfsr	2,2
 17875  012E74  5032               	movf	i2USBTransferOnePacket@handle,w,c
 17876  012E76  26D9               	addwf	fsr2l,f,c
 17877  012E78  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 17878  012E7A  22DA               	addwfc	fsr2h,f,c
 17879  012E7C  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 17880  012E80  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 17881                           
 17882                           ;usb_device.c: 1030: handle->CNT = len;
 17883  012E84  EE20 F001          	lfsr	2,1
 17884  012E88  5032               	movf	i2USBTransferOnePacket@handle,w,c
 17885  012E8A  26D9               	addwf	fsr2l,f,c
 17886  012E8C  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 17887  012E8E  22DA               	addwfc	fsr2h,f,c
 17888  012E90  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 17889                           
 17890                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 17891  012E94  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17892  012E98  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17893  012E9C  0E40               	movlw	64
 17894  012E9E  16DF               	andwf	indf2,f,c
 17895                           
 17896                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 17897  012EA0  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17898  012EA4  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17899  012EA8  0E00               	movlw	0
 17900  012EAA  86DB               	bsf	plusw2,3,c
 17901                           
 17902                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 17903  012EAC  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17904  012EB0  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17905  012EB4  0E00               	movlw	0
 17906  012EB6  8EDB               	bsf	plusw2,7,c
 17907                           
 17908                           ;usb_device.c: 1036: if(dir != 0)
 17909  012EB8  502D               	movf	i2USBTransferOnePacket@dir,w,c
 17910  012EBA  B4D8               	btfsc	status,2,c
 17911  012EBC  D007               	goto	i2l5041
 17912                           
 17913                           ;usb_device.c: 1037: {
 17914                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17915  012EBE  5031               	movf	i2USBTransferOnePacket@ep,w,c
 17916  012EC0  0D02               	mullw	2
 17917  012EC2  0ED8               	movlw	low _pBDTEntryIn
 17918  012EC4  24F3               	addwf	prodl,w,c
 17919  012EC6  6ED9               	movwf	fsr2l,c
 17920  012EC8  0E00               	movlw	high _pBDTEntryIn
 17921  012ECA  D006               	goto	L12
 17922  012ECC                     i2l5041:
 17923                           
 17924                           ;usb_device.c: 1041: else
 17925                           ;usb_device.c: 1042: {
 17926                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17927  012ECC  5031               	movf	i2USBTransferOnePacket@ep,w,c
 17928  012ECE  0D02               	mullw	2
 17929  012ED0  0EDE               	movlw	low _pBDTEntryOut
 17930  012ED2  24F3               	addwf	prodl,w,c
 17931  012ED4  6ED9               	movwf	fsr2l,c
 17932  012ED6  0E00               	movlw	high _pBDTEntryOut
 17933  012ED8                     L12:
 17934  012ED8  20F4               	addwfc	prodh,w,c
 17935  012EDA  6EDA               	movwf	fsr2h,c
 17936  012EDC  0E04               	movlw	4
 17937  012EDE  1ADF               	xorwf	indf2,f,c
 17938                           
 17939                           ;usb_device.c: 1045: }
 17940                           ;usb_device.c: 1046: return (void*)handle;
 17941  012EE0  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 17942  012EE4  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 17943  012EE8  0012               	return	
 17944  012EEA                     __end_ofi2_USBTransferOnePacket:
 17945                           	opt stack 0
 17946                           pclatu	equ	0xFFB
 17947                           pclath	equ	0xFFA
 17948                           tblptru	equ	0xFF8
 17949                           tblptrh	equ	0xFF7
 17950                           tblptrl	equ	0xFF6
 17951                           tablat	equ	0xFF5
 17952                           prodh	equ	0xFF4
 17953                           prodl	equ	0xFF3
 17954                           intcon	equ	0xFF2
 17955                           intcon2	equ	0xFF1
 17956                           indf0	equ	0xFEF
 17957                           postinc0	equ	0xFEE
 17958                           fsr0h	equ	0xFEA
 17959                           fsr0l	equ	0xFE9
 17960                           wreg	equ	0xFE8
 17961                           indf1	equ	0xFE7
 17962                           postinc1	equ	0xFE6
 17963                           postdec1	equ	0xFE5
 17964                           fsr1h	equ	0xFE2
 17965                           fsr1l	equ	0xFE1
 17966                           indf2	equ	0xFDF
 17967                           postinc2	equ	0xFDE
 17968                           postdec2	equ	0xFDD
 17969                           plusw2	equ	0xFDB
 17970                           fsr2h	equ	0xFDA
 17971                           fsr2l	equ	0xFD9
 17972                           status	equ	0xFD8
 17973                           
 17974 ;; *************** function _USBEnableEndpoint *****************
 17975 ;; Defined at:
 17976 ;;		line 878 in file "../My_library/usb/usb_device.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;  ep              1    wreg     unsigned char 
 17979 ;;  options         1    8[COMRAM] unsigned char 
 17980 ;; Auto vars:     Size  Location     Type
 17981 ;;  ep              1   11[COMRAM] unsigned char 
 17982 ;;  p               2    9[COMRAM] PTR unsigned char 
 17983 ;;		 -> UEP0(1), 
 17984 ;; Return value:  Size  Location     Type
 17985 ;;		None               void
 17986 ;; Registers used:
 17987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17988 ;; Tracked objects:
 17989 ;;		On entry : 0/0
 17990 ;;		On exit  : 0/0
 17991 ;;		Unchanged: 0/0
 17992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17993 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17994 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17996 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17997 ;;Total ram usage:        4 bytes
 17998 ;; Hardware stack levels used:    1
 17999 ;; Hardware stack levels required when called:    1
 18000 ;; This function calls:
 18001 ;;		_USBConfigureEndpoint
 18002 ;; This function is called by:
 18003 ;;		_CDCInitEP
 18004 ;; This function uses a non-reentrant model
 18005 ;;
 18006                           
 18007                           	psect	text89
 18008  013C18                     __ptext89:
 18009                           	opt stack 0
 18010  013C18                     _USBEnableEndpoint:
 18011                           	opt stack 15
 18012                           
 18013                           ;incstack = 0
 18014                           ;USBEnableEndpoint@ep stored from wreg
 18015  013C18  6E38               	movwf	USBEnableEndpoint@ep,c
 18016                           
 18017                           ;usb_device.c: 880: unsigned char* p;
 18018                           ;usb_device.c: 884: if(options & 0x04)
 18019  013C1A  A435               	btfss	USBEnableEndpoint@options,2,c
 18020  013C1C  D005               	goto	i2l4973
 18021                           
 18022                           ;usb_device.c: 885: {
 18023                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18024  013C1E  0E00               	movlw	0
 18025  013C20  6E2D               	movwf	USBConfigureEndpoint@direction,c
 18026  013C22  5038               	movf	USBEnableEndpoint@ep,w,c
 18027  013C24  ECC6  F098         	call	_USBConfigureEndpoint
 18028  013C28                     i2l4973:
 18029                           
 18030                           ;usb_device.c: 887: }
 18031                           ;usb_device.c: 888: if(options & 0x02)
 18032  013C28  A235               	btfss	USBEnableEndpoint@options,1,c
 18033  013C2A  D005               	goto	i2l4977
 18034                           
 18035                           ;usb_device.c: 889: {
 18036                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 18037  013C2C  0E01               	movlw	1
 18038  013C2E  6E2D               	movwf	USBConfigureEndpoint@direction,c
 18039  013C30  5038               	movf	USBEnableEndpoint@ep,w,c
 18040  013C32  ECC6  F098         	call	_USBConfigureEndpoint
 18041  013C36                     i2l4977:
 18042                           
 18043                           ;usb_device.c: 891: }
 18044                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 18045  013C36  5038               	movf	USBEnableEndpoint@ep,w,c
 18046  013C38  0D01               	mullw	1
 18047  013C3A  0E26               	movlw	38
 18048  013C3C  24F3               	addwf	prodl,w,c
 18049  013C3E  6E36               	movwf	USBEnableEndpoint@p,c
 18050  013C40  0E0F               	movlw	15
 18051  013C42  20F4               	addwfc	prodh,w,c
 18052  013C44  6E37               	movwf	USBEnableEndpoint@p+1,c
 18053                           
 18054                           ;usb_device.c: 901: *p = options;
 18055  013C46  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18056  013C4A  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18057  013C4E  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 18058  013C52  0012               	return		;funcret
 18059  013C54                     __end_of_USBEnableEndpoint:
 18060                           	opt stack 0
 18061                           pclatu	equ	0xFFB
 18062                           pclath	equ	0xFFA
 18063                           tblptru	equ	0xFF8
 18064                           tblptrh	equ	0xFF7
 18065                           tblptrl	equ	0xFF6
 18066                           tablat	equ	0xFF5
 18067                           prodh	equ	0xFF4
 18068                           prodl	equ	0xFF3
 18069                           intcon	equ	0xFF2
 18070                           intcon2	equ	0xFF1
 18071                           indf0	equ	0xFEF
 18072                           postinc0	equ	0xFEE
 18073                           fsr0h	equ	0xFEA
 18074                           fsr0l	equ	0xFE9
 18075                           wreg	equ	0xFE8
 18076                           indf1	equ	0xFE7
 18077                           postinc1	equ	0xFE6
 18078                           postdec1	equ	0xFE5
 18079                           fsr1h	equ	0xFE2
 18080                           fsr1l	equ	0xFE1
 18081                           indf2	equ	0xFDF
 18082                           postinc2	equ	0xFDE
 18083                           postdec2	equ	0xFDD
 18084                           plusw2	equ	0xFDB
 18085                           fsr2h	equ	0xFDA
 18086                           fsr2l	equ	0xFD9
 18087                           status	equ	0xFD8
 18088                           
 18089 ;; *************** function _USBConfigureEndpoint *****************
 18090 ;; Defined at:
 18091 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 18092 ;; Parameters:    Size  Location     Type
 18093 ;;  EPNum           1    wreg     unsigned char 
 18094 ;;  direction       1    0[COMRAM] unsigned char 
 18095 ;; Auto vars:     Size  Location     Type
 18096 ;;  EPNum           1    5[COMRAM] unsigned char 
 18097 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18098 ;;		 -> BDT(48), 
 18099 ;; Return value:  Size  Location     Type
 18100 ;;		None               void
 18101 ;; Registers used:
 18102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18109 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18112 ;;Total ram usage:        8 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; This function calls:
 18115 ;;		Nothing
 18116 ;; This function is called by:
 18117 ;;		_USBEnableEndpoint
 18118 ;; This function uses a non-reentrant model
 18119 ;;
 18120                           
 18121                           	psect	text90
 18122  01318C                     __ptext90:
 18123                           	opt stack 0
 18124  01318C                     _USBConfigureEndpoint:
 18125                           	opt stack 15
 18126                           
 18127                           ;incstack = 0
 18128                           ;USBConfigureEndpoint@EPNum stored from wreg
 18129  01318C  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 18130                           
 18131                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 18132                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 18133  01318E  0E00               	movlw	0
 18134  013190  6E33               	movwf	USBConfigureEndpoint@handle,c
 18135  013192  0E0D               	movlw	13
 18136  013194  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 18137                           
 18138                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 18139  013196  502D               	movf	USBConfigureEndpoint@direction,w,c
 18140  013198  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 18141  01319A  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18142  01319C  90D8               	bcf	status,0,c
 18143  01319E  362E               	rlcf	??_USBConfigureEndpoint,f,c
 18144  0131A0  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 18145  0131A2  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 18146  0131A4  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18147  0131A6  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18148  0131A8  90D8               	bcf	status,0,c
 18149  0131AA  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18150  0131AC  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18151  0131AE  90D8               	bcf	status,0,c
 18152  0131B0  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18153  0131B2  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18154  0131B4  502E               	movf	??_USBConfigureEndpoint,w,c
 18155  0131B6  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 18156  0131B8  502F               	movf	??_USBConfigureEndpoint+1,w,c
 18157  0131BA  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 18158  0131BC  90D8               	bcf	status,0,c
 18159  0131BE  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18160  0131C0  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18161  0131C2  90D8               	bcf	status,0,c
 18162  0131C4  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18163  0131C6  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18164  0131C8  5030               	movf	??_USBConfigureEndpoint+2,w,c
 18165  0131CA  2633               	addwf	USBConfigureEndpoint@handle,f,c
 18166  0131CC  5031               	movf	??_USBConfigureEndpoint+3,w,c
 18167  0131CE  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18168                           
 18169                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 18170  0131D0  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18171  0131D4  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18172  0131D8  9EDF               	bcf	indf2,7,c
 18173                           
 18174                           ;usb_device.c: 1557: if(direction == 0)
 18175  0131DA  502D               	movf	USBConfigureEndpoint@direction,w,c
 18176  0131DC  A4D8               	btfss	status,2,c
 18177  0131DE  D007               	goto	i2l4963
 18178                           
 18179                           ;usb_device.c: 1558: {
 18180                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 18181  0131E0  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 18182  0131E2  0D02               	mullw	2
 18183  0131E4  0EDE               	movlw	low _pBDTEntryOut
 18184  0131E6  24F3               	addwf	prodl,w,c
 18185  0131E8  6ED9               	movwf	fsr2l,c
 18186  0131EA  0E00               	movlw	high _pBDTEntryOut
 18187  0131EC  D006               	goto	L13
 18188  0131EE                     i2l4963:
 18189                           
 18190                           ;usb_device.c: 1561: else
 18191                           ;usb_device.c: 1562: {
 18192                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 18193  0131EE  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 18194  0131F0  0D02               	mullw	2
 18195  0131F2  0ED8               	movlw	low _pBDTEntryIn
 18196  0131F4  24F3               	addwf	prodl,w,c
 18197  0131F6  6ED9               	movwf	fsr2l,c
 18198  0131F8  0E00               	movlw	high _pBDTEntryIn
 18199  0131FA                     L13:
 18200  0131FA  20F4               	addwfc	prodh,w,c
 18201  0131FC  6EDA               	movwf	fsr2h,c
 18202  0131FE  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 18203  013202  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 18204                           
 18205                           ;usb_device.c: 1564: }
 18206                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 18207  013206  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18208  01320A  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18209  01320E  9CDF               	bcf	indf2,6,c
 18210                           
 18211                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 18212  013210  EE20 F004          	lfsr	2,4
 18213  013214  5033               	movf	USBConfigureEndpoint@handle,w,c
 18214  013216  26D9               	addwf	fsr2l,f,c
 18215  013218  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 18216  01321A  22DA               	addwfc	fsr2h,f,c
 18217  01321C  8CDF               	bsf	indf2,6,c
 18218  01321E  0012               	return		;funcret
 18219  013220                     __end_of_USBConfigureEndpoint:
 18220                           	opt stack 0
 18221                           pclatu	equ	0xFFB
 18222                           pclath	equ	0xFFA
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           intcon2	equ	0xFF1
 18231                           indf0	equ	0xFEF
 18232                           postinc0	equ	0xFEE
 18233                           fsr0h	equ	0xFEA
 18234                           fsr0l	equ	0xFE9
 18235                           wreg	equ	0xFE8
 18236                           indf1	equ	0xFE7
 18237                           postinc1	equ	0xFE6
 18238                           postdec1	equ	0xFE5
 18239                           fsr1h	equ	0xFE2
 18240                           fsr1l	equ	0xFE1
 18241                           indf2	equ	0xFDF
 18242                           postinc2	equ	0xFDE
 18243                           postdec2	equ	0xFDD
 18244                           plusw2	equ	0xFDB
 18245                           fsr2h	equ	0xFDA
 18246                           fsr2l	equ	0xFD9
 18247                           status	equ	0xFD8
 18248                           
 18249 ;; *************** function _USBCtrlTrfOutHandler *****************
 18250 ;; Defined at:
 18251 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 18252 ;; Parameters:    Size  Location     Type
 18253 ;;		None
 18254 ;; Auto vars:     Size  Location     Type
 18255 ;;		None
 18256 ;; Return value:  Size  Location     Type
 18257 ;;		None               void
 18258 ;; Registers used:
 18259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18260 ;; Tracked objects:
 18261 ;;		On entry : 0/0
 18262 ;;		On exit  : 0/0
 18263 ;;		Unchanged: 0/0
 18264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18269 ;;Total ram usage:        0 bytes
 18270 ;; Hardware stack levels used:    1
 18271 ;; Hardware stack levels required when called:    2
 18272 ;; This function calls:
 18273 ;;		_USBCtrlTrfRxService
 18274 ;; This function is called by:
 18275 ;;		_USBCtrlEPService
 18276 ;; This function uses a non-reentrant model
 18277 ;;
 18278                           
 18279                           	psect	text91
 18280  0139FA                     __ptext91:
 18281                           	opt stack 0
 18282  0139FA                     _USBCtrlTrfOutHandler:
 18283                           	opt stack 15
 18284                           
 18285                           ;usb_device.c: 2543: if(controlTransferState == 2)
 18286                           
 18287                           ;incstack = 0
 18288  0139FA  0E02               	movlw	2
 18289  0139FC  1817               	xorwf	_controlTransferState,w,c	;volatile
 18290  0139FE  A4D8               	btfss	status,2,c
 18291  013A00  D003               	goto	i2l6109
 18292                           
 18293                           ;usb_device.c: 2544: {
 18294                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 18295  013A02  EC91  F08C         	call	_USBCtrlTrfRxService	;wreg free
 18296                           
 18297                           ;usb_device.c: 2546: }
 18298  013A06  0012               	return	
 18299  013A08                     i2l6109:
 18300                           
 18301                           ;usb_device.c: 2547: else
 18302                           ;usb_device.c: 2548: {
 18303                           ;usb_device.c: 2551: controlTransferState = 0;
 18304  013A08  0E00               	movlw	0
 18305  013A0A  6E17               	movwf	_controlTransferState,c	;volatile
 18306                           
 18307                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 18308  013A0C  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 18309  013A0E  A4D8               	btfss	status,2,c
 18310  013A10  D01F               	goto	i2l6117
 18311                           
 18312                           ;usb_device.c: 2559: {
 18313                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 18314  013A12  EE20 F001          	lfsr	2,1
 18315  013A16  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18316  013A18  26D9               	addwf	fsr2l,f,c
 18317  013A1A  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18318  013A1C  22DA               	addwfc	fsr2h,f,c
 18319  013A1E  0E08               	movlw	8
 18320  013A20  6EDF               	movwf	indf2,c
 18321                           
 18322                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18323  013A22  EE20 F002          	lfsr	2,2
 18324  013A26  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18325  013A28  26D9               	addwf	fsr2l,f,c
 18326  013A2A  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18327  013A2C  22DA               	addwfc	fsr2h,f,c
 18328  013A2E  0E30               	movlw	48
 18329  013A30  6EDE               	movwf	postinc2,c
 18330  013A32  0E0D               	movlw	13
 18331  013A34  6EDD               	movwf	postdec2,c
 18332                           
 18333                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18334  013A36  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18335  013A3A  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18336  013A3E  0E0C               	movlw	12
 18337  013A40  6EDF               	movwf	indf2,c
 18338                           
 18339                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18340  013A42  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18341  013A46  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18342  013A4A  0E00               	movlw	0
 18343  013A4C  8EDB               	bsf	plusw2,7,c
 18344                           
 18345                           ;usb_device.c: 2564: }
 18346  013A4E  0012               	return	
 18347  013A50                     i2l6117:
 18348                           
 18349                           ;usb_device.c: 2565: else
 18350                           ;usb_device.c: 2566: {
 18351                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 18352  013A50  0E00               	movlw	0
 18353  013A52  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18354  013A54  0012               	return	
 18355  013A56                     __end_of_USBCtrlTrfOutHandler:
 18356                           	opt stack 0
 18357                           pclatu	equ	0xFFB
 18358                           pclath	equ	0xFFA
 18359                           tblptru	equ	0xFF8
 18360                           tblptrh	equ	0xFF7
 18361                           tblptrl	equ	0xFF6
 18362                           tablat	equ	0xFF5
 18363                           prodh	equ	0xFF4
 18364                           prodl	equ	0xFF3
 18365                           intcon	equ	0xFF2
 18366                           intcon2	equ	0xFF1
 18367                           indf0	equ	0xFEF
 18368                           postinc0	equ	0xFEE
 18369                           fsr0h	equ	0xFEA
 18370                           fsr0l	equ	0xFE9
 18371                           wreg	equ	0xFE8
 18372                           indf1	equ	0xFE7
 18373                           postinc1	equ	0xFE6
 18374                           postdec1	equ	0xFE5
 18375                           fsr1h	equ	0xFE2
 18376                           fsr1l	equ	0xFE1
 18377                           indf2	equ	0xFDF
 18378                           postinc2	equ	0xFDE
 18379                           postdec2	equ	0xFDD
 18380                           plusw2	equ	0xFDB
 18381                           fsr2h	equ	0xFDA
 18382                           fsr2l	equ	0xFD9
 18383                           status	equ	0xFD8
 18384                           
 18385 ;; *************** function _USBCtrlTrfRxService *****************
 18386 ;; Defined at:
 18387 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;		None
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18392 ;;  i               1    0[COMRAM] unsigned char 
 18393 ;; Return value:  Size  Location     Type
 18394 ;;		None               void
 18395 ;; Registers used:
 18396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18397 ;; Tracked objects:
 18398 ;;		On entry : 0/0
 18399 ;;		On exit  : 0/0
 18400 ;;		Unchanged: 0/0
 18401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18406 ;;Total ram usage:        2 bytes
 18407 ;; Hardware stack levels used:    1
 18408 ;; Hardware stack levels required when called:    1
 18409 ;; This function calls:
 18410 ;;		_USBCtrlEPAllowStatusStage
 18411 ;; This function is called by:
 18412 ;;		_USBCtrlTrfOutHandler
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text92
 18417  011922                     __ptext92:
 18418                           	opt stack 0
 18419  011922                     _USBCtrlTrfRxService:
 18420                           	opt stack 15
 18421                           
 18422                           ;usb_device.c: 1854: uint8_t byteToRead;
 18423                           ;usb_device.c: 1855: uint8_t i;
 18424                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18425                           
 18426                           ;incstack = 0
 18427  011922  EE20 F001          	lfsr	2,1
 18428  011926  5003               	movf	_pBDTEntryEP0OutCurrent,w,c
 18429  011928  26D9               	addwf	fsr2l,f,c
 18430  01192A  5004               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18431  01192C  22DA               	addwfc	fsr2h,f,c
 18432  01192E  50DF               	movf	indf2,w,c
 18433  011930  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 18434                           
 18435                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 18436  011932  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18437  011934  0100               	movlb	0	; () banked
 18438  011936  5DCD               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 18439  011938  0E00               	movlw	0
 18440  01193A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 18441  01193C  A0D8               	btfss	status,0,c
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;usb_device.c: 1866: {
 18445                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 18446  01193E  C0CD  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;usb_device.c: 1868: }
 18450                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 18451                           
 18452                           ; BSR set to: 0
 18453  011942  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18454  011944  0100               	movlb	0	; () banked
 18455  011946  5FCD               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 18456  011948  0E00               	movlw	0
 18457  01194A  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 18458                           
 18459                           ; BSR set to: 0
 18460                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 18461  01194C  0E00               	movlw	0
 18462  01194E  6E2D               	movwf	USBCtrlTrfRxService@i,c
 18463  011950  D012               	goto	i2l5957
 18464  011952                     i2l5951:
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;usb_device.c: 1875: {
 18468                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18469  011952  502D               	movf	USBCtrlTrfRxService@i,w,c
 18470  011954  0D01               	mullw	1
 18471  011956  0E38               	movlw	56
 18472  011958  24F3               	addwf	prodl,w,c
 18473  01195A  6ED9               	movwf	fsr2l,c
 18474  01195C  0E0D               	movlw	13
 18475  01195E  20F4               	addwfc	prodh,w,c
 18476  011960  6EDA               	movwf	fsr2h,c
 18477  011962  C0C9  FFE1         	movff	_outPipes,fsr1l	;volatile
 18478  011966  C0CA  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 18479  01196A  CFDF FFE7          	movff	indf2,indf1
 18480                           
 18481                           ; BSR set to: 0
 18482  01196E  0100               	movlb	0	; () banked
 18483  011970  4BC9               	infsnz	_outPipes& (0+255),f,b	;volatile
 18484  011972  2BCA               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 18485                           
 18486                           ; BSR set to: 0
 18487  011974  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 18488  011976                     i2l5957:
 18489                           
 18490                           ; BSR set to: 0
 18491  011976  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18492  011978  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 18493  01197A  A0D8               	btfss	status,0,c
 18494  01197C  D7EA               	goto	i2l5951
 18495                           
 18496                           ; BSR set to: 0
 18497                           ;usb_device.c: 1877: }
 18498                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 18499                           
 18500                           ; BSR set to: 0
 18501  01197E  0100               	movlb	0	; () banked
 18502  011980  51CD               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 18503  011982  0100               	movlb	0	; () banked
 18504  011984  11CE               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 18505  011986  B4D8               	btfsc	status,2,c
 18506  011988  D032               	goto	i2l5973
 18507                           
 18508                           ; BSR set to: 0
 18509                           ;usb_device.c: 1882: {
 18510                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 18511  01198A  EE20 F001          	lfsr	2,1
 18512  01198E  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18513  011990  26D9               	addwf	fsr2l,f,c
 18514  011992  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18515  011994  22DA               	addwfc	fsr2h,f,c
 18516  011996  0E08               	movlw	8
 18517  011998  6EDF               	movwf	indf2,c
 18518                           
 18519                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18520  01199A  EE20 F002          	lfsr	2,2
 18521  01199E  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18522  0119A0  26D9               	addwf	fsr2l,f,c
 18523  0119A2  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18524  0119A4  22DA               	addwfc	fsr2h,f,c
 18525  0119A6  0E38               	movlw	56
 18526  0119A8  6EDE               	movwf	postinc2,c
 18527  0119AA  0E0D               	movlw	13
 18528  0119AC  6EDD               	movwf	postdec2,c
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18532  0119AE  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18533  0119B2  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18534  0119B6  BCDF               	btfsc	indf2,6,c
 18535  0119B8  D00D               	goto	i2l5969
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;usb_device.c: 1886: {
 18539                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18540  0119BA  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18541  0119BE  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18542  0119C2  0E48               	movlw	72
 18543  0119C4  6EDF               	movwf	indf2,c
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18547  0119C6  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18548  0119CA  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18549  0119CE  0E00               	movlw	0
 18550  0119D0  8EDB               	bsf	plusw2,7,c
 18551                           
 18552                           ;usb_device.c: 1889: }
 18553  0119D2  0012               	return	
 18554  0119D4                     i2l5969:
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;usb_device.c: 1890: else
 18558                           ;usb_device.c: 1891: {
 18559                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 18560  0119D4  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18561  0119D8  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18562  0119DC  0E08               	movlw	8
 18563  0119DE  6EDF               	movwf	indf2,c
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18567  0119E0  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18568  0119E4  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18569  0119E8  0E00               	movlw	0
 18570  0119EA  8EDB               	bsf	plusw2,7,c
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;usb_device.c: 1894: }
 18574                           ;usb_device.c: 1895: }
 18575  0119EC  0012               	return	
 18576  0119EE                     i2l5973:
 18577                           
 18578                           ; BSR set to: 0
 18579                           ;usb_device.c: 1896: else
 18580                           ;usb_device.c: 1897: {
 18581                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 18582  0119EE  EE20 F001          	lfsr	2,1
 18583  0119F2  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18584  0119F4  26D9               	addwf	fsr2l,f,c
 18585  0119F6  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18586  0119F8  22DA               	addwfc	fsr2h,f,c
 18587  0119FA  0E08               	movlw	8
 18588  0119FC  6EDF               	movwf	indf2,c
 18589                           
 18590                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18591  0119FE  EE20 F002          	lfsr	2,2
 18592  011A02  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18593  011A04  26D9               	addwf	fsr2l,f,c
 18594  011A06  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18595  011A08  22DA               	addwfc	fsr2h,f,c
 18596  011A0A  0E30               	movlw	48
 18597  011A0C  6EDE               	movwf	postinc2,c
 18598  011A0E  0E0D               	movlw	13
 18599  011A10  6EDD               	movwf	postdec2,c
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18603  011A12  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18604  011A16  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18605  011A1A  0E04               	movlw	4
 18606  011A1C  6EDF               	movwf	indf2,c
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18610  011A1E  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18611  011A22  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18612  011A26  0E00               	movlw	0
 18613  011A28  8EDB               	bsf	plusw2,7,c
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;usb_device.c: 1926: }
 18617                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 18618                           
 18619                           ; BSR set to: 0
 18620                           ;usb_device.c: 1915: {
 18621                           ;usb_device.c: 1921: outPipes[0].pFunc();
 18622  011A2A  0100               	movlb	0	; () banked
 18623  011A2C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18624                           
 18625                           ; BSR set to: 0
 18626                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 18627  011A2E  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18628  011A30  A4D8               	btfss	status,2,c
 18629  011A32  0012               	return	
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;usb_device.c: 1942: {
 18633                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 18634  011A34  EC7E  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18635  011A38  0012               	return	
 18636  011A3A                     __end_of_USBCtrlTrfRxService:
 18637                           	opt stack 0
 18638                           pclatu	equ	0xFFB
 18639                           pclath	equ	0xFFA
 18640                           tblptru	equ	0xFF8
 18641                           tblptrh	equ	0xFF7
 18642                           tblptrl	equ	0xFF6
 18643                           tablat	equ	0xFF5
 18644                           prodh	equ	0xFF4
 18645                           prodl	equ	0xFF3
 18646                           intcon	equ	0xFF2
 18647                           intcon2	equ	0xFF1
 18648                           indf0	equ	0xFEF
 18649                           postinc0	equ	0xFEE
 18650                           fsr0h	equ	0xFEA
 18651                           fsr0l	equ	0xFE9
 18652                           wreg	equ	0xFE8
 18653                           indf1	equ	0xFE7
 18654                           postinc1	equ	0xFE6
 18655                           postdec1	equ	0xFE5
 18656                           fsr1h	equ	0xFE2
 18657                           fsr1l	equ	0xFE1
 18658                           indf2	equ	0xFDF
 18659                           postinc2	equ	0xFDE
 18660                           postdec2	equ	0xFDD
 18661                           plusw2	equ	0xFDB
 18662                           fsr2h	equ	0xFDA
 18663                           fsr2l	equ	0xFD9
 18664                           status	equ	0xFD8
 18665                           
 18666 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18667 ;; Defined at:
 18668 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 18669 ;; Parameters:    Size  Location     Type
 18670 ;;		None
 18671 ;; Auto vars:     Size  Location     Type
 18672 ;;		None
 18673 ;; Return value:  Size  Location     Type
 18674 ;;		None               void
 18675 ;; Registers used:
 18676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18677 ;; Tracked objects:
 18678 ;;		On entry : 0/0
 18679 ;;		On exit  : 0/0
 18680 ;;		Unchanged: 0/0
 18681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18686 ;;Total ram usage:        0 bytes
 18687 ;; Hardware stack levels used:    1
 18688 ;; This function calls:
 18689 ;;		Nothing
 18690 ;; This function is called by:
 18691 ;;		_USBDeviceTasks
 18692 ;;		_USBCtrlEPServiceComplete
 18693 ;;		_USBCtrlTrfRxService
 18694 ;; This function uses a non-reentrant model
 18695 ;;
 18696                           
 18697                           	psect	text93
 18698  0128FC                     __ptext93:
 18699                           	opt stack 0
 18700  0128FC                     _USBCtrlEPAllowStatusStage:
 18701                           	opt stack 15
 18702                           
 18703                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 18704                           
 18705                           ;incstack = 0
 18706  0128FC  5013               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 18707  0128FE  A4D8               	btfss	status,2,c
 18708  012900  0012               	return	
 18709                           
 18710                           ;usb_device.c: 1424: {
 18711                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 18712  012902  0E01               	movlw	1
 18713  012904  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18714                           
 18715                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 18716  012906  5014               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 18717  012908  A4D8               	btfss	status,2,c
 18718  01290A  0012               	return	
 18719                           
 18720                           ;usb_device.c: 1427: {
 18721                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 18722  01290C  0E01               	movlw	1
 18723  01290E  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18724                           
 18725                           ;usb_device.c: 1432: if(controlTransferState == 2)
 18726  012910  0E02               	movlw	2
 18727  012912  1817               	xorwf	_controlTransferState,w,c	;volatile
 18728  012914  A4D8               	btfss	status,2,c
 18729  012916  D016               	goto	i2l5401
 18730                           
 18731                           ;usb_device.c: 1433: {
 18732                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 18733  012918  0100               	movlb	0	; () banked
 18734  01291A  EE20 F001          	lfsr	2,1
 18735  01291E  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18736  012920  26D9               	addwf	fsr2l,f,c
 18737  012922  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18738  012924  22DA               	addwfc	fsr2h,f,c
 18739  012926  0E00               	movlw	0
 18740  012928  6EDF               	movwf	indf2,c
 18741                           
 18742                           ; BSR set to: 0
 18743                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18744  01292A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18745  01292E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18746  012932  0E48               	movlw	72
 18747  012934  6EDF               	movwf	indf2,c
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18751  012936  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18752  01293A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18753  01293E  0E00               	movlw	0
 18754  012940  8EDB               	bsf	plusw2,7,c
 18755                           
 18756                           ;usb_device.c: 1437: }
 18757  012942  0012               	return	
 18758  012944                     i2l5401:
 18759                           
 18760                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 18761  012944  0417               	decf	_controlTransferState,w,c	;volatile
 18762  012946  A4D8               	btfss	status,2,c
 18763  012948  0012               	return	
 18764                           
 18765                           ;usb_device.c: 1439: {
 18766                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 18767  01294A  0E00               	movlw	0
 18768  01294C  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18769                           
 18770                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 18771  01294E  EE20 F001          	lfsr	2,1
 18772  012952  5003               	movf	_pBDTEntryEP0OutCurrent,w,c
 18773  012954  26D9               	addwf	fsr2l,f,c
 18774  012956  5004               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18775  012958  22DA               	addwfc	fsr2h,f,c
 18776  01295A  0E08               	movlw	8
 18777  01295C  6EDF               	movwf	indf2,c
 18778                           
 18779                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18780  01295E  EE20 F002          	lfsr	2,2
 18781  012962  5003               	movf	_pBDTEntryEP0OutCurrent,w,c
 18782  012964  26D9               	addwf	fsr2l,f,c
 18783  012966  5004               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18784  012968  22DA               	addwfc	fsr2h,f,c
 18785  01296A  0E30               	movlw	48
 18786  01296C  6EDE               	movwf	postinc2,c
 18787  01296E  0E0D               	movlw	13
 18788  012970  6EDD               	movwf	postdec2,c
 18789                           
 18790                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18791  012972  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18792  012976  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18793  01297A  0E04               	movlw	4
 18794  01297C  6EDF               	movwf	indf2,c
 18795                           
 18796                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18797  01297E  C003  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18798  012982  C004  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18799  012986  0E00               	movlw	0
 18800  012988  8EDB               	bsf	plusw2,7,c
 18801                           
 18802                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 18803  01298A  0E01               	movlw	1
 18804  01298C  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18805                           
 18806                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 18807  01298E  EE20 F001          	lfsr	2,1
 18808  012992  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18809  012994  26D9               	addwf	fsr2l,f,c
 18810  012996  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18811  012998  22DA               	addwfc	fsr2h,f,c
 18812  01299A  0E08               	movlw	8
 18813  01299C  6EDF               	movwf	indf2,c
 18814                           
 18815                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18816  01299E  EE20 F002          	lfsr	2,2
 18817  0129A2  5005               	movf	_pBDTEntryEP0OutNext,w,c
 18818  0129A4  26D9               	addwf	fsr2l,f,c
 18819  0129A6  5006               	movf	_pBDTEntryEP0OutNext+1,w,c
 18820  0129A8  22DA               	addwfc	fsr2h,f,c
 18821  0129AA  0E30               	movlw	48
 18822  0129AC  6EDE               	movwf	postinc2,c
 18823  0129AE  0E0D               	movlw	13
 18824  0129B0  6EDD               	movwf	postdec2,c
 18825                           
 18826                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18827  0129B2  C005  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18828  0129B6  C006  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18829  0129BA  0E80               	movlw	128
 18830  0129BC  6EDF               	movwf	indf2,c
 18831  0129BE  0012               	return	
 18832  0129C0                     __end_of_USBCtrlEPAllowStatusStage:
 18833                           	opt stack 0
 18834                           pclatu	equ	0xFFB
 18835                           pclath	equ	0xFFA
 18836                           tblptru	equ	0xFF8
 18837                           tblptrh	equ	0xFF7
 18838                           tblptrl	equ	0xFF6
 18839                           tablat	equ	0xFF5
 18840                           prodh	equ	0xFF4
 18841                           prodl	equ	0xFF3
 18842                           intcon	equ	0xFF2
 18843                           intcon2	equ	0xFF1
 18844                           indf0	equ	0xFEF
 18845                           postinc0	equ	0xFEE
 18846                           fsr0h	equ	0xFEA
 18847                           fsr0l	equ	0xFE9
 18848                           wreg	equ	0xFE8
 18849                           indf1	equ	0xFE7
 18850                           postinc1	equ	0xFE6
 18851                           postdec1	equ	0xFE5
 18852                           fsr1h	equ	0xFE2
 18853                           fsr1l	equ	0xFE1
 18854                           indf2	equ	0xFDF
 18855                           postinc2	equ	0xFDE
 18856                           postdec2	equ	0xFDD
 18857                           plusw2	equ	0xFDB
 18858                           fsr2h	equ	0xFDA
 18859                           fsr2l	equ	0xFD9
 18860                           status	equ	0xFD8
 18861                           
 18862 ;; *************** function _USBCtrlTrfInHandler *****************
 18863 ;; Defined at:
 18864 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 18865 ;; Parameters:    Size  Location     Type
 18866 ;;		None
 18867 ;; Auto vars:     Size  Location     Type
 18868 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18869 ;; Return value:  Size  Location     Type
 18870 ;;		None               void
 18871 ;; Registers used:
 18872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18873 ;; Tracked objects:
 18874 ;;		On entry : 0/0
 18875 ;;		On exit  : 0/0
 18876 ;;		Unchanged: 0/0
 18877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18882 ;;Total ram usage:        1 bytes
 18883 ;; Hardware stack levels used:    1
 18884 ;; Hardware stack levels required when called:    1
 18885 ;; This function calls:
 18886 ;;		_USBCtrlTrfTxService
 18887 ;; This function is called by:
 18888 ;;		_USBCtrlEPService
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           	psect	text94
 18893  0129C0                     __ptext94:
 18894                           	opt stack 0
 18895  0129C0                     _USBCtrlTrfInHandler:
 18896                           	opt stack 16
 18897                           
 18898                           ;usb_device.c: 2597: uint8_t lastDTS;
 18899                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 18900                           
 18901                           ;incstack = 0
 18902  0129C0  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18903  0129C4  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18904  0129C8  0E00               	movlw	0
 18905  0129CA  BCDF               	btfsc	indf2,6,c
 18906  0129CC  0E01               	movlw	1
 18907  0129CE  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18908                           
 18909                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18910  0129D0  0E04               	movlw	4
 18911  0129D2  0100               	movlb	0	; () banked
 18912  0129D4  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 18916  0129D6  0E08               	movlw	8
 18917  0129D8  1812               	xorwf	_USBDeviceState,w,c	;volatile
 18918  0129DA  A4D8               	btfss	status,2,c
 18919  0129DC  D00D               	goto	i2l6133
 18920                           
 18921                           ; BSR set to: 0
 18922                           ;usb_device.c: 2608: {
 18923                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 18924  0129DE  010D               	movlb	13	; () banked
 18925  0129E0  5132               	movf	50,w,b	;volatile
 18926  0129E2  0B7F               	andlw	127
 18927  0129E4  010F               	movlb	15	; () banked
 18928  0129E6  6F38               	movwf	56,b	;volatile
 18929                           
 18930                           ; BSR set to: 15
 18931                           ;usb_device.c: 2610: if(UADDR != 0u)
 18932  0129E8  010F               	movlb	15	; () banked
 18933  0129EA  5138               	movf	56,w,b	;volatile
 18934  0129EC  B4D8               	btfsc	status,2,c
 18935  0129EE  D002               	goto	i2l6131
 18936                           
 18937                           ; BSR set to: 15
 18938                           ;usb_device.c: 2611: {
 18939                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 18940  0129F0  0E10               	movlw	16
 18941  0129F2  D001               	goto	L14
 18942  0129F4                     i2l6131:
 18943                           
 18944                           ; BSR set to: 15
 18945                           ;usb_device.c: 2614: else
 18946                           ;usb_device.c: 2615: {
 18947                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 18948  0129F4  0E04               	movlw	4
 18949  0129F6                     L14:
 18950  0129F6  6E12               	movwf	_USBDeviceState,c	;volatile
 18951  0129F8                     i2l6133:
 18952                           
 18953                           ;usb_device.c: 2617: }
 18954                           ;usb_device.c: 2618: }
 18955                           ;usb_device.c: 2621: if(controlTransferState == 1)
 18956  0129F8  0417               	decf	_controlTransferState,w,c	;volatile
 18957  0129FA  A4D8               	btfss	status,2,c
 18958  0129FC  D03B               	goto	i2l345
 18959                           
 18960                           ;usb_device.c: 2622: {
 18961                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 18962  0129FE  0100               	movlb	0	; () banked
 18963  012A00  EE20 F002          	lfsr	2,2
 18964  012A04  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18965  012A06  26D9               	addwf	fsr2l,f,c
 18966  012A08  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18967  012A0A  22DA               	addwfc	fsr2h,f,c
 18968  012A0C  0E38               	movlw	56
 18969  012A0E  6EDE               	movwf	postinc2,c
 18970  012A10  0E0D               	movlw	13
 18971  012A12  6EDD               	movwf	postdec2,c
 18972                           
 18973                           ; BSR set to: 0
 18974                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 18975  012A14  EC32  F091         	call	_USBCtrlTrfTxService	;wreg free
 18976                           
 18977                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 18978  012A18  0E02               	movlw	2
 18979  012A1A  181A               	xorwf	_shortPacketStatus,w,c	;volatile
 18980  012A1C  A4D8               	btfss	status,2,c
 18981  012A1E  D00D               	goto	i2l6145
 18982                           
 18983                           ;usb_device.c: 2631: {
 18984                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 18985  012A20  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18986  012A24  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18987  012A28  0E04               	movlw	4
 18988  012A2A  6EDF               	movwf	indf2,c
 18989                           
 18990                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18991  012A2C  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18992  012A30  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18993  012A34  0E00               	movlw	0
 18994  012A36  8EDB               	bsf	plusw2,7,c
 18995                           
 18996                           ;usb_device.c: 2636: }
 18997  012A38  0012               	return	
 18998  012A3A                     i2l6145:
 18999                           
 19000                           ;usb_device.c: 2637: else
 19001                           ;usb_device.c: 2638: {
 19002                           ;usb_device.c: 2639: if(lastDTS == 0)
 19003  012A3A  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19004  012A3C  A4D8               	btfss	status,2,c
 19005  012A3E  D00D               	goto	i2l6151
 19006                           
 19007                           ;usb_device.c: 2640: {
 19008                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19009  012A40  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19010  012A44  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19011  012A48  0E48               	movlw	72
 19012  012A4A  6EDF               	movwf	indf2,c
 19013                           
 19014                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19015  012A4C  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19016  012A50  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19017  012A54  0E00               	movlw	0
 19018  012A56  8EDB               	bsf	plusw2,7,c
 19019                           
 19020                           ;usb_device.c: 2643: }
 19021  012A58  0012               	return	
 19022  012A5A                     i2l6151:
 19023                           
 19024                           ;usb_device.c: 2644: else
 19025                           ;usb_device.c: 2645: {
 19026                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19027  012A5A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19028  012A5E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19029  012A62  0E08               	movlw	8
 19030  012A64  6EDF               	movwf	indf2,c
 19031                           
 19032                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19033  012A66  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 19034  012A6A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19035  012A6E  0E00               	movlw	0
 19036  012A70  8EDB               	bsf	plusw2,7,c
 19037                           
 19038                           ;usb_device.c: 2648: }
 19039                           ;usb_device.c: 2649: }
 19040                           ;usb_device.c: 2650: }
 19041  012A72  0012               	return	
 19042  012A74                     i2l345:
 19043                           
 19044                           ;usb_device.c: 2651: else
 19045                           ;usb_device.c: 2652: {
 19046                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 19047  012A74  0100               	movlb	0	; () banked
 19048  012A76  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 19049  012A78  D002               	goto	i2l6157
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;usb_device.c: 2661: }
 19053                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 19054                           
 19055                           ; BSR set to: 0
 19056                           ;usb_device.c: 2659: {
 19057                           ;usb_device.c: 2660: outPipes[0].pFunc();
 19058  012A7A  0100               	movlb	0	; () banked
 19059  012A7C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 19060  012A7E                     i2l6157:
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;usb_device.c: 2663: }
 19064                           ;usb_device.c: 2665: controlTransferState = 0;
 19065  012A7E  0E00               	movlw	0
 19066  012A80  6E17               	movwf	_controlTransferState,c	;volatile
 19067  012A82  0012               	return	
 19068  012A84                     __end_of_USBCtrlTrfInHandler:
 19069                           	opt stack 0
 19070                           pclatu	equ	0xFFB
 19071                           pclath	equ	0xFFA
 19072                           tblptru	equ	0xFF8
 19073                           tblptrh	equ	0xFF7
 19074                           tblptrl	equ	0xFF6
 19075                           tablat	equ	0xFF5
 19076                           prodh	equ	0xFF4
 19077                           prodl	equ	0xFF3
 19078                           intcon	equ	0xFF2
 19079                           intcon2	equ	0xFF1
 19080                           indf0	equ	0xFEF
 19081                           postinc0	equ	0xFEE
 19082                           fsr0h	equ	0xFEA
 19083                           fsr0l	equ	0xFE9
 19084                           wreg	equ	0xFE8
 19085                           indf1	equ	0xFE7
 19086                           postinc1	equ	0xFE6
 19087                           postdec1	equ	0xFE5
 19088                           fsr1h	equ	0xFE2
 19089                           fsr1l	equ	0xFE1
 19090                           indf2	equ	0xFDF
 19091                           postinc2	equ	0xFDE
 19092                           postdec2	equ	0xFDD
 19093                           plusw2	equ	0xFDB
 19094                           fsr2h	equ	0xFDA
 19095                           fsr2l	equ	0xFD9
 19096                           status	equ	0xFD8
 19097                           
 19098 ;; *************** function _USBCtrlTrfTxService *****************
 19099 ;; Defined at:
 19100 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;		None
 19103 ;; Auto vars:     Size  Location     Type
 19104 ;;  byteToSend      1    0[COMRAM] unsigned char 
 19105 ;; Return value:  Size  Location     Type
 19106 ;;		None               void
 19107 ;; Registers used:
 19108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19109 ;; Tracked objects:
 19110 ;;		On entry : 0/0
 19111 ;;		On exit  : 0/0
 19112 ;;		Unchanged: 0/0
 19113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;Total ram usage:        1 bytes
 19119 ;; Hardware stack levels used:    1
 19120 ;; This function calls:
 19121 ;;		Nothing
 19122 ;; This function is called by:
 19123 ;;		_USBCtrlEPAllowDataStage
 19124 ;;		_USBCtrlTrfInHandler
 19125 ;; This function uses a non-reentrant model
 19126 ;;
 19127                           
 19128                           	psect	text95
 19129  012264                     __ptext95:
 19130                           	opt stack 0
 19131  012264                     _USBCtrlTrfTxService:
 19132                           	opt stack 14
 19133                           
 19134                           ;usb_device.c: 1773: uint8_t byteToSend;
 19135                           ;usb_device.c: 1777: byteToSend = 8;
 19136                           
 19137                           ;incstack = 0
 19138  012264  0E08               	movlw	8
 19139  012266  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 19140                           
 19141                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 19142  012268  0100               	movlb	0	; () banked
 19143  01226A  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 19144  01226C  E111               	bnz	i2l5231
 19145  01226E  0E08               	movlw	8
 19146  012270  0100               	movlb	0	; () banked
 19147  012272  5DD6               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 19148  012274  B0D8               	btfsc	status,0,c
 19149  012276  D00C               	goto	i2l5231
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;usb_device.c: 1779: {
 19153                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 19154  012278  C0D6  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 19155                           
 19156                           ; BSR set to: 0
 19157                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 19158  01227C  501A               	movf	_shortPacketStatus,w,c	;volatile
 19159  01227E  A4D8               	btfss	status,2,c
 19160  012280  D002               	goto	i2l5227
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;usb_device.c: 1788: {
 19164                           ;usb_device.c: 1789: shortPacketStatus = 1;
 19165  012282  0E01               	movlw	1
 19166  012284  D004               	goto	L15
 19167  012286                     i2l5227:
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 19171  012286  041A               	decf	_shortPacketStatus,w,c	;volatile
 19172  012288  A4D8               	btfss	status,2,c
 19173  01228A  D002               	goto	i2l5231
 19174                           
 19175                           ; BSR set to: 0
 19176                           ;usb_device.c: 1792: {
 19177                           ;usb_device.c: 1793: shortPacketStatus = 2;
 19178  01228C  0E02               	movlw	2
 19179  01228E                     L15:
 19180  01228E  6E1A               	movwf	_shortPacketStatus,c	;volatile
 19181  012290                     i2l5231:
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;usb_device.c: 1794: }
 19185                           ;usb_device.c: 1795: }
 19186                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 19187  012290  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19188  012292  0100               	movlb	0	; () banked
 19189  012294  5FD6               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 19190  012296  0E00               	movlw	0
 19191  012298  5BD7               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 19192                           
 19193                           ; BSR set to: 0
 19194                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 19195  01229A  0100               	movlb	0	; () banked
 19196  01229C  EE20 F001          	lfsr	2,1
 19197  0122A0  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 19198  0122A2  26D9               	addwf	fsr2l,f,c
 19199  0122A4  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 19200  0122A6  22DA               	addwfc	fsr2h,f,c
 19201  0122A8  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 19202                           
 19203                           ; BSR set to: 0
 19204                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 19205  0122AC  0E38               	movlw	56
 19206  0122AE  6E07               	movwf	_pDst,c
 19207  0122B0  0E0D               	movlw	13
 19208  0122B2  6E08               	movwf	_pDst+1,c
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 19212  0122B4  0100               	movlb	0	; () banked
 19213  0122B6  A1D5               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 19214  0122B8  D01D               	goto	i2l5249
 19215  0122BA  D03C               	goto	i2l5259
 19216  0122BC                     i2l5241:
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;usb_device.c: 1812: {
 19220                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 19221  0122BC  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 19222  0122C0  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19223  0122C4  0E00               	movlw	low (__mediumconst shr (0+16))
 19224  0122C6  6EF8               	movwf	tblptru,c
 19225  0122C8  C007  FFD9         	movff	_pDst,fsr2l
 19226  0122CC  C008  FFDA         	movff	_pDst+1,fsr2h
 19227  0122D0  0E0E               	movlw	(high __ramtop+-1)
 19228  0122D2  64F7               	cpfsgt	tblptrh,c
 19229  0122D4  D003               	bra	i2u416_47
 19230  0122D6  0008               	tblrd		*
 19231  0122D8  50F5               	movf	tablat,w,c
 19232  0122DA  D005               	bra	i2u416_40
 19233  0122DC                     i2u416_47:
 19234  0122DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 19235  0122E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 19236  0122E4  50EF               	movf	indf0,w,c
 19237  0122E6                     i2u416_40:
 19238  0122E6  6EDF               	movwf	indf2,c
 19239  0122E8  0100               	movlb	0	; () banked
 19240  0122EA  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 19241  0122EC  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 19242                           
 19243                           ; BSR set to: 0
 19244  0122EE  4A07               	infsnz	_pDst,f,c
 19245  0122F0  2A08               	incf	_pDst+1,f,c
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;usb_device.c: 1814: byteToSend--;
 19249  0122F2  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19250  0122F4                     i2l5249:
 19251                           
 19252                           ; BSR set to: 0
 19253  0122F4  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19254  0122F6  B4D8               	btfsc	status,2,c
 19255  0122F8  0012               	return	
 19256  0122FA  D7E0               	goto	i2l5241
 19257  0122FC                     i2l5251:
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;usb_device.c: 1820: {
 19261                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 19262  0122FC  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 19263  012300  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19264  012304  0E00               	movlw	low (__mediumconst shr (0+16))
 19265  012306  6EF8               	movwf	tblptru,c
 19266  012308  C007  FFD9         	movff	_pDst,fsr2l
 19267  01230C  C008  FFDA         	movff	_pDst+1,fsr2h
 19268  012310  0E0E               	movlw	(high __ramtop+-1)
 19269  012312  64F7               	cpfsgt	tblptrh,c
 19270  012314  D003               	bra	i2u418_47
 19271  012316  0008               	tblrd		*
 19272  012318  50F5               	movf	tablat,w,c
 19273  01231A  D005               	bra	i2u418_40
 19274  01231C                     i2u418_47:
 19275  01231C  CFF6 FFE9          	movff	tblptrl,fsr0l
 19276  012320  CFF7 FFEA          	movff	tblptrh,fsr0h
 19277  012324  50EF               	movf	indf0,w,c
 19278  012326                     i2u418_40:
 19279  012326  6EDF               	movwf	indf2,c
 19280  012328  0100               	movlb	0	; () banked
 19281  01232A  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 19282  01232C  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 19283                           
 19284                           ; BSR set to: 0
 19285  01232E  4A07               	infsnz	_pDst,f,c
 19286  012330  2A08               	incf	_pDst+1,f,c
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;usb_device.c: 1822: byteToSend--;
 19290  012332  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19291  012334                     i2l5259:
 19292                           
 19293                           ; BSR set to: 0
 19294  012334  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19295  012336  B4D8               	btfsc	status,2,c
 19296  012338  0012               	return	
 19297  01233A  D7E0               	goto	i2l5251
 19298  01233C                     __end_of_USBCtrlTrfTxService:
 19299                           	opt stack 0
 19300                           pclatu	equ	0xFFB
 19301                           pclath	equ	0xFFA
 19302                           tblptru	equ	0xFF8
 19303                           tblptrh	equ	0xFF7
 19304                           tblptrl	equ	0xFF6
 19305                           tablat	equ	0xFF5
 19306                           prodh	equ	0xFF4
 19307                           prodl	equ	0xFF3
 19308                           intcon	equ	0xFF2
 19309                           intcon2	equ	0xFF1
 19310                           indf0	equ	0xFEF
 19311                           postinc0	equ	0xFEE
 19312                           fsr0h	equ	0xFEA
 19313                           fsr0l	equ	0xFE9
 19314                           wreg	equ	0xFE8
 19315                           indf1	equ	0xFE7
 19316                           postinc1	equ	0xFE6
 19317                           postdec1	equ	0xFE5
 19318                           fsr1h	equ	0xFE2
 19319                           fsr1l	equ	0xFE1
 19320                           indf2	equ	0xFDF
 19321                           postinc2	equ	0xFDE
 19322                           postdec2	equ	0xFDD
 19323                           plusw2	equ	0xFDB
 19324                           fsr2h	equ	0xFDA
 19325                           fsr2l	equ	0xFD9
 19326                           status	equ	0xFD8
 19327                           
 19328 ;; *************** function _UART_ISR *****************
 19329 ;; Defined at:
 19330 ;;		line 29 in file "../My_library/My_UART.c"
 19331 ;; Parameters:    Size  Location     Type
 19332 ;;		None
 19333 ;; Auto vars:     Size  Location     Type
 19334 ;;  ascii           1   15[COMRAM] unsigned char 
 19335 ;; Return value:  Size  Location     Type
 19336 ;;		None               void
 19337 ;; Registers used:
 19338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19339 ;; Tracked objects:
 19340 ;;		On entry : 0/0
 19341 ;;		On exit  : 0/0
 19342 ;;		Unchanged: 0/0
 19343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19348 ;;Total ram usage:        1 bytes
 19349 ;; Hardware stack levels used:    1
 19350 ;; Hardware stack levels required when called:    2
 19351 ;; This function calls:
 19352 ;;		i2_ringbuf_num
 19353 ;;		i2_ringbuf_pop
 19354 ;;		i2_ringbuf_put
 19355 ;; This function is called by:
 19356 ;;		_ISR
 19357 ;; This function uses a non-reentrant model
 19358 ;;
 19359                           
 19360                           	psect	text96
 19361  013B46                     __ptext96:
 19362                           	opt stack 0
 19363  013B46                     _UART_ISR:
 19364                           	opt stack 18
 19365                           
 19366                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 19367                           
 19368                           ; BSR set to: 0
 19369                           ;incstack = 0
 19370  013B46  B89D               	btfsc	3997,4,c	;volatile
 19371  013B48  A89E               	btfss	3998,4,c	;volatile
 19372  013B4A  D013               	goto	i2l1156
 19373                           
 19374                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 19375  013B4C  0E6D               	movlw	low _uart_tx
 19376  013B4E  6E2D               	movwf	i2ringbuf_num@rb,c
 19377  013B50  0E01               	movlw	high _uart_tx
 19378  013B52  6E2E               	movwf	i2ringbuf_num@rb+1,c
 19379  013B54  EC5D  F096         	call	i2_ringbuf_num	;wreg free
 19380  013B58  502D               	movf	?i2_ringbuf_num,w,c
 19381  013B5A  102E               	iorwf	?i2_ringbuf_num+1,w,c
 19382  013B5C  B4D8               	btfsc	status,2,c
 19383  013B5E  D008               	goto	i2l1157
 19384                           
 19385                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 19386  013B60  0E6D               	movlw	low _uart_tx
 19387  013B62  6E35               	movwf	i2ringbuf_pop@rb,c
 19388  013B64  0E01               	movlw	high _uart_tx
 19389  013B66  6E36               	movwf	i2ringbuf_pop@rb+1,c
 19390  013B68  ECD0  F097         	call	i2_ringbuf_pop	;wreg free
 19391  013B6C  6EAE               	movwf	4014,c	;volatile
 19392                           
 19393                           ;My_UART.c: 33: } else {
 19394  013B6E  D001               	goto	i2l1156
 19395  013B70                     i2l1157:
 19396                           
 19397                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 19398  013B70  989D               	bcf	3997,4,c	;volatile
 19399  013B72                     i2l1156:
 19400                           
 19401                           ;My_UART.c: 35: }
 19402                           ;My_UART.c: 36: }
 19403                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 19404  013B72  AA9D               	btfss	3997,5,c	;volatile
 19405  013B74  0012               	return	
 19406  013B76  AA9E               	btfss	3998,5,c	;volatile
 19407  013B78  0012               	return	
 19408                           
 19409                           ;My_UART.c: 38: char ascii = RCREG1;
 19410  013B7A  CFAF F03C          	movff	4015,UART_ISR@ascii	;volatile
 19411                           
 19412                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 19413  013B7E  0E65               	movlw	low _uart_rx
 19414  013B80  6E35               	movwf	i2ringbuf_put@rb,c
 19415  013B82  0E01               	movlw	high _uart_rx
 19416  013B84  6E36               	movwf	i2ringbuf_put@rb+1,c
 19417  013B86  C03C  F037         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 19418  013B8A  EC75  F097         	call	i2_ringbuf_put	;wreg free
 19419  013B8E  0012               	return	
 19420  013B90                     __end_of_UART_ISR:
 19421                           	opt stack 0
 19422                           pclatu	equ	0xFFB
 19423                           pclath	equ	0xFFA
 19424                           tblptru	equ	0xFF8
 19425                           tblptrh	equ	0xFF7
 19426                           tblptrl	equ	0xFF6
 19427                           tablat	equ	0xFF5
 19428                           prodh	equ	0xFF4
 19429                           prodl	equ	0xFF3
 19430                           intcon	equ	0xFF2
 19431                           intcon2	equ	0xFF1
 19432                           indf0	equ	0xFEF
 19433                           postinc0	equ	0xFEE
 19434                           fsr0h	equ	0xFEA
 19435                           fsr0l	equ	0xFE9
 19436                           wreg	equ	0xFE8
 19437                           indf1	equ	0xFE7
 19438                           postinc1	equ	0xFE6
 19439                           postdec1	equ	0xFE5
 19440                           fsr1h	equ	0xFE2
 19441                           fsr1l	equ	0xFE1
 19442                           indf2	equ	0xFDF
 19443                           postinc2	equ	0xFDE
 19444                           postdec2	equ	0xFDD
 19445                           plusw2	equ	0xFDB
 19446                           fsr2h	equ	0xFDA
 19447                           fsr2l	equ	0xFD9
 19448                           status	equ	0xFD8
 19449                           
 19450 ;; *************** function i2_ringbuf_put *****************
 19451 ;; Defined at:
 19452 ;;		line 20 in file "../My_library/My_ringbuf.c"
 19453 ;; Parameters:    Size  Location     Type
 19454 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19455 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 19456 ;;  asciicode       1   10[COMRAM] unsigned char 
 19457 ;; Auto vars:     Size  Location     Type
 19458 ;;		None
 19459 ;; Return value:  Size  Location     Type
 19460 ;;		None               void
 19461 ;; Registers used:
 19462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19463 ;; Tracked objects:
 19464 ;;		On entry : 0/0
 19465 ;;		On exit  : 0/0
 19466 ;;		Unchanged: 0/0
 19467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19468 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19471 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19472 ;;Total ram usage:        7 bytes
 19473 ;; Hardware stack levels used:    1
 19474 ;; Hardware stack levels required when called:    1
 19475 ;; This function calls:
 19476 ;;		i2_ringbuf_num
 19477 ;; This function is called by:
 19478 ;;		_UART_ISR
 19479 ;; This function uses a non-reentrant model
 19480 ;;
 19481                           
 19482                           	psect	text97
 19483  012EEA                     __ptext97:
 19484                           	opt stack 0
 19485  012EEA                     i2_ringbuf_put:
 19486                           	opt stack 18
 19487                           
 19488                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 19489                           
 19490                           ;incstack = 0
 19491  012EEA  C035  F02D         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 19492  012EEE  C036  F02E         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 19493  012EF2  EC5D  F096         	call	i2_ringbuf_num	;wreg free
 19494  012EF6  EE20 F002          	lfsr	2,2
 19495  012EFA  5035               	movf	i2ringbuf_put@rb,w,c
 19496  012EFC  26D9               	addwf	fsr2l,f,c
 19497  012EFE  5036               	movf	i2ringbuf_put@rb+1,w,c
 19498  012F00  22DA               	addwfc	fsr2h,f,c
 19499  012F02  50DE               	movf	postinc2,w,c
 19500  012F04  5C2D               	subwf	?i2_ringbuf_num,w,c
 19501  012F06  50DE               	movf	postinc2,w,c
 19502  012F08  582E               	subwfb	?i2_ringbuf_num+1,w,c
 19503  012F0A  B0D8               	btfsc	status,0,c
 19504  012F0C  0012               	return	
 19505                           
 19506                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 19507  012F0E  EE20 F004          	lfsr	2,4
 19508  012F12  5035               	movf	i2ringbuf_put@rb,w,c
 19509  012F14  26D9               	addwf	fsr2l,f,c
 19510  012F16  5036               	movf	i2ringbuf_put@rb+1,w,c
 19511  012F18  22DA               	addwfc	fsr2h,f,c
 19512  012F1A  CFDE F038          	movff	postinc2,??i2_ringbuf_put
 19513  012F1E  CFDD F039          	movff	postdec2,??i2_ringbuf_put+1
 19514  012F22  C035  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 19515  012F26  C036  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 19516  012F2A  CFDE F03A          	movff	postinc2,??i2_ringbuf_put+2
 19517  012F2E  CFDD F03B          	movff	postdec2,??i2_ringbuf_put+3
 19518  012F32  5038               	movf	??i2_ringbuf_put,w,c
 19519  012F34  243A               	addwf	??i2_ringbuf_put+2,w,c
 19520  012F36  6ED9               	movwf	fsr2l,c
 19521  012F38  5039               	movf	??i2_ringbuf_put+1,w,c
 19522  012F3A  203B               	addwfc	??i2_ringbuf_put+3,w,c
 19523  012F3C  6EDA               	movwf	fsr2h,c
 19524  012F3E  C037  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 19525                           
 19526                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 19527  012F42  EE20 F002          	lfsr	2,2
 19528  012F46  5035               	movf	i2ringbuf_put@rb,w,c
 19529  012F48  26D9               	addwf	fsr2l,f,c
 19530  012F4A  5036               	movf	i2ringbuf_put@rb+1,w,c
 19531  012F4C  22DA               	addwfc	fsr2h,f,c
 19532  012F4E  EE10 F004          	lfsr	1,4
 19533  012F52  5035               	movf	i2ringbuf_put@rb,w,c
 19534  012F54  26E1               	addwf	fsr1l,f,c
 19535  012F56  5036               	movf	i2ringbuf_put@rb+1,w,c
 19536  012F58  22E2               	addwfc	fsr1h,f,c
 19537  012F5A  CFE6 F03A          	movff	postinc1,??i2_ringbuf_put+2
 19538  012F5E  CFE5 F03B          	movff	postdec1,??i2_ringbuf_put+3
 19539  012F62  0E01               	movlw	1
 19540  012F64  263A               	addwf	??i2_ringbuf_put+2,f,c
 19541  012F66  0E00               	movlw	0
 19542  012F68  223B               	addwfc	??i2_ringbuf_put+3,f,c
 19543  012F6A  50DE               	movf	postinc2,w,c
 19544  012F6C  5C3A               	subwf	??i2_ringbuf_put+2,w,c
 19545  012F6E  50DE               	movf	postinc2,w,c
 19546  012F70  583B               	subwfb	??i2_ringbuf_put+3,w,c
 19547  012F72  B0D8               	btfsc	status,0,c
 19548  012F74  D00A               	goto	i2l8801
 19549  012F76  EE20 F004          	lfsr	2,4
 19550  012F7A  5035               	movf	i2ringbuf_put@rb,w,c
 19551  012F7C  26D9               	addwf	fsr2l,f,c
 19552  012F7E  5036               	movf	i2ringbuf_put@rb+1,w,c
 19553  012F80  22DA               	addwfc	fsr2h,f,c
 19554  012F82  2ADE               	incf	postinc2,f,c
 19555  012F84  0E00               	movlw	0
 19556  012F86  22DD               	addwfc	postdec2,f,c
 19557  012F88  0012               	return	
 19558  012F8A                     i2l8801:
 19559                           
 19560                           ;My_ringbuf.c: 24: else rb->head = 0;
 19561  012F8A  EE20 F004          	lfsr	2,4
 19562  012F8E  5035               	movf	i2ringbuf_put@rb,w,c
 19563  012F90  26D9               	addwf	fsr2l,f,c
 19564  012F92  5036               	movf	i2ringbuf_put@rb+1,w,c
 19565  012F94  22DA               	addwfc	fsr2h,f,c
 19566  012F96  0E00               	movlw	0
 19567  012F98  6EDE               	movwf	postinc2,c
 19568  012F9A  0E00               	movlw	0
 19569  012F9C  6EDD               	movwf	postdec2,c
 19570  012F9E  0012               	return	
 19571  012FA0                     __end_ofi2_ringbuf_put:
 19572                           	opt stack 0
 19573                           pclatu	equ	0xFFB
 19574                           pclath	equ	0xFFA
 19575                           tblptru	equ	0xFF8
 19576                           tblptrh	equ	0xFF7
 19577                           tblptrl	equ	0xFF6
 19578                           tablat	equ	0xFF5
 19579                           prodh	equ	0xFF4
 19580                           prodl	equ	0xFF3
 19581                           intcon	equ	0xFF2
 19582                           intcon2	equ	0xFF1
 19583                           indf0	equ	0xFEF
 19584                           postinc0	equ	0xFEE
 19585                           fsr0h	equ	0xFEA
 19586                           fsr0l	equ	0xFE9
 19587                           wreg	equ	0xFE8
 19588                           indf1	equ	0xFE7
 19589                           postinc1	equ	0xFE6
 19590                           postdec1	equ	0xFE5
 19591                           fsr1h	equ	0xFE2
 19592                           fsr1l	equ	0xFE1
 19593                           indf2	equ	0xFDF
 19594                           postinc2	equ	0xFDE
 19595                           postdec2	equ	0xFDD
 19596                           plusw2	equ	0xFDB
 19597                           fsr2h	equ	0xFDA
 19598                           fsr2l	equ	0xFD9
 19599                           status	equ	0xFD8
 19600                           
 19601 ;; *************** function i2_ringbuf_pop *****************
 19602 ;; Defined at:
 19603 ;;		line 45 in file "../My_library/My_ringbuf.c"
 19604 ;; Parameters:    Size  Location     Type
 19605 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19606 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 19607 ;; Auto vars:     Size  Location     Type
 19608 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 19609 ;; Return value:  Size  Location     Type
 19610 ;;                  1    wreg      unsigned char 
 19611 ;; Registers used:
 19612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19613 ;; Tracked objects:
 19614 ;;		On entry : 0/0
 19615 ;;		On exit  : 0/0
 19616 ;;		Unchanged: 0/0
 19617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19620 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19621 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19622 ;;Total ram usage:        7 bytes
 19623 ;; Hardware stack levels used:    1
 19624 ;; Hardware stack levels required when called:    1
 19625 ;; This function calls:
 19626 ;;		i2_ringbuf_num
 19627 ;; This function is called by:
 19628 ;;		_UART_ISR
 19629 ;; This function uses a non-reentrant model
 19630 ;;
 19631                           
 19632                           	psect	text98
 19633  012FA0                     __ptext98:
 19634                           	opt stack 0
 19635  012FA0                     i2_ringbuf_pop:
 19636                           	opt stack 18
 19637                           
 19638                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 19639                           
 19640                           ;incstack = 0
 19641  012FA0  C035  F02D         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 19642  012FA4  C036  F02E         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 19643  012FA8  EC5D  F096         	call	i2_ringbuf_num	;wreg free
 19644  012FAC  502D               	movf	?i2_ringbuf_num,w,c
 19645  012FAE  102E               	iorwf	?i2_ringbuf_num+1,w,c
 19646  012FB0  B4D8               	btfsc	status,2,c
 19647  012FB2  D04A               	goto	i2l8819
 19648                           
 19649                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 19650  012FB4  EE20 F006          	lfsr	2,6
 19651  012FB8  5035               	movf	i2ringbuf_pop@rb,w,c
 19652  012FBA  26D9               	addwf	fsr2l,f,c
 19653  012FBC  5036               	movf	i2ringbuf_pop@rb+1,w,c
 19654  012FBE  22DA               	addwfc	fsr2h,f,c
 19655  012FC0  CFDE F037          	movff	postinc2,??i2_ringbuf_pop
 19656  012FC4  CFDD F038          	movff	postdec2,??i2_ringbuf_pop+1
 19657  012FC8  C035  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 19658  012FCC  C036  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 19659  012FD0  CFDE F039          	movff	postinc2,??i2_ringbuf_pop+2
 19660  012FD4  CFDD F03A          	movff	postdec2,??i2_ringbuf_pop+3
 19661  012FD8  5037               	movf	??i2_ringbuf_pop,w,c
 19662  012FDA  2439               	addwf	??i2_ringbuf_pop+2,w,c
 19663  012FDC  6ED9               	movwf	fsr2l,c
 19664  012FDE  5038               	movf	??i2_ringbuf_pop+1,w,c
 19665  012FE0  203A               	addwfc	??i2_ringbuf_pop+3,w,c
 19666  012FE2  6EDA               	movwf	fsr2h,c
 19667  012FE4  50DF               	movf	indf2,w,c
 19668  012FE6  6E3B               	movwf	i2ringbuf_pop@ret,c
 19669                           
 19670                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 19671  012FE8  EE20 F002          	lfsr	2,2
 19672  012FEC  5035               	movf	i2ringbuf_pop@rb,w,c
 19673  012FEE  26D9               	addwf	fsr2l,f,c
 19674  012FF0  5036               	movf	i2ringbuf_pop@rb+1,w,c
 19675  012FF2  22DA               	addwfc	fsr2h,f,c
 19676  012FF4  EE10 F006          	lfsr	1,6
 19677  012FF8  5035               	movf	i2ringbuf_pop@rb,w,c
 19678  012FFA  26E1               	addwf	fsr1l,f,c
 19679  012FFC  5036               	movf	i2ringbuf_pop@rb+1,w,c
 19680  012FFE  22E2               	addwfc	fsr1h,f,c
 19681  013000  CFE6 F039          	movff	postinc1,??i2_ringbuf_pop+2
 19682  013004  CFE5 F03A          	movff	postdec1,??i2_ringbuf_pop+3
 19683  013008  0E01               	movlw	1
 19684  01300A  2639               	addwf	??i2_ringbuf_pop+2,f,c
 19685  01300C  0E00               	movlw	0
 19686  01300E  223A               	addwfc	??i2_ringbuf_pop+3,f,c
 19687  013010  50DE               	movf	postinc2,w,c
 19688  013012  5C39               	subwf	??i2_ringbuf_pop+2,w,c
 19689  013014  50DE               	movf	postinc2,w,c
 19690  013016  583A               	subwfb	??i2_ringbuf_pop+3,w,c
 19691  013018  B0D8               	btfsc	status,0,c
 19692  01301A  D00A               	goto	i2l8811
 19693                           
 19694                           ;My_ringbuf.c: 49: rb->tail++;
 19695  01301C  EE20 F006          	lfsr	2,6
 19696  013020  5035               	movf	i2ringbuf_pop@rb,w,c
 19697  013022  26D9               	addwf	fsr2l,f,c
 19698  013024  5036               	movf	i2ringbuf_pop@rb+1,w,c
 19699  013026  22DA               	addwfc	fsr2h,f,c
 19700  013028  2ADE               	incf	postinc2,f,c
 19701  01302A  0E00               	movlw	0
 19702  01302C  22DD               	addwfc	postdec2,f,c
 19703                           
 19704                           ;My_ringbuf.c: 50: } else {
 19705  01302E  D00A               	goto	i2l8813
 19706  013030                     i2l8811:
 19707                           
 19708                           ;My_ringbuf.c: 51: rb->tail = 0;
 19709  013030  EE20 F006          	lfsr	2,6
 19710  013034  5035               	movf	i2ringbuf_pop@rb,w,c
 19711  013036  26D9               	addwf	fsr2l,f,c
 19712  013038  5036               	movf	i2ringbuf_pop@rb+1,w,c
 19713  01303A  22DA               	addwfc	fsr2h,f,c
 19714  01303C  0E00               	movlw	0
 19715  01303E  6EDE               	movwf	postinc2,c
 19716  013040  0E00               	movlw	0
 19717  013042  6EDD               	movwf	postdec2,c
 19718  013044                     i2l8813:
 19719                           
 19720                           ;My_ringbuf.c: 52: }
 19721                           ;My_ringbuf.c: 53: return ret;
 19722  013044  503B               	movf	i2ringbuf_pop@ret,w,c
 19723                           
 19724                           ;My_ringbuf.c: 54: } else {
 19725  013046  0012               	return	
 19726  013048                     i2l8819:
 19727                           
 19728                           ;My_ringbuf.c: 55: return 0;
 19729  013048  0E00               	movlw	0
 19730  01304A  0012               	return	
 19731  01304C                     __end_ofi2_ringbuf_pop:
 19732                           	opt stack 0
 19733                           pclatu	equ	0xFFB
 19734                           pclath	equ	0xFFA
 19735                           tblptru	equ	0xFF8
 19736                           tblptrh	equ	0xFF7
 19737                           tblptrl	equ	0xFF6
 19738                           tablat	equ	0xFF5
 19739                           prodh	equ	0xFF4
 19740                           prodl	equ	0xFF3
 19741                           intcon	equ	0xFF2
 19742                           intcon2	equ	0xFF1
 19743                           indf0	equ	0xFEF
 19744                           postinc0	equ	0xFEE
 19745                           fsr0h	equ	0xFEA
 19746                           fsr0l	equ	0xFE9
 19747                           wreg	equ	0xFE8
 19748                           indf1	equ	0xFE7
 19749                           postinc1	equ	0xFE6
 19750                           postdec1	equ	0xFE5
 19751                           fsr1h	equ	0xFE2
 19752                           fsr1l	equ	0xFE1
 19753                           indf2	equ	0xFDF
 19754                           postinc2	equ	0xFDE
 19755                           postdec2	equ	0xFDD
 19756                           plusw2	equ	0xFDB
 19757                           fsr2h	equ	0xFDA
 19758                           fsr2l	equ	0xFD9
 19759                           status	equ	0xFD8
 19760                           
 19761 ;; *************** function i2_ringbuf_num *****************
 19762 ;; Defined at:
 19763 ;;		line 12 in file "../My_library/My_ringbuf.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 19766 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 19767 ;;		 -> terminal_task@command(8), 
 19768 ;; Auto vars:     Size  Location     Type
 19769 ;;		None
 19770 ;; Return value:  Size  Location     Type
 19771 ;;                  2    0[COMRAM] unsigned int 
 19772 ;; Registers used:
 19773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19774 ;; Tracked objects:
 19775 ;;		On entry : 0/0
 19776 ;;		On exit  : 0/0
 19777 ;;		Unchanged: 0/0
 19778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19781 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19783 ;;Total ram usage:        8 bytes
 19784 ;; Hardware stack levels used:    1
 19785 ;; This function calls:
 19786 ;;		Nothing
 19787 ;; This function is called by:
 19788 ;;		_UART_ISR
 19789 ;;		i2_ringbuf_put
 19790 ;;		i2_ringbuf_pop
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           	psect	text99
 19795  012CBA                     __ptext99:
 19796                           	opt stack 0
 19797  012CBA                     i2_ringbuf_num:
 19798                           	opt stack 18
 19799                           
 19800                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 19801                           
 19802                           ;incstack = 0
 19803  012CBA  EE20 F006          	lfsr	2,6
 19804  012CBE  502D               	movf	i2ringbuf_num@rb,w,c
 19805  012CC0  26D9               	addwf	fsr2l,f,c
 19806  012CC2  502E               	movf	i2ringbuf_num@rb+1,w,c
 19807  012CC4  22DA               	addwfc	fsr2h,f,c
 19808  012CC6  EE10 F004          	lfsr	1,4
 19809  012CCA  502D               	movf	i2ringbuf_num@rb,w,c
 19810  012CCC  26E1               	addwf	fsr1l,f,c
 19811  012CCE  502E               	movf	i2ringbuf_num@rb+1,w,c
 19812  012CD0  22E2               	addwfc	fsr1h,f,c
 19813  012CD2  50DE               	movf	postinc2,w,c
 19814  012CD4  5CE6               	subwf	postinc1,w,c
 19815  012CD6  50DE               	movf	postinc2,w,c
 19816  012CD8  58E6               	subwfb	postinc1,w,c
 19817  012CDA  A0D8               	btfss	status,0,c
 19818  012CDC  D01F               	goto	i2l8559
 19819                           
 19820                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 19821  012CDE  EE20 F004          	lfsr	2,4
 19822  012CE2  502D               	movf	i2ringbuf_num@rb,w,c
 19823  012CE4  26D9               	addwf	fsr2l,f,c
 19824  012CE6  502E               	movf	i2ringbuf_num@rb+1,w,c
 19825  012CE8  22DA               	addwfc	fsr2h,f,c
 19826  012CEA  CFDE F02F          	movff	postinc2,??i2_ringbuf_num
 19827  012CEE  CFDD F030          	movff	postdec2,??i2_ringbuf_num+1
 19828  012CF2  EE20 F006          	lfsr	2,6
 19829  012CF6  502D               	movf	i2ringbuf_num@rb,w,c
 19830  012CF8  26D9               	addwf	fsr2l,f,c
 19831  012CFA  502E               	movf	i2ringbuf_num@rb+1,w,c
 19832  012CFC  22DA               	addwfc	fsr2h,f,c
 19833  012CFE  CFDE F031          	movff	postinc2,??i2_ringbuf_num+2
 19834  012D02  CFDD F032          	movff	postdec2,??i2_ringbuf_num+3
 19835  012D06  1E31               	comf	??i2_ringbuf_num+2,f,c
 19836  012D08  1E32               	comf	??i2_ringbuf_num+3,f,c
 19837  012D0A  4A31               	infsnz	??i2_ringbuf_num+2,f,c
 19838  012D0C  2A32               	incf	??i2_ringbuf_num+3,f,c
 19839  012D0E  502F               	movf	??i2_ringbuf_num,w,c
 19840  012D10  2431               	addwf	??i2_ringbuf_num+2,w,c
 19841  012D12  6E2D               	movwf	?i2_ringbuf_num,c
 19842  012D14  5030               	movf	??i2_ringbuf_num+1,w,c
 19843  012D16  2032               	addwfc	??i2_ringbuf_num+3,w,c
 19844  012D18  6E2E               	movwf	?i2_ringbuf_num+1,c
 19845                           
 19846                           ;My_ringbuf.c: 15: } else {
 19847  012D1A  0012               	return	
 19848  012D1C                     i2l8559:
 19849                           
 19850                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 19851  012D1C  EE20 F004          	lfsr	2,4
 19852  012D20  502D               	movf	i2ringbuf_num@rb,w,c
 19853  012D22  26D9               	addwf	fsr2l,f,c
 19854  012D24  502E               	movf	i2ringbuf_num@rb+1,w,c
 19855  012D26  22DA               	addwfc	fsr2h,f,c
 19856  012D28  CFDE F02F          	movff	postinc2,??i2_ringbuf_num
 19857  012D2C  CFDD F030          	movff	postdec2,??i2_ringbuf_num+1
 19858  012D30  EE20 F002          	lfsr	2,2
 19859  012D34  502D               	movf	i2ringbuf_num@rb,w,c
 19860  012D36  26D9               	addwf	fsr2l,f,c
 19861  012D38  502E               	movf	i2ringbuf_num@rb+1,w,c
 19862  012D3A  22DA               	addwfc	fsr2h,f,c
 19863  012D3C  CFDE F031          	movff	postinc2,??i2_ringbuf_num+2
 19864  012D40  CFDD F032          	movff	postdec2,??i2_ringbuf_num+3
 19865  012D44  EE20 F006          	lfsr	2,6
 19866  012D48  502D               	movf	i2ringbuf_num@rb,w,c
 19867  012D4A  26D9               	addwf	fsr2l,f,c
 19868  012D4C  502E               	movf	i2ringbuf_num@rb+1,w,c
 19869  012D4E  22DA               	addwfc	fsr2h,f,c
 19870  012D50  CFDE F033          	movff	postinc2,??i2_ringbuf_num+4
 19871  012D54  CFDD F034          	movff	postdec2,??i2_ringbuf_num+5
 19872  012D58  1E33               	comf	??i2_ringbuf_num+4,f,c
 19873  012D5A  1E34               	comf	??i2_ringbuf_num+5,f,c
 19874  012D5C  4A33               	infsnz	??i2_ringbuf_num+4,f,c
 19875  012D5E  2A34               	incf	??i2_ringbuf_num+5,f,c
 19876  012D60  5031               	movf	??i2_ringbuf_num+2,w,c
 19877  012D62  2633               	addwf	??i2_ringbuf_num+4,f,c
 19878  012D64  5032               	movf	??i2_ringbuf_num+3,w,c
 19879  012D66  2234               	addwfc	??i2_ringbuf_num+5,f,c
 19880  012D68  502F               	movf	??i2_ringbuf_num,w,c
 19881  012D6A  2433               	addwf	??i2_ringbuf_num+4,w,c
 19882  012D6C  6E2D               	movwf	?i2_ringbuf_num,c
 19883  012D6E  5030               	movf	??i2_ringbuf_num+1,w,c
 19884  012D70  2034               	addwfc	??i2_ringbuf_num+5,w,c
 19885  012D72  6E2E               	movwf	?i2_ringbuf_num+1,c
 19886  012D74  0012               	return	
 19887  012D76                     __end_ofi2_ringbuf_num:
 19888                           	opt stack 0
 19889                           pclatu	equ	0xFFB
 19890                           pclath	equ	0xFFA
 19891                           tblptru	equ	0xFF8
 19892                           tblptrh	equ	0xFF7
 19893                           tblptrl	equ	0xFF6
 19894                           tablat	equ	0xFF5
 19895                           prodh	equ	0xFF4
 19896                           prodl	equ	0xFF3
 19897                           intcon	equ	0xFF2
 19898                           intcon2	equ	0xFF1
 19899                           indf0	equ	0xFEF
 19900                           postinc0	equ	0xFEE
 19901                           fsr0h	equ	0xFEA
 19902                           fsr0l	equ	0xFE9
 19903                           wreg	equ	0xFE8
 19904                           indf1	equ	0xFE7
 19905                           postinc1	equ	0xFE6
 19906                           postdec1	equ	0xFE5
 19907                           fsr1h	equ	0xFE2
 19908                           fsr1l	equ	0xFE1
 19909                           indf2	equ	0xFDF
 19910                           postinc2	equ	0xFDE
 19911                           postdec2	equ	0xFDD
 19912                           plusw2	equ	0xFDB
 19913                           fsr2h	equ	0xFDA
 19914                           fsr2l	equ	0xFD9
 19915                           status	equ	0xFD8
 19916                           pclatu	equ	0xFFB
 19917                           pclath	equ	0xFFA
 19918                           tblptru	equ	0xFF8
 19919                           tblptrh	equ	0xFF7
 19920                           tblptrl	equ	0xFF6
 19921                           tablat	equ	0xFF5
 19922                           prodh	equ	0xFF4
 19923                           prodl	equ	0xFF3
 19924                           intcon	equ	0xFF2
 19925                           intcon2	equ	0xFF1
 19926                           indf0	equ	0xFEF
 19927                           postinc0	equ	0xFEE
 19928                           fsr0h	equ	0xFEA
 19929                           fsr0l	equ	0xFE9
 19930                           wreg	equ	0xFE8
 19931                           indf1	equ	0xFE7
 19932                           postinc1	equ	0xFE6
 19933                           postdec1	equ	0xFE5
 19934                           fsr1h	equ	0xFE2
 19935                           fsr1l	equ	0xFE1
 19936                           indf2	equ	0xFDF
 19937                           postinc2	equ	0xFDE
 19938                           postdec2	equ	0xFDD
 19939                           plusw2	equ	0xFDB
 19940                           fsr2h	equ	0xFDA
 19941                           fsr2l	equ	0xFD9
 19942                           status	equ	0xFD8
 19943                           
 19944                           	psect	rparam
 19945  0000                     pclatu	equ	0xFFB
 19946                           pclath	equ	0xFFA
 19947                           tblptru	equ	0xFF8
 19948                           tblptrh	equ	0xFF7
 19949                           tblptrl	equ	0xFF6
 19950                           tablat	equ	0xFF5
 19951                           prodh	equ	0xFF4
 19952                           prodl	equ	0xFF3
 19953                           intcon	equ	0xFF2
 19954                           intcon2	equ	0xFF1
 19955                           indf0	equ	0xFEF
 19956                           postinc0	equ	0xFEE
 19957                           fsr0h	equ	0xFEA
 19958                           fsr0l	equ	0xFE9
 19959                           wreg	equ	0xFE8
 19960                           indf1	equ	0xFE7
 19961                           postinc1	equ	0xFE6
 19962                           postdec1	equ	0xFE5
 19963                           fsr1h	equ	0xFE2
 19964                           fsr1l	equ	0xFE1
 19965                           indf2	equ	0xFDF
 19966                           postinc2	equ	0xFDE
 19967                           postdec2	equ	0xFDD
 19968                           plusw2	equ	0xFDB
 19969                           fsr2h	equ	0xFDA
 19970                           fsr2l	equ	0xFD9
 19971                           status	equ	0xFD8
 19972                           
 19973                           	psect	temp
 19974  000059                     btemp:
 19975                           	opt stack 0
 19976  000059                     	ds	1
 19977  0000                     int$flags	set	btemp
 19978                           pclatu	equ	0xFFB
 19979                           pclath	equ	0xFFA
 19980                           tblptru	equ	0xFF8
 19981                           tblptrh	equ	0xFF7
 19982                           tblptrl	equ	0xFF6
 19983                           tablat	equ	0xFF5
 19984                           prodh	equ	0xFF4
 19985                           prodl	equ	0xFF3
 19986                           intcon	equ	0xFF2
 19987                           intcon2	equ	0xFF1
 19988                           indf0	equ	0xFEF
 19989                           postinc0	equ	0xFEE
 19990                           fsr0h	equ	0xFEA
 19991                           fsr0l	equ	0xFE9
 19992                           wreg	equ	0xFE8
 19993                           indf1	equ	0xFE7
 19994                           postinc1	equ	0xFE6
 19995                           postdec1	equ	0xFE5
 19996                           fsr1h	equ	0xFE2
 19997                           fsr1l	equ	0xFE1
 19998                           indf2	equ	0xFDF
 19999                           postinc2	equ	0xFDE
 20000                           postdec2	equ	0xFDD
 20001                           plusw2	equ	0xFDB
 20002                           fsr2h	equ	0xFDA
 20003                           fsr2l	equ	0xFD9
 20004                           status	equ	0xFD8


Data Sizes:
    Strings     441
    Constant    239
    Data        3
    BSS         2596
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    105     159
    BANK1           256      6     154
    BANK2           256      0     253
    BANK3           256    105     205
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_47(CODE[9]), STR_46(CODE[9]), STR_44(CODE[2]), STR_43(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_50(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_42(CODE[16]), STR_41(CODE[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 235
		 -> STR_45(CODE[235]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), 

    S3119ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK3[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _ringbuf_put_num->_ringbuf_put
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_task

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  185800
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                          _RTCC_task
                          _UART_task
                           _USB_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  135499
                                              0 BANK1      6     2      4
                                              0 BANK3    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  111120
                                             95 BANK0     10     0     10
                           _bootload
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8   96245
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   51420
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   26196
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   12740
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    5842
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    4893
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    3266
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    1302
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1237
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    6125
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1527
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   22474
                       _I2C_LCD_init
                           _I2C_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1971
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17067
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   16085
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4080
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2302
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1253
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1253
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33784
                                             30 COMRAM    14    14      0
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _main_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     69      CD      12       80.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FD      10       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      9A       7       60.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     35B       8        0.0%
DATA                 0      0     B2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 16:55:36 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD61  
                      __size_of_I2C_Start 0030                           _ringbuf_put_num 34E0  
                         _ringbuf_put_str 3876                              ___awdiv@sign 0065  
                                      _ms 010E                             _USBDeviceInit 13E8  
                     ___wmul@multiplicand 0062                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006E                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0039      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                                     l207 3CBC                                       l208 3CBA  
                                     l146 145E               __end_of_USBStdGetDscHandler 1698  
                                     l504 12C8                                       l509 131C  
                                     l813 233C                                       l654 3C6C  
                                     l726 34E2                                       l807 2BFE  
                                     l593 40E6                                       l578 3DF2  
                                     l826 116C                                       l659 3AD4  
                                     _BDT 000D00                                       l929 3CFE  
                                     l969 3CF2                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 3EB4  
                                     _now 001B                         _RTCC_from_caltime 3F5E  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 1698                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0012                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002D                              _I2C_LCD_Puts 37A6  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0035                         ??_I2C_LCD_Command 0064  
                                    ?_ISR 002D                    __end_of_get_string_usb 3B46  
                        _terminal_at_hand 38DA                              _I2C_LCD_init 33CA  
                                    l1208 4082                                      l1240 32F0  
              USBConfigureEndpoint@handle 0033                                      l1589 1C16  
                                    l1839 3648                                      l1849 3994  
                                    l1786 2BEC                                      l8011 002C  
                                    l8013 003E                                      l8005 000E  
                                    l8103 030E                                      l8031 0100  
                                    l8023 0080                                      l8201 2244  
                                    l8113 033E                                      l8121 0366  
                                    l8105 0318                                      l8041 013E  
                                    l8017 0048                                      l8123 0372  
                                    l8051 01A4                                      l8043 0144  
                                    l8221 37D4                                      l8303 143E  
                                    l8143 0420                                      l8135 03B8  
                                    l8063 01F4                                      l8055 01B6  
                                    l8039 0132                        __CFG_WPFP$PAGE_127 000000  
                                    l8137 03BE                                      l8129 0398  
                                    l8081 0278                                      l8057 01CE  
                                    l8049 0198                                      l8145 042C  
                                    l8171 3D76                                      l8331 14AE  
                                    l8315 146C                                      l8323 1484  
                                    l8227 37F4                                      l8147 044C  
                                    l8067 020C                                      l8243 3922  
                                    l8181 21AA                                      l8421 12BC  
                                    l8229 380A                                      l8261 1B36  
                                    l8253 39EA                                      l8093 02B4  
                                    l8069 0242                                      l8415 12A2  
                                    l8407 400E                                      l8175 3D88  
                                    l8327 14A4                                      l8271 1B7C  
                                    l8247 39A0                                      l8079 0272  
                                    l8503 05BE                                      l9311 370A  
                                    l7801 0B8E                                      l8433 1306  
                                    l8417 12AC                                      l7721 2AD4  
                                    l8337 1514                                      l8249 39AC  
                                    l8513 0682                                      l8505 05F6  
                                    l9321 3734                                      l7651 30C2  
                                    l7643 308C                                      l7635 3068  
                                    l7811 0BF2                                      l8427 12D2  
                                    l7723 2AE0                                      l7715 2AB6  
                                    l8275 1B8E                                      l8259 1B30  
                                    l8099 02D6                                      l8523 074A  
                                    l7645 3098                                      l7821 0C7A  
                                    l7805 0B98                                      l7813 0BF6  
                                    l8189 21DE                                      l8381 1E7A  
                                    l8373 1E38                                      l7741 2B38  
                                    l7733 2B16                                      l7725 2AE6  
                                    l7709 2AA0                                      l8277 1BD8  
                                    l8525 0782                                      l8517 06CA  
                                    l8509 063E                                      l7647 309E  
                                    l7655 30D0                                      l7639 3078  
                                    l7671 1D8A                                      l8447 1348  
                                    l8455 136C                                      l8439 1320  
                                    l8383 1E82                                      l8391 1EE4  
                                    l8375 1E42                                      l8711 33DA  
                                    l7751 2B70                                      l8279 1BDE  
                                    l8519 0702                                      l7817 0C16  
                                    l8473 13BC                                      l8457 1378  
                                    l8465 139C                                      l7737 2B24  
                                    l7753 2B80                                      l7913 3878  
                                    l8529 07CA                                      l7659 30E4  
                                    l8475 13C0                                      l8467 13A6  
                                    l8387 1EB2                                      l8723 3426  
                                    l8715 33F2                                      l8707 33D0  
                                    l7763 2BDA                                      l7755 2B86  
                                    l8299 1434                                      l8643 3514  
                                    l7693 3664                                      l8477 13E4  
                                    l8661 28F2                                      l7853 35F8  
                                    l7837 3F2C                                      l7917 38B0  
                                    l8493 04F6                                      l8733 26D8  
                                    l7687 2138                                      l8727 343E  
                                    l8719 341C                                      l7855 3604  
                                    l8639 34F2                                      l8487 04A2  
                                    l8735 26F0                                      l7697 368A  
                                    l7769 4036                                      l8577 3C84  
                                    l7865 363A                                      l7857 360A  
                                    l7881 3986                                      l7873 3950  
                                    l8649 3554                                      l8497 053E  
                                    l8489 04AE                                      l8659 28DC  
                                    l8667 28F8                                      l7779 2678  
                                    l7875 395C                                      l8499 0576  
                                    l8589 3AD6                                      l8677 3264  
                                    l7877 3962                                      l7799 0B88  
                                    l8783 3B10                                      l8767 3E94  
                                    l7991 11EA                                      l8687 3826  
                                    l8951 0936                                      l8943 08E4  
                                    l8935 083A                                      l8785 3B14  
                                    l8769 3E98                                      l7985 11DE  
                                    l8961 098C                                      l8953 093A  
                                    l8945 08E8                                      l7987 11E2  
                                    l8939 0864                                      l8981 0AB6  
                                    l8991 0B1A                                      l8983 0ABE  
                                    l8975 0A62                                      l8967 09DA  
                                    l8959 0988                                      STR_1 FFDF  
                                    l8977 0A8C                                      l8969 09DE  
                                    STR_4 FFFB                                      l8987 0ADA  
                                    STR_7 FFFD                                      l8999 0B50  
                                    STR_9 FFF9                                      u7310 20E2  
                                    u7320 20E4                                      u7330 2114  
                                    u7350 212A                                      u8310 1292  
                   ??_USBCtrlTrfTxService 002D                                      u7360 212C  
                                    u7370 2184                                      u8250 1E28  
                                    u7380 2186                                      u7348 2118  
                                    u7700 38D2                                      u8318 1296  
                                    _UCFG 000F39                                      u8258 1E2C  
                                    u7707 38C8                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u7670 3DFE  
                                    u7690 38A2                                      u9507 3CF8  
                                    _UEIE 000F37                                      u7697 3898  
                                    u9467 37F0                                      u9477 33E2  
                                    u9487 342E                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9497 40B0  
                         _CDCDataInHandle 00F0                       ??_RTCC_from_caltime 0091  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 0007  
                                    _atoi 1B2E                                      _main 36C8  
                ??i2_USBTransferOnePacket 0031                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 010A  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                          __end_of_I2C_Send 40EE  
                         _USBDeviceAttach 3C8E                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 411E  
                        __end_of_I2C_Stop 4118                                      pclat 000FFA  
                        __end_of_I2C_init 4100                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A2  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 1D12  
                  ??_USBCtrlTrfOutHandler 002F                            terminal_task@i 0368  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0041  
                           _I2C_LCD_Clear 40A2                           ??_terminal_task 0198  
                         ??_terminal_time 00BE                     __end_ofi2_ringbuf_pop 304C  
                   __end_ofi2_ringbuf_num 2D76                     __end_ofi2_ringbuf_put 2FA0  
                      terminal_task@ascii 0367                                     ??_ISR 004B  
                  __size_of_I2C_IdleCheck 001E                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 008F                            ?_USBDeviceInit 002D  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                 __end_of_RTCC_from_caltime 3F84  
                                   ?_atoi 0066                                     ?_main 002D  
                 __size_of_put_string_usb 002C                            ??_get_quot_rem 007D  
                         __end_of___awdiv 2B42                                     _ADRES 000FC3  
                                   STR_20 FFE4                                     STR_13 FFF7  
                                   STR_30 FFD5                                     STR_31 FFF1  
                                   STR_15 FFA4                                     STR_23 FF31  
                                   STR_32 FFCA                                     STR_40 FFBC  
                                   STR_24 FFAD                                     STR_33 FFE2  
                                   STR_25 FF7E                                     STR_41 FF66  
                                   STR_26 FFED                                     STR_34 FFE8  
                                   STR_50 FFB5                                     STR_42 FF56  
                                   STR_35 FFCE                                     STR_27 FFEC  
                                   STR_19 FFE4                                     STR_43 FFD0  
                                   STR_44 FFEF                                     STR_36 FFDA  
                                   STR_28 FF72                           __end_of___awmod 30EE  
                                   STR_29 FFEA                                     STR_37 FFF3  
                                   STR_45 FE46                                     STR_38 FFC3  
                                   STR_46 FF89                                     STR_39 FFF5  
                                   STR_47 FF92                                     STR_48 FF69  
                                   STR_49 FF9B         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 2BFE                           ___awdiv@divisor 0062  
                  __end_of_USBDeviceTasks 17DE                                     _LATB2 007C52  
               ?_USBCtrlEPServiceComplete 002D                           __end_of___lwdiv 3652  
                         __end_of___lwmod 399E                                     i2l300 2D9A  
                                   i2l232 1AB4                                     i2l146 1844  
                                   i2l170 1774                                     i2l308 3BD2  
                                   i2l158 16C8                                     i2l168 1762  
                                   i2l345 2A74                                     i2l169 17DA  
                                   i2l450 2470                                     i2l452 24BA  
                                   i2l374 0E26                                     i2l295 2D84  
                                   i2l359 1C30                                     i2l368 1C94  
                                   i2l393 0FEC                                     i2l298 2E12  
                                   i2l299 2D94                                     _UADDR 000F38  
                         ___awdiv@counter 0064                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000                          __end_of_UART_ISR 3B90  
         __end_of_USBCtrlEPAllowDataStage 318C                                     _sd000 FE42  
                                   _sd001 FDAC                                     _sd002 FDE0  
                    caltime_to_epoch@year 007F                                i2memset@p1 002D  
                      __size_of_UART_init 0022                           __end_of_dpowers FD61  
                      __size_of_UART_task 0024                          __end_of_OSC_init 410E  
                         __end_of_isdigit 3F36                        __size_of_RTCC_init 0066  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 0038  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                         __end_of_I2C_Start 3E02  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 37A6                          __end_of_USB_init 406C  
                        __end_of_USB_task 333C                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 045A  
                        __end_ofi2_memset 3F0C                         month_length@month 0066  
                 __end_of_ringbuf_put_num 3562                   __end_of_ringbuf_put_str 38DA  
                     terminal_task@i_4309 0366                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                            ?_I2C_LCD_Clear 002D  
                         __initialization 3562                           terminal_task@rx 0196  
                         terminal_task@tx 0194                           terminal_time@tx 00B6  
                            __end_of_atoi 1C20                              __end_of_main 3738  
                   _control_signal_bitmap 0018                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 0091                                    ??_atoi 0068  
                                  ??_main 00C9                             __activetblptr 000003  
                         ?_USBDeviceTasks 002D                               ?_USBSuspend 002D  
                            _cdc_mem_type 00F6                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 4032                   __end_of_USBDeviceAttach 3CC6  
                        _CDCDataOutHandle 00F2                         _getsUSBUSART$1957 006B  
                       _I2C_LCD_SetCursor 3E30                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                        ___awdiv@dividend 0060                                 ??_USB_ISR 004B  
                      I2C_LCD_Command@ans 0065                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 017A                                    i2l1321 0052  
                                  i2l1156 3B72                                    i2l1324 0066  
                                  i2l1157 3B70                                    i2l5021 2E46  
                          __CFG_WDTEN$OFF 000000                                    i2l5041 2ECC  
                                  i2l5211 3E10                                    i2l6003 1C62  
                                  i2l5029 2E70                                    i2l5061 243E  
                                  i2l5205 3E04                                    i2l6005 1C68  
                                  i2l6021 1CCE                                    i2l5231 2290  
                                  i2l5207 3E0A                                    i2l6007 1C6E  
                                  i2l5241 22BC                                    i2l5401 2944  
                                  i2l6017 1CB0                                    i2l5251 22FC  
                                  i2l5227 2286                                    i2l6131 29F4  
                                  i2l6133 29F8                                    i2l6117 3A50  
                                  i2l6109 3A08                                    i2l5077 249C  
                                  i2l5069 245E                                    i2l5085 24C4  
                                  i2l6151 2A5A                                    i2l5511 1680  
                                  i2l5431 313C                                    i2l5249 22F4  
                                  i2l6145 2A3A                                    i2l5505 1670  
                                  i2l6313 3DCA                                    i2l5259 2334  
                                  i2l5603 0FCC                                    i2l5507 1678  
                                  i2l5523 2DBA                                    i2l5451 200E  
                                  i2l5435 3158                                    i2l6315 3DCC  
                                  i2l6157 2A7E                                    i2l5621 105A  
                                  i2l5613 1008                                    i2l5605 0FD8  
                                  i2l5533 2DFA                                    i2l5381 3EEA  
                                  i2l5461 2042                                    i2l5551 0E22  
                                  i2l5455 2016                                    i2l5385 3EFA  
                                  i2l6353 27B2                                    i2l6337 3BCE  
                                  i2l5619 104E                                    i2l5571 0EE0  
                                  i2l6371 2820                                    i2l6603 1852  
                                  i2l6611 186A                                    i2l5573 0EE2  
                                  i2l5565 0E9C                                    i2l5485 155C  
                                  i2l5477 208C                                    i2l6365 2800  
                                  i2l6357 27BA                                    i2l5903 1A5E  
                                  i2l6615 1888                                    i2l5593 0F86  
                                  i2l5577 0EFE                                    i2l5497 160E  
                                  i2l5489 1574                                    i2l6369 281A  
                                  i2l6625 18EC                                    i2l4963 31EE  
                                  i2l5587 0F50                                    i2l5499 1616  
                                  i2l5923 1ADA                                    i2l6619 1890  
                                  i2l6723 1758                                    i2l6715 1730  
                                  i2l4973 3C28                                    i2l5589 0F6C  
                                  i2l6709 1724                                    i2l5951 1952  
                                  i2l6591 1828                                    i2l6751 17D6  
                                  i2l6743 179A                                    i2l6671 16C0  
                                  i2l6663 16B0                                    i2l4977 3C36  
                                  i2l6729 176C                                    i2l6587 1820  
                                  i2l5973 19EE                                    i2l5957 1976  
                                  i2l6749 17BA                                    i2l6693 16EE  
                                  i2l6685 16DE                                    i2l5991 1C3A  
                                  i2l8801 2F8A                                    i2l5969 19D4  
                                  i2l5993 1C40                                    i2l8811 3030  
                                  i2l5995 1C46                                    i2l6699 1714  
                                  i2l9291 005E                                    i2l8813 3044  
                                  i2l8559 2D1C                                    i2l8819 3048  
                      ?_I2C_LCD_SetCursor 0066                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
                         i2ringbuf_pop@rb 0035                           i2ringbuf_num@rb 002D  
         __size_ofi2_USBTransferOnePacket 00BA                           i2ringbuf_put@rb 0035  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 4088  
                      epoch_to_caltime@tm 0081                        _terminal_task$5935 0364  
                    get_string_usb@rx_len 0072                         _shortPacketStatus 001A  
                     ??_I2C_LCD_SetCursor 0067                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                          ringbuf_put_num@i 0074  
                         USBDeviceTasks@i 004A                     caltime_to_epoch@epoch 0081  
             USBStdFeatureReqHandler@pUEP 0042                  USBTransferOnePacket@data 0061  
                      _terminal_time$5936 00BE                USBCtrlTrfInHandler@lastDTS 002E  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0085                          __end_of_bootload 3C18  
                                  ___lmul 3652                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 233C                                    ___wmul 3D36  
                      ??_epoch_to_caltime 0083                         __end_of_UART_init 3FF0  
                               ??___awdiv 0064                         __end_of_UART_task 3FCE  
                               ??___awmod 0064                                    _d_to_x 3F36  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 1EEA  
                    ringbuf_put_num@value 0071                              ?_timer0_init 002D  
                       __end_of_RTCC_init 3876                              ?_timer1_init 0060  
                               ??___lwdiv 0064                         __end_of_RTCC_task 3D36  
                               ??___lwmod 006B                              ?_timer3_init 002D  
                       _USBEnableEndpoint 3C18           __size_of_USBStdGetStatusHandler 00BA  
                                  _memset 3D6C                                    clear_0 356A  
                                  clear_1 357C                                    clear_2 3588  
                         put_string_usb@s 006C                                    clear_3 3594  
                                  clear_4 35A0                                    clear_5 35AC  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 4012                        ?_USBEnableEndpoint 0035  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 0175  
                                  _usb_tx 017D                                    _strcmp 399E  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 2690                                 ??_isdigit 0060  
                               ?_I2C_Send 002D                              _CDCTxService 126E  
                               ?_I2C_Stop 002D                              __mediumconst FD56  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 3E5C  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_sprintf 007E  
                     ?_terminal_operation 00BF                               _CtrlTrfData 000D38  
                    _controlTransferState 0017                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 35D0  
                            __pbssBIGRAMl 03CD                      __end_of_get_quot_rem 25BC  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 4088                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 006F                          ?_ringbuf_put_str 006F  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        terminal_task@op0 0112                          terminal_task@op1 012B  
                        terminal_task@op2 0144                          terminal_task@op3 02E4  
                        terminal_task@buf 0300                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 3C54                             __end_of_sd000 FE46  
                           __end_of_sd001 FDE0                             __end_of_sd002 FE14  
                        terminal_time@op0 00B8                          terminal_time@op1 00BA  
                        terminal_time@op2 00BC                              __pidataBANK0 411E  
                               ?_UART_ISR 002D                      ??_terminal_operation 00C9  
                __end_of_terminal_at_hand 393C          __size_of_USBCtrlEPAllowDataStage 009E  
           __size_of_USBConfigureEndpoint 0094                                 ?_OSC_init 002D  
             __end_of_USBCtrlTrfInHandler 2A84                           __CFG_DSWDTPS$G2 000000  
                         _I2C_LCD_Command 3CC6                            _put_string_usb 3E88  
                  i2_USBTransferOnePacket 2E30                      terminal_task@command 0185  
                               ?_USB_init 002D                                 ?_USB_task 002D  
                       _CDCTxService$2005 0068                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                                ??_I2C_Stop 0062  
                              _cdc_notice 0100                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 002D                                _cdc_rx_len 00F7  
                              ??_I2C_init 0060                                _cdc_tx_len 00F8  
              caltime_to_epoch@month_3467 0080                  ??_USBCtrlTrfSetupHandler 0047  
                        ?_USBDeviceAttach 002D                    _USBStdGetStatusHandler 2D76  
                            sprintf@width 008D                        __size_of_main_init 00E2  
                              __pbssBANK0 00C9                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0369  
                 __end_of_caltime_to_RTCC 2412                           _RTCC_to_caltime 2BFE  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00D8  
        __end_of_USBCtrlEPServiceComplete 1B2E               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FE30                     RTCC_task@prev_halfsec 00F4  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                              ??_UART_ISR 003C                                   ?___wmul 0060  
                                 ?_d_to_x 002D                    __end_of_put_string_usb 3EB4  
                              ??_OSC_init 0060                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FE30                      I2C_LCD_SetCursor@row 0066  
                        _USBCtrlEPService 2762                                   ?_x_to_d 002D  
                            I2C_Send@data 0062                                _ep_data_in 00E4  
                                 ?_strcmp 0060               __end_of_USBCtrlTrfRxService 1A3A  
                      _USBCheckStdRequest 1C20                                ??_USB_init 0069  
                       _configDescriptor1 FD69                                ??_USB_task 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ??i2_memset 0033  
             __end_of_USBCtrlTrfTxService 233C                       _USBStdSetCfgHandler 1FCC  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8620 00FC  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                    terminal_operation@tx 00BF                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 4118                   __end_of_RTCC_from_epoch 40A2  
                               ?_bootload 002D                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                          i2ringbuf_pop@ret 003B  
                        __CFG_CFGPLLEN$ON 000000                             _cdc_trf_state 0016  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 3DD2                                   _pCDCDst 00EA  
                                 _pCDCSrc 00ED                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 3738                                   __Lparam 0000  
                 __end_of_I2C_LCD_Command 3CFE                         ringbuf_put_num@rb 006F  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                            USB_task@data 0076                      ??_USBCheckStdRequest 0047  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 2A84                           __size_of___lmul 0076  
                                 ___awmod 304C                                   ___lldiv 2B42  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0036  
                   ringbuf_put_num@digits 0073                                   ___lwdiv 35DA  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 393C                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 0B6E                     __end_of_terminal_time 0804  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 1FCC                      __size_of_putUSBUSART 0022  
             epoch_to_caltime@month_cache 00FE                                   __pcinit 3562  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FDAC                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 36C8                                   __ptext1 0804  
                                 __ptext2 2690                                   __ptext3 045A  
                                 __ptext4 38DA                                   __ptext5 3456  
                                 __ptext6 0000                                   __ptext7 3876  
                                 __ptext8 3F5E                                   __ptext9 399E  
                                 _inPipes 00D2                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 0010                                 _T0CONbits 000FD5  
                        _time_change_flag 00F9                          _caltime_to_epoch 0B6E  
                         __size_of_strcmp 005C                              __size_of_ISR 009A  
                               _T1CONbits 000FCD                                   _dpowers FD57  
                            ??_USBSuspend 0041                   __size_of_RTCC_from_RTCC 001A  
                                 _isdigit 3F0C                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                             I2C_LCD_init@i 0068  
                               _T5CONbits 000F22                           i2_USBDeviceInit 17DE  
                        i2USBDeviceInit@i 0035                                   _uart_rx 0165  
                                 _uart_tx 016D                        __end_of_USB_CD_Ptr FD69  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 008E  
                 __end_of_RTCC_to_caltime 2CBA                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 35D0                              _getsUSBUSART 1E00  
                  __size_ofi2_ringbuf_pop 00AC                    __size_ofi2_ringbuf_num 00BC  
                              ??_bootload 006A                    __size_ofi2_ringbuf_put 00B6  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FD67  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0005  
                          ??_month_length 0067                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
         _dummy_encapsulated_cmd_response 015D                  ?_USBStdFeatureReqHandler 002D  
                        ?_caltime_to_RTCC 0069                                ?_I2C_Start 0062  
                   ??_USBStdSetCfgHandler 0041                           ___lldiv@divisor 0064  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                      __end_of_USBSuspend 3EE0                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 30EE                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 1A3A  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0013  
              _USBStatusStageEnabledFlag2 0014                        USBEnableEndpoint@p 0036  
                               _UART_init 3FCE                                 _UART_task 3FAA  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 3810  
                               _RTCC_task 3CFE                 epoch_to_caltime@day_cache 0009  
                  i2ringbuf_put@asciicode 0037                              _get_quot_rem 24E8  
                              _print_time 3456                            _ringbuf_delete 3F84  
               __size_of_epoch_to_caltime 01EE                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 000D                       RTCC_from_caltime@tm 008F  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0032  
              ?_USBCtrlEPAllowStatusStage 002D                          ?_RTCC_from_epoch 008F  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                 _USTATcopy 002C  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 2264  
                        __CFG_IOL1WAY$OFF 000000                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 333C  
                          ringbuf_pop@ret 006E                             i2_ringbuf_pop 2FA0  
                           i2_ringbuf_num 2CBA                   ?i2_USBTransferOnePacket 002D  
                           i2_ringbuf_put 2EEA                     __end_of_USBDeviceInit 154A  
                       ?_terminal_at_hand 00AF                            __end_of___lmul 36C8  
                          __end_of___wmul 3D6C                            __end_of_d_to_x 3F5E  
                       __size_of_UART_ISR 004A                   __end_ofi2_USBDeviceInit 1922  
                  __end_of_ringbuf_delete 3FAA                                ?_UART_init 002D  
                      ??_terminal_at_hand 00B6                                 i2memset@c 002F  
                               i2memset@n 0031                                 i2memset@p 0033  
                              ?_UART_task 002D                            __end_of_memset 3DA0  
                              ?_RTCC_init 002D                         __size_of_OSC_init 000E  
                              ?_RTCC_task 002D                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 00F5                            __end_of_x_to_d 4032  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 39FA  
                     start_initialization 3562                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ISR 00A2  
           USBCtrlTrfRxService@byteToRead 002E                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                             ?_I2C_LCD_Puts 0064  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0264  
                             _cdc_data_tx 02A4                         __size_ofi2_memset 002C  
                           UART_ISR@ascii 003C              __end_of_USBConfigureEndpoint 3220  
                        ?_RTCC_to_caltime 0062           __end_of_USBStdFeatureReqHandler 1080  
       __end_of_USBCtrlEPAllowStatusStage 29C0                  __end_of_USBCtrlEPService 2830  
                             ??_I2C_Start 0063                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 0068  
                   __end_of_I2C_LCD_Clear 40BC                    _pBDTEntryEP0OutCurrent 0003  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 2EEA                       ringbuf_put_num@temp 0075  
                                ??___lmul 0075                            ?i2_ringbuf_pop 0035  
                          ?i2_ringbuf_num 002D                            ?i2_ringbuf_put 0035  
                                ??___wmul 0064                       _USBStdGetDscHandler 154A  
                                ??_d_to_x 0068               __size_of_terminal_operation 00D2  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00FC  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcmp 0064  
                    __end_of_month_length 218C                            _RTCC_from_RTCC 40BC  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 2E30  
                             ?_print_time 008F                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0194  
                           __pcstackBANK3 0300              __size_of_USBCtrlTrfInHandler 00C4  
                          ??_I2C_LCD_Puts 0066                            ??_I2C_LCD_init 0067  
                    __end_of_ringbuf_init 3AAA                      ?_USBStdGetDscHandler 002D  
                            _isdigit$5388 0061                                  ?_USB_ISR 002D  
              __end_of_USBWakeFromSuspend 3DD2                               sprintf@flag 008B  
                       __size_of_bootload 0042                               sprintf@prec 0082  
                         _USBStallHandler 3B90                              _pBDTEntryOut 00DE  
              __end_of_USBCheckCDCRequest 24E8                  __end_of_caltime_to_epoch 0DFC  
                         millis_timer@cnt 000B                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0060  
                               __pintcode 0008                             __pmediumconst FD56  
                                ?___awdiv 0060                                  ?___awmod 0060  
                                ?___lldiv 0060                                  ?___lwdiv 0060  
                                ?___lwmod 0067                     _is_usb_available$4884 0060  
                  __end_of_RTCC_from_RTCC 40D6                           I2C_LCD_Puts@ans 0067  
                        ?i2_USBDeviceInit 002D                               ??_UART_init 0060  
              USBCBSendResume@delay_count 0001                               ??_UART_task 0068  
                             ??_RTCC_init 0091                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 218C                                 _main_init 1EEA  
                             I2C_Start@rw 0062                                  ?_isdigit 002D  
                        _epoch_to_caltime 1080                                  _I2C_Send 40D6  
                                _I2C_Stop 410E                      __CFG_RTCOSC$T1OSCREF 000000  
                                _I2C_init 40EE                     __end_of_I2C_IdleCheck 4050  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 3A56  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002D  
                             _ep_data_out 00E7                          ___lwdiv@quotient 0065  
                   terminal_at_hand@value 00B5                                  ?_sprintf 006C  
            __size_of_USBCtrlTrfRxService 0118             USBConfigureEndpoint@direction 002D  
                               d_to_x@dec 0068                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00D8                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 0064                ??_USBCtrlEPServiceComplete 002E  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008A                           ??i2_ringbuf_pop 0037  
                         ??i2_ringbuf_num 002F                           ??i2_ringbuf_put 0038  
                                i2u416_40 22E6                                  i2u416_47 22DC  
                                _PIR1bits 000F9E                                  i2u418_40 2326  
                                i2u418_47 231C                                  i2u451_40 1664  
                                _PIR2bits 000FA1                                  i2u451_47 165A  
                                i2u448_40 15D2                                  i2u448_47 15C8  
                                i2u449_40 1608                                  _PIR5bits 000F98  
                                i2u449_47 15FE                epoch_to_caltime@year_cache 00FA  
               USBCtrlEPService@setup_cnt 0049                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                _RCONbits 000FD0                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 000F  
                                _UART_ISR 3B46                     terminal_operation@op0 00C1  
                   terminal_operation@op1 00C3                     terminal_operation@op2 00C5  
                   terminal_operation@op3 00C7                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00F2  
                           ??_timer3_init 0060                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                      _USBConfigureEndpoint 318C  
                                _OSC_init 4100                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0284                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _USB_init 4050                                  _USB_task 32AE  
                              ?_main_init 002D                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002D                              _RemoteWakeup 000E  
                      I2C_LCD_init@i_4220 0069                                  i2_memset 3EE0  
                       ??_ringbuf_put_num 0074                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 3BD6                             I2C_Start@adrs 0063  
                           ringbuf_put@rb 0068                         ___lmul@multiplier 006D  
                             _INTCON2bits 000FF1               ??_USBCtrlEPAllowStatusStage 002D  
             __end_of_USBStdSetCfgHandler 20AE                          __size_of_USB_ISR 0006  
                    epoch_to_caltime@year 0089                           main_init@uartrx 0369  
                         main_init@uarttx 03CD                    __size_of_terminal_task 036A  
                  __size_of_terminal_time 03AA                   __size_of_get_string_usb 004C  
                      __end_of_device_dsc FE42                   ?_USBCtrlTrfSetupHandler 002D  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                    __end_of_I2C_LCD_Puts 3810                                  _SetupPkt 000D30  
                           _weekday_3char FE14                      __end_of_I2C_LCD_init 3456  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                       __end_of_ringbuf_pop 28FC  
                     __end_of_ringbuf_num 1E00                       __end_of_ringbuf_put 2690  
                     __end_of_putUSBUSART 4012                               _line_coding 018D  
                          ??_CDCTxService 0067                       __end_of_timer0_init 3C8E  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 3AFA  
                              sprintf@len 0089                       __end_of_timer3_init 3E88  
                              sprintf@val 0087                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 0146                           ___lwdiv@divisor 0062  
                         ___lwdiv@counter 0064                      timer0_init@prescaler 0061  
                                __ptext10 1B2E                                  __ptext11 3F0C  
                                __ptext20 3220                                  __ptext12 3D36  
                                __ptext21 1EEA                                  __ptext13 3BD6  
                                __ptext30 3FCE                                  __ptext22 3E5C  
                                __ptext14 3E30                                  __ptext31 3810  
                                __ptext23 3AAA                                  __ptext15 37A6  
                                __ptext40 40EE                                  __ptext32 4088  
                                __ptext24 3C54                                  __ptext16 34E0  
                                __ptext41 33CA                                  __ptext33 1080  
                                __ptext25 3A56                                  __ptext17 393C  
                                __ptext50 2830                                  __ptext42 40A2  
                                __ptext34 24E8                                  __ptext26 4050  
                                __ptext18 35DA                                  __ptext51 3E88  
                                __ptext43 3CC6                                  __ptext35 2B42  
                                __ptext27 13E8                                  __ptext19 3F84  
                                __ptext60 3CFE                                  __ptext52 3FF0  
                                __ptext44 410E                                  __ptext36 233C  
                                __ptext28 3D6C                                  __ptext61 40BC  
                                __ptext53 3AFA                                  __ptext45 3DD2  
                                __ptext37 3F36                                  __ptext29 3C8E  
                                __ptext70 1698                                  __ptext62 0B6E  
                                __ptext54 406C                                  __ptext46 40D6  
                                __ptext38 2A84                                  __ptext71 17DE  
                                __ptext63 20AE                                  __ptext55 1E00  
                                __ptext47 4032                                  __ptext39 4100  
                                __ptext80 1FCC                                  __ptext72 3DA0  
                                __ptext64 304C                                  __ptext56 126E  
                                __ptext48 32AE                                  __ptext81 3EE0  
                                __ptext73 3EB4                                  __ptext65 3652  
                                __ptext57 218C                                  __ptext49 25BC  
                                __ptext90 318C                                  __ptext82 2D76  
                                __ptext74 3B90                                  __ptext66 2BFE  
                                __ptext58 3FAA                                  __ptext91 39FA  
                                __ptext83 154A                                  __ptext75 2762  
                                __ptext67 4012                                  __ptext59 1D12  
                                __ptext92 1922                                  __ptext84 0DFC  
                                __ptext76 333C                                  __ptext93 28FC  
                                __ptext85 3E02                                  __ptext77 1A3A  
                                __ptext69 4118                                  __ptext94 29C0  
                                __ptext86 2412                                  __ptext78 30EE  
                                __ptext95 2264                                  __ptext87 3738  
                                __ptext79 1C20                                  __ptext96 3B46  
                                __ptext88 2E30                                  __ptext97 2EEA  
                                __ptext89 3C18                                  __ptext98 2FA0  
                                __ptext99 2CBA                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                 __size_of_terminal_at_hand 0062  
                                _bootload 3BD6                          __size_of_sprintf 045A  
                    terminal_at_hand@hand 00B1                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 33CA                             __size_of_main 0070  
                       ?_USBCtrlEPService 002D                              _month_length 20AE  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0047  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 29C0  
                                _outPipes 00C9                          ??_ringbuf_delete 0062  
                    _USBCtrlTrfOutHandler 39FA                                  int$flags 0059  
                            _ringbuf_init 3A56                                  atoi@sign 006A  
               _USBCtrlEPAllowStatusStage 28FC                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0804                             _terminal_time 045A  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0011  
                            ??_print_time 0091                  CDCTxService@byte_to_send 006B  
                          main_init@usbrx 0200                            main_init@usbtx 07B5  
                             ??_main_init 0091                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002D             USBCtrlTrfTxService@byteToSend 002D  
            I2C_LCD_SetCursor@row_offsets 0067                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002D  
                USBStdFeatureReqHandler@p 0045                          get_quot_rem@quot 0079  
               terminal_task@command_init 00FB                         RTCC_to_caltime@tm 0062  
                                intlevel2 0000                                 sprintf@ap 0083  
                               sprintf@cp 0085                                 sprintf@sp 006C  
                  __size_of_USBDeviceInit 0162   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3E30  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 3E02  
                        ___lwmod@dividend 0067              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00B4                       terminal_at_hand@min 00B3  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 3220  
                __end_of_epoch_to_caltime 126E                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3                __end_of_terminal_operation 2762  
                      __end_of_print_time 34E0                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002E                     ?_USBCtrlTrfOutHandler 002D  
                             _ringbuf_pop 2830                               _ringbuf_num 1D12  
                             _ringbuf_put 25BC                               _putUSBUSART 3FF0  
                     _USBCtrlTrfRxService 1922                               _timer0_init 3C54  
                      _USBWakeFromSuspend 3DA0                               _timer1_init 3AAA  
                             _timer3_init 3E5C                            ?_terminal_task 0194  
                          ?_terminal_time 00B6                   _USBStdFeatureReqHandler 0DFC  
                      _USBCheckCDCRequest 2412                       _USBCtrlTrfTxService 2264  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                                sprintf@c 008C                                  sprintf@f 006E  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 406C  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0069  
                       caltime_to_RTCC@tm 0069                         ??_caltime_to_RTCC 006B  
                   ??_USBCtrlTrfInHandler 002E                     _USBAlternateInterface 0029  
                         ___lwmod@counter 006B                        terminal_at_hand@tx 00AF  
                     ?_USBCheckCDCRequest 002D                 i2USBTransferOnePacket@dir 002D  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 0019                    __size_of_I2C_LCD_Clear 001A  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                  ?_USBCtrlEPAllowDataStage 002D  
                          _get_string_usb 3AFA                      ?_USBCtrlTrfTxService 002D  
               __end_of_ringbuf_backspace 32AE              _USBStatusStageTimeoutCounter 0015  
                   __size_of_I2C_LCD_Puts 006A                     __size_of_I2C_LCD_init 008C  
                    ??_USBWakeFromSuspend 0041                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 13E8                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr FD67                          ??_RTCC_from_RTCC 0088  
