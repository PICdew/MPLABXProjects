

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 19:14:55 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataBANK0
    55  001F1E                     __pidataBANK0:
    56                           	opt stack 0
    57                           
    58                           ;initializer for I2C_LCD_SetCursor@F8672
    59  001F1E  00                 	db	0
    60  001F1F  40                 	db	64
    61  0000                     _ANCON0	set	3912
    62  0000                     _ANCON1	set	3913
    63  0000                     _T5CONbits	set	3874
    64  0000                     _ADRES	set	4035
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _ADCON1bits	set	4033
    67  0000                     _BAUDCON1bits	set	3966
    68  0000                     _CTMUCONH	set	4019
    69  0000                     _CTMUCONHbits	set	4019
    70  0000                     _CTMUCONL	set	4018
    71  0000                     _CTMUCONLbits	set	4018
    72  0000                     _CTMUICON	set	4017
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _INTCONbits	set	4082
    75  0000                     _IPR1bits	set	3999
    76  0000                     _IPR2bits	set	4002
    77  0000                     _IPR5bits	set	3993
    78  0000                     _OSCCONbits	set	4051
    79  0000                     _OSCTUNEbits	set	3995
    80  0000                     _PIE1bits	set	3997
    81  0000                     _PIE2bits	set	4000
    82  0000                     _PIE5bits	set	3985
    83  0000                     _PIR1bits	set	3998
    84  0000                     _PIR2bits	set	4001
    85  0000                     _PIR5bits	set	3992
    86  0000                     _RCREG1	set	4015
    87  0000                     _RCSTA1bits	set	4012
    88  0000                     _SPBRG1	set	4016
    89  0000                     _SPBRGH1	set	3967
    90  0000                     _SSP1ADD	set	4040
    91  0000                     _SSP1BUF	set	4041
    92  0000                     _SSP1CON1	set	4038
    93  0000                     _SSP1CON2	set	4037
    94  0000                     _SSP1CON2bits	set	4037
    95  0000                     _SSP1STAT	set	4039
    96  0000                     _T0CONbits	set	4053
    97  0000                     _T1CONbits	set	4045
    98  0000                     _T3CONbits	set	3961
    99  0000                     _TMR1H	set	4047
   100  0000                     _TRISA	set	3986
   101  0000                     _TRISB	set	3987
   102  0000                     _TRISC	set	3988
   103  0000                     _TXREG1	set	4014
   104  0000                     _TXSTA1bits	set	4013
   105  0000                     _BCL1IF	set	32011
   106  0000                     _LATB2	set	31826
   107  0000                     _LATB3	set	31827
   108  0000                     _LATB6	set	31830
   109  0000                     _LATB7	set	31831
   110  0000                     _SSP1IF	set	31987
   111                           
   112                           	psect	smallconst
   113  000F00                     __psmallconst:
   114                           	opt stack 0
   115  000F00  00                 	db	0
   116  000F01                     STR_2:
   117  000F01  20                 	db	32
   118  000F02  20                 	db	32
   119  000F03  43                 	db	67	;'C'
   120  000F04  54                 	db	84	;'T'
   121  000F05  4D                 	db	77	;'M'
   122  000F06  55                 	db	85	;'U'
   123  000F07  20                 	db	32
   124  000F08  20                 	db	32
   125  000F09  00                 	db	0
   126  000F0A                     STR_1:
   127  000F0A  31                 	db	49	;'1'
   128  000F0B  38                 	db	56	;'8'
   129  000F0C  46                 	db	70	;'F'
   130  000F0D  32                 	db	50	;'2'
   131  000F0E  37                 	db	55	;'7'
   132  000F0F  4A                 	db	74	;'J'
   133  000F10  35                 	db	53	;'5'
   134  000F11  33                 	db	51	;'3'
   135  000F12  00                 	db	0
   136                           
   137                           ; #config settings
   138  000F13  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           	psect	cinit
   141  001C82                     __pcinit:
   142                           	opt stack 0
   143  001C82                     start_initialization:
   144                           	opt stack 0
   145  001C82                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Clear objects allocated to BANK2 (250 bytes)
   149  001C82  EE02  F000         	lfsr	0,__pbssBANK2
   150  001C86  0EFA               	movlw	250
   151  001C88                     clear_0:
   152  001C88  6AEE               	clrf	postinc0,c
   153  001C8A  06E8               	decf	wreg,f,c
   154  001C8C  E1FD               	bnz	clear_0
   155                           
   156                           ; Clear objects allocated to BANK1 (250 bytes)
   157  001C8E  EE01  F000         	lfsr	0,__pbssBANK1
   158  001C92  0EFA               	movlw	250
   159  001C94                     clear_1:
   160  001C94  6AEE               	clrf	postinc0,c
   161  001C96  06E8               	decf	wreg,f,c
   162  001C98  E1FD               	bnz	clear_1
   163                           
   164                           ; Clear objects allocated to COMRAM (31 bytes)
   165  001C9A  EE00  F031         	lfsr	0,__pbssCOMRAM
   166  001C9E  0E1F               	movlw	31
   167  001CA0                     clear_2:
   168  001CA0  6AEE               	clrf	postinc0,c
   169  001CA2  06E8               	decf	wreg,f,c
   170  001CA4  E1FD               	bnz	clear_2
   171                           
   172                           ; Initialize objects allocated to BANK0 (2 bytes)
   173                           ; load TBLPTR registers with __pidataBANK0
   174  001CA6  0E1E               	movlw	low __pidataBANK0
   175  001CA8  6EF6               	movwf	tblptrl,c
   176  001CAA  0E1F               	movlw	high __pidataBANK0
   177  001CAC  6EF7               	movwf	tblptrh,c
   178  001CAE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   179  001CB0  6EF8               	movwf	tblptru,c
   180  001CB2  0009               	tblrd		*+	;fetch initializer
   181  001CB4  CFF5 F07D          	movff	tablat,__pdataBANK0
   182  001CB8  0009               	tblrd		*+	;fetch initializer
   183  001CBA  CFF5 F07E          	movff	tablat,__pdataBANK0+1
   184  001CBE                     end_of_initialization:
   185                           	opt stack 0
   186  001CBE                     __end_of__initialization:
   187                           	opt stack 0
   188  001CBE  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   189  001CC0  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   190  001CC2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   191  001CC4  6EF8               	movwf	tblptru,c
   192  001CC6  0E0F               	movlw	high __Lsmallconst
   193  001CC8  6EF7               	movwf	tblptrh,c
   194  001CCA  0100               	movlb	0
   195  001CCC  EF42  F009         	goto	_main	;jump to C main() function
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           
   203                           	psect	bssCOMRAM
   204  000031                     __pbssCOMRAM:
   205                           	opt stack 0
   206  000031                     _ms:
   207                           	opt stack 0
   208  000031                     	ds	4
   209  000035                     _d1:
   210                           	opt stack 0
   211  000035                     	ds	3
   212  000038                     _ctmu_value:
   213                           	opt stack 0
   214  000038                     	ds	2
   215  00003A                     millis_timer@cnt:
   216                           	opt stack 0
   217  00003A                     	ds	2
   218  00003C                     _rx_buf:
   219                           	opt stack 0
   220  00003C                     	ds	8
   221  000044                     _tx_buf:
   222                           	opt stack 0
   223  000044                     	ds	8
   224  00004C                     _ct:
   225                           	opt stack 0
   226  00004C                     	ds	4
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	dataBANK0
   235  00007D                     __pdataBANK0:
   236                           	opt stack 0
   237  00007D                     I2C_LCD_SetCursor@F8672:
   238                           	opt stack 0
   239  00007D                     	ds	2
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	bssBANK1
   248  000100                     __pbssBANK1:
   249                           	opt stack 0
   250  000100                     main_init@txbuf:
   251                           	opt stack 0
   252  000100                     	ds	250
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	bssBANK2
   261  000200                     __pbssBANK2:
   262                           	opt stack 0
   263  000200                     main_init@rxbuf:
   264                           	opt stack 0
   265  000200                     	ds	250
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	cstackBANK0
   274  000060                     __pcstackBANK0:
   275                           	opt stack 0
   276  000060                     ??_timer0_init:
   277  000060                     ??_timer3_init:
   278  000060                     ??_I2C_IdleCheck:
   279  000060                     ?_ringbuf_num:
   280                           	opt stack 0
   281  000060                     ?___lldiv:
   282                           	opt stack 0
   283  000060                     timer1_init@clock_select:
   284                           	opt stack 0
   285  000060                     ringbuf_init@rb:
   286                           	opt stack 0
   287  000060                     ringbuf_num@rb:
   288                           	opt stack 0
   289  000060                     Delay_ms@ms:
   290                           	opt stack 0
   291  000060                     ___lldiv@dividend:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0x0
   295  000060                     	ds	1
   296  000061                     ??_timer1_init:
   297  000061                     timer0_init@prescaler:
   298                           	opt stack 0
   299  000061                     timer3_init@prescaler:
   300                           	opt stack 0
   301  000061                     I2C_IdleCheck@mask:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x1
   305  000061                     	ds	1
   306  000062                     ??_ringbuf_num:
   307  000062                     ??_Delay_ms:
   308  000062                     timer1_init@prescaler:
   309                           	opt stack 0
   310  000062                     I2C_Start@rw:
   311                           	opt stack 0
   312  000062                     I2C_Send@data:
   313                           	opt stack 0
   314  000062                     ringbuf_init@internal_buf:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x2
   318  000062                     	ds	1
   319  000063                     I2C_Start@adrs:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x3
   323  000063                     	ds	1
   324  000064                     I2C_LCD_Command@c:
   325                           	opt stack 0
   326  000064                     ringbuf_init@bufsize:
   327                           	opt stack 0
   328  000064                     I2C_LCD_Puts@s:
   329                           	opt stack 0
   330  000064                     ___lldiv@divisor:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x4
   334  000064                     	ds	1
   335  000065                     I2C_LCD_Command@ans:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x5
   339  000065                     	ds	1
   340  000066                     ??_I2C_LCD_Clear:
   341  000066                     ??_I2C_LCD_Puts:
   342  000066                     I2C_LCD_SetCursor@row:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x6
   346  000066                     	ds	1
   347  000067                     I2C_LCD_SetCursor@row_offsets:
   348                           	opt stack 0
   349  000067                     I2C_LCD_Puts@ans:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x7
   353  000067                     	ds	1
   354  000068                     ringbuf_put@rb:
   355                           	opt stack 0
   356  000068                     ringbuf_pop@rb:
   357                           	opt stack 0
   358  000068                     ___lldiv@quotient:
   359                           	opt stack 0
   360                           
   361                           ; 4 bytes @ 0x8
   362  000068                     	ds	1
   363  000069                     I2C_LCD_SetCursor@col:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x9
   367  000069                     	ds	1
   368  00006A                     ??_ringbuf_pop:
   369  00006A                     ringbuf_put@asciicode:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0xA
   373  00006A                     	ds	1
   374  00006B                     ??_ringbuf_put:
   375                           
   376                           ; 0 bytes @ 0xB
   377  00006B                     	ds	1
   378  00006C                     ___lldiv@counter:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0xC
   382  00006C                     	ds	1
   383  00006D                     ?_CTMU_read:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0xD
   387  00006D                     	ds	1
   388  00006E                     ringbuf_pop@ret:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0xE
   392  00006E                     	ds	1
   393  00006F                     ??_CTMU_read:
   394  00006F                     tx_send@asciicode:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0xF
   398  00006F                     	ds	1
   399  000070                     CTMU_read@ch:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x10
   403  000070                     	ds	1
   404  000071                     CTMU_read@sum:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x11
   408  000071                     	ds	4
   409  000075                     CTMU_read@i:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x15
   413  000075                     	ds	1
   414  000076                     ?___lwdiv:
   415                           	opt stack 0
   416  000076                     ___lwdiv@dividend:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x16
   420  000076                     	ds	2
   421  000078                     ___lwdiv@divisor:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x18
   425  000078                     	ds	2
   426  00007A                     ___lwdiv@quotient:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x1A
   430  00007A                     	ds	2
   431  00007C                     ___lwdiv@counter:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x1C
   435  00007C                     	ds	1
   436  00007D                     tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443                           ; 0 bytes @ 0x1D
   444                           
   445                           	psect	cstackCOMRAM
   446  000001                     __pcstackCOMRAM:
   447                           	opt stack 0
   448  000001                     ?i2_ringbuf_num:
   449                           	opt stack 0
   450  000001                     ?i2___lldiv:
   451                           	opt stack 0
   452  000001                     i2ringbuf_num@rb:
   453                           	opt stack 0
   454  000001                     i2___lldiv@dividend:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x0
   458  000001                     	ds	2
   459  000003                     ??i2_ringbuf_num:
   460                           
   461                           ; 0 bytes @ 0x2
   462  000003                     	ds	2
   463  000005                     i2___lldiv@divisor:
   464                           	opt stack 0
   465                           
   466                           ; 4 bytes @ 0x4
   467  000005                     	ds	4
   468  000009                     i2ringbuf_put@rb:
   469                           	opt stack 0
   470  000009                     i2ringbuf_pop@rb:
   471                           	opt stack 0
   472  000009                     i2___lldiv@quotient:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x8
   476  000009                     	ds	2
   477  00000B                     ??i2_ringbuf_pop:
   478  00000B                     i2ringbuf_put@asciicode:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0xA
   482  00000B                     	ds	1
   483  00000C                     ??i2_ringbuf_put:
   484                           
   485                           ; 0 bytes @ 0xB
   486  00000C                     	ds	1
   487  00000D                     i2___lldiv@counter:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0xC
   491  00000D                     	ds	1
   492  00000E                     ?i2_CTMU_read:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0xD
   496  00000E                     	ds	1
   497  00000F                     i2ringbuf_pop@ret:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0xE
   501  00000F                     	ds	1
   502  000010                     ??i2_CTMU_read:
   503  000010                     UART_ISR@ascii:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0xF
   507  000010                     	ds	1
   508  000011                     i2CTMU_read@ch:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x10
   512  000011                     	ds	1
   513  000012                     i2CTMU_read@sum:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x11
   517  000012                     	ds	4
   518  000016                     i2CTMU_read@i:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x15
   522  000016                     	ds	1
   523  000017                     ?i2___lwdiv:
   524                           	opt stack 0
   525  000017                     i2___lwdiv@dividend:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x16
   529  000017                     	ds	2
   530  000019                     i2___lwdiv@divisor:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x18
   534  000019                     	ds	2
   535  00001B                     i2___lwdiv@quotient:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x1A
   539  00001B                     	ds	2
   540  00001D                     i2___lwdiv@counter:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x1C
   544  00001D                     	ds	1
   545  00001E                     button_timer_interrupt@bt:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x1D
   549  00001E                     	ds	2
   550  000020                     button_timer_interrupt@sw_value:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x1F
   554  000020                     	ds	1
   555  000021                     
   556                           ; 0 bytes @ 0x20
   557  000021                     	ds	2
   558  000023                     ??_ISR:
   559                           
   560                           ; 0 bytes @ 0x22
   561  000023                     	ds	14
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 83 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;		None               void
   581 ;; Registers used:
   582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels required when called:   10
   594 ;; This function calls:
   595 ;;		_CTMU_read
   596 ;;		_Delay_ms
   597 ;;		_I2C_LCD_Clear
   598 ;;		_I2C_LCD_Puts
   599 ;;		_I2C_LCD_SetCursor
   600 ;;		___lwdiv
   601 ;;		_main_init
   602 ;;		_ringbuf_num
   603 ;;		_ringbuf_pop
   604 ;;		_tx_send
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611  001284                     __ptext0:
   612                           	opt stack 0
   613  001284                     _main:
   614                           	opt stack 21
   615                           
   616                           ;main.c: 84: main_init();
   617                           
   618                           ;incstack = 0
   619  001284  ECA2  F00C         	call	_main_init	;wreg free
   620                           
   621                           ;main.c: 86: INTCONbits.GIE = 1;
   622  001288  8EF2               	bsf	intcon,7,c	;volatile
   623                           
   624                           ;main.c: 88: I2C_LCD_Clear();
   625  00128A  EC61  F00F         	call	_I2C_LCD_Clear	;wreg free
   626                           
   627                           ;main.c: 89: I2C_LCD_SetCursor(0, 0);
   628  00128E  0E00               	movlw	0
   629  001290  0100               	movlb	0	; () banked
   630  001292  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
   631  001294  0E00               	movlw	0
   632  001296  EC0A  F00F         	call	_I2C_LCD_SetCursor
   633                           
   634                           ;main.c: 90: I2C_LCD_Puts("18F27J53");
   635  00129A  0E0A               	movlw	low STR_1
   636  00129C  0100               	movlb	0	; () banked
   637  00129E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
   638  0012A0  0E0F               	movlw	high STR_1
   639  0012A2  0100               	movlb	0	; () banked
   640  0012A4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
   641  0012A6  EC69  F00D         	call	_I2C_LCD_Puts	;wreg free
   642                           
   643                           ;main.c: 91: I2C_LCD_SetCursor(0, 1);
   644  0012AA  0E01               	movlw	1
   645  0012AC  0100               	movlb	0	; () banked
   646  0012AE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
   647  0012B0  0E00               	movlw	0
   648  0012B2  EC0A  F00F         	call	_I2C_LCD_SetCursor
   649                           
   650                           ;main.c: 92: I2C_LCD_Puts("  CTMU  ");
   651  0012B6  0E01               	movlw	low STR_2
   652  0012B8  0100               	movlb	0	; () banked
   653  0012BA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
   654  0012BC  0E0F               	movlw	high STR_2
   655  0012BE  0100               	movlb	0	; () banked
   656  0012C0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
   657  0012C2  EC69  F00D         	call	_I2C_LCD_Puts	;wreg free
   658                           
   659                           ;main.c: 93: Delay_ms(200);
   660  0012C6  0E00               	movlw	0
   661  0012C8  0100               	movlb	0	; () banked
   662  0012CA  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
   663  0012CC  0EC8               	movlw	200
   664  0012CE  6F60               	movwf	Delay_ms@ms& (0+255),b
   665  0012D0  ECF4  F00E         	call	_Delay_ms	;wreg free
   666                           
   667                           ;main.c: 94: ctmu_value = 4 * CTMU_read(0) / 5;
   668  0012D4  0E00               	movlw	0
   669  0012D6  EC81  F00A         	call	_CTMU_read
   670  0012DA  0100               	movlb	0	; () banked
   671  0012DC  90D8               	bcf	status,0,c
   672  0012DE  376D               	rlcf	?_CTMU_read& (0+255),f,b
   673  0012E0  376E               	rlcf	(?_CTMU_read+1)& (0+255),f,b
   674  0012E2  0100               	movlb	0	; () banked
   675  0012E4  90D8               	bcf	status,0,c
   676  0012E6  376D               	rlcf	?_CTMU_read& (0+255),f,b
   677  0012E8  376E               	rlcf	(?_CTMU_read+1)& (0+255),f,b
   678  0012EA  C06D  F076         	movff	?_CTMU_read,___lwdiv@dividend
   679  0012EE  C06E  F077         	movff	?_CTMU_read+1,___lwdiv@dividend+1
   680  0012F2  0E00               	movlw	0
   681  0012F4  0100               	movlb	0	; () banked
   682  0012F6  6F79               	movwf	(___lwdiv@divisor+1)& (0+255),b
   683  0012F8  0E05               	movlw	5
   684  0012FA  6F78               	movwf	___lwdiv@divisor& (0+255),b
   685  0012FC  EC2D  F00D         	call	___lwdiv	;wreg free
   686  001300  C076  F038         	movff	?___lwdiv,_ctmu_value
   687  001304  C077  F039         	movff	?___lwdiv+1,_ctmu_value+1
   688  001308                     l2402:
   689                           
   690                           ;main.c: 97: if (ringbuf_num(&rx_buf)) {
   691  001308  0E3C               	movlw	low _rx_buf
   692  00130A  0100               	movlb	0	; () banked
   693  00130C  6F60               	movwf	ringbuf_num@rb& (0+255),b
   694  00130E  0E00               	movlw	high _rx_buf
   695  001310  0100               	movlb	0	; () banked
   696  001312  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
   697  001314  ECCB  F008         	call	_ringbuf_num	;wreg free
   698  001318  0100               	movlb	0	; () banked
   699  00131A  5160               	movf	?_ringbuf_num& (0+255),w,b
   700  00131C  0100               	movlb	0	; () banked
   701  00131E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
   702  001320  B4D8               	btfsc	status,2,c
   703  001322  D00A               	goto	l2406
   704                           
   705                           ; BSR set to: 0
   706                           ;main.c: 98: tx_send(ringbuf_pop(&rx_buf));
   707  001324  0E3C               	movlw	low _rx_buf
   708  001326  0100               	movlb	0	; () banked
   709  001328  6F68               	movwf	ringbuf_pop@rb& (0+255),b
   710  00132A  0E00               	movlw	high _rx_buf
   711  00132C  0100               	movlb	0	; () banked
   712  00132E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
   713  001330  EC1B  F00A         	call	_ringbuf_pop	;wreg free
   714  001334  EC53  F00F         	call	_tx_send
   715  001338                     l2406:
   716                           
   717                           ;main.c: 99: }
   718                           ;main.c: 100: if (ct.flag.pressing)LATB7 = 1;
   719  001338  A04F               	btfss	_ct+3,0,c
   720  00133A  D002               	goto	l362
   721  00133C  8E8A               	bsf	3978,7,c	;volatile
   722  00133E  D001               	goto	l363
   723  001340                     l362:
   724                           
   725                           ;main.c: 101: else LATB7 = 0;
   726  001340  9E8A               	bcf	3978,7,c	;volatile
   727  001342                     l363:
   728                           
   729                           ;main.c: 102: if (ct.flag.long_holding_2)LATB6 = 1;
   730  001342  A44F               	btfss	_ct+3,2,c
   731  001344  D002               	goto	l364
   732  001346  8C8A               	bsf	3978,6,c	;volatile
   733  001348  D001               	goto	l365
   734  00134A                     l364:
   735                           
   736                           ;main.c: 103: else LATB6 = 0;
   737  00134A  9C8A               	bcf	3978,6,c	;volatile
   738  00134C                     l365:
   739                           
   740                           ;main.c: 104: if (ct.flag.long_holding_4)LATB3 = 1;
   741  00134C  A84F               	btfss	_ct+3,4,c
   742  00134E  D002               	goto	l366
   743  001350  868A               	bsf	3978,3,c	;volatile
   744  001352  D001               	goto	l367
   745  001354                     l366:
   746                           
   747                           ;main.c: 105: else LATB3 = 0;
   748  001354  968A               	bcf	3978,3,c	;volatile
   749  001356                     l367:
   750                           
   751                           ;main.c: 106: if (ct.flag.long_holding_5)LATB2 = 1;
   752  001356  AA4F               	btfss	_ct+3,5,c
   753  001358  D002               	goto	l368
   754  00135A  848A               	bsf	3978,2,c	;volatile
   755  00135C  D7D5               	goto	l2402
   756  00135E                     l368:
   757                           
   758                           ;main.c: 107: else LATB2 = 0;
   759  00135E  948A               	bcf	3978,2,c	;volatile
   760  001360  D7D3               	goto	l2402
   761  001362                     __end_of_main:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           intcon	equ	0xFF2
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _tx_send *****************
   773 ;; Defined at:
   774 ;;		line 222 in file "../My_header\My_header.h"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  asciicode       1    wreg     const unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  asciicode       1   15[BANK0 ] const unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;Total ram usage:        1 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    6
   795 ;; This function calls:
   796 ;;		_ringbuf_put
   797 ;; This function is called by:
   798 ;;		_main
   799 ;;		_tx_sendn
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text1
   804  001EA6                     __ptext1:
   805                           	opt stack 0
   806  001EA6                     _tx_send:
   807                           	opt stack 24
   808                           
   809                           ;incstack = 0
   810                           ;tx_send@asciicode stored from wreg
   811  001EA6  0100               	movlb	0	; () banked
   812  001EA8  6F6F               	movwf	tx_send@asciicode& (0+255),b
   813                           
   814                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
   815  001EAA  0E44               	movlw	low _tx_buf
   816  001EAC  0100               	movlb	0	; () banked
   817  001EAE  6F68               	movwf	ringbuf_put@rb& (0+255),b
   818  001EB0  0E00               	movlw	high _tx_buf
   819  001EB2  0100               	movlb	0	; () banked
   820  001EB4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
   821  001EB6  C06F  F06A         	movff	tx_send@asciicode,ringbuf_put@asciicode
   822  001EBA  ECB1  F009         	call	_ringbuf_put	;wreg free
   823                           
   824                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
   825  001EBE  889D               	bsf	3997,4,c	;volatile
   826  001EC0  0012               	return		;funcret
   827  001EC2                     __end_of_tx_send:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           intcon	equ	0xFF2
   834                           postinc0	equ	0xFEE
   835                           wreg	equ	0xFE8
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function _ringbuf_put *****************
   839 ;; Defined at:
   840 ;;		line 39 in file "../My_header\My_ringbuf.h"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
   843 ;;		 -> rx_buf(8), tx_buf(8), 
   844 ;;  asciicode       1   10[BANK0 ] unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;		None               void
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   856 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;Total ram usage:        7 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    5
   863 ;; This function calls:
   864 ;;		_ringbuf_num
   865 ;; This function is called by:
   866 ;;		_tx_send
   867 ;;		_ringbuf_put_num
   868 ;;		_ringbuf_put_str
   869 ;;		_tx_sends
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text2
   874  001362                     __ptext2:
   875                           	opt stack 0
   876  001362                     _ringbuf_put:
   877                           	opt stack 24
   878                           
   879                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
   880                           
   881                           ;incstack = 0
   882  001362  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
   883  001366  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
   884  00136A  ECCB  F008         	call	_ringbuf_num	;wreg free
   885  00136E  0100               	movlb	0	; () banked
   886  001370  EE20 F002          	lfsr	2,2
   887  001374  5168               	movf	ringbuf_put@rb& (0+255),w,b
   888  001376  26D9               	addwf	fsr2l,f,c
   889  001378  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   890  00137A  22DA               	addwfc	fsr2h,f,c
   891  00137C  50DE               	movf	postinc2,w,c
   892  00137E  0100               	movlb	0	; () banked
   893  001380  5D60               	subwf	?_ringbuf_num& (0+255),w,b
   894  001382  50DE               	movf	postinc2,w,c
   895  001384  0100               	movlb	0	; () banked
   896  001386  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
   897  001388  B0D8               	btfsc	status,0,c
   898  00138A  0012               	return	
   899                           
   900                           ; BSR set to: 0
   901                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
   902  00138C  0100               	movlb	0	; () banked
   903  00138E  EE20 F004          	lfsr	2,4
   904  001392  5168               	movf	ringbuf_put@rb& (0+255),w,b
   905  001394  26D9               	addwf	fsr2l,f,c
   906  001396  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   907  001398  22DA               	addwfc	fsr2h,f,c
   908  00139A  CFDE F06B          	movff	postinc2,??_ringbuf_put
   909  00139E  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
   910  0013A2  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
   911  0013A6  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
   912  0013AA  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
   913  0013AE  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
   914  0013B2  0100               	movlb	0	; () banked
   915  0013B4  516B               	movf	??_ringbuf_put& (0+255),w,b
   916  0013B6  0100               	movlb	0	; () banked
   917  0013B8  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
   918  0013BA  6ED9               	movwf	fsr2l,c
   919  0013BC  0100               	movlb	0	; () banked
   920  0013BE  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
   921  0013C0  0100               	movlb	0	; () banked
   922  0013C2  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
   923  0013C4  6EDA               	movwf	fsr2h,c
   924  0013C6  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
   925                           
   926                           ; BSR set to: 0
   927                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
   928  0013CA  0100               	movlb	0	; () banked
   929  0013CC  EE20 F002          	lfsr	2,2
   930  0013D0  5168               	movf	ringbuf_put@rb& (0+255),w,b
   931  0013D2  26D9               	addwf	fsr2l,f,c
   932  0013D4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   933  0013D6  22DA               	addwfc	fsr2h,f,c
   934  0013D8  0100               	movlb	0	; () banked
   935  0013DA  EE10 F004          	lfsr	1,4
   936  0013DE  5168               	movf	ringbuf_put@rb& (0+255),w,b
   937  0013E0  26E1               	addwf	fsr1l,f,c
   938  0013E2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   939  0013E4  22E2               	addwfc	fsr1h,f,c
   940  0013E6  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
   941  0013EA  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
   942  0013EE  0E01               	movlw	1
   943  0013F0  0100               	movlb	0	; () banked
   944  0013F2  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
   945  0013F4  0E00               	movlw	0
   946  0013F6  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
   947  0013F8  50DE               	movf	postinc2,w,c
   948  0013FA  0100               	movlb	0	; () banked
   949  0013FC  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
   950  0013FE  50DE               	movf	postinc2,w,c
   951  001400  0100               	movlb	0	; () banked
   952  001402  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
   953  001404  B0D8               	btfsc	status,0,c
   954  001406  D00B               	goto	l1880
   955                           
   956                           ; BSR set to: 0
   957  001408  0100               	movlb	0	; () banked
   958  00140A  EE20 F004          	lfsr	2,4
   959  00140E  5168               	movf	ringbuf_put@rb& (0+255),w,b
   960  001410  26D9               	addwf	fsr2l,f,c
   961  001412  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   962  001414  22DA               	addwfc	fsr2h,f,c
   963  001416  2ADE               	incf	postinc2,f,c
   964  001418  0E00               	movlw	0
   965  00141A  22DD               	addwfc	postdec2,f,c
   966  00141C  0012               	return	
   967  00141E                     l1880:
   968                           
   969                           ; BSR set to: 0
   970                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
   971  00141E  0100               	movlb	0	; () banked
   972  001420  EE20 F004          	lfsr	2,4
   973  001424  5168               	movf	ringbuf_put@rb& (0+255),w,b
   974  001426  26D9               	addwf	fsr2l,f,c
   975  001428  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   976  00142A  22DA               	addwfc	fsr2h,f,c
   977  00142C  0E00               	movlw	0
   978  00142E  6EDE               	movwf	postinc2,c
   979  001430  0E00               	movlw	0
   980  001432  6EDD               	movwf	postdec2,c
   981                           
   982                           ; BSR set to: 0
   983  001434  0012               	return	
   984  001436                     __end_of_ringbuf_put:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postinc1	equ	0xFE6
   994                           postdec1	equ	0xFE5
   995                           fsr1h	equ	0xFE2
   996                           fsr1l	equ	0xFE1
   997                           indf2	equ	0xFDF
   998                           postinc2	equ	0xFDE
   999                           postdec2	equ	0xFDD
  1000                           fsr2h	equ	0xFDA
  1001                           fsr2l	equ	0xFD9
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _ringbuf_pop *****************
  1005 ;; Defined at:
  1006 ;;		line 64 in file "../My_header\My_ringbuf.h"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  1009 ;;		 -> rx_buf(8), tx_buf(8), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  ret             1   14[BANK0 ] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      unsigned char 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1024 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1025 ;;Total ram usage:        7 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    5
  1028 ;; This function calls:
  1029 ;;		_ringbuf_num
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text3
  1036  001436                     __ptext3:
  1037                           	opt stack 0
  1038  001436                     _ringbuf_pop:
  1039                           	opt stack 25
  1040                           
  1041                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;incstack = 0
  1045  001436  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  1046  00143A  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  1047  00143E  ECCB  F008         	call	_ringbuf_num	;wreg free
  1048  001442  0100               	movlb	0	; () banked
  1049  001444  5160               	movf	?_ringbuf_num& (0+255),w,b
  1050  001446  0100               	movlb	0	; () banked
  1051  001448  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1052  00144A  B4D8               	btfsc	status,2,c
  1053  00144C  D058               	goto	l2002
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  1057  00144E  0100               	movlb	0	; () banked
  1058  001450  EE20 F006          	lfsr	2,6
  1059  001454  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1060  001456  26D9               	addwf	fsr2l,f,c
  1061  001458  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1062  00145A  22DA               	addwfc	fsr2h,f,c
  1063  00145C  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  1064  001460  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  1065  001464  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  1066  001468  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  1067  00146C  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  1068  001470  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  1069  001474  0100               	movlb	0	; () banked
  1070  001476  516A               	movf	??_ringbuf_pop& (0+255),w,b
  1071  001478  0100               	movlb	0	; () banked
  1072  00147A  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  1073  00147C  6ED9               	movwf	fsr2l,c
  1074  00147E  0100               	movlb	0	; () banked
  1075  001480  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  1076  001482  0100               	movlb	0	; () banked
  1077  001484  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  1078  001486  6EDA               	movwf	fsr2h,c
  1079  001488  50DF               	movf	indf2,w,c
  1080  00148A  0100               	movlb	0	; () banked
  1081  00148C  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  1085  00148E  0100               	movlb	0	; () banked
  1086  001490  EE20 F002          	lfsr	2,2
  1087  001494  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1088  001496  26D9               	addwf	fsr2l,f,c
  1089  001498  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1090  00149A  22DA               	addwfc	fsr2h,f,c
  1091  00149C  0100               	movlb	0	; () banked
  1092  00149E  EE10 F006          	lfsr	1,6
  1093  0014A2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1094  0014A4  26E1               	addwf	fsr1l,f,c
  1095  0014A6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1096  0014A8  22E2               	addwfc	fsr1h,f,c
  1097  0014AA  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  1098  0014AE  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  1099  0014B2  0E01               	movlw	1
  1100  0014B4  0100               	movlb	0	; () banked
  1101  0014B6  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  1102  0014B8  0E00               	movlw	0
  1103  0014BA  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  1104  0014BC  50DE               	movf	postinc2,w,c
  1105  0014BE  0100               	movlb	0	; () banked
  1106  0014C0  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  1107  0014C2  50DE               	movf	postinc2,w,c
  1108  0014C4  0100               	movlb	0	; () banked
  1109  0014C6  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  1110  0014C8  B0D8               	btfsc	status,0,c
  1111  0014CA  D00B               	goto	l1994
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  1115  0014CC  0100               	movlb	0	; () banked
  1116  0014CE  EE20 F006          	lfsr	2,6
  1117  0014D2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1118  0014D4  26D9               	addwf	fsr2l,f,c
  1119  0014D6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1120  0014D8  22DA               	addwfc	fsr2h,f,c
  1121  0014DA  2ADE               	incf	postinc2,f,c
  1122  0014DC  0E00               	movlw	0
  1123  0014DE  22DD               	addwfc	postdec2,f,c
  1124                           
  1125                           ;My_header\My_ringbuf.h: 69: } else {
  1126  0014E0  D00B               	goto	l1996
  1127  0014E2                     l1994:
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  1131  0014E2  0100               	movlb	0	; () banked
  1132  0014E4  EE20 F006          	lfsr	2,6
  1133  0014E8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1134  0014EA  26D9               	addwf	fsr2l,f,c
  1135  0014EC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1136  0014EE  22DA               	addwfc	fsr2h,f,c
  1137  0014F0  0E00               	movlw	0
  1138  0014F2  6EDE               	movwf	postinc2,c
  1139  0014F4  0E00               	movlw	0
  1140  0014F6  6EDD               	movwf	postdec2,c
  1141  0014F8                     l1996:
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;My_header\My_ringbuf.h: 71: }
  1145                           ;My_header\My_ringbuf.h: 72: return ret;
  1146  0014F8  0100               	movlb	0	; () banked
  1147  0014FA  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;My_header\My_ringbuf.h: 73: } else {
  1151                           
  1152                           ; BSR set to: 0
  1153  0014FC  0012               	return	
  1154  0014FE                     l2002:
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;My_header\My_ringbuf.h: 74: return 0;
  1158  0014FE  0E00               	movlw	0
  1159                           
  1160                           ; BSR set to: 0
  1161  001500  0012               	return	
  1162  001502                     __end_of_ringbuf_pop:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postinc1	equ	0xFE6
  1172                           postdec1	equ	0xFE5
  1173                           fsr1h	equ	0xFE2
  1174                           fsr1l	equ	0xFE1
  1175                           indf2	equ	0xFDF
  1176                           postinc2	equ	0xFDE
  1177                           postdec2	equ	0xFDD
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _ringbuf_num *****************
  1183 ;; Defined at:
  1184 ;;		line 31 in file "../My_header\My_ringbuf.h"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  1187 ;;		 -> rx_buf(8), tx_buf(8), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2    0[BANK0 ] unsigned int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;Total ram usage:        8 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    4
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_ringbuf_put
  1210 ;;		_ringbuf_pop
  1211 ;;		_main
  1212 ;;		_ringbuf_backspace
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text4
  1217  001196                     __ptext4:
  1218                           	opt stack 0
  1219  001196                     _ringbuf_num:
  1220                           	opt stack 24
  1221                           
  1222                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;incstack = 0
  1226  001196  0100               	movlb	0	; () banked
  1227  001198  EE20 F006          	lfsr	2,6
  1228  00119C  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1229  00119E  26D9               	addwf	fsr2l,f,c
  1230  0011A0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1231  0011A2  22DA               	addwfc	fsr2h,f,c
  1232  0011A4  0100               	movlb	0	; () banked
  1233  0011A6  EE10 F004          	lfsr	1,4
  1234  0011AA  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1235  0011AC  26E1               	addwf	fsr1l,f,c
  1236  0011AE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1237  0011B0  22E2               	addwfc	fsr1h,f,c
  1238  0011B2  50DE               	movf	postinc2,w,c
  1239  0011B4  5CE6               	subwf	postinc1,w,c
  1240  0011B6  50DE               	movf	postinc2,w,c
  1241  0011B8  58E6               	subwfb	postinc1,w,c
  1242  0011BA  A0D8               	btfss	status,0,c
  1243  0011BC  D028               	goto	l1780
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  1247  0011BE  0100               	movlb	0	; () banked
  1248  0011C0  EE20 F004          	lfsr	2,4
  1249  0011C4  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1250  0011C6  26D9               	addwf	fsr2l,f,c
  1251  0011C8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1252  0011CA  22DA               	addwfc	fsr2h,f,c
  1253  0011CC  CFDE F062          	movff	postinc2,??_ringbuf_num
  1254  0011D0  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  1255  0011D4  0100               	movlb	0	; () banked
  1256  0011D6  EE20 F006          	lfsr	2,6
  1257  0011DA  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1258  0011DC  26D9               	addwf	fsr2l,f,c
  1259  0011DE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1260  0011E0  22DA               	addwfc	fsr2h,f,c
  1261  0011E2  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  1262  0011E6  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  1263  0011EA  0100               	movlb	0	; () banked
  1264  0011EC  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  1265  0011EE  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  1266  0011F0  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  1267  0011F2  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  1268  0011F4  0100               	movlb	0	; () banked
  1269  0011F6  5162               	movf	??_ringbuf_num& (0+255),w,b
  1270  0011F8  0100               	movlb	0	; () banked
  1271  0011FA  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  1272  0011FC  0100               	movlb	0	; () banked
  1273  0011FE  6F60               	movwf	?_ringbuf_num& (0+255),b
  1274  001200  0100               	movlb	0	; () banked
  1275  001202  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1276  001204  0100               	movlb	0	; () banked
  1277  001206  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  1278  001208  0100               	movlb	0	; () banked
  1279  00120A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;My_header\My_ringbuf.h: 34: } else {
  1283                           
  1284                           ; BSR set to: 0
  1285  00120C  0012               	return	
  1286  00120E                     l1780:
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  1290  00120E  0100               	movlb	0	; () banked
  1291  001210  EE20 F004          	lfsr	2,4
  1292  001214  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1293  001216  26D9               	addwf	fsr2l,f,c
  1294  001218  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1295  00121A  22DA               	addwfc	fsr2h,f,c
  1296  00121C  CFDE F062          	movff	postinc2,??_ringbuf_num
  1297  001220  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  1298  001224  0100               	movlb	0	; () banked
  1299  001226  EE20 F002          	lfsr	2,2
  1300  00122A  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1301  00122C  26D9               	addwf	fsr2l,f,c
  1302  00122E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1303  001230  22DA               	addwfc	fsr2h,f,c
  1304  001232  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  1305  001236  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  1306  00123A  0100               	movlb	0	; () banked
  1307  00123C  EE20 F006          	lfsr	2,6
  1308  001240  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1309  001242  26D9               	addwf	fsr2l,f,c
  1310  001244  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1311  001246  22DA               	addwfc	fsr2h,f,c
  1312  001248  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  1313  00124C  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  1314  001250  0100               	movlb	0	; () banked
  1315  001252  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  1316  001254  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  1317  001256  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  1318  001258  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  1319  00125A  0100               	movlb	0	; () banked
  1320  00125C  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  1321  00125E  0100               	movlb	0	; () banked
  1322  001260  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  1323  001262  0100               	movlb	0	; () banked
  1324  001264  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  1325  001266  0100               	movlb	0	; () banked
  1326  001268  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  1327  00126A  0100               	movlb	0	; () banked
  1328  00126C  5162               	movf	??_ringbuf_num& (0+255),w,b
  1329  00126E  0100               	movlb	0	; () banked
  1330  001270  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  1331  001272  0100               	movlb	0	; () banked
  1332  001274  6F60               	movwf	?_ringbuf_num& (0+255),b
  1333  001276  0100               	movlb	0	; () banked
  1334  001278  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1335  00127A  0100               	movlb	0	; () banked
  1336  00127C  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  1337  00127E  0100               	movlb	0	; () banked
  1338  001280  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  1339                           
  1340                           ; BSR set to: 0
  1341  001282  0012               	return	
  1342  001284                     __end_of_ringbuf_num:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           intcon	equ	0xFF2
  1349                           postinc0	equ	0xFEE
  1350                           wreg	equ	0xFE8
  1351                           postinc1	equ	0xFE6
  1352                           postdec1	equ	0xFE5
  1353                           fsr1h	equ	0xFE2
  1354                           fsr1l	equ	0xFE1
  1355                           indf2	equ	0xFDF
  1356                           postinc2	equ	0xFDE
  1357                           postdec2	equ	0xFDD
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _main_init *****************
  1363 ;; Defined at:
  1364 ;;		line 58 in file "main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;Total ram usage:        0 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    9
  1385 ;; This function calls:
  1386 ;;		_CTMU_init
  1387 ;;		_I2C_LCD_init
  1388 ;;		_I2C_init
  1389 ;;		_OSC_init
  1390 ;;		_UART_init
  1391 ;;		_ringbuf_init
  1392 ;;		_timer0_init
  1393 ;;		_timer1_init
  1394 ;;		_timer3_init
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text5
  1401  001944                     __ptext5:
  1402                           	opt stack 0
  1403  001944                     _main_init:
  1404                           	opt stack 21
  1405                           
  1406                           ;main.c: 59: OSC_init();
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;incstack = 0
  1410  001944  EC83  F00F         	call	_OSC_init	;wreg free
  1411                           
  1412                           ;main.c: 60: TRISA = 0b11101111;
  1413  001948  0EEF               	movlw	239
  1414  00194A  6E92               	movwf	3986,c	;volatile
  1415                           
  1416                           ;main.c: 61: TRISB = 0b00110001;
  1417  00194C  0E31               	movlw	49
  1418  00194E  6E93               	movwf	3987,c	;volatile
  1419                           
  1420                           ;main.c: 62: TRISC = 0b10110010;
  1421  001950  0EB2               	movlw	178
  1422  001952  6E94               	movwf	3988,c	;volatile
  1423                           
  1424                           ;main.c: 63: ANCON0 = 0b11110000;
  1425  001954  0EF0               	movlw	240
  1426  001956  010F               	movlb	15	; () banked
  1427  001958  6F48               	movwf	72,b	;volatile
  1428                           
  1429                           ; BSR set to: 15
  1430                           ;main.c: 64: ANCON1 = 0b00011111;
  1431  00195A  0E1F               	movlw	31
  1432  00195C  010F               	movlb	15	; () banked
  1433  00195E  6F49               	movwf	73,b	;volatile
  1434                           
  1435                           ; BSR set to: 15
  1436                           ;main.c: 65: INTCON2bits.RBPU = 0;
  1437  001960  9EF1               	bcf	intcon2,7,c	;volatile
  1438                           
  1439                           ; BSR set to: 15
  1440                           ;main.c: 67: timer0_init(6);
  1441  001962  0E06               	movlw	6
  1442  001964  EC8D  F00E         	call	_timer0_init
  1443                           
  1444                           ;main.c: 68: timer1_init(0, 2);
  1445  001968  0E02               	movlw	2
  1446  00196A  0100               	movlb	0	; () banked
  1447  00196C  6F60               	movwf	timer1_init@clock_select& (0+255),b
  1448  00196E  0E00               	movlw	0
  1449  001970  EC19  F00E         	call	_timer1_init
  1450                           
  1451                           ;main.c: 69: timer3_init(2);
  1452  001974  0E02               	movlw	2
  1453  001976  ECDE  F00E         	call	_timer3_init
  1454                           
  1455                           ;main.c: 70: I2C_init();
  1456  00197A  EC7A  F00F         	call	_I2C_init	;wreg free
  1457                           
  1458                           ;main.c: 71: I2C_LCD_init();
  1459  00197E  EC9A  F00D         	call	_I2C_LCD_init	;wreg free
  1460                           
  1461                           ;main.c: 73: CTMU_init();
  1462  001982  EC20  F00F         	call	_CTMU_init	;wreg free
  1463                           
  1464                           ;main.c: 75: UART_init();
  1465  001986  EC34  F00F         	call	_UART_init	;wreg free
  1466                           
  1467                           ;main.c: 76: static uint8_t txbuf[250];
  1468                           ;main.c: 77: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  1469  00198A  0E44               	movlw	low _tx_buf
  1470  00198C  0100               	movlb	0	; () banked
  1471  00198E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1472  001990  0E00               	movlw	high _tx_buf
  1473  001992  0100               	movlb	0	; () banked
  1474  001994  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1475  001996  0E00               	movlw	low main_init@txbuf
  1476  001998  0100               	movlb	0	; () banked
  1477  00199A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1478  00199C  0E01               	movlw	high main_init@txbuf
  1479  00199E  0100               	movlb	0	; () banked
  1480  0019A0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1481  0019A2  0E00               	movlw	0
  1482  0019A4  0100               	movlb	0	; () banked
  1483  0019A6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1484  0019A8  0EFA               	movlw	250
  1485  0019AA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1486  0019AC  ECC6  F00D         	call	_ringbuf_init	;wreg free
  1487                           
  1488                           ;main.c: 78: static uint8_t rxbuf[250];
  1489                           ;main.c: 79: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  1490  0019B0  0E3C               	movlw	low _rx_buf
  1491  0019B2  0100               	movlb	0	; () banked
  1492  0019B4  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1493  0019B6  0E00               	movlw	high _rx_buf
  1494  0019B8  0100               	movlb	0	; () banked
  1495  0019BA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1496  0019BC  0E00               	movlw	low main_init@rxbuf
  1497  0019BE  0100               	movlb	0	; () banked
  1498  0019C0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1499  0019C2  0E02               	movlw	high main_init@rxbuf
  1500  0019C4  0100               	movlb	0	; () banked
  1501  0019C6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1502  0019C8  0E00               	movlw	0
  1503  0019CA  0100               	movlb	0	; () banked
  1504  0019CC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1505  0019CE  0EFA               	movlw	250
  1506  0019D0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1507  0019D2  ECC6  F00D         	call	_ringbuf_init	;wreg free
  1508  0019D6  0012               	return		;funcret
  1509  0019D8                     __end_of_main_init:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           intcon	equ	0xFF2
  1516                           intcon2	equ	0xFF1
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           postinc1	equ	0xFE6
  1520                           postdec1	equ	0xFE5
  1521                           fsr1h	equ	0xFE2
  1522                           fsr1l	equ	0xFE1
  1523                           indf2	equ	0xFDF
  1524                           postinc2	equ	0xFDE
  1525                           postdec2	equ	0xFDD
  1526                           fsr2h	equ	0xFDA
  1527                           fsr2l	equ	0xFD9
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _timer3_init *****************
  1531 ;; Defined at:
  1532 ;;		line 85 in file "../My_header\My_header.h"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  prescaler       1    wreg     unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  prescaler       1    1[BANK0 ] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;Total ram usage:        2 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    4
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_main_init
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text6
  1561  001DBC                     __ptext6:
  1562                           	opt stack 0
  1563  001DBC                     _timer3_init:
  1564                           	opt stack 25
  1565                           
  1566                           ;incstack = 0
  1567                           ;timer3_init@prescaler stored from wreg
  1568  001DBC  0100               	movlb	0	; () banked
  1569  001DBE  6F61               	movwf	timer3_init@prescaler& (0+255),b
  1570                           
  1571                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  1572  001DC0  0E3F               	movlw	-193
  1573  001DC2  1679               	andwf	3961,f,c	;volatile
  1574                           
  1575                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  1576  001DC4  9679               	bcf	3961,3,c	;volatile
  1577                           
  1578                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  1579  001DC6  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  1580  001DCA  0100               	movlb	0	; () banked
  1581  001DCC  3B60               	swapf	??_timer3_init& (0+255),f,b
  1582  001DCE  5079               	movf	3961,w,c	;volatile
  1583  001DD0  0100               	movlb	0	; () banked
  1584  001DD2  1960               	xorwf	??_timer3_init& (0+255),w,b
  1585  001DD4  0BCF               	andlw	-49
  1586  001DD6  1960               	xorwf	??_timer3_init& (0+255),w,b
  1587  001DD8  6E79               	movwf	3961,c	;volatile
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  1591  001DDA  9E79               	bcf	3961,7,c	;volatile
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  1595  001DDC  8079               	bsf	3961,0,c	;volatile
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  1599  001DDE  92A2               	bcf	4002,1,c	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  1603  001DE0  92A1               	bcf	4001,1,c	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  1607  001DE2  82A0               	bsf	4000,1,c	;volatile
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  1611  001DE4  8CF2               	bsf	intcon,6,c	;volatile
  1612                           
  1613                           ; BSR set to: 0
  1614  001DE6  0012               	return		;funcret
  1615  001DE8                     __end_of_timer3_init:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           intcon	equ	0xFF2
  1622                           intcon2	equ	0xFF1
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postinc1	equ	0xFE6
  1626                           postdec1	equ	0xFE5
  1627                           fsr1h	equ	0xFE2
  1628                           fsr1l	equ	0xFE1
  1629                           indf2	equ	0xFDF
  1630                           postinc2	equ	0xFDE
  1631                           postdec2	equ	0xFDD
  1632                           fsr2h	equ	0xFDA
  1633                           fsr2l	equ	0xFD9
  1634                           status	equ	0xFD8
  1635                           
  1636 ;; *************** function _timer1_init *****************
  1637 ;; Defined at:
  1638 ;;		line 54 in file "../My_header\My_header.h"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  prescaler       1    wreg     unsigned char 
  1641 ;;  clock_select    1    0[BANK0 ] unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  prescaler       1    2[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;		None               void
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1653 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1656 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1657 ;;Total ram usage:        3 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    4
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_main_init
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text7
  1668  001C32                     __ptext7:
  1669                           	opt stack 0
  1670  001C32                     _timer1_init:
  1671                           	opt stack 25
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;incstack = 0
  1675                           ;timer1_init@prescaler stored from wreg
  1676  001C32  0100               	movlb	0	; () banked
  1677  001C34  6F62               	movwf	timer1_init@prescaler& (0+255),b
  1678                           
  1679                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  1680  001C36  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  1681  001C3A  0100               	movlb	0	; () banked
  1682  001C3C  3B61               	swapf	??_timer1_init& (0+255),f,b
  1683  001C3E  4761               	rlncf	??_timer1_init& (0+255),f,b
  1684  001C40  4761               	rlncf	??_timer1_init& (0+255),f,b
  1685  001C42  50CD               	movf	4045,w,c	;volatile
  1686  001C44  0100               	movlb	0	; () banked
  1687  001C46  1961               	xorwf	??_timer1_init& (0+255),w,b
  1688  001C48  0B3F               	andlw	-193
  1689  001C4A  1961               	xorwf	??_timer1_init& (0+255),w,b
  1690  001C4C  6ECD               	movwf	4045,c	;volatile
  1691                           
  1692                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1693  001C4E  0E02               	movlw	2
  1694  001C50  0100               	movlb	0	; () banked
  1695  001C52  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  1696  001C54  A4D8               	btfss	status,2,c
  1697  001C56  D002               	goto	l110
  1698                           
  1699                           ; BSR set to: 0
  1700  001C58  86CD               	bsf	4045,3,c	;volatile
  1701  001C5A  D001               	goto	l1826
  1702  001C5C                     l110:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  1706  001C5C  96CD               	bcf	4045,3,c	;volatile
  1707  001C5E                     l1826:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  1711  001C5E  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  1712  001C62  0100               	movlb	0	; () banked
  1713  001C64  3B61               	swapf	??_timer1_init& (0+255),f,b
  1714  001C66  50CD               	movf	4045,w,c	;volatile
  1715  001C68  0100               	movlb	0	; () banked
  1716  001C6A  1961               	xorwf	??_timer1_init& (0+255),w,b
  1717  001C6C  0BCF               	andlw	-49
  1718  001C6E  1961               	xorwf	??_timer1_init& (0+255),w,b
  1719  001C70  6ECD               	movwf	4045,c	;volatile
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  1723  001C72  84CD               	bsf	4045,2,c	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  1727  001C74  92CD               	bcf	4045,1,c	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  1731  001C76  80CD               	bsf	4045,0,c	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  1735  001C78  909F               	bcf	3999,0,c	;volatile
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  1739  001C7A  909E               	bcf	3998,0,c	;volatile
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  1743  001C7C  809D               	bsf	3997,0,c	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  1747  001C7E  8CF2               	bsf	intcon,6,c	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750  001C80  0012               	return		;funcret
  1751  001C82                     __end_of_timer1_init:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           tblptrh	equ	0xFF7
  1755                           tblptrl	equ	0xFF6
  1756                           tablat	equ	0xFF5
  1757                           intcon	equ	0xFF2
  1758                           intcon2	equ	0xFF1
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           postinc1	equ	0xFE6
  1762                           postdec1	equ	0xFE5
  1763                           fsr1h	equ	0xFE2
  1764                           fsr1l	equ	0xFE1
  1765                           indf2	equ	0xFDF
  1766                           postinc2	equ	0xFDE
  1767                           postdec2	equ	0xFDD
  1768                           fsr2h	equ	0xFDA
  1769                           fsr2l	equ	0xFD9
  1770                           status	equ	0xFD8
  1771                           
  1772 ;; *************** function _timer0_init *****************
  1773 ;; Defined at:
  1774 ;;		line 15 in file "../My_header\My_header.h"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  prescaler       1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  prescaler       1    1[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;		None               void
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;Total ram usage:        2 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    4
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_main_init
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text8
  1803  001D1A                     __ptext8:
  1804                           	opt stack 0
  1805  001D1A                     _timer0_init:
  1806                           	opt stack 25
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;incstack = 0
  1810                           ;timer0_init@prescaler stored from wreg
  1811  001D1A  0100               	movlb	0	; () banked
  1812  001D1C  6F61               	movwf	timer0_init@prescaler& (0+255),b
  1813                           
  1814                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  1815  001D1E  8ED5               	bsf	4053,7,c	;volatile
  1816                           
  1817                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  1818  001D20  8CD5               	bsf	4053,6,c	;volatile
  1819                           
  1820                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  1821  001D22  9AD5               	bcf	4053,5,c	;volatile
  1822                           
  1823                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  1824  001D24  0100               	movlb	0	; () banked
  1825  001D26  5161               	movf	timer0_init@prescaler& (0+255),w,b
  1826  001D28  0100               	movlb	0	; () banked
  1827  001D2A  A4D8               	btfss	status,2,c
  1828  001D2C  D002               	goto	l105
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  1832  001D2E  86D5               	bsf	4053,3,c	;volatile
  1833                           
  1834                           ;My_header\My_header.h: 21: } else {
  1835  001D30  D00C               	goto	l1814
  1836  001D32                     l105:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  1840  001D32  96D5               	bcf	4053,3,c	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  1844  001D34  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  1845  001D38  0EFF               	movlw	255
  1846  001D3A  0100               	movlb	0	; () banked
  1847  001D3C  2760               	addwf	??_timer0_init& (0+255),f,b
  1848  001D3E  50D5               	movf	4053,w,c	;volatile
  1849  001D40  0100               	movlb	0	; () banked
  1850  001D42  1960               	xorwf	??_timer0_init& (0+255),w,b
  1851  001D44  0BF8               	andlw	-8
  1852  001D46  1960               	xorwf	??_timer0_init& (0+255),w,b
  1853  001D48  6ED5               	movwf	4053,c	;volatile
  1854  001D4A                     l1814:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;My_header\My_header.h: 24: }
  1858                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  1859  001D4A  8AF2               	bsf	intcon,5,c	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  1863  001D4C  94F2               	bcf	intcon,2,c	;volatile
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  1867  001D4E  94F1               	bcf	intcon2,2,c	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  1871  001D50  8CF2               	bsf	intcon,6,c	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874  001D52  0012               	return		;funcret
  1875  001D54                     __end_of_timer0_init:
  1876                           	opt stack 0
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           intcon	equ	0xFF2
  1882                           intcon2	equ	0xFF1
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postinc1	equ	0xFE6
  1886                           postdec1	equ	0xFE5
  1887                           fsr1h	equ	0xFE2
  1888                           fsr1l	equ	0xFE1
  1889                           indf2	equ	0xFDF
  1890                           postinc2	equ	0xFDE
  1891                           postdec2	equ	0xFDD
  1892                           fsr2h	equ	0xFDA
  1893                           fsr2l	equ	0xFD9
  1894                           status	equ	0xFD8
  1895                           
  1896 ;; *************** function _ringbuf_init *****************
  1897 ;; Defined at:
  1898 ;;		line 24 in file "../My_header\My_ringbuf.h"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  1901 ;;		 -> rx_buf(8), tx_buf(8), 
  1902 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  1903 ;;		 -> main_init@rxbuf(250), main_init@txbuf(250), 
  1904 ;;  bufsize         2    4[BANK0 ] unsigned int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;		None               void
  1909 ;; Registers used:
  1910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1916 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;Total ram usage:        6 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    4
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_main_init
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text9
  1931  001B8C                     __ptext9:
  1932                           	opt stack 0
  1933  001B8C                     _ringbuf_init:
  1934                           	opt stack 25
  1935                           
  1936                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;incstack = 0
  1940  001B8C  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  1941  001B90  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1942  001B94  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1943  001B98  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1944                           
  1945                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  1946  001B9C  0100               	movlb	0	; () banked
  1947  001B9E  EE20 F002          	lfsr	2,2
  1948  001BA2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  1949  001BA4  26D9               	addwf	fsr2l,f,c
  1950  001BA6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  1951  001BA8  22DA               	addwfc	fsr2h,f,c
  1952  001BAA  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  1953  001BAE  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  1957  001BB2  0100               	movlb	0	; () banked
  1958  001BB4  EE20 F004          	lfsr	2,4
  1959  001BB8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  1960  001BBA  26D9               	addwf	fsr2l,f,c
  1961  001BBC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  1962  001BBE  22DA               	addwfc	fsr2h,f,c
  1963  001BC0  0E00               	movlw	0
  1964  001BC2  6EDE               	movwf	postinc2,c
  1965  001BC4  0E00               	movlw	0
  1966  001BC6  6EDD               	movwf	postdec2,c
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  1970  001BC8  0100               	movlb	0	; () banked
  1971  001BCA  EE20 F006          	lfsr	2,6
  1972  001BCE  5160               	movf	ringbuf_init@rb& (0+255),w,b
  1973  001BD0  26D9               	addwf	fsr2l,f,c
  1974  001BD2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  1975  001BD4  22DA               	addwfc	fsr2h,f,c
  1976  001BD6  0E00               	movlw	0
  1977  001BD8  6EDE               	movwf	postinc2,c
  1978  001BDA  0E00               	movlw	0
  1979  001BDC  6EDD               	movwf	postdec2,c
  1980                           
  1981                           ; BSR set to: 0
  1982  001BDE  0012               	return		;funcret
  1983  001BE0                     __end_of_ringbuf_init:
  1984                           	opt stack 0
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           intcon	equ	0xFF2
  1990                           intcon2	equ	0xFF1
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           postinc1	equ	0xFE6
  1994                           postdec1	equ	0xFE5
  1995                           fsr1h	equ	0xFE2
  1996                           fsr1l	equ	0xFE1
  1997                           indf2	equ	0xFDF
  1998                           postinc2	equ	0xFDE
  1999                           postdec2	equ	0xFDD
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _UART_init *****************
  2005 ;; Defined at:
  2006 ;;		line 192 in file "../My_header\My_header.h"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;		None               void
  2013 ;; Registers used:
  2014 ;;		wreg, status,2
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    4
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_main_init
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text10
  2035  001E68                     __ptext10:
  2036                           	opt stack 0
  2037  001E68                     _UART_init:
  2038                           	opt stack 25
  2039                           
  2040                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;incstack = 0
  2044  001E68  9CAD               	bcf	4013,6,c	;volatile
  2045                           
  2046                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  2047  001E6A  8AAD               	bsf	4013,5,c	;volatile
  2048                           
  2049                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  2050  001E6C  98AD               	bcf	4013,4,c	;volatile
  2051                           
  2052                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  2053  001E6E  94AD               	bcf	4013,2,c	;volatile
  2054                           
  2055                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  2056  001E70  8EAC               	bsf	4012,7,c	;volatile
  2057                           
  2058                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  2059  001E72  9CAC               	bcf	4012,6,c	;volatile
  2060                           
  2061                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  2062  001E74  88AC               	bsf	4012,4,c	;volatile
  2063                           
  2064                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  2065  001E76  967E               	bcf	3966,3,c	;volatile
  2066                           
  2067                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  2068  001E78  0E4D               	movlw	77
  2069  001E7A  6EB0               	movwf	4016,c	;volatile
  2070                           
  2071                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  2072  001E7C  0E00               	movlw	0
  2073  001E7E  6E7F               	movwf	3967,c	;volatile
  2074                           
  2075                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  2076  001E80  9A9F               	bcf	3999,5,c	;volatile
  2077                           
  2078                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  2079  001E82  8A9D               	bsf	3997,5,c	;volatile
  2080                           
  2081                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  2082  001E84  8CF2               	bsf	intcon,6,c	;volatile
  2083  001E86  0012               	return		;funcret
  2084  001E88                     __end_of_UART_init:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           intcon	equ	0xFF2
  2091                           intcon2	equ	0xFF1
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           postinc1	equ	0xFE6
  2095                           postdec1	equ	0xFE5
  2096                           fsr1h	equ	0xFE2
  2097                           fsr1l	equ	0xFE1
  2098                           indf2	equ	0xFDF
  2099                           postinc2	equ	0xFDE
  2100                           postdec2	equ	0xFDD
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _OSC_init *****************
  2106 ;; Defined at:
  2107 ;;		line 119 in file "../My_header\My_header.h"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    4
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main_init
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text11
  2136  001F06                     __ptext11:
  2137                           	opt stack 0
  2138  001F06                     _OSC_init:
  2139                           	opt stack 25
  2140                           
  2141                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  2142                           
  2143                           ;incstack = 0
  2144  001F06  88D3               	bsf	4051,4,c	;volatile
  2145  001F08  8AD3               	bsf	4051,5,c	;volatile
  2146  001F0A  8CD3               	bsf	4051,6,c	;volatile
  2147                           
  2148                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  2149  001F0C  8C9B               	bsf	3995,6,c	;volatile
  2150                           
  2151                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  2152  001F0E  0EFC               	movlw	-4
  2153  001F10  16D3               	andwf	4051,f,c	;volatile
  2154  001F12  0012               	return		;funcret
  2155  001F14                     __end_of_OSC_init:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           intcon	equ	0xFF2
  2162                           intcon2	equ	0xFF1
  2163                           postinc0	equ	0xFEE
  2164                           wreg	equ	0xFE8
  2165                           postinc1	equ	0xFE6
  2166                           postdec1	equ	0xFE5
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           indf2	equ	0xFDF
  2170                           postinc2	equ	0xFDE
  2171                           postdec2	equ	0xFDD
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _I2C_init *****************
  2177 ;; Defined at:
  2178 ;;		line 25 in file "../My_header\My_I2C.h"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, status,2
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main_init
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text12
  2207  001EF4                     __ptext12:
  2208                           	opt stack 0
  2209  001EF4                     _I2C_init:
  2210                           	opt stack 25
  2211                           
  2212                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
  2213                           
  2214                           ;incstack = 0
  2215  001EF4  0E80               	movlw	128
  2216  001EF6  6EC7               	movwf	4039,c	;volatile
  2217                           
  2218                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
  2219  001EF8  0E28               	movlw	40
  2220  001EFA  6EC6               	movwf	4038,c	;volatile
  2221                           
  2222                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
  2223  001EFC  0E13               	movlw	19
  2224  001EFE  6EC8               	movwf	4040,c	;volatile
  2225                           
  2226                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
  2227  001F00  969E               	bcf	3998,3,c	;volatile
  2228                           
  2229                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
  2230  001F02  96A1               	bcf	4001,3,c	;volatile
  2231  001F04  0012               	return		;funcret
  2232  001F06                     __end_of_I2C_init:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           postinc0	equ	0xFEE
  2241                           wreg	equ	0xFE8
  2242                           postinc1	equ	0xFE6
  2243                           postdec1	equ	0xFE5
  2244                           fsr1h	equ	0xFE2
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           postinc2	equ	0xFDE
  2248                           postdec2	equ	0xFDD
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _I2C_LCD_init *****************
  2254 ;; Defined at:
  2255 ;;		line 164 in file "../My_header\My_I2C.h"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;		None               void
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    8
  2276 ;; This function calls:
  2277 ;;		_Delay_ms
  2278 ;;		_I2C_LCD_Clear
  2279 ;;		_I2C_LCD_Command
  2280 ;; This function is called by:
  2281 ;;		_main_init
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text13
  2286  001B34                     __ptext13:
  2287                           	opt stack 0
  2288  001B34                     _I2C_LCD_init:
  2289                           	opt stack 21
  2290                           
  2291                           ;My_header\My_I2C.h: 165: Delay_ms(40);
  2292                           
  2293                           ;incstack = 0
  2294  001B34  0E00               	movlw	0
  2295  001B36  0100               	movlb	0	; () banked
  2296  001B38  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  2297  001B3A  0E28               	movlw	40
  2298  001B3C  6F60               	movwf	Delay_ms@ms& (0+255),b
  2299  001B3E  ECF4  F00E         	call	_Delay_ms	;wreg free
  2300                           
  2301                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
  2302  001B42  0E38               	movlw	56
  2303  001B44  ECAA  F00E         	call	_I2C_LCD_Command
  2304                           
  2305                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
  2306  001B48  0E39               	movlw	57
  2307  001B4A  ECAA  F00E         	call	_I2C_LCD_Command
  2308                           
  2309                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
  2310  001B4E  0E14               	movlw	20
  2311  001B50  ECAA  F00E         	call	_I2C_LCD_Command
  2312                           
  2313                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
  2314  001B54  0E70               	movlw	112
  2315  001B56  ECAA  F00E         	call	_I2C_LCD_Command
  2316                           
  2317                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
  2318  001B5A  0E56               	movlw	86
  2319  001B5C  ECAA  F00E         	call	_I2C_LCD_Command
  2320                           
  2321                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
  2322  001B60  0E6C               	movlw	108
  2323  001B62  ECAA  F00E         	call	_I2C_LCD_Command
  2324                           
  2325                           ;My_header\My_I2C.h: 172: Delay_ms(200);
  2326  001B66  0E00               	movlw	0
  2327  001B68  0100               	movlb	0	; () banked
  2328  001B6A  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  2329  001B6C  0EC8               	movlw	200
  2330  001B6E  6F60               	movwf	Delay_ms@ms& (0+255),b
  2331  001B70  ECF4  F00E         	call	_Delay_ms	;wreg free
  2332                           
  2333                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
  2334  001B74  0E38               	movlw	56
  2335  001B76  ECAA  F00E         	call	_I2C_LCD_Command
  2336                           
  2337                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
  2338  001B7A  0E0C               	movlw	12
  2339  001B7C  ECAA  F00E         	call	_I2C_LCD_Command
  2340                           
  2341                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
  2342  001B80  0E06               	movlw	6
  2343  001B82  ECAA  F00E         	call	_I2C_LCD_Command
  2344                           
  2345                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
  2346  001B86  EC61  F00F         	call	_I2C_LCD_Clear	;wreg free
  2347  001B8A  0012               	return		;funcret
  2348  001B8C                     __end_of_I2C_LCD_init:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           intcon	equ	0xFF2
  2355                           intcon2	equ	0xFF1
  2356                           postinc0	equ	0xFEE
  2357                           wreg	equ	0xFE8
  2358                           postinc1	equ	0xFE6
  2359                           postdec1	equ	0xFE5
  2360                           fsr1h	equ	0xFE2
  2361                           fsr1l	equ	0xFE1
  2362                           indf2	equ	0xFDF
  2363                           postinc2	equ	0xFDE
  2364                           postdec2	equ	0xFDD
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _I2C_LCD_Clear *****************
  2370 ;; Defined at:
  2371 ;;		line 107 in file "../My_header\My_I2C.h"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;Total ram usage:        1 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    7
  2392 ;; This function calls:
  2393 ;;		_I2C_LCD_Command
  2394 ;; This function is called by:
  2395 ;;		_I2C_LCD_init
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text14
  2401  001EC2                     __ptext14:
  2402                           	opt stack 0
  2403  001EC2                     _I2C_LCD_Clear:
  2404                           	opt stack 21
  2405                           
  2406                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  2407                           
  2408                           ;incstack = 0
  2409  001EC2  0E01               	movlw	1
  2410  001EC4  ECAA  F00E         	call	_I2C_LCD_Command
  2411                           
  2412                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  2413  001EC8  0E12               	movlw	18
  2414  001ECA  0100               	movlb	0	; () banked
  2415  001ECC  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  2416  001ECE  0E23               	movlw	35
  2417  001ED0                     u1747:
  2418  001ED0  2EE8               	decfsz	wreg,f,c
  2419  001ED2  D7FE               	goto	u1747
  2420  001ED4  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  2421  001ED6  D7FC               	goto	u1747
  2422  001ED8  F000               	nop	
  2423  001EDA  0012               	return		;funcret
  2424  001EDC                     __end_of_I2C_LCD_Clear:
  2425                           	opt stack 0
  2426                           tblptru	equ	0xFF8
  2427                           tblptrh	equ	0xFF7
  2428                           tblptrl	equ	0xFF6
  2429                           tablat	equ	0xFF5
  2430                           intcon	equ	0xFF2
  2431                           intcon2	equ	0xFF1
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           postinc1	equ	0xFE6
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           postinc2	equ	0xFDE
  2440                           postdec2	equ	0xFDD
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _Delay_ms *****************
  2446 ;; Defined at:
  2447 ;;		line 333 in file "../My_header\My_header.h"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  ms              2    0[BANK0 ] unsigned int 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;Total ram usage:        3 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    4
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_I2C_LCD_init
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text15
  2477  001DE8                     __ptext15:
  2478                           	opt stack 0
  2479  001DE8                     _Delay_ms:
  2480                           	opt stack 24
  2481                           
  2482                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  2483                           
  2484                           ;incstack = 0
  2485  001DE8  D009               	goto	l1788
  2486  001DEA                     l1786:
  2487  001DEA  0E10               	movlw	16
  2488  001DEC  0100               	movlb	0	; () banked
  2489  001DEE  6F62               	movwf	??_Delay_ms& (0+255),b
  2490  001DF0  0E94               	movlw	148
  2491  001DF2                     u1757:
  2492  001DF2  2EE8               	decfsz	wreg,f,c
  2493  001DF4  D7FE               	goto	u1757
  2494  001DF6  2F62               	decfsz	??_Delay_ms& (0+255),f,b
  2495  001DF8  D7FC               	goto	u1757
  2496  001DFA  D000               	nop2	
  2497  001DFC                     l1788:
  2498  001DFC  0100               	movlb	0	; () banked
  2499  001DFE  0760               	decf	Delay_ms@ms& (0+255),f,b
  2500  001E00  A0D8               	btfss	status,0,c
  2501  001E02  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
  2502  001E04  0100               	movlb	0	; () banked
  2503  001E06  2960               	incf	Delay_ms@ms& (0+255),w,b
  2504  001E08  E1F0               	bnz	l1786
  2505  001E0A  0100               	movlb	0	; () banked
  2506  001E0C  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
  2507  001E0E  B4D8               	btfsc	status,2,c
  2508  001E10  0012               	return	
  2509  001E12  D7EB               	goto	l1786
  2510  001E14                     __end_of_Delay_ms:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           intcon	equ	0xFF2
  2517                           intcon2	equ	0xFF1
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postinc1	equ	0xFE6
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           postdec2	equ	0xFDD
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _CTMU_init *****************
  2532 ;; Defined at:
  2533 ;;		line 289 in file "../My_header\My_header.h"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;		None               void
  2540 ;; Registers used:
  2541 ;;		wreg, status,2
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    4
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_main_init
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text16
  2562  001E40                     __ptext16:
  2563                           	opt stack 0
  2564  001E40                     _CTMU_init:
  2565                           	opt stack 25
  2566                           
  2567                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;incstack = 0
  2571  001E40  0E00               	movlw	0
  2572  001E42  6EB3               	movwf	4019,c	;volatile
  2573                           
  2574                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
  2575  001E44  0E90               	movlw	144
  2576  001E46  6EB2               	movwf	4018,c	;volatile
  2577                           
  2578                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
  2579  001E48  0E01               	movlw	1
  2580  001E4A  6EB1               	movwf	4017,c	;volatile
  2581                           
  2582                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
  2583  001E4C  8EC1               	bsf	4033,7,c	;volatile
  2584                           
  2585                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
  2586  001E4E  9CC1               	bcf	4033,6,c	;volatile
  2587                           
  2588                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
  2589  001E50  50C1               	movf	4033,w,c	;volatile
  2590  001E52  0BC7               	andlw	-57
  2591  001E54  0908               	iorlw	8
  2592  001E56  6EC1               	movwf	4033,c	;volatile
  2593                           
  2594                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
  2595  001E58  50C1               	movf	4033,w,c	;volatile
  2596  001E5A  0BF8               	andlw	-8
  2597  001E5C  0906               	iorlw	6
  2598  001E5E  6EC1               	movwf	4033,c	;volatile
  2599                           
  2600                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
  2601  001E60  9CC2               	bcf	4034,6,c	;volatile
  2602                           
  2603                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
  2604  001E62  9EC2               	bcf	4034,7,c	;volatile
  2605                           
  2606                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
  2607  001E64  80C2               	bsf	4034,0,c	;volatile
  2608  001E66  0012               	return		;funcret
  2609  001E68                     __end_of_CTMU_init:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           intcon	equ	0xFF2
  2616                           intcon2	equ	0xFF1
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           postinc1	equ	0xFE6
  2620                           postdec1	equ	0xFE5
  2621                           fsr1h	equ	0xFE2
  2622                           fsr1l	equ	0xFE1
  2623                           indf2	equ	0xFDF
  2624                           postinc2	equ	0xFDE
  2625                           postdec2	equ	0xFDD
  2626                           fsr2h	equ	0xFDA
  2627                           fsr2l	equ	0xFD9
  2628                           status	equ	0xFD8
  2629                           
  2630 ;; *************** function ___lwdiv *****************
  2631 ;; Defined at:
  2632 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  dividend        2   22[BANK0 ] unsigned int 
  2635 ;;  divisor         2   24[BANK0 ] unsigned int 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  quotient        2   26[BANK0 ] unsigned int 
  2638 ;;  counter         1   28[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  2   22[BANK0 ] unsigned int 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;Total ram usage:        7 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    4
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;;		_ringbuf_put_num
  2660 ;;		_tx_sendn
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text17
  2665  001A5A                     __ptext17:
  2666                           	opt stack 0
  2667  001A5A                     ___lwdiv:
  2668                           	opt stack 26
  2669                           
  2670                           ;incstack = 0
  2671  001A5A  0E00               	movlw	0
  2672  001A5C  0100               	movlb	0	; () banked
  2673  001A5E  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2674  001A60  0E00               	movlw	0
  2675  001A62  6F7A               	movwf	___lwdiv@quotient& (0+255),b
  2676                           
  2677                           ; BSR set to: 0
  2678  001A64  0100               	movlb	0	; () banked
  2679  001A66  5178               	movf	___lwdiv@divisor& (0+255),w,b
  2680  001A68  0100               	movlb	0	; () banked
  2681  001A6A  1179               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2682  001A6C  B4D8               	btfsc	status,2,c
  2683  001A6E  D02C               	goto	l775
  2684                           
  2685                           ; BSR set to: 0
  2686  001A70  0E01               	movlw	1
  2687  001A72  0100               	movlb	0	; () banked
  2688  001A74  6F7C               	movwf	___lwdiv@counter& (0+255),b
  2689  001A76  D006               	goto	l2180
  2690  001A78                     l2178:
  2691                           
  2692                           ; BSR set to: 0
  2693  001A78  0100               	movlb	0	; () banked
  2694  001A7A  90D8               	bcf	status,0,c
  2695  001A7C  3778               	rlcf	___lwdiv@divisor& (0+255),f,b
  2696  001A7E  3779               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2697  001A80  0100               	movlb	0	; () banked
  2698  001A82  2B7C               	incf	___lwdiv@counter& (0+255),f,b
  2699  001A84                     l2180:
  2700                           
  2701                           ; BSR set to: 0
  2702  001A84  0100               	movlb	0	; () banked
  2703  001A86  AF79               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2704  001A88  D7F7               	goto	l2178
  2705  001A8A                     l2182:
  2706                           
  2707                           ; BSR set to: 0
  2708  001A8A  0100               	movlb	0	; () banked
  2709  001A8C  90D8               	bcf	status,0,c
  2710  001A8E  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
  2711  001A90  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2712                           
  2713                           ; BSR set to: 0
  2714  001A92  0100               	movlb	0	; () banked
  2715  001A94  5178               	movf	___lwdiv@divisor& (0+255),w,b
  2716  001A96  0100               	movlb	0	; () banked
  2717  001A98  5D76               	subwf	___lwdiv@dividend& (0+255),w,b
  2718  001A9A  0100               	movlb	0	; () banked
  2719  001A9C  5179               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2720  001A9E  0100               	movlb	0	; () banked
  2721  001AA0  5977               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2722  001AA2  A0D8               	btfss	status,0,c
  2723  001AA4  D00A               	goto	l2190
  2724                           
  2725                           ; BSR set to: 0
  2726  001AA6  0100               	movlb	0	; () banked
  2727  001AA8  5178               	movf	___lwdiv@divisor& (0+255),w,b
  2728  001AAA  0100               	movlb	0	; () banked
  2729  001AAC  5F76               	subwf	___lwdiv@dividend& (0+255),f,b
  2730  001AAE  0100               	movlb	0	; () banked
  2731  001AB0  5179               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2732  001AB2  0100               	movlb	0	; () banked
  2733  001AB4  5B77               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2734                           
  2735                           ; BSR set to: 0
  2736  001AB6  0100               	movlb	0	; () banked
  2737  001AB8  817A               	bsf	___lwdiv@quotient& (0+255),0,b
  2738  001ABA                     l2190:
  2739                           
  2740                           ; BSR set to: 0
  2741  001ABA  0100               	movlb	0	; () banked
  2742  001ABC  90D8               	bcf	status,0,c
  2743  001ABE  3379               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2744  001AC0  3378               	rrcf	___lwdiv@divisor& (0+255),f,b
  2745                           
  2746                           ; BSR set to: 0
  2747  001AC2  0100               	movlb	0	; () banked
  2748  001AC4  2F7C               	decfsz	___lwdiv@counter& (0+255),f,b
  2749  001AC6  D7E1               	goto	l2182
  2750  001AC8                     l775:
  2751                           
  2752                           ; BSR set to: 0
  2753  001AC8  C07A  F076         	movff	___lwdiv@quotient,?___lwdiv
  2754  001ACC  C07B  F077         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2755                           
  2756                           ; BSR set to: 0
  2757  001AD0  0012               	return		;funcret
  2758  001AD2                     __end_of___lwdiv:
  2759                           	opt stack 0
  2760                           tblptru	equ	0xFF8
  2761                           tblptrh	equ	0xFF7
  2762                           tblptrl	equ	0xFF6
  2763                           tablat	equ	0xFF5
  2764                           intcon	equ	0xFF2
  2765                           intcon2	equ	0xFF1
  2766                           postinc0	equ	0xFEE
  2767                           wreg	equ	0xFE8
  2768                           postinc1	equ	0xFE6
  2769                           postdec1	equ	0xFE5
  2770                           fsr1h	equ	0xFE2
  2771                           fsr1l	equ	0xFE1
  2772                           indf2	equ	0xFDF
  2773                           postinc2	equ	0xFDE
  2774                           postdec2	equ	0xFDD
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _I2C_LCD_SetCursor *****************
  2780 ;; Defined at:
  2781 ;;		line 112 in file "../My_header\My_I2C.h"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  col             1    wreg     unsigned char 
  2784 ;;  row             1    6[BANK0 ] unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  col             1    9[BANK0 ] unsigned char 
  2787 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2797 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;Total ram usage:        4 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    7
  2804 ;; This function calls:
  2805 ;;		_I2C_LCD_Command
  2806 ;; This function is called by:
  2807 ;;		_main
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text18
  2812  001E14                     __ptext18:
  2813                           	opt stack 0
  2814  001E14                     _I2C_LCD_SetCursor:
  2815                           	opt stack 23
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;incstack = 0
  2819                           ;I2C_LCD_SetCursor@col stored from wreg
  2820  001E14  0100               	movlb	0	; () banked
  2821  001E16  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  2822                           
  2823                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  2824  001E18  C07D  F067         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
  2825  001E1C  C07E  F068         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
  2826                           
  2827                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  2828  001E20  0100               	movlb	0	; () banked
  2829  001E22  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  2830  001E24  0D01               	mullw	1
  2831  001E26  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  2832  001E28  24F3               	addwf	prodl,w,c
  2833  001E2A  6ED9               	movwf	fsr2l,c
  2834  001E2C  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  2835  001E2E  20F4               	addwfc	prodh,w,c
  2836  001E30  6EDA               	movwf	fsr2h,c
  2837  001E32  50DF               	movf	indf2,w,c
  2838  001E34  0100               	movlb	0	; () banked
  2839  001E36  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  2840  001E38  0980               	iorlw	128
  2841  001E3A  ECAA  F00E         	call	_I2C_LCD_Command
  2842  001E3E  0012               	return		;funcret
  2843  001E40                     __end_of_I2C_LCD_SetCursor:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           intcon2	equ	0xFF1
  2853                           postinc0	equ	0xFEE
  2854                           wreg	equ	0xFE8
  2855                           postinc1	equ	0xFE6
  2856                           postdec1	equ	0xFE5
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           postdec2	equ	0xFDD
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _I2C_LCD_Command *****************
  2867 ;; Defined at:
  2868 ;;		line 94 in file "../My_header\My_I2C.h"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  c               1    wreg     unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  c               1    4[BANK0 ] unsigned char 
  2873 ;;  ans             1    5[BANK0 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    6
  2890 ;; This function calls:
  2891 ;;		_I2C_Send
  2892 ;;		_I2C_Start
  2893 ;;		_I2C_Stop
  2894 ;; This function is called by:
  2895 ;;		_I2C_LCD_Clear
  2896 ;;		_I2C_LCD_SetCursor
  2897 ;;		_I2C_LCD_init
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text19
  2902  001D54                     __ptext19:
  2903                           	opt stack 0
  2904  001D54                     _I2C_LCD_Command:
  2905                           	opt stack 22
  2906                           
  2907                           ;incstack = 0
  2908                           ;I2C_LCD_Command@c stored from wreg
  2909  001D54  0100               	movlb	0	; () banked
  2910  001D56  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
  2911                           
  2912                           ;My_header\My_I2C.h: 95: uint8_t ans;
  2913                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  2914  001D58  0E00               	movlw	0
  2915  001D5A  0100               	movlb	0	; () banked
  2916  001D5C  6F62               	movwf	I2C_Start@rw& (0+255),b
  2917  001D5E  0E3E               	movlw	62
  2918  001D60  ECC6  F00E         	call	_I2C_Start
  2919  001D64  0100               	movlb	0	; () banked
  2920  001D66  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  2924  001D68  0100               	movlb	0	; () banked
  2925  001D6A  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
  2926  001D6C  0100               	movlb	0	; () banked
  2927  001D6E  A4D8               	btfss	status,2,c
  2928  001D70  D007               	goto	l311
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  2932  001D72  0E80               	movlw	128
  2933  001D74  EC6E  F00F         	call	_I2C_Send
  2934                           
  2935                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  2936  001D78  0100               	movlb	0	; () banked
  2937  001D7A  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
  2938  001D7C  EC6E  F00F         	call	_I2C_Send
  2939  001D80                     l311:
  2940                           
  2941                           ;My_header\My_I2C.h: 102: }
  2942                           ;My_header\My_I2C.h: 103: I2C_Stop();
  2943  001D80  EC8A  F00F         	call	_I2C_Stop	;wreg free
  2944                           
  2945                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
  2946  001D84  0E68               	movlw	104
  2947  001D86                     u1767:
  2948  001D86  2EE8               	decfsz	wreg,f,c
  2949  001D88  D7FE               	goto	u1767
  2950  001D8A  0012               	return		;funcret
  2951  001D8C                     __end_of_I2C_LCD_Command:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           intcon2	equ	0xFF1
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postinc1	equ	0xFE6
  2964                           postdec1	equ	0xFE5
  2965                           fsr1h	equ	0xFE2
  2966                           fsr1l	equ	0xFE1
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974 ;; *************** function _I2C_LCD_Puts *****************
  2975 ;; Defined at:
  2976 ;;		line 131 in file "../My_header\My_I2C.h"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  2979 ;;		 -> STR_2(9), STR_1(9), 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  ans             2    7[BANK0 ] int 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;		None               void
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;Total ram usage:        5 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    6
  2998 ;; This function calls:
  2999 ;;		_I2C_Send
  3000 ;;		_I2C_Start
  3001 ;;		_I2C_Stop
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text20
  3008  001AD2                     __ptext20:
  3009                           	opt stack 0
  3010  001AD2                     _I2C_LCD_Puts:
  3011                           	opt stack 24
  3012                           
  3013                           ;My_header\My_I2C.h: 132: int ans;
  3014                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  3015                           
  3016                           ;incstack = 0
  3017  001AD2  0E00               	movlw	0
  3018  001AD4  0100               	movlb	0	; () banked
  3019  001AD6  6F62               	movwf	I2C_Start@rw& (0+255),b
  3020  001AD8  0E3E               	movlw	62
  3021  001ADA  ECC6  F00E         	call	_I2C_Start
  3022  001ADE  0100               	movlb	0	; () banked
  3023  001AE0  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  3024  001AE2  0100               	movlb	0	; () banked
  3025  001AE4  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  3026  001AE6  0100               	movlb	0	; () banked
  3027  001AE8  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  3028  001AEA  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  3032  001AEC  0100               	movlb	0	; () banked
  3033  001AEE  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  3034  001AF0  0100               	movlb	0	; () banked
  3035  001AF2  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  3036  001AF4  A4D8               	btfss	status,2,c
  3037  001AF6  D01B               	goto	l2138
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  3041  001AF8  0E40               	movlw	64
  3042  001AFA  EC6E  F00F         	call	_I2C_Send
  3043                           
  3044                           ;My_header\My_I2C.h: 137: while (*s) {
  3045  001AFE  D00E               	goto	l2136
  3046  001B00                     l2130:
  3047                           
  3048                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  3049  001B00  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  3050  001B04  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  3051  001B08                     	if	0	;tblptru may be non-zero
  3052  001B08                     	endif
  3053  001B08                     	if	0	;tblptru may be non-zero
  3054  001B08                     	endif
  3055  001B08  0008               	tblrd		*
  3056  001B0A  50F5               	movf	tablat,w,c
  3057  001B0C  EC6E  F00F         	call	_I2C_Send
  3058  001B10  0100               	movlb	0	; () banked
  3059  001B12  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  3060  001B14  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  3064  001B16  0E68               	movlw	104
  3065  001B18                     u1777:
  3066  001B18  2EE8               	decfsz	wreg,f,c
  3067  001B1A  D7FE               	goto	u1777
  3068  001B1C                     l2136:
  3069  001B1C  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  3070  001B20  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  3071  001B24                     	if	0	;tblptru may be non-zero
  3072  001B24                     	endif
  3073  001B24                     	if	0	;tblptru may be non-zero
  3074  001B24                     	endif
  3075  001B24  0008               	tblrd		*
  3076  001B26  50F5               	movf	tablat,w,c
  3077  001B28  0900               	iorlw	0
  3078  001B2A  A4D8               	btfss	status,2,c
  3079  001B2C  D7E9               	goto	l2130
  3080  001B2E                     l2138:
  3081                           
  3082                           ;My_header\My_I2C.h: 140: }
  3083                           ;My_header\My_I2C.h: 141: }
  3084                           ;My_header\My_I2C.h: 142: I2C_Stop();
  3085  001B2E  EC8A  F00F         	call	_I2C_Stop	;wreg free
  3086  001B32  0012               	return		;funcret
  3087  001B34                     __end_of_I2C_LCD_Puts:
  3088                           	opt stack 0
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           prodh	equ	0xFF4
  3094                           prodl	equ	0xFF3
  3095                           intcon	equ	0xFF2
  3096                           intcon2	equ	0xFF1
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           postinc1	equ	0xFE6
  3100                           postdec1	equ	0xFE5
  3101                           fsr1h	equ	0xFE2
  3102                           fsr1l	equ	0xFE1
  3103                           indf2	equ	0xFDF
  3104                           postinc2	equ	0xFDE
  3105                           postdec2	equ	0xFDD
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _I2C_Stop *****************
  3111 ;; Defined at:
  3112 ;;		line 59 in file "../My_header\My_I2C.h"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    5
  3133 ;; This function calls:
  3134 ;;		_I2C_IdleCheck
  3135 ;; This function is called by:
  3136 ;;		_I2C_LCD_Command
  3137 ;;		_I2C_LCD_Puts
  3138 ;;		_I2C_LCD_Putc
  3139 ;;		_I2C_LCD_CreateChar
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text21
  3144  001F14                     __ptext21:
  3145                           	opt stack 0
  3146  001F14                     _I2C_Stop:
  3147                           	opt stack 22
  3148                           
  3149                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  3150                           
  3151                           ;incstack = 0
  3152  001F14  0E05               	movlw	5
  3153  001F16  EC44  F00F         	call	_I2C_IdleCheck
  3154                           
  3155                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  3156  001F1A  84C5               	bsf	4037,2,c	;volatile
  3157  001F1C  0012               	return		;funcret
  3158  001F1E                     __end_of_I2C_Stop:
  3159                           	opt stack 0
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           intcon2	equ	0xFF1
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           postinc1	equ	0xFE6
  3171                           postdec1	equ	0xFE5
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _I2C_Start *****************
  3182 ;; Defined at:
  3183 ;;		line 35 in file "../My_header\My_I2C.h"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  adrs            1    wreg     unsigned char 
  3186 ;;  rw              1    2[BANK0 ] unsigned char 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  adrs            1    3[BANK0 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    5
  3205 ;; This function calls:
  3206 ;;		_I2C_IdleCheck
  3207 ;; This function is called by:
  3208 ;;		_I2C_LCD_Command
  3209 ;;		_I2C_LCD_Puts
  3210 ;;		_I2C_LCD_Putc
  3211 ;;		_I2C_LCD_CreateChar
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text22
  3216  001D8C                     __ptext22:
  3217                           	opt stack 0
  3218  001D8C                     _I2C_Start:
  3219                           	opt stack 22
  3220                           
  3221                           ;incstack = 0
  3222                           ;I2C_Start@adrs stored from wreg
  3223  001D8C  0100               	movlb	0	; () banked
  3224  001D8E  6F63               	movwf	I2C_Start@adrs& (0+255),b
  3225                           
  3226                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  3227  001D90  0E05               	movlw	5
  3228  001D92  EC44  F00F         	call	_I2C_IdleCheck
  3229                           
  3230                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  3231  001D96  80C5               	bsf	4037,0,c	;volatile
  3232                           
  3233                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  3234  001D98  0E05               	movlw	5
  3235  001D9A  EC44  F00F         	call	_I2C_IdleCheck
  3236                           
  3237                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  3238  001D9E  969E               	bcf	3998,3,c	;volatile
  3239                           
  3240                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3241  001DA0  0100               	movlb	0	; () banked
  3242  001DA2  5163               	movf	I2C_Start@adrs& (0+255),w,b
  3243  001DA4  2563               	addwf	I2C_Start@adrs& (0+255),w,b
  3244  001DA6  0100               	movlb	0	; () banked
  3245  001DA8  2562               	addwf	I2C_Start@rw& (0+255),w,b
  3246  001DAA  6EC9               	movwf	4041,c	;volatile
  3247  001DAC                     l287:
  3248  001DAC  A69E               	btfss	3998,3,c	;volatile
  3249  001DAE  D7FE               	goto	l287
  3250                           
  3251                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  3252  001DB0  ACC5               	btfss	4037,6,c	;volatile
  3253  001DB2  D002               	goto	u910
  3254  001DB4  0E01               	movlw	1
  3255  001DB6  0012               	return	
  3256  001DB8                     u910:
  3257  001DB8  0E00               	movlw	0
  3258  001DBA  0012               	return	
  3259  001DBC                     __end_of_I2C_Start:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           prodh	equ	0xFF4
  3266                           prodl	equ	0xFF3
  3267                           intcon	equ	0xFF2
  3268                           intcon2	equ	0xFF1
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           postinc1	equ	0xFE6
  3272                           postdec1	equ	0xFE5
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           fsr2h	equ	0xFDA
  3279                           fsr2l	equ	0xFD9
  3280                           status	equ	0xFD8
  3281                           
  3282 ;; *************** function _I2C_Send *****************
  3283 ;; Defined at:
  3284 ;;		line 65 in file "../My_header\My_I2C.h"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  data            1    wreg     unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  data            1    2[BANK0 ] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      unsigned char 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;Total ram usage:        1 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    5
  3305 ;; This function calls:
  3306 ;;		_I2C_IdleCheck
  3307 ;; This function is called by:
  3308 ;;		_I2C_LCD_Command
  3309 ;;		_I2C_LCD_Puts
  3310 ;;		_I2C_LCD_Putc
  3311 ;;		_I2C_LCD_CreateChar
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text23
  3316  001EDC                     __ptext23:
  3317                           	opt stack 0
  3318  001EDC                     _I2C_Send:
  3319                           	opt stack 22
  3320                           
  3321                           ;incstack = 0
  3322                           ;I2C_Send@data stored from wreg
  3323  001EDC  0100               	movlb	0	; () banked
  3324  001EDE  6F62               	movwf	I2C_Send@data& (0+255),b
  3325                           
  3326                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  3327  001EE0  0E05               	movlw	5
  3328  001EE2  EC44  F00F         	call	_I2C_IdleCheck
  3329                           
  3330                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  3331  001EE6  969E               	bcf	3998,3,c	;volatile
  3332                           
  3333                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  3334  001EE8  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
  3335  001EEC                     l302:
  3336  001EEC  A69E               	btfss	3998,3,c	;volatile
  3337  001EEE  D7FE               	goto	l302
  3338                           
  3339                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  3340                           ;	Return value of _I2C_Send is never used
  3341  001EF0  50C5               	movf	4037,w,c	;volatile
  3342  001EF2  0012               	return	
  3343  001EF4                     __end_of_I2C_Send:
  3344                           	opt stack 0
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           postinc1	equ	0xFE6
  3356                           postdec1	equ	0xFE5
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           postdec2	equ	0xFDD
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _I2C_IdleCheck *****************
  3367 ;; Defined at:
  3368 ;;		line 21 in file "../My_header\My_I2C.h"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  mask            1    wreg     unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  mask            1    1[BANK0 ] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;		None               void
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    4
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_I2C_Start
  3393 ;;		_I2C_Stop
  3394 ;;		_I2C_Send
  3395 ;;		_I2C_rStart
  3396 ;;		_I2C_Receive
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text24
  3401  001E88                     __ptext24:
  3402                           	opt stack 0
  3403  001E88                     _I2C_IdleCheck:
  3404                           	opt stack 22
  3405                           
  3406                           ;incstack = 0
  3407                           ;I2C_IdleCheck@mask stored from wreg
  3408  001E88  0100               	movlb	0	; () banked
  3409  001E8A  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
  3410  001E8C                     l1736:
  3411  001E8C  50C7               	movf	4039,w,c	;volatile
  3412  001E8E  0100               	movlb	0	; () banked
  3413  001E90  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
  3414  001E92  0100               	movlb	0	; () banked
  3415  001E94  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
  3416  001E96  50C5               	movf	4037,w,c	;volatile
  3417  001E98  0B1F               	andlw	31
  3418  001E9A  0100               	movlb	0	; () banked
  3419  001E9C  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
  3420  001E9E  0900               	iorlw	0
  3421  001EA0  B4D8               	btfsc	status,2,c
  3422  001EA2  0012               	return	
  3423  001EA4  D7F3               	goto	l1736
  3424  001EA6                     __end_of_I2C_IdleCheck:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           intcon	equ	0xFF2
  3433                           intcon2	equ	0xFF1
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           postinc1	equ	0xFE6
  3437                           postdec1	equ	0xFE5
  3438                           fsr1h	equ	0xFE2
  3439                           fsr1l	equ	0xFE1
  3440                           indf2	equ	0xFDF
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _CTMU_read *****************
  3448 ;; Defined at:
  3449 ;;		line 304 in file "../My_header\My_header.h"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  ch              1    wreg     unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  ch              1   16[BANK0 ] unsigned char 
  3454 ;;  i               1   21[BANK0 ] unsigned char 
  3455 ;;  sum             4   17[BANK0 ] unsigned long 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2   13[BANK0 ] unsigned int 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3466 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;Total ram usage:        9 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    5
  3472 ;; This function calls:
  3473 ;;		___lldiv
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text25
  3480  001502                     __ptext25:
  3481                           	opt stack 0
  3482  001502                     _CTMU_read:
  3483                           	opt stack 25
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;incstack = 0
  3487                           ;CTMU_read@ch stored from wreg
  3488  001502  0100               	movlb	0	; () banked
  3489  001504  6F70               	movwf	CTMU_read@ch& (0+255),b
  3490                           
  3491                           ;My_header\My_header.h: 305: uint32_t sum = 0;
  3492  001506  0E00               	movlw	0
  3493  001508  0100               	movlb	0	; () banked
  3494  00150A  6F71               	movwf	CTMU_read@sum& (0+255),b
  3495  00150C  0E00               	movlw	0
  3496  00150E  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
  3497  001510  0E00               	movlw	0
  3498  001512  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
  3499  001514  0E00               	movlw	0
  3500  001516  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
  3501                           
  3502                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
  3503  001518  0E00               	movlw	0
  3504  00151A  0100               	movlb	0	; () banked
  3505  00151C  6F75               	movwf	CTMU_read@i& (0+255),b
  3506  00151E                     l2026:
  3507                           
  3508                           ; BSR set to: 0
  3509  00151E  0E09               	movlw	9
  3510  001520  0100               	movlb	0	; () banked
  3511  001522  6575               	cpfsgt	CTMU_read@i& (0+255),b
  3512  001524  D001               	goto	l2030
  3513  001526  D02B               	goto	l2058
  3514  001528                     l2030:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
  3518  001528  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
  3519  00152C  0100               	movlb	0	; () banked
  3520  00152E  476F               	rlncf	??_CTMU_read& (0+255),f,b
  3521  001530  476F               	rlncf	??_CTMU_read& (0+255),f,b
  3522  001532  50C2               	movf	4034,w,c	;volatile
  3523  001534  0100               	movlb	0	; () banked
  3524  001536  196F               	xorwf	??_CTMU_read& (0+255),w,b
  3525  001538  0BC3               	andlw	-61
  3526  00153A  196F               	xorwf	??_CTMU_read& (0+255),w,b
  3527  00153C  6EC2               	movwf	4034,c	;volatile
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
  3531  00153E  8EB3               	bsf	4019,7,c	;volatile
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
  3535  001540  90B2               	bcf	4018,0,c	;volatile
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
  3539  001542  92B2               	bcf	4018,1,c	;volatile
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
  3543  001544  82B3               	bsf	4019,1,c	;volatile
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
  3547  001546  0E50               	movlw	80
  3548  001548                     u1787:
  3549  001548  2EE8               	decfsz	wreg,f,c
  3550  00154A  D7FE               	goto	u1787
  3551                           
  3552                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
  3553  00154C  92B3               	bcf	4019,1,c	;volatile
  3554                           
  3555                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
  3556  00154E  80B2               	bsf	4018,0,c	;volatile
  3557                           
  3558                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
  3559  001550  0E14               	movlw	20
  3560  001552                     u1797:
  3561  001552  2EE8               	decfsz	wreg,f,c
  3562  001554  D7FE               	goto	u1797
  3563                           
  3564                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
  3565  001556  90B2               	bcf	4018,0,c	;volatile
  3566                           
  3567                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
  3568  001558  9C9E               	bcf	3998,6,c	;volatile
  3569                           
  3570                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
  3571  00155A  82C2               	bsf	4034,1,c	;volatile
  3572  00155C                     l215:
  3573  00155C  AC9E               	btfss	3998,6,c	;volatile
  3574  00155E  D7FE               	goto	l215
  3575                           
  3576                           ;My_header\My_header.h: 324: sum += ADRES;
  3577  001560  50C3               	movf	4035,w,c	;volatile
  3578  001562  0100               	movlb	0	; () banked
  3579  001564  2771               	addwf	CTMU_read@sum& (0+255),f,b
  3580  001566  50C4               	movf	4036,w,c	;volatile
  3581  001568  0100               	movlb	0	; () banked
  3582  00156A  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
  3583  00156C  0E00               	movlw	0
  3584  00156E  0100               	movlb	0	; () banked
  3585  001570  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
  3586  001572  0E00               	movlw	0
  3587  001574  0100               	movlb	0	; () banked
  3588  001576  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
  3589  001578  0100               	movlb	0	; () banked
  3590  00157A  2B75               	incf	CTMU_read@i& (0+255),f,b
  3591  00157C  D7D0               	goto	l2026
  3592  00157E                     l2058:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;My_header\My_header.h: 325: }
  3596                           ;My_header\My_header.h: 326: return sum / 10 / 4;
  3597  00157E  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
  3598  001582  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
  3599  001586  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
  3600  00158A  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
  3601  00158E  0E0A               	movlw	10
  3602  001590  0100               	movlb	0	; () banked
  3603  001592  6F64               	movwf	___lldiv@divisor& (0+255),b
  3604  001594  0E00               	movlw	0
  3605  001596  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3606  001598  0E00               	movlw	0
  3607  00159A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3608  00159C  0E00               	movlw	0
  3609  00159E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3610  0015A0  ECE2  F00A         	call	___lldiv	;wreg free
  3611  0015A4  0E03               	movlw	3
  3612  0015A6  D007               	goto	u1210
  3613  0015A8                     u1215:
  3614  0015A8  0100               	movlb	0	; () banked
  3615  0015AA  90D8               	bcf	status,0,c
  3616  0015AC  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
  3617  0015AE  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
  3618  0015B0  0100               	movlb	0	; () banked
  3619  0015B2  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
  3620  0015B4  3360               	rrcf	?___lldiv& (0+255),f,b
  3621  0015B6                     u1210:
  3622  0015B6  2EE8               	decfsz	wreg,f,c
  3623  0015B8  D7F7               	goto	u1215
  3624  0015BA  C060  F06D         	movff	?___lldiv,?_CTMU_read
  3625  0015BE  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
  3626  0015C2  0012               	return	
  3627  0015C4                     __end_of_CTMU_read:
  3628                           	opt stack 0
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           prodh	equ	0xFF4
  3634                           prodl	equ	0xFF3
  3635                           intcon	equ	0xFF2
  3636                           intcon2	equ	0xFF1
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           postinc1	equ	0xFE6
  3640                           postdec1	equ	0xFE5
  3641                           fsr1h	equ	0xFE2
  3642                           fsr1l	equ	0xFE1
  3643                           indf2	equ	0xFDF
  3644                           postinc2	equ	0xFDE
  3645                           postdec2	equ	0xFDD
  3646                           fsr2h	equ	0xFDA
  3647                           fsr2l	equ	0xFD9
  3648                           status	equ	0xFD8
  3649                           
  3650 ;; *************** function ___lldiv *****************
  3651 ;; Defined at:
  3652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  dividend        4    0[BANK0 ] unsigned long 
  3655 ;;  divisor         4    4[BANK0 ] unsigned long 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  quotient        4    8[BANK0 ] unsigned long 
  3658 ;;  counter         1   12[BANK0 ] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  4    0[BANK0 ] unsigned long 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3668 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3671 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;Total ram usage:       13 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    4
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_CTMU_read
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text26
  3683  0015C4                     __ptext26:
  3684                           	opt stack 0
  3685  0015C4                     ___lldiv:
  3686                           	opt stack 25
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;incstack = 0
  3690  0015C4  0E00               	movlw	0
  3691  0015C6  0100               	movlb	0	; () banked
  3692  0015C8  6F68               	movwf	___lldiv@quotient& (0+255),b
  3693  0015CA  0E00               	movlw	0
  3694  0015CC  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  3695  0015CE  0E00               	movlw	0
  3696  0015D0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  3697  0015D2  0E00               	movlw	0
  3698  0015D4  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  3699                           
  3700                           ; BSR set to: 0
  3701  0015D6  0100               	movlb	0	; () banked
  3702  0015D8  5164               	movf	___lldiv@divisor& (0+255),w,b
  3703  0015DA  0100               	movlb	0	; () banked
  3704  0015DC  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3705  0015DE  0100               	movlb	0	; () banked
  3706  0015E0  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3707  0015E2  0100               	movlb	0	; () banked
  3708  0015E4  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3709  0015E6  B4D8               	btfsc	status,2,c
  3710  0015E8  D042               	goto	l722
  3711                           
  3712                           ; BSR set to: 0
  3713  0015EA  0E01               	movlw	1
  3714  0015EC  0100               	movlb	0	; () banked
  3715  0015EE  6F6C               	movwf	___lldiv@counter& (0+255),b
  3716  0015F0  D008               	goto	l1920
  3717  0015F2                     l1918:
  3718                           
  3719                           ; BSR set to: 0
  3720  0015F2  0100               	movlb	0	; () banked
  3721  0015F4  90D8               	bcf	status,0,c
  3722  0015F6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  3723  0015F8  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3724  0015FA  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3725  0015FC  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3726  0015FE  0100               	movlb	0	; () banked
  3727  001600  2B6C               	incf	___lldiv@counter& (0+255),f,b
  3728  001602                     l1920:
  3729                           
  3730                           ; BSR set to: 0
  3731  001602  0100               	movlb	0	; () banked
  3732  001604  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3733  001606  D7F5               	goto	l1918
  3734  001608                     l1922:
  3735                           
  3736                           ; BSR set to: 0
  3737  001608  0100               	movlb	0	; () banked
  3738  00160A  90D8               	bcf	status,0,c
  3739  00160C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  3740  00160E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3741  001610  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3742  001612  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3743                           
  3744                           ; BSR set to: 0
  3745  001614  0100               	movlb	0	; () banked
  3746  001616  5164               	movf	___lldiv@divisor& (0+255),w,b
  3747  001618  0100               	movlb	0	; () banked
  3748  00161A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  3749  00161C  0100               	movlb	0	; () banked
  3750  00161E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3751  001620  0100               	movlb	0	; () banked
  3752  001622  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3753  001624  0100               	movlb	0	; () banked
  3754  001626  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3755  001628  0100               	movlb	0	; () banked
  3756  00162A  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3757  00162C  0100               	movlb	0	; () banked
  3758  00162E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3759  001630  0100               	movlb	0	; () banked
  3760  001632  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3761  001634  A0D8               	btfss	status,0,c
  3762  001636  D012               	goto	l1930
  3763                           
  3764                           ; BSR set to: 0
  3765  001638  0100               	movlb	0	; () banked
  3766  00163A  5164               	movf	___lldiv@divisor& (0+255),w,b
  3767  00163C  0100               	movlb	0	; () banked
  3768  00163E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  3769  001640  0100               	movlb	0	; () banked
  3770  001642  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3771  001644  0100               	movlb	0	; () banked
  3772  001646  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3773  001648  0100               	movlb	0	; () banked
  3774  00164A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3775  00164C  0100               	movlb	0	; () banked
  3776  00164E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3777  001650  0100               	movlb	0	; () banked
  3778  001652  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3779  001654  0100               	movlb	0	; () banked
  3780  001656  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3781                           
  3782                           ; BSR set to: 0
  3783  001658  0100               	movlb	0	; () banked
  3784  00165A  8168               	bsf	___lldiv@quotient& (0+255),0,b
  3785  00165C                     l1930:
  3786                           
  3787                           ; BSR set to: 0
  3788  00165C  0100               	movlb	0	; () banked
  3789  00165E  90D8               	bcf	status,0,c
  3790  001660  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3791  001662  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3792  001664  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3793  001666  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  3794                           
  3795                           ; BSR set to: 0
  3796  001668  0100               	movlb	0	; () banked
  3797  00166A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  3798  00166C  D7CD               	goto	l1922
  3799  00166E                     l722:
  3800                           
  3801                           ; BSR set to: 0
  3802  00166E  C068  F060         	movff	___lldiv@quotient,?___lldiv
  3803  001672  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  3804  001676  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  3805  00167A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  3806                           
  3807                           ; BSR set to: 0
  3808  00167E  0012               	return		;funcret
  3809  001680                     __end_of___lldiv:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           intcon2	equ	0xFF1
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           postinc1	equ	0xFE6
  3822                           postdec1	equ	0xFE5
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           indf2	equ	0xFDF
  3826                           postinc2	equ	0xFDE
  3827                           postdec2	equ	0xFDD
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _ISR *****************
  3833 ;; Defined at:
  3834 ;;		line 43 in file "main.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;		None               void
  3841 ;; Registers used:
  3842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;Total ram usage:       14 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    3
  3855 ;; This function calls:
  3856 ;;		_UART_ISR
  3857 ;;		_button_timer_interrupt
  3858 ;;		i2_CTMU_read
  3859 ;;		i2___lwdiv
  3860 ;; This function is called by:
  3861 ;;		Interrupt level 2
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	intcode
  3866  000008                     __pintcode:
  3867                           	opt stack 0
  3868  000008                     _ISR:
  3869                           	opt stack 21
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;incstack = 0
  3873  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3874  00000A  CFFA F023          	movff	pclath,??_ISR
  3875  00000E  CFFB F024          	movff	pclatu,??_ISR+1
  3876  000012  CFE9 F025          	movff	fsr0l,??_ISR+2
  3877  000016  CFEA F026          	movff	fsr0h,??_ISR+3
  3878  00001A  CFE1 F027          	movff	fsr1l,??_ISR+4
  3879  00001E  CFE2 F028          	movff	fsr1h,??_ISR+5
  3880  000022  CFD9 F029          	movff	fsr2l,??_ISR+6
  3881  000026  CFDA F02A          	movff	fsr2h,??_ISR+7
  3882  00002A  CFF3 F02B          	movff	prodl,??_ISR+8
  3883  00002E  CFF4 F02C          	movff	prodh,??_ISR+9
  3884  000032  CFF6 F02D          	movff	tblptrl,??_ISR+10
  3885  000036  CFF7 F02E          	movff	tblptrh,??_ISR+11
  3886  00003A  CFF8 F02F          	movff	tblptru,??_ISR+12
  3887  00003E  CFF5 F030          	movff	tablat,??_ISR+13
  3888                           
  3889                           ;main.c: 44: UART_ISR();
  3890  000042  EC68  F00E         	call	_UART_ISR	;wreg free
  3891                           
  3892                           ;main.c: 45: if (INTCONbits.T0IF) {
  3893  000046  B4F2               	btfsc	intcon,2,c	;volatile
  3894                           
  3895                           ;main.c: 46: INTCONbits.T0IF = 0;
  3896  000048  94F2               	bcf	intcon,2,c	;volatile
  3897                           
  3898                           ;main.c: 47: }
  3899                           ;main.c: 48: if (PIR1bits.TMR1IF) {
  3900  00004A  A09E               	btfss	3998,0,c	;volatile
  3901  00004C  D003               	goto	i2l2378
  3902                           
  3903                           ;main.c: 49: PIR1bits.TMR1IF = 0;
  3904  00004E  909E               	bcf	3998,0,c	;volatile
  3905                           
  3906                           ;main.c: 50: TMR1H = 0x80;
  3907  000050  0E80               	movlw	128
  3908  000052  6ECF               	movwf	4047,c	;volatile
  3909  000054                     i2l2378:
  3910                           
  3911                           ;main.c: 51: }
  3912                           ;main.c: 52: if (PIR2bits.TMR3IF) {
  3913  000054  A2A1               	btfss	4001,1,c	;volatile
  3914  000056  D01C               	goto	i2l350
  3915                           
  3916                           ;main.c: 53: PIR2bits.TMR3IF = 0;
  3917  000058  92A1               	bcf	4001,1,c	;volatile
  3918                           
  3919                           ;main.c: 54: button_timer_interrupt(&ct, !(CTMU_read(0) / ctmu_value));
  3920  00005A  0E4C               	movlw	low _ct
  3921  00005C  6E1E               	movwf	button_timer_interrupt@bt,c
  3922  00005E  0E00               	movlw	high _ct
  3923  000060  6E1F               	movwf	button_timer_interrupt@bt+1,c
  3924  000062  0E00               	movlw	0
  3925  000064  EC4F  F00C         	call	i2_CTMU_read
  3926  000068  C00E  F017         	movff	?i2_CTMU_read,i2___lwdiv@dividend
  3927  00006C  C00F  F018         	movff	?i2_CTMU_read+1,i2___lwdiv@dividend+1
  3928  000070  C038  F019         	movff	_ctmu_value,i2___lwdiv@divisor
  3929  000074  C039  F01A         	movff	_ctmu_value+1,i2___lwdiv@divisor+1
  3930  000078  ECF0  F00D         	call	i2___lwdiv	;wreg free
  3931  00007C  5017               	movf	?i2___lwdiv,w,c
  3932  00007E  1018               	iorwf	?i2___lwdiv+1,w,c
  3933  000080  A4D8               	btfss	status,2,c
  3934  000082  D002               	goto	i2u167_40
  3935  000084  0E01               	movlw	1
  3936  000086  D001               	goto	i2u168_40
  3937  000088                     i2u167_40:
  3938  000088  0E00               	movlw	0
  3939  00008A                     i2u168_40:
  3940  00008A  6E20               	movwf	button_timer_interrupt@sw_value,c
  3941  00008C  EC8A  F007         	call	_button_timer_interrupt	;wreg free
  3942  000090                     i2l350:
  3943  000090  C030  FFF5         	movff	??_ISR+13,tablat
  3944  000094  C02F  FFF8         	movff	??_ISR+12,tblptru
  3945  000098  C02E  FFF7         	movff	??_ISR+11,tblptrh
  3946  00009C  C02D  FFF6         	movff	??_ISR+10,tblptrl
  3947  0000A0  C02C  FFF4         	movff	??_ISR+9,prodh
  3948  0000A4  C02B  FFF3         	movff	??_ISR+8,prodl
  3949  0000A8  C02A  FFDA         	movff	??_ISR+7,fsr2h
  3950  0000AC  C029  FFD9         	movff	??_ISR+6,fsr2l
  3951  0000B0  C028  FFE2         	movff	??_ISR+5,fsr1h
  3952  0000B4  C027  FFE1         	movff	??_ISR+4,fsr1l
  3953  0000B8  C026  FFEA         	movff	??_ISR+3,fsr0h
  3954  0000BC  C025  FFE9         	movff	??_ISR+2,fsr0l
  3955  0000C0  C024  FFFB         	movff	??_ISR+1,pclatu
  3956  0000C4  C023  FFFA         	movff	??_ISR,pclath
  3957  0000C8  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3958  0000CA  0011               	retfie		f
  3959  0000CC                     __end_of_ISR:
  3960                           	opt stack 0
  3961                           pclatu	equ	0xFFB
  3962                           pclath	equ	0xFFA
  3963                           tblptru	equ	0xFF8
  3964                           tblptrh	equ	0xFF7
  3965                           tblptrl	equ	0xFF6
  3966                           tablat	equ	0xFF5
  3967                           prodh	equ	0xFF4
  3968                           prodl	equ	0xFF3
  3969                           intcon	equ	0xFF2
  3970                           intcon2	equ	0xFF1
  3971                           postinc0	equ	0xFEE
  3972                           fsr0h	equ	0xFEA
  3973                           fsr0l	equ	0xFE9
  3974                           wreg	equ	0xFE8
  3975                           postinc1	equ	0xFE6
  3976                           postdec1	equ	0xFE5
  3977                           fsr1h	equ	0xFE2
  3978                           fsr1l	equ	0xFE1
  3979                           indf2	equ	0xFDF
  3980                           postinc2	equ	0xFDE
  3981                           postdec2	equ	0xFDD
  3982                           fsr2h	equ	0xFDA
  3983                           fsr2l	equ	0xFD9
  3984                           status	equ	0xFD8
  3985                           
  3986 ;; *************** function i2___lwdiv *****************
  3987 ;; Defined at:
  3988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  dividend        2   22[COMRAM] unsigned int 
  3991 ;;  divisor         2   24[COMRAM] unsigned int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  __lwdiv         2   26[COMRAM] unsigned int 
  3994 ;;  __lwdiv         1   28[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2   22[COMRAM] unsigned int 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;Total ram usage:        7 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_ISR
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text28
  4018  001BE0                     __ptext28:
  4019                           	opt stack 0
  4020  001BE0                     i2___lwdiv:
  4021                           	opt stack 23
  4022                           
  4023                           ;incstack = 0
  4024  001BE0  0E00               	movlw	0
  4025  001BE2  6E1C               	movwf	i2___lwdiv@quotient+1,c
  4026  001BE4  0E00               	movlw	0
  4027  001BE6  6E1B               	movwf	i2___lwdiv@quotient,c
  4028  001BE8  5019               	movf	i2___lwdiv@divisor,w,c
  4029  001BEA  101A               	iorwf	i2___lwdiv@divisor+1,w,c
  4030  001BEC  B4D8               	btfsc	status,2,c
  4031  001BEE  D01C               	goto	i2l775
  4032  001BF0  0E01               	movlw	1
  4033  001BF2  6E1D               	movwf	i2___lwdiv@counter,c
  4034  001BF4  D004               	goto	i2l2240
  4035  001BF6                     i2l2238:
  4036  001BF6  90D8               	bcf	status,0,c
  4037  001BF8  3619               	rlcf	i2___lwdiv@divisor,f,c
  4038  001BFA  361A               	rlcf	i2___lwdiv@divisor+1,f,c
  4039  001BFC  2A1D               	incf	i2___lwdiv@counter,f,c
  4040  001BFE                     i2l2240:
  4041  001BFE  AE1A               	btfss	i2___lwdiv@divisor+1,7,c
  4042  001C00  D7FA               	goto	i2l2238
  4043  001C02                     i2l2242:
  4044  001C02  90D8               	bcf	status,0,c
  4045  001C04  361B               	rlcf	i2___lwdiv@quotient,f,c
  4046  001C06  361C               	rlcf	i2___lwdiv@quotient+1,f,c
  4047  001C08  5019               	movf	i2___lwdiv@divisor,w,c
  4048  001C0A  5C17               	subwf	i2___lwdiv@dividend,w,c
  4049  001C0C  501A               	movf	i2___lwdiv@divisor+1,w,c
  4050  001C0E  5818               	subwfb	i2___lwdiv@dividend+1,w,c
  4051  001C10  A0D8               	btfss	status,0,c
  4052  001C12  D005               	goto	i2l2250
  4053  001C14  5019               	movf	i2___lwdiv@divisor,w,c
  4054  001C16  5E17               	subwf	i2___lwdiv@dividend,f,c
  4055  001C18  501A               	movf	i2___lwdiv@divisor+1,w,c
  4056  001C1A  5A18               	subwfb	i2___lwdiv@dividend+1,f,c
  4057  001C1C  801B               	bsf	i2___lwdiv@quotient,0,c
  4058  001C1E                     i2l2250:
  4059  001C1E  90D8               	bcf	status,0,c
  4060  001C20  321A               	rrcf	i2___lwdiv@divisor+1,f,c
  4061  001C22  3219               	rrcf	i2___lwdiv@divisor,f,c
  4062  001C24  2E1D               	decfsz	i2___lwdiv@counter,f,c
  4063  001C26  D7ED               	goto	i2l2242
  4064  001C28                     i2l775:
  4065  001C28  C01B  F017         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4066  001C2C  C01C  F018         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4067  001C30  0012               	return		;funcret
  4068  001C32                     __end_ofi2___lwdiv:
  4069                           	opt stack 0
  4070                           pclatu	equ	0xFFB
  4071                           pclath	equ	0xFFA
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           prodh	equ	0xFF4
  4077                           prodl	equ	0xFF3
  4078                           intcon	equ	0xFF2
  4079                           intcon2	equ	0xFF1
  4080                           postinc0	equ	0xFEE
  4081                           fsr0h	equ	0xFEA
  4082                           fsr0l	equ	0xFE9
  4083                           wreg	equ	0xFE8
  4084                           postinc1	equ	0xFE6
  4085                           postdec1	equ	0xFE5
  4086                           fsr1h	equ	0xFE2
  4087                           fsr1l	equ	0xFE1
  4088                           indf2	equ	0xFDF
  4089                           postinc2	equ	0xFDE
  4090                           postdec2	equ	0xFDD
  4091                           fsr2h	equ	0xFDA
  4092                           fsr2l	equ	0xFD9
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function i2_CTMU_read *****************
  4096 ;; Defined at:
  4097 ;;		line 304 in file "../My_header\My_header.h"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  ch              1    wreg     unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  ch              1   16[COMRAM] unsigned char 
  4102 ;;  CTMU_read       4   17[COMRAM] unsigned long 
  4103 ;;  CTMU_read       1   21[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2   13[COMRAM] unsigned int 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:        9 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    1
  4120 ;; This function calls:
  4121 ;;		i2___lldiv
  4122 ;; This function is called by:
  4123 ;;		_ISR
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text29
  4128  00189E                     __ptext29:
  4129                           	opt stack 0
  4130  00189E                     i2_CTMU_read:
  4131                           	opt stack 22
  4132                           
  4133                           ;incstack = 0
  4134                           ;i2CTMU_read@ch stored from wreg
  4135  00189E  6E11               	movwf	i2CTMU_read@ch,c
  4136                           
  4137                           ;My_header\My_header.h: 305: uint32_t sum = 0;
  4138  0018A0  0E00               	movlw	0
  4139  0018A2  6E12               	movwf	i2CTMU_read@sum,c
  4140  0018A4  0E00               	movlw	0
  4141  0018A6  6E13               	movwf	i2CTMU_read@sum+1,c
  4142  0018A8  0E00               	movlw	0
  4143  0018AA  6E14               	movwf	i2CTMU_read@sum+2,c
  4144  0018AC  0E00               	movlw	0
  4145  0018AE  6E15               	movwf	i2CTMU_read@sum+3,c
  4146                           
  4147                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
  4148  0018B0  0E00               	movlw	0
  4149  0018B2  6E16               	movwf	i2CTMU_read@i,c
  4150  0018B4                     i2l2196:
  4151  0018B4  0E09               	movlw	9
  4152  0018B6  6416               	cpfsgt	i2CTMU_read@i,c
  4153  0018B8  D001               	goto	i2l2200
  4154  0018BA  D024               	goto	i2l2228
  4155  0018BC                     i2l2200:
  4156                           
  4157                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
  4158  0018BC  C011  F010         	movff	i2CTMU_read@ch,??i2_CTMU_read
  4159  0018C0  4610               	rlncf	??i2_CTMU_read,f,c
  4160  0018C2  4610               	rlncf	??i2_CTMU_read,f,c
  4161  0018C4  50C2               	movf	4034,w,c	;volatile
  4162  0018C6  1810               	xorwf	??i2_CTMU_read,w,c
  4163  0018C8  0BC3               	andlw	-61
  4164  0018CA  1810               	xorwf	??i2_CTMU_read,w,c
  4165  0018CC  6EC2               	movwf	4034,c	;volatile
  4166                           
  4167                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
  4168  0018CE  8EB3               	bsf	4019,7,c	;volatile
  4169                           
  4170                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
  4171  0018D0  90B2               	bcf	4018,0,c	;volatile
  4172                           
  4173                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
  4174  0018D2  92B2               	bcf	4018,1,c	;volatile
  4175                           
  4176                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
  4177  0018D4  82B3               	bsf	4019,1,c	;volatile
  4178                           
  4179                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
  4180  0018D6  0E50               	movlw	80
  4181  0018D8                     i2u180_47:
  4182  0018D8  2EE8               	decfsz	wreg,f,c
  4183  0018DA  D7FE               	goto	i2u180_47
  4184                           
  4185                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
  4186  0018DC  92B3               	bcf	4019,1,c	;volatile
  4187                           
  4188                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
  4189  0018DE  80B2               	bsf	4018,0,c	;volatile
  4190                           
  4191                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
  4192  0018E0  0E14               	movlw	20
  4193  0018E2                     i2u181_47:
  4194  0018E2  2EE8               	decfsz	wreg,f,c
  4195  0018E4  D7FE               	goto	i2u181_47
  4196                           
  4197                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
  4198  0018E6  90B2               	bcf	4018,0,c	;volatile
  4199                           
  4200                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
  4201  0018E8  9C9E               	bcf	3998,6,c	;volatile
  4202                           
  4203                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
  4204  0018EA  82C2               	bsf	4034,1,c	;volatile
  4205  0018EC                     i2l215:
  4206  0018EC  AC9E               	btfss	3998,6,c	;volatile
  4207  0018EE  D7FE               	goto	i2l215
  4208                           
  4209                           ;My_header\My_header.h: 324: sum += ADRES;
  4210  0018F0  50C3               	movf	4035,w,c	;volatile
  4211  0018F2  2612               	addwf	i2CTMU_read@sum,f,c
  4212  0018F4  50C4               	movf	4036,w,c	;volatile
  4213  0018F6  2213               	addwfc	i2CTMU_read@sum+1,f,c
  4214  0018F8  0E00               	movlw	0
  4215  0018FA  2214               	addwfc	i2CTMU_read@sum+2,f,c
  4216  0018FC  0E00               	movlw	0
  4217  0018FE  2215               	addwfc	i2CTMU_read@sum+3,f,c
  4218  001900  2A16               	incf	i2CTMU_read@i,f,c
  4219  001902  D7D8               	goto	i2l2196
  4220  001904                     i2l2228:
  4221                           
  4222                           ;My_header\My_header.h: 325: }
  4223                           ;My_header\My_header.h: 326: return sum / 10 / 4;
  4224  001904  C012  F001         	movff	i2CTMU_read@sum,i2___lldiv@dividend
  4225  001908  C013  F002         	movff	i2CTMU_read@sum+1,i2___lldiv@dividend+1
  4226  00190C  C014  F003         	movff	i2CTMU_read@sum+2,i2___lldiv@dividend+2
  4227  001910  C015  F004         	movff	i2CTMU_read@sum+3,i2___lldiv@dividend+3
  4228  001914  0E0A               	movlw	10
  4229  001916  6E05               	movwf	i2___lldiv@divisor,c
  4230  001918  0E00               	movlw	0
  4231  00191A  6E06               	movwf	i2___lldiv@divisor+1,c
  4232  00191C  0E00               	movlw	0
  4233  00191E  6E07               	movwf	i2___lldiv@divisor+2,c
  4234  001920  0E00               	movlw	0
  4235  001922  6E08               	movwf	i2___lldiv@divisor+3,c
  4236  001924  ECEC  F00C         	call	i2___lldiv	;wreg free
  4237  001928  0E03               	movlw	3
  4238  00192A  D005               	goto	i2u148_40
  4239  00192C                     i2u148_45:
  4240  00192C  90D8               	bcf	status,0,c
  4241  00192E  3204               	rrcf	?i2___lldiv+3,f,c
  4242  001930  3203               	rrcf	?i2___lldiv+2,f,c
  4243  001932  3202               	rrcf	?i2___lldiv+1,f,c
  4244  001934  3201               	rrcf	?i2___lldiv,f,c
  4245  001936                     i2u148_40:
  4246  001936  2EE8               	decfsz	wreg,f,c
  4247  001938  D7F9               	goto	i2u148_45
  4248  00193A  C001  F00E         	movff	?i2___lldiv,?i2_CTMU_read
  4249  00193E  C002  F00F         	movff	?i2___lldiv+1,?i2_CTMU_read+1
  4250  001942  0012               	return	
  4251  001944                     __end_ofi2_CTMU_read:
  4252                           	opt stack 0
  4253                           pclatu	equ	0xFFB
  4254                           pclath	equ	0xFFA
  4255                           tblptru	equ	0xFF8
  4256                           tblptrh	equ	0xFF7
  4257                           tblptrl	equ	0xFF6
  4258                           tablat	equ	0xFF5
  4259                           prodh	equ	0xFF4
  4260                           prodl	equ	0xFF3
  4261                           intcon	equ	0xFF2
  4262                           intcon2	equ	0xFF1
  4263                           postinc0	equ	0xFEE
  4264                           fsr0h	equ	0xFEA
  4265                           fsr0l	equ	0xFE9
  4266                           wreg	equ	0xFE8
  4267                           postinc1	equ	0xFE6
  4268                           postdec1	equ	0xFE5
  4269                           fsr1h	equ	0xFE2
  4270                           fsr1l	equ	0xFE1
  4271                           indf2	equ	0xFDF
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function i2___lldiv *****************
  4279 ;; Defined at:
  4280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  dividend        4    0[COMRAM] unsigned long 
  4283 ;;  divisor         4    4[COMRAM] unsigned long 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  __lldiv         4    8[COMRAM] unsigned long 
  4286 ;;  __lldiv         1   12[COMRAM] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  4    0[COMRAM] unsigned long 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4296 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4299 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4300 ;;Total ram usage:       13 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		i2_CTMU_read
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text30
  4310  0019D8                     __ptext30:
  4311                           	opt stack 0
  4312  0019D8                     i2___lldiv:
  4313                           	opt stack 22
  4314                           
  4315                           ;incstack = 0
  4316  0019D8  0E00               	movlw	0
  4317  0019DA  6E09               	movwf	i2___lldiv@quotient,c
  4318  0019DC  0E00               	movlw	0
  4319  0019DE  6E0A               	movwf	i2___lldiv@quotient+1,c
  4320  0019E0  0E00               	movlw	0
  4321  0019E2  6E0B               	movwf	i2___lldiv@quotient+2,c
  4322  0019E4  0E00               	movlw	0
  4323  0019E6  6E0C               	movwf	i2___lldiv@quotient+3,c
  4324  0019E8  5005               	movf	i2___lldiv@divisor,w,c
  4325  0019EA  1006               	iorwf	i2___lldiv@divisor+1,w,c
  4326  0019EC  1007               	iorwf	i2___lldiv@divisor+2,w,c
  4327  0019EE  1008               	iorwf	i2___lldiv@divisor+3,w,c
  4328  0019F0  B4D8               	btfsc	status,2,c
  4329  0019F2  D02A               	goto	i2l722
  4330  0019F4  0E01               	movlw	1
  4331  0019F6  6E0D               	movwf	i2___lldiv@counter,c
  4332  0019F8  D006               	goto	i2l1972
  4333  0019FA                     i2l1970:
  4334  0019FA  90D8               	bcf	status,0,c
  4335  0019FC  3605               	rlcf	i2___lldiv@divisor,f,c
  4336  0019FE  3606               	rlcf	i2___lldiv@divisor+1,f,c
  4337  001A00  3607               	rlcf	i2___lldiv@divisor+2,f,c
  4338  001A02  3608               	rlcf	i2___lldiv@divisor+3,f,c
  4339  001A04  2A0D               	incf	i2___lldiv@counter,f,c
  4340  001A06                     i2l1972:
  4341  001A06  AE08               	btfss	i2___lldiv@divisor+3,7,c
  4342  001A08  D7F8               	goto	i2l1970
  4343  001A0A                     i2l1974:
  4344  001A0A  90D8               	bcf	status,0,c
  4345  001A0C  3609               	rlcf	i2___lldiv@quotient,f,c
  4346  001A0E  360A               	rlcf	i2___lldiv@quotient+1,f,c
  4347  001A10  360B               	rlcf	i2___lldiv@quotient+2,f,c
  4348  001A12  360C               	rlcf	i2___lldiv@quotient+3,f,c
  4349  001A14  5005               	movf	i2___lldiv@divisor,w,c
  4350  001A16  5C01               	subwf	i2___lldiv@dividend,w,c
  4351  001A18  5006               	movf	i2___lldiv@divisor+1,w,c
  4352  001A1A  5802               	subwfb	i2___lldiv@dividend+1,w,c
  4353  001A1C  5007               	movf	i2___lldiv@divisor+2,w,c
  4354  001A1E  5803               	subwfb	i2___lldiv@dividend+2,w,c
  4355  001A20  5008               	movf	i2___lldiv@divisor+3,w,c
  4356  001A22  5804               	subwfb	i2___lldiv@dividend+3,w,c
  4357  001A24  A0D8               	btfss	status,0,c
  4358  001A26  D009               	goto	i2l1982
  4359  001A28  5005               	movf	i2___lldiv@divisor,w,c
  4360  001A2A  5E01               	subwf	i2___lldiv@dividend,f,c
  4361  001A2C  5006               	movf	i2___lldiv@divisor+1,w,c
  4362  001A2E  5A02               	subwfb	i2___lldiv@dividend+1,f,c
  4363  001A30  5007               	movf	i2___lldiv@divisor+2,w,c
  4364  001A32  5A03               	subwfb	i2___lldiv@dividend+2,f,c
  4365  001A34  5008               	movf	i2___lldiv@divisor+3,w,c
  4366  001A36  5A04               	subwfb	i2___lldiv@dividend+3,f,c
  4367  001A38  8009               	bsf	i2___lldiv@quotient,0,c
  4368  001A3A                     i2l1982:
  4369  001A3A  90D8               	bcf	status,0,c
  4370  001A3C  3208               	rrcf	i2___lldiv@divisor+3,f,c
  4371  001A3E  3207               	rrcf	i2___lldiv@divisor+2,f,c
  4372  001A40  3206               	rrcf	i2___lldiv@divisor+1,f,c
  4373  001A42  3205               	rrcf	i2___lldiv@divisor,f,c
  4374  001A44  2E0D               	decfsz	i2___lldiv@counter,f,c
  4375  001A46  D7E1               	goto	i2l1974
  4376  001A48                     i2l722:
  4377  001A48  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
  4378  001A4C  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  4379  001A50  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  4380  001A54  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  4381  001A58  0012               	return		;funcret
  4382  001A5A                     __end_ofi2___lldiv:
  4383                           	opt stack 0
  4384                           pclatu	equ	0xFFB
  4385                           pclath	equ	0xFFA
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           intcon	equ	0xFF2
  4393                           intcon2	equ	0xFF1
  4394                           postinc0	equ	0xFEE
  4395                           fsr0h	equ	0xFEA
  4396                           fsr0l	equ	0xFE9
  4397                           wreg	equ	0xFE8
  4398                           postinc1	equ	0xFE6
  4399                           postdec1	equ	0xFE5
  4400                           fsr1h	equ	0xFE2
  4401                           fsr1l	equ	0xFE1
  4402                           indf2	equ	0xFDF
  4403                           postinc2	equ	0xFDE
  4404                           postdec2	equ	0xFDD
  4405                           fsr2h	equ	0xFDA
  4406                           fsr2l	equ	0xFD9
  4407                           status	equ	0xFD8
  4408                           
  4409 ;; *************** function _button_timer_interrupt *****************
  4410 ;; Defined at:
  4411 ;;		line 51 in file "../My_header\My_button.h"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  bt              2   29[COMRAM] PTR struct button
  4414 ;;		 -> ct(4), 
  4415 ;;  sw_value        1   31[COMRAM] unsigned char 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4427 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;Total ram usage:        5 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_ISR
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text31
  4441  000F14                     __ptext31:
  4442                           	opt stack 0
  4443  000F14                     _button_timer_interrupt:
  4444                           	opt stack 23
  4445                           
  4446                           ;My_header\My_button.h: 52: if (sw_value) {
  4447                           
  4448                           ;incstack = 0
  4449  000F14  5020               	movf	button_timer_interrupt@sw_value,w,c
  4450  000F16  B4D8               	btfsc	status,2,c
  4451  000F18  D098               	goto	i2l2084
  4452                           
  4453                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  4454  000F1A  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4455  000F1E  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4456  000F22  0E84               	movlw	132
  4457  000F24  18DE               	xorwf	postinc2,w,c
  4458  000F26  E10B               	bnz	i2l250
  4459  000F28  0E03               	movlw	3
  4460  000F2A  18DE               	xorwf	postinc2,w,c
  4461  000F2C  A4D8               	btfss	status,2,c
  4462  000F2E  D007               	goto	i2l250
  4463  000F30  EE20 F003          	lfsr	2,3
  4464  000F34  501E               	movf	button_timer_interrupt@bt,w,c
  4465  000F36  26D9               	addwf	fsr2l,f,c
  4466  000F38  501F               	movf	button_timer_interrupt@bt+1,w,c
  4467  000F3A  22DA               	addwfc	fsr2h,f,c
  4468  000F3C  8EDF               	bsf	indf2,7,c
  4469  000F3E                     i2l250:
  4470                           
  4471                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  4472  000F3E  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4473  000F42  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4474  000F46  0EBC               	movlw	188
  4475  000F48  18DE               	xorwf	postinc2,w,c
  4476  000F4A  E10B               	bnz	i2l251
  4477  000F4C  0E02               	movlw	2
  4478  000F4E  18DE               	xorwf	postinc2,w,c
  4479  000F50  A4D8               	btfss	status,2,c
  4480  000F52  D007               	goto	i2l251
  4481  000F54  EE20 F003          	lfsr	2,3
  4482  000F58  501E               	movf	button_timer_interrupt@bt,w,c
  4483  000F5A  26D9               	addwf	fsr2l,f,c
  4484  000F5C  501F               	movf	button_timer_interrupt@bt+1,w,c
  4485  000F5E  22DA               	addwfc	fsr2h,f,c
  4486  000F60  8CDF               	bsf	indf2,6,c
  4487  000F62                     i2l251:
  4488                           
  4489                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  4490  000F62  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4491  000F66  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4492  000F6A  0EF4               	movlw	244
  4493  000F6C  18DE               	xorwf	postinc2,w,c
  4494  000F6E  E10A               	bnz	i2l252
  4495  000F70  04DE               	decf	postinc2,w,c
  4496  000F72  A4D8               	btfss	status,2,c
  4497  000F74  D007               	goto	i2l252
  4498  000F76  EE20 F003          	lfsr	2,3
  4499  000F7A  501E               	movf	button_timer_interrupt@bt,w,c
  4500  000F7C  26D9               	addwf	fsr2l,f,c
  4501  000F7E  501F               	movf	button_timer_interrupt@bt+1,w,c
  4502  000F80  22DA               	addwfc	fsr2h,f,c
  4503  000F82  8ADF               	bsf	indf2,5,c
  4504  000F84                     i2l252:
  4505                           
  4506                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  4507  000F84  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4508  000F88  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4509  000F8C  0E2C               	movlw	44
  4510  000F8E  18DE               	xorwf	postinc2,w,c
  4511  000F90  E10A               	bnz	i2l253
  4512  000F92  04DE               	decf	postinc2,w,c
  4513  000F94  A4D8               	btfss	status,2,c
  4514  000F96  D007               	goto	i2l253
  4515  000F98  EE20 F003          	lfsr	2,3
  4516  000F9C  501E               	movf	button_timer_interrupt@bt,w,c
  4517  000F9E  26D9               	addwf	fsr2l,f,c
  4518  000FA0  501F               	movf	button_timer_interrupt@bt+1,w,c
  4519  000FA2  22DA               	addwfc	fsr2h,f,c
  4520  000FA4  88DF               	bsf	indf2,4,c
  4521  000FA6                     i2l253:
  4522                           
  4523                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  4524  000FA6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4525  000FAA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4526  000FAE  0E96               	movlw	150
  4527  000FB0  18DE               	xorwf	postinc2,w,c
  4528  000FB2  10DE               	iorwf	postinc2,w,c
  4529  000FB4  A4D8               	btfss	status,2,c
  4530  000FB6  D007               	goto	i2l254
  4531  000FB8  EE20 F003          	lfsr	2,3
  4532  000FBC  501E               	movf	button_timer_interrupt@bt,w,c
  4533  000FBE  26D9               	addwf	fsr2l,f,c
  4534  000FC0  501F               	movf	button_timer_interrupt@bt+1,w,c
  4535  000FC2  22DA               	addwfc	fsr2h,f,c
  4536  000FC4  86DF               	bsf	indf2,3,c
  4537  000FC6                     i2l254:
  4538                           
  4539                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  4540  000FC6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4541  000FCA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4542  000FCE  0E3C               	movlw	60
  4543  000FD0  18DE               	xorwf	postinc2,w,c
  4544  000FD2  10DE               	iorwf	postinc2,w,c
  4545  000FD4  A4D8               	btfss	status,2,c
  4546  000FD6  D007               	goto	i2l255
  4547  000FD8  EE20 F003          	lfsr	2,3
  4548  000FDC  501E               	movf	button_timer_interrupt@bt,w,c
  4549  000FDE  26D9               	addwf	fsr2l,f,c
  4550  000FE0  501F               	movf	button_timer_interrupt@bt+1,w,c
  4551  000FE2  22DA               	addwfc	fsr2h,f,c
  4552  000FE4  84DF               	bsf	indf2,2,c
  4553  000FE6                     i2l255:
  4554                           
  4555                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  4556  000FE6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4557  000FEA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4558  000FEE  0E10               	movlw	16
  4559  000FF0  18DE               	xorwf	postinc2,w,c
  4560  000FF2  10DE               	iorwf	postinc2,w,c
  4561  000FF4  A4D8               	btfss	status,2,c
  4562  000FF6  D007               	goto	i2l256
  4563  000FF8  EE20 F003          	lfsr	2,3
  4564  000FFC  501E               	movf	button_timer_interrupt@bt,w,c
  4565  000FFE  26D9               	addwf	fsr2l,f,c
  4566  001000  501F               	movf	button_timer_interrupt@bt+1,w,c
  4567  001002  22DA               	addwfc	fsr2h,f,c
  4568  001004  82DF               	bsf	indf2,1,c
  4569  001006                     i2l256:
  4570                           
  4571                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  4572  001006  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4573  00100A  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4574  00100E  0E02               	movlw	2
  4575  001010  18DE               	xorwf	postinc2,w,c
  4576  001012  10DE               	iorwf	postinc2,w,c
  4577  001014  A4D8               	btfss	status,2,c
  4578  001016  D007               	goto	i2l257
  4579  001018  EE20 F003          	lfsr	2,3
  4580  00101C  501E               	movf	button_timer_interrupt@bt,w,c
  4581  00101E  26D9               	addwf	fsr2l,f,c
  4582  001020  501F               	movf	button_timer_interrupt@bt+1,w,c
  4583  001022  22DA               	addwfc	fsr2h,f,c
  4584  001024  80DF               	bsf	indf2,0,c
  4585  001026                     i2l257:
  4586                           
  4587                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
  4588  001026  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4589  00102A  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4590  00102E  0E85               	movlw	133
  4591  001030  5CDE               	subwf	postinc2,w,c
  4592  001032  0E03               	movlw	3
  4593  001034  58DE               	subwfb	postinc2,w,c
  4594  001036  B0D8               	btfsc	status,0,c
  4595  001038  0012               	return	
  4596  00103A  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4597  00103E  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4598  001042  2ADE               	incf	postinc2,f,c
  4599  001044  0E00               	movlw	0
  4600  001046  22DD               	addwfc	postdec2,f,c
  4601                           
  4602                           ;My_header\My_button.h: 62: } else {
  4603  001048  0012               	return	
  4604  00104A                     i2l2084:
  4605                           
  4606                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
  4607  00104A  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4608  00104E  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4609  001052  0E84               	movlw	132
  4610  001054  5CDE               	subwf	postinc2,w,c
  4611  001056  0E03               	movlw	3
  4612  001058  58DE               	subwfb	postinc2,w,c
  4613  00105A  A0D8               	btfss	status,0,c
  4614  00105C  D008               	goto	i2l2088
  4615  00105E  EE20 F002          	lfsr	2,2
  4616  001062  501E               	movf	button_timer_interrupt@bt,w,c
  4617  001064  26D9               	addwf	fsr2l,f,c
  4618  001066  501F               	movf	button_timer_interrupt@bt+1,w,c
  4619  001068  22DA               	addwfc	fsr2h,f,c
  4620  00106A  8EDF               	bsf	indf2,7,c
  4621  00106C  D081               	goto	i2l2116
  4622  00106E                     i2l2088:
  4623                           
  4624                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
  4625  00106E  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4626  001072  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4627  001076  0EBC               	movlw	188
  4628  001078  5CDE               	subwf	postinc2,w,c
  4629  00107A  0E02               	movlw	2
  4630  00107C  58DE               	subwfb	postinc2,w,c
  4631  00107E  A0D8               	btfss	status,0,c
  4632  001080  D008               	goto	i2l2092
  4633  001082  EE20 F002          	lfsr	2,2
  4634  001086  501E               	movf	button_timer_interrupt@bt,w,c
  4635  001088  26D9               	addwf	fsr2l,f,c
  4636  00108A  501F               	movf	button_timer_interrupt@bt+1,w,c
  4637  00108C  22DA               	addwfc	fsr2h,f,c
  4638  00108E  8CDF               	bsf	indf2,6,c
  4639  001090  D06F               	goto	i2l2116
  4640  001092                     i2l2092:
  4641                           
  4642                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
  4643  001092  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4644  001096  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4645  00109A  0EF4               	movlw	244
  4646  00109C  5CDE               	subwf	postinc2,w,c
  4647  00109E  0E01               	movlw	1
  4648  0010A0  58DE               	subwfb	postinc2,w,c
  4649  0010A2  A0D8               	btfss	status,0,c
  4650  0010A4  D008               	goto	i2l2096
  4651  0010A6  EE20 F002          	lfsr	2,2
  4652  0010AA  501E               	movf	button_timer_interrupt@bt,w,c
  4653  0010AC  26D9               	addwf	fsr2l,f,c
  4654  0010AE  501F               	movf	button_timer_interrupt@bt+1,w,c
  4655  0010B0  22DA               	addwfc	fsr2h,f,c
  4656  0010B2  8ADF               	bsf	indf2,5,c
  4657  0010B4  D05D               	goto	i2l2116
  4658  0010B6                     i2l2096:
  4659                           
  4660                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
  4661  0010B6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4662  0010BA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4663  0010BE  0E2C               	movlw	44
  4664  0010C0  5CDE               	subwf	postinc2,w,c
  4665  0010C2  0E01               	movlw	1
  4666  0010C4  58DE               	subwfb	postinc2,w,c
  4667  0010C6  A0D8               	btfss	status,0,c
  4668  0010C8  D008               	goto	i2l2100
  4669  0010CA  EE20 F002          	lfsr	2,2
  4670  0010CE  501E               	movf	button_timer_interrupt@bt,w,c
  4671  0010D0  26D9               	addwf	fsr2l,f,c
  4672  0010D2  501F               	movf	button_timer_interrupt@bt+1,w,c
  4673  0010D4  22DA               	addwfc	fsr2h,f,c
  4674  0010D6  88DF               	bsf	indf2,4,c
  4675  0010D8  D04B               	goto	i2l2116
  4676  0010DA                     i2l2100:
  4677                           
  4678                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  4679  0010DA  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4680  0010DE  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4681  0010E2  0E01               	movlw	1
  4682  0010E4  50DB               	movf	plusw2,w,c
  4683  0010E6  E104               	bnz	i2u136_40
  4684  0010E8  0E96               	movlw	150
  4685  0010EA  5CDE               	subwf	postinc2,w,c
  4686  0010EC  A0D8               	btfss	status,0,c
  4687  0010EE  D008               	goto	i2l2104
  4688  0010F0                     i2u136_40:
  4689  0010F0  EE20 F002          	lfsr	2,2
  4690  0010F4  501E               	movf	button_timer_interrupt@bt,w,c
  4691  0010F6  26D9               	addwf	fsr2l,f,c
  4692  0010F8  501F               	movf	button_timer_interrupt@bt+1,w,c
  4693  0010FA  22DA               	addwfc	fsr2h,f,c
  4694  0010FC  86DF               	bsf	indf2,3,c
  4695  0010FE  D038               	goto	i2l2116
  4696  001100                     i2l2104:
  4697                           
  4698                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  4699  001100  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4700  001104  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4701  001108  0E01               	movlw	1
  4702  00110A  50DB               	movf	plusw2,w,c
  4703  00110C  E104               	bnz	i2u137_40
  4704  00110E  0E3C               	movlw	60
  4705  001110  5CDE               	subwf	postinc2,w,c
  4706  001112  A0D8               	btfss	status,0,c
  4707  001114  D008               	goto	i2l2108
  4708  001116                     i2u137_40:
  4709  001116  EE20 F002          	lfsr	2,2
  4710  00111A  501E               	movf	button_timer_interrupt@bt,w,c
  4711  00111C  26D9               	addwf	fsr2l,f,c
  4712  00111E  501F               	movf	button_timer_interrupt@bt+1,w,c
  4713  001120  22DA               	addwfc	fsr2h,f,c
  4714  001122  84DF               	bsf	indf2,2,c
  4715  001124  D025               	goto	i2l2116
  4716  001126                     i2l2108:
  4717                           
  4718                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  4719  001126  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4720  00112A  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4721  00112E  0E01               	movlw	1
  4722  001130  50DB               	movf	plusw2,w,c
  4723  001132  E104               	bnz	i2u138_40
  4724  001134  0E10               	movlw	16
  4725  001136  5CDE               	subwf	postinc2,w,c
  4726  001138  A0D8               	btfss	status,0,c
  4727  00113A  D008               	goto	i2l2112
  4728  00113C                     i2u138_40:
  4729  00113C  EE20 F002          	lfsr	2,2
  4730  001140  501E               	movf	button_timer_interrupt@bt,w,c
  4731  001142  26D9               	addwf	fsr2l,f,c
  4732  001144  501F               	movf	button_timer_interrupt@bt+1,w,c
  4733  001146  22DA               	addwfc	fsr2h,f,c
  4734  001148  82DF               	bsf	indf2,1,c
  4735  00114A  D012               	goto	i2l2116
  4736  00114C                     i2l2112:
  4737                           
  4738                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  4739  00114C  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4740  001150  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4741  001154  0E01               	movlw	1
  4742  001156  50DB               	movf	plusw2,w,c
  4743  001158  E104               	bnz	i2u139_40
  4744  00115A  0E02               	movlw	2
  4745  00115C  5CDE               	subwf	postinc2,w,c
  4746  00115E  A0D8               	btfss	status,0,c
  4747  001160  D007               	goto	i2l2116
  4748  001162                     i2u139_40:
  4749  001162  EE20 F002          	lfsr	2,2
  4750  001166  501E               	movf	button_timer_interrupt@bt,w,c
  4751  001168  26D9               	addwf	fsr2l,f,c
  4752  00116A  501F               	movf	button_timer_interrupt@bt+1,w,c
  4753  00116C  22DA               	addwfc	fsr2h,f,c
  4754  00116E  80DF               	bsf	indf2,0,c
  4755  001170                     i2l2116:
  4756                           
  4757                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  4758  001170  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4759  001174  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4760  001178  0E00               	movlw	0
  4761  00117A  6EDE               	movwf	postinc2,c
  4762  00117C  0E00               	movlw	0
  4763  00117E  6EDD               	movwf	postdec2,c
  4764                           
  4765                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  4766  001180  EE20 F002          	lfsr	2,2
  4767  001184  501E               	movf	button_timer_interrupt@bt,w,c
  4768  001186  26D9               	addwf	fsr2l,f,c
  4769  001188  501F               	movf	button_timer_interrupt@bt+1,w,c
  4770  00118A  22DA               	addwfc	fsr2h,f,c
  4771  00118C  0EFF               	movlw	255
  4772  00118E  16DE               	andwf	postinc2,f,c
  4773  001190  0E00               	movlw	0
  4774  001192  16DD               	andwf	postdec2,f,c
  4775  001194  0012               	return	
  4776  001196                     __end_of_button_timer_interrupt:
  4777                           	opt stack 0
  4778                           pclatu	equ	0xFFB
  4779                           pclath	equ	0xFFA
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           prodh	equ	0xFF4
  4785                           prodl	equ	0xFF3
  4786                           intcon	equ	0xFF2
  4787                           intcon2	equ	0xFF1
  4788                           postinc0	equ	0xFEE
  4789                           fsr0h	equ	0xFEA
  4790                           fsr0l	equ	0xFE9
  4791                           wreg	equ	0xFE8
  4792                           postinc1	equ	0xFE6
  4793                           postdec1	equ	0xFE5
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           postinc2	equ	0xFDE
  4798                           postdec2	equ	0xFDD
  4799                           plusw2	equ	0xFDB
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _UART_ISR *****************
  4805 ;; Defined at:
  4806 ;;		line 208 in file "../My_header\My_header.h"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  ascii           1   15[COMRAM] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;Total ram usage:        1 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    2
  4827 ;; This function calls:
  4828 ;;		i2_ringbuf_num
  4829 ;;		i2_ringbuf_pop
  4830 ;;		i2_ringbuf_put
  4831 ;; This function is called by:
  4832 ;;		_ISR
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text32
  4837  001CD0                     __ptext32:
  4838                           	opt stack 0
  4839  001CD0                     _UART_ISR:
  4840                           	opt stack 21
  4841                           
  4842                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  4843                           
  4844                           ;incstack = 0
  4845  001CD0  B89D               	btfsc	3997,4,c	;volatile
  4846  001CD2  A89E               	btfss	3998,4,c	;volatile
  4847  001CD4  D013               	goto	i2l185
  4848                           
  4849                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
  4850  001CD6  0E44               	movlw	low _tx_buf
  4851  001CD8  6E01               	movwf	i2ringbuf_num@rb,c
  4852  001CDA  0E00               	movlw	high _tx_buf
  4853  001CDC  6E02               	movwf	i2ringbuf_num@rb+1,c
  4854  001CDE  EC40  F00B         	call	i2_ringbuf_num	;wreg free
  4855  001CE2  5001               	movf	?i2_ringbuf_num,w,c
  4856  001CE4  1002               	iorwf	?i2_ringbuf_num+1,w,c
  4857  001CE6  B4D8               	btfsc	status,2,c
  4858  001CE8  D008               	goto	i2l186
  4859                           
  4860                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
  4861  001CEA  0E44               	movlw	low _tx_buf
  4862  001CEC  6E09               	movwf	i2ringbuf_pop@rb,c
  4863  001CEE  0E00               	movlw	high _tx_buf
  4864  001CF0  6E0A               	movwf	i2ringbuf_pop@rb+1,c
  4865  001CF2  ECF9  F00B         	call	i2_ringbuf_pop	;wreg free
  4866  001CF6  6EAE               	movwf	4014,c	;volatile
  4867                           
  4868                           ;My_header\My_header.h: 212: } else {
  4869  001CF8  D001               	goto	i2l185
  4870  001CFA                     i2l186:
  4871                           
  4872                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
  4873  001CFA  989D               	bcf	3997,4,c	;volatile
  4874  001CFC                     i2l185:
  4875                           
  4876                           ;My_header\My_header.h: 214: }
  4877                           ;My_header\My_header.h: 215: }
  4878                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
  4879  001CFC  AA9E               	btfss	3998,5,c	;volatile
  4880  001CFE  0012               	return	
  4881  001D00  AA9D               	btfss	3997,5,c	;volatile
  4882  001D02  0012               	return	
  4883                           
  4884                           ;My_header\My_header.h: 217: char ascii = RCREG1;
  4885  001D04  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
  4886                           
  4887                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
  4888  001D08  0E3C               	movlw	low _rx_buf
  4889  001D0A  6E09               	movwf	i2ringbuf_put@rb,c
  4890  001D0C  0E00               	movlw	high _rx_buf
  4891  001D0E  6E0A               	movwf	i2ringbuf_put@rb+1,c
  4892  001D10  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
  4893  001D14  EC9E  F00B         	call	i2_ringbuf_put	;wreg free
  4894  001D18  0012               	return	
  4895  001D1A                     __end_of_UART_ISR:
  4896                           	opt stack 0
  4897                           pclatu	equ	0xFFB
  4898                           pclath	equ	0xFFA
  4899                           tblptru	equ	0xFF8
  4900                           tblptrh	equ	0xFF7
  4901                           tblptrl	equ	0xFF6
  4902                           tablat	equ	0xFF5
  4903                           prodh	equ	0xFF4
  4904                           prodl	equ	0xFF3
  4905                           intcon	equ	0xFF2
  4906                           intcon2	equ	0xFF1
  4907                           postinc0	equ	0xFEE
  4908                           fsr0h	equ	0xFEA
  4909                           fsr0l	equ	0xFE9
  4910                           wreg	equ	0xFE8
  4911                           postinc1	equ	0xFE6
  4912                           postdec1	equ	0xFE5
  4913                           fsr1h	equ	0xFE2
  4914                           fsr1l	equ	0xFE1
  4915                           indf2	equ	0xFDF
  4916                           postinc2	equ	0xFDE
  4917                           postdec2	equ	0xFDD
  4918                           plusw2	equ	0xFDB
  4919                           fsr2h	equ	0xFDA
  4920                           fsr2l	equ	0xFD9
  4921                           status	equ	0xFD8
  4922                           
  4923 ;; *************** function i2_ringbuf_put *****************
  4924 ;; Defined at:
  4925 ;;		line 39 in file "../My_header\My_ringbuf.h"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  4928 ;;		 -> rx_buf(8), tx_buf(8), 
  4929 ;;  asciicode       1   10[COMRAM] unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;Total ram usage:        7 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    1
  4948 ;; This function calls:
  4949 ;;		i2_ringbuf_num
  4950 ;; This function is called by:
  4951 ;;		_UART_ISR
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text33
  4956  00173C                     __ptext33:
  4957                           	opt stack 0
  4958  00173C                     i2_ringbuf_put:
  4959                           	opt stack 21
  4960                           
  4961                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  4962                           
  4963                           ;incstack = 0
  4964  00173C  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
  4965  001740  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
  4966  001744  EC40  F00B         	call	i2_ringbuf_num	;wreg free
  4967  001748  EE20 F002          	lfsr	2,2
  4968  00174C  5009               	movf	i2ringbuf_put@rb,w,c
  4969  00174E  26D9               	addwf	fsr2l,f,c
  4970  001750  500A               	movf	i2ringbuf_put@rb+1,w,c
  4971  001752  22DA               	addwfc	fsr2h,f,c
  4972  001754  50DE               	movf	postinc2,w,c
  4973  001756  5C01               	subwf	?i2_ringbuf_num,w,c
  4974  001758  50DE               	movf	postinc2,w,c
  4975  00175A  5802               	subwfb	?i2_ringbuf_num+1,w,c
  4976  00175C  B0D8               	btfsc	status,0,c
  4977  00175E  0012               	return	
  4978                           
  4979                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  4980  001760  EE20 F004          	lfsr	2,4
  4981  001764  5009               	movf	i2ringbuf_put@rb,w,c
  4982  001766  26D9               	addwf	fsr2l,f,c
  4983  001768  500A               	movf	i2ringbuf_put@rb+1,w,c
  4984  00176A  22DA               	addwfc	fsr2h,f,c
  4985  00176C  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
  4986  001770  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
  4987  001774  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
  4988  001778  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
  4989  00177C  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
  4990  001780  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
  4991  001784  500C               	movf	??i2_ringbuf_put,w,c
  4992  001786  240E               	addwf	??i2_ringbuf_put+2,w,c
  4993  001788  6ED9               	movwf	fsr2l,c
  4994  00178A  500D               	movf	??i2_ringbuf_put+1,w,c
  4995  00178C  200F               	addwfc	??i2_ringbuf_put+3,w,c
  4996  00178E  6EDA               	movwf	fsr2h,c
  4997  001790  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
  4998                           
  4999                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  5000  001794  EE20 F002          	lfsr	2,2
  5001  001798  5009               	movf	i2ringbuf_put@rb,w,c
  5002  00179A  26D9               	addwf	fsr2l,f,c
  5003  00179C  500A               	movf	i2ringbuf_put@rb+1,w,c
  5004  00179E  22DA               	addwfc	fsr2h,f,c
  5005  0017A0  EE10 F004          	lfsr	1,4
  5006  0017A4  5009               	movf	i2ringbuf_put@rb,w,c
  5007  0017A6  26E1               	addwf	fsr1l,f,c
  5008  0017A8  500A               	movf	i2ringbuf_put@rb+1,w,c
  5009  0017AA  22E2               	addwfc	fsr1h,f,c
  5010  0017AC  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
  5011  0017B0  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
  5012  0017B4  0E01               	movlw	1
  5013  0017B6  260E               	addwf	??i2_ringbuf_put+2,f,c
  5014  0017B8  0E00               	movlw	0
  5015  0017BA  220F               	addwfc	??i2_ringbuf_put+3,f,c
  5016  0017BC  50DE               	movf	postinc2,w,c
  5017  0017BE  5C0E               	subwf	??i2_ringbuf_put+2,w,c
  5018  0017C0  50DE               	movf	postinc2,w,c
  5019  0017C2  580F               	subwfb	??i2_ringbuf_put+3,w,c
  5020  0017C4  B0D8               	btfsc	status,0,c
  5021  0017C6  D00A               	goto	i2l1942
  5022  0017C8  EE20 F004          	lfsr	2,4
  5023  0017CC  5009               	movf	i2ringbuf_put@rb,w,c
  5024  0017CE  26D9               	addwf	fsr2l,f,c
  5025  0017D0  500A               	movf	i2ringbuf_put@rb+1,w,c
  5026  0017D2  22DA               	addwfc	fsr2h,f,c
  5027  0017D4  2ADE               	incf	postinc2,f,c
  5028  0017D6  0E00               	movlw	0
  5029  0017D8  22DD               	addwfc	postdec2,f,c
  5030  0017DA  0012               	return	
  5031  0017DC                     i2l1942:
  5032                           
  5033                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  5034  0017DC  EE20 F004          	lfsr	2,4
  5035  0017E0  5009               	movf	i2ringbuf_put@rb,w,c
  5036  0017E2  26D9               	addwf	fsr2l,f,c
  5037  0017E4  500A               	movf	i2ringbuf_put@rb+1,w,c
  5038  0017E6  22DA               	addwfc	fsr2h,f,c
  5039  0017E8  0E00               	movlw	0
  5040  0017EA  6EDE               	movwf	postinc2,c
  5041  0017EC  0E00               	movlw	0
  5042  0017EE  6EDD               	movwf	postdec2,c
  5043  0017F0  0012               	return	
  5044  0017F2                     __end_ofi2_ringbuf_put:
  5045                           	opt stack 0
  5046                           pclatu	equ	0xFFB
  5047                           pclath	equ	0xFFA
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           intcon2	equ	0xFF1
  5056                           postinc0	equ	0xFEE
  5057                           fsr0h	equ	0xFEA
  5058                           fsr0l	equ	0xFE9
  5059                           wreg	equ	0xFE8
  5060                           postinc1	equ	0xFE6
  5061                           postdec1	equ	0xFE5
  5062                           fsr1h	equ	0xFE2
  5063                           fsr1l	equ	0xFE1
  5064                           indf2	equ	0xFDF
  5065                           postinc2	equ	0xFDE
  5066                           postdec2	equ	0xFDD
  5067                           plusw2	equ	0xFDB
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function i2_ringbuf_pop *****************
  5073 ;; Defined at:
  5074 ;;		line 64 in file "../My_header\My_ringbuf.h"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  5077 ;;		 -> rx_buf(8), tx_buf(8), 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      unsigned char 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5093 ;;Total ram usage:        7 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    1
  5096 ;; This function calls:
  5097 ;;		i2_ringbuf_num
  5098 ;; This function is called by:
  5099 ;;		_UART_ISR
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text34
  5104  0017F2                     __ptext34:
  5105                           	opt stack 0
  5106  0017F2                     i2_ringbuf_pop:
  5107                           	opt stack 21
  5108                           
  5109                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  5110                           
  5111                           ;incstack = 0
  5112  0017F2  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
  5113  0017F6  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
  5114  0017FA  EC40  F00B         	call	i2_ringbuf_num	;wreg free
  5115  0017FE  5001               	movf	?i2_ringbuf_num,w,c
  5116  001800  1002               	iorwf	?i2_ringbuf_num+1,w,c
  5117  001802  B4D8               	btfsc	status,2,c
  5118  001804  D04A               	goto	i2l1960
  5119                           
  5120                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  5121  001806  EE20 F006          	lfsr	2,6
  5122  00180A  5009               	movf	i2ringbuf_pop@rb,w,c
  5123  00180C  26D9               	addwf	fsr2l,f,c
  5124  00180E  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5125  001810  22DA               	addwfc	fsr2h,f,c
  5126  001812  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
  5127  001816  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
  5128  00181A  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
  5129  00181E  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
  5130  001822  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
  5131  001826  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
  5132  00182A  500B               	movf	??i2_ringbuf_pop,w,c
  5133  00182C  240D               	addwf	??i2_ringbuf_pop+2,w,c
  5134  00182E  6ED9               	movwf	fsr2l,c
  5135  001830  500C               	movf	??i2_ringbuf_pop+1,w,c
  5136  001832  200E               	addwfc	??i2_ringbuf_pop+3,w,c
  5137  001834  6EDA               	movwf	fsr2h,c
  5138  001836  50DF               	movf	indf2,w,c
  5139  001838  6E0F               	movwf	i2ringbuf_pop@ret,c
  5140                           
  5141                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  5142  00183A  EE20 F002          	lfsr	2,2
  5143  00183E  5009               	movf	i2ringbuf_pop@rb,w,c
  5144  001840  26D9               	addwf	fsr2l,f,c
  5145  001842  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5146  001844  22DA               	addwfc	fsr2h,f,c
  5147  001846  EE10 F006          	lfsr	1,6
  5148  00184A  5009               	movf	i2ringbuf_pop@rb,w,c
  5149  00184C  26E1               	addwf	fsr1l,f,c
  5150  00184E  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5151  001850  22E2               	addwfc	fsr1h,f,c
  5152  001852  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
  5153  001856  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
  5154  00185A  0E01               	movlw	1
  5155  00185C  260D               	addwf	??i2_ringbuf_pop+2,f,c
  5156  00185E  0E00               	movlw	0
  5157  001860  220E               	addwfc	??i2_ringbuf_pop+3,f,c
  5158  001862  50DE               	movf	postinc2,w,c
  5159  001864  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
  5160  001866  50DE               	movf	postinc2,w,c
  5161  001868  580E               	subwfb	??i2_ringbuf_pop+3,w,c
  5162  00186A  B0D8               	btfsc	status,0,c
  5163  00186C  D00A               	goto	i2l1952
  5164                           
  5165                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  5166  00186E  EE20 F006          	lfsr	2,6
  5167  001872  5009               	movf	i2ringbuf_pop@rb,w,c
  5168  001874  26D9               	addwf	fsr2l,f,c
  5169  001876  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5170  001878  22DA               	addwfc	fsr2h,f,c
  5171  00187A  2ADE               	incf	postinc2,f,c
  5172  00187C  0E00               	movlw	0
  5173  00187E  22DD               	addwfc	postdec2,f,c
  5174                           
  5175                           ;My_header\My_ringbuf.h: 69: } else {
  5176  001880  D00A               	goto	i2l1954
  5177  001882                     i2l1952:
  5178                           
  5179                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  5180  001882  EE20 F006          	lfsr	2,6
  5181  001886  5009               	movf	i2ringbuf_pop@rb,w,c
  5182  001888  26D9               	addwf	fsr2l,f,c
  5183  00188A  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5184  00188C  22DA               	addwfc	fsr2h,f,c
  5185  00188E  0E00               	movlw	0
  5186  001890  6EDE               	movwf	postinc2,c
  5187  001892  0E00               	movlw	0
  5188  001894  6EDD               	movwf	postdec2,c
  5189  001896                     i2l1954:
  5190                           
  5191                           ;My_header\My_ringbuf.h: 71: }
  5192                           ;My_header\My_ringbuf.h: 72: return ret;
  5193  001896  500F               	movf	i2ringbuf_pop@ret,w,c
  5194                           
  5195                           ;My_header\My_ringbuf.h: 73: } else {
  5196  001898  0012               	return	
  5197  00189A                     i2l1960:
  5198                           
  5199                           ;My_header\My_ringbuf.h: 74: return 0;
  5200  00189A  0E00               	movlw	0
  5201  00189C  0012               	return	
  5202  00189E                     __end_ofi2_ringbuf_pop:
  5203                           	opt stack 0
  5204                           pclatu	equ	0xFFB
  5205                           pclath	equ	0xFFA
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           prodh	equ	0xFF4
  5211                           prodl	equ	0xFF3
  5212                           intcon	equ	0xFF2
  5213                           intcon2	equ	0xFF1
  5214                           postinc0	equ	0xFEE
  5215                           fsr0h	equ	0xFEA
  5216                           fsr0l	equ	0xFE9
  5217                           wreg	equ	0xFE8
  5218                           postinc1	equ	0xFE6
  5219                           postdec1	equ	0xFE5
  5220                           fsr1h	equ	0xFE2
  5221                           fsr1l	equ	0xFE1
  5222                           indf2	equ	0xFDF
  5223                           postinc2	equ	0xFDE
  5224                           postdec2	equ	0xFDD
  5225                           plusw2	equ	0xFDB
  5226                           fsr2h	equ	0xFDA
  5227                           fsr2l	equ	0xFD9
  5228                           status	equ	0xFD8
  5229                           
  5230 ;; *************** function i2_ringbuf_num *****************
  5231 ;; Defined at:
  5232 ;;		line 31 in file "../My_header\My_ringbuf.h"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  5235 ;;		 -> rx_buf(8), tx_buf(8), 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  2    0[COMRAM] unsigned int 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5249 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5250 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5251 ;;Total ram usage:        8 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_UART_ISR
  5257 ;;		i2_ringbuf_put
  5258 ;;		i2_ringbuf_pop
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text35
  5263  001680                     __ptext35:
  5264                           	opt stack 0
  5265  001680                     i2_ringbuf_num:
  5266                           	opt stack 21
  5267                           
  5268                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  5269                           
  5270                           ;incstack = 0
  5271  001680  EE20 F006          	lfsr	2,6
  5272  001684  5001               	movf	i2ringbuf_num@rb,w,c
  5273  001686  26D9               	addwf	fsr2l,f,c
  5274  001688  5002               	movf	i2ringbuf_num@rb+1,w,c
  5275  00168A  22DA               	addwfc	fsr2h,f,c
  5276  00168C  EE10 F004          	lfsr	1,4
  5277  001690  5001               	movf	i2ringbuf_num@rb,w,c
  5278  001692  26E1               	addwf	fsr1l,f,c
  5279  001694  5002               	movf	i2ringbuf_num@rb+1,w,c
  5280  001696  22E2               	addwfc	fsr1h,f,c
  5281  001698  50DE               	movf	postinc2,w,c
  5282  00169A  5CE6               	subwf	postinc1,w,c
  5283  00169C  50DE               	movf	postinc2,w,c
  5284  00169E  58E6               	subwfb	postinc1,w,c
  5285  0016A0  A0D8               	btfss	status,0,c
  5286  0016A2  D01F               	goto	i2l1802
  5287                           
  5288                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  5289  0016A4  EE20 F004          	lfsr	2,4
  5290  0016A8  5001               	movf	i2ringbuf_num@rb,w,c
  5291  0016AA  26D9               	addwf	fsr2l,f,c
  5292  0016AC  5002               	movf	i2ringbuf_num@rb+1,w,c
  5293  0016AE  22DA               	addwfc	fsr2h,f,c
  5294  0016B0  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  5295  0016B4  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  5296  0016B8  EE20 F006          	lfsr	2,6
  5297  0016BC  5001               	movf	i2ringbuf_num@rb,w,c
  5298  0016BE  26D9               	addwf	fsr2l,f,c
  5299  0016C0  5002               	movf	i2ringbuf_num@rb+1,w,c
  5300  0016C2  22DA               	addwfc	fsr2h,f,c
  5301  0016C4  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  5302  0016C8  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  5303  0016CC  1E05               	comf	??i2_ringbuf_num+2,f,c
  5304  0016CE  1E06               	comf	??i2_ringbuf_num+3,f,c
  5305  0016D0  4A05               	infsnz	??i2_ringbuf_num+2,f,c
  5306  0016D2  2A06               	incf	??i2_ringbuf_num+3,f,c
  5307  0016D4  5003               	movf	??i2_ringbuf_num,w,c
  5308  0016D6  2405               	addwf	??i2_ringbuf_num+2,w,c
  5309  0016D8  6E01               	movwf	?i2_ringbuf_num,c
  5310  0016DA  5004               	movf	??i2_ringbuf_num+1,w,c
  5311  0016DC  2006               	addwfc	??i2_ringbuf_num+3,w,c
  5312  0016DE  6E02               	movwf	?i2_ringbuf_num+1,c
  5313                           
  5314                           ;My_header\My_ringbuf.h: 34: } else {
  5315  0016E0  0012               	return	
  5316  0016E2                     i2l1802:
  5317                           
  5318                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  5319  0016E2  EE20 F004          	lfsr	2,4
  5320  0016E6  5001               	movf	i2ringbuf_num@rb,w,c
  5321  0016E8  26D9               	addwf	fsr2l,f,c
  5322  0016EA  5002               	movf	i2ringbuf_num@rb+1,w,c
  5323  0016EC  22DA               	addwfc	fsr2h,f,c
  5324  0016EE  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  5325  0016F2  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  5326  0016F6  EE20 F002          	lfsr	2,2
  5327  0016FA  5001               	movf	i2ringbuf_num@rb,w,c
  5328  0016FC  26D9               	addwf	fsr2l,f,c
  5329  0016FE  5002               	movf	i2ringbuf_num@rb+1,w,c
  5330  001700  22DA               	addwfc	fsr2h,f,c
  5331  001702  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  5332  001706  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  5333  00170A  EE20 F006          	lfsr	2,6
  5334  00170E  5001               	movf	i2ringbuf_num@rb,w,c
  5335  001710  26D9               	addwf	fsr2l,f,c
  5336  001712  5002               	movf	i2ringbuf_num@rb+1,w,c
  5337  001714  22DA               	addwfc	fsr2h,f,c
  5338  001716  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
  5339  00171A  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
  5340  00171E  1E07               	comf	??i2_ringbuf_num+4,f,c
  5341  001720  1E08               	comf	??i2_ringbuf_num+5,f,c
  5342  001722  4A07               	infsnz	??i2_ringbuf_num+4,f,c
  5343  001724  2A08               	incf	??i2_ringbuf_num+5,f,c
  5344  001726  5005               	movf	??i2_ringbuf_num+2,w,c
  5345  001728  2607               	addwf	??i2_ringbuf_num+4,f,c
  5346  00172A  5006               	movf	??i2_ringbuf_num+3,w,c
  5347  00172C  2208               	addwfc	??i2_ringbuf_num+5,f,c
  5348  00172E  5003               	movf	??i2_ringbuf_num,w,c
  5349  001730  2407               	addwf	??i2_ringbuf_num+4,w,c
  5350  001732  6E01               	movwf	?i2_ringbuf_num,c
  5351  001734  5004               	movf	??i2_ringbuf_num+1,w,c
  5352  001736  2008               	addwfc	??i2_ringbuf_num+5,w,c
  5353  001738  6E02               	movwf	?i2_ringbuf_num+1,c
  5354  00173A  0012               	return	
  5355  00173C                     __end_ofi2_ringbuf_num:
  5356                           	opt stack 0
  5357                           pclatu	equ	0xFFB
  5358                           pclath	equ	0xFFA
  5359                           tblptru	equ	0xFF8
  5360                           tblptrh	equ	0xFF7
  5361                           tblptrl	equ	0xFF6
  5362                           tablat	equ	0xFF5
  5363                           prodh	equ	0xFF4
  5364                           prodl	equ	0xFF3
  5365                           intcon	equ	0xFF2
  5366                           intcon2	equ	0xFF1
  5367                           postinc0	equ	0xFEE
  5368                           fsr0h	equ	0xFEA
  5369                           fsr0l	equ	0xFE9
  5370                           wreg	equ	0xFE8
  5371                           postinc1	equ	0xFE6
  5372                           postdec1	equ	0xFE5
  5373                           fsr1h	equ	0xFE2
  5374                           fsr1l	equ	0xFE1
  5375                           indf2	equ	0xFDF
  5376                           postinc2	equ	0xFDE
  5377                           postdec2	equ	0xFDD
  5378                           plusw2	equ	0xFDB
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           pclatu	equ	0xFFB
  5383                           pclath	equ	0xFFA
  5384                           tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           intcon	equ	0xFF2
  5391                           intcon2	equ	0xFF1
  5392                           postinc0	equ	0xFEE
  5393                           fsr0h	equ	0xFEA
  5394                           fsr0l	equ	0xFE9
  5395                           wreg	equ	0xFE8
  5396                           postinc1	equ	0xFE6
  5397                           postdec1	equ	0xFE5
  5398                           fsr1h	equ	0xFE2
  5399                           fsr1l	equ	0xFE1
  5400                           indf2	equ	0xFDF
  5401                           postinc2	equ	0xFDE
  5402                           postdec2	equ	0xFDD
  5403                           plusw2	equ	0xFDB
  5404                           fsr2h	equ	0xFDA
  5405                           fsr2l	equ	0xFD9
  5406                           status	equ	0xFD8
  5407                           
  5408                           	psect	rparam
  5409  0000                     pclatu	equ	0xFFB
  5410                           pclath	equ	0xFFA
  5411                           tblptru	equ	0xFF8
  5412                           tblptrh	equ	0xFF7
  5413                           tblptrl	equ	0xFF6
  5414                           tablat	equ	0xFF5
  5415                           prodh	equ	0xFF4
  5416                           prodl	equ	0xFF3
  5417                           intcon	equ	0xFF2
  5418                           intcon2	equ	0xFF1
  5419                           postinc0	equ	0xFEE
  5420                           fsr0h	equ	0xFEA
  5421                           fsr0l	equ	0xFE9
  5422                           wreg	equ	0xFE8
  5423                           postinc1	equ	0xFE6
  5424                           postdec1	equ	0xFE5
  5425                           fsr1h	equ	0xFE2
  5426                           fsr1l	equ	0xFE1
  5427                           indf2	equ	0xFDF
  5428                           postinc2	equ	0xFDE
  5429                           postdec2	equ	0xFDD
  5430                           plusw2	equ	0xFDB
  5431                           fsr2h	equ	0xFDA
  5432                           fsr2l	equ	0xFD9
  5433                           status	equ	0xFD8
  5434                           
  5435                           	psect	temp
  5436  000050                     btemp:
  5437                           	opt stack 0
  5438  000050                     	ds	1
  5439  0000                     int$flags	set	btemp
  5440                           pclatu	equ	0xFFB
  5441                           pclath	equ	0xFFA
  5442                           tblptru	equ	0xFF8
  5443                           tblptrh	equ	0xFF7
  5444                           tblptrl	equ	0xFF6
  5445                           tablat	equ	0xFF5
  5446                           prodh	equ	0xFF4
  5447                           prodl	equ	0xFF3
  5448                           intcon	equ	0xFF2
  5449                           intcon2	equ	0xFF1
  5450                           postinc0	equ	0xFEE
  5451                           fsr0h	equ	0xFEA
  5452                           fsr0l	equ	0xFE9
  5453                           wreg	equ	0xFE8
  5454                           postinc1	equ	0xFE6
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           postinc2	equ	0xFDE
  5460                           postdec2	equ	0xFDD
  5461                           plusw2	equ	0xFDB
  5462                           fsr2h	equ	0xFDA
  5463                           fsr2l	equ	0xFD9
  5464                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    0
    Data        2
    BSS         531
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      79
    BANK0           160     29      31
    BANK1           256      0     250
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> ct(COMRAM[4]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_button_timer_interrupt
    i2___lwdiv->i2_CTMU_read
    i2_CTMU_read->i2___lldiv
    _button_timer_interrupt->i2___lwdiv
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->___lwdiv
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    ___lwdiv->_CTMU_read
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _CTMU_read->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8937
                          _CTMU_read
                           _Delay_ms
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lwdiv
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                            _tx_send
 ---------------------------------------------------------------------------------
 (1) _tx_send                                              1     1      0    1631
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put                                          7     4      3    1609
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2     902
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          8     6      2     573
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2242
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                           _OSC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     666
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1355
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     533
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     289
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     822
                                             22 BANK0      7     3      4
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1     779
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     533
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2     734
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      22
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     422
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      44
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CTMU_read                                            9     7      2     432
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     340
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0    2684
                                             34 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
                        i2_CTMU_read
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                             22 COMRAM     7     3      4
                        i2_CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_CTMU_read                                          9     7      2     306
                                             13 COMRAM     9     7      2
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (9) i2___lldiv                                           13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               5     2      3     992
                                             29 COMRAM     5     2      3
                        i2_CTMU_read (ARG)
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CTMU_read
     ___lldiv
   _Delay_ms
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   ___lwdiv
     _CTMU_read (ARG)
       ___lldiv
   _main_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _OSC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt
     i2_CTMU_read (ARG)
       i2___lldiv
     i2___lwdiv (ARG)
       i2_CTMU_read (ARG)
         i2___lldiv
   i2_CTMU_read
     i2___lldiv
   i2___lwdiv
     i2_CTMU_read (ARG)
       i2___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      FA       8       97.7%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      1F       5       19.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      4F       1       84.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     262       6        0.0%
DATA                 0      0     262       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 19:14:55 2015

             __size_of_I2C_Start 0030                               _d1 0035  
                             _ct 004C                               _ms 0031  
             i2___lwdiv@dividend 0017                     __CFG_CP0$OFF 000000  
                            l110 1C5C                              l105 1D32  
                            l302 1EEC                              l215 155C  
                            l311 1D80                              l362 1340  
                            l363 1342                              l364 134A  
                            l365 134C                              l366 1354  
                            l287 1DAC                              l367 1356  
                            l368 135E                              l722 166E  
                            l775 1AC8                              _ISR 0008  
                            u910 1DB8                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                   _I2C_LCD_Puts 1AD2                ??_I2C_LCD_Command 0064  
                           ?_ISR 0001                     _I2C_LCD_init 1B34  
                           l2002 14FE                             l2030 1528  
                           l2026 151E                             l2130 1B00  
                           l2136 1B1C                             l2058 157E  
                           l2138 1B2E                             l2402 1308  
                           l2180 1A84                             l2190 1ABA  
                           l2182 1A8A                             l2406 1338  
                           l2178 1A78                             l1814 1D4A  
                           l1920 1602                             l1736 1E8C  
                           l1930 165C                             l1922 1608  
                           l1826 1C5E                             l1780 120E  
                           l1918 15F2                             l1880 141E  
                           l1786 1DEA                             l1788 1DFC  
                           l1994 14E2                             l1996 14F8  
             __CFG_WPFP$PAGE_127 000000                             STR_1 0F0A  
                           STR_2 0F01                             u1210 15B6  
                           u1215 15A8                             u1747 1ED0  
                           u1757 1DF2                             u1767 1D86  
                           u1777 1B18                             u1787 1548  
                           u1797 1552                             _main 1284  
       button_timer_interrupt@bt 001E                             fsr0h 000FEA  
                           fsr1h 000FE2               i2___lwdiv@quotient 001B  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                 __end_of_I2C_Send 1EF4  
                           btemp 0050           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 1F1E                             pclat 000FFA  
               __end_of_I2C_init 1F06                             prodh 000FF4  
                           prodl 000FF3                             start 00CC  
                  __CFG_IESO$OFF 000000               __size_of_CTMU_init 0028  
             __size_of_CTMU_read 00C2                     ___param_bank 000010  
                  _I2C_LCD_Clear 1EC2            __end_ofi2_ringbuf_pop 189E  
          __end_ofi2_ringbuf_num 173C            __end_ofi2_ringbuf_put 17F2  
                          ??_ISR 0023           __size_of_I2C_IdleCheck 001E  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          ?_main 0001                            _ADRES 000FC3  
                __end_of___lldiv 1680                            _LATB2 007C52  
                          _LATB3 007C53                            _LATB6 007C56  
                          _LATB7 007C57                  __end_of___lwdiv 1AD2  
                          i2l215 18EC                            i2l250 0F3E  
                          i2l251 0F62                            i2l252 0F84  
                          i2l253 0FA6                            i2l254 0FC6  
                          i2l350 0090                            i2l255 0FE6  
                          i2l256 1006                            i2l185 1CFC  
                          i2l257 1026                            i2l186 1CFA  
                          i2l722 1A48                            i2l775 1C28  
                          _TMR1H 000FCF                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 1D1A  
             __size_of_UART_init 0020                 __end_of_OSC_init 1F14  
              __end_of_I2C_Start 1DBC                     ?i2_CTMU_read 000E  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8                  __end_of_tx_send 1EC2  
               __end_of_Delay_ms 1E14                      CTMU_read@ch 0070  
             __size_ofi2___lldiv 0082               __size_ofi2___lwdiv 0052  
                 ?_I2C_LCD_Clear 0001                  __initialization 1C82  
              i2___lldiv@divisor 0005                     __end_of_main 1362  
              i2___lldiv@counter 000D              ringbuf_init@bufsize 0064  
                         ??_main 007D                    __activetblptr 000001  
              __end_of_CTMU_init 1E68                __end_of_CTMU_read 15C4  
                         _BCL1IF 007D0B                    _I2C_IdleCheck 1E88  
              _I2C_LCD_SetCursor 1E14                           _ANCON0 000F48  
                         _ANCON1 000F49               I2C_LCD_Command@ans 0065  
                         i2l2100 10DA                           i2l2112 114C  
                         i2l2104 1100                           i2l2200 18BC  
                         i2l2108 1126                           i2l2116 1170  
                         i2l2240 1BFE                           i2l2250 1C1E  
                         i2l2242 1C02                           i2l2092 1092  
                         i2l2084 104A                           i2l2228 1904  
                         i2l2238 1BF6                           i2l2096 10B6  
                         i2l2088 106E                           i2l1802 16E2  
                         i2l2196 18B4                   __CFG_WDTEN$OFF 000000  
                         i2l2378 0054                           i2l1942 17DC  
                         i2l1952 1882                           i2l1960 189A  
                         i2l1954 1896                           i2l1970 19FA  
                         i2l1972 1A06                           i2l1982 1A3A  
                         i2l1974 1A0A               ?_I2C_LCD_SetCursor 0066  
                         _RCREG1 000FAF                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000              ??_I2C_LCD_SetCursor 0067  
                 __CFG_XINST$OFF 000000                     ?_ringbuf_pop 0068  
                   ?_ringbuf_num 0060                     ?_ringbuf_put 0068  
              __end_of_UART_init 1E88                        ??___lldiv 0068  
                   ?_timer0_init 0001                     ?_timer1_init 0060  
                      ??___lwdiv 007A                     ?_timer3_init 0001  
                         clear_0 1C88                           clear_1 1C94  
                         clear_2 1CA0                  __CFG_CLKOEC$OFF 000000  
                         _rx_buf 003C                           _tx_buf 0044  
                      ?_I2C_Send 0001                        ?_I2C_Stop 0001  
              __end_ofi2___lldiv 1A5A                __end_ofi2___lwdiv 1C32  
                   __mediumconst 0000                        ?_I2C_init 0001  
      __end_of_I2C_LCD_SetCursor 1E40                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                 ?_I2C_IdleCheck 0001                        ??_tx_send 006F  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 1CBE                     CTMU_read@sum 0071  
                  ___rparam_used 000001                  ??_I2C_LCD_Clear 0066  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
             i2___lldiv@dividend 0001                     __pidataBANK0 1F1E  
                      ?_UART_ISR 0001                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 1D54  
               I2C_LCD_Command@c 0064                       ??_I2C_Send 0062  
                     ??_I2C_Stop 0062                       ??_I2C_init 0060  
                      ?_Delay_ms 0060               i2___lldiv@quotient 0009  
             __size_of_main_init 0094                       __pbssBANK1 0100  
                     __pbssBANK2 0200             __size_ofi2_CTMU_read 00A6  
                     ??_UART_ISR 0010                       ??_OSC_init 0060  
           I2C_LCD_SetCursor@col 0069             I2C_LCD_SetCursor@row 0066  
                   I2C_Send@data 0062               __CFG_OSC$INTOSCPLL 000000  
                ??_I2C_IdleCheck 0060                       ??_Delay_ms 0062  
     __size_of_I2C_LCD_SetCursor 002C                     i2CTMU_read@i 0016  
         I2C_LCD_SetCursor@F8672 007D                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9             timer1_init@prescaler 0062  
               i2ringbuf_pop@ret 000F                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0021                        _I2C_Start 1D8C  
                        __Hparam 0000                          __Lparam 0000  
                     _ctmu_value 0038          __end_of_I2C_LCD_Command 1D8C  
                  ?_ringbuf_init 0060                          ___lldiv 15C4  
                        ___lwdiv 1A5A                     __psmallconst 0F00  
           __size_of_ringbuf_pop 00CC             __size_of_ringbuf_num 00EE  
           __size_of_ringbuf_put 00D4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 19D8                          __pcinit 1C82  
                        __ramtop 0F00             __size_of_timer0_init 003A  
           __size_of_timer1_init 0050                          __ptext0 1284  
                        __ptext1 1EA6                          __ptext2 1362  
                        __ptext3 1436                          __ptext4 1196  
                        __ptext5 1944                          __ptext6 1DBC  
                        __ptext7 1C32                          __ptext8 1D1A  
                        __ptext9 1B8C             __size_of_timer3_init 002C  
                  I2C_LCD_Puts@s 0064                        _T0CONbits 000FD5  
                   __size_of_ISR 00C4                        _T1CONbits 000FCD  
                      _T3CONbits 000F79                        _T5CONbits 000F22  
                        _tx_send 1EA6             end_of_initialization 1CBE  
         __size_ofi2_ringbuf_pop 00AC           __size_ofi2_ringbuf_num 00BC  
         __size_ofi2_ringbuf_put 00B6                        _CTMU_init 1E40  
                      _CTMU_read 1502                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                       ?_I2C_Start 0062  
                ___lldiv@divisor 0064             timer3_init@prescaler 0061  
                ___lldiv@counter 006C                   i2CTMU_read@sum 0012  
                 ??_ringbuf_init 0066                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                      _UART_init 1E68                 __CFG_DSBOREN$OFF 000000  
         i2ringbuf_put@asciicode 000B                 __CFG_CPUDIV$OSC1 000000  
              __size_of_I2C_Send 0018                __size_of_I2C_Stop 000A  
              __size_of_I2C_init 0012                i2___lwdiv@divisor 0019  
                      i2___lldiv 19D8                        i2___lwdiv 1BE0  
              i2___lwdiv@counter 001D                       ?_CTMU_init 0001  
                     ?_CTMU_read 006D  __size_of_button_timer_interrupt 0282  
        timer1_init@clock_select 0060                 __CFG_IOL1WAY$OFF 000000  
            __CFG_MSSP7B_EN$MSK7 000000                 ?_I2C_LCD_Command 0001  
                 ringbuf_init@rb 0060                   ringbuf_pop@ret 006E  
                  i2_ringbuf_pop 17F2                    i2_ringbuf_num 1680  
                  i2_ringbuf_put 173C                __size_of_UART_ISR 004A  
                     ?_UART_init 0001                __size_of_OSC_init 000E  
               __CFG_DSWDTEN$OFF 000000              start_initialization 1C82  
                     CTMU_read@i 0075                      __end_of_ISR 00CC  
                  ?_I2C_LCD_Puts 0064                    ?_I2C_LCD_init 0001  
                  UART_ISR@ascii 0010                __size_of_Delay_ms 002C  
                     ?i2___lldiv 0001                       ?i2___lwdiv 0017  
                    ??_I2C_Start 0063            __end_of_I2C_LCD_Clear 1EDC  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 007D           _button_timer_interrupt 0F14  
                    __pbssCOMRAM 0031                    __pcstackBANK0 0060  
                 ??_I2C_LCD_Puts 0066                   ??_I2C_LCD_init 0067  
           __end_of_ringbuf_init 1BE0                 tx_send@asciicode 006F  
                  ??i2_CTMU_read 0010                      ??_CTMU_init 0060  
                    ??_CTMU_read 006F                  millis_timer@cnt 003A  
               ___lwdiv@dividend 0076                        __pintcode 0008  
                       ?___lldiv 0060                         ?___lwdiv 0076  
                I2C_LCD_Puts@ans 0067                      ??_UART_init 0060  
                    __smallconst 0F00                        _main_init 1944  
                    I2C_Start@rw 0062                         _I2C_Send 1EDC  
                       _I2C_Stop 1F14             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_init 1EF4            __end_of_I2C_IdleCheck 1EA6  
               ___lwdiv@quotient 007A                         ?_tx_send 0001  
                    ??i2___lldiv 0009                      ??i2___lwdiv 001B  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __end_ofi2_CTMU_read 1944                         i2u136_40 10F0  
                       i2u137_40 1116                    i2CTMU_read@ch 0011  
                       i2u138_40 113C                         i2u139_40 1162  
                       i2u148_40 1936                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                         i2u148_45 192C  
                       i2u180_47 18D8                         i2u181_47 18E2  
                ??i2_ringbuf_put 000C                         i2u167_40 0088  
                       i2u168_40 008A                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                         _PIR5bits 000F98  
                  ??_ringbuf_pop 006A                    ??_ringbuf_num 0062  
                  ??_ringbuf_put 006B                         _UART_ISR 1CD0  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0060                    ??_timer1_init 0061  
                  ??_timer3_init 0060                         _SSP1STAT 000FC7  
                       _OSC_init 1F06                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                 __CFG_SOSCSEL$LOW 000000  
 button_timer_interrupt@sw_value 0020                       ?_main_init 0001  
                       _Delay_ms 1DE8                    ringbuf_pop@rb 0068  
                  ringbuf_num@rb 0060                    I2C_Start@adrs 0063  
                  ringbuf_put@rb 0068                      _INTCON2bits 000FF1  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0F00             __end_of_I2C_LCD_Puts 1B34  
           __end_of_I2C_LCD_init 1B8C                I2C_IdleCheck@mask 0061  
               __size_of___lldiv 00BC                 __size_of___lwdiv 0078  
            __end_of_ringbuf_pop 1502              __end_of_ringbuf_num 1284  
            __end_of_ringbuf_put 1436              __end_of_timer0_init 1D54  
          __size_of_ringbuf_init 0054              __end_of_timer1_init 1C82  
            __end_of_timer3_init 1DE8                  ___lwdiv@divisor 0078  
                ___lwdiv@counter 007C             timer0_init@prescaler 0061  
                       __ptext10 1E68                         __ptext11 1F06  
                       __ptext20 1AD2                         __ptext12 1EF4  
                       __ptext21 1F14                         __ptext13 1B34  
                       __ptext30 19D8                         __ptext22 1D8C  
                       __ptext14 1EC2                         __ptext31 0F14  
                       __ptext23 1EDC                         __ptext15 1DE8  
                       __ptext32 1CD0                         __ptext24 1E88  
                       __ptext16 1E40                         __ptext33 173C  
                       __ptext25 1502                         __ptext17 1A5A  
                       __ptext34 17F2                         __ptext26 15C4  
                       __ptext18 1E14                         __ptext35 1680  
                       __ptext19 1D54                         __ptext28 1BE0  
                       __ptext29 189E                     _SSP1CON2bits 000FC5  
               __size_of_tx_send 001C                      i2_CTMU_read 189E  
                  __size_of_main 00DE          ?_button_timer_interrupt 001E  
                       int$flags 0050                     _ringbuf_init 1B8C  
       __size_of_I2C_LCD_Command 0038                   main_init@rxbuf 0200  
                 main_init@txbuf 0100                      ??_main_init 0067  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 006A     I2C_LCD_SetCursor@row_offsets 0067  
                     Delay_ms@ms 0060                         intlevel2 0000  
               ___lldiv@dividend 0060                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 1196  
                    _ringbuf_pop 1436                      _ringbuf_num 1196  
                    _ringbuf_put 1362                      _timer0_init 1D1A  
                    _timer1_init 1C32                      _timer3_init 1DBC  
               ___lldiv@quotient 0068           __size_of_I2C_LCD_Clear 001A  
          __size_of_I2C_LCD_Puts 0062            __size_of_I2C_LCD_init 0058  
